<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>VendOpenTrans</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class VendOpenTrans extends FormRun implements SettlementWriteOffIFormInterface, ICustVendOpenTransManagerHost
{
    private const int PostMode = 0;
    private const int SaveMode = 1;

    CustVendOpenTransManager manager;
    TaxWithhold taxWithhold;

    container companies;

    Common originator;
    LedgerJournalType ledgerJournalType;
    LogisticsLocationRecId  postalAddressLocation;

    NoYes showError;
    ImageListAppl_CustVend imageList;

    boolean paymentGroupBeingModified;

    QueryBuildRange qbrPartyId;

    // <GIN>
    boolean checkStatus;
    // </GIN>

    // <GEERU>
    CustVendTransDetails custVendTransDetails;
    CustVendSettle_Vend custVendSettle;
    boolean countryRegion_RU;
    // </GEERU>

    DataAreaId currentCompany;

    // <GJP>
    boolean isConsEnabled;
    // </GJP>
    // <GIN>
    boolean countryRegion_IN;
    // </GIN>
    // <GIN><GEERU><GJP>
    #ISOCountryRegionCodes
    // </GJP></GEERU></GIN>

    // <GTH>
    boolean isTaxWithholdTransExtensionTHEnabled;
    // </GTH>

    // <GBR>
    boolean currentlyUnmarkingAll;
    // </GBR>

    private int formCloseMode;

    [FormObservable]
    CashDiscAmount cashDiscAmount;
    [FormObservable]
    AmountMST markedTotalMst;
    [FormObservable]
    AmountCur markedTotalCur;
    [FormObservable]
    AmountMST cashDiscTotalMst;
    [FormObservable]
    AmountCur cashDiscTotalCur;
    [FormObservable]
    AmountMST vendBalanceMst;
    [FormObservable]
    AmountCur journalTransAmountDisplayCur;
    [FormObservable]
    AmountMST journalTransAmountMst;
    [FormObservable]
    NoYes isPrimaryPaymentImageNeeded;

    FormObservableLink markedObservableLink;
    VendTrans vendTransOriginator;

    private SettlementWriteOffUIController settlementWriteOffUIController;

}
]]></Source>
			</Method>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    public void activate(boolean _active)
    {
        TaxWithholdParameters_IN taxWithholdParameter = TaxWithholdParameters_IN::find();

        super(_active);

        if ((taxWithholdParameter.tdsActivate || taxWithholdParameter.tcsActivate) && checkStatus && vendTransOpen.TaxWithholdStatus_IN == NoYes::Yes)
        {
            LedgerJournalTrans ledgerJournalTrans;
            if (originator.TableId == tableNum(LedgerJournalTrans))
            {
                ledgerJournalTrans = originator;
            }

            if (TaxWithholdSettleTrans_IN::findSumOfTaxmountFrmVoucher_IN(vendTrans.Voucher) && markTrans.checked())
            {
                TaxWithholdSettleTrans_IN taxWithholdSettleTrans;
                manager.updateSettleAmountPaymCur(vendTransOpen, TaxWithholdSettleTrans_IN::findSumOfTaxmountFrmVoucher_IN(vendTrans.Voucher));
                taxWithholdSettleTrans.updateLedgerVoucher(ledgerJournalTrans.Voucher, vendTrans.Voucher);
            }
            checkStatus =  false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean canClose = super();

        if (!settlementWriteOffUIController.parmIsSettlementWriteOffInProgress())
        {
            // Determine if user wants to close when marked total is not within over/under amount
            canClose = manager.validateMarkedTotalWithinOverUnder();
        }

        if (canClose)
        {
            canClose = manager.validateBankLCSettlement();

            // <GEERU>
            if (countryRegion_RU && originator.TableId == tableNum(LedgerJournalTrans))
            {
                if (!manager.validateSettlePostingDate(manager.parmSettlePostingType(), manager.parmSettlePostingDate()))
                {
                    vendTransOpen_ds.research();
                    vendTransOpen_ds.refresh();
                    return false;
                }
            }
            // </GEERU>
        }

        return canClose;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSettle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine if settlement can occur when marked total is not within over/under amount.
    /// </summary>
    /// <returns>true if settlement can occur; otherwise, false.</returns>
    protected boolean canSettle()
    {
        return manager.validateMarkedTotalWithinOverUnder() && manager.validateMarkedWithCrossRate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close(boolean _refreshCaller = true)
    {
        super();

        if (_refreshCaller)
        {
            this.refreshCaller();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCaller</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refresh calling form after performing the settlement operation.
    /// </summary>
    public void refreshCaller()
    {
        IFormRefreshable callingForm = element.args().caller() as IFormRefreshable;

        if (callingForm != null)
        {
            callingForm.callerRefresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCashDiscTotalCur</Name>
				<Source><![CDATA[
    public display AmountCur displayCashDiscTotalCur()
    {
        return cashDiscTotalCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCashDiscTotalMst</Name>
				<Source><![CDATA[
    public display AmountMST displayCashDiscTotalMst()
    {
        return cashDiscTotalMst;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayMarkedTotalCur</Name>
				<Source><![CDATA[
    public display AmountCur displayMarkedTotalCur()
    {
        return markedTotalCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayMarkedTotalMst</Name>
				<Source><![CDATA[
    public display AmountMST displayMarkedTotalMst()
    {
        return markedTotalMst;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayTransferredAmountCur</Name>
				<Source><![CDATA[
    public display AmountCur displayTransferredAmountCur()
    {
        return journalTransAmountDisplayCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayTransferredAmountMst</Name>
				<Source><![CDATA[
    public display AmountCur displayTransferredAmountMst()
    {
        return journalTransAmountMst;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayVendBalanceMst</Name>
				<Source><![CDATA[
    public display AmountMST displayVendBalanceMst()
    {
        return vendBalanceMst;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultVendorBlockedStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the default blocked status for the current vendor.
    /// </summary>
    /// <returns>The default <c>CustVendorBlocked</c> enumeration value for the current vendor.</returns>
    protected CustVendorBlocked getDefaultVendorBlockedStatus()
    {
        return (vendTable.Blocked == CustVendorBlocked::Never) ? CustVendorBlocked::No : vendTable.Blocked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isVendorBlockedForEdit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Evaluates the given <c>CustVendorBlocked</c> enumeration value to check if edit should be allowed.
    /// </summary>
    /// <param name = "_vendBlockedStatus">The current <c>CustVendorBlocked</c> enumeration value.</param>
    /// <param name = "_isVendReleaseDateExpired>Indicates whether or not the vendor release date has expired.</param>
    /// <returns>true if the vendor has a blocked status the should prevent edit operations; otherwise, false.</returns>
    protected boolean isVendorBlockedForEdit(CustVendorBlocked _vendBlockedStatus, boolean _isVendReleaseDateExpired)
    {
        return (_vendBlockedStatus != CustVendorBlocked::No
            && _vendBlockedStatus != CustVendorBlocked::Requisition
            && _vendBlockedStatus != CustVendorBlocked::PurchOrder
            && _vendBlockedStatus != CustVendorBlocked::Invoice
            && !_isVendReleaseDateExpired);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doesCallerAllowEdit</Name>
				<Source><![CDATA[
    public boolean doesCallerAllowEdit()
    {
        boolean allowEdit = true;
        boolean alwaysAllowEdit = false;
        boolean callerDataSourceAllowEdit;

        FormDataSource callerDataSource = FormDataUtil::getFormDataSource(element.args().record());

        if (callerDataSource)
        {
            callerDataSourceAllowEdit = callerDataSource.allowEdit();
        }

        switch (originator.TableId)
        {
            case tableNum(LedgerJournalTrans):
                LedgerJournalTrans ledgerJournalTrans = element.args().record();

                // Change to account company because this is where the payment terms exists
                changecompany(ledgerJournalTrans.Company)
                {
                    if (!ledgerJournalTrans.allowSettlement()
                        // <GBR>
                        || (BrazilParameters::isEnabled()
                            && ledgerJournalTrans.getPaymentExtension_BR().TaxWithholdEditStatus_BR == LedgerTransTaxWithholdEditStatus_BR::Closed)
                        // </GBR>
                        )
                    {
                        allowEdit = false;
                    }
                }
                break;

            case tableNum(PurchTable):
                PurchTable purchTable = element.args().record();

                if (PaymTerm::find(purchTable.Payment).CashLedgerDimension != 0)
                {
                    allowEdit = false;
                }
                else
                {
                    alwaysAllowEdit = true;
                }
                break;

            case tableNum(VendTable):
                // Coming from VendTable (Or the list pages since they all pass in
                // VendTable record with args) this we always be editable.
                alwaysAllowEdit = true;
                break;
        }

        if (!this.isVendorInvoiceReleasedForMarking(vendTrans))
        {
            allowEdit = false;
        }

        return alwaysAllowEdit || (allowEdit && callerDataSourceAllowEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doSettlement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs settlement on the marked transactions.
    /// </summary>
    protected void doSettlement()
    {
        manager.updateSpecTransWithSelectedDate();

        manager.settleMarkedTrans();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editDateTypeUsedToCalcDisc</Name>
				<Source><![CDATA[
    public edit CashDiscUsedToCalcDisc editDateTypeUsedToCalcDisc(boolean _set, CashDiscUsedToCalcDisc _discCalcDateType)
    {
        if (_set)
        {
            manager.updateDateTypeUsedToCalcDisc(_discCalcDateType);
            manager.parmDateTypeUsedToCalcDisc(_discCalcDateType);

            this.updateDesignDynamic();

            CustVendTransCashDisc applicableCustVendTransCashDisc =  manager.findApplicableCustVendTransCashDisc(vendTransOpen);
            vendTransCashDisc_ds.positionToRecordByValue(fieldNum(VendTransCashDisc, RecId), int642Str(applicableCustVendTransCashDisc.RecId));
        }

        return manager.parmDateTypeUsedToCalcDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editDateUsedToCalcDisc</Name>
				<Source><![CDATA[
    public edit TransDate editDateUsedToCalcDisc(boolean _set, TransDate _cashDiscCalcDate)
    {
        if (_set)
        {
            manager.updateDateUsedToCalcDisc(_cashDiscCalcDate);
            manager.parmDateUsedToCalcDisc(_cashDiscCalcDate);

            // Update dynamic controls & refresh form as auto-redraw is not triggered
            element.updateDesignDynamic();

            CustVendTransCashDisc applicableCustVendTransCashDisc =  manager.findApplicableCustVendTransCashDisc(vendTransOpen);
            vendTransCashDisc_ds.positionToRecordByValue(fieldNum(VendTransCashDisc, RecId), int642Str(applicableCustVendTransCashDisc.RecId));
        }

        return manager.parmDateUsedToCalcDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editSettlePostingDate</Name>
				<Source><![CDATA[
    public edit TransDate editSettlePostingDate(boolean _set, TransDate _settlePostingDate)
    {
        if (_set)
        {
            manager.parmSettlePostingDate(_settlePostingDate);
            // <GEERU>

            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
            {
                custVendSettle.datePrinciple(manager.parmSettlePostingType());
                custVendSettle.saveDate(manager.parmSettlePostingDate());
                xSysLastValue::saveLast(custVendSettle);
            }
            // </GEERU>
        }

        return manager.parmSettlePostingDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editSettlePostingType</Name>
				<Source><![CDATA[
    public edit SettleDatePrinc editSettlePostingType(boolean _set, SettleDatePrinc _settlePostingType)
    {
        if (_set)
        {
            manager.parmSettlePostingType(_settlePostingType);

            this.updateDesignDynamic();
            // <GEERU>

            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
            {
                custVendSettle.datePrinciple(manager.parmSettlePostingType());
                custVendSettle.saveDate(manager.parmSettlePostingDate());
                xSysLastValue::saveLast(custVendSettle);
            }
            // </GEERU>
        }

        return manager.parmSettlePostingType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterByPurchOrder_CZ</Name>
				<Source><![CDATA[
    #resource
    void filterByPurchOrder_CZ()
    {
        QueryBuildDataSource qbds;

        void clearRange()
        {
            qbds.clearRange(fieldNum(CustTransOpen, RecId));
            // PostR1AXLTODO
            // filterByPurchOrder_CZ.normalResource(1028)
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(CzCustVendAdvanceInvoices)))
        {
            qbds = vendTransOpen_ds.query().dataSourceTable(tableNum(VendTransOpen));

            if (qbds.findRange(fieldNum(VendTransOpen, RecId)))
            {
                clearRange();
            }
            else
            {
                str recIdStr = CzCustVendTransOpenFilter::filter(element, originator);
                if (recIdStr)
                {
                    findOrCreateRange_W(qbds, fieldNum(VendTransOpen, RecId), recIdStr);
                    // PostR1AXLTODO
                    // filterByPurchOrder_CZ.normalResource(1089)
                }
                else
                {
                    clearRange();
                }
            }

            vendTransOpen_ds.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransDate_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the transaction date that will be used for this settlement.
    /// </summary>
    /// <returns>
    /// Transaction date for this settlement.
    /// </returns>
    public TransDate getTransDate_BR()
    {
        TransDate transDate;

        if (originator.TableId == tableNum(LedgerJournalTrans))
        {
            LedgerJournalTrans ledgerJournalTrans = originator;
            transDate = ledgerJournalTrans.TransDate;
        }

        return transDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        #ISOCountryRegionCodes

        // <GIN>
        countryRegion_IN = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        // </GIN>
        // <GEERU>
        countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        // </GEERU>

        originator = element.args().record();

        if (originator.RecId == 0)
        {
            throw error(Error::missingParameter(this));
        }

        if (originator.TableId == tableNum(VendTrans))
        {
            vendTransOriginator = originator;
            originator = vendTable::find(vendTransOriginator.AccountNum);
        }

        super();

        // <GEERU>
        VendTrans_W_PrepaymentFactureId_W.visible(countryRegion_RU);
        // </GEERU>

        // <GTE><GIN>
        if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled() && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            displayTaxTransactionId_IN.visible(true);
        }
        // </GTE><GIN>

        LedgerJournalTrans ledgerJournalTrans;
        VendName vendName;
        switch (originator.TableId)
        {
            case tableNum(LedgerJournalTrans):
                ledgerJournalTrans = element.args().record();
                ledgerJournalType = ledgerJournalTrans.ledgerJournalTable().JournalType;

                if (ledgerJournalType == LedgerJournalType::Daily
                    || ledgerJournalType == LedgerJournalType::Payment
                    || ledgerJournalType == LedgerJournalType::VendPaymRemittance
                    || ledgerJournalType == LedgerJournalType::VendPromissoryNoteDraw
                    || ledgerJournalType == LedgerJournalType::VendPromissoryNoteRedraw
                    || ledgerJournalType == LedgerJournalType::VendPromissoryNoteSettle)
                {
                    this.updateDataSourcePromissoryNote(ledgerJournalTrans, ledgerJournalType);
                }

                if (ledgerJournalType == LedgerJournalType::VendPromissoryNoteDraw
                    && ledgerJournalTrans.BankPromissoryNoteNum != '')
                {
                    BankPromissoryNoteTable bankPromissoryNoteTable = BankPromissoryNoteTable::findBankPNDocStatus(
                        ledgerJournalTrans.BankAccountId,
                        ledgerJournalTrans.BankPromissoryNoteNum,
                        BankPromissoryNoteStatus::Printed,
                        true);

                    if (bankPromissoryNoteTable.PromissoryNoteNum)
                    {
                        bankPromissoryNoteTable.DocumentStatus = BankPromissoryNoteStatus::Posted;
                        bankPromissoryNoteTable.update();
                    }

                    ledgerJournalTrans.BankPromissoryNoteNum = '';
                    ledgerJournalTrans.PaymentStatus = CustVendPaymStatus::None;
                    ledgerJournalTrans.NoEdit = NoYes::No;
                    ledgerJournalTrans.update();
                }

                if (ledgerJournalType == LedgerJournalType::Daily
                    || ledgerJournalType == LedgerJournalType::Payment)
                {
                    if (BrazilParameters::isEnabled())
                    {
                        if (!ledgerJournalTrans.handleWriteTaxWithholdEditStatus_BR())
                        {
                            throw Exception::Error;
                        }
                    }

                    taxWithhold = new TaxWithhold(ledgerJournalTrans);
                }

                vendName = ledgerJournalTrans.accountName();
                element.setFormCaptionForVendor(vendName);

                break;

            case tableNum(VendTable):
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoGB, #isoIE, #isoSA]))
                {
                    taxWithhold = new TaxWithhold(ledgerJournalTrans);
                }

                VendTable vendor = originator;

                vendName = vendor.name();

                element.setFormCaptionForVendor(vendName);
                break;

            case tableNum(PurchTable):
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoGB, #isoIE, #isoSA]))
                {
                    taxWithhold = new TaxWithhold(ledgerJournalTrans);
                }

                PurchTable purchTable = originator;

                vendName = purchTable.vendTable_InvoiceAccount().name();
                element.setFormCaptionForVendor(vendName);

                // NOTE: These tables do not require any specific data source manipulation.
                // <GTH>
                if (isTaxWithholdTransExtensionTHEnabled)
                {
                    TaxWithholdTrans_ds.allowCreate(false);
                }
                // </GTH>
                break;

            default:
                Debug::assert(false);
                break;
        }

        showError = NoYes::Yes;
        imageList = new ImageListAppl_CustVend();

        isMarked.imageList(imageList.imageList());
        paymentSpec.imageList(imageList.imageList());

        // <GJP>
        isConsEnabled = VendConsInvoiceType_JP::isVendConsInvoiceEnabled();
        // </GJP>
        // <GEERU>
        this.setVisibleTransferLogFields_RU(ledgerJournalTrans.BankTransType);
        // </GEERU>

        // Update data source & design aspects that don't change for the lifespan of the form
        this.updateDataSourceStatic();
        this.updateDesignStatic();

        // Show/hide the payment groups
        boolean vendPaymentGroupingEnabled = VendParameters::find().VendPaymentGroupingEnable;

        vendTrans_VendPaymentGroup1.visible(vendPaymentGroupingEnabled && (originator.TableId == tableNum(LedgerJournalTrans) || originator.TableId == tableNum(VendTable) || originator.TableId == tableNum(PurchTable)));

        // Show/hide the select all button
        selectAllButton.visible(!vendPaymentGroupingEnabled);

        if (!element.doesCallerAllowEdit())
        {
            selectAllButton.enabled(false);
            clearAllButton.enabled(false);
        }

        //Hide remittance tab when originator table is other than LedgerJournalTrans,VendTable, PurchTable.
        remittanceTab.visible(originator.TableId == tableNum(LedgerJournalTrans)
            || originator.TableId == tableNum(VendTable)
            || originator.TableId == tableNum(PurchTable));

        vendTransOpen_CashDiscAccount.parmPostingType(LedgerPostingType::None);

        // <GIN>
        if (countryRegion_IN)
        {
            element.setTaxWithholdVisible_IN();
        }

        if (TaxParameters::isServiceTaxEnable_IN())
        {
            serviceTax_IN.visible(true);
        }
        // </GIN>

        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            FiscalEstablishmentId_BR.visible(true);
            VendTrans_EPPaymentType_BR.visible(true);
            VendTrans_EPPaymentWay_BR.visible(true);
        }
        // </GBR>

        manager = CustVendOpenTransManager::construct(originator);

        if (PublicSectorUtils::isFrenchRegulatoryEnabled())
        {
            vendTransOpen_DueDate1.enabled(false);
        }

        // <GTH>
        if (TaxThaiGovCertificationFeatureChecker::isTaxWithholdEnabled())
        {
            taxWithholdTrans_ds.object(fieldNum(TaxWithholdTrans, TaxWithholdItemGroupHeading_TH)).mandatory(true);
            taxWithholdTrans_TaxWithholdGroup.mandatory(true);
        }
        // </GTH>

        element.updateMarkedTotals();
        if (manager.findAnyPrimaryPayments())
        {
            isPrimaryPaymentImageNeeded = NoYes::Yes;
        }

        markedObservableLink = new FormObservableLink();
        markTrans.setFocus();

        if (element.args().lookupRecord() is VendTransOpen)
        {
            vendTransOpen_DS.setRecord(element.args().lookupRecord());
        }

        if (manager.findAnyBankLCNumber())
        {
            bankLCNumber.visible(true);
        }

        if(manager.findAnyBankLCShipmentLineNum())
        {
            bankLCShipmentLineNum.visible(true);
        }

        if (element.args() && element.args().caller() && element.args().caller().name() == formStr(SettlementView))
        {
            this.overrideCompanyRange(vendTransOpen_ds.query());

            qbrPartyId.value(queryValue(manager.getParty()));
        }

        this.initSettleWriteOff();

        TaxWithholdTrans_TaxWithholdExchRate.visible(TaxWithholdSetupWithholdingTaxCurrencyExchRateHelper::isEnabledWHTCurrencyExchRateParam());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFormCaptionForVendor</Name>
				<Source><![CDATA[
    private void setFormCaptionForVendor(VendName _vendName)
    {
        element.design().caption(strfmt("@CashManagement:SettleOpenTransFor", _vendName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCaller</Name>
				<Source><![CDATA[
    public void initFromCaller()
    {
        // Validate that calling record exists
        if (originator.RecId == 0)
        {
            switch (originator.TableId)
            {
                case tableNum(VendTable):
                    throw error("@SYS22904");

                case tableNum(PurchTable), tableNum(LedgerJournalTrans):
                    throw error(Error::missingRecord(this.name()));

                default:
                    Debug::assert(false);
                    break;
            }
        }

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            custVendSettle = custVendSettle::construct(SysModule::Vend);

            manager.parmSettlePostingType(custVendSettle.datePrinciple());
            if (manager.parmSettlePostingType() == SettleDatePrinc::SelectDate)
            {
                manager.parmSettlePostingDate(custVendSettle.saveDate());
            }
        }

        this.initSettleWriteOff();

        // </GEERU>
        // Update dynamic data source & design aspects based on changing data from the caller
        this.updateDataSourceDynamic();
        this.updateDesignDynamic();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSettleWriteOff</Name>
				<Source><![CDATA[
    private void initSettleWriteOff()
    {
        settlementWriteOffUIController = SettlementWriteOffUIControllerFactory::constructUIController(ModuleCustVend::Vend, originator);
        settlementWriteOffUIController.initSettleRemainderControl(SettleRemainder);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTaxBranchControls_TH</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inits the status of controls that for Thailand Multiple Tax branches feature.
    /// </summary>
    public void initTaxBranchControls_TH()
    {
        // For Thailand MTB controls based on sys fields, they are set as invisiable by default.
        // Needs to init their status here.
        displayTaxBranchDimension_TH.visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isQueryModificationRequired</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the form's query need to be modified.
    /// </summary>
    /// <returns>
    /// true if the form's query needs to be modified; otherwise, false
    /// </returns>
    /// <remarks>
    /// If the intercompany accounting configuration key is enabled and the journal is not a promissory note redraw
    /// or settled journal, the query needs to be modified.
    /// </remarks>
    protected boolean isQueryModificationRequired()
    {
        boolean isQueryModificationRequired;

        if (originator.TableId == tableNum(LedgerJournalTrans)
            && (ledgerJournalType == LedgerJournalType::VendPromissoryNoteRedraw
                || ledgerJournalType == LedgerJournalType::VendPromissoryNoteSettle))
        {
            isQueryModificationRequired = false;
        }
        else
        {
            isQueryModificationRequired = isConfigurationkeyEnabled(configurationKeyNum(LedgerAdvIntercompanyAccounting));
        }

        return isQueryModificationRequired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDataAreaId</Name>
				<Source><![CDATA[
    DataAreaId lastValueDataAreaId()
    {
        return curext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    private IdentifierName lastValueDesignName()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    private IdentifierName lastValueElementName()
    {
        return this.name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueType</Name>
				<Source><![CDATA[
    private UtilElementType lastValueType()
    {
        return UtilElementType::Form;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueUserId</Name>
				<Source><![CDATA[
    private UserId lastValueUserId()
    {
        return curUserId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// Unmarks all fetched open transactions.
    /// </summary>
    public void clearAll()
    {
        QueryRun queryRun = new QueryRun(VendTransOpen_DS.query());

        while (queryRun.next())
        {
            VendTransOpen vendTransOpenBuffer = queryRun.get(tablenum(VendTransOpen));

            if (this.canMark(false, vendTransOpenBuffer))
            {
                VendTransOpen_DS.editMarkTrans(true, vendTransOpenBuffer, false);
            }
        }

        // Raise a notification on the edit method associated with the MarkTrans checkbox control.
        markedObservableLink.markChanged();

        element.updateMarkedTotals();
    }

]]></Source>
			</Method>
			<Method>
				<Name>markAllSelected</Name>
				<Source><![CDATA[
    /// <summary>
    /// Marks all records that are selected in the grid.
    /// </summary>
    public void markAllSelected()
    {
        VendTransOpen vendTransOpenToMark = VendTransOpen_DS.getFirst(true);

        while (vendTransOpenToMark)
        {
            if (this.canMark(true, vendTransOpenToMark))
            {
                VendTransOpen_DS.editMarkTrans(true, vendTransOpenToMark, true);
            }

            vendTransOpenToMark = VendTransOpen_DS.getNext();
        }

        markedObservableLink.markChanged();
        element.updateMarkedTotals();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canMark</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean canMark(NoYes _mark, VendTransOpen _vendTransOpen)
    {
        boolean canMark;

        if (_mark == NoYes::Yes)
        {
            canMark = manager.getTransMarked(_vendTransOpen) == NoYes::No
                && manager.checkTransFullyMarkedByOtherSpec(_vendTransOpen) == NoYes::No
                && element.isVendorInvoiceReleasedForMarking(_vendTransOpen.vendTrans());
        }
        else
        {
            canMark = manager.getTransMarked(_vendTransOpen) == NoYes::Yes;
        }

        return canMark;
    }

]]></Source>
			</Method>
			<Method>
				<Name>overrideCompanyRange</Name>
				<Source><![CDATA[
    private void overrideCompanyRange(Query _query)
    {
        if (_query && manager)
        {
            // Clear company range
            _query.clearCompanyRange();

            // Get current shared service companies
            companies = manager.getSharedServiceCompaniesByParty();

            for (Counter i = 1; i <= conLen(companies); i++)
            {
                _query.addCompanyRange(conPeek(companies, i));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostalAddressLocation</Name>
				<Source><![CDATA[
    public LogisticsLocationRecId parmPostalAddressLocation(LogisticsLocationRecId _postalAddressLocation = vendTrans.RemittanceLocation)
    {
        if (!prmisDefault(_postalAddressLocation))
        {
            postalAddressLocation = _postalAddressLocation;
        }

        return postalAddressLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInfoBar</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the info bar visiblitiy.
    /// </summary>
    /// <param name="_refRecId">
    /// The RecId of the table for which payment hold needs to be checked.
    /// </param>
    /// <param name="_tableId">
    /// The TableId of the table for which payment hold needs to be checked.
    /// </param>
    public void setInfoBar(RefRecId _refRecId, TableId _tableId)
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            if (VendInvoiceHoldHistory::isPlaceInHold(_refRecId, _tableId))
            {
                warning("@SPS2499");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdVisible_IN</Name>
				<Source><![CDATA[
    void setTaxWithholdVisible_IN()
    {
        TaxWithholdParameters_IN taxWithholdParameters = TaxWithholdParameters_IN::find();
        vendTransOpen_ds.object(fieldNum(VendTransOpen, tdsAmount_IN)).visible(taxWithholdParameters.tdsActivate);
        vendTransOpen_ds.object(fieldNum(VendTransOpen, tcsAmount_IN)).visible(taxWithholdParameters.tcsActivate);
        vendTransOpen_ds.object(fieldNum(VendTransOpen, TaxWithholdAmountOrigin_IN)).visible(taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate);
        vendTransReferenceVoucher_IN.visible(taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleTransferLogFields_RU</Name>
				<Source><![CDATA[
    void setVisibleTransferLogFields_RU(BankTransactionType _bankTransactionType)
    {
        if (countryRegion_RU)
        {
            if ((element.args() && element.args().menuItemName() == menuitemDisplayStr(VendOpenTransBank_RU))
                || (_bankTransactionType && BankTransType::find(_bankTransactionType).BankAdvancedTransType_RU != BankAdvancedTransType_RU::None))
            {
                bankSpecAccountId_RU.visible(true);
                bankEntryAccountID_RU.visible(true);

                vendTrans_DS.updateQuery_RU(true);
            }
            else
            {
                vendTrans_DS.updateQuery_RU(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDataSourceDynamic</Name>
				<Source><![CDATA[
    public void updateDataSourceDynamic()
    {
        if (this.isQueryModificationRequired())
        {
            this.overrideCompanyRange(vendTransOpen_ds.query());
        }

        // Set the PartyId range to the current vendor's PartyId
        Debug::assert(qbrPartyId != null);
        qbrPartyId.value(queryValue(manager.getParty()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDataSourcePromissoryNote</Name>
				<Source><![CDATA[
    public void updateDataSourcePromissoryNote(LedgerJournalTrans _ledgerJournalTrans, LedgerJournalType _ledgerJournalType)
    {
        #Define.promissoryNoteDSNum(2)

        FormDataSource formDataSource = this.dataSource(#promissoryNoteDSNum);

        if (_ledgerJournalType == LedgerJournalType::VendPromissoryNoteDraw
            || _ledgerJournalType == LedgerJournalType::VendPromissoryNoteRedraw
            || _ledgerJournalType == LedgerJournalType::VendPaymRemittance
            || _ledgerJournalType == LedgerJournalType::VendPromissoryNoteSettle)
        {
            QueryBuildRange qbrStatus = formDataSource.query().dataSourceTable(tableNum(VendTrans)).addRange(fieldNum(VendTrans, PromissoryNoteStatus));

            switch (_ledgerJournalType)
            {
                case LedgerJournalType::VendPromissoryNoteDraw:
                    qbrStatus.value(queryValue(CustVendNegInstStatus::None) + ',' + queryValue(CustVendNegInstStatus::Invoiced));
                    break;

                case LedgerJournalType::VendPaymRemittance:
                    qbrStatus.value(
                        queryValue(CustVendNegInstStatus::None) + ',' +
                        queryValue(CustVendNegInstStatus::Drawn) + ',' +
                        queryValue(CustVendNegInstStatus::Redrawn) + ',' +
                        queryValue(CustVendNegInstStatus::Invoiced));
                    break;

                case LedgerJournalType::VendPromissoryNoteSettle:
                    if (_ledgerJournalTrans.BankAccountId)
                    {
                        qbrStatus.value(queryValue(CustVendNegInstStatus::Remitted) + ',' + queryValue(CustVendNegInstStatus::InvoiceRemitted));
                        formDataSource.query().dataSourceTable(tableNum(VendTrans)).addRange(fieldNum(VendTrans, CompanyBankAccountId)).value(queryValue(_ledgerJournalTrans.BankAccountId));
                    }
                    else
                    {
                        qbrStatus.value(
                            queryValue(CustVendNegInstStatus::Drawn) + ',' +
                            queryValue(CustVendNegInstStatus::Redrawn) + ',' +
                            queryValue(CustVendNegInstStatus::Remitted) + ',' +
                            queryValue(CustVendNegInstStatus::InvoiceRemitted));
                    }
                    break;

                case LedgerJournalType::VendPromissoryNoteRedraw:
                    throw error(Error::wrongUseOfFunction(this.name())); // Redraw of promissory notes cannot be used with open transactions

                default:
            }
        }
        else
        {
            formDataSource.query().dataSourceTable(tableNum(VendTrans)).addRange(fieldNum(VendTrans, PromissoryNoteStatus)).value(strFmt(
                '%1,%2',
                queryValue(CustVendNegInstStatus::None),
                queryValue(CustVendNegInstStatus::Invoiced)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDataSourceStatic</Name>
				<Source><![CDATA[
    public void updateDataSourceStatic()
    {
        Query query = vendTransOpen_ds.query();

        // Clear dynalinks for the VendTransOpen data source so that the caller's dataAreaId doesn't restrict the query
        QueryBuildDataSource qbdsVendTransOpen = query.dataSourceTable(tableNum(VendTransOpen));
        qbdsVendTransOpen.clearDynalinks();

        // Add VendTable data source with Party range off VendTrans data source
        QueryBuildDataSource qbdsVendTrans = query.dataSourceTable(tableNum(VendTrans));

        QueryBuildDataSource qbdsVendTable = qbdsVendTrans.addDataSource(tableNum(VendTable));
        if (CustVendOpenTransFormPerfImproveFlight::instance().isEnabled())
        {
            qbdsVendTable.relations(false);
            qbdsVendTable.addLink(fieldNum(VendTransOpen, AccountNum), fieldNum(VendTable, AccountNum), qbdsVendTransOpen.name());
        }
        else
        {
            qbdsVendTable.relations(true);
        }

        qbdsVendTable.joinMode(JoinMode::InnerJoin);

        // This needs to be set as it could be the second data source joined to the VendTrans.
        // This will force it to be treated as an inner join if it is the second joined data source.
        qbdsVendTable.fetchMode(0);

        // Minimize data returned from the query by specifying selection fields for only the required columns
        qbdsVendTable.addSelectionField(fieldNum(VendTable, Party));

        qbrPartyId = qbdsVendTable.addRange(fieldNum(VendTable, Party));

        // SpecTransMarked is only used for filtering marked records
        this.setSpecTransDS(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignConsInvoice_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the design for the consolidation invoice related controls.
    /// </summary>
    public void updateDesignConsInvoice_JP()
    {
        vendConsInvoiceSettle_JP.visible(isConsEnabled);
        ConsId.visible(isConsEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignDynamic</Name>
				<Source><![CDATA[
    public void updateDesignDynamic()
    {
        LedgerJournalTrans ledgerJournalTrans;

        if (originator.TableId == tableNum(LedgerJournalTrans))
        {
            ledgerJournalTrans = originator;
        }

        this.updateDesignDynamicTabularFieldLabels();

        // Settlement posting date control
        if (settlePostingDate.visible() && manager.parmSettlePostingType() == SettleDatePrinc::SelectDate)
        {
            settlePostingDate.enabled(true);
        }
        else
        {
            settlePostingDate.enabled(false);
        }

        // Date to use for calculating discount control
        if (dateUsedToCalcDisc.visible())
        {
            if (SpecTrans::existMarkedPayment(originator.company(), originator.TableId, originator.RecId))
            {
                // Disable when primary payment is selected
                dateUsedToCalcDisc.enabled(false);
                dateTypeUsedToCalcDisc.enabled(false);
            }
            else if (manager.parmDateTypeUsedToCalcDisc() == CashDiscUsedToCalcDisc::SelectedDate)
            {
                dateUsedToCalcDisc.enabled(true);
                dateTypeUsedToCalcDisc.enabled(true);
            }
            else if (manager.parmDateTypeUsedToCalcDisc() == CashDiscUsedToCalcDisc::TransactionDate)
            {
                dateUsedToCalcDisc.enabled(false);
                dateTypeUsedToCalcDisc.enabled(true);
            }
        }
        else
        {
            dateUsedToCalcDisc.enabled(false);
            dateTypeUsedToCalcDisc.enabled(false);
        }

        // Cross rate control - Overview grid
        if (settleExchRate.visible()
            && originator.TableId == tableNum(LedgerJournalTrans)
            || (originator.TableId != tableNum(LedgerJournalTrans)
                && SpecTrans::existMarkedPayment(originator.company(), originator.TableId, originator.RecId)))
        {
            settleExchRate.enabled(true);
        }
        else
        {
            settleExchRate.enabled(false);
        }

        // Transaction reorganization button
        if (manager.canReorganizeTrans(vendTrans))
        {
            custVendTransReorgButton.enabled(true);
        }
        else
        {
            custVendTransReorgButton.enabled(false);
        }

        // Enable or disable based on transaction being marked
        if (manager.getTransMarked(vendTransOpen) == NoYes::Yes)
        {
            settleField.allowEdit(true);
            settlePaymCur.allowEdit(true);

            if (this.isCrossRateAllowEdit(ledgerJournalTrans))
            {
                settleExchRate.allowEdit(true);
            }
            else
            {
                settleExchRate.allowEdit(false);
            }

            remittanceTab.enabled(false);
        }
        else
        {
            settleField.allowEdit(false);
            settlePaymCur.allowEdit(false);
            settleExchRate.allowEdit(false);
            remittanceTab.enabled(true);
        }

        this.updateDesignDynamicCashDiscount();

        if (vendTrans.RecId != 0)
        {
            // Editing of CompanyBankAccountId field of vendTrans data source
            if (CFMParameters::isPaymentRequestsEnabled())
            {
                boolean allowEditVendTransPaymMode = true;
                boolean allowEditVendTransPaymSpec = true;
                boolean allowEditVendTransOpenThirdPartyBankAccountId = true;
                boolean allowEditVendTransOpenDueDate = true;
                boolean allowEditCFMPaymentRequestFields;
                boolean allowEditVendTransCompanyBankAccountId = vendTrans.allowEditCompanyBankAccountId();
                boolean allowEditVendTransThirdPartyBankAccountId = vendTrans.allowEditThirdPartyBankAccountId();

                allowEditCFMPaymentRequestFields = !CFMPaymentRequestTable::existByHeader(CFMPaymentRequestSourceType::VendInvoice, vendTrans.RecId);

                allowEditVendTransCompanyBankAccountId = allowEditVendTransCompanyBankAccountId && allowEditCFMPaymentRequestFields;
                allowEditVendTransThirdPartyBankAccountId = allowEditVendTransThirdPartyBankAccountId && allowEditCFMPaymentRequestFields;
                allowEditVendTransPaymMode = allowEditVendTransPaymMode && allowEditCFMPaymentRequestFields;
                allowEditVendTransPaymSpec = allowEditVendTransPaymSpec && allowEditCFMPaymentRequestFields;

                allowEditVendTransOpenThirdPartyBankAccountId = allowEditVendTransOpenThirdPartyBankAccountId && allowEditCFMPaymentRequestFields;
                allowEditVendTransOpenDueDate = allowEditVendTransOpenDueDate && allowEditCFMPaymentRequestFields;

                vendTrans_ds.object(fieldNum(VendTrans, CompanyBankAccountId)).allowEdit(allowEditVendTransCompanyBankAccountId);
                vendTrans_ds.object(fieldNum(VendTrans, ThirdPartyBankAccountId)).allowEdit(allowEditVendTransThirdPartyBankAccountId);
                vendTrans_ds.object(fieldNum(VendTrans, PaymMode)).allowEdit(allowEditVendTransPaymMode);
                vendTrans_ds.object(fieldNum(VendTrans, PaymSpec)).allowEdit(allowEditVendTransPaymSpec);

                vendTransOpen_ds.object(fieldNum(VendTransOpen, ThirdPartyBankAccountId)).allowEdit(allowEditVendTransOpenThirdPartyBankAccountId);
                vendTransOpen_ds.object(fieldNum(VendTransOpen, DueDate)).allowEdit(allowEditVendTransOpenDueDate);
            }
            else
            {
                if (vendTrans.allowEditCompanyBankAccountId())
                {
                    vendTrans_ds.object(fieldNum(VendTrans, CompanyBankAccountId)).allowEdit(true);
                }
                else
                {
                    vendTrans_ds.object(fieldNum(VendTrans, CompanyBankAccountId)).allowEdit(false);
                }
                // Editing of ThirdPartyBankAccountId field of vendTrans data source
                if (vendTrans.allowEditThirdPartyBankAccountId())
                {
                    vendTrans_ds.object(fieldNum(VendTrans, ThirdPartyBankAccountId)).allowEdit(true);
                }
                else
                {
                    vendTrans_ds.object(fieldNum(VendTrans, ThirdPartyBankAccountId)).allowEdit(false);
                }
            }
        }

        if (originator.TableId == tableNum(LedgerJournalTrans))
        {
            if (ledgerJournalTrans.TaxWithholdGroup != ''
                && vendTrans.Invoice != ''
                && manager.getTransMarked(vendTransOpen) == NoYes::Yes)
            {
                // Allow creates, edits, and deletions on the tax withhold trans datasource
                taxWithholdTrans_ds.allowCreate(true);
                taxWithholdTrans_ds.allowEdit(true);
                taxWithholdTrans_ds.allowDelete(true);
            }
            else
            {
                // Disallow creates, edits, and deletions on the tax withhold trans datasource
                taxWithholdTrans_ds.allowCreate(false);
                taxWithholdTrans_ds.allowEdit(false);
                taxWithholdTrans_ds.allowDelete(false);
            }
        }

        // Editing of cash discount amount to take, is only editable when line is marked and date to use for calculating
        // discount is selected date and use cash discount always or
        // when use cash discount is normal and partial discounts are allowed
        if ((manager.getTransMarked(vendTransOpen) == NoYes::Yes)
            && (manager.parmDateTypeUsedToCalcDisc() == CashDiscUsedToCalcDisc::SelectedDate)
            && ((vendTransOpen.UseCashDisc == UseCashDisc::Always)
                || (vendTransOpen.UseCashDisc == UseCashDisc::Normal
                    && VendParameters::find().CashDiscForPartialPaym)))
        {
            // Enable Disc to take fields
            cashDiscToTake.allowEdit(true);

            if (cashDiscToTakePaymCur.visible())
            {
                cashDiscToTakePaymCur.allowEdit(true);
            }
        }
        else
        {
            cashDiscToTake.allowEdit(false);

            if (cashDiscToTakePaymCur.visible())
            {
                cashDiscToTakePaymCur.allowEdit(false);
            }
        }

        if (BrazilParameters::isEnabled())
        {
            // Enable or disabled based on transaction being marked
            if (manager.getTransMarked(vendTransOpen) == NoYes::Yes)
            {
                vendTransOpen_ds.enableDisableInterestAndFine_BR(vendTransOpen, true);
            }
            else
            {
                vendTransOpen_ds.enableDisableInterestAndFine_BR(vendTransOpen, false);
            }
        }

        if (manager.getSpecTransCount() > 1)
        {
            updateNow.enabled(true);
        }
        else
        {
            updateNow.enabled(false);
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            psaPwpInvoiceInquiry.visible(vendTransOpen.checkPwpEnabled(vendTransOpen));
        }

        vatTaxAgent_RU.visible(vendTrans.isVATTaxAgentPaymentFromVendorFunds_RU());

        settlementWriteOffUIController.updateSettleRemainderControl(SettleRemainder, manager);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldEnableCrossRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the cross rate need to be enable.
    /// </summary>
    /// <returns>
    /// true if the cross rate need to be enable; otherwise, false
    /// </returns>
    /// <remarks>
    /// If the currency code for invoice and payment code should be different, the cross rate for invoice is enable.
    /// </remarks>
    [SysObsolete('Method shouldEnableCrossRate is not used anymore.', false, 09\08\2021)]
    protected boolean shouldEnableCrossRate()
    {
        boolean shouldEnableCrossRate;
        LedgerJournalTrans ledgerJournalTrans;

        if (originator.TableId == tableNum(LedgerJournalTrans)
            && VendTrans.CurrencyCode != ledgerJournalTrans.CurrencyCode)
        {
            shouldEnableCrossRate = true;
        }
        else
        {
            SpecTrans refSpecTrans = SpecTrans::findByRef(vendTransOpen.DataAreaId, vendTransOpen.TableId, vendTransOpen.RecId);
            if (originator.TableId != tableNum(LedgerJournalTrans)
                && refSpecTrans.Payment == NoYes::No)
            {
                CurrencyCode accountingCurrencyCode = Ledger::accountingCurrency();
                CurrencyCode markedPaymentCurrencyCode = SpecTrans::getMarkedPaymentCurrency(originator.company(), originator.TableId, originator.RecId);
                CurrencyCode currentCurrencyCode = vendTrans.CurrencyCode;
   
                if (accountingCurrencyCode != markedPaymentCurrencyCode
                    && markedPaymentCurrencyCode != currentCurrencyCode
                    && currentCurrencyCode != accountingCurrencyCode)
                {
                    shouldEnableCrossRate = true;
                }
            }
        }
        return shouldEnableCrossRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCrossRateAllowEdit</Name>
				<Source><![CDATA[
    private boolean isCrossRateAllowEdit(LedgerJournalTrans _ledgerJournalTrans)
    {
        boolean shouldEnableCrossRate = false;
        boolean shouldEnableCrossRateForAccountingCurrencyPayment = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL, #isoMX]);
        boolean custVendSettleEnableCrossRateFlightEnabled = CustVendSettleEnableCrossRateFlight::instance().isEnabled();
        CurrencyCode accountingCurrencyCode = Ledger::accountingCurrency();

        if (_ledgerJournalTrans
            && originator.TableId == tableNum(LedgerJournalTrans)
            && VendTrans.CurrencyCode != _ledgerJournalTrans.CurrencyCode)
        {
            if (custVendSettleEnableCrossRateFlightEnabled
                || (VendTrans.CurrencyCode != accountingCurrencyCode
                    && (_ledgerJournalTrans.CurrencyCode != accountingCurrencyCode
                        || shouldEnableCrossRateForAccountingCurrencyPayment)))
            {
                shouldEnableCrossRate = true;
            }
        }
        else
        {
            SpecTrans refSpecTrans = SpecTrans::findByRef(vendTransOpen.DataAreaId, vendTransOpen.TableId, vendTransOpen.RecId);
            if (originator.TableId != tableNum(LedgerJournalTrans)
                && refSpecTrans.Payment == NoYes::No)
            {
                CurrencyCode markedPaymentCurrencyCode = SpecTrans::getMarkedPaymentCurrency(originator.company(), originator.TableId, originator.RecId);
                CurrencyCode currentCurrencyCode = vendTrans.CurrencyCode;
   
                if ((accountingCurrencyCode != markedPaymentCurrencyCode
                        || shouldEnableCrossRateForAccountingCurrencyPayment)
                    && markedPaymentCurrencyCode != currentCurrencyCode
                    && currentCurrencyCode != accountingCurrencyCode)
                {
                    shouldEnableCrossRate = true;
                }
            }
        }

        return shouldEnableCrossRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSetMarkTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Can the current transaction be marked for settlement.
    /// </summary>
    /// <param name = "_vendTransOpen">The current <c>VendTransOpen</c> record.</param>
    /// <param name = "_markTrans">Identifies if the item is being marked or unmarked.</param>
    /// <returns>true if the record can be marked; otherwise false.</returns>
    protected boolean canSetMarkTrans(VendTransOpen _vendTransOpen, NoYes _markTrans)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignDynamicCashDiscount</Name>
				<Source><![CDATA[
    private void updateDesignDynamicCashDiscount()
    {
        if (vendTransOpen.RecId != 0)
        {
            NoYes cashDiscOnInvoice;
            // Enable editing of the cash discount data source if there is an open record
            vendTransCashDisc_ds.allowEdit(true);

            // TaxParameters need to come from the company of the current open transaction
            changecompany(vendTransOpen.company())
            {
                cashDiscOnInvoice = TaxParameters::find().CashDiscOnInvoice;
            }

            if (cashDiscOnInvoice)
            {
                // Disable Cash discount group on Overview tab
                cashDiscountTotals.enabled(false);

                // Disable Cash discount tab
                cashDiscTab.enabled(false);

                // Restrict editing of the Use cash disc field
                vendTransOpen_UseCashDisc.allowEdit(false);
            }
            else
            {
                // Enable Cash discount group on Overview tab
                cashDiscountTotals.enabled(true);

                // Enable Cash discount tab
                cashDiscTab.enabled(true);

                // Allow editing of Use cash disc field
                vendTransOpen_UseCashDisc.allowEdit(true);
            }

            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            {
                if (vendTransOpen.allowEditThirdPartyBankAccountId())
                {
                    vendTransOpen_ds.object(fieldNum(VendTransOpen, ThirdPartyBankAccountId)).allowEdit(true);
                }
                else
                {
                    vendTransOpen_ds.object(fieldNum(VendTransOpen, ThirdPartyBankAccountId)).allowEdit(false);
                }
            }
        }
        else
        {
            // There is no open transaction record, disable the cash discount data source editing
            vendTransCashDisc_ds.allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignDynamicTabularFieldLabels</Name>
				<Source><![CDATA[
    private void updateDesignDynamicTabularFieldLabels()
    {
        CurrencyCode transactionCurrency = manager.getCustVendTransOpenCurrency(vendTransOpen);
        CurrencyCode accountingCurrency = Ledger::accountingCurrency();
        str transactionCurrencyText = strFmt("@CashManagement:TransactionCurrency", transactionCurrency);
        str accountingCurrencyText = strFmt("@CashManagement:AccountingCurrency", accountingCurrency);

        cashDiscTransCurLabel.text(transactionCurrencyText);
        balanceMstLabel.text(accountingCurrencyText);

        if (originator.TableId == tableNum(LedgerJournalTrans))
        {
            CurrencyCode paymentCurrency = manager.getDisplayCurrency();
            str paymentCurrencyText = strFmt("@CashManagement:PaymentCurrency", paymentCurrency);
            str settlePaymCurLabel = strFmt("@SYS114017", paymentCurrency);

            cashDiscCurLabel.text(paymentCurrencyText);
            balanceCurLabel.text(paymentCurrencyText);
            settlePaymCur.label(settlePaymCurLabel);
        }
        else
        {
            CurrencyCode vendorCurrency = manager.getDisplayCurrency();
            str vendorCurrencyText = strFmt("@CashManagement:VendorCurrency", vendorCurrency);

            balanceCurLabel.text(vendorCurrencyText);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignStatic</Name>
				<Source><![CDATA[
    public void updateDesignStatic()
    {
        boolean taxWithholdCISEnabled = TaxWithholdingGlobalFeature::isExtendedWHTSupportedInCountryRegionOrParamEnabled();

        switch (originator.TableId)
        {
            case tableNum(LedgerJournalTrans):
                // Show Transferred balances controls
                showtransferredAmount.visible(true);
                showTransferredAmountCur.visible(true);
                TransferredAmountLabel.visible(true);

                // Hide Settlement posting date group
                // <GEERU>
                settlePostingTypeDate.visible(countryRegion_RU);
                // </GEERU>

                //Hide Date to use to calc discount group
                dateUsedToCalcDiscGroup.visible(false);

                // Hide Payment marked control
                paymentSpec.visible(false);

                // Show Cross rate control
                settleExchRate.visible(true);

                // Show Amount to settle in CUR control
                settlePaymCur.visible(true);

                // Show Discount amount in CUR control
                cashDiscPaymCur.visible(true);

                // Show Alternate cash discount account control
                VendTransOpen_CashDiscAccount.visible(true);

                queryButton.visible(true);

                // Hide Mark payment button
                markPayment.visible(false);

                this.setCloseMode(SaveMode);

                // Show or hide fields based on journal type
                if (ledgerJournalType == LedgerJournalType::VendPromissoryNoteRedraw)
                {
                    // Show Promissory note group
                    promissoryNoteGroup.visible(true);

                    // Hide Transaction reorganization button
                    custVendTransReorgButton.visible(false);
                }
                else
                {
                    // Hide Promissory note group
                    promissoryNoteGroup.visible(false);

                    // Show Transaction reorganization button
                    custVendTransReorgButton.visible(true);
                }

                if (ledgerJournalType == LedgerJournalType::Daily
                    || ledgerJournalType == LedgerJournalType::Payment)
                {
                    // Show Full settlement control
                    fullSettlement.visible(true);

                    // Show Tax withhold tab
                    taxWithholdTab.visible(true);
                }
                else
                {
                    // Hide Full settlement control
                    fullSettlement.visible(false);

                    // Show/Hide Tax withhold tab based on Country context (visible for  GB, IE, TH and SA)
                    taxWithholdTab.visible(taxWithholdCISEnabled);
                }

                // Disable editing if Country context GB, IE, TH and SA
                if (taxWithholdCISEnabled)
                {
                    element.updateWHTControls();
                }

                break;

            case tableNum(VendTable):
                // Hide Transferred balances controls
                showtransferredAmount.visible(false);
                showTransferredAmountCur.visible(false);
                TransferredAmountLabel.visible(false);

                // Show Settlement posting date group
                settlePostingTypeDate.visible(true);

                //Show Date to use to calc discount group
                dateUsedToCalcDiscGroup.visible(true);

                // Hide Full settlement control
                // . . . has been deactivated because the remaining amount is not calculated correctly
                //fullSettlement.visible(false);

                // Show Payment marked control
                paymentSpec.visible(true);

                // Hide PN group
                promissoryNoteGroup.visible(false);

                // Show Cross rate control
                settleExchRate.visible(true);

                // Hide Amount to settle in CUR control
                settlePaymCur.visible(false);

                // Hide Discount amount in CUR control
                cashDiscPaymCur.visible(false);

                // Show Alternate cash discount account control
                VendTransOpen_CashDiscAccount.visible(true);

                // Show Transaction reorganization button
                custVendTransReorgButton.visible(true);

                queryButton.visible(true);

                // Show Mark payment button
                markPayment.visible(true);

                this.setCloseMode(PostMode);

                // Show/Hide Tax withhold tab based on Country context (visible for  GB, IE, TH and SA)
                taxWithholdTab.visible(taxWithholdCISEnabled);

                // Disable editing if Country context GB, IE, TH and SA
                if (taxWithholdCISEnabled)
                {
                    element.updateWHTControls();
                }

                break;

            case tableNum(PurchTable):
                // Hide Transferred balances controls
                showtransferredAmount.visible(false);
                showTransferredAmountCur.visible(false);
                TransferredAmountLabel.visible(false);

                // Hide Settlement posting date group
                settlePostingTypeDate.visible(false);

                // Show Date to use for cash discount group
                dateUsedToCalcDiscGroup.visible(true);

                // Hide Payment marked control
                paymentSpec.visible(false);

                // Hide Full settlement control
                fullSettlement.visible(false);

                // Hide PN group
                promissoryNoteGroup.visible(false);

                // Hide Cross rate control
                settleExchRate.visible(false);

                // Hide Amount to settle in CUR control
                settlePaymCur.visible(false);

                // Hide Discount amount in CUR control
                cashDiscPaymCur.visible(false);

                // Hide Alternate cash discount account control
                VendTransOpen_CashDiscAccount.visible(false);

                // Hide Transaction reorganization button
                custVendTransReorgButton.visible(false);

                queryButton.visible(true);

                // Hide Mark payment button
                markPayment.visible(false);

                this.setCloseMode(SaveMode);

                // Show/Hide Tax withhold tab based on Country context (visible for  GB, IE, TH and SA)
                taxWithholdTab.visible(taxWithholdCISEnabled);

                break;

            default:
                Debug::assert(false);
                break;
        }

        // <GJP>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]))
        {
            element.updateDesignConsInvoice_JP();
        }
        // </GJP>

        // <GEERU>
        if (countryRegion_RU)
        {
            promissoryNoteGroup.visible(!countryRegion_RU);

            balances_W.visible(TaxParameters::find().ReverseSettlementDatePrinciple_W || countryRegion_RU);
            if (custVendTransDetails && balances_W.visible())
            {
                custVendTransDetails.initBalanceList_RU(balanceList);
            }
        }
        // </GEERU>

        VendSpecTransOverview.text("@CashManagement:CustVendSpecTransOverviewSettlementLocation");
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCloseMode</Name>
				<Source><![CDATA[
    private void setCloseMode(int _formCloseMode)
    {
        formCloseMode = _formCloseMode;

        switch (formCloseMode)
        {
            case PostMode:
                Save.visible(false);
                updateNow.visible(true);
                Cancel.visible(true);
                break;

            case SaveMode:
                Save.visible(true);
                updateNow.visible(false);
                Cancel.visible(false);
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTaxWithhold</Name>
				<Source><![CDATA[
    public void updateTaxWithhold(
        VendTransOpen _vendTransOpen,
        AmountCur _settleAmountCur,
        CrossExchRate _crossRate)
    {
        TaxWithholdTrans localTaxWithholdTrans;

        // Find the spec trans for the transaction
        SpecTrans specTrans = manager.getSpecTrans(_vendTransOpen);

        // <GBR>
        // Delete all the taxWithholdTrans for the transaction, unmark possible selected tax transactions
        // and recreate TaxWithholdTrans.
        if (BrazilParameters::isEnabled() && originator.TableId == tableNum(LedgerJournalTrans))
        {
            ttsbegin;
            delete_from localTaxWithholdTrans
                where localTaxWithholdTrans.SpecTransId == specTrans.RecId;
            ttscommit;

            LedgerJournalTrans ledgerJournalTrans = originator;

            TaxWithhold::uncheckWithholdTrans_BR(ledgerJournalTrans);

            if (taxWithhold)
            {
                taxWithhold.createTaxWithholdTrans(
                    vendTrans,
                    manager.getSpecTrans(_vendTransOpen),
                    manager.getSettleAmount(_vendTransOpen) ,
                    manager.getSpecTrans(_vendTransOpen).CrossRate);
            }
        }
        else
        // </GBR>
        if (TaxWithholdingGlobalFeature::isExtendedWHTSupportedInCountryRegionOrParamEnabled())
        {
            if (taxWithhold)
            {
                ttsbegin;
                delete_from localTaxWithholdTrans
                    where localTaxWithholdTrans.SpecTransId == specTrans.RecId;
                ttscommit;

                taxWithhold.createTaxWithholdTrans_TH(
                    manager.getSpecTrans(_vendTransOpen),
                    manager.getSpecTrans(_vendTransOpen).CrossRate);
            }
        }
        else
        {
            ttsbegin;

            // Find all the taxWithholdTrans for the transaction and update the amounts on the TaxWithholdTrans.
            container company = [_vendTransOpen.company()];
            while select forupdate crossCompany:company localTaxWithholdTrans
                where localTaxWithholdTrans.SpecTransId == specTrans.RecId
            {
                taxWithhold.changeInvoiceAmountSettle(
                    localTaxWithholdTrans,
                    vendTrans,
                    _settleAmountCur,
                    _crossRate);

                localTaxWithholdTrans.update();
            }

            ttscommit;
        }

        taxWithholdTrans_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateWHTControls</Name>
				<Source><![CDATA[
    public void updateWHTControls()
    {
        taxWithholdTrans_InvoiceAmount.allowEdit(false);
        taxWithholdTrans_InvoiceTaxAmount.allowEdit(false);

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH]))
        {
            taxWithholdTrans_TaxWithholdAmount.allowEdit(false);
        }

        if (!TaxWithholdingGlobalFeature::isFeatureAndParamEnabled())
        {
            groupTaxWithholdNotTaxable.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMarkedTotals</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected void updateMarkedTotals()
    {
        markedTotalMst = manager.getMarkedTotalMst();
        cashDiscTotalMst = manager.getCashDiscTotalMst();
        markedTotalCur = manager.getMarkedTotalDisplayCur();
        cashDiscTotalCur = manager.getCashDiscTotalDisplayCur();
        vendBalanceMst = manager.getCustVendBalanceMst();
        journalTransAmountDisplayCur = manager.getJournalTransAmountDisplayCur();
        journalTransAmountMst = manager.getJournalTransAmountMst();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCashDiscValues</Name>
				<Source><![CDATA[
    private void updateCashDiscValues(VendTransOpen _vendTransOpen)
    {
        cashDiscAmount = manager.getCashDiscAmount(_vendTransOpen);
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        // If transactions were marked, write back to originating record if needed
        manager.updateOriginatorForMarkedTrans();

        // Update all SpecTrans records with date used to calculate discount
        manager.updateSpecTransWithSelectedDate();

        super();

        TaxWithhold::clearCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeCancel</Name>
				<Source><![CDATA[
    public void closeCancel()
    {
        switch (formCloseMode)
        {
            case PostMode:
                manager.resetMarkedTrans();
                break;

            case SaveMode:
                this.closeOk();
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        if (vendTransOriginator)
        {
            vendTrans_DS.positionToRecordByValue(fieldnum(VendTrans, RecId), int642Str(vendTransOriginator.RecId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isForeignVendor_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets whether it is a foreign vendor.
    /// </summary>
    /// <returns>
    /// Whether it is a foreign vendor.
    /// </returns>
    public boolean isForeignVendor_IN()
    {
        boolean isForeignVendor = false;

        if (originator.TableId == tableNum(VendTable))
        {
            VendTable vendTableLoc = originator;
            isForeignVendor = vendTableLoc.isForeign();
        }

        return isForeignVendor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterGridBySpecTransMarked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Filters records by the existence of a matching <c>SpecTrans</c> record.
    /// </summary>
    /// <param name = "_joinMode">The join mode for the <c>SpecTrans</c> datasource.</param>
    protected void filterGridBySpecTransMarked(JoinMode _joinMode)
    {
        QueryBuildDataSource specTransQBDS = SpecTransMarked_ds.queryBuildDataSource();

        SpecTransManager::filterDataSourceBySpecTransMarked(specTransQBDS, _joinMode, originator);

        if (_joinMode == JoinMode::InnerJoin)
        {
            this.setSpecTransDS(true);
        }
        else
        {
            this.setSpecTransDS(false);
        }

        VendTransOpen_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSpecTransDS</Name>
				<Source><![CDATA[
    private void setSpecTransDS(boolean _enabled)
    {
        QueryBuildDataSource specTransQBDS = SpecTransMarked_ds.queryBuildDataSource();

        if (specTransQBDS)
        {
            specTransQBDS.enabled(_enabled);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>settlementWriteOffPost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes marked transactions for posting.
    /// </summary>
    public void settlementWriteOffPost()
    {
        this.doSettlement();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSettlementWriteOffOrigin</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the originating context for settlement write off.
    /// </summary>
    /// <returns>The origin for write off.</returns>
    public SettlementWriteOffOrigin getSettlementWriteOffOrigin()
    {
        SettlementWriteOffOrigin origin;

        if (originator.TableId == tableNum(LedgerJournalTrans))
        {
            origin = SettlementWriteOffOrigin::PaymentJournal;
        }
        else if (originator.TableId == tableNum(VendTable))
        {
            origin = SettlementWriteOffOrigin::Account;
        }

        return origin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOriginator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the originating table record for settlement write off.
    /// </summary>
    /// <returns>The origin record.</returns>
    public Common getOriginator()
    {
        return originator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustVendOpenTransManager</Name>
				<Source><![CDATA[
    public CustVendOpenTransManager getCustVendOpenTransManager()
    {
        return manager;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSettlementWriteOffInProgress</Name>
				<Source><![CDATA[
    public void setSettlementWriteOffInProgress(boolean _isSettlementWriteOffInProgress)
    {
        settlementWriteOffUIController.parmIsSettlementWriteOffInProgress(_isSettlementWriteOffInProgress);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isVendorInvoiceReleasedForMarking</Name>
				<Source><![CDATA[
    private boolean isVendorInvoiceReleasedForMarking(VendTrans _vendTrans)
    {
        InvoiceReleaseDate paymTransDate;

        if (originator.tableId == tableNum(LedgerJournalTrans))
        {
            LedgerJournalTrans ledgerJournalTrans = element.args().record();
            paymTransDate = DateTimeUtil::newDateTime(ledgerJournalTrans.TransDate, 0);
        }
        else if (originator.tableId == tableNum(VendTable) && VendOpenTransFormInvReleaseDateImproveFlight::instance().isEnabled())
        {
            paymTransDate = manager && manager.parmSettlePostingType() == SettleDatePrinc::SelectDate ?
                DateTimeUtil::newDateTime(manager.parmSettlePostingDate(), 0) :
                DateTimeUtil::getSystemDateTime();
        }

        // Due to the lack of timezone information on the payment transaction date, timezones cannot be enforced on the invoice release date
        // This will result in differences in when the invoice releases by the timezone offsets.
        InvoiceReleaseDate invoiceReleaseDate = DateTimeUtil::date(_vendTrans.InvoiceReleaseDate);
        CustVendorBlocked vendBlocked = this.getDefaultVendorBlockedStatus();
        boolean isVendReleaseDateExpired = VendTable::isVendReleaseDateExpired(vendTable.AccountNum, paymTransDate);
        boolean isVendorInvoiceReleasedForMarking;
        // To disable the individual line on which vendor stop occurs
        if (this.isVendorBlockedForEdit(vendBlocked, isVendReleaseDateExpired)
            || (invoiceReleaseDate != utcDateTimeNull()
                && (invoiceReleaseDate > paymTransDate)))
        {
            isVendorInvoiceReleasedForMarking = false;
        }
        else
        {
            isVendorInvoiceReleasedForMarking = true;
        }

        return isVendorInvoiceReleasedForMarking;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkZeroAmount</Name>
				<Source><![CDATA[
    private NoYes checkZeroAmount(VendTransOpen _vendTransOpen, boolean _markTrans)
    {
        if (_markTrans && _vendTransOpen.AmountCur == 0)
        {
            if (_vendTransOpen.isZeroAmount() && _vendTransOpen.isTransClosed())
            {
                Voucher voucher = _vendTransOpen.vendTrans().Voucher;

                if (Box::yesNo(strFmt("@CashManagement:CustVendOpenTransZeroAmountRemoveConfirm", voucher), DialogButton::No, '', "@CashManagement:CustVendOpenTransZeroAmountRemoveBottomText") == DialogButton::Yes)
                {
                    ttsbegin;
                    _vendTransOpen.delete();
                    ttscommit;

                    vendTransOpen_ds.research();
                    info(strFmt("@CashManagement:CustVendOpenTransZeroAmountRemoveInfo", voucher));

                    return NoYes::No;
                }
                else
                {
                    return NoYes::No;
                }
            }
            else
            {
                throw error("@CashManagement:CustVendOpenTransZeroAmountDataError");
            }
        }

        return NoYes::Yes;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>VendTransOpen</Name>
				<Methods>
					<Method>
						<Name>enableDisableInterestAndFine_BR</Name>
						<Source><![CDATA[
        public void enableDisableInterestAndFine_BR(VendTransOpen _vendTransOpen, boolean _enabled)
        {
            VendTrans vendTransLoc;
            changecompany (vendTransOpen.company())
            {
                select firstonly RecId from vendTransLoc
                    where vendTransLoc.RecId == _vendTransOpen.RefRecId
                        && vendTransLoc.Invoice != '';
            }

            if (_enabled && vendTransLoc && !manager.getTransMarkedByOtherSpec(_vendTransOpen))
            {
                TransDate transDate = element.getTransDate_BR();

                vendTransOpen_ds.object(fieldNum(VendTransOpen, FineAmount_BR)).allowEdit(_vendTransOpen.DueDate < transDate);
                vendTransOpen_ds.object(fieldNum(VendTransOpen, InterestAmount_BR)).allowEdit(_vendTransOpen.DueDate < transDate);
                vendTransOpen_ds.object(fieldNum(VendTransOpen, FineCode_BR)).allowEdit(_vendTransOpen.AmountCur <= 0);
                vendTransOpen_ds.object(fieldNum(VendTransOpen, InterestCode_BR)).allowEdit(_vendTransOpen.AmountCur <= 0);
            }
            else
            {
                vendTransOpen_ds.object(fieldNum(VendTransOpen, InterestAmount_BR)).allowEdit(false);
                vendTransOpen_ds.object(fieldNum(VendTransOpen, FineAmount_BR)).allowEdit(false);
                vendTransOpen_ds.object(fieldNum(VendTransOpen, InterestCode_BR)).allowEdit(false);
                vendTransOpen_ds.object(fieldNum(VendTransOpen, FineCode_BR)).allowEdit(false);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>unmarkTaxWithhold_BR</Name>
						<Source><![CDATA[
        boolean unmarkTaxWithhold_BR(VendTransOpen _vendTransOpen, NoYes _markTrans)
        {
            boolean stopUnmarkingTax = NoYes::No;

            if (!_markTrans && taxWithhold && originator.TableId == tableNum(LedgerJournalTrans))
            {
                if (!currentlyUnmarkingAll && taxWithhold.needsToUnselectAll_BR(_vendTransOpen, originator))
                {
                    Common currentLine;
                    currentLine.RecId = this.cursor().RecId;
                    if (Box::yesNo("@GLS2053", DialogButton::No, "@GLS2052") == DialogButton::Yes)
                    {
                        boolean exceptionDuringUnselectAll;
                        try
                        {
                            currentlyUnmarkingAll = true;
                            this.first();
                            do
                            {
                                if (this.editMarkTrans(false, this.cursor(), NoYes::No) && TaxWithhold::hasWithhold_BR(this.cursor(), originator))
                                {
                                    this.editMarkTrans(true, this.cursor(), NoYes::No);
                                }
                            }
                            while (this.next());

                            currentlyUnmarkingAll = false;
                            this.refresh();
                        }
                        catch
                        {
                            exceptionDuringUnselectAll = true;
                        }

                        element.args().lookupRecord(currentLine);
                        this.research();

                        if (exceptionDuringUnselectAll)
                        {
                            throw Exception::Error;
                        }
                    }

                    stopUnmarkingTax = NoYes::Yes;
                }
            }

            return stopUnmarkingTax;
        }

]]></Source>
					</Method>
					<Method>
						<Name>editCashDiscToTakePaymCur</Name>
						<Source><![CDATA[
        public edit AmountCur editCashDiscToTakePaymCur(boolean _set, VendTransOpen _vendTransOpen, AmountCur _cashDiscToTakePaymCur)
        {
            if (_set)
            {
                manager.updateCashDiscAmountToTakePaymCur(_vendTransOpen, _cashDiscToTakePaymCur);
            }

            return manager.getCashDiscAmountToTakePaymCur(_vendTransOpen);
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayCashDiscTakenPaymCur</Name>
						<Source><![CDATA[
        public display AmountCur displayCashDiscTakenPaymCur(VendTransOpen _vendTransOpen)
        {
            AmountCur returnCashDiscTakenPaymCur;

            returnCashDiscTakenPaymCur = manager.getCashDiscAmountTakenPaymCur(_vendTransOpen);

            return returnCashDiscTakenPaymCur;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayCashDiscDate</Name>
						<Source><![CDATA[
        public display CashDiscdate displayCashDiscDate(VendTransOpen _vendTransOpen)
        {
            CashDiscdate returnCashDiscDate;

            returnCashDiscDate = manager.getCashDiscDate(_vendTransOpen);

            return returnCashDiscDate;
        }

]]></Source>
					</Method>
					<Method>
						<Name>editCashDiscToTake</Name>
						<Source><![CDATA[
        public edit CashDiscAmount editCashDiscToTake(boolean _set, VendTransOpen _vendTransOpen, AmountCur _cashDiscToTake)
        {
            if (_set)
            {
                manager.updateCashDiscAmountToTake(_vendTransOpen, _cashDiscToTake);
            }

            return manager.getCashDiscAmountToTake(_vendTransOpen);
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            element.initFromCaller();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            // <GIN>
            LedgerJournalTrans ledgerJournalTrans;
            TaxWithholdParameters_IN taxWithholdParameter = TaxWithholdParameters_IN::find();
            // </GIN>

            int ret = super();

            element.updateDesignDynamic();
            element.updateCashDiscValues(vendTransOpen);
            element.updateMarkedTotals();

            // <GIN>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
               && (taxWithholdParameter.tdsActivate || taxWithholdParameter.tcsActivate))
            {
                LedgerJournalType ledgerJournalTypeLoc = ledgerJournalTrans.ledgerJournalTable().JournalType;
                if (element.args().dataset() != tableNum(VendTable))
                {
                    if (ledgerJournalTypeLoc == LedgerJournalType::Daily
                        || ledgerJournalTypeLoc == LedgerJournalType::Payment)
                    {
                        if (vendTransOpen.TaxWithholdStatus_IN == NoYes::Yes)
                        {
                            taxWithholdSettleTrans_IN.enabled(true);
                            settleField.enabled(false);
                            settlePaymCur.enabled(false);
                        }
                        else
                        {
                            taxWithholdSettleTrans_IN.enabled(false);
                            settleField.enabled(true);
                            settlePaymCur.enabled(true);
                        }
                    }
                }
            }
            // </GIN>

            VendTransCashDisc_ds.linkActive();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayTransMarkedByOtherSpec</Name>
						<Source><![CDATA[
        public display container displayTransMarkedByOtherSpec(VendTransOpen _vendTransOpen)
        {
            container imageContainer;

            if (manager.getTransMarkedByOtherSpec(_vendTransOpen))
            {
                ImageReference image = ImageReference::constructForSymbol(ImageReferenceSymbol::InUse);
                imageContainer = image.pack();
            }

            return imageContainer;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayPrimaryPaymentMarked</Name>
						<Source><![CDATA[
        public display container displayPrimaryPaymentMarked(VendTransOpen _vendTransOpen)
        {
            container imageContainer;

            if (isPrimaryPaymentImageNeeded && manager.getMarkedPrimaryPayment(_vendTransOpen))
            {
                ImageReference image = ImageReference::constructForSymbol(ImageReferenceSymbol::Info);
                imageContainer = image.pack();
            }

            return imageContainer;
        }

]]></Source>
					</Method>
					<Method>
						<Name>canEditMarkTrans</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Checked if in Brazil parameter enabled and Can the current marked transaction be edited.
        /// </summary>
        /// <param name = "_vendTransOpen">
        ///     The current <c>VendTransOpen</c> record.
        /// </param>
        /// <param name = "_markTrans">
        ///     Identifies if the item is being marked or unmarked.
        /// </param>
        /// </param>
        /// <returns>
        ///     true if in Brazil parameter enabled and whether need to unselect all; otherwise, false.
        /// </returns>
        protected boolean canEditMarkTrans(VendTransOpen _vendTransOpen, NoYes _markTrans)
        {
            // <GBR>
            return BrazilParameters::isEnabled() && this.unmarkTaxWithhold_BR(_vendTransOpen, _markTrans);
            // </GBR>
        }

]]></Source>
					</Method>
					<Method>
						<Name>editMarkTrans</Name>
						<Source><![CDATA[
        /// <summary>
        ///     Can the current marked transaction be edited.
        /// </summary>
        /// <param name = "_set">
        ///     Bollean value which determines if the marked record can be edited.
        /// </param>
        /// <param name = "_vendTransOpen">
        ///     The current <c>VendTransOpen</c> record.
        /// </param>
        /// <param name = "_markTrans">
        ///     Identifies if the item is being marked or unmarked.
        /// </param>
        /// <returns>
        ///     true if the record can be edited; otherwise, false.
        /// </returns>
        public edit NoYes editMarkTrans(boolean _set, VendTransOpen _vendTransOpen, NoYes _markTrans)
        {
            #ISOCountryRegionCodes

            VendTrans vendTransLoc;
            vendTransLoc = _vendTransOpen.vendTrans();

            markedObservableLink.observe();

            if (element.checkZeroAmount(_vendTransOpen, _markTrans) == NoYes::No)
            {
                return NoYes::No;
            }

            if (_set)
            {
                if (this.canEditMarkTrans(_vendTransOpen, _markTrans))
                {
                    return manager.getTransMarked(_vendTransOpen);
                }

                if (element.canSetMarkTrans(_vendTransOpen, _markTrans))
                {
                    boolean canBeMarked = true;
                    boolean vendPaymentGroupFeatureEnabled = (VendParameters::find().VendPaymentGroupingEnable == NoYes::Yes);

                    // <GEERU>
                    if (vendTrans.VendPaymentGroup
                        && VendParameters::find().DimSettlementCtrlType_RU != DimSettlementCtrlType_RU::None
                        && ((_markTrans == NoYes::Yes && Box::yesNo("@GLS116014", DialogButton::Yes) == DialogButton::No)
                            || (_markTrans == NoYes::No && Box::yesNo("@GLS116015", DialogButton::Yes) == DialogButton::No)))
                    {
                        vendPaymentGroupFeatureEnabled = false;
                    }
                    // </GEERU>

                    // <GBR>
                    if (BrazilParameters::isEnabled() && originator.TableId == tableNum(LedgerJournalTrans) && _markTrans)
                    {
                        LedgerJournalTrans ledgerJournalTrans = originator;
                        manager.calcAndUpdateFine_BR(
                            _vendTransOpen.company(),
                            _vendTransOpen,
                            ledgerJournalTrans.TransDate);
                        manager.calcAndUpdateInterest_BR(
                            _vendTransOpen.company(),
                            _vendTransOpen,
                            ledgerJournalTrans.TransDate);
                    }
                    // </GBR>

                    if (vendPaymentGroupFeatureEnabled && (originator.TableId == tableNum(LedgerJournalTrans) || originator.TableId == tableNum(VendTable) || originator.TableId == tableNum(PurchTable)))
                    {
                        manager.vendPaymentGroupsUpdateTransMarked(_vendTransOpen, _markTrans, this, vendTrans.VendPaymentGroup, taxWithhold, originator, paymentGroupBeingModified);

                        // Raise a notification on the edit method since multiple transactions in the payment group can be marked
                        markedObservableLink.markChanged();
                    }
                    else
                    {
                        if (ledgerJournalType != LedgerJournalType::Netting
                            && vendTrans.RemittanceLocation != 0
                            && _markTrans)
                        {
                            canBeMarked = manager.checkRemittanceTransCanBeMarked(_vendTransOpen);
                        }

                        if (canBeMarked)
                        {
                            this.updateTransMarked(_vendTransOpen, _markTrans);
                        }
                    }

                    if (canBeMarked
                        && _markTrans == NoYes::Yes
                        && (originator.TableId == tableNum(LedgerJournalTrans) || originator.TableId == tableNum(VendTable))
                        && taxWithhold != null
                        && !vendPaymentGroupFeatureEnabled)
                    {
                        if (TaxWithholdingGlobalFeature::isExtendedWHTSupportedInCountryRegionOrParamEnabled())
                        {
                            taxWithhold.createTaxWithholdTrans_TH(
                            manager.getSpecTrans(_vendTransOpen),
                            manager.getSpecTrans(_vendTransOpen).CrossRate);
                        }
                        else
                        {
                            taxWithhold.createTaxWithholdTrans(
                            vendTransLoc,
                            manager.getSpecTrans(_vendTransOpen),
                            manager.getSettleAmount(_vendTransOpen, false) + vendTransCashDisc.CashDiscAmount,
                            manager.getSpecTrans(_vendTransOpen).CrossRate);
                        }
                    }

                    element.updateDesignDynamic();

                    taxWithholdTrans_ds.executeQuery();
                }
            }

            return manager.getTransMarked(_vendTransOpen);
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateTransMarked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Updates the marked status of the specified open transaction.
        /// </summary>
        /// <param name = "_vendTransOpen">The open transaction for which to update the marked status.</param>
        /// <param name = "_markTrans">The marked status with which to update the associated open transaction.</param>
        protected void updateTransMarked(VendTransOpen _vendTransOpen, NoYes _markTrans)
        {
            manager.updateTransMarked(_vendTransOpen, _markTrans);
            // <GIN>
            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                manager.updateTransMarkedAdjustJournals_IN(_vendTransOpen, _markTrans);
            }
            // </GIN>
        }

]]></Source>
					</Method>
					<Method>
						<Name>editFullSettlement</Name>
						<Source><![CDATA[
        public edit NoYes editFullSettlement(boolean _set, VendTransOpen _vendTransOpen, NoYes _fullSettlement)
        {
            markedObservableLink.observe();

            if (_set)
            {
                if (_fullSettlement && manager.getJournalTransAmountMst() == 0)
                {
                    warning("@SYS122493");
                }
                else
                {
                    manager.updateFullSettlement(_vendTransOpen, _fullSettlement);
                    this.refresh();
                    element.updateMarkedTotals();
                }

                settlementWriteOffUIController.updateSettleRemainderControl(SettleRemainder, manager);
            }

            return manager.getFullSettlement(_vendTransOpen);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editCrossRate</Name>
						<Source><![CDATA[
        public edit CrossExchRate editCrossRate(boolean _set, VendTransOpen _vendTransOpen, CrossExchRate _crossRate)
        {
            markedObservableLink.observe();

            if (_set)
            {
                manager.updateCrossRate(_vendTransOpen, _crossRate);

                if ((originator.TableId == tableNum(LedgerJournalTrans) || originator.TableId == tableNum(VendTable))
                    && taxWithholdTrans.RecId != 0)
                {
                    element.updateTaxWithhold(
                        _vendTransOpen,
                        manager.getSettleAmount(_vendTransOpen) + vendTransCashDisc.CashDiscAmount,
                        manager.getSpecTrans(_vendTransOpen).CrossRate);
                }
            }

            return manager.getCrossRate(_vendTransOpen);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editSettleAmountCur</Name>
						<Source><![CDATA[
        public edit AmountCur editSettleAmountCur(boolean _set, VendTransOpen _vendTransOpen, AmountCur _settleAmountCur)
        {
            markedObservableLink.observe();

            if (_set)
            {
                manager.updateSettleAmount(_vendTransOpen, _settleAmountCur);

                if ((originator.TableId == tableNum(LedgerJournalTrans) || originator.TableId == tableNum(VendTable))
                    && taxWithholdTrans.RecId != 0)
                {
                    element.updateTaxWithhold(
                        _vendTransOpen,
                        manager.getSettleAmount(_vendTransOpen),
                        manager.getSpecTrans(_vendTransOpen).CrossRate);
                }

                vendTransOpen_ds.refresh();

                element.updateMarkedTotals();
                settlementWriteOffUIController.updateSettleRemainderControl(SettleRemainder, manager);
            }

            return manager.getSettleAmount(_vendTransOpen);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editSettleAmountPaymCur</Name>
						<Source><![CDATA[
        public edit AmountCur editSettleAmountPaymCur(boolean _set, VendTransOpen _vendTransOpen, AmountCur _settleAmountPaymCur)
        {
            markedObservableLink.observe();

            if (_set)
            {
                manager.updateSettleAmountPaymCur(_vendTransOpen, _settleAmountPaymCur);

                if ((originator.TableId == tableNum(LedgerJournalTrans) || originator.TableId == tableNum(VendTable))
                    && taxWithholdTrans.RecId != 0)
                {
                    element.updateTaxWithhold(
                        _vendTransOpen,
                        manager.getSettleAmount(_vendTransOpen),
                        manager.getSpecTrans(_vendTransOpen).CrossRate);
                }

                vendTransOpen_ds.refresh();

                element.updateMarkedTotals();
            }

            return manager.getSettleAmountPaymCur(_vendTransOpen);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editCashDiscAmountPaymCur</Name>
						<Source><![CDATA[
        public edit AmountCur editCashDiscAmountPaymCur(boolean _set, VendTransOpen _vendTransOpen, AmountCur _cashDiscAmountPaymCur)
        {
            if (_set)
            {
				manager.updateCashDiscAmountPaymCur(_vendTransOpen, vendTransCashDisc, _cashDiscAmountPaymCur);
                element.updateCashDiscValues(_vendTransOpen);
                element.updateMarkedTotals();

                // Updating the VendTransCashDisc record via the edit method requires an executeQuery/reread to
                // get the most current data on the form
                if (!vendTransCashDisc && _cashDiscAmountPaymCur != 0)
                {
                    vendTransCashDisc_ds.executeQuery();
                }
                else
                {
                    vendTransCashDisc_ds.reread();
                }

                // Refresh the values displayed.
                vendTransCashDisc_ds.refresh();

                // Updating the VendTransCashDisc record updates the VendTransOpen.
                // Need to reread to get most current data on the form.
                vendTransOpen_ds.reread();
            }

            return manager.getCashDiscAmountPaymCur(_vendTransOpen);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editCashDiscAmount</Name>
						<Source><![CDATA[
        public edit CashDiscAmount editCashDiscAmount(boolean _set, VendTransOpen _vendTransOpen, AmountCur _cashDiscAmount)
        {
            if (_set)
            {
                manager.updateCashDiscAmount(_vendTransOpen, vendTransCashDisc, _cashDiscAmount);
                element.updateCashDiscValues(_vendTransOpen);
                element.updateMarkedTotals();

                // Updating the VendTransCashDisc record via the edit method requires a executeQuery/reread to
                // get the most current data on the form
                if (!vendTransCashDisc && _cashDiscAmount != 0)
                {
                    vendTransCashDisc_ds.executeQuery();
                }
                else
                {
                    vendTransCashDisc_ds.reread();
                }

                // Refresh the values displayed.
                vendTransCashDisc_ds.refresh();

                // Updating the VendTransCashDisc record updates the VendTransOpen.
                // Need to reread to get most current data on the form.
                vendTransOpen_ds.reread();
            }

            return manager.getCashDiscAmount(_vendTransOpen);
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayCashDiscTaken</Name>
						<Source><![CDATA[
        public display CashDiscAmount displayCashDiscTaken(VendTransOpen _vendTransOpen)
        {
            return manager.getCashDiscAmountTaken(_vendTransOpen);
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayFullSettlementCashDiscPaymCur</Name>
						<Source><![CDATA[
        public display AmountCur displayFullSettlementCashDiscPaymCur(VendTransOpen _vendTransOpen)
        {
            return manager.getFullSettlementCashDiscPaymCur(_vendTransOpen);
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayFullSettlementCashDisc</Name>
						<Source><![CDATA[
        public display AmountCur displayFullSettlementCashDisc(VendTransOpen _vendTransOpen)
        {
            return manager.getFullSettlementCashDisc(_vendTransOpen);
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayTaxTransactionId_IN</Name>
						<Source><![CDATA[
        /// <summary>
        /// Display  TaxTransactionId of TaxDocumentExtension_IN
        /// </summary>
        /// <param name = "_vendTransOpen">VendTransOpen</param>
        /// <returns>TaxTransactionId</returns>
        public display InvoiceId displayTaxTransactionId_IN(VendTransOpen _vendTransOpen)
        {
            VendTrans vendTransLoc = _vendTransOpen.vendTrans();

            TaxDocumentExtension_IN taxDocumentExtension_IN = TaxDocumentExtensionUtils::getTaxDocumentExtensionByVoucherAndDate(vendTransLoc.Voucher, vendTransLoc.TransDate);

            return taxDocumentExtension_IN.TaxTransactionId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (DisableFirstFastOnVendOpenTransFormFlight::instance().isEnabled())
            {
                this.queryBuildDataSource().firstFast(false);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>DueDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                TransDate transDate = element.getTransDate_BR();

                if (manager.getTransMarked(vendTransOpen) == NoYes::Yes)
                {
                    if (vendTransOpen.InterestCode_BR && vendTransOpen.FineCode_BR)
                    {
                        if ((Box::yesNo(
                            strFmt(
                                "@GLS1268",
                                fieldPName(VendTransOpen, DueDate),
                                fieldPName(VendTransOpen, InterestAmount_BR),
                                fieldPName(VendTransOpen, FineAmount_BR)),
                            DialogButton::No) == DialogButton::Yes))
                        {
                            manager.calcAndUpdateInterest_BR(
                                vendTransOpen.company(),
                                vendTransOpen,
                                transDate);
                            manager.calcAndUpdateFine_BR(
                                vendTransOpen.company(),
                                vendTransOpen,
                                transDate);
                        }
                    }
                    else
                    {
                        if (vendTransOpen.InterestCode_BR)
                        {
                            if (Box::yesNo(strFmt(
                                    "@GLS1009",
                                    fieldPName(VendTransOpen, DueDate),
                                    fieldPName(VendTransOpen, InterestAmount_BR)),
                                DialogButton::No) == DialogButton::Yes)
                            {
                                manager.calcAndUpdateInterest_BR(
                                    vendTransOpen.company(),
                                    vendTransOpen,
                                    transDate);
                            }
                        }
                        else
                        {
                            if (vendTransOpen.FineCode_BR)
                            {
                                if ((Box::yesNo(strFmt(
                                        "@GLS1009",
                                        fieldPName(VendTransOpen, DueDate),
                                        fieldPName(VendTransOpen, FineAmount_BR)),
                                    DialogButton::No) == DialogButton::Yes))
                                {
                                    manager.calcAndUpdateFine_BR(
                                        vendTransOpen.company(),
                                        vendTransOpen,
                                        transDate);
                                }
                            }
                        }
                    }
                }

                vendTransOpen_ds.write();

                vendTransOpen_ds.refresh();

                vendTrans_ds.reread();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FineAmount_BR</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();

                if (ret && vendTransOpen.FineAmount_BR > 0)
                {
                    error("@GLS1233");
                    return false;
                }
                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                manager.updateFineAmount_BR(
                    vendTransOpen.company(),
                    vendTransOpen,
                    vendTransOpen.FineAmount_BR);

                vendTransOpen_ds.write();
                vendTransOpen_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FineCode_BR</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (manager.getTransMarked(vendTransOpen) == NoYes::Yes)
                {
                    if (Box::yesNo(strFmt(
                            "@GLS1009",
                            fieldPName(VendTransOpen, FineCode_BR),
                            fieldPName(VendTransOpen, FineAmount_BR)),
                        DialogButton::No) == DialogButton::Yes)
                    {
                        if (vendTrans.Invoice && vendTransOpen.AmountCur < 0)
                        {
                            TransDate transDate;
                            if (originator.TableId == tableNum(LedgerJournalTrans))
                            {
                                LedgerJournalTrans ledgerJournalTrans = originator;
                                transDate = ledgerJournalTrans.TransDate;
                            }

                            manager.calcAndUpdateFine_BR(
                                vendTransOpen.company(),
                                vendTransOpen,
                                transDate);
                        }
                    }
                }
                else
                {
                    manager.calcAndUpdateFine_BR(
                        vendTransOpen.company(),
                        vendTransOpen,
                        dateNull());
                }
                vendTransOpen_ds.write();
                vendTransOpen_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InterestAmount_BR</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();

                if (ret && vendTransOpen.InterestAmount_BR > 0)
                {
                    error("@GLS931");
                    return false;
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                manager.updateInterestAmount_BR(
                    vendTransOpen.company(),
                    vendTransOpen,
                    vendTransOpen.InterestAmount_BR);

                vendTransOpen_ds.write();
                vendTransOpen_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InterestCode_BR</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (manager.getTransMarked(vendTransOpen) == NoYes::Yes)
                {
                    if (Box::yesNo(strFmt(
                            "@GLS1009",
                            fieldPName(VendTransOpen, InterestCode_BR),
                            fieldPName(VendTransOpen, InterestAmount_BR)),
                        DialogButton::No) == DialogButton::Yes)
                    {
                        if (vendTrans.Invoice && vendTransOpen.AmountCur < 0)
                        {
                            TransDate transDate;
                            if (originator.TableId == tableNum(LedgerJournalTrans))
                            {
                                LedgerJournalTrans ledgerJournalTrans = originator;
                                transDate = ledgerJournalTrans.TransDate;
                            }
                            manager.calcAndUpdateInterest_BR(
                                vendTransOpen.company(),
                                vendTransOpen,
                                transDate);
                        }
                    }
                }
                else
                {
                    manager.calcAndUpdateInterest_BR(
                        vendTransOpen.company(),
                        vendTransOpen,
                        dateNull());
                }

                vendTransOpen_ds.write();
                vendTransOpen_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>UseCashDisc</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                manager.updateUseCashDisc(vendTransOpen);

                vendTransOpen_ds.write();

                CustVendTransCashDisc applicableCustVendTransCashDisc = manager.findApplicableCustVendTransCashDisc(vendTransOpen);
                vendTransCashDisc_ds.positionToRecordByValue(fieldNum(VendTransCashDisc, RecId), int642Str(applicableCustVendTransCashDisc.RecId));

                vendTransOpen_ds.refresh();

                if (vendTransOpen.UseCashDisc == UseCashDisc::Never)
                {
                    VendTransCashDisc_CashDiscAmount1.allowEdit(false);
                    possibleCashDiscPaymCur.allowEdit(false);
                }
                else
                {
                    VendTransCashDisc_CashDiscAmount1.allowEdit(true);
                    possibleCashDiscPaymCur.allowEdit(true);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>VendTrans</Name>
				<Methods>
					<Method>
						<Name>updateQuery_RU</Name>
						<Source><![CDATA[
        void updateQuery_RU(boolean _showTransfer = false)
        {
            QueryFilter queryFilter = SysQuery::findOrCreateQueryFilter(
                this.query(),
                this.query().dataSourceTable(tableNum(VendTrans_W)),
                fieldStr(VendTrans_W, BankCurrencyTransferId_RU));

            queryFilter.value(_showTransfer ? SysQuery::valueNotEmptyString() : SysQuery::valueEmptyString());
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            // Reload the dimension defaulting controller as the company may have changed
            if (vendTrans.company() != currentCompany)
            {
                currentCompany = vendTrans.company();
                FormTabPageControl formControl = tabControl.getActivePage();
                DimensionEntryControl.parmCompany(currentCompany);
                DimensionEntryControl.reactivate();
                formControl.activatePage();

                // Reset the dimension controller default accounts as the company may have changed
                vendTransOpen_CashDiscAccount.parmPostingType(LedgerPostingType::None);
                vendTransOpen_CashDiscAccount.parmCurrentLedgerCOA(LedgerChartOfAccounts::current());
                vendTransOpen_CashDiscAccount.setDataAreaId(currentCompany);
            }

            vendTrans_ds.allowEdit(element.doesCallerAllowEdit());

            // <GEERU>
            if (custVendTransDetails && balances_W.visible())
            {
                custVendTransDetails.setCustVendTrans(vendTrans);
                custVendTransDetails.createBalanceList_RU(balanceList);
            }
            // </GEERU>

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            // Add promissory note range
            if (originator.TableId != tableNum(LedgerJournalTrans))
            {
                QueryBuildRange promissoryNoteStatusRange = this.query().dataSourceTable(tableNum(VendTrans)).addRange(fieldNum(VendTrans, PromissoryNoteStatus));
                promissoryNoteStatusRange.value(queryRangeConcat(queryValue(CustVendNegInstStatus::Invoiced), queryValue(CustVendNegInstStatus::None)));
            }

            QueryBuildRange criteriaApproved = this.query().dataSourceTable(tableNum(VendTrans)).addRange(fieldNum(VendTrans, Approved));
            criteriaApproved.value(int2Str(NoYes::Yes));

            // <GEERU>
            if (TaxParameters::find().ReverseSettlementDatePrinciple_W || countryRegion_RU)
            {
                custVendTransDetails = new CustVendTransDetails(vendTrans);
            }

            if (countryRegion_RU)
            {
                this.cacheAddMethod(tableMethodStr(VendTrans, agreementId_RU));
                this.cacheAddMethod(tableMethodStr(VendTrans, agreementDocumentTitle_RU));
            }
            // </GEERU>

            // <GBR>
            if (BrazilParameters::isEnabled())
            {
                this.cacheAddMethod(tableMethodStr(VendTrans, fiscalEstablishmentId_BR));
            }
            // </GBR>
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayBankLCNumber</Name>
						<Source><![CDATA[
        public display BankLCNumber displayBankLCNumber(VendTrans _vendTrans)
        {
            return manager.getBankLCNumber(_vendTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayBankLCShipmentLineNum</Name>
						<Source><![CDATA[
        public display BankLCShipmentLineNum displayBankLCShipmentLineNum(VendTrans _vendTrans)
        {
            return manager.getBankLCShipmentLineNum(_vendTrans);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>PaymMode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // <GBR>
                if (BrazilParameters::isEnabled())
                {
                    vendTrans_ds.write();
                    vendTransEPRemit_BR_ds.reread();
                    vendTransEPRemit_BR_ds.refresh();
                    vendTransPayment_BR.paymspecModified_BR(vendTrans.PaymMode, vendTrans.PaymSpec);
                    vendTransPayment_BR_ds.refresh();
                }
                // </GBR>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PaymSpec</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // <GBR>
                if (BrazilParameters::isEnabled())
                {
                    vendTrans_ds.write();
                    vendTransEPRemit_BR_ds.reread();
                    vendTransEPRemit_BR_ds.refresh();
                    vendTransPayment_BR.paymspecModified_BR(vendTrans.PaymMode, vendTrans.PaymSpec);
                    vendTransPayment_BR_ds.refresh();
                }
                // </GBR>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RemittanceLocation</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                if (vendTrans_ds.validateWrite())
                {
                    vendTrans_ds.write();
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                if (!super())
                {
                    if (Box::okCancel("@SYS300934", DialogButton::Ok) == DialogButton::Ok)
                    {
                        vendTrans_ds.refreshEx();
                    }
                    else
                    {
                        return false;
                    }
                }
                return true;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return LogisticsLocationAppUtil::lookupRemittanceLocation(_formReferenceControl, vendTrans.AccountNum);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                LogisticsLocationAppUtil::jumpRefLogisticsLocation(element, vendTrans.RemittanceLocation);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VendPaymentGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                Query query = new Query();
                query.addDataSource(tableNum(VendPaymentGroupLookup)).addRange(fieldNum(VendPaymentGroupLookup, AccountNum)).value(vendTrans.AccountNum);
                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(VendPaymentGroupLookup),_formControl);

                sysTableLookup.addLookupfield(fieldNum(VendPaymentGroupLookup, VendPaymentGroup));

                sysTableLookup.parmQuery(query);

                sysTableLookup.performFormLookup();

                super(_formControl, _filterStr);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                VendPaymentGrouping origPaymentGroup = vendTrans.orig().VendPaymentGroup;

                super();

                if (vendTrans.validateWrite()
                    && VendPaymentGroupManager::validatePaymentGroupNotMarkedInSeparateJournal(vendTrans.VendPaymentGroup, originator))
                {
                    vendTrans.write();
                }

                vendTrans_ds.executeQuery();
                vendTrans_ds.reread();
                vendTrans_ds.refresh();

                // If a payment group is deleted, and the settlement is currently marked, and there are other invoices in the payment group, then unmark this invoice.
                if (vendTrans.VendPaymentGroup == ''
                    && vendTransOpen_ds.editMarkTrans(false, vendTransOpen, NoYes::No) == NoYes::Yes
                    && SpecTrans::findNumberOfMarkedVendPaymentGroups(origPaymentGroup, vendTrans.company()) > 0)
                {
                    vendTransOpen_ds.editMarkTrans(true, vendTransOpen, NoYes::No);
                }
                // If the settlement is marked and payment group is changed to another payment group, then mark the entire group.
                else if (vendTrans.VendPaymentGroup != ''
                    && vendTransOpen_ds.editMarkTrans(false, vendTransOpen, NoYes::No) == NoYes::Yes)
                {
                    paymentGroupBeingModified = true;
                    vendTransOpen_ds.editMarkTrans(true, vendTransOpen, NoYes::Yes);
                    paymentGroupBeingModified = false;
                }
                // If the payment group is changed to a marked payment group, mark that payment group.
                else if (vendTrans.VendPaymentGroup != ''
                    && SpecTrans::findNumberOfMarkedVendPaymentGroups(vendTrans.VendPaymentGroup, vendTrans.company()) > 0)
                {
                    vendTransOpen_ds.editMarkTrans(true, vendTransOpen, NoYes::Yes);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>VendTransCashDisc</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            boolean isTempRecord = vendTransCashDisc.RecId == 0;

            super();

            manager.clearCashDiscountCaches(vendTransOpen);

            if (!isTempRecord)
            {
                manager.updateAmountToSettleForMarkedTransaction(vendTransOpen);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            CustVendTransCashDisc applicableCustVendTransCashDisc = manager.findApplicableCustVendTransCashDisc(vendTransOpen);
            this.positionToRecordByValue(fieldNum(VendTransCashDisc, RecId), int642Str(applicableCustVendTransCashDisc.RecId));

        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();
            boolean allowEdit = vendTransCashDisc.CashDiscDue == CashDiscDue::CashDisc && vendTransOpen.UseCashDisc != UseCashDisc::Never;
            vendTransCashDisc_ds.allowEdit(allowEdit);
            VendTransCashDisc_CashDiscAmount1.allowEdit(allowEdit);
            possibleCashDiscPaymCur.allowEdit(allowEdit);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);

            if (vendTransCashDisc.RecId == 0)
            {
                // set the proper company for CP cross-company scenarios.
                vendTransCashDisc.company(vendTransOpen.company());
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>displaySettleAmountForCashDisc</Name>
						<Source><![CDATA[
        public display AmountCur displaySettleAmountForCashDisc(VendTransCashDisc _vendTransCashDisc)
        {
            return manager.getSettleAmountForCashDisc(vendTransOpen, _vendTransCashDisc);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CashDiscAmount</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = super();

                if (isValid)
                {
                    isValid = manager.validateCashDiscAmount(vendTransOpen, vendTransCashDisc.CashDiscAmount);
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // Update cash discount record before updating related records
                vendTransCashDisc_ds.write();

                manager.updateCashDiscAmount(vendTransOpen, vendTransCashDisc);
                element.updateMarkedTotals();

                // Updating the VendTransCashDisc record updates the VendTransOpen automatically.
                // Need to reread to display most current data on the form.
                vendTransOpen_ds.reread();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CashDiscdate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // Update cash discount record before updating related
                vendTransCashDisc_ds.write();

                manager.updateCashDiscDate(vendTransOpen, vendTransCashDisc);

                vendTransOpen_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TaxWithholdTrans</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            // <GTH>
            if (TaxThaiGovCertificationFeatureChecker::isCountryRegionTH())
            {
                this.queryBuildDataSource().clearDynalinks();
            }
            // </GTH>
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();

            if (isTaxWithholdTransExtensionTHEnabled)
            {
                taxWithholdTransExtensionTH.SysExtensionSerializerExtensionMap::insertAfterBaseTable(taxWithholdTrans);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildRange qbrSpecTransId;
            QueryBuildRange qbrPosted;

            this.query().dataSourceTable(tableNum(TaxWithholdTrans)).clearDynalinks();
            this.query().allowCrossCompany(true);
            this.query().clearCompanyRange();
            this.query().addCompanyRange(vendTransOpen.company());

            qbrSpecTransId = this.query().dataSourceTable(tableNum(TaxWithholdTrans)).findRange(fieldNum(TaxWithholdTrans, SpecTransId));

            if (!qbrSpecTransId)
            {
                qbrSpecTransId = this.query().dataSourceTable(tableNum(TaxWithholdTrans)).addRange(fieldNum(TaxWithholdTrans, SpecTransId));
            }

            qbrSpecTransId.value(queryValue(manager.getSpecTrans(vendTransOpen).RecId));

            qbrPosted = this.query().dataSourceTable(tableNum(TaxWithholdTrans)).findRange(fieldNum(TaxWithholdTrans, Posted));

            if (!qbrPosted)
            {
                qbrPosted = this.query().dataSourceTable(tableNum(TaxWithholdTrans)).addRange(fieldNum(TaxWithholdTrans, Posted));
            }

            qbrPosted.value(queryValue(NoYes::No));

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            VendTable vendor = VendTable::findByCompany(vendTrans.company(), vendTrans.AccountNum);

            taxWithhold.initTaxWithholdTrans(
                taxWithholdTrans,
                vendTrans,
                manager.getSpecTrans(vendTransOpen),
                manager.getSettleAmount(vendTransOpen),
                vendor.TaxWithholdGroup);
        }

]]></Source>
					</Method>
					<Method>
						<Name>taxWithholdRoundOff</Name>
						<Source><![CDATA[
        public display TaxWithholdRoundOff taxWithholdRoundOff(TaxWithholdTrans _taxWithholdTrans)
        {
            return taxWithhold.findTmpTaxWithhold(_taxWithholdTrans).TaxWithholdRoundOff;
        }

]]></Source>
					</Method>
					<Method>
						<Name>taxWithholdExclude</Name>
						<Source><![CDATA[
        public display TaxWithholdExclude taxWithholdExclude(TaxWithholdTrans _taxWithholdTrans)
        {
            return taxWithhold.findTmpTaxWithhold(_taxWithholdTrans).TaxWithholdExclude;
        }

]]></Source>
					</Method>
					<Method>
						<Name>withholdOriginGross</Name>
						<Source><![CDATA[
        public display NoYes withholdOriginGross(TaxWithholdTrans _taxWithholdTrans)
        {
            return taxWithhold.findTmpTaxWithhold(_taxWithholdTrans).WithholdOriginGross;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            if (taxWithholdTrans.TaxWithholdCurrency && taxWithholdTrans.PaymCurrency)
            {
                TaxWithholdTrans_TaxWithholdExchRate.allowEdit(!(taxWithholdTrans.TaxWithholdCurrency == taxWithholdTrans.PaymCurrency));
            }
            else
            {
                TaxWithholdTrans_TaxWithholdExchRate.allowEdit(false);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>InvoiceAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                SpecTrans specTrans = manager.getSpecTrans(vendTransOpen);
                taxWithhold.calcWithholdAmounts(taxWithholdTrans, specTrans.CrossRate);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InvoiceExemptedAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                SpecTrans specTransLocal = manager.getSpecTrans(vendTransOpen);
                taxWithhold.calcWithholdAmounts(taxWithholdTrans, specTransLocal.CrossRate, false, true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InvoiceNotTaxableByTreaty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                SpecTrans specTrans = manager.getSpecTrans(vendTransOpen);

                taxWithhold.calcNotTaxableByTreaty(taxWithholdTrans, specTrans.CrossRate);
                taxWithhold.calcWithholdAmounts(taxWithholdTrans, specTrans.CrossRate);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InvoiceNotTaxableExpenses</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                SpecTrans specTransLocal = manager.getSpecTrans(vendTransOpen);
                taxWithhold.calcNotTaxableExpenses(taxWithholdTrans, specTransLocal.CrossRate);
                taxWithhold.calcWithholdAmounts(taxWithholdTrans, specTransLocal.CrossRate);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InvoiceTaxAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                SpecTrans specTrans = manager.getSpecTrans(vendTransOpen);
                taxWithhold.calcWithholdAmounts(taxWithholdTrans, specTrans.CrossRate);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InvoiceTaxWithholdAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                SpecTrans specTrans = manager.getSpecTrans(vendTransOpen);

                taxWithhold.changeTaxWithholdAmount(taxWithholdTrans, specTrans.CrossRate);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxWithholdAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // The InvoiceTaxWithholdAmount has been updated based on new TaxWithholdAmount after super().
                SpecTrans specTrans = manager.getSpecTrans(vendTransOpen);
                taxWithhold.changeTaxWithholdAmount(taxWithholdTrans, specTrans.CrossRate);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxWithholdCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                SpecTrans specTrans = manager.getSpecTrans(vendTransOpen);

                if (BrazilParameters::isEnabled() && !taxWithholdTrans.IntersectionWithholdBaseAmount_BR)
                {
                    taxWithholdTrans.IntersectionWithholdBaseAmount_BR = TaxWithhold::getTotalInvoiceTaxWithholdBaseAmount_BR(vendTrans);
                }

                taxWithhold.initFromTaxWithholdCode(taxWithholdTrans, specTrans.CrossRate);

                if (BrazilParameters::isEnabled())
                {
                    TaxWithholdTrans_ds.research(true);
                }

                if (taxWithholdTrans.TaxWithholdCurrency && taxWithholdTrans.PaymCurrency)
                {
                    TaxWithholdTrans_TaxWithholdExchRate.allowEdit(!(taxWithholdTrans.TaxWithholdCurrency == taxWithholdTrans.PaymCurrency));
                }
                else
                {
                    TaxWithholdTrans_TaxWithholdExchRate.allowEdit(false);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                // <GTH>
                if (TaxThaiGovCertificationFeatureChecker::isTaxWithholdEnabled())
                {
                    TaxWithhold::lookupTaxWithholdCodeBasedOnGroups(
                        _formControl,
                        taxWithholdTrans.TaxWithholdGroup,
                        taxWithholdTrans.TaxWithholdItemGroupHeading_TH);

                    return;
                }
                // </GTH>

                switch (originator.TableId)
                {
                    case tableNum(LedgerJournalTrans):
                        LedgerJournalTrans ledgerJournalTrans = element.args().record();
                        taxWithhold.lookupTaxWithholdCode(_formControl, ledgerJournalTrans.TaxWithholdGroup);

                    default:
                        break;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>VendInvoiceHoldHistory</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Writes the data in the table.
        /// </summary>
        public void write()
        {
            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            {
                if (vendInvoiceHoldHistory.HoldBy_PSN && vendInvoiceHoldHistory.SecurityRole_PSN && vendInvoiceHoldHistory.HoldReleasedBy_PSN)
                {
                    super();

                    vendInvoiceHoldHistory.updateReleaseDate(vendTransOpen);
                    vendTransOpen_DueDate1.dateValue(vendInvoiceHoldHistory.CalculatedDueDate_PSN);
                    vendInvoiceHoldHistory.clearDataFields();
                }
                else if (vendInvoiceHoldHistory.HoldBy_PSN && vendInvoiceHoldHistory.SecurityRole_PSN && !VendInvoiceHoldHistory::isPlaceInHold(vendInvoiceHoldHistory.VendInvoiceJour_PSN, vendInvoiceHoldHistory.RefTableId_PSN))
                {
                    vendInvoiceHoldHistory.insert();
                }

                element.setInfoBar(vendTrans.RecId, tableNum(VendTrans));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Adds the filter in the query before executing it.
        /// </summary>
        public void executeQuery()
        {
            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            {
                SysQuery::findOrCreateRange(
                    this.query().dataSourceTable(tableNum(VendInvoiceHoldHistory)),
                    fieldNum(VendInvoiceHoldHistory, VendInvoiceJour_PSN)).value(queryValue(vendInvoiceJour.RecId));

                super();

                element.setInfoBar(vendTrans.RecId, tableNum(VendTrans));
                paymentDelay_PSN_M_editReasonCode.allowEdit(vendInvoiceHoldHistory.InvoicePaymHold_PSN);
                paymentDelay_PSN_SecurityRole_PSN.allowEdit(vendInvoiceHoldHistory.InvoicePaymHold_PSN);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            QueryBuildDataSource vendInvoiceHoldHistoryDS = this.query().dataSourceTable(tableNum(VendInvoiceHoldHistory));

            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            {
                vendInvoiceHoldHistoryDS.addRange(fieldNum(VendInvoiceHoldHistory, RefTableId_PSN)).value(queryValue(tableNum(VendInvoiceJour)));
                vendInvoiceHoldHistoryDS.addRange(fieldNum(VendInvoiceHoldHistory, InvoicePaymHold_PSN)).value(SysQuery::valueNot(NoYes::No));
                vendInvoiceHoldHistoryDS.addRange(fieldNum(VendInvoiceHoldHistory, HoldReleasedBy_PSN)).value(queryValue(''));
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>InvoicePaymHold_PSN</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// Valids the modification of the field.
            /// </summary>
            /// <returns>
            /// true if the modification is correct; otherwise, false.
            /// </returns>
            public boolean validate()
            {
                boolean ret = super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    vendInvoiceHoldHistory.VendInvoiceJour_PSN = vendInvoiceJour.RecId;
                    vendInvoiceHoldHistory.RefTableId_PSN = tableNum(VendInvoiceJour);

                    if (ret)
                    {
                        if (vendInvoiceHoldHistory.InvoicePaymHold_PSN)
                        {
                            // Asked the confirmation message.
                            ret = vendInvoiceHoldHistory.confirmInvoicePlaceOnHold(vendInvoiceJour);
                        }
                        else if (vendInvoiceHoldHistory.RecId && vendInvoiceHoldHistory.HoldReleasedBy_PSN)
                        {
                            // Since the hold was released so update the current record.
                            vendInvoiceHoldHistory.updateReleaseDate(vendTrans);
                            vendInvoiceHoldHistory.update();
                            // Since the due date is updated to refresh the data
                            vendTransOpen_ds.reread();
                            vendTransOpen_ds.refresh();
                            vendTrans_ds.reread();
                            vendTrans_ds.refresh();
                        }
                    }

                    paymentDelay_PSN_M_editReasonCode.allowEdit(ret && vendInvoiceHoldHistory.InvoicePaymHold_PSN);
                    paymentDelay_PSN_SecurityRole_PSN.allowEdit(ret && vendInvoiceHoldHistory.InvoicePaymHold_PSN);

                    if (!paymentDelay_PSN_SecurityRole_PSN.allowEdit() || !vendInvoiceHoldHistory.InvoicePaymHold_PSN)
                    {
                        vendInvoiceHoldHistory_ds.reread();
                        vendInvoiceHoldHistory_ds.refresh();
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SecurityRole_PSN</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            /// <summary>
            /// Performs the filter look up of security table.
            /// </summary>
            /// <param name="_formReferenceControl">
            /// The control on which look up need to perform.
            /// </param>
            /// <returns>
            /// A table buffer containing the filter data.
            /// </returns>
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    ret = VendInvoiceHoldHistory::performFormLookup(_formReferenceControl);
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>VendTrans_IN</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // Do not allow to insert new record when VendTrans is edited.
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                vendTrans_IN_ds.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>VendTransEPRemit_BR</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            // <GBR>
            if (BrazilParameters::isEnabled())
            {
                vendTransEPRemit_BR_ds.linkType(FormLinkType::Active);
            }
            // </GBR>
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>VendTransPayment_BR</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            // <GBR>
            if (BrazilParameters::isEnabled())
            {
                vendTransPayment_BR_ds.linkType(FormLinkType::Active);
            }
            // </GBR>
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>TaxWithholdTransExtensionTH</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (taxWithholdTrans.RecId)
            {
                taxWithholdTransExtensionTH.TaxWithholdTrans = taxWithholdTrans.RecId;
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            isTaxWithholdTransExtensionTHEnabled = TaxWithholdTransExtensionTH::isExtensionEnabled();

            if (isTaxWithholdTransExtensionTHEnabled)
            {
                this.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>InvoiceCurUpdatedWithholdBaseAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                SpecTrans specTrans = manager.getSpecTrans(vendTransOpen);
                taxWithhold.calcWithholdAmounts(taxWithholdTrans, specTrans.CrossRate);

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>VendTrans_W</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU, #isoIN, #isoJP]))
            {
                this.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU, #isoIN, #isoJP]) && vendTrans_W.VendTrans != 0)
            {
                // No-op because a record with an empty FK is not valid
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>SpecTransMarked</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            // The marked transaction data source should never run a validate write operation.
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // The marked transaction data source should never run a write operation.
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>DateUsedToCalcDisc</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.updateCashDiscValues(vendTransOpen);
            element.updateMarkedTotals();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FilterValue_RU</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            manager.createLookupForAgreement(this, tableNum(VendTrans));
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            manager.setFilterValueForAgreement(
                vendTransOpen_ds,
                tableNum(VendTrans),
                filterValue_RU.text());

            vendTransOpen_ds.research();

            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret = super();

            if (ret && this.valueStr())
            {
                PurchAgreementHeader purchAgreementHeader = PurchAgreementHeader::findAgreementId(this.valueStr());

                if (!purchAgreementHeader || purchAgreementHeader.VendAccount != manager.getCustVendAccountNum())
                {
                    ret = false;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OverviewTab</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            CustVendTransCashDisc applicableCustVendTransCashDisc = manager.findApplicableCustVendTransCashDisc(vendTransOpen);
            vendTransCashDisc_ds.positionToRecordByValue(fieldNum(VendTransCashDisc, RecId), int642Str(applicableCustVendTransCashDisc.RecId));

            element.updateCashDiscValues(vendTransOpen);
            element.updateMarkedTotals();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectAllButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.markAllSelected();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ClearAllButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.clearAll();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MarkedOnly</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.filterGridBySpecTransMarked(JoinMode::InnerJoin);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AllTransactions</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.filterGridBySpecTransMarked(JoinMode::OuterJoin);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustVendTransReorgButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            VendTransOpen localVendTransOpen;
            boolean proceed = true;
            int dataSourcePosition = vendTransOpen_ds.getPosition();

            [localVendTransOpen] = SpecTrans::findMarkedVendPaymentGroup(vendTransOpen.AccountNum, vendTrans.company(), originator);

            if (localVendTransOpen)
            {
                switch (Box::yesNo("@SYS134712", DialogButton::Yes))
                {
                    case DialogButton::Yes:
                        element.args().lookupRecord(localVendTransOpen);
                        vendTransOpen_ds.research();

                        vendTrans.VendPaymentGroup = '';

                        vendTransOpen_ds.setPosition(dataSourcePosition);

                        vendTrans_ds.research();
                        vendTrans_ds.refresh();
                        break;

                    case DialogButton::No:
                        proceed = false;
                        break;
                }
            }

            if (proceed)
            {
                if (manager.reorganizeMarkedTrans())
                {
                    vendTransOpen_ds.executeQuery();

                    element.updateDesignDynamic();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MarkPayment</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (manager.getMarkedPrimaryPayment(vendTransOpen) == NoYes::Yes)
            {
                // Remove primary designation only - does not unmark transaction
                manager.updateMarkedPrimaryPayment(vendTransOpen, NoYes::No);
                isPrimaryPaymentImageNeeded = NoYes::No;
            }
            else
            {
                if (SpecTrans::existMarkedPayment(originator.company(), originator.TableId, originator.RecId))
                {
                    throw error("@SYS67734");
                }
                if (vendTransOpen.RecId)
                {
                    if (manager.getTransMarked(vendTransOpen) == NoYes::No)
                    {
                        // Mark transaction for settlement
                        showError = NoYes::No;
                        manager.updateTransMarked(vendTransOpen, NoYes::Yes);
                        showError = NoYes::Yes;
                    }

                    // Set as primary payment
                    manager.updateMarkedPrimaryPayment(vendTransOpen, NoYes::Yes);
                    isPrimaryPaymentImageNeeded = NoYes::Yes;
                }
            }

            vendTransOpen_ds.refresh();

            // Raise a notification on the edit method associated with the MarkTrans checkbox control.
            markedObservableLink.markChanged();

            // Update dynamic controls & refresh form as auto-redraw is not triggered
            element.updateDesignDynamic();
            element.updateMarkedTotals();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FilterByPurchOrder_CZ</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.filterByPurchOrder_CZ();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxWithholdSettleTrans_IN</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            checkStatus = true;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MarkTrans</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.updateMarkedTotals();

            if (!this.value())
            {
                isPrimaryPaymentImageNeeded = NoYes::No;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>VendTrans_Invoice</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args args = new Args(element);
            args.record(vendTrans);

            MenuFunction menuFunction = new MenuFunction(menuItemDisplayStr(VendTrans), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SettleExchRate</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.updateMarkedTotals();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>VendTransCashDisc_CashDiscAmount1</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid = super();

            if (isValid)
            {
                isValid = manager.validateCashDiscAmount(vendTransOpen, VendTransCashDisc_CashDiscAmount1.realValue());
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>possibleCashDiscPaymCur</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid = super();

            if (isValid)
            {
                CashDiscAmount cashDiscAmountTransCur = manager.convertAmountPaymCurToAmountTransCur(vendTransOpen, this.realValue());
                isValid = manager.validateCashDiscAmount(vendTransOpen, cashDiscAmountTransCur);
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>VendTransOpen_DueDate1</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
            // <GBR>
            if (BrazilParameters::isEnabled())
            {
                vendTransEPRemit_BR.RemitOccCode = EPRemitOccCode_BR::Code_03;
            }
            // </GBR>

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PaymentDelay_PSN_M_editReasonCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Constructs a lookup for the reason code field.
        /// </summary>
        public void lookup()
        {
            ReasonFormTable::reasonCodeLookup(
                this,
                LedgerJournalACType::Vend,
                LedgerJournalACType::Vend,
                true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CashDiscTab</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            boolean allowEdit = vendTransOpen.RecId != 0;

            vendTransCashDisc_ds.allowCreate(allowEdit);
            vendTransCashDisc_ds.allowDelete(allowEdit);
            vendTransCashDisc_ds.allowEdit(allowEdit);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxWithholdTrans_TaxWithholdExchRate</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (!TaxWithholdTrans.TaxWithholdExchRate)
            {
                throw error(strfmt("@SYS84378", "@Tax_WithholdTax:TaxWithholdExchRate"));
            }
            else
            {
                SpecTrans specTrans = manager.getSpecTrans(vendTransOpen);
                taxWithhold.changeTaxWithholdExchangeRate(taxWithholdTrans, specTrans.CrossRate);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UpdateNow</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            // Close the current form before processing so info messages will be displayed on the parent form.
            element.close(false);

            boolean canSettle = element.canSettle();

            if (canSettle)
            {
                element.doSettlement();
            }

            element.refreshCaller();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SettleRemainder</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            Args args = new Args();
            args.caller(element);

            settlementWriteOffUIController.openSettlementWriteOffDialog(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<AllowPreLoading>No</AllowPreLoading>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>VendTransOpen</Name>
			<Table>VendTransOpen</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDiscNoticeDeadline</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCImportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscountLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EPBarCodeInfo_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjUnrealizedReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineAmount_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineAmountPaymCur_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GTARecoverableAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestAmount_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestAmountPaymCur_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastInterestDateDummy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PossibleCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Settlement_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxComponentTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAmountOrigin_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdRegNumber_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdStatus_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSAmount_IN</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSAmount_IN</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseCashDisc</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendTrans</Name>
			<Table>VendTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApprovedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Arrival</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCImportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Cancel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Closed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CompanyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsessionSettlementId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Correct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUROTriangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ExchAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustmentReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>LastExchAdj</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRateReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>LastSettleDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>LastSettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>OffsetRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>PostingChangeVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>PostingProfileApprove</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>PostingProfileCancel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>PostingProfileClose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>PostingProfileReOpen</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PromissoryNoteID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PromissoryNoteSeqNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PromissoryNoteStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RBOVendTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDateComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyCrossRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>sequenceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SettleAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SettleAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Settlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleTax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleTax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Tax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Tax1099Date</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Fields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Tax1099Num</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoicePurchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ThirdPartyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymentGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>VendTransOpen</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendTransCashDisc</Name>
			<Table>VendTransCashDisc</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CashDiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscDue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Manual</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>VendTransOpen</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TaxWithholdTrans</Name>
			<Table>TaxWithholdTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CanBeReversed_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompetenceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransPaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendTransOpenRecId_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExemptedAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntersectionWithholdBaseAmount_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceBaseAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceExemptedAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceNotTaxableByTreaty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceNotTaxableExpenses</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceTaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceTaxWithholdAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceWithholdBaseAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJourTransRecId_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NotTaxableByTreaty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NotTaxableExpenses</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartyId_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymExemptedAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymNotTaxableByTreaty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymNotTaxableExpenses</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymTaxWithholdAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymVendor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymWithholdBaseAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Posted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCustVendTransRecId_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Settled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettlementVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Source_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SpecTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxExemptedAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxNotTaxableByTreaty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxNotTaxableExpenses</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRepCounter_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxTaxWithholdAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdBaseAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdComponentGroupTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdComponentTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdIsSelected_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdPeriod_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdPeriodHead_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdSlipNum_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorType_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransPaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WithholdBaseAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAccumulatedBaseAmount</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>VendTransOpen</JoinSource>
			<AllowCheck>No</AllowCheck>
			<Index>VoucherDateIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendTable</Name>
			<Table>VendTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankTransTypeCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankOrderOfPayment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BidOnly</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthCountyCode_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthPlace</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Blocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BlockedReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashAccountingRegime_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCMNum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangeRequestAllowOverride</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangeRequestEnabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangeRequestOverride</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CISCompanyRegNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CISNationalInsuranceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CISStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CISUniqueTaxPayerRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CISVerificationDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CISVerificationNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClearingPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CNAE_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CNPJCPFNum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegister</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegisterInsetNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegisterSection</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyChainId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyIdSiret</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyNAFCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsDay_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditMax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditRating</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Curp_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DBA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultInventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiotCountryCode_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisabledOwned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EthnicOriginId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FactoringAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FemaleOwned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignEntityIndicator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignResident_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignTaxRegistration_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightZone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Heir_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HUBZone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ICMSContributor_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IENum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>INSSCEI_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPaymFeeCovered_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsResident_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemBuyerGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineOfBusinessId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LocallyOwned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LvPaymTransCodes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainContactWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MandatoryVatDate_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchingPolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Memo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinorityOwned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NameControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Nationality_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NIT_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NonTaxable_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>numberSequenceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OneTimeVendor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrganizationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrgId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDayId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymTermId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchAmountPurchaseOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchCalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchPoolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegNum_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResidenceForeignCountryRegionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Rfc_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SecondTIN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SegmentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SeparateDivisionId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeOnDlvAddress_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SmallBusiness</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StateInscription_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StructDepartment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubsegmentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuppItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TAMRebateGroupID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Fields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099NameChoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RegNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Reports</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxIDType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdVendorType_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitedVATInvoice_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOperationCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATPartnerKind_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATTaxAgent_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendConsumption_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendExceptionGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendIncomeCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceDeclaration_IS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPriceToleranceGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VeteranOwned</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>W9</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>W9Included</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>YourAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignerId_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PresenceType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorPortalAdministratorRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymFeeGroup_JP</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>VendTransOpen</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>Edit</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendInvoiceHoldHistory</Name>
			<Table>VendInvoiceHoldHistory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CalculatedDueDate_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HoldBy_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HoldReleaseDate_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HoldReleasedBy_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HoldStartDate_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoicePaymHold_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonTableRef_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SecurityRole_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceJour_PSN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>VendInvoiceJour</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendInvoiceJour</Name>
			<Table>VendInvoiceJour</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AttorneyDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttorneyId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttorneyIssuedName_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCImportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsigneeAccount_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsignorAccount_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsTarget_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractNum_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectionType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostLedgerVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountryRegionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryAddress_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryDate_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryName_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvAddress_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDiscMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FacturedFully_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocumentType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedDueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyLedgerVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanySalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatAddValue_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatDispatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatFulfillmentDate_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventBaileeReceiptReportId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRegister_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRoundOff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceStatus_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemBuyerGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Listcode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogisticsElectronicAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NonRealRevenue_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceCode_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>numberSequenceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsessionId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParmId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDayId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Proforma</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchAgreementHeader_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchaseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchReceiptDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonTableRef_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReturnItemNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseCharge_UK</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPurchOperationType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeOnDlvAddress_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StateInvoicePrinted_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumMarkupMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoicePurchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPrintOnInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRoundOff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSetoffVoucher_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSpecifyByLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransitControlVoucher_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransportationDocument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Triangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitedVATInvoice_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOnPayment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendConsInvoice_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendFinalUser_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceDeclaration_IS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorRequestedWorkerEmail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymentGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Volume</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Weight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WhoIsAuthor_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ForeignerId_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_PresenceType_BR</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>VendTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendTrans_IN</Name>
			<Table>VendTrans_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransRefRecId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>VendTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendTransEPRemit_BR</Name>
			<Table>VendTransEPRemit_BR</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LayoutGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitOccCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetOccCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendSettleRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransOpenRefRecId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>VendTransOpen</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendTransPayment_BR</Name>
			<Table>VendTransPayment_BR</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EPBarCodeInfo_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EPPaymentType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EPPaymentWay_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypedLine_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendFineSetup_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInterestSetup_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTrans</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>VendTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TaxWithholdTransExtensionTH</Name>
			<Table>TaxWithholdTransExtensionTH</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingCurExpenseAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountingCurUpdatedWithholdBaseAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpenseLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HideInReports</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceCurExpenseAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceCurUpdatedWithholdBaseAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransCurExpenseAmount</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TaxWithholdTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>VendTrans_W</Name>
			<Table>VendTrans_W</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AdvancePayment_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyTransferId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BlockTaxReversal_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectReporting_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimensionReporting_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmplAccount_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GTARecoverableAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymFeeTransactionCurrencyAmount_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrepaymentFactureId_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefVoucher_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RTax25Amortisation_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceTaxPOTStatus_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Settlement_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxComponentTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxReclaimedBaseAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxReversedBaseAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAmountOrigin_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendConsInvoice_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTrans</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>VendTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SpecTransMarked</Name>
			<Table>SpecTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Balance01</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscToTake</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CrossRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorCodePayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FullSettlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SelectedDateUsedToCalcCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SpecCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SpecRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SpecTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>VendTransOpen</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@CashManagement:SettleTransactions</Caption>
		<DialogSize xmlns="">Full</DialogSize>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Dialog</Style>
		<TitleDataSource xmlns="">VendTrans</TitleDataSource>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderGroup</Name>
				<ElementPosition>1374389532</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>SettlePostingTypeDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SettlePostingType</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editSettlePostingType</DataMethod>
								<Label>@SYS114020</Label>
								<ShowLabel>No</ShowLabel>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>SettlePostingDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editSettlePostingDate</DataMethod>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
						<Caption>@SYS114020</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DateUsedToCalcDiscGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>DateTypeUsedToCalcDisc</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editDateTypeUsedToCalcDisc</DataMethod>
								<ShowLabel>No</ShowLabel>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>DateUsedToCalcDisc</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editDateUsedToCalcDisc</DataMethod>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
						<Caption>@CashManagement:DateUsedForCalcDisc</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>FilterByAgreementGroup</Name>
						<CountryRegionCodes>RU</CountryRegionCodes>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FilterValue_RU</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>Range</ExtendedDataType>
								<LookupButton>Always</LookupButton>
								<ReplaceOnLookup>No</ReplaceOnLookup>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
						</Controls>
						<Caption>@SYS4082001</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>TabControl</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1717986916</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>OverviewTab</Name>
						<ElementPosition>984263336</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>GridActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>SelectionButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>SelectAllButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<NeededPermission>Update</NeededPermission>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<Text>@CashManagement:MarkSelectedForSettlement</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ClearAllButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<NeededPermission>Update</NeededPermission>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Text>@CashManagement:UnmarkAll</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>ShowMarked</Name>
												<Type>MenuButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>MarkedOnly</Name>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<MultiSelect>Yes</MultiSelect>
														<Text>@CashManagement:ShowMarkedOnly</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>AllTransactions</Name>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<MultiSelect>Yes</MultiSelect>
														<Text>@CashManagement:ShowMarkedAll</Text>
													</AxFormControl>
												</Controls>
												<MultiSelect>Yes</MultiSelect>
												<Text>@CashManagement:ShowMarked</Text>
											</AxFormControl>
										</Controls>
										<DataSource>VendTransOpen</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>GridActionPaneButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>CustVendTransReorgButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ConfigurationKey>PaymSched</ConfigurationKey>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Update</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@CashManagement:ApplyPaymSchedule</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>QueryButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>LedgerTransVoucher1</Name>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<DataSource>VendTrans</DataSource>
														<MenuItemName>LedgerTransVoucher1</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>VendSettlement</Name>
														<ElementPosition>1288490187</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<DataSource>VendTrans</DataSource>
														<MenuItemName>VendSettlement</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>VendSpecTransOverview</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1717986916</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<DataSource>VendTransOpen</DataSource>
														<MenuItemName>VendSpecTransOverview</MenuItemName>
													</AxFormControl>
												</Controls>
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS1657</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>MarkPayment</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Update</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@CashManagement:MarkAsPrimaryPayment</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>FilterByPurchOrder_CZ</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ConfigurationKey>CzCustVendAdvanceInvoices</ConfigurationKey>
												<CountryRegionCodes>CZ</CountryRegionCodes>
												<ElementPosition>1932735281</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Update</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@GLS111738</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>PSAPwpInvoiceInquiry</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1968526675</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>VendTrans</DataSource>
												<MenuItemName>PSAPwpInvoiceInquiry</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>VendConsInvoiceSettle_JP</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ConfigurationKey>LedgerBasic</ConfigurationKey>
												<CountryRegionCodes>JP</CountryRegionCodes>
												<ElementPosition>2058005160</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>VendConsInvoiceSettleQuery</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<DataSource>VendTransOpen</DataSource>
														<MenuItemName>VendConsInvoiceSettleQuery_JP</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
												</Controls>
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@GLS60235</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TaxWithholdSettleTrans_IN</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2102744402</ElementPosition>
												<Enabled>No</Enabled>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>VendTrans</DataSource>
												<MenuItemName>TaxWithholdSettleTrans_IN</MenuItemName>
											</AxFormControl>
										</Controls>
										<DataSource>VendTransOpen</DataSource>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>OverviewGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>306783378</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>Ismarked</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>178956970</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>14</Height>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>14</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayTransMarkedByOtherSpec</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<Label>@SYS21707</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>PaymentSpec</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>268435455</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>14</Height>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>14</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayPrimaryPaymentMarked</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<Label>@SYS68092</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>MarkTrans</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>357913940</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>editMarkTrans</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<Label>@SYS19120</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>FullSettlement</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>FullSettlement</ConfigurationKey>
										<ElementPosition>447392425</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>editFullSettlement</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<Label>@CashManagement:FullySettle</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendTrans_Invoice</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>displayTaxTransactionId_IN</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1073741820</ElementPosition>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayTaxTransactionId_IN</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<Label>@SYS25395</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>VendTransReferenceVoucher_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>671088637</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>VendTransReferenceVoucher_IN_Voucher</Name>
												<DataRelationPath>VendTransReference</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>VendTrans_IN</DataSource>
										<Label>@GLS222673</Label>
										<ReferenceField>VendTransRefRecId</ReferenceField>
										<ReplacementFieldGroup>VendTransReferenceVoucher_IN</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>VendTransOpen_DueDate</Name>
										<ElementPosition>984263335</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DueDate</DataField>
										<DataSource>VendTransOpen</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>VendTransOpen_CashDiscdate1</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>495573147</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayCashDiscDate</DataMethod>
										<DataSource>VendTransOpen</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendTransOpen_Amount</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1252698790</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCur</DataField>
										<DataSource>VendTransOpen</DataSource>
										<Label>@SYS12227</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendTrans_CurrencyCode</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>VendTrans</DataSource>
										<Label>@SYS7572</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SettleField</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1521134245</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editSettleAmountCur</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<Label>@SYS114018</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>settlePaymCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editSettleAmountPaymCur</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<Label>@SYS114017</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SettleExchRate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655760</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editCrossRate</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>PromissoryNoteGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>VendPromissoryNote</ConfigurationKey>
										<ElementPosition>1163220305</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PromissoryNoteGroup_PromissoryNoteID</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>PromissoryNoteID</DataField>
												<DataSource>VendTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormIntegerControl">
												<Name>PromissoryNoteGroup_PromissoryNoteSeqNum</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Integer</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>PromissoryNoteSeqNum</DataField>
												<DataSource>VendTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>PromissoryNoteGroup_PromissoryNoteStatus</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>PromissoryNoteStatus</DataField>
												<DataSource>VendTrans</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PromissoryNoteGroup_BankRemittanceFileId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>BankRemittanceFileId</DataField>
												<DataSource>VendTrans</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>PromissoryNote</DataGroup>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankLCNumber</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>BankDocument</ConfigurationKey>
										<Type>String</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayBankLCNumber</DataMethod>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>BankLCShipmentLineNum</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>BankDocument</ConfigurationKey>
										<Type>Integer</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayBankLCShipmentLineNum</DataMethod>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ConsId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>JP</CountryRegionCodes>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>dispConsId_JP</DataMethod>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>displayTaxBranchDimension_TH</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>760567122</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayTaxBranchDimension</DataMethod>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>VendTransOpen_TaxWithholdStatus_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>2146697214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>TaxWithholdStatus_IN</DataField>
										<DataSource>VendTransOpen</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendTransOpen_TaxWithholdAmountOrigin_IN</Name>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>2147024894</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxWithholdAmountOrigin_IN</DataField>
										<DataSource>VendTransOpen</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendTransOpen_TDSAmount_IN</Name>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>2147090430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TDSAmount_IN</DataField>
										<DataSource>VendTransOpen</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendTransOpen_TCSAmount_IN</Name>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>2147155966</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TCSAmount_IN</DataField>
										<DataSource>VendTransOpen</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankSpecAccountId_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>2147265192</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayBankSpecAccountId_RU</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<Label>@GLS107795</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankEntryAccountID_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>2147374418</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayBankEntryAccountID_RU</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<Label>@GLS114400</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FiscalEstablishmentId_BR</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>BR</CountryRegionCodes>
										<ElementPosition>850045607</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>fiscalEstablishmentId_BR</DataMethod>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>VendTransOpen</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GridFooter</Name>
								<Pattern>Custom</Pattern>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>CashDiscountTotals</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ExtendedStyle>tabularFields</ExtendedStyle>
										<Pattern>TabularFields</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>CashDiscCaption</Name>
												<ExtendedStyle>tabularFields_title</ExtendedStyle>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Group</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>CashDiscCaptionText</Name>
														<AllowEdit>No</AllowEdit>
														<ExtendedStyle>tabularFields_titleText</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@SYS4376</Text>
													</AxFormControl>
												</Controls>
												<AllowUserSetup>No</AllowUserSetup>
												<ArrangeMethod>None</ArrangeMethod>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>CashDiscHeaders</Name>
												<ExtendedStyle>tabularFields_rowHeader</ExtendedStyle>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>CashDiscColumnZero</Name>
														<AllowEdit>No</AllowEdit>
														<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text></Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>CashDiscAmountHeader</Name>
														<AllowEdit>No</AllowEdit>
														<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@CashManagement:CashDiscountAmount</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>CashDiscTakenHeader</Name>
														<AllowEdit>No</AllowEdit>
														<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@CashManagement:CashDiscountTaken</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>CashDiscToTakeHeader</Name>
														<AllowEdit>No</AllowEdit>
														<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@CashManagement:CashDiscountToTake</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>CashDiscFullSettlementHeader</Name>
														<AllowEdit>No</AllowEdit>
														<ConfigurationKey>FullSettlement</ConfigurationKey>
														<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@CashManagement:CashDiscountFullSettlement</Text>
													</AxFormControl>
												</Controls>
												<AllowUserSetup>No</AllowUserSetup>
												<ArrangeMethod>None</ArrangeMethod>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>CashDiscTransCur</Name>
												<ExtendedStyle>tabularFields_row</ExtendedStyle>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>CashDiscTransCurLabel</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text></Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>VendTransCashDisc_CashDiscAmount1</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>660764196</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>editCashDiscAmount</DataMethod>
														<DataSource>VendTransOpen</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>CashDiscTaken</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1156337343</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>displayCashDiscTaken</DataMethod>
														<DataSource>VendTransOpen</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>CashDiscToTake</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1486719441</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>editCashDiscToTake</DataMethod>
														<DataSource>VendTransOpen</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>FullSettlementCashDisc</Name>
														<ConfigurationKey>FullSettlement</ConfigurationKey>
														<ElementPosition>1817101539</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>displayFullSettlementCashDisc</DataMethod>
														<DataSource>VendTransOpen</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
												</Controls>
												<AllowUserSetup>No</AllowUserSetup>
												<ArrangeMethod>None</ArrangeMethod>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>CashDiscPaymCur</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ExtendedStyle>tabularFields_row</ExtendedStyle>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>CashDiscCurLabel</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text></Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>possibleCashDiscPaymCur</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>825955245</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>editCashDiscAmountPaymCur</DataMethod>
														<DataSource>VendTransOpen</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>CashDiscTakenPaymCur</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>1321528392</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>displayCashDiscTakenPaymCur</DataMethod>
														<DataSource>VendTransOpen</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>CashDiscToTakePaymCur</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1651910490</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>editCashDiscToTakePaymCur</DataMethod>
														<DataSource>VendTransOpen</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>FullSettlementCashDiscPaymCur</Name>
														<ConfigurationKey>FullSettlement</ConfigurationKey>
														<ElementPosition>1982292588</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>displayFullSettlementCashDiscPaymCur</DataMethod>
														<DataSource>VendTransOpen</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
												</Controls>
												<AllowUserSetup>No</AllowUserSetup>
												<ArrangeMethod>None</ArrangeMethod>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>CashDiscUseCashDisc</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ExtendedStyle>tabularFields_row</ExtendedStyle>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>UseCashDiscLabel</Name>
														<AllowEdit>No</AllowEdit>
														<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@SYS67801</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>VendTransOpen_UseCashDisc</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>536870910</ElementPosition>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>UseCashDisc</DataField>
														<DataSource>VendTransOpen</DataSource>
														<DisplayLength>1</DisplayLength>
														<DisplayLengthMode>Fixed</DisplayLengthMode>
														<ShowLabel>No</ShowLabel>
														<Items />
													</AxFormControl>
												</Controls>
												<AllowUserSetup>No</AllowUserSetup>
												<ArrangeMethod>None</ArrangeMethod>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>CashDiscFooter</Name>
												<ExtendedStyle>tabularFields_rowFooter</ExtendedStyle>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<AllowUserSetup>No</AllowUserSetup>
												<ArrangeMethod>None</ArrangeMethod>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<AllowUserSetup>Restricted</AllowUserSetup>
										<ArrangeMethod>None</ArrangeMethod>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InvoiceDetails</Name>
										<ExtendedStyle>tabularFields</ExtendedStyle>
										<Pattern>TabularFields</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>InvoiceDetailsCaption</Name>
												<ExtendedStyle>tabularFields_title</ExtendedStyle>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Group</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>InvoiceDetailsCaptionText</Name>
														<AllowEdit>No</AllowEdit>
														<ExtendedStyle>tabularFields_titleText</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@SYS12128</Text>
													</AxFormControl>
												</Controls>
												<AllowUserSetup>No</AllowUserSetup>
												<ArrangeMethod>None</ArrangeMethod>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>InvoiceDetailsHeaders</Name>
												<ExtendedStyle>tabularFields_rowHeader</ExtendedStyle>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>InvoiceDetailsDateHeader</Name>
														<AllowEdit>No</AllowEdit>
														<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@SYS7402</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>InvoiceDetailsCompanyHeader</Name>
														<AllowEdit>No</AllowEdit>
														<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@GeneralLedger:Company</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>InvoiceDetailsVoucherHeader</Name>
														<AllowEdit>No</AllowEdit>
														<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@SYS12371</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStaticTextControl">
														<Name>InvoiceDetailsDescriptionHeader</Name>
														<AllowEdit>No</AllowEdit>
														<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
														<Type>StaticText</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@SYS13566</Text>
													</AxFormControl>
												</Controls>
												<AllowUserSetup>No</AllowUserSetup>
												<ArrangeMethod>None</ArrangeMethod>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>InvoiceDetailsValues</Name>
												<ExtendedStyle>tabularFields_row</ExtendedStyle>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>VendTrans_TransDate</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>894784850</ElementPosition>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>TransDate</DataField>
														<DataSource>VendTrans</DataSource>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>VendTrans_Company</Name>
														<ElementPosition>805306365</ElementPosition>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>dataAreaId</DataField>
														<DataSource>VendTrans</DataSource>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>VendTrans_Voucher</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>626349395</ElementPosition>
														<Skip>Yes</Skip>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>Voucher</DataField>
														<DataSource>VendTrans</DataSource>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>Txt</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>1533916890</ElementPosition>
														<Skip>Yes</Skip>
														<Top>0</Top>
														<TopMode>BottomEdge</TopMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>Txt</DataField>
														<DataSource>VendTrans</DataSource>
														<DisplayLength>20</DisplayLength>
														<DisplayLengthMode>Fixed</DisplayLengthMode>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
												</Controls>
												<AllowUserSetup>No</AllowUserSetup>
												<ArrangeMethod>None</ArrangeMethod>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>InvoiceDetailsFooter</Name>
												<ExtendedStyle>tabularFields_rowFooter</ExtendedStyle>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<AllowUserSetup>No</AllowUserSetup>
												<ArrangeMethod>None</ArrangeMethod>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<AllowUserSetup>Restricted</AllowUserSetup>
										<ArrangeMethod>None</ArrangeMethod>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GridFooterFields</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Pattern>FieldsFieldGroups</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Top>0</Top>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>InterestFineAmount_BR</Name>
												<CountryRegionCodes>BR</CountryRegionCodes>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>VendTransOpen_InterestAmount_BR</Name>
														<CountryRegionCodes>BR</CountryRegionCodes>
														<ElementPosition>2037356274</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>InterestAmount_BR</DataField>
														<DataSource>VendTransOpen</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>VendTransOpen_FineAmount_BR</Name>
														<CountryRegionCodes>BR</CountryRegionCodes>
														<ElementPosition>2092419960</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>FineAmount_BR</DataField>
														<DataSource>VendTransOpen</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
												</Controls>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>VATTaxAgent_RU</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<CountryRegionCodes>RU</CountryRegionCodes>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>VatTaxAgentAmount</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Skip>Yes</Skip>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>vatTaxAgentAmount_RU</DataMethod>
														<DataSource>VendTransOpen</DataSource>
														<Label>@GLS112876</Label>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
												</Controls>
												<DataSource>VendTransOpen</DataSource>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<ColumnsMode>Fill</ColumnsMode>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<Columns>3</Columns>
								<Caption>@SYS23823</Caption>
								<FrameOptionButton>Hide</FrameOptionButton>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<DataSource>VendTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GeneralTab</Name>
						<ElementPosition>1364546899</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LedgerGroup</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Ledger</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Ledger_TransType</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransType</DataField>
										<DataSource>VendTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Ledger_Correct</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Correct</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Ledger_PostingProfile</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PostingProfile</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Ledger</DataGroup>
								<DataSource>VendTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Invoice</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_Invoice</Name>
										<ElementPosition>390451572</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Invoice_Approved</Name>
										<ElementPosition>585677358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Approved</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Invoice_Approver</Name>
										<ElementPosition>780903144</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Invoice_Approver_PersonnelNumber</Name>
												<DataRelationPath>Approver_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>VendTrans</DataSource>
										<ReferenceField>Approver</ReferenceField>
										<ReplacementFieldGroup>PersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Invoice_ApprovedDate</Name>
										<ElementPosition>976128930</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ApprovedDate</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>Invoice_InvoiceReleaseDate</Name>
										<ElementPosition>1171354716</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceReleaseDate</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_ReleaseDateComment</Name>
										<ElementPosition>1366580502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReleaseDateComment</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_DocumentNum</Name>
										<ElementPosition>1561806288</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentNum</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Invoice_DocumentDate</Name>
										<ElementPosition>1757032074</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentDate</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice_TaxInvoicePurchId</Name>
										<ElementPosition>1952257860</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxInvoicePurchId</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendTrans_W_PrepaymentFactureId_W</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2049870753</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PrepaymentFactureId_W</DataField>
										<DataSource>VendTrans_W</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>VendTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HoldsGroup</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>VendTable_Blocked</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Blocked</DataField>
										<DataSource>VendTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>VendTable_ReleaseDate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BlockedReleaseDate</DataField>
										<DataSource>VendTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>VendTrans_InvoiceReleaseDate</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceReleaseDate</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS128407</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ExchangeRates</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ExchAdjustment_LastExchAdj</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LastExchAdj</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ExchangeRates_LastExchAdjRate</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LastExchAdjRate</DataField>
										<DataSource>VendTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ExchangeRates_LastExchAdjVoucher</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LastExchAdjVoucher</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ExchangeRates_LastExchAdjRateReporting</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LastExchAdjRateReporting</DataField>
										<DataSource>VendTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>ExchangeRates</DataGroup>
								<DataSource>VendTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ServiceTax_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>894784852</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>VendTrans_IN_ServiceTaxPOTStatus</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ServiceTaxPOTStatus_IN</DataField>
										<DataSource>VendTrans_W</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>VendTrans_IN_BlockTaxReversal</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BlockTaxReversal_IN</DataField>
										<DataSource>VendTrans_W</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@GLS5006</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Agreement_RU</Name>
								<CountryRegionCodes>RU</CountryRegionCodes>
								<ElementPosition>1342177277</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Agreement_RU_M_agreementId_RU</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>agreementId_RU</DataMethod>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Agreement_RU_M_agreementDocumentTitle_RU</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>agreementDocumentTitle_RU</DataMethod>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Agreement_RU</DataGroup>
								<DataSource>VendTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CurrencyDeal_RU</Name>
								<CountryRegionCodes>RU</CountryRegionCodes>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>displayBankCurrencyDealCourse_RU</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayBankCurrencyDealCourse_RU</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>displayAgreementHeaderDeal_RU</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>939524092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayAgreementHeaderDeal_RU</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<Label>@GLS114396</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>displayVendDealAccount_RU</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayVendDealAccount_RU</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<Label>@GLS114384</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>BankAdvancedTransType</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayBankAdvancedTransType_RU</DataMethod>
										<DataSource>VendTransOpen</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>displayTransferCurrency_RU</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1879048185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayTransferCurrency_RU</DataMethod>
										<DataSource>VendTransOpen</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS53047</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<DataSource>VendTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PaymentTab</Name>
						<ElementPosition>1744830462</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymentGroup</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>VendTransOpen_DueDate1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>PublicSector</ConfigurationKey>
										<ElementPosition>805306366</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DueDate</DataField>
										<DataSource>VendTransOpen</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>PaymTerm</Name>
										<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
										<ElementPosition>1207959549</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Group_Group</Name>
												<ElementPosition>954437176</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>VendInvoiceHoldHistory_InvoicePaymHold_PSN</Name>
														<ElementPosition>954437176</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InvoicePaymHold_PSN</DataField>
														<DataSource>VendInvoiceHoldHistory</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>VendInvoiceHoldHistory_MenuItem</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<DataSource>VendInvoiceJour</DataSource>
														<MenuItemName>VendInvoiceHoldHistory</MenuItemName>
														<Style>Link</Style>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalWrap</ArrangeMethod>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>PaymentDelay_PSN</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>PaymentDelay_PSN_SecurityRole_PSN</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ReferenceGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>PaymentDelay_PSN_SecurityRole_PSN_Name</Name>
																<DataRelationPath>SelectedRole</DataRelationPath>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
															</AxFormControl>
														</Controls>
														<DataSource>VendInvoiceHoldHistory</DataSource>
														<ReferenceField>SecurityRole_PSN</ReferenceField>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PaymentDelay_PSN_M_editReasonCode</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1288490187</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>editReasonCode</DataMethod>
														<DataSource>VendInvoiceHoldHistory</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PaymentDelay_M_displayReasonDescription</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1717986916</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>displayReasonDescription</DataMethod>
														<DataSource>VendInvoiceHoldHistory</DataSource>
														<Label>@SPS1817</Label>
													</AxFormControl>
												</Controls>
												<DataGroup>InvoicePaymHold</DataGroup>
												<DataSource>VendInvoiceHoldHistory</DataSource>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<DataSource>VendInvoiceHoldHistory</DataSource>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<Caption>@SYS828</Caption>
								<DataSource>VendTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Payment</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Payment_PaymMode</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymMode</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Payment_PaymSpec</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymSpec</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Payment_PaymReference</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymReference</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Payment_Prepayment</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Prepayment</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Payment_BankCentralBankPurposeText</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankPurposeText</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Payment_BankCentralBankPurposeCode</Name>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankPurposeCode</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendTrans_VendPaymentGroup1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>VendPaymentGroup</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendTrans_EPPaymentType_BR</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1988410783</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EPPaymentType_BR</DataField>
										<DataSource>VendTransPayment_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendTrans_EPPaymentWay_BR</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2067947214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EPPaymentWay_BR</DataField>
										<DataSource>VendTransPayment_BR</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS828</Caption>
								<DataSource>VendTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ElectronicPayment</Name>
								<CountryRegionCodes>BR</CountryRegionCodes>
								<ElementPosition>1670265057</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ElectronicPayment_BankInvoiceId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankInvoiceId</DataField>
										<DataSource>VendTransEPRemit_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ElectronicPayment_RemitOccCode</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RemitOccCode</DataField>
										<DataSource>VendTransEPRemit_BR</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ElectronicPayment_RemitDate</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RemitDate</DataField>
										<DataSource>VendTransEPRemit_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ElectronicPayment_BankAccountId</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankAccountId</DataField>
										<DataSource>VendTransEPRemit_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ElectronicPayment_JournalNum</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalNum</DataField>
										<DataSource>VendTransEPRemit_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ElectronicPayment_LayoutGroupId</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LayoutGroupId</DataField>
										<DataSource>VendTransEPRemit_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ElectronicPayment_RetOccCode</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RetOccCode</DataField>
										<DataSource>VendTransEPRemit_BR</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ElectronicPayment_RetDate</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RetDate</DataField>
										<DataSource>VendTransEPRemit_BR</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ElectronicPayment</DataGroup>
								<DataSource>VendTransEPRemit_BR</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Promissorynote</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Promissorynote_PromissoryNoteID</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PromissoryNoteID</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>Promissorynote_PromissoryNoteSeqNum</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PromissoryNoteSeqNum</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Promissorynote_PromissoryNoteStatus</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PromissoryNoteStatus</DataField>
										<DataSource>VendTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Promissorynote_BankRemittanceFileId</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankRemittanceFileId</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>PromissoryNote</DataGroup>
								<DataSource>VendTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Bank</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Bank_ThirdPartyBankAccountId</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ThirdPartyBankAccountId</DataField>
										<DataSource>VendTransOpen</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Bank</DataGroup>
								<DataSource>VendTransOpen</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AmountGroup</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CurrencyCode</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendTrans_AmountCur</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCur</DataField>
										<DataSource>VendTrans</DataSource>
										<Label>@SYS81978</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendTrans_AmountMST</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountMST</DataField>
										<DataSource>VendTrans</DataSource>
										<Label>@SYS81979</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountCur</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCur</DataField>
										<DataSource>VendTransOpen</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>AmountMST</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountMST</DataField>
										<DataSource>VendTransOpen</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ExchAdjustment</Name>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ExchAdjustment</DataField>
										<DataSource>VendTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>EUROTriangulation</Name>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EUROTriangulation</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS6928</Caption>
								<DataSource>VendTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Boleto</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1825361098</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Boleto_TypedLine_BR</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TypedLine_BR</DataField>
										<DataSource>VendTransPayment_BR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Boleto_BR_EPBarCodeInfo_BR</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EPBarCodeInfo_BR</DataField>
										<DataSource>VendTransOpen</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@GLS668</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InterestAndFinePayment_BR</Name>
								<CountryRegionCodes>BR</CountryRegionCodes>
								<ElementPosition>1932735281</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>InterestAndFinePayment_BR_FineAmount_BR</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FineAmount_BR</DataField>
										<DataSource>VendTransOpen</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>InterestAndFinePayment_BR_FineAmountPaymCur_BR</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FineAmountPaymCur_BR</DataField>
										<DataSource>VendTransOpen</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InterestAndFinePayment_BR_FineCode_BR</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FineCode_BR</DataField>
										<DataSource>VendTransOpen</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>InterestAndFinePayment_BR_InterestAmount_BR</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InterestAmount_BR</DataField>
										<DataSource>VendTransOpen</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>InterestAndFinePayment_BR_InterestAmountPaymCur_BR</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InterestAmountPaymCur_BR</DataField>
										<DataSource>VendTransOpen</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InterestAndFinePayment_BR_InterestCode_BR</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InterestCode_BR</DataField>
										<DataSource>VendTransOpen</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>InterestAndFine_BR</DataGroup>
								<DataSource>VendTransOpen</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS828</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Settlementtab</Name>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Settlement</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Settlement_SettleAmountMST</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettleAmountMST</DataField>
										<DataSource>VendTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Settlement_SettleAmountCur</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettleAmountCur</DataField>
										<DataSource>VendTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Settlement_LastSettleVoucher</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LastSettleVoucher</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Settlement_LastSettleAccountNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LastSettleAccountNum</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Settlement_LastSettleCompany</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LastSettleCompany</DataField>
										<DataSource>VendTrans</DataSource>
										<Label>@SYS115826</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Settlement_LastSettleDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LastSettleDate</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Settlement_Settlement</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Settlement</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Settlement_SettleTax1099Amount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettleTax1099Amount</DataField>
										<DataSource>VendTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Settlement_SettleTax1099StateAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettleTax1099StateAmount</DataField>
										<DataSource>VendTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Settlement_SettleAmountReporting</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettleAmountReporting</DataField>
										<DataSource>VendTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>Settlement</DataGroup>
								<DataSource>VendTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SettlementStatus</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>SettlementStatus_Closed</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Closed</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SettlementStatus_PostingProfileClose</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PostingProfileClose</DataField>
										<DataSource>VendTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>SettlementStatus</DataGroup>
								<DataSource>VendTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS10163</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>RemittanceTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2080374782</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane1</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab1</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ButtonGroup1</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>AddAddress</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<DataSource>VendTrans</DataSource>
														<MenuItemName>CustDirPartyPostalAddressNew</MenuItemName>
														<Text>@SYS111834</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>Remittance_ManageAddress</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<DataSource>VendTrans</DataSource>
														<MenuItemName>VendDirPartyPostalAddressAdvanced</MenuItemName>
														<Text>@SYS312927</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Remittance</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RemittanceTop</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>VendTrans_RemittanceLocation</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>VendTrans_RemittanceLocation_Description</Name>
														<DataRelationPath>RemittanceLocation_FK</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<DataSource>VendTrans</DataSource>
												<ReferenceField>RemittanceLocation</ReferenceField>
												<ReplacementFieldGroup>Description</ReplacementFieldGroup>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RemittanceBottom</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>VendTrans_RemittanceAddress</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>displayRemittanceAddress</DataMethod>
												<DataSource>VendTrans</DataSource>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@sys152838</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Balances_W</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<CountryRegionCodes>RU</CountryRegionCodes>
						<ElementPosition>2097151998</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormListViewControl">
								<Name>BalanceList</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>ListView</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<GridLines>Yes</GridLines>
								<RowSelect>Yes</RowSelect>
								<ViewType>Report</ViewType>
							</AxFormControl>
						</Controls>
						<Caption>@GLS107088</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>CashDiscTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2113929214</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>NewDeleteActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>NewDeleteButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>NewButton</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>New</Command>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>DeleteButton</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>DeleteRecord</Command>
											</AxFormControl>
										</Controls>
										<DataSource>VendTransCashDisc</DataSource>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid_CashDisc</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>VendTransCashDisc_CashDiscdate</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDiscdate</DataField>
										<DataSource>VendTransCashDisc</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VendTransCashDisc_CashDiscAmount</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDiscAmount</DataField>
										<DataSource>VendTransCashDisc</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RemainingAmount</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displaySettleAmountForCashDisc</DataMethod>
										<DataSource>VendTransCashDisc</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>VendTransCashDisc</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FooterGroup</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>VendTransOpen_CashDiscAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Left>0</Left>
										<LeftMode>RightEdge</LeftMode>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>VendTransOpen</DataSource>
										<ReferenceField>CashDiscountLedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS4376</Caption>
						<DataSource>VendTransCashDisc</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabFinancialDimensions</Name>
						<ElementPosition>2130706430</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Pattern>DimensionEntryControl</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>DimensionEntryControl</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Container</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>DimensionEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmControlLabelText</Name>
											<Type>String</Type>
											<Value>@SYS101181</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumerationName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmDataSourceName</Name>
											<Type>String</Type>
											<Value>VendTrans</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValueSetReferenceField</Name>
											<Type>String</Type>
											<Value>DefaultDimension</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumValueSetReferenceField</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@SYS101181</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TaxWithholdTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>LedgerBasicWithholdingTax</ConfigurationKey>
						<ElementPosition>2139095038</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>WithholdingTaxActionStrip</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>FormMenuButtonWithholdingTax</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>WithholdingNew</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>New</Command>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>WithholdingDelete</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>DeleteRecord</Command>
											</AxFormControl>
										</Controls>
										<DataSource>TaxWithholdTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridTaxWithhold</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxWithholdTrans_VoucherInvoice</Name>
										<ElementPosition>268435454</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>VoucherInvoice</DataField>
										<DataSource>TaxWithholdTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxWithholdTrans_Invoice</Name>
										<ElementPosition>402653181</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>TaxWithholdTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>TaxWithholdTrans_CompetenceDate</Name>
										<ElementPosition>536870908</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CompetenceDate</DataField>
										<DataSource>TaxWithholdTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxWithholdTrans_InvoiceCurrency</Name>
										<ElementPosition>671088635</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceCurrency</DataField>
										<DataSource>TaxWithholdTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdTrans_InvoiceAmount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>805306362</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceAmount</DataField>
										<DataSource>TaxWithholdTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdTrans_InvoiceTaxAmount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>939524089</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceTaxAmount</DataField>
										<DataSource>TaxWithholdTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>invoiceAmountExclTax</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741816</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>invoiceAmountExclTax</DataMethod>
										<DataSource>TaxWithholdTrans</DataSource>
										<Label>@SYS81797</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxWithholdTrans_TaxWithholdGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1118481058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editTaxWithholdGroup</DataMethod>
										<DataSource>TaxWithholdTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>TaxWithholdTrans_TaxWithholdItemGroupHeading</Name>
										<ElementPosition>1163220300</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TaxWithholdTrans_TaxWithholdItemGroupHeading_TaxWithholdItemGroup</Name>
												<DataRelationPath>TaxWithholdItemGroupHeading_TH</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>TaxWithholdTrans</DataSource>
										<ReferenceField>TaxWithholdItemGroupHeading_TH</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxWithholdTrans_TaxWithholdCode</Name>
										<ElementPosition>1207959543</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxWithholdCode</DataField>
										<DataSource>TaxWithholdTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>withholdOriginGross</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1342177270</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>withholdOriginGross</DataMethod>
										<DataSource>TaxWithholdTrans</DataSource>
										<Label>@SYS81688</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdExclude</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1476394997</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>TaxWithholdExclude</DataMethod>
										<DataSource>TaxWithholdTrans</DataSource>
										<Label>@SYS81799</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdTrans_InvoiceExemptedAmount</Name>
										<ElementPosition>1610612724</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceExemptedAmount</DataField>
										<DataSource>TaxWithholdTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdTrans_InvoiceWithholdBaseAmount</Name>
										<ElementPosition>1744830451</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceWithholdBaseAmount</DataField>
										<DataSource>TaxWithholdTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdTrans_InvoiceCurUpdatedWithholdBaseAmount_TH</Name>
										<ElementPosition>1811939314</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceCurUpdatedWithholdBaseAmount</DataField>
										<DataSource>TaxWithholdTransExtensionTH</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdTrans_InvoiceTaxWithholdAmount</Name>
										<ElementPosition>1879048178</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceTaxWithholdAmount</DataField>
										<DataSource>TaxWithholdTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdTrans_TaxWithholdAmount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2013265912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxWithholdAmount</DataField>
										<DataSource>TaxWithholdTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdTrans_InvoiceCurExpenseAmount</Name>
										<ElementPosition>2040109458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceCurExpenseAmount</DataField>
										<DataSource>TaxWithholdTransExtensionTH</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdTrans_AccountingCurExpenseAmount</Name>
										<ElementPosition>2066953004</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountingCurExpenseAmount</DataField>
										<DataSource>TaxWithholdTransExtensionTH</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdTrans_InvoiceCurDeductableAmount</Name>
										<ElementPosition>2093796551</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayInvoiceCurDeductableAmount</DataMethod>
										<DataSource>TaxWithholdTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdTrans_AccountingCurDeductableAmount</Name>
										<ElementPosition>2120640098</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayAccountingCurDeductableAmount</DataMethod>
										<DataSource>TaxWithholdTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>TaxWithholdTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupTaxWithhold</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupTaxWithholdNotTaxable</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>TaxWithholdTrans_TaxNotTaxableByTreaty</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>InvoiceNotTaxableByTreaty</DataField>
												<DataSource>TaxWithholdTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>TaxWithholdTrans_TaxNotTaxableExpenses</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>InvoiceNotTaxableExpenses</DataField>
												<DataSource>TaxWithholdTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupTaxWithholdAmounts</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TaxWithholdTrans_TaxWithholdCurrency</Name>
												<ElementPosition>613566756</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxWithholdCurrency</DataField>
												<DataSource>TaxWithholdTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>TaxWithholdTrans_TaxWithholdExchRate</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HelpText>@Tax_WithholdTax:WithholdingTaxCurrencyHelp</HelpText>
												<Type>Real</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editTaxWithholdExchRate</DataMethod>
												<DataSource>TaxWithholdTrans</DataSource>
												<Label>@Tax_WithholdTax:TaxWithholdExchRate</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>TaxWithholdTrans_TaxTaxWithholdAmount</Name>
												<ElementPosition>920350134</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>TaxTaxWithholdAmount</DataField>
												<DataSource>TaxWithholdTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>TaxWithholdRoundOff</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1227133512</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>TaxWithholdRoundOff</DataMethod>
												<DataSource>TaxWithholdTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TaxWithholdTrans_PaymCurrency</Name>
												<ElementPosition>1533916890</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>PaymCurrency</DataField>
												<DataSource>TaxWithholdTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>TaxWithholdTrans_PaymTaxWithholdAmount</Name>
												<ElementPosition>1840700268</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>PaymTaxWithholdAmount</DataField>
												<DataSource>TaxWithholdTrans</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<DataSource>TaxWithholdTrans</DataSource>
								<FrameType>None</FrameType>
								<OptionValue>2</OptionValue>
							</AxFormControl>
						</Controls>
						<Caption>@SYS7372</Caption>
						<DataSource>TaxWithholdTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Footer</Name>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>TotalsGroup</Name>
						<ExtendedStyle>tabularFields</ExtendedStyle>
						<Pattern>TabularFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TotalsCaption</Name>
								<ExtendedStyle>tabularFields_title</ExtendedStyle>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TotalsRowHeader</Name>
								<ExtendedStyle>tabularFields_rowHeader</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>TotalsColumn0</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text></Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>TransferredAmountLabel</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@CashManagement:EnteredPaymentAmount</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>RemainingAmountLabel</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@CashManagement:SettlementBalance</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>CashDiscountTotalLabel</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS110920</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>VendorBalanceLabel</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS16706</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BalancesMST</Name>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>BalanceMstLabel</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text></Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>showtransferredAmount</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayTransferredAmountMst</DataMethod>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ShowRemainAmount</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayMarkedTotalMst</DataMethod>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>showCashDiscTotal</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayCashDiscTotalMst</DataMethod>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>showVendBalance</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayVendBalanceMst</DataMethod>
										<Label>@SYS16706</Label>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BalancesCur</Name>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>BalanceCurLabel</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text></Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>showTransferredAmountCur</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayTransferredAmountCur</DataMethod>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>showRemainAmountCur</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayMarkedTotalCur</DataMethod>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>showCashDiscTotalCur</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayCashDiscTotalCur</DataMethod>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TotalsFooter</Name>
								<ExtendedStyle>tabularFields_rowFooter</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<AllowUserSetup>Restricted</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<Caption>@SYS8311</Caption>
				<FrameOptionButton>Hide</FrameOptionButton>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogCommitGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Save</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>UpdateNow</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<NeededPermission>Update</NeededPermission>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<MultiSelect>Yes</MultiSelect>
						<Text>@SYS41360</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>SettleRemainder</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Button</Type>
						<FormControlExtension
							i:nil="true" />
						<Text>@CashManagement:SettlementWriteOffSettleRemainder</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>