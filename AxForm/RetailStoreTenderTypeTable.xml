<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailStoreTenderTypeTable</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailStoreTenderTypeTable extends FormRun
{
    RetailChannelTable retailChannelTable;
    RetailPaymentConnectorLookupTempTable retailPaymentConnectorLookupTempTable; // In memory table buffer for storing name of the available connectors.
    TableId tableId;
    private const int PosOperationPayByCard = 201;

}
]]></Source>
			</Method>
			<Method>
				<Name>hideFormControl</Name>
				<Source><![CDATA[
    //hides the form controls for Online channel.
    public void hideFormControl()
    {
        retailEx3.caption('@Retail:RetailStoreTenderTypeRetailEx3GroupCaption');
        element.control(element.controlId(formControlStr(RetailStoreTenderTypeTable, RetailStoreTenderTypeTable_LegacyConnectorName))).visible(false);
        element.control(element.controlId('RetailInfocodeTableSpecific_StoreTenderType')).visible(false);
        element.control(element.controlId('RetailTransactionPaymentTrans')).visible(false);
        element.control(element.controlId(formControlStr(RetailStoreTenderTypeTable, SignatureCapture))).visible(false);
        element.control(element.controlId(formControlStr(RetailStoreTenderTypeTable, Group1))).visible(false);
        element.control(element.controlId(formControlStr(RetailStoreTenderTypeTable, Amount))).visible(false);
        element.control(element.controlId(formControlStr(RetailStoreTenderTypeTable, Check))).visible(false);
        element.control(element.controlId(formControlStr(RetailStoreTenderTypeTable, Change))).visible(false);
        element.control(element.controlId(formControlStr(RetailStoreTenderTypeTable, NonReceiptReturns))).visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        RetailOnlineChannelTable onlineChannel;

        super();

        if (element.args() && element.args().caller() && element.args().dataset())
        {
            tableId = element.args().dataset();
            switch (tableId)
            {
                // hide some more form controls if calling from SP online channel.
                case tableNum(RetailOnlineChannelTable) :
                    element.hideFormControl();

                //do not break, gridStoreId & generalStoreId both should be Visible Off if caller is OnlineChannelTable.
                case tableNum(RetailStoreTable):
                    break;

                // If a payment record is the caller hide/show fields as if it was a call center
                case tableNum(MCRCustPaymTable) :
                // Fall through, no break
                case tableNum(RetailMCRChannelTable) :
                    element.mcrHideFormControl();
                    RetailInfocodeTableSpecific_StoreTenderType.visible(false);
                    break;
            }
        }
        else
        {
            throw error("@SYS4205");
        }

        Account_LedgerDimension.parmIsDefaultAccount(true);

        DataAreaId  giftCardCompany = RetailParameters::find().GiftCardCompany;
        DataArea    dataArea = xDataArea::find(giftCardCompany);
        if (dataArea.RecId && !dataArea.IsVirtual)
        {
            LedgerDimensionGiftCardCompany.parmDataAreaId(giftCardCompany);
        }
        LedgerDimensionGiftCardCompany.parmIsDefaultAccount(false);

        BankBagAccount_BankBagLedgerDimension.parmIsDefaultAccount(true);
        SafeAccount_SafeAccLedgerDimension.parmIsDefaultAccount(true);

        // Initialize the payment connectors; This is used by the third party gift card feature
        RetailPaymentConnectorLookupTempTable::initializePaymentConnectors(retailPaymentConnectorLookupTempTable, 'RetailStoreTenderTypeTable');
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrHideFormControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Hides the form controls for Call center channel.
    /// </summary>
    public void mcrHideFormControl()
    {
        void setControl(FormControl _control, boolean _visible)
        {
            if (_control.visible() != _visible)
            {
                _control.visible(_visible);
            }
        }

        setControl(retailEx3, true);
        retailEx3.caption('@Retail:RetailStoreTenderTypeRetailEx3GroupCaption');
        setControl(RetailStoreTenderTypeTable_LegacyConnectorName, false);
        setControl(group1, false);
        setControl(signatureCapture, false);
        setControl(amount, false);
        setControl(group2, false);
        setControl(bankBagAccount, true);
        setControl(safeAccount, false);
        setControl(giftCardAccount, true);
        setControl(change, false);
        setControl(differenceAccount, false);
        setControl(tenderFlowAccount_RU, false);
        setControl(tabFinancialDimensions, false);
        setControl(rboStoreTenderTypeTable_PaymTermId, false);
        setControl(NonReceiptReturns, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>toggleConnectorNameControl</Name>
				<Source><![CDATA[
    public void toggleConnectorNameControl()
    {
        // If the Function is 'Wallet' and the POS operation is 'Pay by Card', enable Connector field.
        if (RetailStoreTenderTypeTable.function == RetailTenderFunction::Wallet && RetailStoreTenderTypeTable.posOperation == PosOperationPayByCard)
        {
            RetailStoreTenderTypeTable_ConnectorName.enabled(true);
        }
        else if (tableId == tableNum(RetailMCRChannelTable) || tableId == tableNum(RetailOnlineChannelTable))
        {
            // If calling from RetailMCRChannelTable or RetailOnlineChannelTable, check to see if card type is gift card before toggling connector name
            RetailStoreTenderTypeCardTable retailStoreTenderTypeCardTable;
            RetailTenderTypeCardTable retailTenderTypeCardTable;
            RetailSharedParameters retailSharedParameters;

            retailSharedParameters = RetailSharedParameters::find();
            retailStoreTenderTypeTable.updateGiftCardCompany();

            select firstonly RecId from retailStoreTenderTypeCardTable
                join retailTenderTypeCardTable
                where retailTenderTypeCardTable.cardTypeId == retailStoreTenderTypeCardTable.cardTypeId
                && retailTenderTypeCardTable.cardTypes == RetailCardTypesBase::GiftCard
                && retailStoreTenderTypeCardTable.tenderTypeId == RetailStoreTenderTypeTable.tenderTypeId;

            if (retailStoreTenderTypeCardTable && retailSharedParameters && retailSharedParameters.EnableAdvancedExternalGiftCard)
            {
                RetailStoreTenderTypeTable_ConnectorName.enabled(true);
            }
            else
            {
                RetailStoreTenderTypeTable_ConnectorName.enabled(false);
            }
        }
        else
        {
            const int payByGiftCardOperationId = 214;
            boolean isOperationPayByGiftCard = RetailStoreTenderTypeTable.posOperation == payByGiftCardOperationId;

            RetailStoreTenderTypeTable_ConnectorName.enabled(isOperationPayByGiftCard);
            RetailStoreTenderTypeTable_LegacyConnectorName.enabled(isOperationPayByGiftCard);
            GiftCardCashOutThresholdGroup_GiftCardCashOutThreshold.enabled(isOperationPayByGiftCard);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHideCardInputDetailsInPOSCheckBoxVisibility</Name>
				<Source><![CDATA[
    /// <summary>
    /// Changes visibility of the 'HideCardInputDetailsInPOS' control based on the value of the selected tender function.
    /// </summary>
    public void setHideCardInputDetailsInPOSCheckBoxVisibility()
    {
        // Hide if function not card or calling from RetailMCRChannelTable or RetailOnlineChannelTable
        if (RetailStoreTenderTypeTable.function != RetailTenderFunction::Card || tableId == tableNum(RetailMCRChannelTable) || tableId == tableNum(RetailOnlineChannelTable))
        {
            // if the selected tender type's function is not 'Card' then
            // hide the 'hideCardInputDetailsInPOS' control from the user interface.
            element.control(element.controlId(formControlStr(RetailStoreTenderTypeTable, PaymentDetails))).visible(false);
        }
        else
        {
            element.control(element.controlId(formControlStr(RetailStoreTenderTypeTable, PaymentDetails))).visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setGiftCardItemIdIfBlank</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the gift card item id for internal gift cards
    /// </summary>
    [Hookable(false)]
    public void setGiftCardItemIdIfBlank()
    {
        if  (tableId == tableNum(RetailMCRChannelTable) || tableId == tableNum(RetailOnlineChannelTable))
        {
            RetailStoreTenderTypeCardTable retailStoreTenderTypeCardTable;
            RetailTenderTypeCardTable retailTenderTypeCardTable;
            RetailSharedParameters retailSharedParameters;

            retailSharedParameters = RetailSharedParameters::find();
            retailStoreTenderTypeTable.updateGiftCardCompany();

            select firstonly RecId from retailStoreTenderTypeCardTable
                join retailTenderTypeCardTable
                where retailTenderTypeCardTable.cardTypeId == retailStoreTenderTypeCardTable.cardTypeId
                && retailTenderTypeCardTable.cardTypes == RetailCardTypesBase::GiftCard
                && retailStoreTenderTypeCardTable.tenderTypeId == RetailStoreTenderTypeTable.tenderTypeId;

            if (retailStoreTenderTypeCardTable && retailSharedParameters && retailSharedParameters.EnableAdvancedExternalGiftCard)
            {
                if (retailStoreTenderTypeTable.ConnectorName == '')
                {
                    if (retailStoreTenderTypeTable.GiftCardItemId == '')
                    {
                        str giftCardItem = RetailParameters::find().GiftcardItem;
                        retailStoreTenderTypeTable.GiftCardItemId = giftCardItem;
                    }

                    RetailStoreTenderTypeTable_GiftCardItemId.enabled(false);
                }
                else
                {
                    RetailStoreTenderTypeTable_GiftCardItemId.enabled(true);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>posOperationName</Name>
				<Source><![CDATA[
    edit RetailOperationName posOperationName(boolean _set, RetailOperationName _operationName)
    {
        RetailOperations    retailOperations;

        if (_set)
        {
            select firstonly retailOperations where retailOperations.OperationName == _operationName;
            retailStoreTenderTypeTable.PosOperation = retailOperations.OperationId;
        }

        return RetailOperations::find(retailStoreTenderTypeTable.PosOperation).OperationName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFields</Name>
				<Source><![CDATA[
    void updateFields()
    {
        bankBagAccount_BankBagLedgerDimension.enabled(retailStoreTenderTypeTable.ActiveAccount);
        bankBagAccount_BankBagAccountType.enabled(retailStoreTenderTypeTable.ActiveAccount);
        BankBagAccount_bankTransactionType.enabled(retailStoreTenderTypeTable.ActiveAccount);

        safeAccount_SafeAccLedgerDimension.enabled(retailStoreTenderTypeTable.SafeActiveAccount);
        safeAccount_safeAccountType.enabled(retailStoreTenderTypeTable.SafeActiveAccount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateForFunction</Name>
				<Source><![CDATA[
    void updateForFunction()
    {
        boolean addRemoveTender = (retailStoreTenderTypeTable.Function == RetailTenderFunction::TenderRemoveFloat);

        group2.enabled(!addRemoveTender);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCashDrawer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable cash drawer amount if cash drawer limit is yes else disable with default value zero.
    /// </summary>
    public void updateCashDrawer()
    {
        if (RetailStoreTenderTypeTable.CashDrawerLimitEnabled)
        {
            CashDrawerLimitAmount.enabled(true);
        }
        else
        {
            CashDrawerLimitAmount.enabled(false);
            RetailStoreTenderTypeTable.CashDrawerLimit = 0;
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RetailStoreTenderTypeTable</Name>
				<Methods>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            MCRCustPaymTable         mcrCustPaymTable;
            RetailTerminalTable      terminalTable;

            super();

            // Set retailChannelTable based on calling record, if it is MCRCustPaymTable
            // retrieve the related channel
            if (element.args()
                && element.args().caller()
                && element.args().dataset())
            {
                switch (element.args().dataset())
                {
                    case tableNum(RetailStoreTable):
                    case tableNum(RetailOnlineChannelTable) :
                    case tableNum(RetailMCRChannelTable) :
                        retailChannelTable =  element.args().record();
                        break;
                    // If a payment record is passed in get the related channel
                    case tableNum(MCRCustPaymTable) :
                        mcrCustPaymTable = element.args().record();
                        retailChannelTable = RetailMCRChannelTable::findRecId(mcrCustPaymTable.Channel);
                        break;
                    case tableNum(RetailTerminalTable):
                        terminalTable = element.args().record();
                        retailChannelTable = RetailChannelTable::findByRecId(terminalTable.storeRecId);
                        break;
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            const int payCurrencyOperationId = 203;
            boolean enableCurrenciesControl = RetailStoreTenderTypeTable.PosOperation == payCurrencyOperationId;

            currencies.enabled(enableCurrenciesControl);
            element.toggleConnectorNameControl();
            element.setHideCardInputDetailsInPOSCheckBoxVisibility();
            element.setGiftCardItemIdIfBlank();
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // it should be called within the context of the selected store data area
            changecompany(retailChannelTable.InventLocationDataAreaId)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (retailStoreTenderTypeTable.Function == RetailTenderFunction::Card
                || retailStoreTenderTypeTable.Function == RetailTenderFunction::Wallet)
            {
                cardSetup.enabled(true);

                if (RetailTenderTypeCardSkipCountingRequiredToggle::instance().isEnabled() && !retailStoreTenderTypeTable.countingRequired)
                {
                    RetailStoreTenderTypeTable_ds.object(fieldNum(RetailStoreTenderTypeTable, countingRequired)).enabled(false);
                }
            }
            else
            {
                cardSetup.enabled(false);
                RetailStoreTenderTypeTable_ds.object(fieldNum(RetailStoreTenderTypeTable, countingRequired)).enabled(true);
            }

            if (retailStoreTenderTypeTable.posOperation == RetailPosOperationHelper::payCashOperation())
            {
                RetailStoreTenderTypeTable_ds.object(fieldNum(RetailStoreTenderTypeTable, UseForDeclareStartAmount)).enabled(true);
            }
            else
            {
                RetailStoreTenderTypeTable_ds.object(fieldNum(RetailStoreTenderTypeTable, UseForDeclareStartAmount)).enabled(false);
            }

            element.updateForFunction();
            element.updateFields();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = super();

            // If the ledger dimension is changed, we give user the option to cascade the change to the electronic payment types.
            if (ret
                && (retailStoreTenderTypeTable.function == RetailTenderFunction::Card
                    || retailStoreTenderTypeTable.function == RetailTenderFunction::Wallet)
                && (retailStoreTenderTypeTable.LedgerDimension != retailStoreTenderTypeTable.orig().LedgerDimension
                    || retailStoreTenderTypeTable.AccountType != retailStoreTenderTypeTable.orig().AccountType)
                && Box::yesNo(this.cardConfirmText(), DialogButton::No, "@RET4057", "@RET4058") == DialogButton::Yes)
            {
                retailStoreTenderTypeTable.cascadeLedgerDimensionDownToCardTable();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>cardConfirmText</Name>
						<Source><![CDATA[
        public str cardConfirmText()
        {
            return strFmt("%1 %2", "@RET4055", "@RET4056");
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>accountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // reset ledger dimension if account type is changed.
                retailStoreTenderTypeTable.LedgerDimension = 0;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankBagAccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // reset bank bag ledger dimension if bank bag account type is changed.
                retailStoreTenderTypeTable.BankBagLedgerDimension = 0;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DifferenceAccLedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                // If differnce account ledger dimension is changed, we give user the option to cascade the change to the card types.
                if (ret && retailStoreTenderTypeTable.function == RetailTenderFunction::Card)
                {
                    if (retailStoreTenderTypeTable.hasCardTables() &&
                        Box::yesNo(retailStoreTenderTypeTable_ds.cardConfirmText(),DialogButton::No,"@RET4057","@RET4058") == DialogButton::Yes)
                    {
                        retailStoreTenderTypeTable.cascadeDifferenceAccountLedgerDimensionDownToCardTable();
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>function</DataField>
						<Methods>
							<Method>
								<Name>dataChanged</Name>
								<Source><![CDATA[
            public void dataChanged()
            {
                super();

                element.updateForFunction();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>safeAccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // reset safe account ledger dimension if safe account type is changed.
                retailStoreTenderTypeTable.SafeAccLedgerDimension = 0;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>tenderTypeId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                retailStoreTenderTypeTable.initFromTenderTypeTable();
                retailStoreTenderTypeTable_ds.reread();
                retailStoreTenderTypeTable_ds.refresh();

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Function_function</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (this.selection() != RetailTenderFunction::Card)
            {
                RetailStoreTenderTypeTable_HideCardInputDetailsInPOS.checked(true);
            }

            element.setHideCardInputDetailsInPOSCheckBoxVisibility();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RBOStoreTenderTypeTable_PaymTermId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            // it should be called within the context of the selected store data area
            changecompany(retailChannelTable.InventLocationDataAreaId)
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>POSOperationName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            QueryBuildDataSource    queryBuildDataSource;
            SysTableLookup          lookup;
            QueryBuildRange         queryBuildRange;
            Query                   query;

            query = new Query();

            // Add the first data source to the query
            queryBuildDataSource = query.addDataSource(tableNum(RetailOperations));

            // Add the range to this first data source
            queryBuildRange = queryBuildDataSource.addRange(fieldNum(RetailOperations, OperationName));

            lookup = SysTableLookup::newParameters(tableNum(RetailOperations), this, true);
            lookup.parmQuery(query);

            // Add the fields to be shown in the lookup form.
            lookup.addLookupfield(fieldNum(RetailOperations, OperationName));

            // Perform the lookup.
            lookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
            element.toggleConnectorNameControl();
            retailStoreTenderTypeTable.updateGiftCardCompany();

            // If the Function is 'Wallet' and the POS Operation is 'Pay by Card', then a connector name must be defined.
            if (RetailStoreTenderTypeTable.function == RetailTenderFunction::Wallet
                && RetailStoreTenderTypeTable.posOperation == PosOperationPayByCard
                && strLTrim(strRTrim(RetailStoreTenderTypeTable_ConnectorName.valueStr())) == '')
            {
                error(strFmt("@Retail:RetailConnectorNotDefinedErrorMsg", RetailStoreTenderTypeTable.name));
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RetailStoreTenderTypeTable_ConnectorName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Perform a lookup of all available connector names.
        /// </summary>
        public void lookup()
        {
            RetailPaymentConnectorLookupTempTable::performConnectorNameLookup(retailPaymentConnectorLookupTempTable, this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        [Hookable(false)]
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                if (this.text() == '')
                {
                    str giftCardItem = RetailParameters::find().GiftcardItem;
                    retailStoreTenderTypeTable.GiftCardItemId = giftCardItem;
                    RetailStoreTenderTypeTable_GiftCardItemId.enabled(false);

                    // If the Function is 'Wallet' and the POS Operation is 'Pay by Card', then a connector name must be defined.
                    if (RetailStoreTenderTypeTable.function == RetailTenderFunction::Wallet && RetailStoreTenderTypeTable.posOperation == PosOperationPayByCard)
                    {
                        error(strFmt("@Retail:RetailConnectorNotDefinedErrorMsg", RetailStoreTenderTypeTable.name));
                    }
                }
                else
                {
                    retailStoreTenderTypeTable.GiftCardItemId = '';
                    RetailStoreTenderTypeTable_GiftCardItemId.enabled(true);
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RetailStoreTenderTypeTable_LegacyConnectorName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Perform a lookup of all available connector names.
        /// </summary>
        public void lookup()
        {
            RetailPaymentConnectorLookupTempTable retailLegacyPaymentConnectorLookupTempTable; //In memory table
            RetailPaymentConnectorLookupTempTable::initializeLegacyPaymentConnectors(retailLegacyPaymentConnectorLookupTempTable);
            RetailPaymentConnectorLookupTempTable::performConnectorNameLookup(retailLegacyPaymentConnectorLookupTempTable, this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Account_LedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            switch (retailStoreTenderTypeTable.AccountType)
            {
                case RetailLedgerBank::Bank:
                    BankAccountTable::lookupBankAccount(this);
                    break;

                case RetailLedgerBank::Ledger:
                    super();
                    break;

                // <GEERU>
                case RetailLedgerBank::RCash:
                    RCashTable::lookupAccountNum(this);
                    break;
                // </GEERU>

                default:
                    super();
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            boolean returnValue;

            switch (_accountTypeEnumValue)
            {
                case RetailLedgerBank::Bank:
                // <GEERU>
                case RetailLedgerBank::RCash:
                    // </GEERU>
                    returnValue = true;
                    break;
                default:
                    returnValue = false;
                    break;
            }

            return returnValue;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerDimensionGiftCardCompany</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            switch (retailStoreTenderTypeTable.AccountTypeGiftCardCompany)
            {
                case RetailLedgerBank::Bank:
                    BankAccountTable::lookupBankAccount(this);
                    break;

                case RetailLedgerBank::Ledger:
                    super();
                    break;

                default:
                    super();
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            boolean returnValue;

            switch (_accountTypeEnumValue)
            {
                case RetailLedgerBank::Bank:
                    returnValue = true;
                    break;
                default:
                    returnValue = false;
                    break;
            }

            return returnValue;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BankBagAccount_ActiveAccount</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.updateFields();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BankBagAccount_BankBagLedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            switch (retailStoreTenderTypeTable.BankBagAccountType)
            {
                case RetailLedgerBank::Bank:
                    BankAccountTable::lookupBankAccount(this);
                    break;

                case RetailLedgerBank::Ledger:
                    super();
                    break;

                // <GEERU>
                case RetailLedgerBank::RCash:
                    RCashTable::lookupAccountNum(this);
                    break;
                // </GEERU>

                default:
                    super();
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            boolean returnValue;

            switch (_accountTypeEnumValue)
            {
                case RetailLedgerBank::Bank:
                // <GEERU>
                case RetailLedgerBank::RCash:
                    // </GEERU>
                    returnValue = true;
                    break;
                default:
                    returnValue = false;
                    break;
            }

            return returnValue;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SafeAccount_safeActiveAccount</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.updateFields();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SafeAccount_SafeAccLedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            switch (retailStoreTenderTypeTable.SafeAccountType)
            {
                case RetailLedgerBank::Bank:
                    BankAccountTable::lookupBankAccount(this);
                    break;

                case RetailLedgerBank::Ledger:
                    super();
                    break;

                // <GEERU>
                case RetailLedgerBank::RCash:
                    RCashTable::lookupAccountNum(this);
                    break;
                // </GEERU>

                default:
                    super();
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            boolean returnValue;

            switch (_accountTypeEnumValue)
            {
                case RetailLedgerBank::Bank:
                // <GEERU>
                case RetailLedgerBank::RCash:
                    // </GEERU>
                    returnValue = true;
                    break;
                default:
                    returnValue = false;
                    break;
            }

            return returnValue;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UseCashDrawerLimit</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Modify CashDrawerMaxAmountEnabled field value based on CashdrawerlimitEnabled field value.
        /// </summary>
        /// <returns>true if modified; otherwise, false.</returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (this.checked() && RetailStoreTenderTypeTable.function != RetailTenderFunction::Normal)
            {
                warning("@Retail:EnableCashDrawerLimit");
            }

            element.updateCashDrawer();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RetailStoreTenderTypeTable</Name>
			<Table>RetailStoreTenderTypeTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>aboveMinimumTenderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>accountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountTypeGiftCardCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActiveAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>allowFloat</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>allowOvertender</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>allowReturnNegative</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>allowUndertender</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>askForDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankBagAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankBagLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>bankTransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDrawerLimit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashdrawerlimitEnabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>changeLineOnReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>changeTenderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Channel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>checkPayee</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>compressPaymentEntries</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConnectorName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>countingRequired</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiffAccBigDiffLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DifferenceAccLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>endorseCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>endorsmentLine1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>endorsmentLine2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>fiscalPrinterTenderType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>frontOfCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>function</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiftCardCashOutThreshold</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiftCardCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiftCardItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HideCardInputDetailsInPOS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimensionGiftCardCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LegacyConnectorName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>lineNumInTransaction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>maxCountingDifference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>maximumAmountAllowed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>maximumAmountEntered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>maximumOvertenderAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>maxNormalDifferenceAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>maxRecount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>minimumAmountAllowed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>minimumAmountEntered</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>minimumChangeAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>multiplyInTenderOperations</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>openDrawer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>payAccountBill</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymTermId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>posCountEntries</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>posOperation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RestrictReturnsWithoutReceipt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>rounding</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>roundingMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SafeAccLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>safeAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>safeActiveAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>seekAuthorization</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>sigCapEnabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>sigCapMinAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>slipBackInPrinter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>slipFrontInPrinter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>takenToBank</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>takenToSafe</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TenderFlowLedgerDimension_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>tenderTypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>undertenderAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseForDeclareStartAmount</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailChannelTableSource</Name>
			<Table>RetailChannelTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CashOffice_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChannelTimeZone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChannelTimeZoneInfoId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChannelType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultCustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultCustDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisplayTaxPerTaxComponent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EventNotificationProfileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventLocationDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ManualAccept</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OMOperatingUnitID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceIncludesSalesTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailChannelId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StoreArea</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionServiceProfile</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RetailStoreTenderTypeTable</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources>
				<AxFormDataSourceDerived>
					<Name>RetailChannelTableSource_RetailStoreTable</Name>
					<Table>RetailStoreTable</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>bankDropCalculation</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>closingMethod</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>createLabelsForZeroPrice</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>cultureName</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DatabaseName</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>EFTStoreNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>functionalityProfile</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>generatesItemLabels</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>generatesShelfLabels</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>hideTrainingMode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>InventLocationIdForCustomerOrder</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>inventoryLookup</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IsCallCenter</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>itemIdOnReceipt</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>layoutId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>LinkedCallCenter</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>maximumPostingDifference</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>maximumTextLengthOnReceipt</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>maxRoundingAmount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>maxRoundingTaxAmount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>maxShiftDifferenceAmount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>maxTransactionDifferenceAmount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>numberOfTopOrBottomLines</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>OfflineProfile</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>oneStatementPerDay</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>openFrom</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>openTo</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>PackedExtensions</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Partition</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Password</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>phone</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>poItemFilter</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>removeAddTender</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>replicationCounter</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RetailReqPlanIdSched</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ReturnTaxGroup_W</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RoundingAccountLedgerDimension</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>roundingTaxAccount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>separateStmtPerStaffTerminal</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>serviceChargePct</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>serviceChargePrompt</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>SQLServerName</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>startAmountCalculation</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>statementMethod</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>stmtCalcBatchEndTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>stmtPostAsBusinessDay</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>StoreNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>taxGroup</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TaxGroupDataAreaId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TaxIdentificationNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TaxOverrideGroup</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>tenderDeclarationCalculation</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>UseCustomerBasedTax</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>UseDefaultCustAccount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>UseDestinationBasedTax</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>UserName</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>RetailChannelTableSource_RetailOnlineChannelTable</Name>
					<Table>RetailOnlineChannelTable</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>OnlineCatalogName</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>OnlineFunctionalityProfile</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Partition</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>RetailChannelTableSource_RetailMCRChannelTable</Name>
					<Table>RetailMCRChannelTable</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>MCRCustomerCreditRetailInfocodeId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>MCREnableDirectedSelling</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>MCREnableOrderCompletion</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>MCREnableOrderPriceControl</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>MCRPriceOverrideRetailInfocodeId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>MCRReasonCodeRetailInfocodeId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Partition</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>RetailChannelTableSource_RetailDirectSalesChannel</Name>
					<Table>RetailDirectSalesChannel</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>DSClosingMethod</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSCultureName</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSFunctionalityProfile</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSInventLocationIdForCustomerOrder</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSInventoryLookup</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSMaximumPostingDifference</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSMaxRoundingAmount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSMaxShiftDifferenceAmount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSMaxTransactionDifferenceAmount</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSOfflineProfile</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSOneStatementPerDay</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSRemoveAddTender</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSRetailReqPlanIdSched</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSRoundingAccountLedgerDimension</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSSeparateStmtPerStaffTerminal</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSStatementMethod</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSStmtCalcBatchEndTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSStmtPostAsBusinessDay</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSStoreNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSTaxGroup</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSTaxGroupDataAreaId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSTaxIdentificationNumber</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSTaxOverrideGroup</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSTenderDeclarationCalculation</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSUseCustomerBasedTax</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>DSUseDestinationBasedTax</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Partition</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
			</DerivedDataSources>
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RET3276</Caption>
		<DataSource xmlns="">RetailStoreTenderTypeTable</DataSource>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Transfer</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RetailTransactionTenderTransfer</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<Text>Transfer</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>cardSetup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RetailStoreTenderTypeCardTable</MenuItemName>
								<Text>@Retail:RetailLabelElectronicPaymentSetup</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Currencies</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1145324610</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>RetailChannelTableSource</DataSource>
								<MenuItemName>RetailChannelCurrency</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>RetailInfocodeTableSpecific_StoreTenderType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655763</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
								<MenuItemName>RetailInfocodeTableSpecific_STT</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>RetailTransactionPaymentTrans</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RetailTransactionPaymentTrans</MenuItemName>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>RBOStoreTenderTypeTable_tenderTypeId</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>tenderTypeId</DataField>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>RBOStoreTenderTypeTable_name</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>name</DataField>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>RBOStoreTenderTypeTable_function</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>function</DataField>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
								<LabelAlignment>Right</LabelAlignment>
								<Items />
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>RetailStoreTenderTypeTable</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>RBOStoreTenderTypeTable_tenderTypeId1</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>tenderTypeId</DataField>
						<DataSource>RetailStoreTenderTypeTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Description</Name>
						<ElementPosition>805306365</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Description_name</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>name</DataField>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
						</Controls>
						<DataGroup>Description</DataGroup>
						<DataSource>RetailStoreTenderTypeTable</DataSource>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Function</Name>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>Function_function</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>function</DataField>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
								<Items />
							</AxFormControl>
						</Controls>
						<DataGroup>Function</DataGroup>
						<DataSource>RetailStoreTenderTypeTable</DataSource>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>536870910</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>536870910</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RBOStoreTenderTypeTable_PaymTermId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymTermId</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS5711</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>NonReceiptReturns</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>NonReceiptReturns_RestrictReturnsWithoutReceipt</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>RestrictReturnsWithoutReceipt</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>NonReceiptReturns</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FiscalPrinter_BR</Name>
								<ElementPosition>939524092</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FiscalPrinter_BR_fiscalPrinterTenderType_BR</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>fiscalPrinterTenderType_BR</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>FiscalPrinter_BR</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>RetailEx3</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1342177275</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>POSOperationName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>posOperationName</DataMethod>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailStoreTenderTypeTable_ConnectorName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ConnectorName</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailStoreTenderTypeTable_LegacyConnectorName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>RetailCDXBackwardCompatibility</ConfigurationKey>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>LegacyConnectorName</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@RET2690</Caption>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Group1</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569702</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Group1_openDrawer</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>openDrawer</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Group1_posCountEntries</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>posCountEntries</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@RET5074</Caption>
								<DataGroup>Group1</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SignatureCapture</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1968526674</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SignatureCapture_sigCapEnabled</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>sigCapEnabled</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SignatureCapture_sigCapMinAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>sigCapMinAmount</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>SignatureCapture</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymentDetails</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RetailStoreTenderTypeTable_HideCardInputDetailsInPOS</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>HideCardInputDetailsInPOS</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS116645</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Amount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>805306365</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OverUnderTender</Name>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>OverUnderTender_allowOvertender</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>allowOvertender</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>OverUnderTender_maximumOvertenderAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>maximumOvertenderAmount</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>OverUnderTender_allowUndertender</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>allowUndertender</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>OverUnderTender_undertenderAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>undertenderAmount</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>OverUnderTender</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TenderDeclaration</Name>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TenderDeclaration_maxCountingDifference</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>maxCountingDifference</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>TenderDeclaration_maxRecount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>maxRecount</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>TenderDeclaration</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>KeyboardEntry</Name>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<DataGroup>KeyboardEntry</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Rounding</Name>
								<ElementPosition>1533916890</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Rounding_roundingMethod</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>roundingMethod</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Rounding_rounding</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>rounding</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>Rounding</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Amounts</Name>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Amounts_minimumAmountEntered</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>minimumAmountEntered</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Amounts_maximumAmountEntered</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>maximumAmountEntered</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Amounts_maximumAmountAllowed</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>maximumAmountAllowed</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>Amounts</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GiftCardCashOutThresholdGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>GiftCardCashOutThresholdGroup_GiftCardCashOutThreshold</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>GiftCardCashOutThreshold</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>GiftCardCashOutThresholdGroup</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@RET3221</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Posting</Name>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Account</Name>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Account_accountType</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>accountType</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>Account_LedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>Account</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GiftCardAccount</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>832697740</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailStoreTenderTypeTable_GiftCardCompany</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>GiftCardCompany</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<Label>@REX1583</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>AccountTypeGiftCardCompany</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountTypeGiftCardCompany</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<Label>@REX1584</Label>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerDimensionGiftCardCompany</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountTypeGiftCardCompany</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<Label>@REX1585</Label>
										<ReferenceField>LedgerDimensionGiftCardCompany</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailStoreTenderTypeTable_GiftCardItemId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>GiftCardItemId</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@REX1635</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DifferenceAccount</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1051828724</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>DifferenceAccount_DifferenceAccLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<ReferenceField>DifferenceAccLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DifferenceAccount_M_differenceAccountName</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>differenceAccountName</DataMethod>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>DifferenceAccount_maxNormalDifferenceAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>maxNormalDifferenceAmount</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>DifferenceAccount_DiffAccBigDiffLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<ReferenceField>DiffAccBigDiffLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DifferenceAccount_M_differenceAccountForBigDifferenceName</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>differenceAccountForBigDifferenceName</DataMethod>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>DifferenceAccount</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Group2</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1270959708</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Group2_compressPaymentEntries</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>compressPaymentEntries</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Group2_countingRequired</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>countingRequired</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Group2_multiplyInTenderOperations</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>multiplyInTenderOperations</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Group2_allowFloat</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>allowFloat</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Group2_takenToBank</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>takenToBank</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Group2_takenToSafe</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>takenToSafe</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@RET260688</Caption>
								<DataGroup>Group2</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BankBagAccount</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1490090692</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>BankBagAccount_ActiveAccount</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActiveAccount</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>BankBagAccount_BankBagAccountType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankBagAccountType</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>BankBagAccount_BankBagLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>BankBagAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<ReferenceField>BankBagLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankBagAccount_bankTransactionType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>bankTransactionType</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>BankBagAccount</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SafeAccount</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1709221676</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SafeAccount_safeActiveAccount</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>safeActiveAccount</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<Label>@RET4963</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SafeAccount_safeAccountType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>safeAccountType</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>SafeAccount_SafeAccLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>safeAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<ReferenceField>SafeAccLedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>SafeAccount</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TenderFlowAccount_RU</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1928352660</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>TenderFlowAccount_RU_TenderFlowLedgerDimension_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<ReferenceField>TenderFlowLedgerDimension_RU</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>TenderFlowAccount_RU</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CashDrawerLimit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>UseCashDrawerLimit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashdrawerlimitEnabled</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<Label>@Retail:CashDrawerLimitId</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CashDrawerLimitAmount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDrawerLimit</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<Label>@Retail:CashDrawerMaximumAmountId</Label>
									</AxFormControl>
								</Controls>
								<Caption>@Retail:CashDrawerLimit</Caption>
								<DataGroup>CashDrawerLimit</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DeclareStartAmount</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>UseForDeclareStartAmount</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>UseForDeclareStartAmount</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<Label>@Retail:UseForDeclareStartAmount</Label>
									</AxFormControl>
								</Controls>
								<Caption>@Retail:CashManagementLabel</Caption>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@RET3211</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Check</Name>
						<ElementPosition>1342177275</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Check1</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Check1_endorseCheck</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>endorseCheck</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Check1_slipBackInPrinter</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>slipBackInPrinter</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Check1_endorsmentLine1</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>endorsmentLine1</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Check1_endorsmentLine2</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>endorsmentLine2</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Check1_frontOfCheck</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>frontOfCheck</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Check1_slipFrontInPrinter</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>slipFrontInPrinter</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Check1_checkPayee</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>checkPayee</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Check</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@RET3266</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Change</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612730</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ChangeSetup</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ChangeSetup_changeLineOnReceipt</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>changeLineOnReceipt</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ChangeSetup_aboveMinimumTenderId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>aboveMinimumTenderId</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ChangeSetup_minimumChangeAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>minimumChangeAmount</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ChangeSetup_changeTenderId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>changeTenderId</DataField>
										<DataSource>RetailStoreTenderTypeTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ChangeSetup</DataGroup>
								<DataSource>RetailStoreTenderTypeTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@RET3194</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabFinancialDimensions</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048185</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<NeededPermission>Manual</NeededPermission>
						<Pattern>DimensionEntryControl</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>DimensionEntryControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Container</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>DimensionEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmControlLabelText</Name>
											<Type>String</Type>
											<Value>@SYS138487</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumerationName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmDataSourceName</Name>
											<Type>String</Type>
											<Value>RetailStoreTenderTypeTable</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValueSetReferenceField</Name>
											<Type>String</Type>
											<Value>DefaultDimension</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumValueSetReferenceField</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@SYS101181</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>