<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>VendDefaultNonLedgerAccountLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class VendDefaultNonLedgerAccountLookup extends FormRun
{
    VendDefaultNonLedgerTableLookup accountLookup;
    Map tab2ComboBoxItemMap;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        TmpLedgerTable tmpLedgerTable;

        accountLookup = element.args().parmObject();

        super();

        tmpLedgerTable = accountLookup.tmpLedgerTable();
        tmpAllAccounts.setTmpData(tmpLedgerTable);

        switch (accountLookup.ledgerJournalACType())
        {
            case LedgerJournalACType::Cust :
                vendDefaultAccounts_AccountNum.label("@SYS7149");
                vendDefaultAccounts_AccountName.label("@SYS7399");
                break;

            case LedgerJournalACType::Vend :
                vendDefaultAccounts_AccountNum.label("@SYS14048");
                vendDefaultAccounts_AccountName.label("@SYS7399");
                break;

            case LedgerJournalACType::Project :
                vendDefaultAccounts_AccountNum.label("@SYS4534");
                vendDefaultAccounts_AccountName.label("@SYS7399");
                break;

            case LedgerJournalACType::FixedAssets :
                vendDefaultAccounts_AccountNum.label("@SYS67376");
                vendDefaultAccounts_AccountName.label("@SYS7399");
                break;

            case LedgerJournalACType::Bank :
                vendDefaultAccounts_AccountNum.label("@SYS1517");
                vendDefaultAccounts_AccountName.label("@SYS7399");
                break;

            default:
        }

        tmpAllAccounts_AccountNum.label(vendDefaultAccounts_AccountNum.label());
        tmpAllAccounts_AccountName.label(vendDefaultAccounts_AccountName.label());

        // this is for the default tab page
        element.selectMode(vendDefaultAccounts_AccountNum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeSelectRecord</Name>
				<Source><![CDATA[
    public void closeSelectRecord(Common _selectedRecord)
    {
        SegmentedEntryControl sec = SysTableLookup::getCallerControl(element.args()) as SegmentedEntryControl;
        if (sec == null)
        {
            super(_selectedRecord);
        }
        else
        {
            VendDefaultAccounts vendDefaultAccountsArg = _selectedRecord as VendDefaultAccounts;
            if (vendDefaultAccountsArg != null)
            {
                sec.updateCustomLookupNaturalKey(vendDefaultAccountsArg.parmAccount());
                this.close();
            }

            TmpLedgerTable tmpLedgerTableArg = _selectedRecord as TmpLedgerTable;
            if (tmpLedgerTableArg != null)
            {
                sec.updateCustomLookupNaturalKey(tmpLedgerTableArg.AccountNum);
                this.close();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        FormControl callingControl = SysTableLookup::getCallerControl(element.args());
        FormStringControl formStringControl;
        SegmentedEntryControl segmentedEntryControl;
        boolean filterLookup;

        // this isn't used on the default tab page
        tmpAllAccounts_ds.autoSearch(false);

        if (callingControl is FormStringControl)
        {
            formStringControl = callingControl as FormStringControl;

            filterLookup = SysTableLookup::filterLookupPreRun(formStringControl, vendDefaultAccounts_AccountNum, vendDefaultAccounts_ds);
            super();
            SysTableLookup::filterLookupPostRun(filterLookup, formStringControl.text(), vendDefaultAccounts_AccountNum, vendDefaultAccounts_ds);
        }
        else if (callingControl is SegmentedEntryControl)
        {
            segmentedEntryControl = callingControl as SegmentedEntryControl;

            filterLookup = SegmentedEntryTableLookup::filterSegmentedLookupPreRun(segmentedEntryControl, vendDefaultAccounts_AccountNum, vendDefaultAccounts_ds);
            super();
            SysTableLookup::filterLookupPostRun(filterLookup, segmentedEntryControl.valueStr(), vendDefaultAccounts_AccountNum, vendDefaultAccounts_ds);
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        // Generate view combobox based on tabs
        tab2ComboBoxItemMap = SysLookup::tab2ComboBox(Tab, switchView);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>VendDefaultAccounts</Name>
				<Methods>
					<Method>
						<Name>accountNum</Name>
						<Source><![CDATA[
        display AccountNum accountNum(VendDefaultAccounts _vendDefaultAccounts)
        {
            return _vendDefaultAccounts.parmAccount();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            VendTable vendTable;

            super();

            if (accountLookup)
            {
                vendTable = VendTable::find(accountLookup.vendAccount());

                this.query().dataSourceTable(tablenum(VendDefaultAccounts)).addRange(fieldnum(VendDefaultAccounts, LedgerJournalACType)).value(SysQuery::value(accountLookup.ledgerJournalACType()));

                if (VendDefaultAccounts::existVendAccountForType(vendTable.AccountNum, accountLookup.ledgerJournalACType()))
                {
                    this.query().dataSourceTable(tablenum(VendDefaultAccounts)).addRange(fieldnum(VendDefaultAccounts, VendAccount)).value(SysQuery::value(vendTable.AccountNum));
                }
                else
                {
                    if (VendDefaultAccounts::existVendGroupForType(vendTable.VendGroup, accountLookup.ledgerJournalACType()))
                    {
                        this.query().dataSourceTable(tablenum(VendDefaultAccounts)).addRange(fieldnum(VendDefaultAccounts, VendGroup)).value(vendTable.VendGroup);
                    }
                    else
                    {
                        this.query().dataSourceTable(tablenum(VendDefaultAccounts)).enabled(false);
                    }
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>tmpAllAccounts</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            if (accountLookup)
            {
                this.query().dataSourceTable(tablenum(TmpLedgerTable)).addRange(fieldnum(TmpLedgerTable, CompanyId)).value(accountLookup.companyId());
            }
            else
            {
                this.query().dataSourceTable(tablenum(TmpLedgerTable)).addRange(fieldnum(TmpLedgerTable, CompanyId)).value(curext());
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>switchView</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            Tab.tabChanged(Tab.tabValue(), tab2ComboBoxItemMap.lookup(this.selection()));

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DefaultTab</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            FormControl callingControl = SysTableLookup::getCallerControl(element.args());
            FormStringControl formStringControl;
            SegmentedEntryControl segmentedEntryControl;
            boolean filterLookup;

            super();

            element.selectMode(vendDefaultAccounts_AccountNum);

            if (callingControl is FormStringControl)
            {
                formStringControl = callingControl as FormStringControl;

                filterLookup = SysTableLookup::filterLookupPreRun(formStringControl, vendDefaultAccounts_AccountNum, vendDefaultAccounts_ds);

                if (filterLookup)
                {
                    SysTableLookup::filterLookupPostRun(filterLookup, formStringControl.text(), vendDefaultAccounts_AccountNum, vendDefaultAccounts_ds);
                }
                else
                {
                    vendDefaultAccounts_ds.executeQuery();
                }
            }
            else if (callingControl is SegmentedEntryControl)
            {
                segmentedEntryControl = callingControl as SegmentedEntryControl;

                filterLookup = SegmentedEntryTableLookup::filterSegmentedLookupPreRun(segmentedEntryControl, vendDefaultAccounts_AccountNum, vendDefaultAccounts_ds);

                if (filterLookup)
                {
                    SysTableLookup::filterLookupPostRun(filterLookup, segmentedEntryControl.valueStr(), vendDefaultAccounts_AccountNum, vendDefaultAccounts_ds);
                }
                else
                {
                    vendDefaultAccounts_ds.executeQuery();
                }
            }
            else
            {
                throw error(Error::wrongUseOfFunction(funcname()));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AllTab</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            FormControl callingControl = SysTableLookup::getCallerControl(element.args());
            FormStringControl formStringControl;
            SegmentedEntryControl segmentedEntryControl;
            boolean filterLookup;

            super();

            element.selectMode(tmpAllAccounts_AccountNum);

            if (callingControl is FormStringControl)
            {
                formStringControl = callingControl as FormStringControl;

                filterLookup = SysTableLookup::filterLookupPreRun(formStringControl, tmpAllAccounts_AccountNum, tmpAllAccounts_ds);

                if (filterLookup)
                {
                    SysTableLookup::filterLookupPostRun(filterLookup, formStringControl.text(), tmpAllAccounts_AccountNum, tmpAllAccounts_ds);
                }
                else
                {
                    tmpAllAccounts_ds.executeQuery();
                }
            }
            else if (callingControl is SegmentedEntryControl)
            {
                segmentedEntryControl = callingControl as SegmentedEntryControl;

                filterLookup = SegmentedEntryTableLookup::filterSegmentedLookupPreRun(segmentedEntryControl, tmpAllAccounts_AccountNum, tmpAllAccounts_ds);

                if (filterLookup)
                {
                    SysTableLookup::filterLookupPostRun(filterLookup, segmentedEntryControl.valueStr(), tmpAllAccounts_AccountNum, tmpAllAccounts_ds);
                }
                else
                {
                    tmpAllAccounts_ds.executeQuery();
                }
            }
            else
            {
                throw error(Error::wrongUseOfFunction(funcname()));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>VendDefaultAccounts</Name>
			<Table>VendDefaultAccounts</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionLedgerAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDefault</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalACType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Position</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendGroup</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>tmpAllAccounts</Name>
			<Table>TmpLedgerTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS2355</Caption>
		<Frame xmlns="">Border</Frame>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">LookupTab</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>View</Name>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>switchView</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS5252</Label>
						<ShowLabel>No</ShowLabel>
						<Items />
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DefaultTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>DefaultGrid</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToContent</HeightMode>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendDefaultAccounts_AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>accountNum</DataMethod>
										<DataSource>VendDefaultAccounts</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VendDefaultAccounts_AccountName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>accountName</DataMethod>
										<DataSource>VendDefaultAccounts</DataSource>
										<Label>@SYS7399</Label>
									</AxFormControl>
								</Controls>
								<DataSource>VendDefaultAccounts</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
								<Style>Tabular</Style>
							</AxFormControl>
						</Controls>
						<Caption>@SYS78146</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AllTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToContent</HeightMode>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>tmpAllAccounts_AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountNum</DataField>
										<DataSource>tmpAllAccounts</DataSource>
										<Label>@SYS24500</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>tmpAllAccounts_AccountName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountName</DataField>
										<DataSource>tmpAllAccounts</DataSource>
										<Label>@SYS7399</Label>
									</AxFormControl>
								</Controls>
								<DataSource>tmpAllAccounts</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
								<Style>Tabular</Style>
							</AxFormControl>
						</Controls>
						<Caption>@SYS7741</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>