<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TaxReportStructureSchematicDiagram_IN</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class TaxReportStructureSchematicDiagram_IN extends FormRun
    {
}
]]></Source>
			</Method>
			<Method>
				<Name>getOutlineNodeStr</Name>
				<Source><![CDATA[
        str getOutlineNodeStr(TaxReportHrchyNode_IN _node)
    {
        DictClass                               designClass;
        TaxReportHrchyStructureAttribute_IN     designAttr;

        switch (_node.parmClassId())
        {
            case classNum(TaxReportHrchyRootNode_IN):
                designClass = new DictClass(taxReportHierarchy_IN.RefClassId);
                designAttr = designClass.getAttribute(classStr(TaxReportHrchyStructureAttribute_IN));
                return designAttr.getLabel();

            case classNum(TaxReportHrchyTaxTypeNode_IN):
                return _node.parmDisplayValue();

            default:
                return _node.getNodeTypeLabel();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOutline</Name>
				<Source><![CDATA[
    void updateOutline(TaxReportHrchyStructureAttribute_IN _designAttr)
    {
        TaxReportHrchyStructureDesign_IN    design;
        TaxReportHrchyStructDesignType_IN   type;
        ListEnumerator  e;

        type = str2enum(type, _designAttr.getLabel());
        design = TaxReportHrchyStructDesignFactory_IN::getStructureDesign(type, "");

        // Clear the outline tree
        outlineTree.deleteAll();

        // Populate the outline tree starting from the root node
        e = design.getNextLevelNodes(null, true).getEnumerator();
        e.moveNext();
        element.populateOutlineTree(e.current(), FormTreeAdd::Root, design);

        // Expand the outline tree
        SysFormTreeControl::expandTree(outlineTree, outlineTree.getRoot(), 10);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateOutlineTree</Name>
				<Source><![CDATA[
    void populateOutlineTree(TaxReportHrchyNode_IN _node, TreeItemIdx _parentIdx, TaxReportHrchyStructureDesign_IN _design)
    {
        str                     outlineStr;
        TreeItemIdx             itemIdx;
        ListEnumerator          childNodeEnumerator;
        TaxReportHrchyNode_IN   childNode;

        outlineStr = element.getOutlineNodeStr(_node);

        itemIdx = SysFormTreeControl::addTreeItem(
                outlineTree,
                outlineStr,
                _parentIdx,
                outlineStr,
                10052,
                true);

        childNodeEnumerator = _design.getNextLevelNodes(_node).getEnumerator();
        while (childNodeEnumerator.moveNext())
        {
            childNode = childNodeEnumerator.current();
            element.populateOutlineTree(childNode, itemIdx, _design);

            // Only tax type nodes should be thoroughly iterated
            if (childNode.parmClassId() != classNum(TaxReportHrchyTaxTypeNode_IN))
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TaxReportHierarchy_IN</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            DictClass designClass;
            TaxReportHrchyStructureAttribute_IN designAttr;

            ret = super();

            designClass = new DictClass(taxReportHierarchy_IN.RefClassId);
            designAttr = designClass.getAttribute(classStr(TaxReportHrchyStructureAttribute_IN));

            // Update the outline tree
            element.updateOutline(designAttr);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TaxReportHierarchy_IN</Name>
			<Table>TaxReportHierarchy_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSetoffable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefClassId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS4005894</Caption>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">Custom</Pattern>
		<Scrollbars xmlns="">No</Scrollbars>
		<SetCompany xmlns="">No</SetCompany>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<Style xmlns="">FormPart</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTreeControl">
				<Name>OutlineTree</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Height>400</Height>
				<HeightMode>Manual</HeightMode>
				<Type>Tree</Type>
				<FormControlExtension
					i:nil="true" />
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>