<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TMSInvoiceJournal</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TMSInvoiceJournal extends FormRun
{
    List                 invoiceList;
    TMSRouteId           routeId;
    WHSLoadId            loadId;
    TMSInternalInvNumber invNum;
    SalesId              salesId;
    TMSFreightBillDetail billDetail;

}
]]></Source>
			</Method>
			<Method>
				<Name>getInvoices</Name>
				<Source><![CDATA[
    void getInvoices()
    {
        TMSLedgerJourRef                        ledgerJourRef;
        TMSInvoiceTable                         invoiceTable;
        TMSFBInvMatch                           fbMatched;
        TMSInvoiceLine                          invoiceLine;
        TMSFreightBillDetail                    fbDetail;
        WHSLoadLine                             loadLine;

        invoiceList = new List(Types::String);
        if (invNum)
        {
            while select RefJournalNum from ledgerJourRef
                join RecId, TableId from invoiceLine
                where ledgerJourRef.RefRecId            == invoiceLine.RecId   &&
                      ledgerJourRef.RefTableId          == invoiceLine.TableId &&
                      invoiceLine.InternalInvNumber  == invNum
            {
                invoiceList.addEnd(ledgerJourRef.RefJournalNum);
            }
        }
        else if (billDetail && TMSFeatureFlightState::TMSDistributeShipmentToRouteSegmentFeature())
        {
            while select RefJournalNum from ledgerJourRef
                join RecId, TableId from invoiceLine
                where ledgerJourRef.RefRecId    == invoiceLine.RecId &&
                      ledgerJourRef.RefTableId  == invoiceLine.TableId
                    join InvoiceLineRecId, FreightBillDetailRecId from fbMatched
                        where fbMatched.InvoiceLineRecId        == invoiceLine.RecId
                           && fbMatched.FreightBillDetailRecId  == billDetail.RecId
            {
                invoiceList.addEnd(ledgerJourRef.RefJournalNum);
            }
        }
        else if (salesId)
        {
            while select RefJournalNum from ledgerJourRef
                join RecId, TableId from invoiceLine
                where ledgerJourRef.RefRecId    == invoiceLine.RecId &&
                      ledgerJourRef.RefTableId  == invoiceLine.TableId
                join LoadId, OrderNum, InventTransType, TransportRequest from loadLine
                    where loadLine.LoadId           == invoiceLine.LoadId       &&
                          loadLine.OrderNum         == salesId                  &&
                          loadLine.InventTransType  == InventTransType::Sales   &&
                          loadLine.TransportRequest == NoYes::No

            {
                invoiceList.addEnd(ledgerJourRef.RefJournalNum);
            }

            while select RefJournalNum from ledgerJourRef
                join RecId, TableId from invoiceLine
                where ledgerJourRef.RefRecId    == invoiceLine.RecId &&
                      ledgerJourRef.RefTableId  == invoiceLine.TableId
                join InvoiceLineRecId, FreightBillDetailRecId from fbMatched
                        where fbMatched.InvoiceLineRecId   == invoiceLine.RecId
                        join LoadId, RecId from fbDetail
                            where fbDetail.RecId    == fbMatched.FreightBillDetailRecId
                            join LoadId, OrderNum, InventTransType, TransportRequest from loadLine
                                where loadLine.LoadId           == fbDetail.LoadId          &&
                                      loadLine.OrderNum         == salesId                  &&
                                      loadLine.InventTransType  == InventTransType::Sales   &&
                                      loadLine.TransportRequest == NoYes::No
            {
                invoiceList.addEnd(ledgerJourRef.RefJournalNum);
            }
        }

        else
        {
            while select RefJournalNum from ledgerJourRef
                join RecId, TableId, LoadId, InternalInvNumber from invoiceLine
                where ledgerJourRef.RefRecId    == invoiceLine.RecId    &&
                      ledgerJourRef.RefTableId  == invoiceLine.TableId  &&
                      ((loadId && invoiceLine.LoadId == loadId)      ||
                      !loadId)
                join InternalInvNumber, RouteCode from invoiceTable
                    where invoiceTable.InternalInvNumber == invoiceLine.InternalInvNumber &&
                          invoiceTable.RouteCode         == routeId
            {
                invoiceList.addEnd(ledgerJourRef.RefJournalNum);
            }

            while select RefJournalNum from ledgerJourRef
                join RecId, TableId from invoiceLine
                where ledgerJourRef.RefRecId    == invoiceLine.RecId &&
                      ledgerJourRef.RefTableId  == invoiceLine.TableId
                    join InvoiceLineRecId, FreightBillDetailRecId from fbMatched
                        where fbMatched.InvoiceLineRecId   == invoiceLine.RecId
                        join RecId, RouteCode from fbDetail
                            where fbDetail.RecId        == fbMatched.FreightBillDetailRecId &&
                                  fbDetail.RouteCode == routeId
            {
                invoiceList.addEnd(ledgerJourRef.RefJournalNum);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        this.processRecord();

        this.getInvoices();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processRecord</Name>
				<Source><![CDATA[
    private void processRecord()
    {
        TMSRoute             route;
        WHSLoadTable         loadTable;
        TMSInvoiceTable      invoiceTable;
        SalesTable           salesTable;

        if (this.args().record())
        {
            switch (this.args().record().TableId)
            {
                case tableNum(TMSFreightBillDetail):
                    billDetail  = this.args().record();
                    routeId     = billDetail.RouteCode;
                    loadId      = billDetail.LoadId;
                    break;

                case tableNum(TMSRoute):
                    route   = this.args().record();
                    routeId = route.RouteCode;
                    loadId  = '';
                    break;

                case tableNum(WHSLoadTable):
                    loadTable   = this.args().record();
                    routeId     = loadTable.RouteCode;
                    loadId      = loadTable.LoadId;
                    break;

                case tableNum(TMSInvoiceTable):
                    invoiceTable    = this.args().record();
                    invNum          = invoiceTable.InternalInvNumber;
                    routeId         = invoiceTable.RouteCode;
                    loadId          = invoiceTable.LoadId;
                    break;

                case tableNum(SalesTable):
                    salesTable      = this.args().record();
                    salesId         = salesTable.SalesId;
                    break;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TMSLedgerJourRef</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource qbds;

            super();

            qbds = this.query().dataSourceName(this.name());
            qbds.addRange(fieldNum(TMSLedgerJourRef, RefJournalNum)).value(strRem(invoiceList.toString(), '<>'));
            qbds.addGroupByField(fieldNum(TMSLedgerJourRef, RefJournalNum));
            qbds.clearDynalinks();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>LedgerJournalTable</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args                args = new Args();
            FormRun             formRun;
            LedgerJournalTable  ledgerJournalTable;

            super();

            ledgerJournalTable = LedgerJournalTable::find(tmsLedgerJourRef.RefJournalNum);

            args.name(formStr(LedgerJournalTable));
            args.caller(this);
            args.lookupRecord(ledgerJournalTable);

            formRun = classfactory.formRunClass(args);
            formRun.init();

            formRun.run();
            formRun.wait();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TMSLedgerJourRef</Name>
			<Table>TMSLedgerJourRef</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefJournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@TRX1254</Caption>
		<DataSource xmlns="">TMSLedgerJourRef</DataSource>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>LedgerJournalTable</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@TRX1287</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@TRX1275</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>TMSLedgerJourRef_RefJournalNum</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>TMSLedgerJourRef_RefJournalNum</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>RefJournalNum</DataField>
						<DataSource>TMSLedgerJourRef</DataSource>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>TMSLedgerJourRef</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>