<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>LedgerJournalSetup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
using IFeature = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.Implementation.IFeature;

[Form]
public class LedgerJournalSetup extends FormRun
{
    #ISOCountryRegionCodes

    LedgerPostingJournalVoucherSeries ledgerPostingJournalVoucherSeries;

    Map journalTypeSortedIndexToEnumIndex;
    Map journalTypeEnumIndexToSortedIndex;

    boolean isItalyContext = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT]);

}
]]></Source>
			</Method>
			<Method>
				<Name>dialogOkCancel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays a reusable Ok,Cancel dialog.
    /// </summary>
    /// <param name="_message">
    /// _message is the pre-formated string the dialog box will display.
    /// </param>
    /// <returns>
    /// true on a response of "Ok", otherwise false;
    /// </returns>
    /// <remarks>
    /// This method is designed to handle the multiple dialogs used to support
    /// the Ledger journal workflow approvals validations required for this form.
    /// </remarks>
    public boolean dialogOkCancel(str _message)
    {
        boolean ret = true;

        DialogButton dialogBox = Box::okCancel(_message, DialogButton::Ok, "@SYS866");

        if (dialogBox == DialogButton::Cancel)
        {
            ret =  false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogYesNo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays a reusable Yes,No dialog.
    /// </summary>
    /// <param name="_message">
    /// _message is the pre-formated string the dialog box will display.
    /// </param>
    /// <returns>
    /// true on a response of "Yes", otherwise false;
    /// </returns>
    /// <remarks>
    /// This method is designed to handle the multiple dialogs used to support
    /// the Ledger journal workflow approvals validations required for this form.
    /// </remarks>
    public boolean dialogYesNo(str _message)
    {
        boolean ret = true;

        DialogButton dialogBox = Box::yesNo(_message, DialogButton::Yes, "@SYS866");

        if (dialogBox == DialogButton::No)
        {
            ret =  false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableControls_RU</Name>
				<Source><![CDATA[
    void enableControls_RU()
    {
        currency.allowEdit(ledgerJournalName.JournalType != LedgerJournalType::RDeferrals);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFBTaxAssessmentAdjustFields_BR</Name>
				<Source><![CDATA[
    private void enableFBTaxAssessmentAdjustFields_BR(LedgerJournalName _ledgerJournalName)
    {
        // enable the all fields that might have been disabled and do no defaulting
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,OffsetLedgerDimension)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,NewVoucher)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,OffsetAccountType)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,FixedExchRate)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,DetailSummary)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,DocumentNum)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,CurrencyCode)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,FixedOffsetAccount)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,LedgerJournalInclTax)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,CurrentOperationsTax)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,LedgerJournalFeePosting)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,EndBalanceControl)).allowEdit(_ledgerJournalName.FixedOffsetAccount);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,TaxBookTypeJournal)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,GeneratePayments_IT)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,VoucherAllocatedAtPosting)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,LinesLimitBeforeDistribution)).allowEdit(false);

        // update controls last
        accounts.allowEdit(true);
        DimensionEntryControl.allowEdit(true);
        tabFinancialDimensions.allowEdit(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFields</Name>
				<Source><![CDATA[
    //
    // this method is used to permit the entry or not of specified fields based on journal type
    //
    void enableFields(LedgerJournalName _ledgerJournalName)
    {
        if (LedgerJournalForcedJournalSplitFeature::isEnabled()
            && LedgerJournalTable::journalTypeAllowsSplitting(_ledgerJournalName.JournalType))
        {
            Posting_LinesLimitBeforeDistribution.visible(false);
        }

        // <GEERU><GJP>
        #ISOCountryRegionCodes
        // </GJP></GEERU>
        switch (_ledgerJournalName.JournalType)
        {
            case LedgerJournalType::Allocation:    
            case LedgerJournalType::Elimination:    
                element.enableFieldsAllocOrElim(_ledgerJournalName);
                break;

            case LedgerJournalType::BankChequeReversal:
            case LedgerJournalType::BankDepositPaymCancel:
                element.enableFieldsChequeOrDeposit(_ledgerJournalName);
                break;

            case LedgerJournalType::Budget:
                element.enableFieldsAllocOrElim(_ledgerJournalName);
                tabFinancialDimensions.allowEdit(false);
                break;

            case LedgerJournalType::Netting:
                this.enableFieldsNetting(_ledgerJournalName);
                break;

            case LedgerJournalType::CustVendNetting:
                this.enableFieldsCustVendNetting(_ledgerJournalName);
                break;

            // <GBR>
            case LedgerJournalType::FBTaxAssessmentAdjustments_BR:
                element.enableFBTaxAssessmentAdjustFields_BR(_ledgerJournalName);
                break;
            // </GBR>
            case LedgerJournalType::ReportingCurrencyAdjustment:
                element.enableFieldsAllocOrElim(_ledgerJournalName);
                element.enableFieldsReportingCurrencyAdjustment(_ledgerJournalName);
                break;

            default:
                element.enableFieldsDefault(_ledgerJournalName);
                break;
        }

        element.enableFields_PostControl(_ledgerJournalName);
        element.enableFields_TaxHideAmount(_ledgerJournalName);
        element.enableFields_OverrideSalesTax(_ledgerJournalName);
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            element.enableFields_CashAccount();
        }
        // </GEERU>
        // <GJP>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoJP]))
        {
            element.enableFields_JP();
        }
        // </GJP>

        if (isItalyContext)
        {
            element.enableFields_IT();
        }

        if (_ledgerJournalName.JournalType == LedgerJournalType::Assets
            || _ledgerJournalName.JournalType == LedgerJournalType::Assets_RU
            || _ledgerJournalName.JournalType == LedgerJournalType::AssetBudgets
            || _ledgerJournalName.JournalType == LedgerJournalType::AssetBudgets_RU)
        {
            Posting_LinesLimitBeforeDistribution.visible(!AssetIgnoreJournalSplittingFlight::instance().isEnabled());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFields_OverrideSalesTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable the override sales tax field based on journal type.
    /// </summary>
    /// <param name="_ledgerJournalName">
    /// The LedgerJournalName record.
    /// </param>
    internal void enableFields_OverrideSalesTax(LedgerJournalName _ledgerJournalName)
    {
        boolean canEditOverrideSalesTax = TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalName.JournalType)
                    && ledgerJournalName.JournalType != LedgerJournalType::Approval
                    && ledgerJournalName.JournalType != LedgerJournalType::VendInvoicePool;

        LedgerJournalName_ds.object(fieldNum(LedgerJournalName, OverrideSalesTax)).allowEdit(canEditOverrideSalesTax);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFields_Approvals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prevents both approval options from being active at the same time.
    /// </summary>
    /// <param name="_ledgerJournalName">
    /// The LedgerJournalName record.
    /// </param>
    /// <remarks>
    /// The different approvals are mutually exclusive to avoid maintaining two approval processes
    /// on any journal.
    /// </remarks>
    public void enableFields_Approvals(LedgerJournalName _ledgerJournalName)
    {
        if (_ledgerJournalName.ApproveActive)
        {
            ledgerJournalName_ds.object(fieldNum(LedgerJournalName, WorkflowApproval)).allowEdit(false);
        }
        else if (_ledgerJournalName.WorkflowApproval)
        {
            ledgerJournalName_ds.object(fieldNum(LedgerJournalName, ApproveActive)).allowEdit(false);
        }
        else
        {
            ledgerJournalName_ds.object(fieldNum(LedgerJournalName, WorkflowApproval)).allowEdit(true);
            ledgerJournalName_ds.object(fieldNum(LedgerJournalName, ApproveActive)).allowEdit(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFields_CashAccount</Name>
				<Source><![CDATA[
    private void enableFields_CashAccount()
    {
        if (ledgerJournalName.JournalType != LedgerJournalType::RCash)
        {
            ledgerJournalName.CashAccount_W = '';
        }

        ledgerJournalName_ds.object(fieldnum(LedgerJournalName, CashAccount_W)).allowEdit(ledgerJournalName.JournalType == LedgerJournalType::RCash);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFields_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable Japan allow only positive debits and credits if journal name type is daily; otherwise disable the field.
    /// </summary>
    /// <remarks>
    /// The different approvals are mutually exclusive to avoid maintaining two approval processes
    /// on any journal.
    /// </remarks>
    void enableFields_JP()
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceJP00012, funcName());
        ledgerJournalName_ds.object(
            fieldnum(LedgerJournalName, PositiveDRCROnly_JP)).allowEdit(ledgerJournalName.JournalType == LedgerJournalType::Daily);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFields_IT</Name>
				<Source><![CDATA[
	/// <summary>
    /// Enable fields for Italian Customs Documentation if journal name type is Customs Declaration IT
    /// </summary>
    void enableFields_IT()
    {
        LedgerJournalName_Customs_IT_ds.allowEdit(ledgerJournalName.JournalType == LedgerJournalType::CustomsDeclaration_IT);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFields_PostControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disable PostControl button if ledger journal posting restrictions setup does not
    /// support current LedgerJournalType.
    /// </summary>
    /// <param name="_ledgerJournalName">
    /// The LedgerJournalName record.
    /// </param>
    private void enableFields_PostControl(LedgerJournalName _ledgerJournalName)
    {
        boolean isEnablePostControl;

        isEnablePostControl = ledgerJournalName.JournalType ==
            LedgerJournalType::Budget ? false : LedgerJournalPostControl::postControlEnabledForJournalType(_ledgerJournalName.JournalType);

        postControl.enabled(isEnablePostControl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFields_TaxHideAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables the field to hide tax amounts based on journal type.
    /// </summary>
    /// <param name="_ledgerJournalName">
    /// The LedgerJournalName record.
    /// </param>
    private void enableFields_TaxHideAmount(LedgerJournalName _ledgerJournalName)
    {
        if (_ledgerJournalName.JournalType == LedgerJournalType::Daily ||
            _ledgerJournalName.JournalType == LedgerJournalType::PurchaseLedger ||
            _ledgerJournalName.JournalType == LedgerJournalType::VendInvoiceRegister ||
            _ledgerJournalName.JournalType == LedgerJournalType::CustBillOfExchangeDraw ||
            _ledgerJournalName.JournalType == LedgerJournalType::CustBillOfExchangeProtest ||
            _ledgerJournalName.JournalType == LedgerJournalType::CustBillOfExchangeRedraw ||
            _ledgerJournalName.JournalType == LedgerJournalType::CustPaymRemittance ||
            _ledgerJournalName.JournalType == LedgerJournalType::CustBillOfExchangeSettle ||
            _ledgerJournalName.JournalType == LedgerJournalType::VendPromissoryNoteDraw ||
            _ledgerJournalName.JournalType == LedgerJournalType::VendPromissoryNoteRedraw ||
            _ledgerJournalName.JournalType == LedgerJournalType::VendPaymRemittance ||
            _ledgerJournalName.JournalType == LedgerJournalType::VendPromissoryNoteSettle ||
            _ledgerJournalName.JournalType == LedgerJournalType::Cost ||
            _ledgerJournalName.JournalType == LedgerJournalType::Approval)
        {
            ledgerJournalName_ds.object(fieldNum(LedgerJournalName, TaxHideAmountFields)).allowEdit(true);
        }
        else
        {
            ledgerJournalName_ds.object(fieldNum(LedgerJournalName, TaxHideAmountFields)).allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsAllocOrElim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the special data defaulting and datasource field disabling
    /// for Allocation and Elimination type journals.
    /// </summary>
    /// <param name="_ledgerJournalName">
    /// The LedgerJournalName record.
    /// </param>
    void enableFieldsAllocOrElim(LedgerJournalName _ledgerJournalName)
    {
        // set default values and disable fields for specific journal type
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,OffsetLedgerDimension)).allowEdit(false);
        _ledgerJournalName.NewVoucher = NewVoucher::BalanceSheet;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,NewVoucher)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,OffsetAccountType)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,FixedExchRate)).allowEdit(false);
        _ledgerJournalName.DetailSummary = DetailSummary::Detail;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,DetailSummary)).allowEdit(false);
        _ledgerJournalName.DocumentNum = "";
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,DocumentNum)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,CurrencyCode)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,FixedOffsetAccount)).allowEdit(false);
        _ledgerJournalName.LedgerJournalInclTax = NoYes::No;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,LedgerJournalInclTax)).allowEdit(false);

        if (_ledgerJournalName.JournalType == LedgerJournalType::Elimination)
        {
            ledgerJournalName_ds.object(fieldNum(LedgerJournalName,CurrentOperationsTax)).allowEdit(true);
        }
        else
        {
            _ledgerJournalName.CurrentOperationsTax = CurrentOperationsTax::Current;
            ledgerJournalName_ds.object(fieldNum(LedgerJournalName,CurrentOperationsTax)).allowEdit(false);
        }

        _ledgerJournalName.LedgerJournalFeePosting = LedgerJournalFeePosting::Keep;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,LedgerJournalFeePosting)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,EndBalanceControl)).allowEdit(false);
        _ledgerJournalName.TaxBookTypeJournal = TaxBookTypeJournal::Empty;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,TaxBookTypeJournal)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,GeneratePayments_IT)).allowEdit(false);
        _ledgerJournalName.VoucherAllocatedAtPosting = NoYes::No;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,VoucherAllocatedAtPosting)).allowEdit(false);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,LinesLimitBeforeDistribution)).allowEdit(false);

        // update controls last
        accounts.allowEdit(false);
        DimensionEntryControl.allowEdit(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsReportingCurrencyAdjustment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the special data defaulting and datasource field disabling
    /// for Reporting currency adjustment type journals.
    /// </summary>
    /// <param name="_ledgerJournalName">
    /// The LedgerJournalName record.
    /// </param>
    void enableFieldsReportingCurrencyAdjustment(LedgerJournalName _ledgerJournalName)
    {
        // set default values and disable fields for specific journal type
        _ledgerJournalName.CurrentOperationsTax = CurrentOperationsTax::Current;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,CurrentOperationsTax)).allowEdit(true);        
        DimensionEntryControl.allowEdit(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsChequeOrDeposit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the special data defaulting and datasource field disabling
    /// for Cheque reversal and Deposit cancellation type journals.
    /// </summary>
    /// <param name="_ledgerJournalName">
    /// The LedgerJournalName record.
    /// </param>
    void enableFieldsChequeOrDeposit(LedgerJournalName _ledgerJournalName)
    {
        // set default values and disable fields for specific journal type
        _ledgerJournalName.NewVoucher = NewVoucher::BalanceSheet;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,NewVoucher)).allowEdit(false);

        _ledgerJournalName.DocumentNum = "";
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,DocumentNum)).allowEdit(false);

        _ledgerJournalName.VoucherAllocatedAtPosting = NoYes::No;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,VoucherAllocatedAtPosting)).allowEdit(false);

        _ledgerJournalName.OffsetAccountType = LedgerJournalACType::Ledger;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,OffsetAccountType)).allowEdit(false);

        _ledgerJournalName.parmOffsetLedgerDimension(0);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,OffsetLedgerDimension)).allowEdit(false);

        _ledgerJournalName.FixedOffsetAccount = NoYes::No;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,FixedOffsetAccount)).allowEdit(false);

        _ledgerJournalName.DetailSummary = DetailSummary::Detail;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,DetailSummary)).allowEdit(true);

        _ledgerJournalName.CurrentOperationsTax = CurrentOperationsTax::Current;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,CurrentOperationsTax)).allowEdit(false);

        _ledgerJournalName.LedgerJournalFeePosting = LedgerJournalFeePosting::Keep;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,LedgerJournalFeePosting)).allowEdit(false);

        _ledgerJournalName.LinesLimitBeforeDistribution = 0;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,LinesLimitBeforeDistribution)).allowEdit(false);

        _ledgerJournalName.CurrencyCode = "";
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,CurrencyCode)).allowEdit(false);

        _ledgerJournalName.FixedExchRate = NoYes::No;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,FixedExchRate)).allowEdit(false);

        _ledgerJournalName.LedgerJournalInclTax = NoYes::Yes;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,LedgerJournalInclTax)).allowEdit(false);

        // update controls last
        accounts.allowEdit(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsNetting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the special data defaulting and datasource field disabling
    /// for Netting type journals.
    /// </summary>
    /// <param name="_ledgerJournalName">
    /// The LedgerJournalName record.
    /// </param>
    private void enableFieldsNetting(LedgerJournalName _ledgerJournalName)
    {
        // set default values and disable fields for specific journal type
        _ledgerJournalName.NewVoucher = NewVoucher::BalanceSheet;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, NewVoucher)).allowEdit(false);

        _ledgerJournalName.VoucherAllocatedAtPosting = NoYes::No;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, VoucherAllocatedAtPosting)).allowEdit(false);

        _ledgerJournalName.OffsetAccountType = LedgerJournalACType::Ledger;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, OffsetAccountType)).allowEdit(false);

        _ledgerJournalName.parmOffsetLedgerDimension(0);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, OffsetLedgerDimension)).allowEdit(false);

        _ledgerJournalName.FixedOffsetAccount = NoYes::No;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, FixedOffsetAccount)).allowEdit(false);

        _ledgerJournalName.DetailSummary = DetailSummary::Detail;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, DetailSummary)).allowEdit(false);

        _ledgerJournalName.DocumentNum = '';
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, DocumentNum)).allowEdit(false);

        _ledgerJournalName.LinesLimitBeforeDistribution = 0;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, LinesLimitBeforeDistribution)).allowEdit(false);

        _ledgerJournalName.CurrentOperationsTax = CurrentOperationsTax::Current;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, CurrentOperationsTax)).allowEdit(false);

        _ledgerJournalName.LedgerJournalFeePosting = LedgerJournalFeePosting::Keep;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, LedgerJournalFeePosting)).allowEdit(false);

        _ledgerJournalName.CurrencyCode = '';
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, CurrencyCode)).allowEdit(false);

        _ledgerJournalName.FixedExchRate = NoYes::No;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, FixedExchRate)).allowEdit(false);

        _ledgerJournalName.LedgerJournalInclTax = NoYes::No;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, LedgerJournalInclTax)).allowEdit(false);

        _ledgerJournalName.TaxHideAmountFields = NoYes::Yes;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, TaxHideAmountFields)).allowEdit(false);

        // Previous workflow is not supported.
        approval.allowEdit(false);
        _ledgerJournalName.ApproveActive = NoYes::No;
        _ledgerJournalName.ApproveGroupId = '';

        // update controls last
        accounts.allowEdit(false);
        tabFinancialDimensions.allowEdit(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsCustVendNetting</Name>
				<Source><![CDATA[
    private void enableFieldsCustVendNetting(LedgerJournalName _ledgerJournalName)
    {
        _ledgerJournalName.NewVoucher = NewVoucher::BalanceSheet;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, NewVoucher)).allowEdit(false);

        _ledgerJournalName.VoucherAllocatedAtPosting = NoYes::No;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, VoucherAllocatedAtPosting)).allowEdit(false);

        _ledgerJournalName.OffsetAccountType = LedgerJournalACType::Ledger;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, OffsetAccountType)).allowEdit(false);

        _ledgerJournalName.parmOffsetLedgerDimension(0);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, OffsetLedgerDimension)).allowEdit(false);

        _ledgerJournalName.FixedOffsetAccount = NoYes::No;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, FixedOffsetAccount)).allowEdit(false);

        _ledgerJournalName.DetailSummary = DetailSummary::Detail;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, DetailSummary)).allowEdit(false);

        _ledgerJournalName.DocumentNum = '';
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, DocumentNum)).allowEdit(false);

        _ledgerJournalName.LinesLimitBeforeDistribution = 0;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, LinesLimitBeforeDistribution)).allowEdit(false);

        _ledgerJournalName.CurrentOperationsTax = CurrentOperationsTax::Current;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, CurrentOperationsTax)).allowEdit(false);

        _ledgerJournalName.LedgerJournalFeePosting = LedgerJournalFeePosting::Keep;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, LedgerJournalFeePosting)).allowEdit(false);

        _ledgerJournalName.CurrencyCode = '';
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, CurrencyCode)).allowEdit(false);

        _ledgerJournalName.FixedExchRate = NoYes::No;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, FixedExchRate)).allowEdit(false);

        _ledgerJournalName.LedgerJournalInclTax = NoYes::No;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, LedgerJournalInclTax)).allowEdit(false);

        _ledgerJournalName.TaxHideAmountFields = NoYes::Yes;
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, TaxHideAmountFields)).allowEdit(false);

        // Workflow is not supported.
        Approval.allowEdit(false);
        _ledgerJournalName.ApproveActive = NoYes::No;
        _ledgerJournalName.ApproveGroupId = '';

        ApprovalWorkflow.allowEdit(false);
        _ledgerJournalName.WorkflowApproval = NoYes::No;
        _ledgerJournalName.Configuration = '';

        // Update controls last
        Accounts.allowEdit(false);
        tabFinancialDimensions.allowEdit(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the default data defaulting and datasource field enabling
    /// for journal types that do not require special handling.
    /// </summary>
    /// <param name="_ledgerJournalName">
    /// The LedgerJournalName record.
    /// </param>
    void enableFieldsDefault(LedgerJournalName _ledgerJournalName)
    {
        // enable the all fields that might have been disabled and do no defaulting
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,OffsetLedgerDimension)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,NewVoucher)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,OffsetAccountType)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,FixedExchRate)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,DetailSummary)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,DocumentNum)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,CurrencyCode)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,FixedOffsetAccount)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,LedgerJournalInclTax)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,CurrentOperationsTax)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,LedgerJournalFeePosting)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,EndBalanceControl)).allowEdit(_ledgerJournalName.FixedOffsetAccount);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,TaxBookTypeJournal)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,GeneratePayments_IT)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,VoucherAllocatedAtPosting)).allowEdit(true);
        ledgerJournalName_ds.object(fieldNum(LedgerJournalName,LinesLimitBeforeDistribution)).allowEdit(true);

        // update controls last
        accounts.allowEdit(true);
        DimensionEntryControl.allowEdit(true);
        tabFinancialDimensions.allowEdit(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableControlsBank</Name>
				<Source><![CDATA[
    private void enableControlsBank()
    {
        if (ledgerJournalName.JournalType == LedgerJournalType::Daily
            || ledgerJournalName.JournalType == LedgerJournalType::Payment
            || ledgerJournalName.JournalType == LedgerJournalType::CustPayment)
        {
            Bank.visible(true);
            ledgerJournalName_ds.object(fieldNum(LedgerJournalName, BankTransSummarizationCriteria)).allowEdit(ledgerJournalName.BankTransSummarizationEnabled);
        }
        else
        {
            Bank.visible(false);
        }   
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalTypeIndex</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the journal type enum index for the journal type sorted index.
    /// </summary>
    /// <param name="_journalTypeSortedIndex">
    /// The journal type sorted index.
    /// </param>
    /// <returns>
    /// The journal type enum index.
    /// </returns>
    public int getJournalTypeIndex(int _journalTypeSortedIndex)
    {
        return journalTypeSortedIndexToEnumIndex.lookup(_journalTypeSortedIndex);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalTypeSortedIndex</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the journal type sorted index for the journal type value.
    /// </summary>
    /// <param name="_journalType">
    /// The journal type value.
    /// </param>
    /// <returns>
    /// The journal type sorted index.
    /// </returns>
    public int getJournalTypeSortedIndex(LedgerJournalType _journalType)
    {
        return journalTypeEnumIndexToSortedIndex.lookup(enum2int(_journalType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        OffsetAccount.parmIsDefaultAccount(true);

        this.initJournalTypeControl();
        this.setButtonAccess();

        taxBookSectionId.visible(MultipleTaxIdReportingHelper::isLegalEntityOrAddressInCountryRegion(
            [#isoIT], MultipleTaxIdScope::VATDeclaration));

        ledgerJournalName_ds.object(fieldNum(LedgerJournalName, CashAccount_W)).visible(BankParameters::getEnablePettyCash());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initJournalTypeControl</Name>
				<Source><![CDATA[
    private void initJournalTypeControl()
    {
        journalType_JournalType.clear();

        journalTypeSortedIndexToEnumIndex = new Map(Types::Integer, Types::Integer);
        journalTypeEnumIndexToSortedIndex = new Map(Types::Integer, Types::Integer);

        SysDictEnum dictEnum = new SysDictEnum(enumNum(LedgerJournalType));
        Map labelValues = new Map(Types::Container, Types::Integer);

        int enumValue;

        for (int i = 0; i < dictEnum.values(); i++)
        {
            ConfigurationKeyId configurationKeyId = dictEnum.index2ConfigurationKey(i);
            FeatureName featureClassName = dictEnum.index2FeatureClassName(i);
            boolean isFeatureEnabledOrFeatureClassIsEmpty = true;

            if (featureClassName != '')
            {
                IFeature featureInstance = DictClass::createObject(featureClassName) as IFeature;
                isFeatureEnabledOrFeatureClassIsEmpty = FeatureStateProvider::isFeatureEnabled(featureInstance);
            }

            if ((configurationKeyId == 0
                    || isConfigurationkeyEnabled(configurationKeyId))
                && isFeatureEnabledOrFeatureClassIsEmpty)
            {
                enumValue = dictEnum.index2Value(i);

                // use name and value to avoid losing values if translation results in duplicate names
                labelValues.insert([dictEnum.index2Name(i), enumValue], enumValue);
            }
        }

        MapEnumerator labelValueEnumerator = labelValues.getEnumerator();

        str name;
        int i = 0;
        while (labelValueEnumerator.moveNext())
        {
            [name, enumValue] = labelValueEnumerator.currentKey();

            // mapping of the sorted index to the enum index
            journalTypeSortedIndexToEnumIndex.insert(i, enumValue);

            journalTypeEnumIndexToSortedIndex.insert(enumValue, i);

            // add values to the control in alphabetical order
            journalType_JournalType.add(name);
            i++;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOkToChangeWorkflowApproval</Name>
				<Source><![CDATA[
    /// <summary>
    /// Notifies the user that changes to the current LedgerJournalName's
    /// workflow approval setup data could affect existing Ledger journal workflow approvals.
    /// </summary>
    /// <returns>
    /// true on a dialog box response of "Ok", otherwise false.
    /// </returns>
    /// <remarks>
    /// This method will manage the users response to the YesNo dialog.
    /// </remarks>
    public boolean isOkToChangeWorkflowApproval()
    {
        str message = "@SYS109583";

        return element.dialogYesNo(message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOkToDeleteWorkflowApproval</Name>
				<Source><![CDATA[
    /// <summary>
    /// Notifies the user that deleting the LedgerJournalName could affect Ledger journal workflow approvals.
    /// </summary>
    /// <returns>
    /// true on a dialog box response of "Ok", otherwise false.
    /// </returns>
    /// <remarks>
    /// This method will manage the users response to the YesNo dialog.
    /// </remarks>
    public boolean isOkToDeleteWorkflowApproval()
    {
        str message = "@SYS112618";

        return element.dialogYesNo(message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonAccess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the delayTaxCalculation button visible or not.
    /// </summary>
    public void setButtonAccess()
    {
        SalesTax_DelayTaxCalculation.visible(TaxParameters::find().DelayTaxCalculation);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>LedgerJournalName</Name>
				<Methods>
					<Method>
						<Name>editJournalType</Name>
						<Source><![CDATA[
        public edit int editJournalType(
            boolean _set,
            LedgerJournalName _ledgerJournalName,
            int _journalTypeSortedIndex)
        {
            LedgerJournalType newJournalType;
            LedgerJournalType oldJournalType;
            boolean isValid;
            boolean isWorkflowApprovalEnabled;

            if (_set)
            {
                isValid = true;

                newJournalType = element.getJournalTypeIndex(_journalTypeSortedIndex);
                oldJournalType = _ledgerJournalName.JournalType;

                _ledgerJournalName.JournalType = newJournalType;

                // The call to LedgerJournalName.checkWorkflowApprovalEnabled requires the new JournalType.
                isWorkflowApprovalEnabled = _ledgerJournalName.checkWorkflowApprovalEnabled();

                if (_ledgerJournalName.Configuration && !isWorkflowApprovalEnabled)
                {
                    isValid = element.dialogOkCancel("@SYS109584");
                }

                if (newJournalType != oldJournalType
                    && oldJournalType == LedgerJournalType::Budget
                    && BudgetParameters::find().LedgerJournalName == _ledgerJournalName.JournalName)
                {
                    isValid = checkFailed(strFmt("@SYS301207", _ledgerJournalName.JournalName));
                }

                if (!isValid)
                {
                    // message already given

                    // reset to the original JournalType
                    _ledgerJournalName.JournalType = oldJournalType;

                    throw Exception::Error;
                }

                // new JournalType has already been set
                _ledgerJournalName.initTaxBookTypeJournal();

                if (_ledgerJournalName.Configuration && !isWorkflowApprovalEnabled)
                {
                    _ledgerJournalName.WorkflowApproval = NoYes::No;
                    _ledgerJournalName.Configuration = '';
                }

                element.enableFields(_ledgerJournalName);

                //  Make sure the abilty to activate the different approvals is updated.
                element.enableFields_Approvals(_ledgerJournalName);

                element.enableControlsBank();

                this.initLineLimits();
            }

            return element.getJournalTypeSortedIndex(_ledgerJournalName.JournalType);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            // <GEERU>
            #ISOCountryRegionCodes
            // </GEERU>

            ret = super();

            // some fields are disabled for journal type of allocation
            element.enableFields(ledgerJournalName);

            //
            // Enable or Disable the Approval and Workflow approval fields
            // based on which type of Approval is in use.
            //
            element.enableFields_Approvals(ledgerJournalName);

            // <GEERU>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
            {
                element.enableControls_RU();
            }
            // </GEERU>

            PostControl.enabled(ledgerJournalName.RecId);
            Accounts.enabled(LedgerJournalName.RecId);

            if (TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalName.JournalType)
                && ledgerJournalName.JournalType != LedgerJournalType::Approval
                && ledgerJournalName.JournalType != LedgerJournalType::VendInvoicePool)
            {
                LedgerJournalName_ds.object(fieldNum(LedgerJournalName, OverrideSalesTax)).visible(true);
            }
            else
            {
                LedgerJournalName_ds.object(fieldNum(LedgerJournalName, OverrideSalesTax)).visible(false);
            }

            element.enableControlsBank();
          
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            QueryBuildDataSource    ds;
            QueryBuildRange         range;
            NumberSequenceTable     numberSequenceTable;

            super();

            // If the form is called with a record form table "ledgerpostingJournalVoucherSeries",
            // then the form must only show journal names using the same voucher series as the
            // "ledgerpostingJournalVoucherSeries" record.

            this.cacheAddMethod(tableMethodStr(LedgerJournalName, taxBookSectionId));

            if (element.args().dataset() == tableNum(LedgerPostingJournalVoucherSeries))
            {
                ledgerPostingJournalVoucherSeries = element.args().record() as LedgerPostingJournalVoucherSeries;

                numberSequenceTable = NumberSequenceTable::findByNaturalKey(ledgerPostingJournalVoucherSeries.VoucherSeries);

                ds = this.query().dataSourceTable(tableNum(LedgerJournalName));
                range = ds.addRange(fieldNum(LedgerJournalName, NumberSequenceTable));
                range.value(queryValue(numberSequenceTable.RecId));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            LedgerJournalTable  ledgerJournalTable;

            if (ledgerJournalName.LedgerJournalFeePosting != ledgerJournalName.orig().LedgerJournalFeePosting)
            {
                select firstonly ledgerJournalTable
                    where ledgerJournalTable.JournalName == ledgerJournalName.JournalName &&
                          ledgerJournalTable.Posted      == NoYes::No;

                if (ledgerJournalTable)
                {
                    throw error("@SYS73710");
                }
            }
            super();

            if (ledgerJournalName.JournalType == LedgerJournalType::CustomsDeclaration_IT &&
				LedgerJournalName_Customs_IT.LedgerJournalName == 0)
            {
                LedgerJournalName_Customs_IT.LedgerJournalName = ledgerJournalName.RecId;
                LedgerJournalName_Customs_IT_ds.write();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        /// <summary>
        /// Overridden to provide additional delete action validation.
        /// </summary>
        /// <returns>
        /// true if the record can be delete, otherwise false.
        /// </returns>
        /// <remarks>
        /// Code added to inform the user that deletion may cause changes to any workflow approval
        /// associations to this LedgerJournalName record.
        /// </remarks>
        public boolean validateDelete()
        {
            boolean ret = true;

            if (ledgerJournalName.RecId != 0 &&
                ledgerJournalName.WorkflowApproval &&
                ledgerJournalName.Configuration)
            {
                ret = element.isOkToDeleteWorkflowApproval();
            }

            if (ret)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);

            this.initLineLimits();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initLineLimits</Name>
						<Source><![CDATA[
        internal void initLineLimits()
        {
            LedgerJournalName thisCursor = this.cursor();

            // If this is a new row, and the user hasn't set any value already, and the flight is enabled, and the journal type allows splitting, default the line limit field
            if (  !thisCursor.RecId
               && !thisCursor.LinesLimitBeforeDistribution
               && LedgerJournalTable::journalTypeAllowsSplitting(thisCursor.JournalType))
            {
                thisCursor.LinesLimitBeforeDistribution = LedgerJournalMaxLineLimit::getMaxLineLimit();
            }
            else if (!LedgerJournalTable::journalTypeAllowsSplitting(thisCursor.JournalType))
            {
                thisCursor.LinesLimitBeforeDistribution = 0;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ApproveActive</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Overridden to provide additional support for changes to the field's data
            /// to ensure that the manual and workflow approval are always mutually exclusive.
            /// </summary>
            public void modified()
            {
                super();

                //  Make sure the abilty to activate the different approvals is updated.
                element.enableFields_Approvals(ledgerJournalName);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankTransSummarizationEnabled</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalName_ds.object(fieldNum(LedgerJournalName, BankTransSummarizationCriteria)).allowEdit(ledgerJournalName.BankTransSummarizationEnabled);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Configuration</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// Overridden to provide a custom lookup form that provides the user with the means
            /// of selecting a Ledger journal workflow configuration to associate to the current LedgerJournalName.
            /// </summary>
            /// <param name="_formControl">
            /// The form control defined for the field's data type.
            /// </param>
            /// <param name="_filterStr">
            /// The current filter string applied to the data field.
            /// </param>
            /// <remarks>
            /// The lookup will query the WorkflowConfigurationTable for Configuration that are "Enabled, match
            /// TemplateName associated to the LedgerJournalName.JournalType, and are of the Axapta Module
            /// associated to the LedgerJournalName.JournalType.
            /// Journal that do not support workflow approvals will use the 'notSupported' string value for the
            /// Axapta Module type value. This will result in an empty lookup.
            /// </remarks>
            public void lookup(FormControl _formControl, str _filterStr)
            {

                Query                           query          = new Query();
                QueryBuildDataSource            queryBuildDataSource;
                str                             moduleRangeValueStr;
                LedgerJournalWFApprovalModule   module = LedgerJournalName::findWorkflowApprovalModule(ledgerJournalName.JournalType);

                // Create an instance of SysTableLookup with the "lookup table" and
                // the current form control.
                SysTableLookup sysTableLookup =
                    SysTableLookup::newParameters(tableNum(WorkflowTable), _formControl);

                // Add fields to be shown in the lookup form.
                sysTableLookup.addLookupfield(fieldNum(WorkflowTable, SequenceNumber));
                sysTableLookup.addLookupfield(fieldNum(WorkflowTable, Name));
                sysTableLookup.addLookupfield(fieldNum(WorkflowTable, TemplateName));
                sysTableLookup.addLookupfield(fieldNum(WorkflowTable, Module));

                // Create the QueryBuildDataSource.
                queryBuildDataSource = query.addDataSource(tableNum(WorkflowTable));

                // Add fields to order the data in the lookup form.
                queryBuildDataSource.addOrderByField(fieldNum(WorkflowTable, SequenceNumber));

                // Add fields to select the existing data in the lookup form.
                queryBuildDataSource.addSelectionField(fieldNum(WorkflowTable, SequenceNumber));

                // Limit and arrange the data selection.
                //queryBuildDataSource.addRange(fieldnum(WorkflowConfigurationTable, Enabled)).
                //    value(int2str(enum2int(NoYes::Yes)));
                queryBuildDataSource.addRange(fieldNum(WorkflowTable, TemplateName)).
                    value(LedgerJournalName::findJournalTemplate(ledgerJournalName.JournalType));
                
                // Set the right string value for the ModuleAxapta enumeration.
                moduleRangeValueStr = this.getModuleRangeValue(module);

                queryBuildDataSource.addRange(fieldNum(WorkflowTable, DataArea)).value(curext());
                queryBuildDataSource.addRange(fieldNum(WorkflowTable, Module)).value(moduleRangeValueStr);
                queryBuildDataSource.addRange(fieldNum(WorkflowTable, Type)).
                    value(int2str(enum2int(WorkflowConfigurationType::Definition)));

                // Set the query.
                sysTableLookup.parmQuery(query);

                // Perform the lookup.
                sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
							<Method>
								<Name>getModuleRangeValue</Name>
								<Source><![CDATA[
            /// <summary>
            ///     Gets the string value for the <c>LedgerJournalWFApprovalModule</c> enumeration.
            /// </summary>
            /// <param name = "_module">
            ///     The <c>LedgerJournalWFApprovalModule</c> enumeration value.
            /// </param>
            /// <returns>
            ///     Returns the string value for the <c>LedgerJournalWFApprovalModule</c> enumeration.
            /// </returns>
            [Wrappable(true)]
            protected final str getModuleRangeValue(LedgerJournalWFApprovalModule _module)
            {
                str moduleRangeValueStr;
                const str notSupported = "not supported";

                switch (_module)
                {
                    case LedgerJournalWFApprovalModule::Ledger:
                        moduleRangeValueStr = int2str(enum2int(ModuleAxapta::Ledger));
                        break;

                    case LedgerJournalWFApprovalModule::FixedAssets:
                        moduleRangeValueStr = int2str(enum2int(ModuleAxapta::FixedAssets));
                        break;

                    case LedgerJournalWFApprovalModule::Customer:
                        moduleRangeValueStr = int2str(enum2int(ModuleAxapta::Customer));
                        break;

                    case LedgerJournalWFApprovalModule::Vendor:
                        moduleRangeValueStr = int2str(enum2int(ModuleAxapta::Vendor));
                        break;

                    default:
                        moduleRangeValueStr = notSupported;
                        break;
                }

                return moduleRangeValueStr;
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// Overridden to provide additional validation for changes to the field's data
            /// when journal name references a configuration and workflow approvals are "active".
            /// </summary>
            /// <returns>
            /// true if all of the validations are successful, otherwise false.
            /// </returns>
            /// <remarks>
            /// Code added to inform the user that deletion may cause changes to any workflow approval
            /// associations to this LedgerJournalName record.
            /// </remarks>
            public boolean validate()
            {
                boolean ret = super();

                if (ret)
                {
                    //  Is the changed "Configuration" also "active"?
                    if (ledgerJournalName.RecId != 0 &&
                        ledgerJournalName.WorkflowApproval)
                    {
                        // Check if ok to change the "Configuration".
                        ret = element.isOkToChangeWorkflowApproval();
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FixedOffsetAccount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (ledgerJournalName.FixedOffsetAccount == NoYes::No)
                {
                    ledgerJournalName.EndBalanceControl = NoYes::No;
                }
                ledgerJournalName_DS.object(fieldNum(LedgerJournalName,EndBalanceControl)).allowEdit(ledgerJournalName.FixedOffsetAccount);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>JournalType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Overridden to provide additional support for changes to the field's data
            /// when journal name references a configuration and workflow approvals are "active".
            /// </summary>
            /// <remarks>
            /// The validation on the Configuration and the JournalType fields must be redone in order to
            /// limit the resetting of the WorkflowApproval and Configuration fields to only when the user
            /// has accepted that a mismatch has occurred in the validate method.
            /// </remarks>
            public void modified()
            {
                // <GEERU>
                #ISOCountryRegionCodes
                // </GEERU>

                super();
                // <GEERU>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                {
                    if (ledgerJournalName.JournalType == LedgerJournalType::RDeferrals)
                    {
                        ledgerJournalName.CurrencyCode = CompanyInfoHelper::standardCurrency();
                    }
                    element.enableControls_RU();
                }
                // </GEERU>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>NewVoucher</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            boolean validate()
            {
                boolean ret;

                ret = super();

                if (ledgerJournalName.JournalType == LedgerJournalType::Approval &&
                    ledgerJournalName.NewVoucher  != NewVoucher::BalanceSheet)
                {
                    ret = checkFailed(strFmt("@SYS25018",NewVoucher::BalanceSheet));
                }
                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (ledgerJournalName.BankTransSummarizationEnabled && ledgerJournalName.NewVoucher != NewVoucher::BalanceSheet)
                {
                    error("@CashManagement:OneVoucherErrorMessage");
                    ledgerJournalName.NewVoucher = NewVoucher::BalanceSheet;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>NumberSequenceTable</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = NumberSequenceTable::lookupReference(_formReferenceControl);

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();

                if (ret)
                {
                    ret = NumberSequenceTable::checkExistByNaturalKey(NumberSequenceTable::find(ledgerJournalName.NumberSequenceTable).NumberSequence, NumberSeqScopeFactory::createDataAreaScope().getId());
                }
            
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>WorkflowApproval</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// This method is overriden to provide additional support for changes to the field's data.
            /// </summary>
            /// <returns>
            /// true if all of the validations are successful.
            /// </returns>
            public boolean validate()
            {
                boolean ret = super();
                if (ret)
                {
                    // Is a workflow approval being deactivated?
                    if (ledgerJournalName.RecId != 0 &&
                        !ledgerJournalName.WorkflowApproval &&
                        ledgerJournalName.Configuration)
                    {
                        // Check if ok to deactivate workflow approval.
                        ret = element.isOkToChangeWorkflowApproval();
                    }
                    // Is a workflow approval being activated?
                    if (ledgerJournalName.RecId != 0 &&
                        ledgerJournalName.WorkflowApproval &&
                        ledgerJournalName.Configuration)
                    {
                        // Check if ok to activate workflow approval.
                        str message = "@SYS109585";
                        ret = element.dialogYesNo(message);
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// This method is overriden to provide additional support for changes to the field's data.
            /// </summary>
            public void modified()
            {
                super();

                //  Make sure the abilty to activate the different approvals is updated.
                element.enableFields_Approvals(ledgerJournalName);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalName_Customs_IT</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (isItalyContext)
            {
                LedgerJournalName_Customs_IT_ds.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (ledgerJournalName.JournalType == LedgerJournalType::CustomsDeclaration_IT &&
				LedgerJournalName_Customs_IT.LedgerJournalName)
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>LedgerJournalName_JournalName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            // After this field changes then the data source is in a dirty state
            // This will allow for validation to happen correctly when they click the button
            PostControl.enabled(true);
            Accounts.enabled(true);

            return super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OffsetAccountType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            ledgerJournalName.parmOffsetLedgerDimension(0);
            ledgerJournalName_DS.rereadReferenceDataSources();

            boolean ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OffsetAccount</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            switch (ledgerJournalName.OffsetAccountType)
            {
                case LedgerJournalACType::Bank:
                    BankAccountTable::lookupBankAccount(this);
                    break;

                case LedgerJournalACType::Cust:
                    CustTable::lookupCustomer(this);
                    break;

                case LedgerJournalACType::FixedAssets:
                    AssetTable::lookupAccountNum(this);
                    break;

                case LedgerJournalACType::Project:
                    ProjTable::lookupProjId(this, ledgerJournalName);
                    break;

                case LedgerJournalACType::Vend:
                    VendTable::lookupVendor(this);
                    break;

                // <GEERU>
                case LedgerJournalACType::Employee_RU:
                    EmployeeTable_RU::lookupAdvHolder(this);
                    break;

                case LedgerJournalACType::FixedAssets_RU:
                    RAssetTable::lookupAccountNum(this);
                    break;

                case LedgerJournalACType::RCash:
                    RCashTable::lookupAccountNum(this);
                    break;

                case LedgerJournalACType::RDeferrals:
                    RDeferralsTable::lookupDeferrals(this, dateMax());
                    break;
                // </GEERU>

                default:
                    super();
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            LedgerJournalACType offsetAccountType = any2Enum(_accountTypeEnumValue);

            return offsetAccountType == LedgerJournalACType::Bank
                || offsetAccountType == LedgerJournalACType::Cust
                // <GEERU>
                || offsetAccountType == LedgerJournalACType::Employee_RU
                || offsetAccountType == LedgerJournalACType::FixedAssets_RU
                || offsetAccountType == LedgerJournalACType::RCash
                || offsetAccountType == LedgerJournalACType::RDeferrals
                // </GEERU>
                || offsetAccountType == LedgerJournalACType::FixedAssets
                || offsetAccountType == LedgerJournalACType::Project
                || offsetAccountType == LedgerJournalACType::Vend;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalName</Name>
			<Table>LedgerJournalName</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ApproveActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApproveGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransSummarizationCriteria</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransSummarizationEnabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BlockUserGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashAccount_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Configuration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrentOperationsTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateInitType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DelayTaxCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DetailSummary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndBalanceControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedOffsetAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GeneratePayments_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSimulation_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalFeePosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalInclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinesLimitBeforeDistribution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MandatoryDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NewVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverrideSalesTax</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PositiveDRCROnly_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemoveLineAfterPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequiresSimulationValidation_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBookTypeJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxHideAmountFields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherAllocatedAtPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkflowApproval</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Passive</LinkType>
			<Index>JournalNameIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalName_Customs_IT</Name>
			<Table>LedgerJournalName_Customs_IT</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CustomsDebt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartnerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipperId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipGoodsTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalName</JoinSource>
			<LinkType>Passive</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS6155</Caption>
		<DataSource xmlns="">LedgerJournalName</DataSource>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">SimpleListDetails-Grid</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>89478485</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Accounts</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>LedgerJournalControl</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>LedgerPostingJournalCreate_BE</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>LedgerJournalName</DataSource>
								<MenuItemName>LedgerPostingJournalCreate</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<Text>@SYS62414</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PostControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>LedgerJournalName</DataSource>
								<MenuItemName>LedgerJournalPostControl</MenuItemName>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>300</Width>
				<WidthMode>Manual</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GridReadOnlyLedgerJournalName_Journal</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@FieldDescriptions_GeneralLedger:LedgerJournalSetup_GridReadOnlyLedgerJournalName_Journal</HelpText>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>JournalName</DataField>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GridReadOnlyLedgerJournalName_Name</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>130</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>LedgerJournalName</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>Tabular</Style>
						<VisibleRows>0</VisibleRows>
						<VisibleRowsMode>Fixed</VisibleRowsMode>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>VSplitter</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<Style>SplitterVerticalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>LedgerJournalName_JournalName</Name>
						<ElementPosition>429496729</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_GeneralLedger:LedgerJournalSetup_LedgerJournalName_JournalName</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>JournalName</DataField>
						<DataSource>LedgerJournalName</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>LedgerJournalName_Name</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>LedgerJournalName</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>taxBookSectionId</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>taxBookSectionId</DataMethod>
						<DataSource>LedgerJournalName</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>JournalType</Name>
								<ElementPosition>390451572</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>JournalType_JournalType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editJournalType</DataMethod>
										<DataSource>LedgerJournalName</DataSource>
										<Label>@SYS22453</Label>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>JournalType_Prepayment_CZ</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Prepayment_W</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Approval</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>585677358</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Approval_ApproveActive</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:LedgerJournalSetup_Approval_ApproveActive</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ApproveActive</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Approval_ApproveGroupId</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:LedgerJournalSetup_Approval_ApproveGroupId</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ApproveGroupId</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS2453</Caption>
								<DataGroup>ApprovalProcedure</DataGroup>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ApprovalWorkflow</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>780903144</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ApprovalWorkflow_WorkflowApproval</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:LedgerJournalSetup_ApprovalWorkflow_WorkflowApproval</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>WorkflowApproval</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ApprovalWorkflow_Configuration</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Configuration</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>ApprovalWorkflow</DataGroup>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Japan</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>878516037</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Japan_PositiveDRCROnly_JP</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PositiveDRCROnly_JP</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Japan</DataGroup>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Blocking</Name>
								<ElementPosition>976128930</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Blocking_BlockUserGroupId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BlockUserGroupId</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Blocking</DataGroup>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VoucherNumber</Name>
								<ElementPosition>1171354716</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>VoucherNumber_NumberSequenceTable</Name>
										<ElementPosition>845571685</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:LedgerJournalSetup_VoucherNumber_NumberSequenceTable</HelpText>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>VoucherNumber_NumberSequenceTable_NumberSequence</Name>
												<DataRelationPath>NumberSequenceTable</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalName</DataSource>
										<ReferenceField>NumberSequenceTable</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>VoucherNumber_NewVoucher</Name>
										<ElementPosition>1127428914</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>NewVoucher</DataField>
										<DataSource>LedgerJournalName</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>VoucherNumber_VoucherAllocatedAtPosting</Name>
										<ElementPosition>1503238552</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VoucherAllocatedAtPosting</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocumentNum</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentNum</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS12336</Caption>
								<DataGroup>Voucher</DataGroup>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OffsetAccountProposal</Name>
								<ElementPosition>1366580502</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>OffsetAccountProposal_EndBalanceControl</Name>
										<ElementPosition>357913940</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndBalanceControl</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>OffsetAccountProposal_FixedOffsetAccount</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FixedOffsetAccount</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>OffsetAccountType</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountType</DataField>
										<DataSource>LedgerJournalName</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>OffsetAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:LedgerJournalSetup_OffsetAccount</HelpText>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalName</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<Caption>@SYS28572</Caption>
								<DataGroup>OffsetAccount</DataGroup>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Posting</Name>
								<ElementPosition>1561806288</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Posting_GeneratePayments_IT</Name>
										<ElementPosition>107374182</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>GeneratePayments_IT</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Posting_RemoveLineAfterPosting</Name>
										<ElementPosition>161061273</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RemoveLineAfterPosting</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Posting_CurrentOperationsTax</Name>
										<ElementPosition>214748364</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:LedgerJournalSetup_Posting_CurrentOperationsTax</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrentOperationsTax</DataField>
										<DataSource>LedgerJournalName</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Posting_DetailSummary</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:LedgerJournalSetup_Posting_DetailSummary</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DetailSummary</DataField>
										<DataSource>LedgerJournalName</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Posting_LedgerJournalFeePosting</Name>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerJournalFeePosting</DataField>
										<DataSource>LedgerJournalName</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>Posting_LinesLimitBeforeDistribution</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:LedgerJournalSetup_Posting_LinesLimitBeforeDistribution</HelpText>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinesLimitBeforeDistribution</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Posting</DataGroup>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Currency</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1757032074</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Currency_FixedExchRate</Name>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FixedExchRate</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Currency_CurrencyCode</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Currency</DataGroup>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SalesTax</Name>
								<ElementPosition>1952257860</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SalesTax_LedgerJournalInclTax</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerJournalInclTax</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SalesTax_TaxBookTypeJournal</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxBookTypeJournal</DataField>
										<DataSource>LedgerJournalName</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SalesTax_DelayTaxCalculation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DelayTaxCalculation</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SalesTax_TaxHideAmountFields</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxHideAmountFields</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SalesTax_OverrideSalesTax</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OverrideSalesTax</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>SalesTax</DataGroup>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DateInit</Name>
								<ElementPosition>2146784595</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>DateInit_DateInitType_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DateInitType_RU</DataField>
										<DataSource>LedgerJournalName</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>DateInit_MandatoryDate_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MandatoryDate_RU</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>DateInit_RU</DataGroup>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CashAccounts_W</Name>
								<ElementPosition>2147134120</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CashAccounts_W_CashAccount_W</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashAccount_W</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>CashAccounts_W</DataGroup>
								<DataSource>LedgerJournalName</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CustomsSetup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustomsSetup_CustomsId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustomsId</DataField>
										<DataSource>LedgerJournalName_Customs_IT</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CustomsSetup_CustomsDebt</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustomsDebt</DataField>
										<DataSource>LedgerJournalName_Customs_IT</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CustomsSetup_SkipGoodsTrans</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SkipGoodsTrans</DataField>
										<DataSource>LedgerJournalName_Customs_IT</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@CustomsDocumentsIT:CD_EntityGroup_Customs_IT</Caption>
								<DataGroup>CustomsSetup</DataGroup>
								<DataSource>LedgerJournalName_Customs_IT</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Bank</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Bank_SummarizationEnabled</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankTransSummarizationEnabled</DataField>
										<DataSource>LedgerJournalName</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Bank_SummarizationCriteria</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankTransSummarizationCriteria</DataField>
										<DataSource>LedgerJournalName</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Caption>@SYS7439</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<DataSource>LedgerJournalName</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabFinancialDimensions</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Pattern>DimensionEntryControl</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>DimensionEntryControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Container</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>DimensionEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmControlLabelText</Name>
											<Type>String</Type>
											<Value>@SYS138487</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumerationName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmDataSourceName</Name>
											<Type>String</Type>
											<Value>LedgerJournalName</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValueSetReferenceField</Name>
											<Type>String</Type>
											<Value>DefaultDimension</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumValueSetReferenceField</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@SYS101181</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>