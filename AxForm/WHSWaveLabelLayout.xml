<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>WHSWaveLabelLayout</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class WHSWaveLabelLayout extends FormRun implements WHSIQueryPartCallback
{
    private const str WHSWaveLabelLayoutQueryPart_Range = menuItemDisplayStr(WHSWaveLabelLayoutQueryPart_Range);
    private WHSIQueryPart headerRangePart;

    WHSWaveLabelLayoutForm	labelLayoutForm;
    private RecId			labelLayoutRecId;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        labelLayoutForm = new WHSWaveLabelLayoutForm();
        TableListView.addColumn(1, new FormListColumn("@SYS9678"));
        element.fieldListViewControl().addColumn(1, new FormListColumn("@SYS36590"));
        MethodListView.addColumn(1, new FormListColumn("@SYS25613"));        
        this.initQueryFormParts();
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQueryFormParts</Name>
				<Source><![CDATA[
    private void initQueryFormParts()
    {
        str fieldNameQuery = fieldId2Name(tableNum(WHSWaveLabelLayout), fieldNum(WHSWaveLabelLayout, PackedQueryRun));
        str fieldNameQueryName = fieldId2Name(tableNum(WHSWaveLabelLayout), fieldNum(WHSWaveLabelLayout, LabelLayoutId));
        headerRangePart = WHSQueryHelper::initializeQueryFormPart(element, WHSWaveLabelLayoutQueryPart_Range, fieldNameQuery, '%1', fieldNameQueryName, WHSWaveLabelLayout.defaultPackedQueryRun(), true, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryUpdated</Name>
				<Source><![CDATA[
    public void queryUpdated(FormRun _sender, container _packedQuery)
    {
        Query query = new Query(_packedQuery);
        var queryRun = new QueryRun(query);
        var resultQuery = labelLayoutForm.updateQueryRunJoins(queryRun);
        WHSWaveLabelLayout.PackedQueryRun = resultQuery.pack();

        element.createTableListView();
        element.fieldListViewControl().deleteAll();
        MethodListView.deleteAll();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTableListView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the list view for the label layout query tables.
    /// </summary>
    private void createTableListView()
    {
        TableListView.deleteAll();

        if (WHSWaveLabelLayout.PackedQueryRun != conNull())
        {
            var query = new Query(WHSWaveLabelLayout.PackedQueryRun);

            int dsCount = query.dataSourceCount();

            for (int i = 1; i <= dsCount; ++i)
            {
                if (query.dataSourceNo(i).enabled())
                {
                    QueryBuildDataSource qbds = query.dataSourceNo(i);

                    var dictTable = new DictTable(qbds.table());

                    if (dictTable)
                    {
                        var formListItem = new FormListItem(dictTable.label(), qbds.table(), dictTable.name());
                        TableListView.addItem(formListItem);
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFieldListView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the list view for the label layout query fields.
    /// </summary>
    private void createFieldListView()
    {
        int             focused;
        TableName       layoutTableName;

		element.fieldListViewControl().deleteAll();

        focused         = TableListView.getNextItem(FormListNext::Focused);
        layoutTableName = TableListView.getItem(focused).data();

        var dictTable = SysDictTable::newName(layoutTableName);

        if (dictTable)
        {
            int fieldCount = dictTable.fieldCnt();

            for (int i = 1; i <= fieldCount; ++i)
            {
                var dictField = new DictField(tableName2Id(layoutTableName), dictTable.fieldCnt2Id(i));

                if (!dictField.isSystem())
                {
                    var formListItem = new FormListItem(dictField.label(), dictField.id(), dictField.name());
                    element.fieldListViewControl().addItem(formListItem);
                }
            }
        }

        FormListItem tmpItem = element.fieldListViewControl().getItem(0);
        tmpItem.stateSelected(true);
        tmpItem.stateFocus(true);
        element.fieldListViewControl().setItem(tmpItem);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldListViewControl</Name>
				<Source><![CDATA[
	public FormListControl fieldListViewControl()
    {
        return FieldListViewOnTab;
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>createMethodListView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the list view for the label layout query methods.
    /// </summary>
    private void createMethodListView()
    {
        MethodListView.deleteAll();

        int			focused			= TableListView.getNextItem(FormListNext::Focused);
        TableName	layoutTableName = TableListView.getItem(focused).data();

        SysDictTable dictTable = SysDictTable::newName(layoutTableName);

        if (dictTable)
        {
            Set	methodSet = dictTable.methods();
            SetEnumerator setEnumerator = methodSet.getEnumerator();
			
            while (setEnumerator.moveNext())
            {
                SysDictMethod dictMethod = setEnumerator.current();

                if (dictMethod.displayType() != DisplayFunctionType::None)
                {
                    var formListItem = new FormListItem(dictMethod.name(), 0, dictMethod.name() + WHSLabelConstants::MethodIdentifier);
                    MethodListView.addItem(formListItem);
                }
            }
        }

        if (MethodListView.getCount() > 0)
        {
            FormListItem tmpItem = MethodListView.getItem(0);
            tmpItem.stateSelected(true);
            tmpItem.stateFocus(true);
            MethodListView.setItem(tmpItem);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>WHSWaveLabelLayout</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            if(labelLayoutRecId != WHSWaveLabelLayout.RecId)
            {
                int prevTableIndex = TableListView.getNextItem(FormListNext::Focused);
				
				if (prevTableIndex == -1)
                {
                    prevTableIndex = 0;
                }

				labelLayoutRecId = WHSWaveLabelLayout.RecId;
                element.fieldListViewControl().deleteAll();
                MethodListView.deleteAll();

                element.createTableListView();
                int tmpTableIndex;

                tmpTableIndex = TableListView.getCount() <= prevTableIndex ? 0 : prevTableIndex;

                FormListItem tmpItem = TableListView.getItem(tmpTableIndex);
                tmpItem.stateSelected(true);
                tmpItem.stateFocus(true);
                TableListView.setItem(tmpItem);

                element.createFieldListView();
                element.createMethodListView();
            }
            
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>EditQuery</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            SysQueryRun queryRun = WHSFormHelper::initializeQueryRunForEditing(
                WHSWaveLabelLayout.PackedQueryRun,
                WHSWaveLabelLayout.LabelLayoutId,
                WHSWaveLabelLayout.defaultPackedQueryRun());
            
            if (queryRun.prompt())
            {
                queryRun = labelLayoutForm.updateQueryRunJoins(queryRun);
                labelLayoutForm.displayWarning(new QueryRun(WHSWaveLabelLayout.PackedQueryRun), queryRun);
                WHSWaveLabelLayout.PackedQueryRun = queryRun.pack();               
                headerRangePart.refresh();
                
            }
        
            super();

            element.createTableListView();
            element.fieldListViewControl().deleteAll();
            MethodListView.deleteAll();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TableListView</Name>
				<Type>ListView</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(int _Idx, anytype _Data)
        {
            super(_Idx, _Data);
            element.createFieldListView();
            element.createMethodListView();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InsertButtonHeader</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if(FieldsTabPage.isActivePage())
            {
                WHSWaveLabelLayout_LabelHeader.pasteText(strFmt('$%1.%2$', 
														TableListView.getItem(TableListView.getNextItem(FormListNext::Focused)).data(), 
														element.fieldListViewControl().getItem(element.fieldListViewControl().getNextItem(FormListNext::Focused)).data()));
            }
            else if (MethodsTabPage.isActivePage())
            {
                if (MethodListView.getCount() > 0)
                {
                    WHSWaveLabelLayout_LabelHeader.pasteText(strFmt('$%1.%2$', 
															TableListView.getItem(TableListView.getNextItem(FormListNext::Focused)).data(), 
															MethodListView.getItem(MethodListView.getNextItem(FormListNext::Focused)).data()));
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InsertButtonBody</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if(FieldsTabPage.isActivePage())
            {
                WHSWaveLabelLayout_LabelBody.pasteText(strFmt('$%1.%2$', 
															TableListView.getItem(TableListView.getNextItem(FormListNext::Focused)).data(), 
															element.fieldListViewControl().getItem(element.fieldListViewControl().getNextItem(FormListNext::Focused)).data()));
            }
            else if (MethodsTabPage.isActivePage())
            {
                if (MethodListView.getCount() > 0)
                {
                    WHSWaveLabelLayout_LabelBody.pasteText(strFmt('$%1.%2$', 
																TableListView.getItem(TableListView.getNextItem(FormListNext::Focused)).data(), 
																MethodListView.getItem(MethodListView.getNextItem(FormListNext::Focused)).data()));
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InsertButtonFooter</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if(FieldsTabPage.isActivePage())
            {
                WHSWaveLabelLayout_LabelFooter.pasteText(strFmt('$%1.%2$', 
																TableListView.getItem(TableListView.getNextItem(FormListNext::Focused)).data(), 
																element.fieldListViewControl().getItem(element.fieldListViewControl().getNextItem(FormListNext::Focused)).data()));
            }
            else if (MethodsTabPage.isActivePage())
            {
                if (MethodListView.getCount() > 0)
                {
                    WHSWaveLabelLayout_LabelFooter.pasteText(strFmt('$%1.%2$', 
																	TableListView.getItem(TableListView.getNextItem(FormListNext::Focused)).data(),
																	MethodListView.getItem(MethodListView.getNextItem(FormListNext::Focused)).data()));
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>WHSWaveLabelLayout</Name>
			<Table>WHSWaveLabelLayout</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LabelBody</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LabelFooter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LabelHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LabelLayoutId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedQueryRun</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@WAX:LabelLayout</Caption>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<TitleDataSource xmlns="">WHSWaveLabelLayout</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>EditQuery</Name>
								<NeededPermission>Correct</NeededPermission>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@WAX401</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>WHSWaveLabelLayoutRow</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>WHSWaveLabelLayout</DataSource>
								<MenuItemName>WHSWaveLabelLayoutRow</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<Type>Grid</Type>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>WHSWaveLabelLayout_LabelLayoutId</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>LabelLayoutId</DataField>
								<DataSource>WHSWaveLabelLayout</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>WHSWaveLabelLayout_Description</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>WHSWaveLabelLayout</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>WHSWaveLabelLayout</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WHSWaveLabelLayout_LabelLayoutIdHeader</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>LabelLayoutId</DataField>
						<DataSource>WHSWaveLabelLayout</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>WHSWaveLabelLayout_DescriptionHeader</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>WHSWaveLabelLayout</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DetailsTabPage</Name>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TableListGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormListViewControl">
										<Name>TableListView</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ListView</Type>
										<FormControlExtension
											i:nil="true" />
										<Sort>Ascending</Sort>
										<ViewType>List</ViewType>
									</AxFormControl>
								</Controls>
								<Caption>@SYS9678</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FieldListGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormListViewControl">
										<Name>FieldListView</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ListView</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<Caption>@SYS36590</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTabControl">
								<Name>ElementTab</Name>
								<HeightMode>SizeToContent</HeightMode>
								<Type>Tab</Type>
								<WidthMode>SizeToContent</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>FieldsTabPage</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormListViewControl">
												<Name>FieldListViewOnTab</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>ListView</Type>
												<FormControlExtension
													i:nil="true" />
												<Sort>Ascending</Sort>
											</AxFormControl>
										</Controls>
										<Caption>@SYS36590</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>MethodsTabPage</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormListViewControl">
												<Name>MethodListView</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>ListView</Type>
												<FormControlExtension
													i:nil="true" />
												<Sort>Ascending</Sort>
											</AxFormControl>
										</Controls>
										<Caption>@SYS25613</Caption>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LayoutGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>InstructionsText</Name>
										<ExtendedStyle>Emphasized</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@WAX:LayoutInstructions</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabControl">
										<Name>LayoutTab</Name>
										<Type>Tab</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTabPageControl">
												<Name>TabPageHeader</Name>
												<Type>TabPage</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>InsertButtonHeader</Name>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@WAX:InsertSelectedLabel</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>WHSWaveLabelLayout_LabelHeader</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<HeightMode>SizeToAvailable</HeightMode>
														<Type>String</Type>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>LabelHeader</DataField>
														<DataSource>WHSWaveLabelLayout</DataSource>
													</AxFormControl>
												</Controls>
												<Caption>@WAX:LabelHeaderSection</Caption>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormTabPageControl">
												<Name>TabPageBody</Name>
												<Type>TabPage</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>InsertButtonBody</Name>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@WAX:InsertSelectedLabel</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>WHSWaveLabelLayout_LabelBody</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<HeightMode>SizeToAvailable</HeightMode>
														<Type>String</Type>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>LabelBody</DataField>
														<DataSource>WHSWaveLabelLayout</DataSource>
													</AxFormControl>
												</Controls>
												<Caption>@WAX:LabelBodySection</Caption>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormTabPageControl">
												<Name>TabPageFooter</Name>
												<Type>TabPage</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>InsertButtonFooter</Name>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@WAX:InsertSelectedLabel</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>WHSWaveLabelLayout_LabelFooter</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<HeightMode>SizeToAvailable</HeightMode>
														<Type>String</Type>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>LabelFooter</DataField>
														<DataSource>WHSWaveLabelLayout</DataSource>
													</AxFormControl>
												</Controls>
												<Caption>@WAX:LabelFooterSection</Caption>
											</AxFormControl>
										</Controls>
										<Style>FastTabs</Style>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Columns>4</Columns>
						<Caption>@WAX:LabelLayoutPrinterTextLayout</Caption>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts>
		<AxFormPartReference xmlns="">
			<Name>WHSWaveLabelLayoutQueryPart_Range</Name>
			<DataSource>WHSWaveLabelLayout</DataSource>
			<DataSourceRelation>SelfLink</DataSourceRelation>
			<MenuItemName>WHSWaveLabelLayoutQueryPart_Range</MenuItemName>
		</AxFormPartReference>
	</Parts>
</AxForm>