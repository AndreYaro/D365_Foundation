<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PlanActivityWizard</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PlanActivityWizard extends FormRun
{
    #define.PageWelcome(1)
    #define.PageNewActivity(2)
    #define.PageProcessActivity(3)
    #define.PageTransferActivity(4)
    #define.PagePickingActivities(5)
    #define.PageTransferLocations(6)
    #define.PageActivityTimes(7)
    #define.PageCompleted(8)

    #define.defaultQuantity(1.0)

    PlanActivityWizard  sysWizard;
    RefRecId            processQuantityUnitOfMeasure;
    boolean             initializedActivityTimes;
    boolean             initializedActivityLocations;
    boolean             ignoreValidation;
    boolean             isCarrierDefaultSet;

    InventDimCtrl_Frm   inventDimForm_Ctrl;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        this.createActivity();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createActivity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Triggers the activity creation process.
    /// </summary>
    /// <remarks>
    /// The method will create all entities related and required for a complete
    /// <c>LeanProductionFlowActivity</c> representation.
    /// </remarks>
    private void createActivity()
    {
        PlanActivityType                activityType;
        Object                          planActivityCreate;
        boolean                         isSemifinished = (productType.selectionAsLeanProductTypes() == LeanProductTypes::SemiFinishedProduct);
        container                       parentParams = conNull();
        container                       childParams = conNull();

        if (pickUpSemiFinished.checked())
        {
            planActivityTmpPickingLocations.clear();
        }

        // Determine type
        activityType = (planActivityType.selectionAsPlanActivityProductionFlowActivityType() == PlanActivityProductionFlowActivityType::Process) ?
                            PlanActivityType::Process :
                            PlanActivityType::Transfer;

        parentParams += activityType;
        parentParams += planActivityName.text();
        parentParams += Plan::find(sysWizard.parmPlan()).PlanReference;
        parentParams += sysWizard.parmPlan();
        parentParams += processQuantity.realValue();
        parentParams += processQuantityUnitOfMeasure;
        parentParams += downstreamFlow.checked();
        parentParams += pickUpSemiFinished.checked();
        parentParams += receiveSemiFinished.checked();
        parentParams += OMOperatingUnit::findName(operatingUnit.text(), OMOperatingUnitType::OMValueStream).RecId;
        parentParams += freightedBy.selection();
        parentParams += [this.tempTable2Con(planActivityTmpActivityTimes)];

        // do type-specific intialization
        switch (activityType)
        {
            case PlanActivityType::Process:
                childParams += WrkCtrResourceGroup::findWrkCtrId(workCell.text()).RecId;
                childParams += updateOnhand.checked();
                childParams += [this.tempTable2Con(planActivityTmpPickingLocations)];
                break;

            case PlanActivityType::Transfer:
                childParams += isSemifinished;
                childParams += isSemifinished;
                childParams += updateOnhandReceipt.checked();
                childParams += updateOnhandPick.checked();
                childParams += transferFromInventLocation.text();
                childParams += transferFromWMSLocation.text();
                childParams += transferToInventLocation.text();
                childParams += transferToWMSLocation.text();
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        // Create and initialize from the common activity data
        planActivityCreate = PlanActivityCreate::newStandard(activityType, [parentParams, childParams]);

        // Run the creation
        planActivityCreate.createActivity();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultFreightedBy</Name>
				<Source><![CDATA[
    public WMSFreightedBy defaultFreightedBy()
    {
        return PlanActivity::defaultFreightedBy(transferFromInventLocation.text(), transferToInventLocation.text());
    }

]]></Source>
			</Method>
			<Method>
				<Name>editProcessQtyUnitOfMeasure</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edit method for the process quantity unit of measure.
    /// </summary>
    /// <param name="set">
    /// A boolean value indicating whether the value is to be get or set.
    /// </param>
    /// <param name="_unitOfMeasureSymbol">
    /// The unit of measure symbol to be set.
    /// </param>
    /// <returns>
    /// A <c>UnitOfMeasureSymbol</c> value.
    /// </returns>
    /// <remarks>
    /// During a set operation, the method will persist the change directly in the database.
    /// </remarks>
    public edit UnitOfMeasureSymbol editProcessQtyUnitOfMeasure(
        boolean             set,
        UnitOfMeasureSymbol _unitOfMeasureSymbol)
    {
        UnitOfMeasure       unitOfMeasure;

        if (set)
        {
            unitOfMeasure = UnitOfMeasure::findBySymbol(_unitOfMeasureSymbol);

            if (unitOfMeasure.RecId != 0)
            {
                processQuantityUnitOfMeasure = unitOfMeasure.RecId;
            }
            else
            {
                processQuantityUnitOfMeasure = 0;
            }
        }

        // if we have the unit - return it, otherwise if we're in set mode we
        // should just return what the user had typed so that if he's in the middle of typing
        // he could succeed. validation is done later on if the unit is correct
        return processQuantityUnitOfMeasure ?
                    UnitOfMeasure::find(processQuantityUnitOfMeasure).Symbol
                    :
                    processQuantityUnitId.text();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        OMOperatingUnit   valuestream;

        super();

        if (element.args().caller())
        {
            sysWizard = element.args().caller();
        }
        else
        {
            PlanActivityWizard::main(new Args());
            element.closeCancel();
        }

        planActivityType.selection(enum2Int(PlanActivityProductionFlowActivityType::Process));
        sysWizard.setTabsToSkip(true, #PageTransferActivity);
        sysWizard.setTabsToSkip(true, #PageTransferLocations);

        processQuantity.realValue(#defaultQuantity);
        processQuantityUnitOfMeasure = ProdParameters::find().ProductionFlowDefaultQuantityUnit;
        processQuantityUnitId.text(this.editProcessQtyUnitOfMeasure(false, ''));

        // Initialize activity operating unit with operating unit from the plan
        select firstonly Name from valuestream
            where valuestream.RecId               == PlanReference::find(Plan::find(sysWizard.parmPlan()).PlanReference).ControllingOrganization
               && valuestream.omOperatingUnitType == OMOperatingUnitType::OMValueStream;

        operatingUnit.text(valuestream.Name);

        if (Plan::find(sysWizard.parmPlan()).Status == PlanStatus::Active)
        {
            planActivityType.selection(enum2Int(PlanActivityProductionFlowActivityType::Transfer));
            planActivityType.enabled(false);
            sysWizard.setTabsToSkip(false, #PageTransferActivity);
            sysWizard.setTabsToSkip(false, #PageTransferLocations);
            sysWizard.setTabsToSkip(true, #PageProcessActivity);
            sysWizard.setTabsToSkip(true, #PagePickingActivities);
        }

        this.updateDesign(InventDimFormDesignUpdate::Init);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPlanActivityTmpActivityTimes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the temporary table holding the <c>PlanActivityTimeComponent</c> data.
    /// </summary>
    public void initPlanActivityTmpActivityTimes()
    {
        PlanActivityTmpActivityTimes tmpActivityTimes;
        ProdParameters prodParameters = ProdParameters::find();

        if (!initializedActivityTimes)
        {
            tmpActivityTimes.clear();
            tmpActivityTimes.PlanActivityTimeTypes  = PlanActivityTimeTypes::QueueTimeAfter;
            tmpActivityTimes.TimeUnitOfMeasure      = prodParameters.ProductionFlowDefaultTimeUnit;
            tmpActivityTimes.QuantityUnitOfMeasure  = processQuantityUnitOfMeasure;
            tmpActivityTimes.Qty                    = #defaultQuantity;
            tmpActivityTimes.insert();

            tmpActivityTimes.clear();
            tmpActivityTimes.PlanActivityTimeTypes  = PlanActivityTimeTypes::RunTime;
            tmpActivityTimes.TimeUnitOfMeasure      = prodParameters.ProductionFlowDefaultTimeUnit;
            tmpActivityTimes.QuantityUnitOfMeasure  = processQuantityUnitOfMeasure;
            tmpActivityTimes.ValueAddingActivity    = NoYes::Yes;
            tmpActivityTimes.Qty                    = #defaultQuantity;
            tmpActivityTimes.insert();

            tmpActivityTimes.clear();
            tmpActivityTimes.PlanActivityTimeTypes  = PlanActivityTimeTypes::QueueTimeBefore;
            tmpActivityTimes.TimeUnitOfMeasure      = prodParameters.ProductionFlowDefaultTimeUnit;
            tmpActivityTimes.QuantityUnitOfMeasure  = processQuantityUnitOfMeasure;
            tmpActivityTimes.Qty                    = #defaultQuantity;
            tmpActivityTimes.insert();

            planActivityTmpActivityTimes.setTmpData(tmpActivityTimes);
            initializedActivityTimes = true;
        }

        planActivityTmpActivityTimes_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPlanActivityTmpPickingLocations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the temporary table holding the pick locations.
    /// </summary>
    public void initPlanActivityTmpPickingLocations()
    {
        if (!initializedActivityLocations)
        {
            planActivityTmpPickingLocations_ds.initValue();

            if (   !pickUpSemiFinished.checked()
                || (pickUpSemiFinished.checked()
                &&  !receiveSemiFinished.checked()))
            {
                planActivityTmpPickingLocations.insert();
                initializedActivityLocations = true;
            }
        }

        inventDimPicking_ds.object(fieldNum(InventDim,InventSiteId)).mandatory(true);
        inventDimPicking_ds.object(fieldNum(InventDim,InventLocationId)).mandatory(true);

        planActivityTmpPickingLocations_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTabPage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes field states when the tab page is changed.
    /// </summary>
    /// <param name="_fromTabPage">
    ///    The previous tab page.
    /// </param>
    /// <param name="_toTabPage">
    ///    The new tab page.
    /// </param>
    public void initTabPage(
        int _fromTabPage,
        int _toTabPage)
    {
        switch (_toTabPage)
        {
            case #PageProcessActivity:
                receiveSemiFinished.enabled(!updateOnhand.checked());
                break;
            case #PageTransferActivity:
                updateOnHandReceipt.enabled(productType.selectionAsLeanProductTypes() == LeanProductTypes::FinishedProduct);
                updateOnHandPick.enabled(productType.selectionAsLeanProductTypes() == LeanProductTypes::FinishedProduct);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    public InventDimCtrl_Frm inventDimSetupObject()
    {
        return inventDimForm_Ctrl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefWorkCell</Name>
				<Source><![CDATA[
    public void jumpRefWorkCell(str _workCell)
    {
        Args                args;

        args = new Args();
        args.caller(element);
        if (_workCell)
        {
            args.record(WrkCtrResourceGroup::findWrkCtrId(_workCell));
        }

        new MenuFunction(menuitemDisplayStr(WrkCtrResourceGroup), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshMandatoryControl</Name>
				<Source><![CDATA[
    public void refreshMandatoryControl(FormStringControl _formStringControl)
    {
        if (!_formStringControl.mandatory())
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        if (   _formStringControl.text()
            && !sysWizard.nextEnabled())
        {
            element.setNext();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNext</Name>
				<Source><![CDATA[
    public void setNext()
    {
        boolean ok = true;

        switch (sysWizard.curTab())
        {
            case #PageNewActivity:
                ok =    planActivityName.text()
                     && processQuantity.realValue()   > 0
                     && processQuantityUnitOfMeasure != 0
                     && operatingUnit.text();
                break;

            case #PageProcessActivity:
                ok = workCell.text() != '';
                break;

            case #PageTransferLocations:
                ok =    transferFromWMSLocation.text()
                     && transferFromInventLocation.text()
                     && transferToWMSLocation.text()
                     && transferToInventLocation.text();
                break;
        }

        sysWizard.nextEnabled(ok, sysWizard.curTab(), false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tab</Name>
				<Source><![CDATA[
    public FormTabControl tab()
    {
        return tab;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tempTable2Con</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serializes the contents of a temporary table to a <c>Container</c>.
    /// </summary>
    /// <param name="_tempTable">
    /// The temporary table buffer.
    /// </param>
    /// <returns>
    /// A <c>Container</c> holding the serialized contents of the temporary table.
    /// </returns>
    private container tempTable2Con(Common _tempTable)
    {
        container result = conNull();

        while select _tempTable
        {
            result += [buf2Con(_tempTable)];
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Triggers design updates to create or update the <c>InventDimForm</c> helpers.
    /// </summary>
    /// <param name="_mode">
    ///    An <c>InventDimFormDesignUpdate</c> value specifying what type of action this is; for example,
    ///    initialize, or update.
    /// </param>
    /// <exception cref="Exception::Error">
    ///    An invalid parameter was passed.
    /// </exception>
    public void updateDesign(InventDimFormDesignUpdate _mode = InventDimFormDesignUpdate::Active)
    {
        switch (_mode)
        {
            case InventDimFormDesignUpdate::Init:
                if (!inventDimForm_Ctrl)
                {
                    inventDimForm_Ctrl = InventDimCtrl::newFromFormValidDataSource(element,inventDimPicking_ds.name());
                    inventDimForm_Ctrl.parmDimParmVisibleGrid(PlanActivityForm::inventDimParmShow());
                }
            // fall through
            case InventDimFormDesignUpdate::Active,
                 InventDimFormDesignUpdate::FieldChange:
                PlanActivityForm::updateInventDimOnFieldChange(inventDimPicking, planActivityTmpPickingLocations.ItemId);
                inventDimForm_Ctrl.parmDimParmEnabled(PlanActivityForm::inventDimParmEnabled(planActivityTmpPickingLocations.ItemId));
                inventDimForm_Ctrl.formSetControls(true);
                break;
            default:
                throw error(strFmt("@SYS54195",funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTab</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the presence of the mandatory fields in the temp tables.
    /// </summary>
    /// <param name="_tabPage">
    /// The tab page to be validated.
    /// </param>
    /// <returns>
    /// true if the page is valid; false otherwise.
    /// </returns>
    public boolean validateTab(int _tabPage)
    {
        boolean ok = true;

        switch (_tabPage)
        {
            case #PageNewActivity:
                ok =    ok
                     && sysWizard.validatePlanActivityName(planActivityName.text())
                     && PlanActivityWizard::validateOperatingUnit(operatingUnit.text());
                break;

            case #PagePickingActivities:
                // go over all locations and validate fields
                PlanActivityTmpPickingLocations localPlanActivityTmpPickingLocations = PlanActivityTmpPickingLocations_DS.getFirst();

                while (localPlanActivityTmpPickingLocations)
                {
                    ok =    ok
                         && localPlanActivityTmpPickingLocations.validateWrite();

                    if (!ok)
                    {
                        break;
                    }

                    localPlanActivityTmpPickingLocations = PlanActivityTmpPickingLocations_DS.getNext();
                }

                break;

            case #PageActivityTimes:
                PlanActivityTmpActivityTimes localPlanActivityTmpActivityTimes = PlanActivityTmpActivityTimes_DS.getFirst();
                while (localPlanActivityTmpActivityTimes)
                {
                    ok =    ok
                         && localPlanActivityTmpActivityTimes.validateWrite();

                    if (!ok)
                    {
                        break;
                    }

                    localPlanActivityTmpActivityTimes = PlanActivityTmpActivityTimes_DS.getNext();
                }

                break;
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wizard</Name>
				<Source><![CDATA[
    public SysWizard wizard()
    {
        return sysWizard;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PlanActivityTmpPickingLocations</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            InventDim   inventDim;

            inventDim                                   = InventDim::findOrCreate(inventDimPicking);
            planActivityTmpPickingLocations.InventDimId = inventDim.InventDimId;

            if (planActivityTmpPickingLocations.InventDimId != inventDimPicking.InventDimId)
            {
                inventDimPicking.data(inventDim);
                inventDimPicking_ds.setCurrent();
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int result = super();

            element.updateDesign();

            return result;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            WrkCtrResourceGroup     wrkCtrResourceGroup;
            InventDim               inventDim;

            super();

            wrkCtrResourceGroup  = WrkCtrResourceGroup::findWrkCtrId(workCell.text());

            if (wrkCtrResourceGroup)
            {
                inventDim.clear();
                inventDim.InventSiteId     = wrkCtrResourceGroup.SiteId;
                inventDim.InventLocationId = wrkCtrResourceGroup.InputInventLocationId;
                inventDim.wmsLocationId    = wrkCtrResourceGroup.InputWMSLocationId;
                inventDim                  = InventDim::findOrCreate(inventDim);
                inventDimPicking.data(inventDim);
                inventDimPicking_ds.setCurrent();
                planActivityTmpPickingLocations.InventDimId              = inventDimPicking.InventDimId;
                planActivityTmpPickingLocations.PlanActivityUpdateOnhand = NoYes::Yes;
                planActivityTmpPickingLocations.RegisterScrap            = NoYes::Yes;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            planActivityTmpPickingLocations.InventDimId = InventDim::findOrCreate(inventDimPicking).InventDimId;

            return planActivityTmpPickingLocations.validateWrite(inventDimPicking,WrkCtrResourceGroup::findWrkCtrId(workcell.text()));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ItemId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.updateDesign(InventDimFormDesignUpdate::FieldChange);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Tab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChange</Name>
						<Source><![CDATA[
        public boolean tabChange(int _fromTab)
        {
            boolean ret = false;

            if (!ignoreValidation)
            {
                if (   sysWizard.curTab() < _fromTab
                    || element.validateTab(_fromTab))
                {
                    ret = super(_fromTab);
                }
                else
                {
                    ignoreValidation = true;
                    sysWizard.back();
                    ignoreValidation = false;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        public void tabChanged(
            int _fromTab,
            int _toTab)
        {
            super(_fromTab,_toTab);
            element.initTabPage(_fromTab,_toTab);
            element.setNext();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PlanActivityName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean result = super();

            element.setNext();

            return result;
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        public void textChange()
        {
            super();
            element.refreshMandatoryControl(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean result = super();

            result =    result
                     && sysWizard.validatePlanActivityName(this.text());

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PlanActivityType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            
            PlanActivityProductionFlowActivityType activity = this.selectionAsPlanActivityProductionFlowActivityType();

            sysWizard.setTabsToSkip(activity == PlanActivityProductionFlowActivityType::Process, #PageTransferActivity);
            sysWizard.setTabsToSkip(activity == PlanActivityProductionFlowActivityType::Process, #PageTransferLocations);
            sysWizard.setTabsToSkip(activity == PlanActivityProductionFlowActivityType::Transfer, #PageProcessActivity);
            sysWizard.setTabsToSkip(activity == PlanActivityProductionFlowActivityType::Transfer, #PagePickingActivities);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionAsPlanActivityProductionFlowActivityType</Name>
						<Source><![CDATA[
        public PlanActivityProductionFlowActivityType selectionAsPlanActivityProductionFlowActivityType()
        {
            return any2Enum(this.selection());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProcessQuantity</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setNext();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProcessQuantityUnitId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            UnitOfMeasureLookup::lookup(this, this.text());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setNext();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        public void textChange()
        {
            super();

            element.refreshMandatoryControl(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean result = super();

            result =    result
                     && PlanActivityWizard::validateUnitOfMeasure(this.text(),UnitOfMeasureClass::Undefined);

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OperatingUnit</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            SysTableLookup          sysTableLookup;
            QueryBuildRange         queryBuildRange;

            // Create an instance of SysTableLookup with the form control passed in
            sysTableLookup = SysTableLookup::newParameters(tableNum(OMOperatingUnit), this);

            // Add the fields to be shown in the lookup form
            sysTableLookup.addLookupfield(fieldNum(OMOperatingUnit, Name), true);

            // Create the query datasource
            queryBuildDataSource = query.addDataSource(tableNum(OMOperatingUnit));

            queryBuildRange = queryBuildDataSource.addRange(fieldNum(OMOperatingUnit, omOperatingUnitType));

            queryBuildRange.value((enum2str(OMOperatingUnitType::OMValueStream)));

            // Add the query to the lookup form
            sysTableLookup.parmQuery(query);

            // Perform lookup
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setNext();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        public void textChange()
        {
            super();

            element.refreshMandatoryControl(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean result = super();

            result =    result
                     && PlanActivityWizard::validateOperatingUnit(this.text());

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WorkCell</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            element.jumpRefWorkCell(this.text());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean     ret;

            ret = super();

            element.setNext();

            processManagingVendorAccount.text(WrkCtrResourceGroup::vendorManagingResourceGroup(this.text()));

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean result = super();

            result =    result
                     && PlanActivityWizard::validateWorkCell(this.text());

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UpdateOnhand</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean result;

            result = super();

            if (result)
            {
                if (updateOnHand.checked())
                {
                    receiveSemiFinished.checked(false);
                    receiveSemiFinished.enabled(false);
                }
                else
                {
                    receiveSemiFinished.enabled(true);
                }
            }

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PickUpSemiFinished</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            sysWizard.setTabsToSkip(this.checked(), #PagePickingActivities);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReceiveSemiFinished</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean result;

            result = super();

            if (result)
            {
                if (receiveSemiFinished.checked())
                {
                    updateOnHand.checked(false);
                    updateOnHand.enabled(false);
                }
                else
                {
                    updateOnHand.enabled(true);
                }
            }

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReplenishingWorkCell</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            element.jumpRefWorkCell(this.text());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean                 ret;
            WrkCtrResourceGroup     wrkCtrResourceGroup;

            ret = super();

            element.setNext();

            wrkCtrResourceGroup = WrkCtrResourceGroup::findWrkCtrId(this.text());

            if (wrkCtrResourceGroup)
            {
                transferFromWMSLocation.text(wrkCtrResourceGroup.OutputWMSLocationId);
                transferFromInventLocation.text(wrkCtrResourceGroup.OutputInventLocationId);

                transferFromManagingVendorAccount.text(InventLocation::find(wrkCtrResourceGroup.OutputInventLocationId).VendAccount);
            }

            isCarrierDefaultSet = false;

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean result = super();

            if (   result
                && this.text())
            {
                result = PlanActivityWizard::validateWorkCell(this.text());
            }

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReplenishWorkCell</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            element.jumpRefWorkCell(this.text());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean                 ret;
            WrkCtrResourceGroup     wrkCtrResourceGroup;

            ret = super();

            element.setNext();

            wrkCtrResourceGroup = WrkCtrResourceGroup::findWrkCtrId(this.text());

            if (wrkCtrResourceGroup)
            {
                transferToWMSLocation.text(wrkCtrResourceGroup.InputWMSLocationId);
                transferToInventLocation.text(wrkCtrResourceGroup.InputInventLocationId);

                transferToManagingVendorAccount.text(InventLocation::find(wrkCtrResourceGroup.InputInventLocationId).VendAccount);
            }

            isCarrierDefaultSet = false;

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean result = super();

            if (   result
                && this.text())
            {
                result = PlanActivityWizard::validateWorkCell(this.text());
            }

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProductType</Name>
				<Type>RadioButton</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            updateOnHandPick.enabled(this.selectionAsLeanProductTypes() == LeanProductTypes::FinishedProduct);
            updateOnHandReceipt.enabled(this.selectionAsLeanProductTypes() == LeanProductTypes::FinishedProduct);

            if (!updateOnHandPick.enabled())
            {
                updateOnHandPick.checked(false);
            }

            if (!updateOnHandReceipt.enabled())
            {
                updateOnHandReceipt.checked(false);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionAsLeanProductTypes</Name>
						<Source><![CDATA[
        public LeanProductTypes selectionAsLeanProductTypes()
        {
            return any2Enum(this.selection());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UpdateOnHandPick</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            PlanActivityLocation    planActivityLocation;
            boolean result;

            result = super();
            result = result && planActivityLocation.checkWMSLocation(0,
                                                                     transferFromInventLocation.text(),
                                                                     transferFromWMSLocation.text(),
                                                                     this.checked());

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabPickingActivities</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            element.initPlanActivityTmpPickingLocations();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PlanActivityTmpPickingLocations_ItemId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean result = super();

            element.updateDesign(InventDimFormDesignUpdate::FieldChange);

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PlanActivityTmpPickingLocations_PlanActivityUpdateOnhand</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean result = super();

            if (!this.checked())
            {
                planActivityTmpPickingLocations.RegisterScrap = NoYes::No;
            }

            return result;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            LeanProdFlowActivityPickingLocation     leanProdFlowActivityPickingLocation;
            boolean                                 result;

            result = super() && leanProdFlowActivityPickingLocation.checkInventDim(0,inventDimPicking,this.checked());

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PlanActivityTmpPickingLocations_RegisterScrap</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            return    super()
                   && (!this.checked()
                   ||  planActivityTmpPickingLocations.PlanActivityUpdateOnhand);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabTransferLocations</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            if (!isCarrierDefaultSet)
            {
                freightedBy.selection(element.defaultFreightedBy());

                isCarrierDefaultSet = true;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransferFromInventLocation</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            transferFromWMSLocation.text('');

            element.setNext();

            transferFromManagingVendorAccount.text(InventLocation::find(this.text()).VendAccount);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            PlanActivityLocation    planActivityLocation;
            boolean                 result = super();

            result = result
                     && planActivityLocation.checkWMSLocation(0,
                                                              this.text(),
                                                              '',
                                                              updateOnHandReceipt.checked());

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransferFromWMSLocation</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            WMSLocation::lookupLocationId(this, transferFromInventLocation.text());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setNext();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            PlanActivityLocation    planActivityLocation;
            boolean                 result = super();

            result = result
                     && planActivityLocation.checkWMSLocation(0,
                                                              transferFromInventLocation.text(),
                                                              this.text(),
                                                              updateOnHandReceipt.checked());

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransferToInventLocation</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            transferToWMSLocation.text('');

            element.setNext();

            transferToManagingVendorAccount.text(InventLocation::find(this.text()).VendAccount);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean result = super();

            result = result
                     && InventLocation::checkExist(this.text());

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransferToWMSLocation</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            WMSLocation::lookupLocationId(this, transferToInventLocation.text());
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setNext();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean result = super();

            if (   result
                && this.text())
            {
                result = PlanActivityWizard::validateWMSLocationId(transferToInventLocation.text(), this.text());
            }

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabActivityTimes</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            // initialize default activity times
            element.initPlanActivityTmpActivityTimes();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PlanActivityTmpActivityTimes_TimeUnitOfMeasure</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            UnitOfMeasureLookup::lookupReferenceForUnitOfMeasureClass(this, UnitOfMeasureClass::Time);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PlanActivityTmpActivityTimes_QuantityUnitOfMeasure</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            UnitOfMeasureLookup::lookupReference(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PlanActivityTmpPickingLocations</Name>
			<Table>PlanActivityTmpPickingLocations</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlanActivityUpdateOnhand</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegisterScrap</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PlanActivityTmpActivityTimes</Name>
			<Table>PlanActivityTmpActivityTimes</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlanActivityTimeTypes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuantityUnitOfMeasure</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Time</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TimeUnitOfMeasure</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueAddingActivity</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDimPicking</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>PlanActivityTmpPickingLocations</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS300882</Caption>
		<Pattern xmlns="">Wizard</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Wizard</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabWelcome</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstruction</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@SYS300883</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Body</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS27227</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabNewActivity</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstructionNewActivity</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@SYS300991</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BodyNewActivity</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>FormGroupControl1</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PlanActivityName</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>536870910</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>PlanActivityName</ExtendedDataType>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>PlanActivityType</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>805306365</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SYS300884</HelpText>
												<NeededPermission>Update</NeededPermission>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<EnumType>PlanActivityProductionFlowActivityType</EnumType>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>DownstreamFlow</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741820</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<NeededPermission>Update</NeededPermission>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@SYS300885</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>ProcessQuantity</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1342177275</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SYS300886</HelpText>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<AllowNegative>No</AllowNegative>
												<ExtendedDataType>PlanActivityProcessQuantity</ExtendedDataType>
												<Mandatory>Yes</Mandatory>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProcessQuantityUnitId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612730</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SYS578</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editProcessQtyUnitOfMeasure</DataMethod>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>OperatingUnit</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048185</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>DirPartyName</ExtendedDataType>
												<Label>@SYS130618</Label>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS89987</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabProcessActivity</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1727004670</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstructionProcessActivity</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@SYS300887</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BodyProcessActivity</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WorkCell</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>LeanWorkCell</ExtendedDataType>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupManagingOrganizationProcess</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ProcessManagingVendorAccount</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SYS331777</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>VendAccount</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<Caption>@SYS331769</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>UpdateOnhand</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:PlanActivityWizard_UpdateOnhand</HelpText>
										<NeededPermission>Update</NeededPermission>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS300889</Label>
										<Value>1</Value>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupSemiFinishedProduct</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>PickUpSemiFinished</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsPayable:PlanActivityWizard_PickUpSemiFinished</HelpText>
												<NeededPermission>Update</NeededPermission>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@SYS300994</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>ReceiveSemiFinished</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsPayable:PlanActivityWizard_ReceiveSemiFinished</HelpText>
												<NeededPermission>Update</NeededPermission>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@SYS131923</Label>
											</AxFormControl>
										</Controls>
										<Caption>@SYS300890</Caption>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS332403</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabTransferActivity</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1843396606</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstructionTransferActivity</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@SYS300893</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BodyTransferActivity</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupWorkCells</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReplenishingWorkCell</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>LeanWorkCell</ExtendedDataType>
												<Label>@SYS300894</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReplenishWorkCell</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>LeanWorkCell</ExtendedDataType>
												<Label>@SYS300895</Label>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS152601</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupProductType</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRadioButtonControl">
												<Name>ProductType</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<NeededPermission>Update</NeededPermission>
												<Type>RadioButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<EnumType>LeanProductTypes</EnumType>
												<FrameType>None</FrameType>
												<Selection>2</Selection>
												<Items />
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS133830</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>FinishedProduct</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>UpdateOnHandReceipt</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<Enabled>No</Enabled>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsPayable:PlanActivityWizard_UpdateOnHandReceipt</HelpText>
												<NeededPermission>Update</NeededPermission>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@SYS300897</Label>
												<Value>1</Value>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>UpdateOnHandPick</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<Enabled>No</Enabled>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_AccountsPayable:PlanActivityWizard_UpdateOnHandPick</HelpText>
												<NeededPermission>Update</NeededPermission>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@SYS300913</Label>
												<Value>1</Value>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS300896</Caption>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS332405</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPickingActivities</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1959788542</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstructionPickingActivities</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@SYS331778</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BodyPickingActivities</Name>
								<Pattern>ToolbarList</Pattern>
								<PatternVersion>1.2</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneControl">
										<Name>ActionPane</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ActionPane</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneTabControl">
												<Name>ActionPaneTab</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ActionPaneTab</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>ButtonGroup</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>buttonAdd</Name>
																<ElementPosition>858993458</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>New</Command>
																<NormalImage>New</NormalImage>
																<Text>@SYS301705</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>buttonRemove</Name>
																<ElementPosition>1288490187</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>DeleteRecord</Command>
																<NormalImage>Delete</NormalImage>
																<Text>@SYS301706</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>ShowDimensions</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1717986916</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<HelpText>@SYS309569</HelpText>
																<Type>MenuFunctionButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<MenuItemName>InventDimParmFixedAction</MenuItemName>
																<SaveRecord>No</SaveRecord>
																<ShowShortCut>No</ShowShortCut>
																<Text>@SYS5951</Text>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>PlanActivityTmpPickingLocations</DataSource>
										<Style>Strip</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>GridPickingActivities</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Grid</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>PlanActivityTmpPickingLocations_ItemId</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>ItemId</DataField>
												<DataSource>PlanActivityTmpPickingLocations</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>InventoryDimensions</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_configId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>configId</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventSizeId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventSizeId</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventColorId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventColorId</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventStyleId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventStyleId</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventVersionId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventVersionId</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventSiteId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventSiteId</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventLocationId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventLocationId</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_inventBatchId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>inventBatchId</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_wMSLocationId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>wMSLocationId</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_inventSerialId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>inventSerialId</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventStatusId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventStatusId</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_LicensePlateId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>LicensePlateId</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventOwnerId_RU</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventOwnerId_RU</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventProfileId_RU</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventProfileId_RU</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>InventoryDimensions_InventGtdId_RU</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventGtdId_RU</DataField>
														<DataSource>InventDimPicking</DataSource>
													</AxFormControl>
												</Controls>
												<BackgroundColor>WindowBackground</BackgroundColor>
												<DataGroup>InventoryDimensions</DataGroup>
												<DataSource>InventDimPicking</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>PlanActivityTmpPickingLocations_PlanActivityUpdateOnhand</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<BackgroundColor>WindowBackground</BackgroundColor>
												<DataField>PlanActivityUpdateOnhand</DataField>
												<DataSource>PlanActivityTmpPickingLocations</DataSource>
												<Value>1</Value>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>PlanActivityTmpPickingLocations_RegisterScrap</Name>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_AccountsPayable:PlanActivityWizard_PlanActivityTmpPickingLocations_RegisterScrap</HelpText>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<BackgroundColor>WindowBackground</BackgroundColor>
												<DataField>RegisterScrap</DataField>
												<DataSource>PlanActivityTmpPickingLocations</DataSource>
											</AxFormControl>
										</Controls>
										<DataSource>PlanActivityTmpPickingLocations</DataSource>
										<Style>Tabular</Style>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@SYS332404</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabTransferLocations</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2076180478</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstructionTransferLocations</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@SYS331780</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BodyTransferLocations</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>TransferFromLocation</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TransferFromInventLocation</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>InventLocationId</ExtendedDataType>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TransferFromWMSLocation</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>WMSLocationId</ExtendedDataType>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TransferFromManagingVendorAccount</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>VendAccount</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS300901</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>TransferToLocation</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TransferToInventLocation</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>InventLocationId</ExtendedDataType>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TransferToWMSLocation</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>WMSLocationId</ExtendedDataType>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>TransferToManagingVendorAccount</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>VendAccount</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS300902</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupShipping</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>FreightedBy</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<NeededPermission>Update</NeededPermission>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<EnumType>WMSFreightedBy</EnumType>
												<Items />
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS88262</Caption>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS331779</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabActivityTimes</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2107637758</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstructionActivityTimes</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@SYS300992</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BodyActivityTimes</Name>
								<Pattern>ToolbarList</Pattern>
								<PatternVersion>1.2</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>ActivityTimesGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Grid</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>PlanActivityTmpActivityTimes_Time</Name>
												<ElementPosition>536870910</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>Time</DataField>
												<DataSource>PlanActivityTmpActivityTimes</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>PlanActivityTmpActivityTimes_TimeUnitOfMeasure</Name>
												<ElementPosition>805306365</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PlanActivityTmpActivityTimes_TimeUnitOfMeasure_Symbol</Name>
														<DataRelationPath>TimeUnitOfMeasure</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<DataSource>PlanActivityTmpActivityTimes</DataSource>
												<ReferenceField>TimeUnitOfMeasure</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>PlanActivityTmpActivityTimes_PlanActivityTimeTypes</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1073741820</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>PlanActivityTimeTypes</DataField>
												<DataSource>PlanActivityTmpActivityTimes</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>PlanActivityTmpActivityTmpActivityTimes_ValueAdd</Name>
												<ElementPosition>1342177275</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<BackgroundColor>WindowBackground</BackgroundColor>
												<DataField>ValueAddingActivity</DataField>
												<DataSource>PlanActivityTmpActivityTimes</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>PlanActivityTmpActivityTimes_Qty</Name>
												<ElementPosition>1610612730</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>Qty</DataField>
												<DataSource>PlanActivityTmpActivityTimes</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>PlanActivityTmpActivityTimes_QuantityUnitOfMeasure</Name>
												<ElementPosition>1879048185</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PlanActivityTmpActivityTimes_QuantityUnitOfMeasure_Symbol</Name>
														<DataRelationPath>QuantityUnitOfMeasure</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<DataSource>PlanActivityTmpActivityTimes</DataSource>
												<ReferenceField>QuantityUnitOfMeasure</ReferenceField>
											</AxFormControl>
										</Controls>
										<DataSource>PlanActivityTmpActivityTimes</DataSource>
										<MultiSelect>No</MultiSelect>
										<Style>Tabular</Style>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@SYS331781</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabCompleteWizard</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2139095038</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<HelpText>@SYS300904</HelpText>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstruction44</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@SYS81147</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Body45</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SCM:ConfirmSelection</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
