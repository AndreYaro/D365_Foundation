<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>JmgRegistrationTouch</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
[SysObsolete('The Job card device has been deprecated, please use Production Floor Execution instead', false, 03\03\2022)]
public class JmgRegistrationTouch extends FormRun
{
    //Production Area Vars
    ProdUnitId              curProdUnitId;
    WrkCtrIdBase            curWrkCtrId;
    WrkCtrIdBase            curWrkCtrGroupId;

    //Terminal Production Area Vars
    ProdUnitId              terminalProdUnitId;
    WrkCtrIdBase            terminalWrkCtrId;
    WrkCtrIdBase            terminalWrkCtrGroupId;

    JmgParameters           jmgParameters;
    JmgWorkerRecId          curWorker;
    boolean                 reqPassword;

    JmgRegistrationTouchForm       controller;
    JmgRegistrationSetup           jmgRegistrationSetup;

    //Production Query
    QueryBuildDataSource    qbdsJmgJobTable;
    QueryBuildDataSource    qbdsWrkCtrResourceAndGroupView;
    QueryBuildDataSource    qbdsWrkCtrTableIndividualView;
    QueryBuildDataSource    qbdsProdRouteJob;
    QueryBuildDataSource    qbdsProjValEmplProjSetup;
    QueryBuildDataSource    qbdsProjValEmplProjSetupGroup;
    QueryBuildRange         qbrJobId;
    QueryBuildRange         qbrProdJobType;
    QueryBuildRange         qbrProdWrkCtrId;
    QueryBuildRange         qbrProdResourceGroup;
    QueryBuildRange         qbrProdProdUnit;

    JmgJobStatus            currentJobStatus;
    JmgJobStatus            previousJobStatus;

    private  JmgInstrumentationLogger jmgInstrumentationLogger;

    [FormObservable]
    container productImage;

}
]]></Source>
			</Method>
			<Method>
				<Name>curWorker</Name>
				<Source><![CDATA[
    public JmgWorkerRecId curWorker()
    {
        return curWorker;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activeJobId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the currently shown job in the form
    /// </summary>
    /// <returns>The <c>JmgJobId</c> of the job currently shown in the form</returns>
    public JmgJobId activeJobId()
    {
        return JmgJobTable.JobId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeFilters</Name>
				<Source><![CDATA[
    private void initializeFilters()
    {
        var workerConfiguration = JmgRegistrationTouchUserConfiguration::find(curWorker);

        if (workerConfiguration && jmgRegistrationSetup.EnableWorkerFilter)
        {
            curWrkCtrId      = workerConfiguration.ResourceFilter;
            curWrkCtrGroupId = workerConfiguration.ResourceGroupFilter;
            curProdUnitId    = workerConfiguration.ProdUnitFilter;
        }
        else
        {
            curWrkCtrId      = jmgRegistrationSetup.DefaultResourceFilter;
            curWrkCtrGroupId = jmgRegistrationSetup.DefaultResourceGroupFilter;
            curProdUnitId    = jmgRegistrationSetup.DefaultProdUnitFilter;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        jmgRegistrationSetup = JmgRegistrationSetup::findConfigurationForCurrentUser(NoYes::Yes);

        if (!jmgRegistrationSetup.RecId)
        {
            Box::stop("@SCM:NoJmgRegistrationSetupForCurrentUser");
            throw error("@SCM:NoJmgRegistrationSetupForCurrentUser");
        }

        controller = JmgRegistrationTouchForm::construct(this);

        jmgParameters = JmgParameters::find();
        reqPassword   = jmgParameters.UsePINcode;
        PassTextField.visible(reqPassword && !jmgRegistrationSetup.EnableSingleWorker);
        WorkerTextField.enabled(!jmgRegistrationSetup.EnableSingleWorker);

        ConfigureBtn.visible(jmgRegistrationSetup.EnableWorkerFilter);

        if (jmgRegistrationSetup.EnableSingleWorker)
        {
            this.populateCredentialsForCurrentWorker();
        }

        JobScanner.visible(jmgRegistrationSetup.Scanner);
        JobScannerFocusTimer.enabled(jmgRegistrationSetup.Scanner);  
      
        this.enableLockScreenButton();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldShowLockScreenButton</Name>
				<Source><![CDATA[
    private boolean shouldShowLockScreenButton()
    {
        return JmgRegistrationSetup::findConfigurationForCurrentUser(NoYes::Yes).LockScreen;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableLockScreenButton</Name>
				<Source><![CDATA[
    private void enableLockScreenButton()
    {
        boolean lockScreen = this.shouldShowLockScreenButton();
        LockScreenButton.visible(lockScreen);
        LockScreenButton.enabled(lockScreen);

        if(lockScreen)
        {
            HelpTextLockButton.text(strFmt("@SCM:JmgButtonHelptext",jmgRegistrationSetup.LockScreenSeconds));
        }
        else
        {
            HelpTextLockButton.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateCredentialsForCurrentWorker</Name>
				<Source><![CDATA[
    private void populateCredentialsForCurrentWorker()
    {
        var currentWorkerId = HcmWorkerLookup::currentWorker();
        JmgEmployee employee = JmgEmployee::find(currentWorkerId);

        WorkerTextField.text(jmgParameters.UseBadgeId ? employee.LoginCardNo : HcmWorker::find(currentWorkerId).PersonnelNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>scrSwitch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the state of the UI of the registration form
    /// either forces the state or reverts the existing state
    /// Identifies if the user is on a break or indirect activity in order to hide the job information accordingly
    /// kept the same api with the jmgregistration form for consistency.
    /// </summary>
    /// <param name = "_force">Forcing to use input value if true; otherwise revert the current status.</param>
    /// <param name = "_val">The value to be set in the visibility enable status of the controls.</param>
    public void scrSwitch(boolean _force = false, boolean _val = false)
    {
        loginScreen.enabled(loginScreen.visible(_force ? !_val : !loginScreen.visible()));
        this.enableLockScreenButton();
        Actions.enabled(_force ? _val : !Actions.enabled());
        Actions.visible(_force ? _val : !Actions.visible());

        JmgRegistrationTouchStatus registrationStatusForCurrenEmployee = controller.getRegistrationStatusForCurrenEmployee();

        if ((registrationStatusForCurrenEmployee == JmgRegistrationTouchStatus::BreakStarted
            || registrationStatusForCurrenEmployee == JmgRegistrationTouchStatus::IndirectActivityStarted) && Actions.enabled())
        {
            StopBtn.text(registrationStatusForCurrenEmployee == JmgRegistrationTouchStatus::BreakStarted ? "@SCM:StopBreak" : "@SCM:StopIndirectActivity");

            StopBtn.visible(true);
            ActionButtonGroup.visible(false);
            JobButtons.visible(false);
            MainPane.visible(false);
        }
        else
        {
            ActionButtonGroup.visible(true);
            StopBtn.visible(false);

            JobButtons.enabled(_force ? _val : !JobButtons.enabled());
            JobButtons.visible(_force ? _val : !JobButtons.visible());

            MainPane.enabled(_force ? _val : !MainPane.enabled());
            MainPane.visible(_force ? _val : !MainPane.visible());
        }

        this.setUserStatusText(registrationStatusForCurrenEmployee);

        if (!_val)
        {
            loginScreen.setFocus();
            element.clearInputFields();
            element.setFocusOnControl(workerTextField);
        }

        if (jmgRegistrationSetup.EnableSingleWorker && loginScreen.visible())
        {
            this.populateCredentialsForCurrentWorker();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableScreen</Name>
				<Source><![CDATA[
    public void enableScreen(boolean    _enabled)
    {
        if (_enabled)
        {
            this.scrSwitch(true,true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearInputFields</Name>
				<Source><![CDATA[
    public void clearInputFields()
    {
        workerTextField.text('');
        passTextField.text('');
        curWorker = 0;
        controller.parmJmgEmployee(null);

        if (workerTextField.visible())
        {
            workerTextField.setFocus();
            element.selectControl(workerTextField);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFocusOnControl</Name>
				<Source><![CDATA[
    void setFocusOnControl(FormControl _formControl = null)
    {
        if (_formControl)
        {
            _formControl.setFocus();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>blockUserLogin</Name>
				<Source><![CDATA[
    public void blockUserLogin()
    {
        loginBtn.enabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>unblockUserLogin</Name>
				<Source><![CDATA[
    public void unblockUserLogin()
    {
        loginBtn.enabled(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRegistrationSetup</Name>
				<Source><![CDATA[
    public JmgRegistrationSetup getRegistrationSetup()
    {
        return jmgRegistrationSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>registrationFormClass</Name>
				<Source><![CDATA[
    public JmgRegistrationFormBase registrationFormClass()
    {
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setUserStatusText</Name>
				<Source><![CDATA[
    private void setUserStatusText(JmgRegistrationTouchStatus _status)
    {
        element.design().caption(controller.getStatusTxt(_status));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnterIdText</Name>
				<Source><![CDATA[
    private void setEnterIdText()
    {
        enterIdText.text(JmgRegistrationAuthentication::getEnterIdText(passTextField.visible(), this.useBadgeID()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>useBadgeID</Name>
				<Source><![CDATA[
    private boolean useBadgeID()
    {
        return jmgParameters.UseBadgeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();
        this.setEnterIdText();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showProductionJobs</Name>
				<Source><![CDATA[
    void showProductionJobs()
    {
        jmgJobTable_DS.queryProduction(curWrkCtrId, curWrkCtrGroupId, curProdUnitId);
        if ( JmgJobTable_DS.numberOfRowsLoaded() == 0)
        {
            this.updateJobCardLayout();
            this.setButtonsAccess();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayProductImage</Name>
				<Source><![CDATA[
    public display container displayProductImage()
    {
        return productImage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonsAccess</Name>
				<Source><![CDATA[
    public void setButtonsAccess()
    {
        StartBtn.enabled(currentJobStatus != JmgJobStatus::Completed);
        ReportFeedbackBtn.enabled(jmgJobTable.jobStatusByWorker(curWorker) == JmgJobStatus::InProgress);
        AttachmentBtn.enabled(jmgJobTable.workerHasPermissionToAttachments(curWorker));

        var currentPosition = JmgJobTable_DS.getPosition();
        var totalRows = JmgJobTable_DS.numberOfRowsLoaded();
        PreviousJobBtn.enabled(totalRows > 0 && currentPosition != 1);
        NextJobBtn.enabled(totalRows > 0 && currentPosition != totalRows);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateJobCardLayout</Name>
				<Source><![CDATA[
    public void updateJobCardLayout()
    {
        productImage = EcoResProductImage::releasedProductImage(InventTable::find(JmgJobTable.ItemId), EcoResProductImageSize::Thumbnail).pack();

        currentJobStatus = JmgJobTable.jobStatus();
        previousJobStatus = JmgJobTable.prevJobStatus();

        MainPane.caption(JmgJobTable.Locked ? "@SYS309670" : '');

        PreviousOperationGroup.visible(previousJobStatus != JmgJobStatus::NotAvailable);
        ActiveEmployees.visible(currentJobStatus ==  JmgJobStatus::InProgress);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRegistrationSetup</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Set the registration setup.
    /// </summary>
    /// <param name = "_jmgRegistrationSetup">
    ///  A registration setup record.
    /// </param>
    [Hookable(false)]
    public void setRegistrationSetup(JmgRegistrationSetup _jmgRegistrationSetup)
    {
        jmgRegistrationSetup = _jmgRegistrationSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrCreateLogger</Name>
				<Source><![CDATA[
    private JmgInstrumentationLogger getOrCreateLogger()
    {
        if(!jmgInstrumentationLogger)
        {
            jmgInstrumentationLogger = JmgInstrumentationLogger::createLogger(formStr(JmgRegistrationTouch));
        }
        return jmgInstrumentationLogger;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>JmgJobTable</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            qbdsJmgJobTable = jmgJobTable_DS.query().dataSourceTable(tableNum(JmgJobTable));

            if (JmgProdParameters::find().StampLevel == JmgStampLevel::Job)
            {
                qbdsProdRouteJob   = qbdsJmgJobTable.addDataSource(tableNum(ProdRouteJob));
                qbdsProdRouteJob.joinMode(JoinMode::NoExistsJoin);
                qbdsProdRouteJob.addLink(fieldNum(JmgJobTable, JobId),fieldNum(ProdRouteJob, JobId));
                qbdsProdRouteJob.addLink(fieldNum(JmgJobTable, OprNum),fieldNum(ProdRouteJob, OprNum));
                qbdsProdRouteJob.addLink(fieldNum(JmgJobTable, ModuleRefId),fieldNum(ProdRouteJob, ProdId));
                qbdsProdRouteJob.addLink(fieldNum(JmgJobTable, Priority),fieldNum(ProdRouteJob, OprPriority));

                qbdsProdRouteJob.addRange(fieldNum(ProdRouteJob, JobControl)).value(queryValue(NoYes::No));
            }

            qbrProdJobType          = qbdsJmgJobTable.addRange(fieldNum(JmgJobTable,Type));
            qbrProdWrkCtrId         = qbdsJmgJobTable.addRange(fieldNum(JmgJobTable,WrkCtrId));
            qbrProdResourceGroup    = qbdsJmgJobTable.addRange(fieldNum(JmgJobTable,ResourceGroup));
            qbrJobId                = qbdsJmgJobTable.addRange(fieldNum(JmgJobTable,JobId));

            // Only show jobs which are not reported as finished.
            qbdsJmgJobTable.addRange(fieldNum(JmgJobTable,ReportedFinished)).value(queryValue(NoYes::No));

            qbdsJmgJobTable.addSortField(fieldNum(JmgJobTable, PriorityResource), SortOrder::Ascending);
            qbdsJmgJobTable.addSortField(fieldNum(JmgJobTable, FromDate), SortOrder::Ascending);
            qbdsJmgJobTable.addSortField(fieldNum(JmgJobTable, FromTime), SortOrder::Ascending);
            qbdsJmgJobTable.addSortField(fieldNum(JmgJobTable, OprNum), SortOrder::Ascending);
        }

]]></Source>
					</Method>
					<Method>
						<Name>querySetDefaultRanges</Name>
						<Source><![CDATA[
        public void querySetDefaultRanges()
        {
            qbrProdWrkCtrId.value('');
            qbrProdResourceGroup.value('');
            qbrProdProdUnit.value('');
            qbrJobId.value('');
        }

]]></Source>
					</Method>
					<Method>
						<Name>queryProduction</Name>
						<Source><![CDATA[
        void queryProduction(str _wrkCtrId = '',str _wrkCtrGroupId = '',str _prodUnitId = '')
        {
            qbdsWrkCtrResourceAndGroupView.joinMode(JoinMode::InnerJoin);

            this.genQuery(queryRange(JmgJobTableType::ProdQueueBefore, JmgJobTableType::ProdQueueAfter),
                _wrkCtrId,
                _wrkCtrGroupId,
                _prodUnitId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>genQuery</Name>
						<Source><![CDATA[
        private void genQuery(str   _queryVal, str _wrkCtrId = '', str _wrkCtrGroupId = '',str _prodUnitId = '')
        {
            WrkCtrTable selectedWrkCtrTable;

            qbrProdJobType.value(_queryVal);

            this.querySetDefaultRanges();

            if (_wrkCtrId)
            {
                qbrProdWrkCtrId.value(_wrkCtrId);
            }
            else if (_wrkCtrGroupId)
            {
                qbrProdResourceGroup.value(queryValue(WrkCtrResourceGroup::findWrkCtrId(_wrkCtrGroupId).RecId));
            }
            else if (_prodUnitId)
            {
                qbrProdProdUnit.value(_prodUnitId);
            }
            jmgJobTable_DS.executeQuery();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            element.updateJobCardLayout();

            ret = super();

            element.setButtonsAccess();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Select the current job after clicking the system "Refresh" button.
        /// </summary>
        public void executeQuery()
        {
            JmgJobId currentJobId = element.activeJobId();

            super();

            controller.invokeRefresh(currentJobId);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>WrkCtrResourceAndGroupView</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            qbdsWrkCtrResourceAndGroupView = this.queryBuildDataSource();
            JmgWrkCtrResourceAndGroupViewHelper::addLinkToJmgJobTable(qbdsWrkCtrResourceAndGroupView);
            qbrProdProdUnit = qbdsWrkCtrResourceAndGroupView.addRange(fieldNum(WrkCtrResourceAndGroupView,ProdUnitId));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>logInBtn</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            // Do not validate PIN in single-user mode.
            boolean  usePIN = jmgParameters.UsePINcode && !jmgRegistrationSetup.EnableSingleWorker;
            boolean  useBadgeId = jmgParameters.UseBadgeId;

            controller.parmJmgEmployee(JmgRegistrationAuthentication::authenticate(workerTextField.text(), passTextField.text(), useBadgeId, usePIN));
            if (controller.parmJmgEmployee() == null)
            {
                element.clearInputFields();
                return;
            }
                
            curWorker = controller.parmJmgEmployee().Worker;
            element.initializeFilters();
                
            using(var activityContext = JmgRegistrationInstrumentationActivities::initFormParms(JmgInstrumentationLogger::createLogger(formStr(JmgRegistrationTouch)).registration().login(curWorker), formStr(JmgRegistrationTouch)))
            {
                if (controller.setupRegistrationForm(curWorker, jmgRegistrationSetup, true) == 0)
                {
                    return;
                }

                element.scrSwitch(true,true);

                element.showProductionJobs();

                controller.focusOnStartedJob();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LockScreenButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            Args args = new Args();
            args.name(formstr(JmgLockScreenDialog));
            Object formRun = classfactory.formRunClass(args);
            formRun.parmCallerName(formStr(JmgRegistrationTouch));
            formRun.parmCurrentTimerValue(jmgRegistrationSetup.LockScreenSeconds);
            formRun.init();
            formRun.run();
            formRun.detach();    
            WorkerTextField.setFocus();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>StartBtn</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.performStartJobPrerequisiteChecks(JmgJobTable);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReportFeedbackBtn</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            controller.startFeedback();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PreviousJobBtn</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            JmgJobTable_DS.prev();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NextJobBtn</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            JmgJobTable_DS.next();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JobScanner</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            controller.scanJobId(JobScanner.text());

            JobScanner.text('');
            JobScanner.setFocus();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>StopBtn</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            switch (controller.getRegistrationStatusForCurrenEmployee())
            {
                case JmgRegistrationTouchStatus::BreakStarted:
                    controller.endBreak(jmgRegistrationSetup);
                    break;

                case JmgRegistrationTouchStatus::IndirectActivityStarted:
                    controller.endIndirectActivity(jmgRegistrationSetup);
                    break;
            }

            element.scrSwitch(true,true);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ConfigureBtn</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Args              args;
            formRun           formRun;

            args = new args();
            args.caller(element);
            args.name(formstr(JmgRegistrationTouchUserConfiguration));
            args.menuItemName(menuItemDisplayStr(JmgRegistrationTouchUserConfiguration));

            formRun = classFactory.formRunClass( Args );

            formRun.init();
            formrun.run();
            formrun.wait();

            if ( formrun.closedOk() )
            {
                element.initializeFilters();
                element.showProductionJobs();
                controller.focusOnStartedJob();
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Guides</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>initialize</Name>
						<Source><![CDATA[
        protected void initialize()
        {
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JobScannerFocusTimer</Name>
				<Type>Custom</Type>
				<Methods>
					<Method>
						<Name>elapsed</Name>
						<Source><![CDATA[
        public int elapsed()
        {
            int ret = super();

            if (!loginScreen.visible())
            {
                JobScanner.setFocus();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FormDefaultActionButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (loginScreen.visible())
            {
                logInBtn.clicked();
            }
            else if (JobScanner.visible())
            {
                JobScanner.modified();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<IsObsolete>Yes</IsObsolete>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>JmgJobTable</Name>
			<Table>JmgJobTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CalcQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FromTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Locked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModuleRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OprActId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OprNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWCalcQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Priority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriorityResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportedFinished</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>WrkCtrResourceAndGroupView</Name>
			<Table>WrkCtrResourceAndGroupView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsIndividualResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PersonnelNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrIdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>JmgJobTable</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProdTable</Name>
			<Table>ProdTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BackorderStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BOMId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalcDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CheckRoute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectRefLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectRefProdId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Density</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Depth</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinishedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GanttColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Height</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LatestSchedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LatestSchedDirection</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LatestSchedTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWBatchEst</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWBatchSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWBatchSize</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWBatchStup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWRemainInventPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfBulkOrd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfCoByVarAllow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfConsOrdId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfReworkBatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfTotalCostAllocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmfYieldPct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceGroup_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdLocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdOrigId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdPoolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdPostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdPrio</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdWHSReleasePolicy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProfitSet</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCostAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjCostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjLinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjLinkedToOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjSalesCurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjSalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjSalesUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtySched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyStUp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RealDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefLookUp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleasedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainInventPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqPlanIdSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReqPOId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Reservation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteJobs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedEnd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedFromTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedStart</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SchedToTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StUpDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Width</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>JmgJobTable</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS118031</Caption>
		<DefaultAction xmlns="">FormDefaultActionButton</DefaultAction>
		<Pattern xmlns="">Custom</Pattern>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Workspace</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>loginScreen</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStaticTextControl">
						<Name>WelcomeText</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<ExtendedStyle>Emphasized</ExtendedStyle>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>StaticText</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Bold>Extrabold</Bold>
						<FontSize>15</FontSize>
						<ForegroundColor>ActiveTitleBar</ForegroundColor>
						<Style>FormCaption</Style>
						<Text>@SYS27227</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStaticTextControl">
						<Name>enterIDText</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1476395006</ElementPosition>
						<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>StaticText</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Style>MainInstruction</Style>
						<Text></Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>InputGroup</Name>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>WorkerTextField</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>939524094</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<LeftMode>AutoRight</LeftMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<FormControlExtension
									i:nil="true" />
								<ChangeCase>UpperCase</ChangeCase>
								<DisplayHeight>1</DisplayHeight>
								<DisplayHeightMode>Fixed</DisplayHeightMode>
								<Label>@SYS303656</Label>
								<LookupButton>Never</LookupButton>
								<ReplaceOnLookup>No</ReplaceOnLookup>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PassTextField</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1409286141</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<LeftMode>AutoRight</LeftMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DisplayHeight>1</DisplayHeight>
								<DisplayHeightMode>Fixed</DisplayHeightMode>
								<Label>@SYS30019</Label>
								<PasswordStyle>Yes</PasswordStyle>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>logInBtn</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>60</Height>
								<HeightMode>Manual</HeightMode>
								<LeftMode>AutoRight</LeftMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>120</Width>
								<WidthMode>Manual</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DefaultButton>Yes</DefaultButton>
								<MultiSelect>Yes</MultiSelect>
								<Text>@SYS183541</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LockScreenGroup</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>HelpTextLockButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text></Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>LockScreenButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>60</Height>
										<HeightMode>Manual</HeightMode>
										<LeftMode>AutoRight</LeftMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>120</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<NormalImage>Personalize</NormalImage>
										<Text>@SCM:JmgSanitizeButton</Text>
									</AxFormControl>
								</Controls>
								<TopMargin>20</TopMargin>
								<TopMarginMode>Fixed</TopMarginMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Panorama</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>JobButtons</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Enabled>No</Enabled>
						<ExtendedStyle>panoramaItem_backgroundNone</ExtendedStyle>
						<Type>TabPage</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>StartBtn</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Height>60</Height>
								<HeightMode>Manual</HeightMode>
								<Type>MenuFunctionButton</Type>
								<Width>120</Width>
								<WidthMode>Manual</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<CopyCallerQuery>Yes</CopyCallerQuery>
								<DataSource>JmgJobTable</DataSource>
								<MenuItemName>JmgRegistrationTouchStart</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ReportFeedbackBtn</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Height>60</Height>
								<HeightMode>Manual</HeightMode>
								<Type>MenuFunctionButton</Type>
								<Width>120</Width>
								<WidthMode>Manual</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataSource>JmgJobTable</DataSource>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@SCM:ShopFloorReportProgress</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>AttachmentBtn</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Height>60</Height>
								<HeightMode>Manual</HeightMode>
								<Type>MenuFunctionButton</Type>
								<Width>120</Width>
								<WidthMode>Manual</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>JmgRegistrationTouchAttachment</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>PreviousJobBtn</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Height>60</Height>
								<HeightMode>Manual</HeightMode>
								<Type>Button</Type>
								<Width>120</Width>
								<WidthMode>Manual</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Style>Standard</Style>
								<Text>@SCM:PreviousJob</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>NextJobBtn</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Height>60</Height>
								<HeightMode>Manual</HeightMode>
								<Type>Button</Type>
								<Width>120</Width>
								<WidthMode>Manual</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Style>Standard</Style>
								<Text>@SCM:NextJob</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>JobScanner</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<Visible>No</Visible>
								<Width>120</Width>
								<WidthMode>Manual</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@SCM:ScanJobId</Label>
								<LabelPosition>Above</LabelPosition>
							</AxFormControl>
						</Controls>
						<Caption>@SCM:JmgRegistrationTouch_JobButtons</Caption>
						<Style>DetailsFormDetails</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>MainPane</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Enabled>No</Enabled>
						<Type>TabPage</Type>
						<Visible>No</Visible>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TitleGroup</Name>
								<Type>Group</Type>
								<Width>480</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProductName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>productIdentificationLabel</DataMethod>
										<DataSource>JmgJobTable</DataSource>
										<MultiLine>Yes</MultiLine>
										<ShowLabel>No</ShowLabel>
										<Style>TitleField</Style>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ContentGroup</Name>
								<AllowEdit>No</AllowEdit>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Left</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ImageGroup</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormImageControl">
														<Name>ProductImage</Name>
														<Type>Image</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>displayProductImage</DataMethod>
														<Label>@SCM:ProductImage</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalLeft</ArrangeMethod>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ProductIdentification</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProductVariantLabel</Name>
														<ExtendedStyle>informationalField</ExtendedStyle>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>productVariantNameLabel</DataMethod>
														<DataSource>JmgJobTable</DataSource>
														<Label>@SCM:JmgRegistrationTouch_ProductVariantLabel</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
												</Controls>
												<Breakable>No</Breakable>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>JobReference</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProductionLabel</Name>
														<ExtendedStyle>informationalField</ExtendedStyle>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>productionIdentificationLabel</DataMethod>
														<DataSource>JmgJobTable</DataSource>
														<Label>@SCM:JmgRegistrationTouch_ProductionLabel</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>OperationLabel</Name>
														<ExtendedStyle>informationalField</ExtendedStyle>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>operationIdentificationLabel</DataMethod>
														<DataSource>JmgJobTable</DataSource>
														<Label>@SCM:JmgRegistrationTouch_OperationLabel</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>JmgJobTable_Type</Name>
														<ExtendedStyle>informationalField</ExtendedStyle>
														<Type>ComboBox</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>Type</DataField>
														<DataSource>JmgJobTable</DataSource>
														<ShowLabel>No</ShowLabel>
														<Items />
													</AxFormControl>
												</Controls>
												<Breakable>No</Breakable>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Right</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Quantities</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>QuantityRequestedLabel</Name>
														<ExtendedStyle>informationalField</ExtendedStyle>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>quantityRequestedLabel</DataMethod>
														<DataSource>JmgJobTable</DataSource>
														<Label>@SCM:JmgRegistrationTouch_QuantityRequestedLabel</Label>
														<ShowLabel>No</ShowLabel>
														<Style>TitleField</Style>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>QuantityStartedLabel</Name>
														<ExtendedStyle>informationalField</ExtendedStyle>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>quantityStartedLabel</DataMethod>
														<DataSource>JmgJobTable</DataSource>
														<Label>@SCM:JmgRegistrationTouch_QuantityStartedLabel</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>QuantityProducedLabel</Name>
														<ExtendedStyle>informationalField</ExtendedStyle>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>quantityProducedLabel</DataMethod>
														<DataSource>JmgJobTable</DataSource>
														<Label>@SCM:JmgRegistrationTouch_QuantityProducedLabel</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
												</Controls>
												<Breakable>No</Breakable>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>StatusLabel</Name>
												<ExtendedStyle>entityStatus_info</ExtendedStyle>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>currentOperationStatusLabel</DataMethod>
												<DataSource>JmgJobTable</DataSource>
												<Label>@SCM:StatusString</Label>
												<ShowLabel>No</ShowLabel>
												<Style>TitleField</Style>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ActiveEmployees</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ExtendedStyle>informationalField</ExtendedStyle>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>workersRunningJob</DataMethod>
												<DataSource>JmgJobTable</DataSource>
												<Label>@SCM:JmgRegistrationTouch_ActiveEmployees</Label>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>PreviousOperationGroup</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>PreviousOperation</Name>
														<ExtendedStyle>informationalField</ExtendedStyle>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>prevOperationStatusLabel</DataMethod>
														<DataSource>JmgJobTable</DataSource>
														<Label>@SCM:JmgRegistrationTouch_PreviousOperation</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
												</Controls>
												<Caption>@SYS301543</Caption>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SCM:JmgRegistrationTouch_MainPane</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Actions</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Enabled>No</Enabled>
						<ExtendedStyle>panoramaItem_backgroundNone</ExtendedStyle>
						<Type>TabPage</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>StopBtn</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Height>60</Height>
								<HeightMode>Manual</HeightMode>
								<Type>Button</Type>
								<Visible>No</Visible>
								<Width>120</Width>
								<WidthMode>Manual</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SCM:StopIndirectActivity</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ActionButtonGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BreakBtn</Name>
										<Height>60</Height>
										<HeightMode>Manual</HeightMode>
										<Type>MenuFunctionButton</Type>
										<Width>120</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>JmgRegistrationTouchBreak</MenuItemName>
										<Text>@SYS38391</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>IndirectActivityBtn</Name>
										<Height>60</Height>
										<HeightMode>Manual</HeightMode>
										<Type>MenuFunctionButton</Type>
										<Width>120</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>JmgRegistrationTouchIndirectActivity</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AssignedJobsBtn</Name>
										<Height>60</Height>
										<HeightMode>Manual</HeightMode>
										<Type>MenuFunctionButton</Type>
										<Width>120</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>JmgRegistrationTouchAssignedJobs</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ConfigureBtn</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Height>60</Height>
										<HeightMode>Manual</HeightMode>
										<Type>Button</Type>
										<Width>120</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS2163</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Guides</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Height>60</Height>
										<HeightMode>Manual</HeightMode>
										<Type>Button</Type>
										<Visible>No</Visible>
										<Width>120</Width>
										<WidthMode>Manual</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@SYS73306</Text>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>LeaveBtn</Name>
								<Height>60</Height>
								<HeightMode>Manual</HeightMode>
								<Type>MenuFunctionButton</Type>
								<Width>120</Width>
								<WidthMode>Manual</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>JmgRegistrationTouchLeave</MenuItemName>
							</AxFormControl>
						</Controls>
						<Caption>@SCM:JmgRegistrationTouch_Actions</Caption>
						<Style>DetailsFormDetails</Style>
					</AxFormControl>
				</Controls>
				<Style>Panorama</Style>
			</AxFormControl>
			<AxFormControl>
				<Name>JobScannerFocusTimer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Enabled>No</Enabled>
				<FormControlExtension>
					<Name>TimerControl</Name>
					<ExtensionComponents />
					<ExtensionProperties>
						<AxFormControlExtensionProperty>
							<Name>interval</Name>
							<Type>Int32</Type>
							<Value>1</Value>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>startOnFormCreation</Name>
							<Type>Enum</Type>
							<TypeName>NoYes</TypeName>
							<Value>No</Value>
						</AxFormControlExtensionProperty>
					</ExtensionProperties>
				</FormControlExtension>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonControl">
				<Name>FormDefaultActionButton</Name>
				<Type>Button</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Text>@SYS301992</Text>
			</AxFormControl>
			<AxFormControl>
				<Name>KeepAliveTimer</Name>
				<FormControlExtension>
					<Name>TimerControl</Name>
					<ExtensionComponents />
					<ExtensionProperties>
						<AxFormControlExtensionProperty>
							<Name>interval</Name>
							<Type>Int32</Type>
							<Value>60</Value>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>startOnFormCreation</Name>
							<Type>Enum</Type>
							<TypeName>NoYes</TypeName>
							<Value>Yes</Value>
						</AxFormControlExtensionProperty>
					</ExtensionProperties>
				</FormControlExtension>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>