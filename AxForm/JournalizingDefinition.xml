<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>JournalizingDefinition</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class JournalizingDefinition extends FormRun implements IDateEffectivenessPaneCaller
{
    QueryBuildRange                         queryBuildRange;
    JournalizingDefinitionVersionId         journalizingDefinitionVersionId;
    recId                                   accountStructureId;
    SysDateEffectiveDataManager             sysDateEffectiveDataManagerGlobal;
    DateEffectivenessPaneController         dateEffectivenessPaneController;

}
]]></Source>
			</Method>
			<Method>
				<Name>datePaneController_ApplyClicked</Name>
				<Source><![CDATA[
    private void datePaneController_ApplyClicked()
    {
        validDatesGroup.visible(dateEffectivenessPaneController.parmShowAllRecords());
        VersionStatusIcon.visible(dateEffectivenessPaneController.parmShowAllRecords());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDateEffectivenessController</Name>
				<Source><![CDATA[
    public DateEffectivenessPaneController getDateEffectivenessController()
    {
        return dateEffectivenessPaneController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        matchBudgetAccountSegmentedEntry.parmControlDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));

        sysDateEffectiveDataManagerGlobal = SysDateEffectiveDataManager::construct(SysDateEffectiveSetupType::JournalizingDefinition);
        dateEffectivenessPaneController = DateEffectivenessPaneController::constructWithForm(element, journalizingDefinition_ds);
        dateEffectivenessPaneController.onApplyClicked += eventhandler(this.datePaneController_ApplyClicked);
        element.updateDesign();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountStructure</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the account structure for matched or budget account segmented entry control.
    /// </summary>
    /// <param name = "_clearSegmentedEntryReference">
    /// If true, it clears the segmented entry control reference value.
    /// </param>
    public void setAccountStructure(boolean _clearSegmentedEntryReference)
    {
        recId accountStructureIdOrig;
        recId accountStructureIdLocal;

        if (journalizingDefinition.JournalizingDefinitionModuleValue == JournalizingDefinitionModuleId::Budget)
        {
            if (journalizingDefinitionMatch.LedgerDimension)
            {
                accountStructureIdOrig = DimensionAttributeValueCombination::find(journalizingDefinitionMatch.LedgerDimension).AccountStructure;
            }

            accountStructureIdLocal = journalizingDefinitionMatch.DimensionHierarchy;

            if (accountStructureIdLocal &&
                accountStructureIdLocal != accountStructureIdOrig)
            {
                // The selected Account structure exists, is in the ledger, has at least one
                // dimension attribute enabled for budget, and dimension values have not yet been entered on the line.
                matchBudgetAccountSegmentedEntry.setAccountStructure(accountStructureIdLocal, _clearSegmentedEntryReference);
                accountStructureId = accountStructureIdLocal;
                journalizingDefinitionMatch.LedgerDimension = 0;
            }
        }
        else
        {
            matchAccountSegmentedEntry.setAccountStructure(journalizingDefinitionMatch.DimensionHierarchy, _clearSegmentedEntryReference);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setGeneratedAccountStructure</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the account structure for generated account segmented entry control.
    /// </summary>
    /// <param name = "_clearSegmentedEntryReference">
    /// If true, it clears the segmented entry control reference value.
    /// </param>
    public void setGeneratedAccountStructure(boolean _clearSegmentedEntryReference)
    {
        GeneratedAccountSegmentedEntry.setAccountStructure(journalizingDefinitionMatchDetail.DimensionHierarchy, _clearSegmentedEntryReference);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign()
    {
        boolean                             existActiveVersion;
        SysDateEffectiveDataManager         sysDateEffectiveDataManager = SysDateEffectiveDataManager::construct(SysDateEffectiveSetupType::JournalizingDefinition);

        existActiveVersion =                sysDateEffectiveDataManager.existActiveVersion(journalizingDefinition.RecId);

        if (JournalizingDefinitionRelatedDefinition::existParentJournalizingDefinitions(journalizingDefinition.RecId))
        {
            linkedDefinitions.visible(false);
            linkedByDefinitions.visible(true);
        }
        else
        {
            linkedByDefinitions.visible(false);
            linkedDefinitions.visible(true);
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(PayrollAdministration))
            && journalizingDefinition.JournalizingDefinitionModuleValue == JournalizingDefinitionModuleId::Payroll)
        {
            PrimaryGeneratedEntry.visible(true);
        }
        else
        {
            PrimaryGeneratedEntry.visible(false);
        }

        activate.enabled(!existActiveVersion && journalizingDefinition.RecId && sysDateEffectiveDataManager.canActivate(journalizingDefinitionVersion));
        createVersionDropDialogButton.enabled(journalizingDefinition.RecId);
        journalizingDefinitionTrans.enabled(journalizingDefinition.RecId);
        testButton.enabled(journalizingDefinition.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMainAccountInStructure</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the main account belongs to the selected account structure.
    /// </summary>
    /// <param name="_segmentedEntryControl">
    /// The segmented entry control.
    /// </param>
    /// <param name="_dimensionControlSegment">
    /// The segment that was changed.
    /// </param>
    public boolean validateMainAccountInStructure(
        SegmentedEntryControl _segmentedEntryControl,
        DimensionControlSegment  _dimensionControlSegment)
    {
        boolean validAccount = true;
        recId   mainAccountId;

        changecompany(_segmentedEntryControl.parmDataAreaId())
        {
            if (_dimensionControlSegment.parmDimensionAttribute().RecId == DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount))
            {
                mainAccountId = _dimensionControlSegment.parmDimensionAttributeValue().EntityInstance;

                if (mainAccountId &&
                    _segmentedEntryControl.getAccountStructure() != DimensionHierarchy::getAccountStructure(mainAccountId,
                        Ledger::primaryLedger(CompanyInfo::current(_segmentedEntryControl.parmDataAreaId()))))
                {
                    validAccount = false;
                }
            }
        }

        return validAccount;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>JournalizingDefinition</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();
            dateEffectivenessPaneController.updateVersionControls();

            element.updateDesign();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            Args    args;
            FormRun formRun;
            NoYesId modifyExistingRecord;
            NoYesId createNewRecord;
            NoYesId activateExistingRecord;
            boolean ret = true;
            SysDateEffectiveDataManager sysDateEffectiveDataManager;
            JournalizingDefinition  localJournalizingDefinition;
            ISysDateEffectiveFutureVersionOptions   formSysDateEffectiveFutureVersionOptions;
            ISysDateEffectivePastVersionOptions     formSysDateEffectivePastVersionOptions;

            ret = super();

            if (!journalizingDefinition)
            {
                localJournalizingDefinition = JournalizingDefinition::find(journalizingDefinition.JournalizingDefinitionCode);

                sysDateEffectiveDataManager = SysDateEffectiveDataManager::construct(SysDateEffectiveSetupType::JournalizingDefinition);

                if (localJournalizingDefinition.RecId)
                {
                    if (!sysDateEffectiveDataManager.existActiveVersion(localJournalizingDefinition.RecId) &&
                         sysDateEffectiveDataManager.existFutureVersion(localJournalizingDefinition.RecId))
                    {
                        args = new Args(formStr(SysDateEffectiveFutureVersionOptions));
                        args.caller(element);
                        args.parm(Global::date2StrUsr(sysDateEffectiveDataManager.getEffectiveDateOfNextFutureVersion(localJournalizingDefinition.RecId), 1));
                        formRun = classfactory.formRunClass(args);
                        formRun.init();
                        formRun.run();
                        formRun.wait();

                        if (formRun.closedOk())
                        {
                            formSysDateEffectiveFutureVersionOptions = formRun as ISysDateEffectiveFutureVersionOptions;
                            if (formHasMethod(formSysDateEffectiveFutureVersionOptions, 'parmModifyExistingRecord'))
                            {
                                modifyExistingRecord = formSysDateEffectiveFutureVersionOptions.parmModifyExistingRecord();
                                if (modifyExistingRecord == NoYes::Yes)
                                {
                                    SysDateEffectiveDataManagerBase::activateVersion(sysDateEffectiveDataManager.findFutureVersionByParentId(localJournalizingDefinition.RecId, true));
                                    journalizingDefinition_ds.delete();
                                    journalizingDefinition_ds.executeQuery();
                                }
                            }
                            if (formHasMethod(formSysDateEffectiveFutureVersionOptions, 'parmCreateNewRecord'))
                            {
                                createNewRecord = formSysDateEffectiveFutureVersionOptions.parmCreateNewRecord();
                                if (createNewRecord == NoYes::Yes)
                                {
                                    SysDateEffectiveDataManagerBase::createVersionBeforeFutureVersion(
                                    sysDateEffectiveDataManager.findFutureVersionByParentId(localJournalizingDefinition.RecId, true),
                                                                                  sysDateEffectiveDataManager.getEffectiveDateOfNextFutureVersion(localJournalizingDefinition.RecId) - 1);
                                    journalizingDefinition_ds.delete();
                                    journalizingDefinition_ds.executeQuery();
                                }
                            }
                        }
                        ret = false;
                    }
                    else if ( !sysDateEffectiveDataManager.existActiveVersion(localJournalizingDefinition.RecId) &&
                               sysDateEffectiveDataManager.existPastVersion(localJournalizingDefinition.RecId))
                    {
                        args = new Args(formStr(SysDateEffectivePastVersionOptions));
                        args.caller(element);
                        args.parm(Global::date2StrUsr(sysDateEffectiveDataManager.getExpirationDateOfLastExpiredVersion(localJournalizingDefinition.RecId), 1));
                        formRun = classfactory.formRunClass(args);
                        formRun.init();
                        formRun.run();
                        formRun.wait();
                        if (formRun.closedOk())
                        {
                            formSysDateEffectivePastVersionOptions = formRun as ISysDateEffectivePastVersionOptions;

                            if (formHasMethod(formSysDateEffectivePastVersionOptions, 'parmActivateExistingRecord'))
                            {
                                activateExistingRecord = formSysDateEffectivePastVersionOptions.parmActivateExistingRecord();
                                if (activateExistingRecord == NoYes::Yes)
                                {
                                    SysDateEffectiveDataManagerBase::activateVersion(
                                        sysDateEffectiveDataManager.findPastVersionByParentId(localJournalizingDefinition.RecId, true));

                                    journalizingDefinition_ds.delete();
                                    journalizingDefinition_ds.executeQuery();
                                }
                            }
                            if (formHasMethod(formSysDateEffectivePastVersionOptions, 'parmCreateNewRecord'))
                            {
                                createNewRecord = formSysDateEffectivePastVersionOptions.parmCreateNewRecord();
                                if (createNewRecord == NoYes::Yes)
                                {
                                    sysDateEffectiveDataManager.createVersionAfterPastVersion(
                                        sysDateEffectiveDataManager.findPastVersionByParentId(localJournalizingDefinition.RecId, true),
                                            sysDateEffectiveDataManager.getExpirationDateOfLastExpiredVersion(localJournalizingDefinition.RecId) + 1);

                                    journalizingDefinition_ds.delete();
                                    journalizingDefinition_ds.executeQuery();
                                }
                            }
                        }
                        ret = false;
                    }
                }
            }

            ret = super() && ret;

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            boolean forBudget;
            boolean existFutureVersion;
            boolean existActiveVersion;
            boolean existTransactionPostingDefinition;
            SysDateEffectiveDataManager sysDateEffectiveDataManager = SysDateEffectiveDataManager::construct(SysDateEffectiveSetupType::JournalizingDefinition);

            ret = super();
            existFutureVersion =                sysDateEffectiveDataManager.existFutureVersion(journalizingDefinition.RecId);
            existActiveVersion =                sysDateEffectiveDataManager.existActiveVersion(journalizingDefinition.RecId);
            existTransactionPostingDefinition = journalizingDefinition.existTransactionJournalizingDefinition(journalizingdefinition.JournalizingDefinitionModuleValue);

            journalizingDefinitionRelatedParent_ds.updateRelatedJournalizingDefinitionQuery();
            element.updateDesign();

            forBudget = journalizingDefinition.JournalizingDefinitionModuleValue == JournalizingDefinitionModuleId::Budget;

            if (matchAccountSegmentedEntry.visible() && forBudget)
            {
                matchAccountSegmentedEntry.visible(false);
                general1_JournalizingDefinitionPriority.visible(false);
                matchBudgetAccountSegmentedEntry.visible(true);
                general1_JournalizingDefinitionPriority.visible(true);
            }
            else if (matchBudgetAccountSegmentedEntry.visible() && !forBudget)
            {
                matchBudgetAccountSegmentedEntry.visible(false);
                general1_JournalizingDefinitionPriority.visible(false);
                matchAccountSegmentedEntry.visible(true);
                general1_JournalizingDefinitionPriority.visible(true);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        /// <summary>
        /// Clears the datasource for the creation of new interest code.
        /// </summary>
        /// <param name="_append">
        /// A boolean value that determines whether to append the record or not.
        /// </param>
        public void create(boolean _append = false)
        {
            super(_append);

            generalIdentification_JournalizingDefinitionCode.setFocus();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>JournalizingDefinitionRelatedParent</Name>
				<Methods>
					<Method>
						<Name>updateRelatedJournalizingDefinitionQuery</Name>
						<Source><![CDATA[
        public void updateRelatedJournalizingDefinitionQuery()
        {
            this.query(JournalizingDefinitionRelatedDefinition::selectParentJournalizingDefinitions(journalizingDefinition.RecId));
            this.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>JournalizingDefinitionRelatedDefinition</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            journalizingDefinitionRelatedDefinition.initFromJournalizingDefinition(journalizingDefinitionVersion);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>JournalizingDefinitionMatch</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            element.setAccountStructure(true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            Query query;
            QueryBuildDataSource qbds;

            super();
            query = this.query();
            qbds = this.query().dataSourceName(tableId2name(tableNum(JournalizingDefinitionMatch)));
            qbds.addOrderByField(fieldNum(JournalizingDefinitionMatch, LedgerDimension), SortOrder::Descending);
            qbds.addOrderByField(fieldNum(JournalizingDefinitionMatch, JournalizingDefinitionPriority));
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            if (ret)
            {
                element.updateDesign();
                element.setAccountStructure(false);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>DimensionHierarchy</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.setAccountStructure(true);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                DimensionHierarchy common;

                if (journalizingDefinition.JournalizingDefinitionModuleValue == JournalizingDefinitionModuleId::Budget)
                {
                    common = BudgetPrimaryLedgerDimensionAttribute::lookupAccountStructure(_formReferenceControl , journalizingDefinitionMatch.DimensionHierarchy);
                }
                else
                {
                    common = JournalizingDefinitionMatch::lookupAccountStructure(_formReferenceControl);
                }

                return common;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                journalizingDefinitionMatch_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>JournalizingDefinitionMatchDetail</Name>
				<Methods>
					<Method>
						<Name>deleting</Name>
						<Source><![CDATA[
        public void deleting()
        {
            PayrollJournalizingDefMatchPrimaryEntry journalizingDefMatchPrimaryEntry;

            super();

            if (isConfigurationkeyEnabled(configurationKeyNum(PayrollAdministration))
                && journalizingDefinition.JournalizingDefinitionModuleValue == JournalizingDefinitionModuleId::Payroll)
            {
                journalizingDefMatchPrimaryEntry = PayrollJournalizingDefMatchPrimaryEntry::findByJournalizingDefinitionMatch(JournalizingDefinitionMatchDetail.JournalizingDefinitionMatch);

                // The record being deleted is currently marked as the primary entry
                if (journalizingDefMatchPrimaryEntry.RecId != 0
                    && journalizingDefMatchPrimaryEntry.JournalizingDefinitionMatchDetail == JournalizingDefinitionMatchDetail.RecId)
                {
                    ttsBegin;
                    journalizingDefMatchPrimaryEntry.selectForUpdate(true);
                    journalizingDefMatchPrimaryEntry.delete();
                    ttsCommit;
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            PayrollJournalizingDefMatchPrimaryEntry journalizingDefMatchPrimaryEntry;
            JournalizingDefinitionMatchDetail localJournalizingDefinitionMatchDetail;
            int64 numberOfGeneratedEntries;
            boolean ret;

            ret = super();

            if (ret && isConfigurationkeyEnabled(configurationKeyNum(PayrollAdministration))
                && journalizingDefinition.JournalizingDefinitionModuleValue == JournalizingDefinitionModuleId::Payroll)
            {
                journalizingDefMatchPrimaryEntry = PayrollJournalizingDefMatchPrimaryEntry::findByJournalizingDefinitionMatch(JournalizingDefinitionMatchDetail.JournalizingDefinitionMatch);

                // The record being deleted is currently marked as the primary entry
                if (journalizingDefMatchPrimaryEntry.RecId != 0
                    && journalizingDefMatchPrimaryEntry.JournalizingDefinitionMatchDetail == JournalizingDefinitionMatchDetail.RecId)
                {
                    select count(RecId) from localJournalizingDefinitionMatchDetail
                        where localJournalizingDefinitionMatchDetail.JournalizingDefinitionMatch == JournalizingDefinitionMatchDetail.JournalizingDefinitionMatch;
                    numberOfGeneratedEntries = localJournalizingDefinitionMatchDetail.RecId;

                    // Only prevent the deletion if there are more than one generated entries
                    if (numberOfGeneratedEntries > 1)
                    {
                        error("@GLS94317");
                        ret = false;
                    }
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>written</Name>
						<Source><![CDATA[
        public void written()
        {
            PayrollJournalizingDefMatchPrimaryEntry journalizingDefMatchPrimaryEntry;
            super();

            if (isConfigurationkeyEnabled(configurationKeyNum(PayrollAdministration))
                && journalizingDefinition.JournalizingDefinitionModuleValue == JournalizingDefinitionModuleId::Payroll)
            {
                journalizingDefMatchPrimaryEntry = PayrollJournalizingDefMatchPrimaryEntry::findByJournalizingDefinitionMatch(journalizingDefinitionMatchDetail.JournalizingDefinitionMatch);

                // No generated entry has been marked as primary for the given match criteria
                if (journalizingDefMatchPrimaryEntry.RecId == 0)
                {
                    journalizingDefMatchPrimaryEntry.clear();
                    journalizingDefMatchPrimaryEntry.JournalizingDefinitionMatch = journalizingDefinitionMatchDetail.JournalizingDefinitionMatch;
                    journalizingDefMatchPrimaryEntry.JournalizingDefinitionMatchDetail = journalizingDefinitionMatchDetail.RecId;
                    journalizingDefMatchPrimaryEntry.insert();
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>editPrimaryEntry</Name>
						<Source><![CDATA[
        public edit PayrollIsPrimaryEntry editPrimaryEntry(
        boolean                             _set,
        JournalizingDefinitionMatchDetail   _journalizingDefinitionMatchDetail,
        PayrollIsPrimaryEntry               _primaryEntry
        )
        {
            PayrollJournalizingDefMatchPrimaryEntry journalizingDefMatchPrimaryEntry;
            PayrollIsPrimaryEntry primaryEntry = NoYes::No;

            select firstOnly journalizingDefMatchPrimaryEntry
                where journalizingDefMatchPrimaryEntry.JournalizingDefinitionMatch == journalizingDefinitionMatch.RecId;

            if (_set)
            {
                if (_primaryEntry == NoYes::No)
                {
                    checkFailed("@GLS94301");
                    primaryEntry = NoYes::Yes;
                }
                else
                {
                    primaryEntry = _primaryEntry;

                    // The generated entry line must be saved first
                    if (_journalizingDefinitionMatchDetail.RecId == 0)
                    {
                        checkFailed("@GLS94312");
                        primaryEntry = NoYes::No;
                    }
                    else
                    {
                        // The match criteria already has a generated entry marked as primary
                        if (journalizingDefMatchPrimaryEntry.RecId != 0)
                        {
                            // The primary generated entry has changed, so update the record
                            if (journalizingDefMatchPrimaryEntry.JournalizingDefinitionMatchDetail != _journalizingDefinitionMatchDetail.RecId)
                            {
                                ttsBegin;
                                journalizingDefMatchPrimaryEntry.selectForUpdate(true);
                                journalizingDefMatchPrimaryEntry.JournalizingDefinitionMatchDetail = _journalizingDefinitionMatchDetail.RecId;
                                journalizingDefMatchPrimaryEntry.update();
                                ttsCommit;
                                journalizingDefinitionMatchDetail_ds.research(true);
                            }
                        }
                        else
                        {
                            // The match criteria does not have a generated entry marked as primary
                            journalizingDefMatchPrimaryEntry.JournalizingDefinitionMatch = journalizingDefinitionMatchDetail.JournalizingDefinitionMatch;
                            journalizingDefMatchPrimaryEntry.JournalizingDefinitionMatchDetail = journalizingDefinitionMatchDetail.RecId;
                            journalizingDefMatchPrimaryEntry.insert();
                        }
                    }
                }
            }
            else
            {
                if (journalizingDefMatchPrimaryEntry.JournalizingDefinitionMatchDetail == _journalizingDefinitionMatchDetail.RecId)
                {
                    primaryEntry = NoYes::Yes;
                }
            }

            return primaryEntry;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            journalizingDefinitionMatchDetail.JournalizingDefinitionSign = JournalizingDefinitionSignId::Balancing;
            element.setGeneratedAccountStructure(true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            if (ret)
            {
                element.setGeneratedAccountStructure(false);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>DimensionHierarchy</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.setGeneratedAccountStructure(true);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                DimensionHierarchy common;
                common = JournalizingDefinitionMatch::lookupAccountStructure(_formReferenceControl);
                return common;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>JournalizingDefinitionVersion</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            JournalizingDefinitionVersion.ValidFrom = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayVersionStatus</Name>
						<Source><![CDATA[
        display container displayVersionStatus(JournalizingDefinitionVersion _journalizingDefinitionVersion)
        {
            ImageReference imageReference;

            str helpText = SysDateEffectiveDataManagerBase::getVersionHelpText(
                _journalizingDefinitionVersion.ValidFrom,
                _journalizingDefinitionVersion.ValidTo);

            versionStatusIcon.helpText(helpText);

            imageReference = ImageReference::constructForSymbol(sysDateEffectiveDataManagerGlobal.getVersionIconSymbolByDates(
                _journalizingDefinitionVersion.ValidFrom,
                _journalizingDefinitionVersion.ValidTo));

            return imageReference.pack();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CreateVersionDropDialogButton</Name>
				<Type>DropDialogButton</Type>
				<Methods>
					<Method>
						<Name>dialogClosed</Name>
						<Source><![CDATA[
        public void dialogClosed(xFormRun _formRun)
        {
            validFromDate                   effectiveDate;
            validToDate                     expirationDate;
            JournalizingDefinitionVersionId oldJournalizingDefinitionVersionId;
            JournalizingDefinitionVersion   localJournalizationdefinitionversion;
            SysDateEffectiveDataManager     sysDateEffectiveDataManager;
            JournalizingDefinition          oldJournalizingDefinition;
            ISysDateEffectiveCreateVersion  formSysDateEffectiveCreateVersion;

            super(_formRun);

            formSysDateEffectiveCreateVersion = _formRun as ISysDateEffectiveCreateVersion;

            if (_formRun.closedOk())
            {
                if (formHasMethod(formSysDateEffectiveCreateVersion, 'getEffectiveDate'))
                {
                    effectiveDate = formSysDateEffectiveCreateVersion.getEffectiveDate();
                }

                if (formHasMethod(formSysDateEffectiveCreateVersion, 'getExpirationDate'))
                {
                    expirationDate = formSysDateEffectiveCreateVersion.getExpirationDate();
                }

                oldJournalizingDefinition = journalizingDefinition.data();
                oldJournalizingDefinitionVersionId =  journalizingDefinitionVersion.RecId;

                ttsbegin;
                localJournalizationdefinitionversion.ValidFrom    = effectiveDate;
                localJournalizationdefinitionversion.ValidTo      = expirationDate;
                localJournalizationdefinitionversion.JournalizingDefinition = journalizingDefinition.RecId;
                localJournalizationdefinitionversion.insert();

                sysDateEffectiveDataManager = SysDateEffectiveDataManager::construct(SysDateEffectiveSetupType::JournalizingDefinition);
                sysDateEffectiveDataManager.copy(oldJournalizingDefinitionVersionId, localJournalizationdefinitionversion.RecId);
                ttscommit;

                element.args().lookupRecord(oldJournalizingDefinition);
                journalizingDefinition_ds.research(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeleteJournalizingDefinition</Name>
				<Type>DropDialogButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (journalizingDefinition && sysDateEffectiveDataManagerGlobal.isOnlyVersion(journalizingDefinition.RecId))
            {
                if (journalizingDefinition.validateDelete())
                {
                    super();
                }
            }
            else
            {
                if (journalizingDefinition)
                {
                    super();
                }
                else
                {
                    journalizingDefinition_ds.delete();
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>dialogClosed</Name>
						<Source><![CDATA[
        public void dialogClosed(xFormRun _formRun)
        {
            super(_formRun);

            if (_formRun.closedOk())
            {
                journalizingDefinition_ds.executeQuery();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Activate</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            DialogButton dlgButton;

            dlgButton = Box::okCancel("@SYS302501", DialogButton::Ok);

            if (dlgButton == DialogButton::Ok)
            {
                SysDateEffectiveDataManagerBase::activateVersion(journalizingDefinitionVersion);
                journalizingDefinitionVersion_ds.reread();
                journalizingDefinitionVersion_ds.refresh();
                journalizingDefinition_ds.refresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TestButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;
            MenuFunction menuFunction;

            args = new Args();
            args.record(journalizingDefinitionVersion);
            menuFunction = new MenuFunction(menuitemActionStr(JournalizingDefinitionTestWizard), MenuItemType::Action);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalizingDefinition_JournalizingDefinitionModuleValue</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            DialogButton    selectedButton;
            boolean ret;

            ret = super();

            if ( journalizingDefinition.orig() &&
                 JournalizingDefinition::existRelatedAccountsData(journalizingDefinition.RecId) &&
                ((journalizingDefinition.orig().JournalizingDefinitionModuleValue == JournalizingDefinitionModuleId::Budget  &&
                 journalizingDefinition.JournalizingDefinitionModuleValue != JournalizingDefinitionModuleId::Budget) ||
                (journalizingDefinition.orig().JournalizingDefinitionModuleValue != JournalizingDefinitionModuleId::Budget  &&
                 journalizingDefinition.JournalizingDefinitionModuleValue == JournalizingDefinitionModuleId::Budget)))
            {
                selectedButton = Box::yesNo("@SYS309719", DialogButton::Yes);
                if (selectedButton == DialogButton::Yes)
                {
                    journalizingDefinition.deleteRelatedData();
                    journalizingDefinitionMatch_ds.research();
                    element.updateDesign();
                }
                else
                {
                    journalizingDefinition.JournalizingDefinitionModuleValue = journalizingDefinition.orig().JournalizingDefinitionModuleValue;
                    this.selection(enum2int(journalizingDefinition.orig().JournalizingDefinitionModuleValue));
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValidDates_ValidFrom</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            // Only allow editing of both dates on new records
            if (JournalizingDefinitionVersion &&
                JournalizingDefinitionVersion.ValidTo != JournalizingDefinitionVersion.orig().ValidTo)
            {
                error("@GLS222753");
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValidDates_ValidTo</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret && journalizingDefinitionVersion.ValidTo == dateNull())
            {
                journalizingDefinitionVersion.ValidTo = maxDate();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            // Only allow editing of both dates on new records
            if (JournalizingDefinitionVersion &&
                JournalizingDefinitionVersion.ValidFrom != JournalizingDefinitionVersion.orig().ValidFrom)
            {
                error("@GLS222753");
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CommandButtonRemove</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            matchAccountsGrid.setFocus();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MatchAccountSegmentedEntry</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// Event handler for the segment changed event.
        /// </summary>
        /// <param name = "_segment">
        /// The segment that has been changed.
        /// </param>
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            if (!element.validateMainAccountInStructure(MatchAccountSegmentedEntry, _segment))
            {
                // Clear the just entered value from the SEC
                matchAccountSegmentedEntry.clearReference();
                warning ("@SYS343471");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MatchBudgetAccountSegmentedEntry</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// Event handler for the segment changed event.
        /// </summary>
        /// <param name = "_segment">
        /// The segment that has been changed.
        /// </param>
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            if (!element.validateMainAccountInStructure(MatchBudgetAccountSegmentedEntry, _segment))
            {
                // Clear the just entered value from the SEC
                matchBudgetAccountSegmentedEntry.clearReference();
                warning ("@SYS343471");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GeneratedAccountCommandButtonRemove</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            generatedAccountsGrid.setFocus();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GeneratedAccountSegmentedEntry</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// Event handler for the segment changed event.
        /// </summary>
        /// <param name = "_segment">The segment that has been changed.</param>
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            if (!element.validateMainAccountInStructure(GeneratedAccountSegmentedEntry, _segment))
            {
                // Clear the just entered value from the SEC
                GeneratedAccountSegmentedEntry.clearReference();
                warning ("@SYS343471");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>editDefinitionRelatedCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            journalizingDefinitionRelatedDefinition.lookupRelatedJournalizingDefinitions(this,
                                                                    journalizingDefinition.RecId,
                                                                    journalizingDefinition.JournalizingDefinitionModuleValue);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            ret = JournalizingDefinition::checkExistJournalizingDefinitionToLink(
                                                            journalizingDefinition.RecId,
                                                            journalizingDefinition.JournalizingDefinitionModuleValue);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSourceChangeGroupMode>ImplicitInnerOuter</DataSourceChangeGroupMode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinition</Name>
			<Table>JournalizingDefinition</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinitionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinitionDesc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinitionModuleValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinitionRelatedParent</Name>
			<Table>JournalizingDefinitionRelatedDefinition</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinitionRelated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentJournalizingDefinitionVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>JournalizingDefinition</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinitionRelatedDefinition</Name>
			<Table>JournalizingDefinitionRelatedDefinition</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinitionRelated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentJournalizingDefinitionVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>JournalizingDefinitionVersion</JoinSource>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinitionMatch</Name>
			<Table>JournalizingDefinitionMatch</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinitionPriority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinitionVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>JournalizingDefinitionVersion</JoinSource>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinitionMatchDetail</Name>
			<Table>JournalizingDefinitionMatchDetail</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinitionMatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinitionSign</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>JournalizingDefinitionMatch</JoinSource>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinitionVersion</Name>
			<Table>JournalizingDefinitionVersion</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinitionLongDesc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>JournalizingDefinition</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<ValidTimeStateUpdate>Correction</ValidTimeStateUpdate>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS128262</Caption>
		<Height xmlns="">600</Height>
		<Pattern xmlns="">SimpleListDetails-Grid</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<TitleDataSource xmlns="">JournalizingDefinition</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>MainActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<Type>ActionPaneTab</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>NewVersionDeleteButtonGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>CreateVersionDropDialogButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>JournalizingDefinationCreateVersion</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>DeleteJournalizingDefinition</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataSource>JournalizingDefinitionVersion</DataSource>
										<MenuItemName>JournalizingDefinitionVersionDelete</MenuItemName>
										<Primary>Yes</Primary>
										<SaveRecord>No</SaveRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>Activate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>MenuFunctionButton</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Big>Yes</Big>
										<MenuItemName>JournalizingActivation</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS16131</Caption>
								<DataSource>JournalizingDefinition</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>JournalizingDefinitionButtonGroup</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JournalizingDefinitionTrans</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>JournalizingDefinitionTrans</MenuItemName>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS5252</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>TestPostingDefinitionButtonGroup</Name>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>ButtonGroup</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TestButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>JournalizingDefinitionTestWizard</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<Text>@SYS128173</Text>
									</AxFormControl>
								</Controls>
								<Caption>@SYS31561</Caption>
							</AxFormControl>
						</Controls>
						<Caption>@SYS128173</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>JournalizingDefinition</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>300</Width>
				<WidthMode>Manual</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>MainGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>Overview1_JournalizingDefinitionCode</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>MainGrid</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormImageControl">
								<Name>VersionStatusIcon</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Image</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<Width>16</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayVersionStatus</DataMethod>
								<DataSource>JournalizingDefinitionVersion</DataSource>
								<Label>@SYS106702</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Overview1</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Overview1_JournalizingDefinitionCode</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalizingDefinitionCode</DataField>
										<DataSource>JournalizingDefinition</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Overview1_JournalizingDefinitionDesc</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalizingDefinitionDesc</DataField>
										<DataSource>JournalizingDefinition</DataSource>
									</AxFormControl>
								</Controls>
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataGroup>Overview</DataGroup>
								<DataSource>JournalizingDefinition</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ValidDatesGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ValidDatesGroup_ValidFrom</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ValidFrom</DataField>
										<DataSource>JournalizingDefinitionVersion</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ValidDatesGroup_ValidTo</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ValidTo</DataField>
										<DataSource>JournalizingDefinitionVersion</DataSource>
									</AxFormControl>
								</Controls>
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataGroup>ValidDates</DataGroup>
								<DataSource>JournalizingDefinitionVersion</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>JournalizingDefinition</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>Tabular</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CtrlSplitHorizontal</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<Style>SplitterVerticalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>IdentficationFieldsGroup</Name>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GeneralIdentificationGroup</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GeneralIdentification_JournalizingDefinitionCode</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>JournalizingDefinitionCode</DataField>
								<DataSource>JournalizingDefinition</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GeneralDescription_JournalizingDefinitionDesc</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>JournalizingDefinitionDesc</DataField>
								<DataSource>JournalizingDefinition</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>JournalizingDefinition_JournalizingDefinitionModuleValue</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>JournalizingDefinitionModuleValue</DataField>
								<DataSource>JournalizingDefinition</DataSource>
								<Items />
							</AxFormControl>
						</Controls>
						<DataSource>JournalizingDefinition</DataSource>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ValidDates</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ValidDates_ValidFrom</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ValidFrom</DataField>
								<DataSource>JournalizingDefinitionVersion</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ValidDates_ValidTo</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ValidTo</DataField>
								<DataSource>JournalizingDefinitionVersion</DataSource>
							</AxFormControl>
						</Controls>
						<DataGroup>ValidDates</DataGroup>
						<DataSource>JournalizingDefinitionVersion</DataSource>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Entries</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MatchAccountsGroup</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinition_MatchAccountsGroup</HelpText>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneControl">
										<Name>MatchAccountActionPane</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ActionPane</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneTabControl">
												<Name>MatchAccountActionPaneTab</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ActionPaneTab</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>MatchAccountButtonGroup</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>CommandButtonAdd</Name>
																<ElementPosition>1073741823</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>New</Command>
																<NormalImage>New</NormalImage>
																<Text>@SYS2318</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>CommandButtonRemove</Name>
																<ElementPosition>1610612734</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>DeleteRecord</Command>
																<NormalImage>Delete</NormalImage>
																<SaveRecord>No</SaveRecord>
																<Text>@SYS26394</Text>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
														<DataSource>JournalizingDefinitionMatch</DataSource>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<Style>Strip</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>MatchAccountsGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1476395006</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Grid</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>AccountStructureReferenceGroup</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinition_AccountStructureReferenceGroup</HelpText>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>AccountStructureReferenceGroup_Name</Name>
														<DataRelationPath>DimensionHierarchy</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<DataSource>JournalizingDefinitionMatch</DataSource>
												<ReferenceField>DimensionHierarchy</ReferenceField>
												<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormSegmentedEntryControl">
												<Name>MatchAccountSegmentedEntry</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1342177278</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinition_MatchAccountSegmentedEntry</HelpText>
												<Type>SegmentedEntry</Type>
												<Width>300</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension>
													<Name>SegmentedEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>String</Type>
															<Value>LedgerDimensionAccountAliasController</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmAccountTypeEnumName</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIsDefaultAccount</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValidateBlockedForManualEntry</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmLockMainAccountSegment</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmPostingType</Name>
															<Type>Enum</Type>
															<TypeName>LedgerPostingType</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeTotalAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeFinancialAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<DataSource>JournalizingDefinitionMatch</DataSource>
												<ReferenceField>LedgerDimension</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormSegmentedEntryControl">
												<Name>MatchBudgetAccountSegmentedEntry</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinition_MatchBudgetAccountSegmentedEntry</HelpText>
												<Type>SegmentedEntry</Type>
												<Visible>No</Visible>
												<Width>300</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension>
													<Name>SegmentedEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>String</Type>
															<Value>BudgetLedgerDimensionController</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmAccountTypeEnumName</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIsDefaultAccount</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValidateBlockedForManualEntry</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmLockMainAccountSegment</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmPostingType</Name>
															<Type>Enum</Type>
															<TypeName>LedgerPostingType</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeTotalAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeFinancialAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<DataSource>JournalizingDefinitionMatch</DataSource>
												<ReferenceField>LedgerDimension</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>General1</Name>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormIntegerControl">
														<Name>General1_JournalizingDefinitionPriority</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinition_General1_JournalizingDefinitionPriority</HelpText>
														<Type>Integer</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>JournalizingDefinitionPriority</DataField>
														<DataSource>JournalizingDefinitionMatch</DataSource>
													</AxFormControl>
												</Controls>
												<BackgroundColor>WindowBackground</BackgroundColor>
												<DataGroup>General</DataGroup>
												<DataSource>JournalizingDefinitionMatch</DataSource>
											</AxFormControl>
										</Controls>
										<DataSource>JournalizingDefinitionMatch</DataSource>
										<VisibleRows>5</VisibleRows>
										<VisibleRowsMode>Fixed</VisibleRowsMode>
									</AxFormControl>
								</Controls>
								<Caption>@SYS132153</Caption>
								<DataSource>JournalizingDefinitionMatch</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GeneratedAccountsGroup</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinition_GeneratedAccountsGroup</HelpText>
								<Pattern>ToolbarList</Pattern>
								<PatternVersion>1.2</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneControl">
										<Name>GeneratedAccountActionPane</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ActionPane</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneTabControl">
												<Name>GeneratedAccountActionPaneTab</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ActionPaneTab</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>GeneratedAccountButtonGroup</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>GeneratedAccountCommandButtonAdd</Name>
																<ElementPosition>1073741823</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>New</Command>
																<NormalImage>New</NormalImage>
																<Text>@SYS2318</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>GeneratedAccountCommandButtonRemove</Name>
																<ElementPosition>1610612734</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>DeleteRecord</Command>
																<NormalImage>Delete</NormalImage>
																<SaveRecord>No</SaveRecord>
																<Text>@SYS26394</Text>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
														<DataSource>JournalizingDefinitionMatchDetail</DataSource>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>JournalizingDefinitionMatchDetail</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>JournalizingDefinitionMatchDetail</DataSource>
										<Style>Strip</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>GeneratedAccountsGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1476395006</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Grid</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>JournalizingDefinitionMatchDetail_DimensionHierarchy</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinition_JournalizingDefinitionMatchDetail_DimensionHierarchy</HelpText>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>JournalizingDefinitionMatchDetail_DimensionHierarchy_Name</Name>
														<DataRelationPath>DimensionHierarchy</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<DataSource>JournalizingDefinitionMatchDetail</DataSource>
												<ReferenceField>DimensionHierarchy</ReferenceField>
												<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormSegmentedEntryControl">
												<Name>GeneratedAccountSegmentedEntry</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinition_GeneratedAccountSegmentedEntry</HelpText>
												<Type>SegmentedEntry</Type>
												<Width>300</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension>
													<Name>SegmentedEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>String</Type>
															<Value>LedgerDimensionAccountAliasController</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmAccountTypeEnumName</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIsDefaultAccount</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValidateBlockedForManualEntry</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmLockMainAccountSegment</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmPostingType</Name>
															<Type>Enum</Type>
															<TypeName>LedgerPostingType</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeTotalAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeFinancialAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<DataSource>JournalizingDefinitionMatchDetail</DataSource>
												<ReferenceField>LedgerDimension</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>General2_JournalizingDefinitionSign</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinition_General2_JournalizingDefinitionSign</HelpText>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>100</Width>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>JournalizingDefinitionSign</DataField>
												<DataSource>JournalizingDefinitionMatchDetail</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>PrimaryGeneratedEntry</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ConfigurationKey>PayrollAdministration</ConfigurationKey>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<BackgroundColor>WindowBackground</BackgroundColor>
												<DataMethod>editPrimaryEntry</DataMethod>
												<DataSource>JournalizingDefinitionMatchDetail</DataSource>
											</AxFormControl>
										</Controls>
										<DataSource>JournalizingDefinitionMatchDetail</DataSource>
										<VisibleRows>5</VisibleRows>
										<VisibleRowsMode>Fixed</VisibleRowsMode>
									</AxFormControl>
								</Controls>
								<Caption>@SYS132156</Caption>
								<DataSource>JournalizingDefinitionMatchDetail</DataSource>
							</AxFormControl>
						</Controls>
						<BackgroundColor>WindowBackground</BackgroundColor>
						<Caption>@SYS128452</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>LinkedDefinitions</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1386916521</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>LinkedDefinitionActionPane</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>LinkedDefinitionActionPaneTab</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>LinkedDefinitionButtonGroup</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>LinkedDefinitionCommandButtonAdd</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Text>@SYS2318</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>LinkedDefinitionCommandButtonRemove</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<Text>@SYS26394</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>JournalizingDefinitionRelatedDefinition</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>JournalizingDefinitionRelatedDefinition</DataSource>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>JournalizingDefinitionRelatedDefinition</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>RelatedDefinitionGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1476395006</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editDefinitionRelatedCode</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editJournalizingDefinitionRelatedCode</DataMethod>
										<DataSource>JournalizingDefinitionRelatedDefinition</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>displayRelatedDefinitionDesc</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayRelatedJournalizingDefinitionDesc</DataMethod>
										<DataSource>JournalizingDefinitionRelatedDefinition</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>JournalizingDefinitionRelatedDefinition</DataSource>
								<VisibleRows>5</VisibleRows>
								<VisibleRowsMode>Fixed</VisibleRowsMode>
							</AxFormControl>
						</Controls>
						<BackgroundColor>WindowBackground</BackgroundColor>
						<Caption>@SYS128450</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>LinkedByDefinitions</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1700091219</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>LinkedByDefinitionGrid</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>displayParentJournalizingDefinitionCode</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayParentJournalizingDefinitionCode</DataMethod>
										<DataSource>JournalizingDefinitionRelatedParent</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>displayParentJournalizingDefinitionDesc</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayParentJournalizingDefinitionDesc</DataMethod>
										<DataSource>JournalizingDefinitionRelatedParent</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>JournalizingDefinitionRelatedParent</DataSource>
							</AxFormControl>
						</Controls>
						<BackgroundColor>WindowBackground</BackgroundColor>
						<Caption>@SYS128451</Caption>
						<DataSource>JournalizingDefinitionRelatedParent</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Memo</Name>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LongDescription</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LongDescription_JournalizingDefinitionLongDesc</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalizingDefinitionLongDesc</DataField>
										<DataSource>JournalizingDefinitionVersion</DataSource>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<DataGroup>LongDescription</DataGroup>
								<DataSource>JournalizingDefinitionVersion</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<BackgroundColor>WindowBackground</BackgroundColor>
						<Caption>@SYS80402</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>