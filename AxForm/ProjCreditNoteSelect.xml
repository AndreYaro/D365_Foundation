<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjCreditNoteSelect</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjCreditNoteSelect extends FormRun
{
    TmpFrmVirtual           tmpFrmVirtual;

    // Temp. tables to build up the joined records
    TmpProjTransId          tmpProjTransIdEmpl;
    TmpProjTransId          tmpProjTransIdCost;
    TmpProjTransId          tmpProjTransIdItem;
    TmpProjTransId          tmpProjTransIdOnAcc;
    TmpProjTransId          tmpProjTransIdRevenue;
    TmpProjTransId          tmpProjTransIdSubscription;

    ProjInvoiceEmplDetail       projInvoiceEmplDetailTmp;
    ProjInvoiceCostDetail       projInvoiceCostDetailTmp;
    ProjInvoiceItemDetail       projInvoiceItemDetailTmp;
    ProjInvoiceOnAccDetail      projInvoiceOnAccDetailTmp;
    ProjInvoiceRevenueDetail    projInvoiceRevenueDetailTmp;
    ProjInvoiceRevenueDetail    projInvoiceSubscriptionTmp;

    boolean                 projCreditInvoicing;

    Counter                 linkCnt;
    Object                  caller;

}
]]></Source>
			</Method>
			<Method>
				<Name>bookRefresh</Name>
				<Source><![CDATA[
    void bookRefresh(Map    _updatedRecs)
    {
        Object callerForm = element.args().caller();

        if (callerForm)
        {
            callerForm.doFormCache(_updatedRecs);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        ProjReverseMarking      projReverseMarking;
        boolean                 canClose;
        List                    list;

        FormRun                 callerForm  = element.args().caller();
        FormDataSource          fds;

        canClose = super();

        if (element.closedOk() && canClose)
        {
            list = new List(Types::Record);

            while select tmpFrmVirtual
            {
                if (this.shouldAddToReverseMarkingList(tmpFrmVirtual))
                {
                    list.addEnd(tmpFrmVirtual);
                }
            }

            projReverseMarking = new ProjReverseMarking(list.pack());
            projReverseMarking.run();

            if (projReverseMarking.updatedPacks())
            {
                if ((element.args().caller() != null) &&
                    (element.args().caller().name() != formStr(projProjectTransactionsListPage)) &&
                    (element.args().caller().name() != formStr(ProjGrantTransListPage)))
                {
                    // Do not update datasource when caller form Posted project transactions list page or the Grant transactions list page
                    RunBaseMultiParmApplication::formCacheUpdate(callerForm,element.args().record(),projReverseMarking.updatedPacks());
                    fds = FormDataUtil::getFormDataSource(element.args().record());
                    fds.active();
                }
            }
        }

        return canClose;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldAddToReverseMarkingList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the <c>TmpFrmVirtual</c> record buffer should be added to the list of 
    /// records for reverse marking.
    /// </summary>
    /// <param name = "_tmpFrmVirtual">
    /// A <c>TmpFrmVirtual</c> record buffer.
    /// </param>
    /// <returns>
    /// true.
    /// </returns>
    protected boolean shouldAddToReverseMarkingList(TmpFrmVirtual _tmpFrmVirtual)
    {
        // This method is used for extensibility.
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteCreditNoteProposalLine</Name>
				<Source><![CDATA[
    void deleteCreditNoteProposalLine(
        TmpProjTransId       _tmpProjTransId)
    {
        ProjProposalEmpl            projProposalEmpl;
        ProjProposalEmplDetail      projProposalEmplDetail;
        ProjProposalCost            projProposalCost;
        ProjProposalCostDetail      projProposalCostDetail;
        ProjProposalItem            projProposalItem;
        ProjProposalItemDetail      projProposalItemDetail;
        ProjProposalOnAcc           projProposalOnAcc;
        ProjProposalOnAccDetail     projProposalOnAccDetail;
        ProjProposalRevenue         projProposalRevenue;
        ProjProposalRevenueDetail   projProposalRevenueDetail;

        ttsbegin;

        switch (_tmpProjTransId.RefTableId)
        {
            case tableNum(ProjInvoiceEmplDetail):
                projProposalEmplDetail  = ProjProposalEmplDetail::find(_tmpProjTransId.SaleRefRecId,'',true);
                projProposalEmpl = projProposalEmplDetail.projProposalEmpl(true);
                projProposalEmplDetail.delete();
                select projProposalEmplDetail where projProposalEmplDetail.ProposalRefRecId == projProposalEmpl.RecId;
                if (!projProposalEmplDetail)
                {
                    projProposalEmpl.delete();
                }
                break;

            case tableNum(ProjInvoiceCostDetail):
                projProposalCostDetail  = ProjProposalCostDetail::find(_tmpProjTransId.SaleRefRecId,'',true);
                projProposalCost = projProposalCostDetail.projProposalCost(true);
                projProposalCostDetail.delete();
                select projProposalCostDetail where projProposalCostDetail.ProposalRefRecId == projProposalCost.RecId;
                if (!projProposalCostDetail)
                {
                    projProposalCost.delete();
                }
                break;

            case tableNum(ProjInvoiceItemDetail):
                projProposalItemDetail  = ProjProposalItemDetail::find(_tmpProjTransId.SaleRefRecId,'',true);
                projProposalItem = projProposalItemDetail.projProposalItem(true);
                projProposalItemDetail.delete();
                select projProposalItemDetail where projProposalItemDetail.ProposalRefRecId == projProposalItem.RecId;
                if (!projProposalItemDetail)
                {
                    projProposalItem.delete();
                }
                break;

            case tableNum(ProjInvoiceOnAccDetail):
                projProposalOnAccDetail = ProjProposalOnAccDetail::find(_tmpProjTransId.SaleRefRecId,'',true);
                projProposalOnAcc = projProposalOnAccDetail.projProposalOnAcc(true);
                projProposalOnAccDetail.delete();
                select projProposalOnAccDetail where projProposalOnAccDetail.ProposalRefRecId == projProposalOnAcc.RecId;
                if (!projProposalOnAccDetail)
                {
                    projProposalOnAcc.delete();
                }
                break;

            case tableNum(ProjInvoiceRevenueDetail):
                projProposalRevenueDetail   = ProjProposalRevenueDetail::find(_tmpProjTransId.SaleRefRecId,'',true);
                projProposalRevenue = projProposalRevenueDetail.projProposalRevenue(true);
                projProposalRevenueDetail.delete();
                select projProposalRevenueDetail where projProposalRevenueDetail.ProposalRefRecId == projProposalRevenue.RecId;
                if (!projProposalRevenueDetail)
                {
                    projProposalRevenue.delete();
                }
                break;
        }

        _tmpProjTransId = element.updateProjTransStatus(_tmpProjTransId);
        _tmpProjTransId.update();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateProjTransStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Update the project transaction status.
    /// </summary>
    /// <param name = "_tmpProjTransId">
    ///     An instance of <c>TmpProjTransId</c> table buffer.
    /// </param>
    /// <returns>
    ///     The updated instance of <c>TmpProjTransId</c> table.
    /// </returns>
    protected TmpProjTransId updateProjTransStatus(TmpProjTransId _tmpProjTransId)
    {
        switch (_tmpProjTransId.TransStatus)
        {
            case ProjTransStatus::InvoiceProposal    :
                _tmpProjTransId.TransStatus = ProjTransStatus::Posted;
                break;

            case ProjTransStatus::CreditnoteProposal :
                _tmpProjTransId.TransStatus = ProjTransStatus::MarkedCreditNote;
                break;
        }

        return _tmpProjTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editMark</Name>
				<Source><![CDATA[
    NoYes editMark(boolean              _set,
                   TmpProjTransId       _tmpProjTransId,
                   NoYes                _markTrans,
                   boolean              _setButtons   = true // Sets the Select/deselect buttons
                   )
    {

        element.findTmpFrmVirtual(_tmpProjTransId);

        NoYes markTrans = element.editMarkForTransactionStatus(_set, _tmpProjTransId, _markTrans, _setButtons);

        if (_setButtons && _set)
        {
            this.setButtons(_tmpProjTransId.RefTableId, _tmpProjTransId.OriginRevenue == ProjOrigin::Subscription);
        }

        return markTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editMarkForTransactionStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the transaction's selected status based on transaction status.
    /// </summary>
    /// <param name = "_set">Determines whether the user has modified the checkbox to set.</param>
    /// <param name = "_tmpProjTransId">The <c>TmpProjTransId</c> table buffer.</param>
    /// <param name = "_markTrans">The transaction's current selected status.</param>
    /// <param name = "_setButtons">Determines if the Select/deselect buttons should be set.</param>
    /// <returns>
    /// The transaction's selected status.
    /// </returns>
    protected NoYes editMarkForTransactionStatus(
        boolean _set,
        TmpProjTransId _tmpProjTransId,
        NoYes _markTrans,
        boolean _setButtons)
    {
        NoYes markTrans;

        switch (_tmpProjTransId.TransStatus)
        {
            case ProjTransStatus::Estimated:
            case ProjTransStatus::Invoiced:
                markTrans = element.editMarkForInvoicedTransactionStatus(_set, _tmpProjTransId, _markTrans, _setButtons);
                break;

            case ProjTransStatus::MarkedCreditnote:
                markTrans = element.editMarkForMarkedCreditnoteTransactionStatus(_set, _tmpProjTransId, _markTrans, _setButtons);
                break;

            case ProjTransStatus::CreditnoteProposal:
                markTrans = element.editMarkForCreditnoteProposalTransactionStatus(_set, _tmpProjTransId, _markTrans, _setButtons);
                break;
        }

        return markTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editMarkForInvoicedTransactionStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the transaction's selected status for the invoiced transaction status.
    /// </summary>
    /// <param name = "_set">Determines whether the user has modified the checkbox to set.</param>
    /// <param name = "_tmpProjTransId">The <c>TmpProjTransId</c> table buffer.</param>
    /// <param name = "_markTrans">The transaction's current selected status.</param>
    /// <param name = "_setButtons">Determines if the Select/deselect buttons should be set.</param>
    /// <returns>
    /// The transaction's selected status.
    /// </returns>
    protected NoYes editMarkForInvoicedTransactionStatus(
        boolean _set,
        TmpProjTransId _tmpProjTransId,
        NoYes _markTrans,
        boolean _setButtons)
    {
        NoYes markTrans;

        if (tmpFrmVirtual)
        {
            markTrans = NoYes::Yes;
        }

        if (_set)
        {
            if (_markTrans)
            {
                element.writeTmpFrmVirtual(_tmpProjTransId);

                markTrans = NoYes::Yes;
            }
            else
            {
                tmpFrmVirtual.delete();
                markTrans = NoYes::No;
            }
        }

        return markTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editMarkForMarkedCreditnoteTransactionStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the transaction's Selected status for the MarkedCreditnote transaction status.
    /// </summary>
    /// <param name = "_set">Determines whether the user has modified the checkbox to set.</param>
    /// <param name = "_tmpProjTransId">The <c>TmpProjTransId</c> table buffer.</param>
    /// <param name = "_markTrans">The transaction's current selected status.</param>
    /// <param name = "_setButtons">Determines if the Select/deselect buttons should be set.</param>
    /// <returns>
    /// The transaction's selected status.
    /// </returns>
    protected NoYes editMarkForMarkedCreditnoteTransactionStatus(
        boolean _set,
        TmpProjTransId _tmpProjTransId,
        NoYes _markTrans,
        boolean _setButtons)
    {
        NoYes markTrans;

        if (tmpFrmVirtual)
        {
            if (_set && _markTrans)
            {
                tmpFrmVirtual.delete();
                markTrans = NoYes::Yes;
            }
        }
        else
        {
            markTrans = NoYes::Yes;
        }

        if (_set && !_markTrans)
        {
            element.writeTmpFrmVirtual(_tmpProjTransId);
            markTrans = NoYes::No;
        }

        return markTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editMarkForCreditnoteProposalTransactionStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the transaction's Selected status for the CreditnoteProposal transaction status.
    /// </summary>
    /// <param name = "_set">Determines whether the user has modified the checkbox to set.</param>
    /// <param name = "_tmpProjTransId">The <c>TmpProjTransId</c> table buffer.</param>
    /// <param name = "_markTrans">The transaction's current selected status.</param>
    /// <param name = "_setButtons">Determines if the Select/deselect buttons should be set.</param>
    /// <returns>
    /// The transaction's selected status.
    /// </returns>
    protected NoYes editMarkForCreditnoteProposalTransactionStatus(
        boolean _set,
        TmpProjTransId _tmpProjTransId,
        NoYes _markTrans,
        boolean _setButtons)
    {
        NoYes markTrans = NoYes::Yes;

        if (_set && !_markTrans)
        {
            if (Box::yesNo(strFmt("@SYS91628", element.proposalId(_tmpProjTransId)), DialogButton::Yes))
            {
                element.deleteCreditNoteProposalLine(_tmpProjTransId);
                markTrans = NoYes::No;
            }
        }

        return markTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findTmpFrmVirtual</Name>
				<Source><![CDATA[
    void findTmpFrmVirtual(TmpProjTransId _tmpProjTransId)
    {
        select tmpFrmVirtual
            where tmpFrmVirtual.TableNum   == _tmpProjTransId.RefTableId
             &&   tmpFrmVirtual.RecordNo   == _tmpProjTransId.RefRecId
             &&   tmpFrmVirtual.RefRecId   == _tmpProjTransId.SaleRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findTmpProjTransId</Name>
				<Source><![CDATA[
    TmpProjTransId findTmpProjTransId(RefRecId _saleRefRecId, TmpProjTransId _tmpProjTransId)
    {
        TmpProjTransId  tmpProjTransId;

        tmpProjTransId.setTmpData(_tmpProjTransId);

        select tmpProjTransId
            where tmpProjTransId.SaleRefRecId == _saleRefRecId;

        return tmpProjTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        #ISOCountryRegionCodes

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            caller = element.args().caller();
        }

        // Check that records exist so that we don't display an empty grid.
        select count(RecId) from projInvoiceEmplDetailTmp;
        if (projInvoiceEmplDetailTmp.RecId == 0)
        {
            select count(RecId) from projInvoiceCostDetailTmp;
            if (projInvoiceCostDetailTmp.RecId == 0 )
            {
                select count(RecId) from projInvoiceItemDetailTmp;
                if (projInvoiceItemDetailTmp.RecId == 0 )
                {
                    select count(RecId) from projInvoiceOnAccDetailTmp;
                    if (projInvoiceOnAccDetailTmp.RecId == 0)
                    {
                        select count(RecId) from projInvoiceRevenueDetailTmp;
                        if (projInvoiceRevenueDetailTmp.RecId == 0)
                        {
                            select count(RecId) from projInvoiceSubscriptionTmp;
                            if (projInvoiceSubscriptionTmp.RecId == 0)
                            {
                                // No records to display, report error and cancel form with message.
								error("@SYS98953");
								this.closeCancel();
                            }
                        }
                    }
                }
            }
        }
 
		super();

        if ((element.args().caller() != null) &&
            (element.args().caller().name() == formStr(projProjectTransactionsListPage)) ||
            (element.args().caller().name() == formStr(ProjGrantTransListPage)))
        {
            this.initFromPostedTransactionListPage();
        }
        else
        {
            if (element.args().dataset() != tableNum(ProjInvoiceJour))
            {
                buttonSelectAll.visible(false);
                buttonDeselectAll.visible(false);
            }
        }
        
        projCreditInvoicing = true;

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            this.setVisible_IN();
        }
        // </GIN>

    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCost</Name>
				<Source><![CDATA[
    void initFromCost(ProjInvoiceCostDetail _projInvoiceCostDetail)
    {
        projInvoiceCostDetailTmp.data(_projInvoiceCostDetail);
        projInvoiceCostDetailTmp.doInsert();

        tmpProjTransIdCost.initFromProjInvoiceCostDetail(_projInvoiceCostDetail);
        tmpProjTransIdCost.insert();

        element.initMark(tmpProjTransIdCost);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromEmpl</Name>
				<Source><![CDATA[
    void initFromEmpl(ProjInvoiceEmplDetail _projInvoiceEmplDetail)
    {
        projInvoiceEmplDetailTmp.data(_projInvoiceEmplDetail);
        projInvoiceEmplDetailTmp.doInsert();

        tmpProjTransIdEmpl.initFromProjInvoiceEmplDetail(_projInvoiceEmplDetail);
        tmpProjTransIdEmpl.insert();

        element.initMark(tmpProjTransIdEmpl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromItem</Name>
				<Source><![CDATA[
    void initFromItem(ProjInvoiceItemDetail _projInvoiceItemDetail)
    {
        projInvoiceItemDetailTmp.data(_projInvoiceItemDetail);
        projInvoiceItemDetailTmp.doInsert();

        tmpProjTransIdItem.initFromProjInvoiceItemDetail(_projInvoiceItemDetail);
        tmpProjTransIdItem.insert();

        element.initMark(tmpProjTransIdItem);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromJournal</Name>
				<Source><![CDATA[
    void initFromJournal()
    {
        FormDataSource      callerDataSource;
        ProjInvoiceJour     callerProjInvoiceJour;

        Set                 set;
        Set                 transSet;
        SetEnumerator       se;
        Common              trans;

        ProjInvoiceRevenueDetail  projInvoiceRevenueDetailInit;
        boolean             checkFeeTrans = true;

        // If new linkactive
        if (linkCnt == 6)
        {
            linkCnt = 0;
        }

        linkCnt++;

        if (linkCnt != 1)
        {
            return;
        }

        if (element.args().dataset() != tableNum(ProjInvoiceJour))
        {
            return;
        }

        delete_from tmpProjTransIdEmpl;
        delete_from tmpProjTransIdCost;
        delete_from tmpProjTransIdItem;
        delete_from tmpProjTransIdOnAcc;
        delete_from tmpProjTransIdRevenue;
        delete_from tmpProjTransIdSubscription;
        delete_from projInvoiceEmplDetailTmp;
        delete_from projInvoiceCostDetailTmp;
        delete_from projInvoiceItemDetailTmp;
        delete_from projInvoiceOnAccDetailTmp;
        delete_from projInvoiceRevenueDetailTmp;
        delete_from projInvoiceSubscriptionTmp;

        set = new Set(Types::Record);

        callerDataSource = FormDataUtil::getFormDataSource(element.args().record());
        for (callerProjInvoiceJour = callerDataSource.getFirst(true)
            ? callerDataSource.getFirst(true)
            : callerDataSource.cursor(); callerProjInvoiceJour; callerProjInvoiceJour = callerDataSource.getNext())
        {
            set.add(callerProjInvoiceJour);
        }
        transSet = Set::create(ProjReverseMarking::getTransFromJournals(set.pack()));

        se = transSet.getEnumerator();
        while (se.moveNext())
        {
            trans = se.current();

            switch (trans.TableId)
            {
                case tableNum(ProjInvoiceEmplDetail):
                    this.initFromEmpl(trans);
                    break;

                case tableNum(ProjInvoiceCostDetail):
                    this.initFromCost(trans);
                    break;

                case tableNum(ProjInvoiceItemDetail):
                    this.initFromItem(trans);
                    break;

                case tableNum(ProjInvoiceOnAccDetail):
                    this.initFromOnAcc(trans);
                    break;

                case tableNum(ProjInvoiceRevenueDetail):
                    projInvoiceRevenueDetailInit = trans;

                    if (projInvoiceRevenueDetailInit.projInvoiceRevenue().smaSubscriptionId)
                    {
                        this.initFromSubscription(projInvoiceRevenueDetailInit);
                    }
                    else
                    {
                        this.initFromRevenue(projInvoiceRevenueDetailInit);
                    }

                    // To Check Fee Transactions other than retention transactions
                    if (checkFeeTrans)
                    {
                        revenue.visible(!projInvoiceRevenueDetailInit.projInvoiceRevenue().IsRetained);
			checkFeeTrans = projInvoiceRevenueDetailInit.projInvoiceRevenue().IsRetained;
                    }                        
                    
                    break;
            }
        }

        this.setButtons(tableNum(ProjInvoiceEmplDetail));
        this.setButtons(tableNum(ProjInvoiceCostDetail));
        this.setButtons(tableNum(ProjInvoiceItemDetail));
        this.setButtons(tableNum(ProjInvoiceOnAccDetail));
        this.setButtons(tableNum(ProjInvoiceRevenueDetail));
        this.setButtons(tableNum(ProjInvoiceRevenueDetail),true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromOnAcc</Name>
				<Source><![CDATA[
    void initFromOnAcc(ProjInvoiceOnAccDetail   _projInvoiceOnAccDetail)
    {
        projInvoiceOnAccDetailTmp.data(_projInvoiceOnAccDetail);
        projInvoiceOnAccDetailTmp.doInsert();

        tmpProjTransIdOnAcc.initFromProjInvoiceOnAccDetail(_projInvoiceOnAccDetail);
        tmpProjTransIdOnAcc.insert();

        element.initMark(tmpProjTransIdOnAcc);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPostedTransactionListPage</Name>
				<Source><![CDATA[
    void initFromPostedTransactionListPage()
    {
        ProjItemTrans           callerProjItemTrans;
        ProjItemTransSale       projItemTransSale;
        ProjCostTrans           callerProjCostTrans;
        ProjCostTransSale       projCostTransSale;
        ProjEmplTrans           callerProjEmplTrans;
        ProjEmplTransSale       projEmplTransSale;
        ProjRevenueTrans        callerProjRevenueTrans;
        ProjRevenueTransSale    projRevenueTransSale;
        ProjOnAccTrans          callerProjOnAccTrans;
        ProjOnAccTransSale      projOnAccTransSale;
        FormDataSource          callerDataSource;
        ProjPostTransView       callerProjPostTransView;

        delete_from tmpProjTransIdEmpl;
        delete_from tmpProjTransIdCost;
        delete_from tmpProjTransIdItem;
        delete_from tmpProjTransIdOnAcc;
        delete_from tmpProjTransIdRevenue;
        delete_from tmpProjTransIdSubscription;
        delete_from projInvoiceEmplDetailTmp;
        delete_from projInvoiceCostDetailTmp;
        delete_from projInvoiceItemDetailTmp;
        delete_from projInvoiceOnAccDetailTmp;
        delete_from projInvoiceRevenueDetailTmp;
        delete_from projInvoiceSubscriptionTmp;

        item.visible(false);
        empl.visible(false);
        cost.visible(false);
        revenue.visible(false);
        subscription.visible(false);
        onAcc.visible(false);

        callerDataSource = element.args().caller().dataSource();
        for (callerProjPostTransView = callerDataSource.getFirst(true)
            ? callerDataSource.getFirst(true)
            : callerDataSource.cursor(); callerProjPostTransView; callerProjPostTransView = callerDataSource.getNext())
        {
            switch (callerProjPostTransView.ProjTransType)
            {
                case ProjTransType::Item: //Item Trans
                    callerProjItemTrans = ProjItemTrans::find(callerProjPostTransView.TransId);
                    while select projItemTransSale
                        where projItemTransSale.ProjTransId == callerProjItemTrans.ProjTransId &&
                          projItemTransSale.TransStatus != ProjTransStatus::CreditnoteProposal
                    {
                        if (projItemTransSale.canBeMarkedForCreditNote())
                        {
                            element.initFromItem(ProjInvoiceItemDetail::find(projItemTransSale.RecId));
                            item.visible(true);
                        }
                    }
                    break;

                case ProjTransType::Hour: // Hour Trans
                    callerProjEmplTrans = ProjEmplTrans::find(callerProjPostTransView.TransId);
                    while select projEmplTransSale
                        where projEmplTransSale.TransId == callerProjEmplTrans.TransId && 
                          projEmplTransSale.TransStatus != ProjTransStatus::CreditnoteProposal
                    {
                        if (projEmplTransSale.canBeMarkedForCreditNote())
                        {
                            element.initFromEmpl(ProjInvoiceEmplDetail::find(projEmplTransSale.RecId));
                        }
                    }
                    empl.visible(true);
                    break;

                case ProjTransType::Cost: // Cost Trans
                    callerProjCostTrans = ProjCostTrans::find(callerProjPostTransView.TransId);
                    while select projCostTransSale
                        where projCostTransSale.TransId == callerProjCostTrans.TransId &&
                          projCostTransSale.TransStatus != ProjTransStatus::CreditnoteProposal
                    {
                        if (projCostTransSale.canBeMarkedForCreditNote())
                        {
                            element.initFromCost(ProjInvoiceCostDetail::find(projCostTransSale.RecId));
                            cost.visible(true);
                        }
                    }
                    break;

                case ProjTransType::Revenue: // Revenue Trans
                    callerProjRevenueTrans = ProjRevenueTrans::find(callerProjPostTransView.TransId);
                    if (callerProjRevenueTrans.smaSubscriptionId)
                    {
                        if (ProjCategory::find(callerProjRevenueTrans.CategoryId).SetupSubscription)
                        {
                            while select projRevenueTransSale
                                where projRevenueTransSale.TransId == callerProjRevenueTrans.TransId &&
                                  projRevenueTransSale.TransStatus != ProjTransStatus::CreditnoteProposal
                            {
                                if (projRevenueTransSale.canBeMarkedForCreditNote())
                                {
                                    this.initFromSubscription(ProjInvoiceRevenueDetail::find(projRevenueTransSale.RecId));
                                    subscription.visible(true);
                                }
                            }
                        }
                    }
                    else
                    {
                        if (!ProjCategory::find(callerProjRevenueTrans.CategoryId).SetupSubscription)
                        {
                            while select projRevenueTransSale
                                where projRevenueTransSale.TransId == callerProjRevenueTrans.TransId &&
                                  projRevenueTransSale.TransStatus != ProjTransStatus::CreditnoteProposal
                            {
                                if (projRevenueTransSale.canBeMarkedForCreditNote())
                                {
                                    this.initFromRevenue(ProjInvoiceRevenueDetail::find(projRevenueTransSale.RecId));
                                    if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
                                    {
                                        revenue.visible(!callerProjRevenueTrans.IsRetained);
                                    }
                                    else
                                    {
                                        revenue.visible(true);
                                    }
                                }
                            }
                        }
                    }
                    break;

                case ProjTransType::OnAccount: // On Acc Trans
                    callerProjOnAccTrans = ProjOnAccTrans::find(callerProjPostTransView.TransId);
                    while select projOnAccTransSale
                        where projOnAccTransSale.TransId == callerProjOnAccTrans.TransId &&
                          projOnAccTransSale.TransStatus != ProjTransStatus::CreditnoteProposal
                    {
                        if (projOnAccTransSale.canBeMarkedForCreditNote())
                        {
                            element.initFromOnAcc(ProjInvoiceOnAccDetail::find(projOnAccTransSale.RecId));
                            onAcc.visible(true);
                        }
                    }
                    break;
            }
        }

        projInvoiceEmplDetail.setTmpData(projInvoiceEmplDetailTmp);
        projInvoiceCostDetail.setTmpData(projInvoiceCostDetailTmp);
        projInvoiceItemDetail.setTmpData(projInvoiceItemDetailTmp);
        projInvoiceOnAccDetail.setTmpData(projInvoiceOnAccDetailTmp);
        projInvoiceRevenueDetail.setTmpData(projInvoiceRevenueDetailTmp);
        projInvoiceRevenueDetailSubscription.setTmpData(projInvoiceSubscriptionTmp);

        this.setButtons(tableNum(ProjInvoiceEmplDetail));
        this.setButtons(tableNum(ProjInvoiceCostDetail));
        this.setButtons(tableNum(ProjInvoiceItemDetail));
        this.setButtons(tableNum(ProjInvoiceOnAccDetail));
        this.setButtons(tableNum(ProjInvoiceRevenueDetail));
        this.setButtons(tableNum(ProjInvoiceRevenueDetail),true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromRevenue</Name>
				<Source><![CDATA[
    void initFromRevenue(ProjInvoiceRevenueDetail _projInvoiceRevenueDetail)
    {
        projInvoiceRevenueDetailTmp.data(_projInvoiceRevenueDetail);
        projInvoiceRevenueDetailTmp.doInsert();

        tmpProjTransIdRevenue.initFromProjInvoiceRevenueDetail(_projInvoiceRevenueDetail);
        tmpProjTransIdRevenue.insert();

        element.initMark(tmpProjTransIdRevenue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSubscription</Name>
				<Source><![CDATA[
    void initFromSubscription(ProjInvoiceRevenueDetail _projInvoiceRevenueDetail)
    {
        projInvoiceSubscriptionTmp.data(_projInvoiceRevenueDetail);
        projInvoiceSubscriptionTmp.doInsert();

        tmpProjTransIdSubscription.initFromProjInvoiceRevenueDetail(_projInvoiceRevenueDetail);
        tmpProjTransIdSubscription.insert();

        element.initMark(tmpProjTransIdSubscription);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMark</Name>
				<Source><![CDATA[
    void initMark(TmpProjTransId  tmpProjTransId)
    {
        switch (tmpProjTransId.TransStatus)
        {
            case ProjTransStatus::MarkedCreditnote,
                 ProjTransStatus::CreditnoteProposal:

                this.editMark(
                    true,
                    tmpProjTransId,
                    true,
                    false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>proposalId</Name>
				<Source><![CDATA[
    ProjProposalId proposalId(
        TmpProjTransId       _tmpProjTransId)
    {
        ProjProposalEmplDetail      projProposalEmplDetail;
        ProjProposalCostDetail      projProposalCostDetail;
        ProjProposalItemDetail      projProposalItemDetail;
        ProjProposalOnAccDetail     projProposalOnAccDetail;
        ProjProposalRevenueDetail   projProposalRevenueDetail;
        ProjProposalId              proposaleId;

        switch (_tmpProjTransId.RefTableId)
        {
            case tableNum(ProjInvoiceEmplDetail):
                projProposalEmplDetail  = ProjProposalEmplDetail::find(_tmpProjTransId.SaleRefRecId,'',true);
                proposaleId             = projProposalEmplDetail.projProposalEmpl().ProposalId;
                break;

            case tableNum(ProjInvoiceCostDetail):
                projProposalCostDetail  = ProjProposalCostDetail::find(_tmpProjTransId.SaleRefRecId,'',true);
                proposaleId             = projProposalCostDetail.projProposalCost().ProposalId;
                break;

            case tableNum(ProjInvoiceItemDetail):
                projProposalItemDetail  = ProjProposalItemDetail::find(_tmpProjTransId.SaleRefRecId,'',true);
                proposaleId             = projProposalItemDetail.projProposalItem().ProposalId;
                break;

            case tableNum(ProjInvoiceOnAccDetail):
                projProposalOnAccDetail = ProjProposalOnAccDetail::find(_tmpProjTransId.SaleRefRecId,'',true);
                proposaleId             = projProposalOnAccDetail.projProposalOnAcc().ProposalId;
                break;

            case tableNum(ProjInvoiceRevenueDetail):
                projProposalRevenueDetail   = ProjProposalRevenueDetail::find(_tmpProjTransId.SaleRefRecId,'',true);
                proposaleId                 = projProposalRevenueDetail.projProposalRevenue().ProposalId;
                break;
        }

        return proposaleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectMulti</Name>
				<Source><![CDATA[
    void selectMulti(
        boolean             _mark,
        TmpProjTransId      _tmpProjTransId
        )
    {
        TmpProjTransId  tmpProjTransId;

        tmpProjTransId.setTmpData(_tmpProjTransId);

        while select tmpProjTransId
        {
            element.editMark(
                true,
                tmpProjTransId,
                _mark,
                false);
        }

        this.setButtons(tableNum(ProjInvoiceEmplDetail));
        this.setButtons(tableNum(ProjInvoiceCostDetail));
        this.setButtons(tableNum(ProjInvoiceItemDetail));
        this.setButtons(tableNum(ProjInvoiceOnAccDetail));
        this.setButtons(tableNum(ProjInvoiceRevenueDetail));
        this.setButtons(tableNum(ProjInvoiceRevenueDetail),true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectMultiAll</Name>
				<Source><![CDATA[
    void selectMultiAll(boolean _mark)
    {
        element.selectMulti(_mark,tmpProjTransIdEmpl);
        element.selectMulti(_mark,tmpProjTransIdCost);
        element.selectMulti(_mark,tmpProjTransIdItem);
        element.selectMulti(_mark,tmpProjTransIdOnAcc);
        element.selectMulti(_mark,tmpProjTransIdRevenue);
        element.selectMulti(_mark,tmpProjTransIdSubscription);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtons</Name>
				<Source><![CDATA[
    void setButtons(TableId _tableId, boolean _subscriptions = false)
    {
        int64 selected;

        void doButtons(
            TmpProjTransId              _tmpProjTransId,
            FormButtonControl           _selectButton,
            FormButtonControl           _deselectButton
            )
        {
            select count(RecId) from _tmpProjTransId
                where _tmpProjTransId.TransStatus == ProjTransStatus::MarkedCreditnote;

            selected = _tmpProjTransId.RecId;    // Set to current "markable"

            select count (RecId) from tmpFrmVirtual
                where tmpFrmVirtual.TableNum == _tableId
                join _tmpProjTransId
                    where _tmpProjTransId.SaleRefRecId == tmpFrmVirtual.RefRecId
                       && _tmpProjTransId.TransStatus == ProjTransStatus::MarkedCreditnote;

            selected -= tmpFrmVirtual.RecId;        // Subtract the deselected marked

            select count (RecId) from tmpFrmVirtual
                where tmpFrmVirtual.TableNum == _tableId
                join _tmpProjTransId
                    where _tmpProjTransId.SaleRefRecId == tmpFrmVirtual.RefRecId
                       && _tmpProjTransId.TransStatus == ProjTransStatus::Invoiced;

            selected += tmpFrmVirtual.RecId;        // Add the selected invoiced

            select count(RecId) from _tmpProjTransId
                    where _tmpProjTransId.TransStatus == ProjTransStatus::CreditnoteProposal;

            selected += _tmpProjTransId.RecId;    // Add the Credit Note Proposal

            select count(RecId) from _tmpProjTransId;

            _selectButton.enabled(selected != _tmpProjTransId.RecId);
            _deselectButton.enabled(selected != 0);

            if (projCreditInvoicing)
            {
                this.setCreditInvoicing(_tableId, _tmpProjTransId);
            }
        }

        switch (_tableId)
        {
            case tableNum(ProjInvoiceEmplDetail):
                doButtons(tmpProjTransIdEmpl,buttonSelectHours,buttonDeselectHours);
                break;

            case tableNum(ProjInvoiceCostDetail):
                doButtons(tmpProjTransIdCost,buttonSelectCost,buttonDeselectCost);
                break;

            case tableNum(ProjInvoiceItemDetail):
                doButtons(tmpProjTransIdItem,buttonSelectItem,buttonDeselectItem);
                break;

            case tableNum(ProjInvoiceOnAccDetail):
                doButtons(tmpProjTransIdOnAcc,buttonSelectOnAcc,buttonDeselectOnAcc);
                break;

            case tableNum(ProjInvoiceRevenueDetail):
                if (_subscriptions)
                {
                    doButtons(tmpProjTransIdSubscription,buttonSelectSubscription,buttonDeselectSubscription);
                }
                else
                {
                    doButtons(tmpProjTransIdRevenue,buttonSelectRevenue,buttonDeselectRevenue);
                }
                break;
        }

        buttonSelectAll.enabled(
            buttonSelectHours.enabled()     ||
            buttonSelectCost.enabled()      ||
            buttonSelectItem.enabled()      ||
            buttonSelectOnAcc.enabled()     ||
            buttonSelectRevenue.enabled()   ||
            buttonSelectSubscription.enabled());

        buttonDeselectAll.enabled(
            buttonDeselectHours.enabled()   ||
            buttonDeselectCost.enabled()    ||
            buttonDeselectItem.enabled()    ||
            buttonDeselectOnAcc.enabled()   ||
            buttonDeselectRevenue.enabled() ||
            buttonDeselectSubscription.enabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCreditInvoicing</Name>
				<Source><![CDATA[
    public void setCreditInvoicing(int                 _tableId,
                                   TmpProjTransId      _tmpProjTransId)
    {
        boolean             ret;
        boolean             retSubs;
        TmpProjTransId      tmpProjTransIdAux;

        void creditInvoicingButtons(
            boolean             _ret,
            FormButtonControl   _creditInvoicingButton)
        {
            #ISOCountryRegionCodes
            if (_ret)
            {
                _creditInvoicingButton.enabled(true);
            }
            else
            {
                _creditInvoicingButton.enabled(false);
            }

            if (_creditInvoicingButton.visible() == false)
            {
                _creditInvoicingButton.visible(true);
            }
        }

        boolean setRet(
            ProjTransStatus     _status)
        {
            boolean     retAux;

            switch (_status)
            {
                case ProjTransStatus::Invoiced:
                    retAux = true;
                    break;
                case ProjTransStatus::MarkedCreditnote:
                case ProjTransStatus::CreditnoteProposal:
                    retAux = false;
                    break;
            }
            return retAux;
        }

        tmpProjTransIdAux = _tmpProjTransId;

        switch (_tableId)

        {
            case tableNum(ProjInvoiceEmplDetail):
                select RecId from tmpFrmVirtual
                    where tmpFrmVirtual.TableNum == _tableId
                       && tmpFrmVirtual.RefRecId == projInvoiceEmplDetail.SaleRefRecId;

                if (tmpFrmVirtual)
                {
                    select * from tmpProjTransIdAux
                        where tmpProjTransIdAux.SaleRefRecId == projInvoiceEmplDetail.SaleRefRecId;

                    ret = setRet(tmpProjTransIdAux.TransStatus);
                }
                else
                {
                    select RecId from _tmpProjTransId
                            where _tmpProjTransId.SaleRefRecId == projInvoiceEmplDetail.SaleRefRecId
                               && _tmpProjTransId.TransStatus == ProjTransStatus::MarkedCreditnote;
                    if (_tmpProjTransId)
                    {
                        ret = true;
                    }
                    else
                    {
                        ret = false;
                    }
                }
                creditInvoicingButtons(ret, buttonCreditInvoicingHours);
                break;

            case tableNum(ProjInvoiceCostDetail):
                select RecId from tmpFrmVirtual
                    where tmpFrmVirtual.TableNum == _tableId
                       && tmpFrmVirtual.RefRecId == projInvoiceCostDetail.SaleRefRecId;

                if (tmpFrmVirtual)
                {
                    select * from tmpProjTransIdAux
                        where tmpProjTransIdAux.SaleRefRecId == projInvoiceCostDetail.SaleRefRecId;

                    ret = setRet(tmpProjTransIdAux.TransStatus);
                }
                else
                {
                    select RecId from _tmpProjTransId
                            where _tmpProjTransId.SaleRefRecId == projInvoiceCostDetail.SaleRefRecId
                               && _tmpProjTransId.TransStatus == ProjTransStatus::MarkedCreditnote;
                    if (_tmpProjTransId)
                    {
                        ret = true;
                    }
                    else
                    {
                        ret = false;
                    }
                }
                creditInvoicingButtons(ret, buttonCreditInvoicingCost);
                break;

            case tableNum(ProjInvoiceItemDetail):
                select RecId from tmpFrmVirtual
                where tmpFrmVirtual.TableNum == _tableId
                   && tmpFrmVirtual.RefRecId == projInvoiceItemDetail.SaleRefRecId;

                if (tmpFrmVirtual)
                {
                    select * from tmpProjTransIdAux
                        where tmpProjTransIdAux.SaleRefRecId == projInvoiceItemDetail.SaleRefRecId;

                    ret = setRet(tmpProjTransIdAux.TransStatus);
                }
                else
                {
                    select RecId from _tmpProjTransId
                            where _tmpProjTransId.SaleRefRecId == projInvoiceItemDetail.SaleRefRecId
                               && _tmpProjTransId.TransStatus == ProjTransStatus::MarkedCreditnote;
                    if (_tmpProjTransId)
                    {
                        ret = true;
                    }
                    else
                    {
                        ret = false;
                    }
                }

                creditInvoicingButtons(ret, buttonCreditInvoicingItem);

                break;

            case tableNum(ProjInvoiceOnAccDetail):

                select RecId from tmpFrmVirtual
                    where tmpFrmVirtual.TableNum == _tableId
                       && tmpFrmVirtual.RefRecId == projInvoiceOnAccDetail.SaleRefRecId;

                if (tmpFrmVirtual)
                {
                    select * from tmpProjTransIdAux
                        where tmpProjTransIdAux.SaleRefRecId == projInvoiceOnAccDetail.SaleRefRecId;

                    ret = setRet(tmpProjTransIdAux.TransStatus);
                }
                else
                {
                    select RecId from _tmpProjTransId
                            where _tmpProjTransId.SaleRefRecId == projInvoiceOnAccDetail.SaleRefRecId
                               && _tmpProjTransId.TransStatus == ProjTransStatus::MarkedCreditnote;
                    if (_tmpProjTransId)
                    {
                        ret = true;
                    }
                    else
                    {
                        ret = false;
                    }
                }
                creditInvoicingButtons(ret, buttonCreditInvoicingOnAcc);

                break;

            case tableNum(ProjInvoiceRevenueDetail):

                select * from tmpProjTransIdAux
                    where tmpProjTransIdAux.SaleRefRecId == projInvoiceRevenueDetailSubscription.SaleRefRecId;

                if (projInvoiceRevenueDetailSubscription
                && tmpProjTransIdAux.OriginRevenue  == ProjOrigin::Subscription
                && tmpProjTransIdAux.RecId)
                {
                    select RecId from tmpFrmVirtual
                        where tmpFrmVirtual.TableNum == _tableId
                           && tmpFrmVirtual.RefRecId == projInvoiceRevenueDetailSubscription.SaleRefRecId;

                    if (tmpFrmVirtual)
                    {
                        retSubs = setRet(tmpProjTransIdAux.TransStatus);
                    }
                    else
                    {
                        select RecId from tmpProjTransIdAux
                                where tmpProjTransIdAux.SaleRefRecId == projInvoiceRevenueDetailSubscription.SaleRefRecId
                                   && tmpProjTransIdAux.TransStatus     == ProjTransStatus::MarkedCreditnote;

                        if (tmpProjTransIdAux)
                        {
                            retSubs = true;
                        }
                        else
                        {
                            retSubs = false;
                        }
                    }
                    creditInvoicingButtons(retSubs, buttonCreditInvoicingSubscription);
                }

                //tmpProjTransIdAux = _tmpProjTransId;

                select * from tmpProjTransIdAux
                    where tmpProjTransIdAux.SaleRefRecId == projInvoiceRevenueDetail.SaleRefRecId;

                if (projInvoiceRevenueDetail
                && (tmpProjTransIdAux.OriginRevenue == ProjOrigin::FeeJournal 
                    || tmpProjTransIdAux.OriginRevenue == ProjOrigin::FreeTextInvoice
                    || tmpProjTransIdAux.OriginRevenue == ProjOrigin::ProjAdvancedJournal)
                && tmpProjTransIdAux.RecId)
                {
                    select RecId from tmpFrmVirtual
                        where tmpFrmVirtual.TableNum == _tableId
                           && tmpFrmVirtual.RefRecId == projInvoiceRevenueDetail.SaleRefRecId;

                    if (tmpFrmVirtual)
                    {
                        ret = setRet(tmpProjTransIdAux.TransStatus);
                    }
                    else
                    {
                        select RecId from _tmpProjTransId
                                where _tmpProjTransId.SaleRefRecId == projInvoiceRevenueDetail.SaleRefRecId
                                   && _tmpProjTransId.TransStatus == ProjTransStatus::MarkedCreditnote;
                        if (_tmpProjTransId)
                        {
                            ret = true;
                        }
                        else
                        {
                            ret = false;
                        }
                    }
                    creditInvoicingButtons(ret, buttonCreditInvoicingRevenue);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible_IN</Name>
				<Source><![CDATA[
    void setVisible_IN()
    {
        boolean isIndiaIndirectTaxParameterMarked = TaxParameters::checkTaxParameters_IN();

        ProjEmplTransSale_IN_TaxAsPerOriginalInvoice_IN.visible(isIndiaIndirectTaxParameterMarked);
        ProjCostTransSale_IN_TaxAsPerOriginalInvoice_IN.visible(isIndiaIndirectTaxParameterMarked);
        ProjItemTransSale_IN_TaxAsPerOriginalInvoice_IN.visible(isIndiaIndirectTaxParameterMarked);
        ProjRevenueTransSale_IN_TaxAsPerOriginalInvoice_IN.visible(isIndiaIndirectTaxParameterMarked);
        ProjOnAccTransSale_IN_TaxAsPerOriginalInvoice_IN.visible(isIndiaIndirectTaxParameterMarked);
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeTmpFrmVirtual</Name>
				<Source><![CDATA[
    void writeTmpFrmVirtual(TmpProjTransId _tmpProjTransId)
    {
        this.populateTmpFrmVirtual(_tmpProjTransId);
        tmpFrmVirtual.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateTmpFrmVirtual</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the <c>TmpFrmVirtual</c> buffer.
    /// </summary>
    /// <param name = "_tmpProjTransId">
    /// A <c>TmpProjTransId</c> record.
    /// </param>
    protected void populateTmpFrmVirtual(TmpProjTransId _tmpProjTransId)
    {
        tmpFrmVirtual.TableNum     = _tmpProjTransId.RefTableId;
        tmpFrmVirtual.RecordNo     = _tmpProjTransId.RefRecId;
        tmpFrmVirtual.RefRecId     = _tmpProjTransId.SaleRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>researchAllDataSources</Name>
				<Source><![CDATA[
    private void researchAllDataSources()
    {
        ProjInvoiceEmplDetail_ds.research();
        ProjInvoiceCostDetail_ds.research();
        ProjInvoiceItemDetail_ds.research();
        ProjInvoiceOnAccDetail_ds.research();
        ProjInvoiceRevenueDetail_ds.research();
        ProjInvoiceRevenueDetailSubscription_ds.research();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProjInvoiceOnAcc</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource    qbdsOnAcc;
            QueryBuildRange         qbdsOnAccTransRange;
            QueryBuildDataSource    qbdsInvoiceOnAcc;

            super();

            if (element.args().dataset() == tableNum(ProjOnAccTrans))
            {
                ProjOnAccTrans callerProjOnAccTrans = element.args().record();

                ProjOnAccTrans projOnAccTrans;
                ProjInvoiceOnAcc projInvoiceOnAccloc;

                select RecId from projInvoiceOnAccloc
                    exists join TransId from ProjOnAccTrans
                        where ProjOnAccTrans.PSARefRecId == callerProjOnAccTrans.RecId
                            && projInvoiceOnAccLoc.TransId == projOnAccTrans.TransId;

                //If any reconciled record is found  in cash advance then the record is not available for credit note
                if (projInvoiceOnAccloc.RecId)
                {
                    // Hide prepayment transactions created through the Customer advance form
                    qbdsInvoiceOnAcc = this.query().dataSourceTable(tableNum(ProjInvoiceOnAcc));
                    qbdsOnAcc = qbdsInvoiceOnAcc.addDataSource(tableNum(ProjOnAccTrans));
                    qbdsOnAcc.addLink(fieldNum(ProjInvoiceOnAcc, TransId), fieldNum(ProjOnAccTrans, TransId));
                    qbdsOnAcc.joinMode(JoinMode::ExistsJoin);

                    qbdsOnAccTransRange = qbdsOnAcc.addRange(fieldNum(ProjOnAccTrans, TransactionOrigin));
                    qbdsOnAccTransRange.value(strFmt('((%1.%2 != %4) || (%1.%3 != %5))',
                                            qbdsOnAcc.name(),
                                            fieldStr(ProjOnAccTrans, TransactionOrigin),
                                            fieldStr(ProjOnAccTrans, PSAIsOnAccount),
                                            enum2int(ProjOrigin::Prepayment),
                                            enum2int(NoYes::Yes)));
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjInvoiceRevenue</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            if (isConfigurationkeyEnabled(configurationKeyNum(Project))
               && caller.name() == formStr(ProjInvoiceJournal))
            {
                this.query().dataSourceTable(tableNum(ProjInvoiceRevenue)).addRange(fieldNum(ProjInvoiceRevenue, IsRetained)).value(SysQuery::valueNot(NoYes::Yes));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (isConfigurationkeyEnabled(configurationKeyNum(Project)) && projInvoiceRevenue.IsReleased)
            {
                revenue.caption("@PSA11365");
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjInvoiceEmplDetail</Name>
				<Methods>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            FormDataSource      callerDataSource;
            ProjEmplTrans       callerProjEmplTrans;
            ProjEmplTransSale   projEmplTransSale;

            switch (element.args().dataset())
            {
                case tableNum(ProjEmplTrans):
                    delete_from tmpProjTransIdEmpl;
                    delete_from projInvoiceEmplDetailTmp;
                    callerDataSource = FormDataUtil::getFormDataSource(element.args().record());
                    callerProjEmplTrans.clear();
                    callerProjEmplTrans = element.args().record();

                    for (callerProjEmplTrans = callerDataSource.getFirst(true)
                        ? callerDataSource.getFirst(true)
                        : callerDataSource.cursor(); callerProjEmplTrans; callerProjEmplTrans = callerDataSource.getNext())
                    {
                        while select projEmplTransSale
                            where projEmplTransSale.TransId == callerProjEmplTrans.TransId &&
                              projEmplTransSale.TransStatus != ProjTransStatus::CreditnoteProposal
                        {
                            if (projEmplTransSale.canBeMarkedForCreditNote())
                            {
                                element.initFromEmpl(ProjInvoiceEmplDetail::find(projEmplTransSale.RecId));
                            }
                        }
                    }
                    element.setButtons(tableNum(ProjInvoiceEmplDetail));
                    break;

                case tableNum(ProjInvoiceJour):
                    element.initFromJournal();
                    break;
            }

            projInvoiceEmplDetail.setTmpData(projInvoiceEmplDetailTmp);

            select firstonly tmpProjTransIdEmpl;
            if (!tmpProjTransIdEmpl)
            {
                empl.visible(false);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (element.args().dataset() == tableNum(ProjEmplTrans)     ||
                element.args().dataset() == tableNum(ProjInvoiceJour)
               )
            {
                super();

                if (this.query().dataSourceNo(1))
                {
                    this.query().dataSourceNo(1).clearDynalinks();
                }
            }

            projInvoiceEmplDetail.setTmp();

            projInvoiceEmplDetailTmp.setTmp();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (projCreditInvoicing)
            {
                element.setCreditInvoicing(tableNum(ProjInvoiceEmplDetail), tmpProjTransIdEmpl);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>markTrans</Name>
						<Source><![CDATA[
        edit NoYes markTrans(boolean                _set,
                             ProjInvoiceEmplDetail  _projInvoiceEmplDetail,
                             NoYes                  _mark)
        {
            TmpProjTransId  tmpProjTransId = element.findTmpProjTransId(_projInvoiceEmplDetail.SaleRefRecId,tmpProjTransIdEmpl);

            return element.editMark(_set, tmpProjTransId, _mark);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjInvoiceCostDetail</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (projCreditInvoicing)
            {
                element.setCreditInvoicing(tableNum(ProjInvoiceCostDetail), tmpProjTransIdCost);
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (element.args().dataset() == tableNum(ProjCostTrans) ||
                element.args().dataset() == tableNum(ProjInvoiceJour)
               )
            {
                super();

                if (this.query().dataSourceNo(1))
                {
                    this.query().dataSourceNo(1).clearDynalinks();
                }
            }

            projInvoiceCostDetail.setTmp();

            projInvoiceCostDetailTmp.setTmp();
        }

]]></Source>
					</Method>
					<Method>
						<Name>markTrans</Name>
						<Source><![CDATA[
        edit NoYes markTrans(boolean                _set,
                             ProjInvoiceCostDetail  _projInvoiceCostDetail,
                             NoYes                  _mark)
        {
            TmpProjTransId  tmpProjTransId = element.findTmpProjTransId(_projInvoiceCostDetail.SaleRefRecId,tmpProjTransIdCost);

            return element.editMark(_set, tmpProjTransId, _mark);
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            FormDataSource      callerDataSource;
            ProjCostTrans       callerProjCostTrans;
            ProjCostTransSale   projCostTransSale;

            switch (element.args().dataset())
            {
                case tableNum(ProjCostTrans):
                    delete_from tmpProjTransIdCost;
                    delete_from projInvoiceCostDetailTmp;
                    callerDataSource = FormDataUtil::getFormDataSource(element.args().record());
                    callerProjCostTrans.clear();
                    callerProjCostTrans = element.args().record();

                    for (callerProjCostTrans = callerDataSource.getFirst(true)
                        ? callerDataSource.getFirst(true)
                        : callerDataSource.cursor(); callerProjCostTrans; callerProjCostTrans = callerDataSource.getNext())
                    {
                        while select projCostTransSale
                            where projCostTransSale.TransId == callerProjCostTrans.TransId &&
                              projCostTransSale.TransStatus != ProjTransStatus::CreditnoteProposal
                        {
                            if (projCostTransSale.canBeMarkedForCreditNote())
                            {
                                element.initFromCost(ProjInvoiceCostDetail::find(projCostTransSale.RecId));
                            }
                        }
                    }

                    element.setButtons(tableNum(ProjInvoiceCostDetail));
                    break;

                case tableNum(ProjInvoiceJour):
                    element.initFromJournal();
                    break;
            }

            projInvoiceCostDetail.setTmpData(projInvoiceCostDetailTmp);

            select firstonly tmpProjTransIdCost;
            if (!tmpProjTransIdCost)
            {
                cost.visible(false);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjInvoiceItemDetail</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (projCreditInvoicing)
            {
                element.setCreditInvoicing(tableNum(ProjInvoiceItemDetail), tmpProjTransIdItem);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (element.args().dataset() == tableNum(ProjItemTrans) ||
                element.args().dataset() == tableNum(ProjInvoiceJour)
               )
            {
                super();

                if (this.query().dataSourceNo(1))
                {
                    this.query().dataSourceNo(1).clearDynalinks();
                }
            }

            projInvoiceItemDetail.setTmp();

            projInvoiceItemDetailTmp.setTmp();
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            FormDataSource      callerDataSource;
            ProjItemTrans       callerProjItemTrans;
            ProjItemTransSale   projItemTransSale;

            switch (element.args().dataset())
            {
                case tableNum(ProjItemTrans):
                    delete_from tmpProjTransIdItem;
                    delete_from projInvoiceItemDetailTmp;
                    callerDataSource = FormDataUtil::getFormDataSource(element.args().record());
                    callerProjItemTrans.clear();
                    callerProjItemTrans = element.args().record();

                    for (callerProjItemTrans = callerDataSource.getFirst(true)
                        ? callerDataSource.getFirst(true)
                        : callerDataSource.cursor(); callerProjItemTrans; callerProjItemTrans = callerDataSource.getNext())
                    {
                        while select projItemTransSale
                            where projItemTransSale.ProjTransId == callerProjItemTrans.ProjTransId &&
                              projItemTransSale.TransStatus != ProjTransStatus::CreditnoteProposal
                        {
                            if (projItemTransSale.canBeMarkedForCreditNote())
                            {
                                element.initFromItem(ProjInvoiceItemDetail::find(projItemTransSale.RecId));
                            }
                        }
                    }

                    element.setButtons(tableNum(ProjInvoiceItemDetail));
                    break;

                case tableNum(ProjInvoiceJour):
                    element.initFromJournal();
                    break;
            }

            projInvoiceItemDetail.setTmpData(projInvoiceItemDetailTmp);

            select firstonly tmpProjTransIdItem;
            if (!tmpProjTransIdItem)
            {
                item.visible(false);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>markTrans</Name>
						<Source><![CDATA[
        edit NoYes markTrans(boolean                _set,
                             ProjInvoiceItemDetail  _projInvoiceItemDetail,
                             NoYes                  _mark)
        {
            TmpProjTransId  tmpProjTransId = element.findTmpProjTransId(_projInvoiceItemDetail.SaleRefRecId,tmpProjTransIdItem);

            return element.editMark(_set, tmpProjTransId, _mark);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjInvoiceOnAccDetail</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (projCreditInvoicing)
            {
                element.setCreditInvoicing(tableNum(ProjInvoiceOnAccDetail), tmpProjTransIdOnAcc);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (element.args().dataset() == tableNum(ProjOnAccTrans) ||
                element.args().dataset() == tableNum(ProjInvoiceJour)
               )
            {
                super();

                if (this.query().dataSourceNo(1))
                {
                    this.query().dataSourceNo(1).clearDynalinks();
                }
            }

            projInvoiceOnAccDetail.setTmp();

            projInvoiceOnAccDetailTmp.setTmp();
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            FormDataSource      callerDataSource;
            ProjOnAccTrans      callerProjOnAccTrans;
            ProjOnAccTransSale  projOnAccTransSale;

            switch (element.args().dataset())
            {
                case tableNum(ProjOnAccTrans):
                    delete_from tmpProjTransIdOnAcc;
                    delete_from projInvoiceOnAccDetailTmp;
                    callerDataSource = FormDataUtil::getFormDataSource(element.args().record());
                    callerProjOnAccTrans.clear();
                    callerProjOnAccTrans = element.args().record();

                    for (callerProjOnAccTrans = callerDataSource.getFirst(true)
                        ? callerDataSource.getFirst(true)
                        : callerDataSource.cursor(); callerProjOnAccTrans; callerProjOnAccTrans = callerDataSource.getNext())
                    {
                        while select projOnAccTransSale
                            where projOnAccTransSale.TransId == callerProjOnAccTrans.TransId &&
                              projOnAccTransSale.TransStatus != ProjTransStatus::CreditnoteProposal
                        {
                            if (projOnAccTransSale.canBeMarkedForCreditNote())
                            {
                                element.initFromOnAcc(ProjInvoiceOnAccDetail::find(projOnAccTransSale.RecId));
                            }
                        }
                    }

                    element.setButtons(tableNum(ProjInvoiceOnAccDetail));

                    break;

                case tableNum(ProjInvoiceJour):
                    element.initFromJournal();
                    break;
            }

            projInvoiceOnAccDetail.setTmpData(projInvoiceOnAccDetailTmp);

            select firstonly tmpProjTransIdOnAcc;
            if (!tmpProjTransIdOnAcc)
            {
                onAcc.visible(false);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>markTrans</Name>
						<Source><![CDATA[
        edit NoYes markTrans(boolean                _set,
                             ProjInvoiceOnAccDetail _projInvoiceOnAccDetail,
                             NoYes                  _mark)
        {
            TmpProjTransId  tmpProjTransId = element.findTmpProjTransId(_projInvoiceOnAccDetail.SaleRefRecId,tmpProjTransIdOnAcc);

            return element.editMark(_set, tmpProjTransId, _mark);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjInvoiceRevenueDetail</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (projCreditInvoicing)
            {
                element.setCreditInvoicing(tableNum(ProjInvoiceRevenueDetail), tmpProjTransIdRevenue);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (element.args().dataset() == tableNum(ProjRevenueTrans)||
                element.args().dataset() == tableNum(ProjInvoiceJour)
                )
            {
                super();

                if (this.query().dataSourceNo(1))
                {
                    this.query().dataSourceNo(1).clearDynalinks();
                }
            }

            projInvoiceRevenueDetail.setTmp();

            projInvoiceRevenueDetailTmp.setTmp();
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            FormDataSource          callerDataSource;
            ProjRevenueTrans        callerProjRevenueTrans;
            ProjRevenueTransSale    projRevenueTransSale;

            switch (element.args().dataset())
            {
                case tableNum(ProjRevenueTrans):
                    delete_from tmpProjTransIdRevenue;
                    delete_from projInvoiceRevenueDetailTmp;
                    callerDataSource = FormDataUtil::getFormDataSource(element.args().record());
                    callerProjRevenueTrans.clear();
                    callerProjRevenueTrans  = element.args().record();

                    for (callerProjRevenueTrans = callerDataSource.getFirst(true)
                        ? callerDataSource.getFirst(true)
                        : callerDataSource.cursor(); callerProjRevenueTrans;callerProjRevenueTrans = callerDataSource.getNext())
                    {
                        if (!ProjCategory::find(callerProjRevenueTrans.CategoryId).SetupSubscription)
                        {
                            while select projRevenueTransSale
                                where projRevenueTransSale.TransId == callerProjRevenueTrans.TransId && 
                                  projRevenueTransSale.TransStatus != ProjTransStatus::CreditnoteProposal
                            {
                                if (projRevenueTransSale.canBeMarkedForCreditNote())
                                {
                                    element.initFromRevenue(ProjInvoiceRevenueDetail::find(projRevenueTransSale.RecId));
                                }
                            }
                        }
                    }

                    element.setButtons(tableNum(ProjInvoiceRevenueDetail));

                    break;

                case tableNum(ProjInvoiceJour):
                    element.initFromJournal();
                    break;
            }

            projInvoiceRevenueDetail.setTmpData(projInvoiceRevenueDetailTmp);

            select firstonly tmpProjTransIdRevenue;
            if (!tmpProjTransIdRevenue)
            {
                revenue.visible(false);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>markTrans</Name>
						<Source><![CDATA[
        edit NoYes markTrans(boolean                    _set,
                             ProjInvoiceRevenueDetail   _projInvoiceRevenueDetail,
                             NoYes                      _mark)
        {
            TmpProjTransId  tmpProjTransId = element.findTmpProjTransId(_projInvoiceRevenueDetail.SaleRefRecId,tmpProjTransIdRevenue);

            return element.editMark(_set, tmpProjTransId, _mark);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjInvoiceRevenueDetailSubscription</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (projCreditInvoicing)
            {
                element.setCreditInvoicing(tableNum(ProjInvoiceRevenueDetail), tmpProjTransIdSubscription);
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            FormDataSource      callerDataSource;
            ProjRevenueTrans    callerProjTransRevenue;
            ProjRevenueTransSale    projRevenueTransSale;

            switch (element.args().dataset())
            {
                case tableNum(ProjRevenueTrans):
                    delete_from tmpProjTransIdSubscription;
                    delete_from projInvoiceSubscriptionTmp;
                    callerDataSource = FormDataUtil::getFormDataSource(element.args().record());
                    callerProjTransRevenue.clear();
                    callerProjTransRevenue = element.args().record();

                    for (callerProjTransRevenue = callerDataSource.getFirst(true)
                        ? callerDataSource.getFirst(true)
                        : callerDataSource.cursor(); callerProjTransRevenue;callerProjTransRevenue = callerDataSource.getNext())
                    {
                        if (ProjCategory::find(callerProjTransRevenue.CategoryId).SetupSubscription)
                        {
                            while select projRevenueTransSale
                                where projRevenueTransSale.TransId == callerProjTransRevenue.TransId &&
                                  projRevenueTransSale.TransStatus != ProjTransStatus::CreditnoteProposal
                            {
                                if (projRevenueTransSale.canBeMarkedForCreditNote())
                                {
                                    element.initFromSubscription(ProjInvoiceRevenueDetail::find(projRevenueTransSale.RecId));
                                }
                            }
                        }
                    }

                    break;

                case tableNum(ProjInvoiceJour):
                    element.initFromJournal();
                    break;
            }

            projInvoiceRevenueDetailSubscription.setTmpData(projInvoiceSubscriptionTmp);

            super();

            select firstonly tmpProjTransIdSubscription;
            if (!tmpProjTransIdSubscription)
            {
                subscription.visible(false);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (element.args().dataset() == tableNum(ProjRevenueTrans)||
                element.args().dataset() == tableNum(ProjInvoiceJour)
                )
            {
                super();

                if (this.query().dataSourceNo(1))
                {
                    this.query().dataSourceNo(1).clearDynalinks();
                }
            }

            projInvoiceRevenueDetailSubscription.setTmp();

            projInvoiceSubscriptionTmp.setTmp();
        }

]]></Source>
					</Method>
					<Method>
						<Name>markTrans</Name>
						<Source><![CDATA[
        edit NoYes markTrans(boolean                    _set,
                             ProjInvoiceRevenueDetail   _projInvoiceRevenueDetail,
                             NoYes                      _mark)
        {
            TmpProjTransId  tmpProjTransId = element.findTmpProjTransId(_projInvoiceRevenueDetail.SaleRefRecId,tmpProjTransIdSubscription);

            return element.editMark(_set, tmpProjTransId, _mark);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ButtonSelectHours</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMulti(true,tmpProjTransIdEmpl);
            ProjInvoiceEmplDetail_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonDeselectHours</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMulti(false,tmpProjTransIdEmpl);
            ProjInvoiceEmplDetail_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonCreditInvoicingHours</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        [SuppressBPWarning('BPDeprecatedClassMethod', 'PostR1TODO')]
        void clicked()
        {
            Args    args;
            FormRun formRun;

            select RefRecId from tmpProjTransIdEmpl
                where tmpProjTransIdEmpl.RecId == projInvoiceEmplDetail.RecId;

            args = new Args();
            args.name(formStr(CustVendCreditInvoicing));
            args.record(projInvoiceEmplDetail);
            formRun = classfactory.formRunClass(args);
            formRun.projRelatedRecId(tmpProjTransIdEmpl.RefRecId);
            formRun.init();
            formRun.run();
            formRun.wait();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSelectCost</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMulti(true,tmpProjTransIdCost);
            ProjInvoiceCostDetail_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonDeselectCost</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMulti(false,tmpProjTransIdCost);
            ProjInvoiceCostDetail_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonCreditInvoicingCost</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        [SuppressBPWarning('BPDeprecatedClassMethod', 'PostR1TODO')]
        void clicked()
        {
            Args    args;
            FormRun formRun;

            select RefRecId from tmpProjTransIdCost
                where tmpProjTransIdCost.RecId == projInvoiceCostDetail.RecId;

            args = new Args();
            args.name(formStr(CustVendCreditInvoicing));
            args.record(projInvoiceCostDetail);
            formRun = classfactory.formRunClass(args);
            formRun.projRelatedRecId(tmpProjTransIdCost.RefRecId);
            formRun.init();
            formRun.run();
            formRun.wait();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSelectItem</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMulti(true,tmpProjTransIdItem);
            ProjInvoiceItemDetail_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonDeselectItem</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMulti(false,tmpProjTransIdItem);
            ProjInvoiceItemDetail_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonCreditInvoicingItem</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        [SuppressBPWarning('BPDeprecatedClassMethod', 'PostR1TODO')]
        void clicked()
        {
            Args    args;
            FormRun formRun;

            select RefRecId from tmpProjTransIdItem
                where tmpProjTransIdItem.RecId == projInvoiceItemDetail.RecId;

            args = new Args();
            args.name(formStr(CustVendCreditInvoicing));
            args.record(projInvoiceItemDetail);
            formRun = classfactory.formRunClass(args);
            formRun.projRelatedRecId(tmpProjTransIdItem.RefRecId);
            formRun.init();
            formRun.run();
            formRun.wait();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSelectRevenue</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMulti(true,tmpProjTransIdRevenue);
            ProjInvoiceRevenueDetail_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonDeselectRevenue</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMulti(false,tmpProjTransIdRevenue);
            ProjInvoiceRevenueDetail_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonCreditInvoicingRevenue</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        [SuppressBPWarning('BPDeprecatedClassMethod', 'PostR1TODO')]
        void clicked()
        {
            Args    args;
            FormRun formRun;

            select RefRecId from tmpProjTransIdRevenue
                where tmpProjTransIdRevenue.RecId == projInvoiceRevenueDetail.RecId;

            args = new Args();
            args.name(formStr(CustVendCreditInvoicing));
            args.record(projInvoiceRevenueDetail);
            formRun = classfactory.formRunClass(args);
            formRun.projRelatedRecId(tmpProjTransIdRevenue.RefRecId);
            formRun.init();
            formRun.run();
            formRun.wait();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSelectSubscription</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMulti(true,tmpProjTransIdSubscription);
            ProjInvoiceRevenueDetailSubscription_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonDeselectSubscription</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMulti(false,tmpProjTransIdSubscription);
            ProjInvoiceRevenueDetailSubscription_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonCreditInvoicingSubscription</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        [SuppressBPWarning('BPDeprecatedClassMethod', 'PostR1TODO')]
        void clicked()
        {
            Args    args;
            FormRun formRun;

            select RefRecId from tmpProjTransIdSubscription
                where tmpProjTransIdSubscription.RecId == projInvoiceRevenueDetailSubscription.RecId;

            args = new Args();
            args.name(formStr(CustVendCreditInvoicing));
            args.record(projInvoiceRevenueDetailSubscription);
            formRun = classfactory.formRunClass(args);
            formRun.projRelatedRecId(tmpProjTransIdSubscription.RefRecId);
            formRun.init();
            formRun.run();
            formRun.wait();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSelectOnAcc</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMulti(true,tmpProjTransIdOnAcc);
            ProjInvoiceOnAccDetail_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonDeselectOnAcc</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMulti(false,tmpProjTransIdOnAcc);
            ProjInvoiceOnAccDetail_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonCreditInvoicingOnAcc</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        [SuppressBPWarning('BPDeprecatedClassMethod', 'PostR1TODO')]
        void clicked()
        {
            Args    args;
            FormRun formRun;

            select RefRecId from tmpProjTransIdOnAcc
                where tmpProjTransIdOnAcc.RecId == projInvoiceOnAccDetail.RecId;

            args = new Args();
            args.name(formStr(CustVendCreditInvoicing));
            args.record(projInvoiceOnAccDetail);
            formRun = classfactory.formRunClass(args);
            formRun.projRelatedRecId(tmpProjTransIdOnAcc.RefRecId);
            formRun.init();
            formRun.run();
            formRun.wait();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSelectAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMultiAll(true);
            element.researchAllDataSources();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonDeselectAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.selectMultiAll(false);
            element.researchAllDataSources();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProjInvoiceEmpl</Name>
			<Table>ProjInvoiceEmpl</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_Worker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_WorkerLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAContractLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWriteCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjInvoiceEmplDetail</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjInvoiceCost</Name>
			<Table>ProjInvoiceCost</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>del_Dimension[1]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>del_Dimension[2]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>del_Dimension[3]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>del_Dimension[4]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>del_Dimension[5]</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_Worker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_WorkerLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAContractLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWriteCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjInvoiceCostDetail</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjInvoiceItem</Name>
			<Table>ProjInvoiceItem</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditNoteInternalRef_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExternalItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatDispatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatFulfillmentDate_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerStatusCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinePercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NGPCodesTable_FR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigCountryRegionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrigState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Port</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAdjustRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAContractLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyPhysical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefReturnInvoiceTrans_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Remain</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesMarkup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDocumentLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>statProcId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWriteCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transport</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Weight</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjInvoiceItemDetail</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjInvoiceOnAcc</Name>
			<Table>ProjInvoiceOnAcc</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAContractLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAIsOnAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSARefRecIdBudgetTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSARefTableIdBudgetTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWriteCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjInvoiceOnAccDetail</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjInvoiceRevenue</Name>
			<Table>ProjInvoiceRevenue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_Worker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsReleased</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsRetained</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAContractLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SMABasePrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SMAEnddate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SMAIndex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SMAStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SMASubscriptionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWriteCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjInvoiceRevenueDetail</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjInvoiceRevenueSubscription</Name>
			<Table>ProjInvoiceRevenue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsReleased</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsRetained</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAContractLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SMABasePrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SMAEnddate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SMAIndex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SMAStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SMASubscriptionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWriteCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjInvoiceRevenueDetailSubscription</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjInvoiceEmplDetail</Name>
			<Table>ProjInvoiceEmplDetail</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CostValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SaleRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjInvoiceCostDetail</Name>
			<Table>ProjInvoiceCostDetail</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CostAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SaleRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjInvoiceItemDetail</Name>
			<Table>ProjInvoiceItemDetail</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CostValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SaleRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjInvoiceOnAccDetail</Name>
			<Table>ProjInvoiceOnAccDetail</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SaleRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPPeriod</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjInvoiceRevenueDetail</Name>
			<Table>ProjInvoiceRevenueDetail</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SaleRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjInvoiceRevenueDetailSubscription</Name>
			<Table>ProjInvoiceRevenueDetail</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SaleRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjRevenueTransSale_IN</Name>
			<Table>ProjRevenueTransSale</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ControlId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ControlVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerSalesAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerSalesPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerTransdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjProposalId_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSARefREcId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSARetentionPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAsPerOriginalInvoice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjInvoiceRevenueDetail</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjEmplTransSale_IN</Name>
			<Table>ProjEmplTransSale</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ControlId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ControlVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerSalesAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerSalesPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerTransdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjProposalId_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAIndirectInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAIndirectRevenue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAsPerOriginalInvoice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjInvoiceEmplDetail</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjCostTransSale_IN</Name>
			<Table>ProjCostTransSale</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ControlId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ControlVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerSalesAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerSalesPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerTransdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjProposalId_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAsPerOriginalInvoice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjInvoiceCostDetail</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjItemTransSale_IN</Name>
			<Table>ProjItemTransSale</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ControlId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ControlVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerSalesAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerSalesPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerTransdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjProposalId_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAsPerOriginalInvoice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjInvoiceItemDetail</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjOnAccTransSale_IN</Name>
			<Table>ProjOnAccTransSale</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerSalesAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerTransdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjProposalId_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAsPerOriginalInvoice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPPeriod</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjInvoiceOnAccDetail</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS91353</Caption>
		<DialogSize xmlns="">Large</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tabs</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Empl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>693458260</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>FormActionPaneControl1</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ButtonGroupHours</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<LeftMode>AutoRight</LeftMode>
										<Top>0</Top>
										<TopMode>BottomEdge</TopMode>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonSelectHours</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS91319</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonDeselectHours</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS91320</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonCreditInvoicingHours</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS99718</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalRight</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>EmplGrid</Name>
								<ElementPosition>805306366</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>MarkTransEmpl</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>50</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>MarkTrans</DataMethod>
										<DataSource>ProjInvoiceEmplDetail</DataSource>
										<Label>@SYS7444</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjInvoiceEmpl_TransDate</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>ProjInvoiceEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceEmpl_ProjInvoiceId</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjInvoiceId</DataField>
										<DataSource>ProjInvoiceEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceEmpl_ProjId</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjInvoiceEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceEmpl_CategoryId</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>ProjInvoiceEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceEmpl_ActivityNumber</Name>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>ProjInvoiceEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProjInvoiceEmpl_Resource</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjInvoiceEmpl</DataSource>
										<ReferenceField>Resource</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProjInvoiceEmpl_ResourceCategory</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjInvoiceEmpl</DataSource>
										<ReferenceField>ResourceCategory</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProjInvoiceEmpl_ResourceLegalEntity</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjInvoiceEmpl</DataSource>
										<ReferenceField>ResourceLegalEntity</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceEmpl_Txt</Name>
										<ElementPosition>2139095038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>ProjInvoiceEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjInvoiceEmpl_Qty</Name>
										<ElementPosition>2143289342</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>ProjInvoiceEmpl</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceEmpl_CurrencyId</Name>
										<ElementPosition>2145386494</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyId</DataField>
										<DataSource>ProjInvoiceEmpl</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjInvoiceEmplDetail_SalesPrice</Name>
										<ElementPosition>2146435070</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesPrice</DataField>
										<DataSource>ProjInvoiceEmplDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjInvoiceEmplDetail_LineAmount</Name>
										<ElementPosition>2146959358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineAmount</DataField>
										<DataSource>ProjInvoiceEmplDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceEmpl_TransId</Name>
										<ElementPosition>2147221502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransId</DataField>
										<DataSource>ProjInvoiceEmpl</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ProjInvoiceEmplDetail</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FormGroupControl1</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProjEmplTransSale_IN_TaxAsPerOriginalInvoice_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1207959550</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>TaxAsPerOriginalInvoice_IN</DataField>
										<DataSource>ProjEmplTransSale_IN</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS5269</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Cost</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1040187390</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>FormActionPaneControl2</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ButtonGroupCost</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<LeftMode>AutoRight</LeftMode>
										<Top>0</Top>
										<TopMode>BottomEdge</TopMode>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonSelectCost</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS91321</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonDeselectCost</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS91322</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonCreditInvoicingCost</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS99718</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalRight</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>CostGrid</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>MarkTransCost</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>50</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>MarkTrans</DataMethod>
										<DataSource>ProjInvoiceCostDetail</DataSource>
										<Label>@SYS7444</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjInvoiceCost_TransDate</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>ProjInvoiceCost</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceCost_ProjInvoiceId</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjInvoiceId</DataField>
										<DataSource>ProjInvoiceCost</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceCost_ProjId</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjInvoiceCost</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceCost_CategoryId</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>ProjInvoiceCost</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceCost_ActivityNumber</Name>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>ProjInvoiceCost</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProjInvoiceCost_Resource</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjInvoiceCost</DataSource>
										<ReferenceField>Resource</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProjInvoiceCost_ResourceCategory</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjInvoiceCost</DataSource>
										<ReferenceField>ResourceCategory</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProjInvoiceCost_ResourceLegalEntity</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjInvoiceCost</DataSource>
										<ReferenceField>ResourceLegalEntity</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceCost_Txt</Name>
										<ElementPosition>2147419134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>ProjInvoiceCost</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjInvoiceCost_Qty</Name>
										<ElementPosition>2147420158</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>ProjInvoiceCost</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceCost_CurrencyId</Name>
										<ElementPosition>2147422206</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyId</DataField>
										<DataSource>ProjInvoiceCost</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjInvoiceCostDetail_SalesPrice</Name>
										<ElementPosition>2147426302</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesPrice</DataField>
										<DataSource>ProjInvoiceCostDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjInvoiceCostDetail_LineAmount</Name>
										<ElementPosition>2147434494</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineAmount</DataField>
										<DataSource>ProjInvoiceCostDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceCost_TransId</Name>
										<ElementPosition>2147450878</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransId</DataField>
										<DataSource>ProjInvoiceCost</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ProjInvoiceCostDetail</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FormGroupControl2</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProjCostTransSale_IN_TaxAsPerOriginalInvoice_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1342177278</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxAsPerOriginalInvoice_IN</DataField>
										<DataSource>ProjCostTransSale_IN</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS82720</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Item</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1386916520</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>FormActionPaneControl3</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ButtonGroupItem</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<LeftMode>AutoRight</LeftMode>
										<Top>0</Top>
										<TopMode>BottomEdge</TopMode>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonSelectItem</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS91324</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonDeselectItem</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS91323</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonCreditInvoicingItem</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS99718</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalRight</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>ItemGrid</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>MarkTransItem</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>50</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>MarkTrans</DataMethod>
										<DataSource>ProjInvoiceItemDetail</DataSource>
										<Label>@SYS7444</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjInvoiceItem_TransDate</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>ProjInvoiceItem</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceItem_ProjInvoiceId</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjInvoiceId</DataField>
										<DataSource>ProjInvoiceItem</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceItem_ProjId</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjInvoiceItem</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceItem_CategoryId</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>ProjInvoiceItem</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceItem_ActivityNumber</Name>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>ProjInvoiceItem</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceItem_ItemId</Name>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>ProjInvoiceItem</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceItem_Txt</Name>
										<ElementPosition>2139095038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>ProjInvoiceItem</DataSource>
										<DisplayHeight>1</DisplayHeight>
										<DisplayHeightMode>Fixed</DisplayHeightMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjInvoiceItem_Qty</Name>
										<ElementPosition>2143289342</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>ProjInvoiceItem</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceItem_CurrencyId</Name>
										<ElementPosition>2145386494</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyId</DataField>
										<DataSource>ProjInvoiceItem</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjInvoiceItemDetail_SalesPrice</Name>
										<ElementPosition>2146435070</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesPrice</DataField>
										<DataSource>ProjInvoiceItemDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjInvoiceItemDetail_LineAmount</Name>
										<ElementPosition>2146959358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineAmount</DataField>
										<DataSource>ProjInvoiceItemDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceItem_ProjTransId</Name>
										<ElementPosition>2147221502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjTransId</DataField>
										<DataSource>ProjInvoiceItem</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ProjInvoiceItemDetail</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FormGroupControl3</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProjItemTransSale_IN_TaxAsPerOriginalInvoice_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1342177278</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxAsPerOriginalInvoice_IN</DataField>
										<DataSource>ProjItemTransSale_IN</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS14428</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Revenue</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1733645651</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>FormActionPaneControl4</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ButtonGroupRevenue</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<LeftMode>AutoRight</LeftMode>
										<Top>0</Top>
										<TopMode>BottomEdge</TopMode>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonSelectRevenue</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS91325</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonDeselectRevenue</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS91326</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonCreditInvoicingRevenue</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS99718</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalRight</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>RevenueGrid</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>MarkTransRevenue</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>50</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>MarkTrans</DataMethod>
										<DataSource>ProjInvoiceRevenueDetail</DataSource>
										<Label>@SYS7444</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjInvoiceRevenue_TransDate</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>ProjInvoiceRevenue</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceRevenue_ProjInvoiceId</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjInvoiceId</DataField>
										<DataSource>ProjInvoiceRevenue</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceRevenue_ProjId</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjInvoiceRevenue</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceRevenue_CategoryId</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>ProjInvoiceRevenue</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProjInvoiceRevenue_Resource</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjInvoiceRevenue</DataSource>
										<ReferenceField>Resource</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ProjInvoiceRevenue_ResourceCategory</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>ProjInvoiceRevenue</DataSource>
										<ReferenceField>ResourceCategory</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceRevenue_Txt</Name>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>ProjInvoiceRevenue</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceRevenue_CurrencyId</Name>
										<ElementPosition>2139095038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyId</DataField>
										<DataSource>ProjInvoiceRevenue</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjInvoiceRevenueDetail_LineAmount</Name>
										<ElementPosition>2143289342</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineAmount</DataField>
										<DataSource>ProjInvoiceRevenueDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceRevenue_TransId</Name>
										<ElementPosition>2145386494</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransId</DataField>
										<DataSource>ProjInvoiceRevenue</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ProjInvoiceRevenueDetail</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FormGroupControl4</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProjRevenueTransSale_IN_TaxAsPerOriginalInvoice_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1342177278</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxAsPerOriginalInvoice_IN</DataField>
										<DataSource>ProjRevenueTransSale_IN</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9154</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Subscription</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2080374782</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>FormActionPaneControl5</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ButtonGroupSubcription</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<LeftMode>AutoRight</LeftMode>
										<Top>0</Top>
										<TopMode>BottomEdge</TopMode>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonSelectSubscription</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS91327</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonDeselectSubscription</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS91328</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonCreditInvoicingSubscription</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS99718</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalRight</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>SubscriptionGrid</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>MarkTransSubscription</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>50</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>MarkTrans</DataMethod>
										<DataSource>ProjInvoiceRevenueDetailSubscription</DataSource>
										<Label>@SYS7444</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjInvoiceRevenueSubscription_TransDate</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>ProjInvoiceRevenueSubscription</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceRevenueSubscription_ProjInvoiceId</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjInvoiceId</DataField>
										<DataSource>ProjInvoiceRevenueSubscription</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceRevenueSubscription_ProjId</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjInvoiceRevenueSubscription</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceRevenueSubscription_CategoryId</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>ProjInvoiceRevenueSubscription</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceRevenueSubscription_SMASubscriptionId</Name>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SMASubscriptionId</DataField>
										<DataSource>ProjInvoiceRevenueSubscription</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjInvoiceRevenueSubscription_SMAStartDate</Name>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SMAStartDate</DataField>
										<DataSource>ProjInvoiceRevenueSubscription</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjInvoiceRevenueSubscription_SMAEnddate</Name>
										<ElementPosition>2139095038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SMAEnddate</DataField>
										<DataSource>ProjInvoiceRevenueSubscription</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceRevenueSubscription_CurrencyId</Name>
										<ElementPosition>2143289342</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyId</DataField>
										<DataSource>ProjInvoiceRevenueSubscription</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjInvoiceRevenueDetailSubscription_LineAmount</Name>
										<ElementPosition>2145386494</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineAmount</DataField>
										<DataSource>ProjInvoiceRevenueDetailSubscription</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceRevenueSubscription_TransId</Name>
										<ElementPosition>2146435070</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransId</DataField>
										<DataSource>ProjInvoiceRevenueSubscription</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ProjInvoiceRevenueDetailSubscription</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
						</Controls>
						<Caption>@SYS14482</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>OnAcc</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2113929214</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>FormActionPaneControl6</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ButtonGroupOnAcc</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<LeftMode>AutoRight</LeftMode>
										<Top>0</Top>
										<TopMode>BottomEdge</TopMode>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonSelectOnAcc</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS91329</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonDeselectOnAcc</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS91330</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ButtonCreditInvoicingOnAcc</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS99718</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalRight</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>OnAccGrid</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>MarkTransOnAcc</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>50</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>MarkTrans</DataMethod>
										<DataSource>ProjInvoiceOnAccDetail</DataSource>
										<Label>@SYS7444</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjInvoiceOnAcc_TransDate</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>ProjInvoiceOnAcc</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceOnAcc_ProjInvoiceId</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjInvoiceId</DataField>
										<DataSource>ProjInvoiceOnAcc</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceOnAcc_ProjID</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjInvoiceOnAcc</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceOnAcc_Txt</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>ProjInvoiceOnAcc</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceOnAcc_CurrencyId</Name>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyId</DataField>
										<DataSource>ProjInvoiceOnAcc</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjInvoiceOnAccDetail_Amount</Name>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Amount</DataField>
										<DataSource>ProjInvoiceOnAccDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjInvoiceOnAcc_TransId</Name>
										<ElementPosition>2139095038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransId</DataField>
										<DataSource>ProjInvoiceOnAcc</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ProjInvoiceOnAccDetail</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FormGroupControl5</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProjOnAccTransSale_IN_TaxAsPerOriginalInvoice_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1342177278</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxAsPerOriginalInvoice_IN</DataField>
										<DataSource>ProjOnAccTransSale_IN</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS7659</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>ButtonSelectAll</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Text>@SYS28958</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>ButtonDeselectAll</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Text>@SYS57284</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>1811939326</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>