<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BudgetCreateTransfer</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BudgetCreateTransfer extends FormRun implements DimensionHierarchyIPreview
{
    private const int defaultLineNumber = 1;

    BudgetCreateTransfer                  budgetCreateTransfer;
    BudgetCreateTransferManager           budgetCreateTransferManager;
    BudgetTransactionAllowTransferManager allowTransferManager;
    BudgetTransactionCode                 budgetTransactionCode;
    DimensionHierarchyId                  toAccountStructureId;

    [FormObservable]
    Name                                  toAccountStructureName;

    [FormObservable]
    DimensionDisplayValue                 ledgerDimensionName;

}
]]></Source>
			</Method>
			<Method>
				<Name>getHierarchyId</Name>
				<Source><![CDATA[
    public DimensionHierarchyId getHierarchyId(int _dataSourceId)
    {
        return toAccountStructureId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the package of values from the integrator and validates each.
    /// Also validates that the user has access to create budget transactions of type Transfer.
    /// If any validation fails, the form does not open.
    /// </summary>
    /// <exception cref="Exception::Error">
    /// The arguments are empty or do not contain an object.
    /// </exception>
    /// <exception cref="Exception::Error">
    /// The object contained in the arguments is not of type <c>BudgetCreateTransfer</c>.
    /// </exception>
    /// <exception cref="Exception::Error">
    /// The ledger dimension that was passed did not pass validation.
    /// </exception>
    public void init()
    {
        Query query;

        // Validate that an object has been passed via the Args.
        if (!element.args() || !element.args().parmObject())
        {
            throw error("@SYS22996");
        }

        // Validate that the object passed via the Args is a BudgetCreateTransfer class.
        if (classidget(element.args().parmObject()) != classidget(budgetCreateTransfer))
        {
            throw error(strfmt("@SYS22456", element.name(), classId2Name(classidget(budgetCreateTransfer))));
        }

        budgetTransactionCode = BudgetTransactionCode::findDefaultByTransactionType(BudgetTransactionType::Transfer);

        if (!budgetTransactionCode)
        {
            throw error(strfmt("@SYS329727", enum2str(BudgetTransactionType::Transfer)));
        }

        budgetCreateTransferManager = BudgetCreateTransferManager::construct();
        budgetCreateTransfer = element.args().parmObject();

        super();

        // Initialize the default values for a new transaction state.
        this.initValues();

        // Set the state for Request budget button.
        this.setStateForRequestBudgetButton(budgetCreateTransfer.parmCurrencyAmount());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the default values for a new transaction state.
    /// </summary>
    private void initValues()
    {
        // Create a new budget transaction header record.
        budgetTransactionHeader_ds.create();

        // Set the default values on the header.
        budgetTransactionHeader.TransferSourceNumber = budgetCreateTransfer.parmBudgetTransferSourceNumber();
        budgetTransactionHeader.Date = budgetCreateTransfer.parmToLedgerDimensionDate();
        budgetTransactionHeader.editBudgetModel(true, budgetCreateTransfer.parmBudgetModel());

        // Set budget transaction code to the default code for the Transfer transaction type.
        budgetTransactionHeader.setBudgetTransactionCode(budgetTransactionCode.RecId);

        // Set the transaction to in use by the current user.
        budgetTransactionHeader.InUseBy = curuserid();

        // Create a new budget transaction line record.
        toBudgetTransactionLine_ds.create();

        // Set the default values on the line.
        toBudgetTransactionLine.LineNumber = defaultLineNumber;
        toBudgetTransactionLine.LedgerDimension = budgetCreateTransfer.parmToLedgerDimension();
        toBudgetTransactionLine.BudgetType = budgetCreateTransfer.parmBudgetType();
        toBudgetTransactionLine.TransactionCurrency = budgetCreateTransfer.parmCurrency();
        toBudgetTransactionLine.setTransactionCurrencyAmount(true, budgetCreateTransfer.parmCurrencyAmount());

        // Get the account structure from the ledger dimension.
        DimensionHierarchy accountStructure = DimensionHierarchy::find(
            DimensionAttributeValueCombination::find(budgetCreateTransfer.parmToLedgerDimension()).AccountStructure);
        toAccountStructureId = accountStructure.RecId;
        toAccountStructureName = accountStructure.Name;

        // Set the display value name for the ledger dimension.
        ledgerDimensionName = BudgetPrimaryLedgerDimensionAttribute::getBudgetDimensionAttributeValueDisplayNames(
            Ledger::current(),
            toAccountStructureId,
            budgetCreateTransfer.parmToLedgerDimension());

        // Don't allow users to create additional budget transactions
        budgetTransactionHeader_ds.allowCreate(false);
        toBudgetTransactionLine_ds.allowCreate(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStateForRequestBudgetButton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the state for Request budget button.
    /// </summary>
    /// <param name = "_currencyAmount">
    /// The amount of budget requested.
    /// </param>
    private void setStateForRequestBudgetButton(AmountMST _currencyAmount)
    {
        if (_currencyAmount > 0)
        {
            // Enable the button if the requested budget amount is greater than 0.
            RequestBudgetButton.enabled(true);
        }
        else
        {
            // Disable the button if the requested budget amount is less than or equal to 0.
            RequestBudgetButton.enabled(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>BudgetTransactionHeader</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validates the budget transaction header before a write.
        /// </summary>
        /// <returns>
        /// The result of calling the formMethodDataSourceValidateWrite and
        /// validateCurrency methods.
        /// </returns>
        public boolean validateWrite()
        {
            boolean ret;

            ret = super();

            ret = ret && budgetCreateTransferManager.formMethodDataSourceValidateWrite(element, budgetTransactionHeader_ds);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Manages the number sequence during a write.
        /// </summary>
        public void write()
        {
            if (!budgetTransactionHeader.RecId)
            {
                budgetCreateTransferManager.formMethodDataSourceWrite(element, budgetTransactionHeader_ds);
            }

            super();

            // Construct an instance of the allow transfer manager and process the transaction.
            allowTransferManager = BudgetTransactionAllowTransferManager::construct(budgetTransactionHeader.RecId);
            allowTransferManager.checkBudgetTransaction(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        /// <summary>
        /// Manages the number seqence during the creation of a budget transaction header.
        /// </summary>
        /// <param name="_append">
        /// A Boolean flag that indicates whether to insert the record after or before the current
        /// cursor position. If true, the new record is inserted after the current record.
        /// </param>
        public void create(boolean _append = false)
        {
            boolean ret;

            // Validate the number sequence for Budget Transaction Number.
            ret = BudgetTransactionManager::checkBudgetTransactionNumberSequence();

            if (ret)
            {
                super(_append);
                budgetCreateTransferManager.formMethodDataSourceCreate(element, budgetTransactionHeader_ds);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>editBudgetTransactionCode</Name>
						<Source><![CDATA[
        /// <summary>
        /// Manages the setting of the budget transaction code for the budget transfer.
        /// </summary>
        /// <param name="_set">
        /// Determines if the budget transaction code is being set or read.
        /// </param>
        /// <param name="_budgetTransactionCode">
        /// The budget transaction code that was selected by a user.
        /// </param>
        /// <returns>
        /// The budget transaction code of the transfer transaction.
        /// </returns>
        public edit BudgetCode editBudgetTransactionCode(boolean _set, BudgetCode _budgetTransactionCode)
        {
            BudgetTransactionCode localBudgetTransactionCode;

            if (_set && hasTableAccess(tablenum(BudgetTransactionCode)))
            {
                if (BudgetCreateTransferManager::validateBudgetTransactionCode(_budgetTransactionCode))
                {
                    localBudgetTransactionCode = BudgetTransactionCode::findByBudgetTransactionCode(_budgetTransactionCode);

                    budgetTransactionHeader.setBudgetTransactionCode(localBudgetTransactionCode.RecId);
                }
            }

            return BudgetTransactionCode::find(budgetTransactionHeader.BudgetTransactionCode).Name;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ToBudgetTransactionLine</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // Initialize the line with values from the header.
            toBudgetTransactionLine.initFromBudgetTransactionHeader(budgetTransactionHeader);

            BudgetTransactionManager::formMethodDataSourceWriteLine(toBudgetTransactionLine_ds);

            // Check whether the to line is allowed to transfer.
            allowTransferManager.checkBudgetTransactionLine(toBudgetTransactionLine.RecId, true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayAccountStructure</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns the display value for account structure name.
        /// </summary>
        public display Name displayAccountStructure()
        {
            return toAccountStructureName;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayLedgerDimensionName</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns the display value for ledger dimension name.
        /// </summary>
        public display Name displayLedgerDimensionName()
        {
            return ledgerDimensionName;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>BudgetTransactionHeader_BudgetModel</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables the 'Go to Main Table Form' option of the context menu for Budget Model field.
        /// </summary>
        public void jumpRef()
        {
            BudgetModel budgetModelLocal = BudgetModel::find(HeadingSub::Heading, budgetTransactionHeader.BudgetModelId);

            BudgetModel::jumpRefBudgetModel(budgetModelLocal, this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Creates the lookup for the budget model field.
        /// </summary>
        public void lookup()
        {
            BudgetModel::lookupBudgetModel(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetTransactionHeader_BudgetTransactionCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables the 'Go to Main Table Form' option of the context menu for Budget Transaction Code field.
        /// </summary>
        public void jumpRef()
        {
            BudgetTransactionCode localBudgetTransactionCode = BudgetTransactionCode::find(budgetTransactionHeader.BudgetTransactionCode);

            BudgetTransactionCode::jumpRefBudgetTransactionCode(localBudgetTransactionCode, this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Creates the lookup for the budget transaction code field.
        /// </summary>
        public void lookup()
        {
            BudgetCreateTransferManager::lookupBudgetTransactionCode(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToBudgetTransactionLine_AccountStructure</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            DimensionHierarchyId accountStructureId = DimensionHierarchy::findByTypeAndName(DimensionHierarchyType::AccountStructure, this.valueStr()).RecId;
            DimensionHierarchyHelper::jumpRefAccountStructure(accountStructureId, element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToBudgetTransactionLine_TransactionCurrencyAmount</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                element.setStateForRequestBudgetButton(this.realValue());
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RequestBudgetButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Saves the created Transfer budget transaction and closes the form.
        /// </summary>
        public void clicked()
        {
            // Save the budget transaction header and line records.
            budgetTransactionHeader_ds.write();
            toBudgetTransactionLine_ds.write();

            // The user will no longer have this Transfer budget transaction in use when the form closes.
            BudgetTransactionManager::clearInUse(budgetTransactionHeader.RecId);

            // Inform the user that the budget transfer request was created successfully.
            Box::info("@Budget:TransferRequestCreated");

            element.close();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CancelButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Cancel the created Transfer budget transaction and closes the form.
        /// </summary>
        public void clicked()
        {
            element.close();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>BudgetTransactionHeader</Name>
			<Table>BudgetTransactionHeader</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BudgetModelDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetModelId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetModelType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetSubModelId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetTransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetTransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InUseBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsOneTimeAmendment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryLedger</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonTableRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferSourceNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkflowStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Date</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ToBudgetTransactionLine</Name>
			<Table>BudgetTransactionLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetBudget</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetBudget_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetTransactionHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Comment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GeneralJournalEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeInCashFlowForecast</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransBudgetTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkflowStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Date</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<CounterField>LineNumber</CounterField>
			<Index>LineNumberIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<BottomMargin xmlns="">0</BottomMargin>
		<BottomMarginMode xmlns="">Fixed</BottomMarginMode>
		<Caption xmlns="">@Budget:CreateTransferRequest</Caption>
		<DataSource xmlns="">BudgetTransactionHeader</DataSource>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<LeftMargin xmlns="">0</LeftMargin>
		<LeftMarginMode xmlns="">Fixed</LeftMarginMode>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<RightMargin xmlns="">0</RightMargin>
		<RightMarginMode xmlns="">Fixed</RightMarginMode>
		<SaveSize xmlns="">No</SaveSize>
		<SetCompany xmlns="">No</SetCompany>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<TitleDataSource xmlns="">BudgetTransactionHeader</TitleDataSource>
		<TopMargin xmlns="">0</TopMargin>
		<TopMarginMode xmlns="">Fixed</TopMarginMode>
		<WindowResize xmlns="">Dynamic</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>BudgetTransactionHeader_TransactionNumber</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_Budgeting:BudgetCreateTransfer_BudgetTransactionHeader_TransactionNumber</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>TransactionNumber</DataField>
						<DataSource>BudgetTransactionHeader</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>BudgetTransactionHeader_BudgetModel</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_Budgeting:BudgetCreateTransfer_BudgetTransactionHeader_BudgetModel</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editBudgetModel</DataMethod>
						<DataSource>BudgetTransactionHeader</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>BudgetTransactionHeader_BudgetTransactionCode</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_Budgeting:BudgetCreateTransfer_BudgetTransactionHeader_BudgetTransactionCode</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editBudgetTransactionCode</DataMethod>
						<DataSource>BudgetTransactionHeader</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>BudgetTransactionHeader_Date</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_Budgeting:BudgetCreateTransfer_BudgetTransactionHeader_Date</HelpText>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Date</DataField>
						<DataSource>BudgetTransactionHeader</DataSource>
						<Label>@SYS67</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ToBudgetTransactionLine_TransactionCurrency</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_Budgeting:BudgetCreateTransfer_ToBudgetTransactionLine_TransactionCurrency</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>TransactionCurrency</DataField>
						<DataSource>ToBudgetTransactionLine</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ToBudgetTransactionLine_AccountStructure</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<HelpText>@FieldDescriptions_Budgeting:BudgetCreateTransfer_ToBudgetTransactionLine_AccountStructure</HelpText>
						<PreviewPartRef>DimensionHierarchyPreview</PreviewPartRef>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayAccountStructure</DataMethod>
						<DataSource>ToBudgetTransactionLine</DataSource>
						<Label>@SYS129015</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormSegmentedEntryControl">
						<Name>ToBudgetTransactionLine_LedgerDimension</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_Budgeting:BudgetCreateTransfer_ToBudgetTransactionLine_LedgerDimension</HelpText>
						<Type>SegmentedEntry</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>SegmentedEntryControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>parmControllerClassName</Name>
									<Type>String</Type>
									<Value>BudgetLedgerDimensionController</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmAccountTypeEnumName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIsDefaultAccount</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmValidateBlockedForManualEntry</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmLockMainAccountSegment</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmPostingType</Name>
									<Type>Enum</Type>
									<TypeName>LedgerPostingType</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIncludeTotalAccounts</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIncludeFinancialAccounts</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
						<DataSource>ToBudgetTransactionLine</DataSource>
						<Label>@SYS152282</Label>
						<ReferenceField>LedgerDimension</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ToBudgetTransactionLine_LedgerDimensionName</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayLedgerDimensionName</DataMethod>
						<DataSource>ToBudgetTransactionLine</DataSource>
						<Label>@SYS92116</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>ToBudgetTransactionLine_TransactionCurrencyAmount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<HelpText>@FieldDescriptions_Budgeting:BudgetCreateTransfer_ToBudgetTransactionLine_TransactionCurrencyAmount</HelpText>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>editTransactionCurrencyAmount</DataMethod>
						<DataSource>ToBudgetTransactionLine</DataSource>
						<Label>@SYS98362</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ToBudgetTransactionLine_Comment</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Comment</DataField>
						<DataSource>ToBudgetTransactionLine</DataSource>
					</AxFormControl>
				</Controls>
				<BottomMargin>11</BottomMargin>
				<BottomMarginMode>Fixed</BottomMarginMode>
				<LeftMargin>11</LeftMargin>
				<LeftMarginMode>Fixed</LeftMarginMode>
				<RightMargin>11</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<TopMargin>11</TopMargin>
				<TopMarginMode>Fixed</TopMarginMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogCommit</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>RequestBudgetButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<SaveRecord>No</SaveRecord>
						<Text>@Budget:RequestTransfer</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Columnspace>5</Columnspace>
				<ColumnspaceMode>Fixed</ColumnspaceMode>
				<DataSource>BudgetTransactionHeader</DataSource>
				<FrameType>None</FrameType>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>