<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailCommerceValidatorResultsByRules</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailCommerceValidatorResultsByRules extends FormRun
{
    private RetailCommerceValidator commerceValidator;
    private RetailCommerceValidatorId validationId;
    private RefRecId currentBatchJob;
    private NoYes isAutomatedRun;
    private RetailCommerceValidatorResultStatusFilter resultStatusFilter = RetailCommerceValidatorResultStatusFilter::All;
    private QueryBuildDataSource qbdsLog;
    private QueryBuildRange qbrValidationLog;
    private QueryBuildRange qbrCurrentBatchJobLog;
    private QueryBuildDataSource qbdsLogContext;
    private QueryBuildRange qbrValidationLogContext;
    private QueryBuildRange qbrCurrentBatchJobLogContext;

}
]]></Source>
			</Method>
			<Method>
				<Name>toggleRulesResultsSectionVisibility</Name>
				<Source><![CDATA[
    /// <summary>
    /// manages the visibility of Entity results group.
    /// </summary>
    /// <param name = "_sender"> From control</param>
    /// <param name = "_e">FormControlEventArgs of the toggle button</param>
    private void toggleRulesResultsSectionVisibility(FormControl _sender, FormControlEventArgs _e)
    {
        FormButtonControl switchButton = _sender as FormButtonControl;

        RulesResultsGroup.visible(!RulesResultsGroup.visible());

        if (RulesResultsGroup.visible())
        {
            switchButton.normalImage(ImageReferenceSymbol::CaretLeft);
            switchButton.text("@Retail:HideDetails");
        }
        else
        {
            switchButton.normalImage(ImageReferenceSymbol::CaretRight);
            switchButton.text("@Retail:ShowDetails");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes form.
    /// </summary>
    public void init()
    {
        element.getCallerValidatorRecord();

        super();

        ResultStatus.selection(resultStatusFilter);
        ToggleRulesResultsSection.OnClicked += eventhandler(this.toggleRulesResultsSectionVisibility);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCallerValidatorRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>RetailCommerceValidator</c> tables buffer of caller.
    /// </summary>
    private void getCallerValidatorRecord()
    {
        FormRun formRun = element.args().caller();
        FormDataSource commerceValidatorDataSource;

        if(formRun)
        {
            for (int i = 0; i <= formRun.dataSourceCount(); i++)
            {
                commerceValidatorDataSource = formRun.dataSource(i);

                if (commerceValidatorDataSource.table() == tableNum(RetailCommerceValidator))
                {
                    commerceValidator = commerceValidatorDataSource.cursor();
                    break;
                }
            }
        }

        validationId = commerceValidator.ValidationId;
        currentBatchJob = commerceValidator.CurrentBatchJobId;
        isAutomatedRun = commerceValidator.IsAutomatedRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setResultStatusFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value for result status filter.
    /// </summary>
    /// <param name = "_resultStatusFilter">The enum value of <c>RetailCommerceValidatorResultStatusFilter</c></param>
    public void setResultStatusFilter(RetailCommerceValidatorResultStatusFilter _resultStatusFilter = resultStatusFilter)
    {
        resultStatusFilter = _resultStatusFilter;

        // Set the result status filter if the ResultStatus control is initialised.
        if(ResultStatus)
        {
            ResultStatus.selection(_resultStatusFilter);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RetailCommerceValidatorRules</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes the query
        /// </summary>
        public void executeQuery()
        {
            QueryBuildDataSource qbdsRules = this.query().dataSourceTable(tableNum(RetailCommerceValidatorRules));

            qbdsRules.clearRanges();

            QueryBuildRange resultStatusRange = qbdsRules.addRange(fieldNum(RetailCommerceValidatorRules,ResultStatusType));

            // Exclude setup rules.
            qbdsRules.addRange(fieldNum(RetailCommerceValidatorRules, SetupPriority)).value(SysQuery::value(0));

            // If the validator is automated run, exclude rules that are not applicable to automated run.
            if (isAutomatedRun)
            {
                qbdsRules.addRange(fieldNum(RetailCommerceValidatorRules, AutomatedRunApplicable)).value(SysQuery::value(1));
            }

            switch(ResultStatus.selection())
            {
                case RetailCommerceValidatorResultStatusFilter::Message:
                    resultStatusRange.value(SysQuery::value(RetailCommerceValidatorResultStatus::Passed));
                    break;
                case RetailCommerceValidatorResultStatusFilter::Warning:
                    resultStatusRange.value(SysQuery::value(RetailCommerceValidatorResultStatus::Warning));
                    break;
                case RetailCommerceValidatorResultStatusFilter::Error:
                    resultStatusRange.value(SysQuery::value(RetailCommerceValidatorResultStatus::Error));
                    break;
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>getRuleType</Name>
						<Source><![CDATA[
        /// <summary>
        /// Calculates the rule type.
        /// </summary>
        /// <param name = "_rules">The Rule Id.</param>
        /// <returns>The rule type (error/warning/info).</returns>
        display str getRuleType(RetailCommerceValidatorRules _rules)
        {
            return enum2Str(RetailCommerceValidatorLog::convertResultStatusToLogType(_rules.ResultStatusType, false));
        }

]]></Source>
					</Method>
					<Method>
						<Name>getCountOfLogs</Name>
						<Source><![CDATA[
        /// <summary>
        /// Calculates the number of errors/warnings/messages per rule for the current batch.
        /// </summary>
        /// <param name = "_rules">The Rule Id.</param>
        /// <returns>Count of errors/warnings/messages.</returns>
        display int64 getCountOfLogs(RetailCommerceValidatorRules _rules)
        {
            int64 countOfLogs;
            RetailCommerceValidatorCounters counters;

            if (_rules.ResultStatusType == RetailCommerceValidatorResultStatus::Error)
            {
                select sum(ErrorCount) from counters
                    where counters.ValidationId == commerceValidator.ValidationId
                        && counters.BatchJobId == commerceValidator.CurrentBatchJobId
                        && counters.RuleId == _rules.RuleId
                        && Counters.MetricId == "@Retail:RetailCommerceValidatorCounterPerValidationRuleMetricId";

                countOfLogs = counters.ErrorCount;
            }
            else if (_rules.ResultStatusType == RetailCommerceValidatorResultStatus::Warning)
            {
                select sum(WarningCount) from counters
                    where counters.ValidationId == commerceValidator.ValidationId
                        && counters.BatchJobId == commerceValidator.CurrentBatchJobId
                        && counters.RuleId == _rules.RuleId
                        && Counters.MetricId == "@Retail:RetailCommerceValidatorCounterPerValidationRuleMetricId";

                countOfLogs = counters.WarningCount;
            }
            else if (_rules.ResultStatusType == RetailCommerceValidatorResultStatus::Passed)
            {
                select sum(MessageCount) from counters
                    where counters.ValidationId == commerceValidator.ValidationId
                        && counters.BatchJobId == commerceValidator.CurrentBatchJobId
                        && counters.RuleId == _rules.RuleId
                        && Counters.MetricId == "@Retail:RetailCommerceValidatorCounterPerValidationRuleMetricId";

                countOfLogs = counters.MessageCount;
            }

            return countOfLogs;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>RetailCommerceValidatorLog</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the datasource.
        /// </summary>
        public void init()
        {
            super();

            qbdsLog = this.query().dataSourceTable(tableNum(RetailCommerceValidatorLog));

            qbrValidationLog = qbdsLog.addRange(fieldNum(RetailCommerceValidatorLog,ValidationId));
            qbrCurrentBatchJobLog = qbdsLog.addRange(fieldNum(RetailCommerceValidatorLog,BatchJobId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes the query.
        /// </summary>
        public void executeQuery()
        {
            qbrValidationLog.value(SysQuery::value(validationId));
            qbrCurrentBatchJobLog.value(SysQuery::value(currentBatchJob));

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>RetailCommerceValidatorLogContext</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the query.
        /// </summary>
        public void init()
        {
            super();

            qbdsLogContext = this.query().dataSourceTable(tableNum(RetailCommerceValidatorLogContext));

            qbdsLogContext.addLink(fieldNum(RetailCommerceValidatorLog,ValidationId), fieldNum(RetailCommerceValidatorLogContext,ValidationId));
            qbdsLogContext.addLink(fieldNum(RetailCommerceValidatorLog,BatchJobId), fieldNum(RetailCommerceValidatorLogContext,BatchJobId));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>EntityContextText</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            /// <summary>
            /// Redirects to the rule mitigation form.
            /// </summary>
            public void jumpRef()
            {
                super();

                DataAreaId legalEntity = RetailCommerceValidator::getChannelLegalEntity(RetailCommerceValidatorLogContext.ValidationId);

                if (legalEntity && (curExt() != legalEntity))
                {
                    SysInfoLogLevel prevLevel = infolog.infologLevel();
                    infolog.setInfoLogLevel(SysInfoLogLevel::None);
                    changecompany (legalEntity)
                    {
                        infolog.setInfoLogLevel(prevLevel);
                        RetailCommerceValidatorRules::openRuleMitigationForm(RetailCommerceValidatorLog.RuleId, RetailCommerceValidatorLogContext, element.args().caller());
                        infolog.setInfoLogLevel(SysInfoLogLevel::None);
                    }
                    infolog.setInfoLogLevel(prevLevel);
                    infolog.clear();
                }
                else
                {
                    RetailCommerceValidatorRules::openRuleMitigationForm(RetailCommerceValidatorLog.RuleId, RetailCommerceValidatorLogContext, element.args().caller());
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ResultStatus</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// Performs selection changed event
        /// </summary>
        /// <returns>The selected value.</returns>
        public int selectionChange()
        {
            int ret = super();

            RetailCommerceValidatorRules_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RetailCommerceValidatorRules</Name>
			<Table>RetailCommerceValidatorRules</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EntityTypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResultStatusType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RuleExecutionTestMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RuleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RuleMitigationForm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SetupPriority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailCommerceValidatorLog</Name>
			<Table>RetailCommerceValidatorLog</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BatchJobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContextRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CounterRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MetricId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RuleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TestId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidationId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>RetailCommerceValidatorRules</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailCommerceValidatorLogContext</Name>
			<Table>RetailCommerceValidatorLogContext</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssortmentRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeGroupRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeTypeRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchJobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CatalogProductRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CatalogRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchyRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EntityContextText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KitComponentRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KitComponentSubstituteRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KitRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MasterProductRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OMOperatingUnitId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductColorRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductConfigRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductSizeRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductStyleRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VariantRefRecId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>RetailCommerceValidatorLog</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<ArrangeMethod xmlns="">HorizontalLeft</ArrangeMethod>
		<Caption xmlns="">@Retail:RetailCommerceValidatorResultByRules</Caption>
		<Pattern xmlns="">Custom</Pattern>
		<Style xmlns="">FormPart</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>RulesGroup</Name>
				<ExtendedStyle>group_sideBySidePrimary</ExtendedStyle>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>HeaderGroup</Name>
						<ExtendedStyle>hubPartGrid_header</ExtendedStyle>
						<Pattern>FiltersAndToolbarInline</Pattern>
						<PatternVersion>1.0</PatternVersion>
						<Type>Group</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>QuickFilterGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>QuickFilterGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FormControlExtension>
											<Name>QuickFilterControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>targetControlName</Name>
													<Type>String</Type>
													<Value>RulesGrid</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>placeholderText</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>defaultColumnName</Name>
													<Type>String</Type>
													<Value>RetailCommerceValidator_ValidationId</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ResultStatus</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<EnumType>RetailCommerceValidatorResultStatusFilter</EnumType>
										<LabelPosition>Above</LabelPosition>
										<ShowLabel>No</ShowLabel>
										<Items />
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>RulesActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>Maintain</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ToggleRulesResultsSection</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<NormalImage>CaretRight</NormalImage>
												<Text>@Retail:ShowDetails</Text>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<HideIfEmpty>No</HideIfEmpty>
						<Breakable>No</Breakable>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>RulesGrid</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Grid</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>RetailCommerceValidatorRules_RuleId</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>RuleId</DataField>
								<DataSource>RetailCommerceValidatorRules</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>RetailCommerceValidatorRules_Description</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>RetailCommerceValidatorRules</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormInt64Control">
								<Name>CountOfLogs</Name>
								<Type>Int64</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>getCountOfLogs</DataMethod>
								<DataSource>RetailCommerceValidatorRules</DataSource>
								<Label>@SYS62581</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>RuleType</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>getRuleType</DataMethod>
								<DataSource>RetailCommerceValidatorRules</DataSource>
								<Label>@SYS40512</Label>
							</AxFormControl>
						</Controls>
						<DataSource>RetailCommerceValidatorRules</DataSource>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>RulesResultsGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ExtendedStyle>group_sideBySideSecondary</ExtendedStyle>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<Visible>No</Visible>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>QuickFilterLogs</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl>
								<Name>QuickFilterResults</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<FormControlExtension>
									<Name>QuickFilterControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>targetControlName</Name>
											<Type>String</Type>
											<Value>LogResultsGrid</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>placeholderText</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>defaultColumnName</Name>
											<Type>String</Type>
											<Value>RetailCommerceValidatorRules_Description</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<FrameType>None</FrameType>
						<Style>CustomFilter</Style>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>LogResultsGrid</Name>
						<Type>Grid</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ResultsLog</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailCommerceValidatorLog_Description</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>RetailCommerceValidatorLog</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>RetailCommerceValidatorLog</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Context</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailCommerceValidatorLogContext_EntityContextText</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EntityContextText</DataField>
										<DataSource>RetailCommerceValidatorLogContext</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>RetailCommerceValidatorLogContext</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>RetailCommerceValidatorLogContext</DataSource>
					</AxFormControl>
				</Controls>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>