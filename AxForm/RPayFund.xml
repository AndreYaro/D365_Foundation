<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RPayFund</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RPayFund extends FormRun
{
    #define.Value3(3)

    Query                     m_qListSelectMembers;
    Query                     m_qListOtherMembers;
    ImageListAppl_PayGroup_RU m_imageList;
    RPayFundMember            m_payFundMember;
}
]]></Source>
			</Method>
			<Method>
				<Name>createQueryForOtherMembers</Name>
				<Source><![CDATA[
    private Query createQueryForOtherMembers()
    {
        Query                   query;
        QueryBuildDataSource    qDS_PayTable, qDS_PayFundMember;

        query = new Query();

        qDS_PayTable = query.addDataSource(tablenum(RPayTable));
        qDS_PayTable.addSelectionField(fieldnum(RPayTable,PayCtype));
        qDS_PayTable.addSelectionField(fieldnum(RPayTable, Name));

        qDS_PayTable.addRange(fieldnum(RPayTable,PayChargeType));

        qDS_PayFundMember = qDS_PayTable.addDataSource(tablenum(RPayFundMember));
        qDS_PayFundMember.addRange(fieldnum(RPayFundMember,CounterUnit));

        qDS_PayFundMember.joinMode(JoinMode::NoExistsJoin);
        qDS_PayFundMember.addLink(fieldnum(RPayTable,PayCtype), fieldnum(RPayFundMember,PayCostType));
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createQueryForSelectMembers</Name>
				<Source><![CDATA[
    private Query createQueryForSelectMembers()
    {
        Query                query;
        QueryBuildDataSource qDS_PayFundMember, qDS_PayTable;
        ;
        query = new Query();
        qDS_PayFundMember = query.addDataSource(tablenum(RPayFundMember));
        qDS_PayFundMember.addSelectionField(fieldnum(RPayFundMember,PayCostType));

        qDS_PayFundMember.addRange(fieldnum(RPayFundMember,CounterUnit));

        qDS_PayTable = qDS_PayFundMember.addDataSource(tablenum(RPayTable));
        qDS_PayTable.addSelectionField(fieldnum(RPayTable,Name));

        qDS_PayTable.joinMode(JoinMode::InnerJoin);
        qDS_PayTable.addLink(fieldnum(RPayTable,PayCtype), fieldnum(RPayFundMember,PayCostType));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        #resappl
        ;
        super();
        m_qListSelectMembers = this.createQueryForSelectMembers();
        m_qListOtherMembers  = this.createQueryForOtherMembers();

        m_imageList = new ImageListAppl_PayGroup_RU();

        ListSelectMembers.addColumn(1,new FormListColumn("@GLS105863",1));
        ListSelectMembers.addColumn(2,new FormListColumn("@GLS100622",2, 150));

        ListSelectMembers.width(220);

        ListOtherMembers.addColumn(1,new FormListColumn("@GLS105863",1));
        ListOtherMembers.addColumn(2,new FormListColumn("@GLS100622",2, 150));

        ListOtherMembers.width(230);

        PayCounterTable_Account.parmIsDefaultAccount(true);
        Account_LedgerDimension.parmIsDefaultAccount(true);

        PayCounterTable_OffsetAccount.parmIsDefaultAccount(true);
        CorrAccount_OffsetLedgerDimension.parmIsDefaultAccount(true);

        DeviationAccount_DeviationLedgerDimension.parmIsDefaultAccount(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initListOtherMembers</Name>
				<Source><![CDATA[
    private void initListOtherMembers()
    {
        int          iIdx;
        QueryRun     qr;
        RPayTable    payTable;
        FormListItem formListItem;
        #resappl

        this.setWhereForListOtherMembers(payCounterTable.CounterUnit);
        qr = new QueryRun(m_qListOtherMembers);

        ListOtherMembers.deleteAll();

        while (qr.next())
        {
            payTable = qr.get(tablenum(RPayTable));

            formListItem = new FormListItem(payTable.PayCtype,m_imageList.image(#ImageReportSum));

            formListItem.data(payTable.PayCtype);

            iIdx = ListOtherMembers.addItem(formListItem);
            formListItem = new FormListItem(payTable.Name);
            formListItem.subItem(1);
            formListItem.idx(iIdx);
            ListOtherMembers.setItem(formListItem);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initListSelectMembers</Name>
				<Source><![CDATA[
    private void initListSelectMembers()
    {
        int             iIdx;
        QueryRun        qr;
        RPayTable       payTable;
        FormListItem    formListItem;
        #resappl

        this.setWhereForListSelectMembers(payCounterTable.CounterUnit);
        qr = new QueryRun(m_qListSelectMembers);

        ListSelectMembers.deleteAll();

        while (qr.next())
        {
            payTable = qr.get(tablenum(RPayTable));
            formListItem = new FormListItem(payTable.PayCtype,m_imageList.image(#ImageReportSum));
            formListItem.data(payTable.PayCtype);

            iIdx = ListSelectMembers.addItem(formListItem);
            formListItem = new FormListItem(payTable.Name);
            formListItem.subItem(1);
            formListItem.idx(iIdx);
            ListSelectMembers.setItem(formListItem);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMembersLists</Name>
				<Source><![CDATA[
    void initMembersLists()
    {
        ;
        this.initListOtherMembers();
        this.initListSelectMembers();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupLedgerDimension</Name>
				<Source><![CDATA[
    public boolean lookupLedgerDimension(LedgerJournalACType _acType, FormControl _control)
    {
        switch (_acType)
        {
            case LedgerJournalACType::Bank:
                BankAccountTable::lookupBankAccount(_control);
                break;
            case LedgerJournalACType::Cust:
                CustTable::lookupCustomer(_control);
                break;
            case LedgerJournalACType::FixedAssets:
                AssetTable::lookupAccountNum(_control);
                break;
            case LedgerJournalACType::Project:
                ProjTable::lookupProjId(_control, PayCounterTable);
                break;
            case LedgerJournalACType::Vend:
                VendTable::lookupVendor(_control);
                break;
            case LedgerJournalACType::FixedAssets_RU:
                RAssetTable::lookupAccountNum(_control);
                break;
            case LedgerJournalACType::RDeferrals:
                RDeferralsTable::lookupDeferrals(_control, dateMax());
                break;
            default:
                return false;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useCustomlookupLedgerDimension</Name>
				<Source><![CDATA[
    public boolean useCustomlookupLedgerDimension(int _accountTypeEnumValue)
    {
        boolean returnValue;

        LedgerJournalACType accountType = any2Enum(_accountTypeEnumValue);
        switch (accountType)
        {
            case LedgerJournalACType::Bank:
            case LedgerJournalACType::Cust:
            case LedgerJournalACType::FixedAssets:
            case LedgerJournalACType::Project:
            case LedgerJournalACType::Vend:
            case LedgerJournalACType::RDeferrals:
                returnValue = true;
                break;
            default:
                returnValue = false;
                break;
        }

        return returnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>membersInOtherList</Name>
				<Source><![CDATA[
    void membersInOtherList(FormListNext _formListNext)
    {
        FormListItem   formListItem;
        int            iIndx;
        RPayCostType   costType;
        RPayFundMember payFundMember;
        ;
        try
        {
            ttsbegin;

            iIndx = ListSelectMembers.getNextItem(_formListNext);

            while (iIndx != -1)
            {
                formListItem = ListSelectMembers.getItem(iIndx);

                costType = formListItem.data();

                payFundMember.deleteMember(costType,payCounterTable.CounterUnit);

                iIndx = ListSelectMembers.getNextItem(_formListNext,iIndx);
            }

            ttscommit;

            element.initListOtherMembers();
            element.initListSelectMembers();
        }
        catch(Exception::Error)
        {
            ttsabort;
        }
        catch(Exception::Warning)
        {
            ttsabort;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>membersInSelectList</Name>
				<Source><![CDATA[
    void membersInSelectList(FormListNext _formListNext)
    {
        FormListItem   formListItem;
        int            iIndx;
        RPayCostType   costType;
        RPayFundMember payFundMember;
        ;
        try
        {
            ttsbegin;

            iIndx = ListOtherMembers.getNextItem(_formListNext);

            while (iIndx != -1)
            {
                formListItem = ListOtherMembers.getItem(iIndx);

                costType = formListItem.data();

                payFundMember.addMember(costType,payCounterTable.CounterUnit);

                iIndx = ListOtherMembers.getNextItem(_formListNext,iIndx);
            }

            ttscommit;

            element.initListOtherMembers();
            element.initListSelectMembers();
        }
        catch(Exception::Error)
        {
            ttsabort;
        }
        catch(Exception::Warning)
        {
            ttsabort;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnableDisable</Name>
				<Source><![CDATA[
    void setEnableDisable()
    {
        boolean isEnable = payCounterTable.LineType == RPayCtypeType::BudgetFund;

        PayCounterTable_Account.allowEdit(isEnable);
        PayCounterTable_AccountType.allowEdit(isEnable);
        Account.allowEdit(isEnable);
        Deviation.allowEdit(isEnable);
        Dimension.allowEdit(isEnable);
        menuFundItog.enabled(isEnable);
        payCounterTable_OffsetAccount.allowEdit(isEnable);
        payCounterTable_OffsetAccountType.allowEdit(isEnable);
        corrAccount.allowEdit(isEnable);
        OffsetDimension.allowEdit(isEnable);

        if ( !isEnable)
        {
            payCounterTable.LedgerDimension = 0;
            payCounterTable.OffsetLedgerDimension = 0;
            payCounterTable.DeviationLedgerDimension = 0;
            paycounterTable.DefaultDimension = 0;
            payCounterTable.DeviationDefaultDimension = 0;
            payCounterTable.OffsetDefaultDimension = 0;

            payCounterTable.PayRate       = "";
            payCounterTable_Ds.reread();
            payCounterTable_Ds.refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWhereForListOtherMembers</Name>
				<Source><![CDATA[
    private void setWhereForListOtherMembers(RPayCounterUnit _counterUnit)
    {
        QueryBuildDataSource    qDS;
        QueryBuildRange         qRange;

        qDS    = m_qListOtherMembers.dataSourceTable(tablenum(RPayFundMember));
        qRange = qDS.rangeField(fieldnum(RPayFundMember,CounterUnit));

        qRange.value(_counterUnit);

        qDS    = m_qListOtherMembers.dataSourceTable(tablenum(RPayTable));
        qRange = qDS.rangeField(fieldnum(RPayTable,PayChargeType));
        if (RPayCounterTable::find(_counterUnit).LineType == RPayCtypeType::BudgetFund)
        {
            qRange.value(queryValue(RPayChargeType::AddSum));
        }
        else
        {
            qRange.value(SysQuery::valueUnlimited());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWhereForListSelectMembers</Name>
				<Source><![CDATA[
    private void setWhereForListSelectMembers(RPayCounterUnit _counterUnit)
    {
        QueryBuildDataSource    qDS;
        QueryBuildRange         qRange;
        ;
        qDS    = m_qListSelectMembers.dataSourceTable(tablenum(RPayFundMember));
        qRange = qDS.rangeField(fieldnum(RPayFundMember, CounterUnit));

        qRange.value(_counterUnit);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PayCounterTable</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            payCounterTable.CounterType = RPayCounterType::Fund;
            element.setEnableDisable();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        int active()
        {
            int ret;

            ret = super();

            if (ret)
            {
                element.setEnableDisable();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        void executeQuery()
        {
            this.query().dataSourceNo(1).addRange(fieldnum(RPayCounterTable,CounterType)).value(queryValue(RPayCounterType::Fund));
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        void write()
        {
            menuItemButton.enabled(true);
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>LineType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                element.setEnableDisable();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Tab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        void tabChanged(int fromTab, int toTab)
        {
            if (toTab == #Value3)
            {
                element.initMembersLists();
            }

            super(fromTab, toTab);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PayCounterTable_Account</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if ( !element.lookupLedgerDimension(PayCounterTable.AccountType, this))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return element.useCustomlookupLedgerDimension(_accountTypeEnumValue);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PayCounterTable_OffsetAccount</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if ( !element.lookupLedgerDimension(PayCounterTable.OffsetAccountType, this))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return element.useCustomlookupLedgerDimension(_accountTypeEnumValue);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>General</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            element.setEnableDisable();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Account_LedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if ( !element.lookupLedgerDimension(PayCounterTable.AccountType, this))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return element.useCustomlookupLedgerDimension(_accountTypeEnumValue);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CorrAccount_OffsetLedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if ( !element.lookupLedgerDimension(PayCounterTable.OffsetAccountType, this))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return element.useCustomlookupLedgerDimension(_accountTypeEnumValue);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeviationAccount_DeviationLedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if ( !element.lookupLedgerDimension(PayCounterTable.DeviationAccountType, this))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return element.useCustomlookupLedgerDimension(_accountTypeEnumValue);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btAllMembersInListSelectMembers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.membersInSelectList(FormListNext::All);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btSelectMembersInListSelectMembers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.membersInSelectList(FormListNext::Selected);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btSelectMembersInListOtherMembers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.membersInOtherList(FormListNext::Selected);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btAllMembersInListOtherMembers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.membersInOtherList(FormListNext::All);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PayCounterTable</Name>
			<Table>RPayCounterTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CounterType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CounterUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeviationAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeviationDefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeviationLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Output</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayRateEmpl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayRatePercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Scanning</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RUP625</Caption>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<TitleDataSource xmlns="">PayCounterTable</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>MenuItemButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>PayCounterTable</DataSource>
								<MenuItemName>RPayCounterUse</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>MenuFundItog</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RpayFundTotal</MenuItemName>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Overview</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid1</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PayCounterTable_LineType</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineType</DataField>
										<DataSource>PayCounterTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PayCounterTable_CounterUnit</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CounterUnit</DataField>
										<DataSource>PayCounterTable</DataSource>
										<Label>@GLS105865</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PayCounterTable_Name</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>PayCounterTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PayCounterTable_AccountType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountType</DataField>
										<DataSource>PayCounterTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>PayCounterTable_Account</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>SegmentedEntry</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>PayCounterTable</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PayCounterTable_OffsetAccountType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountType</DataField>
										<DataSource>PayCounterTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>PayCounterTable_OffsetAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>SegmentedEntry</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>PayCounterTable</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataSource>PayCounterTable</DataSource>
								<VisibleRows>12</VisibleRows>
								<VisibleRowsMode>Fixed</VisibleRowsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Base</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Account</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>Account_AccountType</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>AccountType</DataField>
												<DataSource>PayCounterTable</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormSegmentedEntryControl">
												<Name>Account_LedgerDimension</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>SegmentedEntry</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension>
													<Name>SegmentedEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>String</Type>
															<Value>DimensionDynamicAccountController</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmAccountTypeEnumName</Name>
															<Type>String</Type>
															<Value>AccountType</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIsDefaultAccount</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValidateBlockedForManualEntry</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmLockMainAccountSegment</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmPostingType</Name>
															<Type>Enum</Type>
															<TypeName>LedgerPostingType</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeTotalAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeFinancialAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<DataSource>PayCounterTable</DataSource>
												<ReferenceField>LedgerDimension</ReferenceField>
											</AxFormControl>
										</Controls>
										<DataGroup>Account</DataGroup>
										<DataSource>PayCounterTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Dimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1181116005</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormContainerControl">
												<Name>DimensionEntryControl</Name>
												<Type>Container</Type>
												<FormControlExtension>
													<Name>DimensionEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>ClassName</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmControlLabelText</Name>
															<Type>String</Type>
															<Value>@SYS14926</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumerationName</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmDataSourceName</Name>
															<Type>String</Type>
															<Value>PayCounterTable</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValueSetReferenceField</Name>
															<Type>String</Type>
															<Value>DefaultDimension</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumValueSetReferenceField</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<Controls />
											</AxFormControl>
										</Controls>
										<HideIfEmpty>No</HideIfEmpty>
										<DataSource>PayCounterTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>CorrAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1503238552</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>CorrAccount_OffsetAccountType</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>OffsetAccountType</DataField>
												<DataSource>PayCounterTable</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormSegmentedEntryControl">
												<Name>CorrAccount_OffsetLedgerDimension</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>SegmentedEntry</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension>
													<Name>SegmentedEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>String</Type>
															<Value>DimensionDynamicAccountController</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmAccountTypeEnumName</Name>
															<Type>String</Type>
															<Value>OffsetAccountType</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIsDefaultAccount</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValidateBlockedForManualEntry</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmLockMainAccountSegment</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmPostingType</Name>
															<Type>Enum</Type>
															<TypeName>LedgerPostingType</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeTotalAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeFinancialAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<DataSource>PayCounterTable</DataSource>
												<ReferenceField>OffsetLedgerDimension</ReferenceField>
											</AxFormControl>
										</Controls>
										<DataGroup>CorrAccount</DataGroup>
										<DataSource>PayCounterTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>OffsetDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1825361099</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormContainerControl">
												<Name>DimensionEntryControlOffset</Name>
												<Type>Container</Type>
												<FormControlExtension>
													<Name>DimensionEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>ClassName</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmControlLabelText</Name>
															<Type>String</Type>
															<Value>@GLS103909</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumerationName</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmDataSourceName</Name>
															<Type>String</Type>
															<Value>PayCounterTable</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValueSetReferenceField</Name>
															<Type>String</Type>
															<Value>OffsetDefaultDimension</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumValueSetReferenceField</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<Controls />
											</AxFormControl>
										</Controls>
										<HideIfEmpty>No</HideIfEmpty>
										<DataSource>PayCounterTable</DataSource>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Deviation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DeviationAccount</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>DeviationAccount_DeviationAccountType</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>DeviationAccountType</DataField>
												<DataSource>PayCounterTable</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormSegmentedEntryControl">
												<Name>DeviationAccount_DeviationLedgerDimension</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>SegmentedEntry</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension>
													<Name>SegmentedEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>String</Type>
															<Value>DimensionDynamicAccountController</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmAccountTypeEnumName</Name>
															<Type>String</Type>
															<Value>DeviationAccountType</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIsDefaultAccount</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValidateBlockedForManualEntry</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmLockMainAccountSegment</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmPostingType</Name>
															<Type>Enum</Type>
															<TypeName>LedgerPostingType</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeTotalAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeFinancialAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<DataSource>PayCounterTable</DataSource>
												<ReferenceField>DeviationLedgerDimension</ReferenceField>
											</AxFormControl>
										</Controls>
										<DataGroup>DeviationAccount</DataGroup>
										<DataSource>PayCounterTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DeviationDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormContainerControl">
												<Name>DimensionEntryControlDeviation</Name>
												<Type>Container</Type>
												<FormControlExtension>
													<Name>DimensionEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>ClassName</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmControlLabelText</Name>
															<Type>String</Type>
															<Value>@RUP2999</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumerationName</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmDataSourceName</Name>
															<Type>String</Type>
															<Value>PayCounterTable</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValueSetReferenceField</Name>
															<Type>String</Type>
															<Value>DeviationDefaultDimension</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmEnumValueSetReferenceField</Name>
															<Type>String</Type>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<Controls />
											</AxFormControl>
										</Controls>
										<HideIfEmpty>No</HideIfEmpty>
										<DataSource>PayCounterTable</DataSource>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
						<Caption>@SYS2952</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PayTypes</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SelectMembers</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormListViewControl">
										<Name>ListSelectMembers</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>ListView</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<RowSelect>Yes</RowSelect>
										<SingleSelection>No</SingleSelection>
										<ViewType>Report</ViewType>
									</AxFormControl>
								</Controls>
								<Caption>@RUP627</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ButtonGroup1</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<LeftMode>AutoLeft</LeftMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>btAllMembersInListSelectMembers</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<ShowShortCut>No</ShowShortCut>
										<Text>&lt;&lt;</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>btSelectMembersInListSelectMembers</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<ShowShortCut>No</ShowShortCut>
										<Text>&lt;</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>btSelectMembersInListOtherMembers</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<ShowShortCut>No</ShowShortCut>
										<Text>&gt;</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>btAllMembersInListOtherMembers</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<ShowShortCut>No</ShowShortCut>
										<Text>&gt;&gt;</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OtherMembers</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormListViewControl">
										<Name>ListOtherMembers</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>ListView</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<RowSelect>Yes</RowSelect>
										<SingleSelection>No</SingleSelection>
										<Sort>Ascending</Sort>
										<ViewType>Report</ViewType>
									</AxFormControl>
								</Controls>
								<Caption>@RUP628</Caption>
							</AxFormControl>
						</Controls>
						<Columns>3</Columns>
						<Caption>@RUP83</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>