<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>LedgerJournalTransDaily</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class LedgerJournalTransDaily extends FormRun implements TaxIFormCorrectableTaxAmount, TaxIFormShowTax, IFormRefreshable, LedgerILedgerJournalEngineProvider, LedgerIJournalFormRefreshable, LedgerIJournalFormCache, LedgerIJournalCashDiscount, OfficeIMenuCustomizer, OfficeITemplateCustomExporter, LedgerIJournalForm
{
    QueryBuildRange                     ledgerJournalTransRange;
    LedgerJournalEngine                 ledgerJournalEngine;

    LedgerJournalFormTrans              journalFormTrans;

    ImageListAppl_LedgerJournal         imageListAppl;

    DebCredProposal                     debCredProposal;
    DebCredProposal                     debCredProposalOld;
    LedgerJournalTable                  ledgerJournalTable;
    LedgerBalanceMainAccountAmounts     ledgerBalance;

    [FormObservable]
    AmountMST                           balanceAmountMST;
    [FormObservable]
    AmountCur                           balanceAmountCur;
    [FormObservable]
    boolean                             bankSingleCurrency;

    [FormObservable]
    TaxAmount                           correctedTaxAmountCur;
    boolean                             correctedTaxAmountCurEdited;

    LedgerJournalId                     journalNum;
    TransDate                           virtualCashDiscDate;
    VendCashDiscAmount                  virtualCashDiscAmount;

    boolean                             cashDiscChanged;

    LedgerJournalACType                 priorAccountType;

    LedgerJournalTransEntityManager     ledgerJournalTransEntityManager; // Used to manage entity-related tasks like in-memory rollbacks for aborted transactions.

    MainAccountRecId                    currentMainAccountId;
    MainAccountRecId                    previousMainAccountId;
    MainAccountRecId                    currentOffsetMainAccountId;
    DimensionAttributeRecId             mainAccountDimAttr;

    // <GJP>
    NoYesId                             ledgerTAccountEnabled;
    // </GJP>

    // <GCN>
    #ISOCountryRegionCodes
    LedgerChineseVoucherEnabled_CN      chineseVoucher_CN;
    boolean                             isSimpleMethod;
    boolean                             enableShowDRsCRs;
    LedgerShowDebCredController_CN      showDRsCRsController;
    // </GCN>
    // <GEERU>
    boolean                             countryRegion_RU;
    // </GEERU>
    // <GEECZ>
    boolean                             countryRegion_CZ;
    // </GEECZ>
    // <GEEPL>
    boolean                             countryRegion_PL;
    // </GEEPL>
    // <GEEU>
    boolean                             countryRegion_EasternEurope;
    // </GEEU>
    // <GSA>
    boolean                             zakatParameterEnabled;
    // </GSA>
    // <GTH>
    boolean                             taxWithholdEnabledTH;
    // </GTH>
    // <GIN>
    boolean                             countryRegion_IN;
    // </GIN>

    boolean                             countryRegion_MX;

    boolean                             bankLCEnabled;
    boolean                             bankLCChargeEnabled;
    BankLCLineNumController             bankLCLineNumController;
    BankLCImportNumberController        bankLCImportNumberController;

    BankLCImportMarkupLookupController_SA   bankLCImportMarkupLookupController;
    HcmWorkerLookup                         hcmWorkerLookupActiveCurrentCompany;

    DueDate                             priorDueDate;
    boolean                             keepSalesPriceOnWrite;
    boolean                             enableLedgerJournalTrans_W;

    boolean enableProjectOperationsIntegrationFeature;
    boolean isTaxInformationEnabled;

    ReverseCharge_W                     reverseCharge;

    CustVendTrans                       custVendTransPaymRef_RU;
    private boolean isTaxIntegrationEnabled = Tax::isTaxIntegrationEnabledForBusinessProcess(TaxIntegrationBusinessProcess::Journal);
    private boolean isTaxDifferencePostingOnJapanConsInvoiceEnabled = TaxConsInvoice_JP::isTaxDifferencePostingOnConsInvoiceEnabled(true);
    private boolean isLedgerJournalTransTaxExtensionEnabled = LedgerJournalTransTaxExtension::isExtensionEnabledV2();

}
]]></Source>
			</Method>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the event that fires when focus is given to the form.
    /// </summary>
    /// <param name="_active">
    /// true if active; otherwise, false.
    /// </param>
    public void activate(boolean _active)
    {
        super(_active);

        journalFormTrans.manageEditingModeForApprovedWFApproval();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bookRefresh</Name>
				<Source><![CDATA[
    void bookRefresh(boolean _isClosing = false)
    {
        LedgerIJournalFormRefreshable callingForm = element.args().caller() as LedgerIJournalFormRefreshable;

        if (callingForm != null)
        {
            callingForm.refresh();
        }

        if (!_isClosing)
        {
            ledgerJournalTrans_ds.reread();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>callerRefresh</Name>
				<Source><![CDATA[
    void callerRefresh()
    {
        ledgerJournalEngine.clearCorrectedTaxAmount(ledgerJournalTrans);
        ledgerJournalTrans_ds.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean canClose;

        try
        {
            // Signal that the close event is beginning.
            ledgerJournalTransEntityManager.getFormDataEventManager().beginFormCloseEvent();

            canClose = super();

            // Signal that the close event is finished.
            ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();
        }
        catch (Exception::UpdateConflict)
        {
            // This exception should not be handled by the generic handling logic below.

            // Signal that the close event is finished.
            ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();

            // Chain the exception forward.
            throw Exception::UpdateConflict;
        }
        catch
        {
            // Signal that the close event is finished.
            ledgerJournalTransEntityManager.getFormDataEventManager().endFormCloseEvent();

            // Chain the exception forward.
            throw Exception::Error;
        }

        return canClose;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearTaxCache</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears cache for tax amount and correct tax amount.
    /// </summary>
    /// <remarks>
    /// It is called when T-account form is closed and datasource will be synced.
    /// </remarks>
    public void clearTaxCache()
    {
        if (ledgerTAccountEnabled
            && ledgerJournalTrans.RecId)
        {
            LedgerJournalTrans_Tax_Extension::clearTaxCache(ledgerJournalTable.JournalNum, ledgerJournalEngine);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    void close()
    {
        this.updateJournalBalance();

        ledgerJournalEngine.close();
        ledgerJournalEngine.formMethodClosePre();
        journalFormTrans.formClosePre();
        element.bookRefresh(true);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFinancialTags</Name>
				<Source><![CDATA[
    private void initFinancialTags()
    {
        // In this form, an offset company could be different from a primary company and set FinTag configured while a primary company does not.
        // Thus, checking FinTag configuration over all comapanies determines FinTag usability in this form.
        if (FinTagConfiguration::isFinTagConfigurationSetInAtLeastOneCompany())
        {
            FinTagReferenceGroupControllerContract primaryContract = FinTagReferenceGroupControllerContract::construct(
                LedgerJournalTrans_FinTag,
                fieldNum(LedgerJournalTrans, Company));

            FinTagReferenceGroupControllerContract offsetContract = FinTagReferenceGroupControllerContract::construct(
                LedgerJournalTrans_OffsetFinTag,
                fieldNum(LedgerJournalTrans, OffsetCompany));

            FinTagReferenceGroupController::registerReferenceGroup(primaryContract);
            FinTagReferenceGroupController::registerReferenceGroup(offsetContract);
        }
        else
        {
            LedgerJournalTrans_FinTag.visible(false);
            LedgerJournalTrans_OffsetFinTag.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableBankLC</Name>
				<Source><![CDATA[
    public void enableBankLC()
    {
        bankLCEnabled = BankLCImportFeatureChecker::checkBankLCImportEnabled()
            || BankLCExportFeatureChecker::checkBankLCExportEnabled();

        if (bankLCEnabled)
        {
            ledgerJournalTransBankLC_ds.allowEdit(true);
            bankLCGroup.visible(true);

            bankLCImportNumberController = BankLCImportNumberController::construct(true);
            bankLCImportNumberController.parmBankLCImportStatus(BankLCImportStatusType::Confirmed);
            bankLCImportNumberController.parmReturnAsBankLC(false);

            bankLCChargeEnabled = BankLCImportChargeFeatureChecker_SA::construct().checkFeatureEnabled();

            if (bankLCChargeEnabled)
            {
                bankLCImportMarkupLookupController = BankLCImportMarkupLookupController_SA::construct();
            }
            else
            {
                ledgerJournalTransBankLC_ds.object(fieldNum(LedgerJournalTransBankLC, MarkupCode_SA)).visible(false);
            }
        }
        else
        {
            ledgerJournalTransBankLC_ds.allowEdit(false);
            bankLCGroup.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables and disables various buttons.
    /// </summary>
    public void enableButtonsActive()
    {
        boolean enabled;
        boolean changeBLWICodeEnabled;
        boolean isUIElementWorkFlowApprovalEnabled;
        boolean aprovalEnabled;

        enabled = journalFormTrans.isJournalEnabled();
        changeBLWICodeEnabled = enabled && (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust || ledgerJournalTrans.AccountType == LedgerJournalACType::Vend ||
                                                ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend);

        if (journalFormTrans.parmIsActiveWFApprovalDocument())
        {
            isUIElementWorkFlowApprovalEnabled = journalFormTrans.parmIsUIElementWFApprovalEnabled();
            enabled = enabled && isUIElementWorkFlowApprovalEnabled;
            changeBLWICodeEnabled = changeBLWICodeEnabled && isUIElementWorkFlowApprovalEnabled;
        }
        else
        {
            aprovalEnabled = !ledgerJournalEngine.approved() || !ledgerJournalEngine.approveActive();
            enabled = enabled && aprovalEnabled;
            changeBLWICodeEnabled = changeBLWICodeEnabled && aprovalEnabled;
        }

        fixedAssets.enabled(enabled);
        ledgerInAccountStatementTrans.enabled(enabled);
        ledgerInAccountStatementTotal.enabled(enabled);
        tradeBLWIChangeCode.enabled(changeBLWICodeEnabled);
        displayJournalLines.allowEdit(enabled);

        // <GIN>
        if (AssetParameters::checkAssetParameters_IN())
        {
            element.visibleAccountNum_IN();
        }
        // </GIN>

        // <GEECZ>
        if (countryRegion_CZ)
        {
            element.enableButtonsActive_CZ();
        }
        // </GEECZ>
        // <GEEU>
        if (countryRegion_EasternEurope || countryRegion_RU)
        {
            ledgerJournalPreview.enabled(ledgerJournalEngine.posted());
            ledgerJournalVoucherPreview.enabled(ledgerJournalEngine.posted());
        }
        // </GEEU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive_CZ</Name>
				<Source><![CDATA[
    void enableButtonsActive_CZ()
    {
        boolean taxDocumentCreate = ledgerJournalEngine.taxDocumentCreateButton_CZ(ledgerJournalTrans);

        cztaxDocumentCreate_Cust.enabled(taxDocumentCreate);
        cztaxDocumentCreate_Vend.enabled(taxDocumentCreate);
        cztaxDocumentCreate_Cust.visible(ledgerJournalTrans.AccountType == LedgerJournalACType::Cust);
        cztaxDocumentCreate_Vend.visible(ledgerJournalTrans.AccountType == LedgerJournalACType::Vend);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDepositSlipButton</Name>
				<Source><![CDATA[
    public void enableDepositSlipButton()
    {
        // We do not allow creating a deposit slip after the journal has been posted and it has been reconciled.
        if (ledgerJournalTrans.ledgerJournalTable().Posted)
        {
            NoYes isReconciled;

            if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank && ledgerJournalTrans.OffsetLedgerDimension)
            {
                isReconciled = BankAccountTrans::findIsReconciled(
                    ledgerJournalTrans.Voucher,
                    ledgerJournalTrans.TransDate,
                    ledgerJournalTrans.CurrencyCode,
                    ledgerJournalTrans.parmOffsetAccount(),
                    -ledgerJournalTrans.amount());
            }

            if (!isReconciled && ledgerJournalTrans.AccountType == LedgerJournalACType::Bank)
            {
                isReconciled = BankAccountTrans::findIsReconciled(
                    ledgerJournalTrans.Voucher,
                    ledgerJournalTrans.TransDate,
                    ledgerJournalTrans.CurrencyCode,
                    ledgerJournalTrans.parmAccount(),
                    ledgerJournalTrans.amount());
            }

            if (!isReconciled && ledgerJournalTrans.isBankDepositVoucherSplit())
            {
                isReconciled = BankAccountTrans::findByVoucher(ledgerJournalTrans.Voucher, ledgerJournalTrans.TransDate).Reconciled;
            }

            depositSlipButton.enabled(!isReconciled);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDepreciationStartDate</Name>
				<Source><![CDATA[
    //
    // This method enables or disables the depreciation start date control.
    //
    void enableDepreciationStartDate()
    {
        AssetBook assetBook = AssetBook::find(ledgerJournalTrans.getAssetId(), ledgerJournalTrans_Asset.BookId);

        if (assetBook &&
            (ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::Acquisition || ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::AcquisitionAdj) &&
            !assetBook.depreciationStarted() &&
            assetBook.DepreciationConvention == AssetDepreciationConvention::None)
        {
            depreciationStartDate.enabled(true);
        }
        else
        {
            depreciationStartDate.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableCashRegister_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables or disables section with Cash Register information.
    /// If section is enabled, fills it.
    /// </summary>
    public void enableDisableCashRegister_W()
    {
        CashRegisterFiscalTrans_W cashRegisterFiscalTrans =
            CashRegisterFiscalTrans_W::findVoucherDate(ledgerJournalTrans.Voucher, ledgerJournalTrans.TransDate);
        boolean existsCashRegisterFiscalTrans = cashRegisterFiscalTrans.RecId != 0;
        boolean enabledCashProcessing = false;
        if(existsCashRegisterFiscalTrans)
        {
            // Cash Transaction is already selected.
            ClassId cashRegisterProcessingClassId = CashRegister_W::find(cashRegisterFiscalTrans.CashRegister).ProcessingClassId;
            enabledCashProcessing = CashRegisterProcessingBase::isEnabled(cashRegisterProcessingClassId);
        }
        else
        {
            enabledCashProcessing = CashRegisterProcessingBase::isEnabledForCurrentUser();
        }

        if (enabledCashProcessing)
        {
            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust ||
            ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust)
            {
                CashRegisterReceipt_W.visible(true);
                CashRegister_W.visible(true);

                CashRegisterReceipt_W.enabled(CashRegisterFiscalTrans_W::findVoucherDate(ledgerJournalTrans.Voucher, ledgerJournalTrans.TransDate).RecId != 0);

                FormDataObject fieldCashRegisterTerminal = LedgerJournalTrans_W_DS.object(fieldNum(LedgerJournalTrans_W, CashRegisterTerminal));
                fieldCashRegisterTerminal.allowEdit(ledgerJournalEngine.needInitCashRegisterTerminal_W(ledgerJournalTrans));
                boolean isCashRegisterSectionEmpty = true;

                if (fieldCashRegisterTerminal.allowEdit())
                {
                    CashRegisterOperator_W cashRegisterOperator = CashRegisterOperator_W::currentOperator();
                    CashRegisterTerminal_W cashRegisterTerminal = CashRegisterTerminal_W::find(LedgerJournalTrans_W.CashRegisterTerminal);
                    
                    if (cashRegisterOperator)
                    {
                        isCashRegisterSectionEmpty = false;
                        LocationRecId.value(cashRegisterOperator.Location);
                        RegisterRecId.value(cashRegisterTerminal.CashRegister);
                        OperatorRecId.value(cashRegisterOperator.RecId);
                    }
                }
                
                if (isCashRegisterSectionEmpty)
                {
                    LocationRecId.value(0);
                    RegisterRecId.value(0);
                    OperatorRecId.value(0);
                }
            }
            else
            {
                CashRegisterReceipt_W.visible(false);
                CashRegister_W.visible(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the editable property of various datasource fields for the form.
    /// </summary>
    void enableFieldsActive()
    {
        // <GEEU>
        ledgerJournalTrans_TaxBase_W.visible((ledgerJournalTrans.TransactionType == LedgerTransType::WriteOff) || (!ledgerJournalTrans.vatPaymRefRecId_RU && countryRegion_PL));
        ledgerJournalTrans_TaxBase_W.enabled(ledgerJournalTrans.TaxCode ? true : false);
        // </GEEU>

        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, ReverseDate)).allowEdit(ledgerJournalTrans.ReverseEntry ? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableProjSalesCurrencyId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies whether the project sales currency code can be edited.
    /// </summary>
    void enableProjSalesCurrencyId()
    {
        ProjId  projId;

        projId = ledgerJournalTrans.getProjectId();

        if (projId)
        {
            if (ProjInvoiceTable::isSalesCurrencyLocked(ProjTable::find(projId).ProjInvoiceProjId))
            {
                ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).allowEdit(false);
                ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).skip(true);
            }
            else
            {
                ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).allowEdit(true);
                ledgerJournalTrans_Project_ds.object(fieldNum(LedgerJournalTrans_Project, SalesCurrencyId)).skip(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableCurrencyCodeOnDepreciation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the allowEdit property of currency field false when transaction type is depreciation.
    /// </summary>
    public void enableCurrencyCodeOnDepreciation()
    {
        boolean isDepreciation = ledgerJournalTrans_asset.isDepreciationTransactionType() && ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets;
        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, CurrencyCode)).allowEdit(!isDepreciation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableSubContractorGroup_SA</Name>
				<Source><![CDATA[
    public void enableSubContractorGroup_SA()
    {
        subcontractor_Subcontractor.enabled(true);
        subcontractor_ContractNum.enabled(true);

        if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend
            && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)
        {
            if (! VendInfoZakat_SA::findByVendAccount(VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension).AccountNum).IsSubcontractor
                && ! VendInfoZakat_SA::findByVendAccount(VendTable::findByLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension).AccountNum).IsSubcontractor)
            {
                subcontractor_SubContractor.enabled(false);
                subcontractor_ContractNum.enabled(false);
            }
            else if (VendInfoZakat_SA::findByVendAccount(VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension).AccountNum).IsSubcontractor
                    && VendInfoZakat_SA::findByVendAccount(VendTable::findByLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension).AccountNum).IsSubcontractor)
            {
                if (ledgerJournalTrans.LedgerDimension == ledgerJournalTrans.OffsetLedgerDimension)
                {
                    subcontractor_SubContractor.enabled(false);
                }
            }
        }
        if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend
            && VendInfoZakat_SA::findByVendAccount(VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension).AccountNum).IsSubcontractor
            && ! ledgerJournalTrans.OffsetLedgerDimension)
        {
            subcontractor_SubContractor.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableUpdatePLA_IN</Name>
				<Source><![CDATA[
    public void enableUpdatePLA_IN()
    {
        ChallanInformation_IN   challanInformation;

        select firstonly SourceRecID,TaxType from challanInformation
            where challanInformation.SourceRecID == ledgerJournalTrans.RecId;

        if (challanInformation)
        {
            if (challanInformation.TaxType == TaxTypeComponent_IN::Excise)
            {
                updatePLA_IN.enabled(true);
            }
            else
            {
                updatePLA_IN.enabled(false);
            }
        }
        else
        {
            updatePLA_IN.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableZakatGroups_SA</Name>
				<Source><![CDATA[
    public void enableZakatGroups_SA()
    {
        revenue.enabled(ledgerJournalTrans.AccountType          == LedgerJournalACType::Ledger
                        || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger
                        || ledgerJournalTrans.AccountType       == LedgerJournalACType::Cust
                        || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust
                        || ledgerJournalTrans.AccountType       == LedgerJournalACType::Project
                        || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project
                        || (ledgerJournalTrans.AccountType      == LedgerJournalACType::Bank
                        && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank));

        subcontractor.enabled(ledgerJournalTrans.AccountType          == LedgerJournalACType::Ledger
                               || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger
                               || ledgerJournalTrans.AccountType       == LedgerJournalACType::Vend
                               || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend
                               || (ledgerJournalTrans.AccountType      == LedgerJournalACType::Bank
                               && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank));

        subcontractor_SubContractor.enabled(true);
        subcontractor_ContractNum.enabled(true);

        maintenanceExpense.enabled(ledgerJournalTrans.AccountType          == LedgerJournalACType::Ledger
                                    || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger
                                    || ledgerJournalTrans.AccountType       == LedgerJournalACType::FixedAssets
                                    || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::FixedAssets
                                    || (ledgerJournalTrans.AccountType      == LedgerJournalACType::Bank
                                    && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank));
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableZakatSalesProjectId_SA</Name>
				<Source><![CDATA[
    public void enableZakatSalesProjectId_SA()
    {
        ledgerJournalTransZakat_SA_ds.object(fieldNum(LedgerJournalTransZakat_SA, ProjId)).allowEdit(ledgerJournalTransZakat_SA.SalesType == SalesTypeZakat_SA::Projects);
        ledgerJournalTransZakat_SA_ds.object(fieldNum(LedgerJournalTransZakat_SA, SalesId)).allowEdit(ledgerJournalTransZakat_SA.SalesType == SalesTypeZakat_SA::Sales);
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterJournalLineErrors</Name>
				<Source><![CDATA[
    public void filterJournalLineErrors()
    {
        LedgerPostingMessageLog ledgerPostingMessageCollection;

        QueryBuildDataSource qbds, ds;

        if (journalFormTrans.parmCheckPostResults())
        {
            ledgerPostingMessageCollection = journalFormTrans.parmCheckPostResults().parmLedgerPostingMessageLog();

            if (journalFormTrans.parmCheckPostResults().errorInJournalLine())
            {
                LedgerJournalTrans_Error::createJournalErrorLinks(ledgerJournalTrans.JournalNum, ledgerPostingMessageCollection);
            }

            qbds = ledgerjournaltrans_ds.query().dataSourceTable(tableNum(LedgerJournalTrans_Error));

            if (displayJournalLines.selection() == LedgerJournalLinesDisplayOption::ErrorsOnly)
            {
                if (qbds == null)
                {
                    ds = LedgerJournalTrans_Error::addDataSource(ledgerjournaltrans_ds.query().dataSourceTable(tableNum(LedgerJournalTrans)));
                }
                else
                {
                    qbds.enabled(true);
                }
            }
            else
            {
                this.disableDatasource(qbds);
            }

            ledgerJournalTrans_DS.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>disableDatasource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disables the initialized <c>QueryBuildDataSource</c> class object.
    /// </summary>
    /// <param name = "_qbds">
    /// The initialized <c>QueryBuildDataSource</c> class object.
    /// </param>
    protected void disableDatasource(QueryBuildDataSource _qbds)
    {
        if (_qbds)
        {
            _qbds.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShowTax</Name>
				<Source><![CDATA[
    public Tax getShowTax()
    {
        return ledgerJournalEngine.getShowTax(ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShowWithholdTax_IN</Name>
				<Source><![CDATA[
    public TaxWithholdJournal_IN getShowWithholdTax_IN()
    {
        return ledgerJournalEngine.getShowWithholdTax_IN(ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasAccountChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the main account has changed on the journal line.
    /// </summary>
    /// <returns>true if the main account has changes; false, otherwise.</returns>
    public boolean hasAccountChanged()
    {
        boolean hasAccountChanged;
        
        if (LedgerJournalTrans.AccountType == ledgerJournalACType::Ledger)
        {
            hasAccountChanged = currentMainAccountId != previousMainAccountId;

            previousMainAccountId = currentMainAccountId;
        }
        else
        {
            // force a non-ledger account change because there are no dimensions
            hasAccountChanged = true;
        }

        return hasAccountChanged;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the basic initialization of the form.
    /// </summary>
    public void init()
    {
        // <GEERU>
        #define.AutoYesNo_Yes(1)
        // </GEERU>

        // <GCN>
        #isoCountryRegionCodes

        boolean             allow;
        // </GCN>

        // <GIN>
        TaxParameters   taxParametersLoc = TaxParameters::find();
        // </GIN>

        // <GCN>
        chineseVoucher_CN = LedgerParameters::isChineseVoucher_CN();
        enableShowDRsCRs = LedgerShowDebCredController_CN::isShowDRsCRsFeatureEnabled();
        // </GCN>

        // <GJP>
        ledgerTAccountEnabled = LedgerParameters::isTAccount();
        // </GJP>

        // <GEERU>
        countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]);
        // </GEERU>

        // <GEECZ>
        countryRegion_CZ = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]);
        // </GEECZ>

        // <GEEPL>
        countryRegion_PL = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoPL]);
        // </GEEPL>

        // <GEEU>
        countryRegion_EasternEurope = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ, #isoEE, #isoHU, #isoLT, #isoLV, #isoPL]);
        // </GEEU>

        // <GTH>
        taxWithholdEnabledTH = TaxThaiGovCertificationFeatureChecker::isTaxWithholdEnabled();
        // </GTH>

        // <GIN>
        countryRegion_IN = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        // </GIN>

        countryRegion_MX = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]);

        enableLedgerJournalTrans_W = LedgerJournalTrans_W::isLegalEntityInCountryRegion();

        if (countryRegion_RU)
        {
            journalFormTrans = new LedgerJournalFormTrans_RU(element);
        }
        else
        {
            journalFormTrans = new LedgerJournalFormTrans(element);
        }

        mainAccountDimAttr = DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount);

        super();

        // <GSA>
        zakatParameterEnabled = LedgerParameters::find().IsZakatEnabled_SA;
        // </GSA>

        enableProjectOperationsIntegrationFeature = ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled();

        LedgerJournalTrans_AccountNum.parmDimensionAutocompleteFilter(
            new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType)));
        Group4_AccountNum.parmDimensionAutocompleteFilter(
            new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, OffsetLedgerDimension), fieldStr(LedgerJournalTrans, OffsetAccountType)));

        LedgerJournalTrans_OffsetAccount.parmDimensionAutocompleteFilter(
            new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType)));
        Group4_OffsetAccount.parmDimensionAutocompleteFilter(
            new DimensionAutocompleteVendDefaultFilter(ledgerJournalTrans_ds, fieldStr(LedgerJournalTrans, LedgerDimension), fieldStr(LedgerJournalTrans, AccountType)));

        LedgerJournalTrans_AccountNum.parmPostingType(LedgerPostingType::LedgerJournal);
        Group4_AccountNum.parmPostingType(LedgerPostingType::LedgerJournal);

        LedgerJournalTrans_OffsetAccount.parmPostingType(LedgerPostingType::LedgerJournal);
        Group4_OffsetAccount.parmPostingType(LedgerPostingType::LedgerJournal);

        CustPaymJournalFee_CustAccount.parmPostingType(LedgerPostingType::LedgerJournal);

        LedgerJournalTrans_AccountNum.parmValidateBlockedForManualEntry(true);
        Group4_AccountNum.parmValidateBlockedForManualEntry(true);

        LedgerJournalTrans_OffsetAccount.parmValidateBlockedForManualEntry(true);
        Group4_OffsetAccount.parmValidateBlockedForManualEntry(true);

        CustPaymJournalFee_CustAccount.parmValidateBlockedForManualEntry(true);

        // <GEERU><GEEU>
        if (RCashParameters::isCashModuleEnabled())
        {
            // Construct the entity manager to help manage entity-related tasks like in-memory rollbacks for aborted transactions.
            ledgerJournalTransEntityManager = LedgerJournalTransEntityManager::construct(ledgerJournalTrans_DS,
                                                                                  ledgerJournalTrans_Asset_DS,
                                                                                  ledgerJournalTrans_Project_DS,
                                                                                  tax1099BoxDetail_DS,
                                                                                  ledgerJournalTrans_RAsset_DS,
                                                                                  null,
                                                                                  ledgerJournalTrans_RCash_DS);
        }
        else
        {
            // </GEERU></GEEU>
            // Construct the entity manager to help manage entity-related tasks like in-memory rollbacks for aborted transactions.
            ledgerJournalTransEntityManager = LedgerJournalTransEntityManager::construct(ledgerJournalTrans_DS, ledgerJournalTrans_Asset_DS, ledgerJournalTrans_Project_DS
                                                                                  , tax1099BoxDetail_DS
            );
            // <GEERU><GEEU>
        }
        // </GEERU></GEEU>

        if (!LedgerParameters::find().AcknowledgementDate_IT)
        {
            ledgerJournalTrans_AcknowledgementDate.visible(false);
        }

        journalFormTrans.parmCtrlVoucherGrid(ledgerJournalTrans_Voucher);
        journalFormTrans.parmCtrlVoucherTab(ledgerJournalTrans_Voucher1);
        journalFormTrans.parmCtrlTransDateGrid(ledgerJournalTrans_TransDate);
        journalFormTrans.parmCtrlTransDateTab(ledgerJournalTrans_TransDate);
        journalFormTrans.parmCtrlExchRate(fieldExchRate);
        journalFormTrans.parmCtrlExchRateSecond(fieldExchRateSecond);
        journalFormTrans.parmCtrlReportingExchRate(reportingfieldExchRate);
        journalFormTrans.parmCtrlReportingExchRateSecond(reportingfieldExchRateSecond);
        journalFormTrans.parmCtrlBankDepositVoucherTab(bankDepositVoucherTab);
        journalFormTrans.parmCtrlSettlementButton(settlementButton);
        journalFormTrans.parmCtrlDepositSlipButton(depositSlipButton);
        journalFormTrans.parmCtrlCourseButton(buttonCourse);
        journalFormTrans.parmCtrlReportAsReadyButton(buttonReportAsReady);
        journalFormTrans.parmCtrlApproveButton(buttonApprove);
        journalFormTrans.parmCtrlRejectButton(buttonReject);
        journalFormTrans.parmCtrlPostJournalButton(postJournal);
        journalFormTrans.parmCtrlPostJournalBatchButton(postJournalBatch);
        journalFormTrans.parmCtrlPostAndTransferJournalButton(ledgerJournalPostTransfer);
        journalFormTrans.parmCtrlCheckJournalMenu(buttonCheckJournal);
        journalFormTrans.parmCtrlVoucherTransButton(buttonVoucherTrans);
        journalFormTrans.parmCtrlDeleteTransactionsButton(buttonDeleteTransactions);
        journalFormTrans.parmCtrlAccrualButton(ledgerJournalTransAccrual);
        journalFormTrans.parmCtrlBalanceControButton(buttonBalanceControl);
        journalFormTrans.parmCtrlGetTransactionsButton(buttonGetTransactions);
        journalFormTrans.parmCtrlSplitPostingButton(buttonSplitPosting);
        journalFormTrans.parmCtrlFurtherPostingButton(buttonFurtherPosting);
        journalFormTrans.parmCtrlCopyPeriodicButton(buttonCopyPeriodic);
        journalFormTrans.parmCtrlCreditInvoicing(buttonCustVendCreditInvoicing);
        journalFormTrans.parmCtrlJournalTextsButton(ledgerJournalTransTxt);
        journalFormTrans.parmCtrlFunctionMenuButton(functions);
        journalFormTrans.parmCtrlSalesTaxMenu(taxTransSource);
        journalFormTrans.parmCtrlDepositSlipButton(depositSlipButton);
        journalFormTrans.parmCtrlPeriodicJournalMenuButton(periodicJournal);
        journalFormTrans.parmCtrlSelectVoucherTemplateButton(selectVoucherTemplate);
        journalFormTrans.parmCtrlSaveVoucherTemplateButton(saveVoucherTemplate);
        journalFormTrans.parmCtrlAccountDimensionButton(accountDimension);
        journalFormTrans.parmCtrlOffsetAccountDimensionButton(offsetAccountDimension);
        journalFormTrans.parmCtrlPaymFeeAccountDimensionButton(paymentFeeAccountDimension);
        journalFormTrans.parmCalculatedTaxAmount(taxAmountJournal1);
        journalFormTrans.parmActualTaxAmount(correctedTaxAmount);
        journalFormTrans.parmCtrlErrorExists(ErrorExist);
        journalFormTrans.parmCtrlMassTransactionReversalButton(TransactionReversalDialog);
        journalFormTrans.parmCtrlMassTransactionReversalFailuresButton(TransactionReversalFailures);

        // <GEERU>
        if (countryRegion_RU)
        {
            functions.multiSelect(#AutoYesNo_Yes);
            journalFormTrans.parmCtrlCashDueAnnouncementButton_RU(cashDueAnnouncement_RU);
            journalFormTrans.parmCtrlCancelCashDueAnnouncement_RU(cancelCashDueAnnouncement_RU);
            journalFormTrans.parmCtrlJournalTransDateSetButton_RU(ledgerJournalTransDateSet_RU);
        }
        // </GEERU>

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            if (taxParametersLoc.vat_in)
            {
                journalFormTrans.parmCtrlDefermentSchedule_IN(defermentSchedule_IN);
            }

            if (taxParametersLoc.Excise_IN)
            {
                journalFormTrans.parmCtrlChallanInformationButton_IN(challanInformation_IN);
            }
        }
        // </GIN>

        // <GJP>
        if (ledgerTAccountEnabled)
        {
            journalFormTrans.parmCtrlLedgerJournalTransDailyTAccount(ledgerJournalTransDailyTAccount);
        }
        // </GJP>

        journalFormTrans.formInitPost();

        this.initLedger();

        TaxVATNumTable::enableLookupVATNum(vatNumJournal);

        cashDiscChanged = false;
        imageListAppl   = new ImageListAppl_LedgerJournal();
        errorExist.imageList(imageListAppl.imageList());

        if (TaxParameters::find().CashDiscOnInvoice)
        {
            GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceES00021, funcName());
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, DateCashDisc)).visible(false);
        }
        else
        {
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, CashDiscPercent)).allowEdit(false);
        }

        // Disable the company accounts field on the general tab if Intercompany transactions are disabled
        if (!isConfigurationkeyEnabled(configurationKeyNum(LedgerAdvIntercompanyAccounting)))
        {
            ledgerJournalTrans_Company.allowEdit(false);
            TabCompany.allowEdit(false);
        }

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            element.setTaxWithholdTransVisible_IN();
            element.setTaxWithholdVisible_IN();
            element.setVisible_IN();
            element.setWithTaxPayment_IN();
            element.setWouldYouClaimRefund_IN();

            journalFormTrans.parmCtrlUpdateGSTDetailsButton_IN(TaxGSTSummaryDetails_IN);
        }
        // </GIN>

        // <GJP>
        ledgerJournalTransDailyTAccount.visible(ledgerTAccountEnabled);
        // </GJP>

        // <GCN>
        if (chineseVoucher_CN)
        {
            if (element.args().caller().isSimpleMethod_CN() == NoYes::Yes)
            {
                isSimpleMethod = NoYes::Yes;
            }
            else
            {
                isSimpleMethod = NoYes::No;
            }

            allow = ledgerJournalTable.ledgerJournalName().NewVoucher == NewVoucher::Manually &&
                    !ledgerJournalTable.VoucherAllocatedAtPosting &&
                    !isSimpleMethod;
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher_CN)).enabled(allow);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Voucher)).enabled(false);
        }
        // </GCN>

        this.enableBankLC();

        // <GSA>
        zakat_SA.visible(zakatParameterEnabled);
        // </GSA>

        // 1099 Tab should only be visible in the US
        tax1099Tab.visible(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoUS]));

        hcmWorkerLookupActiveCurrentCompany = HcmWorkerLookup::newOnlyActiveWorkersWithinCompany();

        // <GTH>
        if (TaxThaiGovCertificationFeatureChecker::isAverageVATEnabled())
        {
            this.updateDesignForAverageVAT();
        }

        if (taxWithholdEnabledTH)
        {
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxWithholdCalculate_TH)).visible(false);
        }
        // </GTH>

        keepSalesPriceOnWrite = false;

        displayJournalLines.selection(LedgerJournalLinesDisplayOption::All);

        // <GTE>
        if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
        {
            // <GIN>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                GSTPayment_IN.visible(true);
            }
            // </GIN>
        }
        // </GTE>

        reverseCharge = ReverseCharge_W::newParameters(ledgerJournalTrans, ledgerJournalTrans);

        overviewGrid.setFocus();

        if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
        {
            TaxDocumentLauncher.visible(true);
            TaxTransSource.visible(false);
            LedgerJournalTrans_TaxGroup.visible(false);
            LedgerJournalTrans_TaxItemGroup.visible(false);
            LedgerJournalTrans_TaxCode.visible(false);
            LedgerJournalTrans_Grid_TaxGroup.visible(false);
            LedgerJournalTrans_Grid_TaxItemGroup.visible(false);
        }

        if (CashRegisterProcessingBase::isEnabledForCurrentUser())
        {
            CashRegister_W.visible(true);
            CashRegisterReceipt_W.visible(true);
        }

        isTaxInformationEnabled = TaxIntegrationUtils::isTaxInformationEnabled();
        TransTaxInformation.visible(isTaxInformationEnabled);

        if (isTaxInformationEnabled)
        {
            boolean isProject = element.isProject();
            element.setTaxInformationVisible(isProject);
        }

        if (TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalTable.JournalType))
        {
            LedgerJournalTransTaxExtension_ds.object(fieldNum(LedgerJournalTransTaxExtension, OverrideSalesTax)).visible(true);
        }

        this.initFinancialTags();

        // <GJP>
        if (this.isTaxDifferencePostingOnJapanConsInvoiceEnabled)
        {
            LedgerJournalTransTaxExtension_ds.object(fieldNum(LedgerJournalTransTaxExtension, TaxInCostPrice)).visible(true);
        }
        // </GJP>

        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, RCashDocRepresPersonId)).visible(BankParameters::getEnablePettyCash());
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdTransVisible_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set button TaxWithholdTrans_IN is visible when flighting is enable.
    /// </summary>
    private void setTaxWithholdTransVisible_IN()
    {
        WithholdTax_IN.visible(false);
        TaxWithholdTrans_IN.visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCallerLink</Name>
				<Source><![CDATA[
    /// <summary>
    /// Activates data link by calling <c>linkActive()</c> method on this form.
    /// </summary>
    /// <remarks>
    /// It is called when T-account form is closed and datasource will be synced.
    /// </remarks>
    public void initCallerLink()
    {
        if (ledgerTAccountEnabled)
        {
            ledgerJournalTrans_ds.linkActive();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initIntracomVATDueDate</Name>
				<Source><![CDATA[
    void initIntracomVATDueDate()
    {
        ledgerJournalTrans_DS.object(fieldNum(LedgerJournalTrans, IntraComVATDueDate_W)).enabled(VendParameters::find().DocumentDateForIntracomVAT_W);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLedger</Name>
				<Source><![CDATA[
    void initLedger()
    {
        TransDate   dateFrom    = dateNull();
        TransDate   dateTo      = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());

        if (element.args().dataset() == tableNum(LedgerJournalTable))
        {
            ledgerJournalTable  = element.args().record();

            journalNum          = ledgerJournalTable.JournalNum;

            LedgerJournalTrans_AccountNum.parmJournalName(ledgerJournalTable.JournalName);
            Group4_AccountNum.parmJournalName(ledgerJournalTable.JournalName);

            LedgerJournalTrans_OffsetAccount.parmJournalName(ledgerJournalTable.JournalName);
            Group4_OffsetAccount.parmJournalName(ledgerJournalTable.JournalName);

            CustPaymJournalFee_CustAccount.parmJournalName(ledgerJournalTable.JournalName);

            if (ledgerJournalTable.FixedOffsetAccount)
            {
                if (ledgerJournalTable.parmOffsetLedgerDimension() != 0)
                {
                    this.calculateBalances(dateFrom, dateTo);
                    OffsetBalance.visible(true);

                    ledgerJournalTrans_OffsetCompany.allowEdit(false);
                    TabOffsetCompany.allowEdit(false);
                }
                else
                {
                    OffsetBalance.visible(false);

                    ledgerJournalTrans_OffsetCompany.allowEdit(true);
                    TabOffsetCompany.allowEdit(true);
                }

                ledgerJournalTrans_OffsetType.allowEdit(false);
            }
            else
            {
                OffsetBalance.visible(false);

                ledgerJournalTrans_OffsetCompany.allowEdit(true);
                TabOffsetCompany.allowEdit(true);

                ledgerJournalTrans_OffsetType.allowEdit(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateBalances</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates starting balance of offset account according to its type.
    /// </summary>
    /// <param name = "_dateFrom">
    /// Starting date of accounting period.
    /// </param>
    /// <param name = "_dateTo">
    /// End date of accounting period.
    /// </param>
    protected void calculateBalances(TransDate _dateFrom, TransDate _dateTo)
    {
        switch (ledgerJournalTable.OffsetAccountType)
        {
            case LedgerJournalACType::Ledger:
                MainAccount::updateBalances();

                ledgerBalance = LedgerBalanceMainAccountAmounts::construct();
                ledgerBalance.parmIncludeRegularPeriod(true);
                ledgerBalance.parmIncludeClosingPeriod(true);
                ledgerBalance.parmAccountingDateRange(_dateFrom, _dateTo);
                ledgerBalance.calculateBalance(LedgerDimensionFacade::getMainAccountFromLedgerDimension(ledgerJournalTable.OffsetLedgerDimension));
                balanceAmountMST = ledgerBalance.getAccountingCurrencyBalance();
                break;

            case LedgerJournalACType::Bank:
                bankSingleCurrency = BankAccountTable::isSingleCurrency(ledgerJournalTable.parmOffsetAccount(), ledgerJournalTable.JournalNum);

                balanceAmountCur    = BankAccountTrans::sumTransCur(ledgerJournalTable.parmOffsetAccount());
                balanceAmountMST    = BankAccountTrans::sumTransMST(ledgerJournalTable.parmOffsetAccount());

                if (LedgerJournalName::find(ledgerJournalTable.JournalName).EndBalanceControl)
                {
                    FixedOffsetBalanceEndControl.visible(true);
                }

                break;

            case LedgerJournalACType::Cust:
                balanceAmountMST = CustTrans::balanceMST(ledgerJournalTable.parmOffsetAccount());
                break;

            case LedgerJournalACType::Vend:
                balanceAmountMST = VendTrans::balanceMST(ledgerJournalTable.parmOffsetAccount());
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalForm</Name>
				<Source><![CDATA[
    JournalForm journalForm()
    {
        return journalFormTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalEngine</Name>
				<Source><![CDATA[
    LedgerJournalEngine ledgerJournalEngine()
    {
        return ledgerJournalEngine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerJournalTable</Name>
				<Source><![CDATA[
    LedgerJournalTable ledgerJournalTable()
    {
        return ledgerJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostalAddressLocation</Name>
				<Source><![CDATA[
    public LogisticsLocationRecId parmPostalAddressLocation(LogisticsLocationRecId _postalAddressLocation = ledgerJournalTrans.RemittanceLocation)
    {
        ledgerJournalTrans.RemittanceLocation = _postalAddressLocation;
        return ledgerJournalTrans.RemittanceLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshLedgerJournalTrans_IN</Name>
				<Source><![CDATA[
    void refreshLedgerJournalTrans_IN()
    {
        ledgerJournalTrans_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>research</Name>
				<Source><![CDATA[
    void research()
    {
        ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);

        ledgerJournalTrans_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refresh</Name>
				<Source><![CDATA[
    public void refresh()
    {
        element.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearCache</Name>
				<Source><![CDATA[
    public void clearCache(Voucher _voucher)
    {
        ledgerJournalEngine.clearTaxAmountCacheVoucher(_voucher, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCashDiscount</Name>
				<Source><![CDATA[
    public void updateCashDiscount(Voucher _voucher)
    {
        if (_voucher == ledgerJournalTrans.Voucher)
        {
            ledgerJournalEngine.updateCashDisc(ledgerJournalTrans);
        }
        else
        {
            LedgerJournalTrans journalTrans = LedgerJournalTrans::find(ledgerJournalTable.JournalNum, _voucher, false);
            ledgerJournalEngine.updateCashDisc(journalTrans);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountsByBankLC</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the default accounts for Letter of Credit transactions.
    /// </summary>
    public void setAccountsByBankLC()
    {
        switch (ledgerJournalTransBankLC.TransType)
        {
            case BankLCLedgerJournalTransType::Blank :
            case BankLCLedgerJournalTransType::Settlement :
                break;
            case BankLCLedgerJournalTransType::Margin :
                BankLCImportMarginTransType::setDefaultAccounts(ledgerJournalTrans, ledgerJournalTransBankLC);
                break;
            case BankLCLedgerJournalTransType::MiscCharge_SA :
                if (bankLCChargeEnabled)
                {
                    BankLCImportChargeTransType_SA::setDefaultAccounts(ledgerJournalTrans, ledgerJournalTransBankLC);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEdit1099GFields</Name>
				<Source><![CDATA[
    void setAllowEdit1099GFields()
    {
        boolean canEdit;

        canEdit = (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099G::incomeTaxRefundsCreditsOffsets()));

        tax1099GFields.allowEdit(canEdit);

        canEdit = (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099G::unemploymentCompensation()));

        tax1099G1Fields.allowEdit(canEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEdit1099SFields</Name>
				<Source><![CDATA[
    void setAllowEdit1099SFields()
    {
        boolean canEdit;

        canEdit = (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099S::grossProceeds()));

        tax1099SFields.allowEdit(canEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEditTax1099</Name>
				<Source><![CDATA[
    void setAllowEditTax1099()
    {
        //Amounts on setup tab are not editable for 1099-G box 2 and 1099-S
        if (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099S::grossProceeds()))
        {
            tax1099Amount.allowEdit(false);
            fields1099_Tax1099StateAmount.allowEdit(false);
        }
        else
        {
            tax1099Amount.allowEdit(true);
            fields1099_Tax1099StateAmount.allowEdit(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlVisible_CN</Name>
				<Source><![CDATA[
    public void setControlVisible_CN()
    {
        if (LedgerParameters::isChineseVoucher_CN())
        {
            if (isSimpleMethod)
            {
                ledgerJournalTrans_LedgerVoucherType_CN.visible(false);
                ledgerJournalTrans_Attachments_CN.visible(false);
            }
            else
            {
                ledgerJournalTrans_LedgerVoucherType_CN.visible(true);
                ledgerJournalTrans_Attachments_CN.visible(true);
            }

            ledgerJournalTrans_Voucher_CN.visible(true);
            ledgerJournalTrans_Voucher_CN1.visible(true);
            ledgerVoucherReport.visible(true);
        }
        else
        {
            ledgerJournalTrans_LedgerVoucherType_CN.visible(false);
            ledgerJournalTrans_Attachments_CN.visible(false);
            ledgerJournalTrans_Voucher_CN.visible(false);
            ledgerJournalTrans_Voucher_CN1.visible(false);
            ledgerJournalTrans_Voucher.visible(true);
            ledgerVoucherReport.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCorrectedTaxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Set the value of the corrected tax amount within caller form
    /// </summary>
    /// <param name="_correctedTaxAmountCur">
    ///     corrected tax amount from sales tax form.
    /// </param>
    /// <remarks>
    ///     Method is used to set the corrected tax amount to caller form
    /// </remarks>
    public void setCorrectedTaxAmount(TaxAmount _correctedTaxAmountCur)
    {
        ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans, _correctedTaxAmountCur, true, false);
        ledgerJournalTrans_ds.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDebCredProposal</Name>
				<Source><![CDATA[
    void setDebCredProposal(boolean _init)
    {
        if (_init)
        {
            debCredProposal = DebCredProposal::None;
        }

        if (debCredProposal != debCredProposalOld)
        {
            switch (debCredProposal)
            {
                case DebCredProposal::Credit  :
                    ledgerJournalTrans_AmountCurDebit.skip(true);
                    break;

                case DebCredProposal::Debit   :
                    ledgerJournalTrans_AmountCurCredit.skip(true);
                    break;

                case DebCredProposal::None    :
                    ledgerJournalTrans_AmountCurCredit.skip(false);
                    ledgerJournalTrans_AmountCurDebit.skip(false);
                    break;
            }
            debCredProposalOld = debCredProposal;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPaymentByLetterOfCredit</Name>
				<Source><![CDATA[
    public void setPaymentByLetterOfCredit()
    {
        if (ledgerJournalTransBankLC.BankLCLine)
        {
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, PaymMode)).allowEdit(false);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, PaymSpec)).allowEdit(false);
            ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, Prepayment)).allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjAccountNum</Name>
				<Source><![CDATA[
    void setProjAccountNum()
    {
        group4_AccountNum.visible(true);
        group4_OffsetAccount.visible(false);

        if (ledgerJournalTrans.AccountType ==  LedgerJournalACType::Project)
        {
            group4_AccountNum.visible(true);
            group4_OffsetAccount.visible(false);
        }

        if (ledgerJournalTrans.OffsetAccountType ==  LedgerJournalACType::Project)
        {
            group4_AccountNum.visible(false);
            group4_OffsetAccount.visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStoppedReleaseFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the release date and comment fields according to <c>Approved</c> checkbox status.
    /// </summary>
    void setStoppedReleaseFields()
    {
        boolean isVend = (ledgerJournalTrans.AccountType ==  LedgerJournalACType::Vend || ledgerJournalTrans.OffsetAccountType ==  LedgerJournalACType::Vend);

        if (isVend && !ledgerJournalTable.Posted)
        {
            if (ledgerJournalTrans.Approved == NoYes::No)
            {
                ledgerJournalTrans.InvoiceReleaseDate = utcDateTimeNull();
                approve_invoiceReleaseDate.enabled(false);
                ledgerJournalTrans.ReleaseDateComment = "";
                approve_ReleaseDateComment.enabled(false);
            }
            else
            {
                approve_invoiceReleaseDate.enabled(true);
                approve_releaseDateComment.enabled(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdEnabled_IN</Name>
				<Source><![CDATA[
    void setTaxWithholdEnabled_IN()
    {
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tdsGroup)).enabled(
                                    (!ledgerJournalTransTaxExtensionIN.tcsGroup && !ledgerJournalTrans.TaxWithholdGroup));
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tcsGroup)).enabled(
                                    (!ledgerJournalTransTaxExtensionIN.tdsGroup && !ledgerJournalTrans.TaxWithholdGroup));
        ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxWithholdGroup)).enabled(
                                    (!ledgerJournalTransTaxExtensionIN.tdsGroup && !ledgerJournalTransTaxExtensionIN.tcsGroup));
        boolean withholdTaxEnable = ledgerJournalTransTaxExtensionIN.tdsGroup || ledgerJournalTransTaxExtensionIN.tcsGroup || ledgerJournalTransTaxExtensionIN.TaxWithholdCode;

        TaxWithholdTrans_IN.enabled(withholdTaxEnable);

        if (ledgerJournalTable.Posted)
        {
            taxWitholdChallan_IN.enabled(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdVisible_IN</Name>
				<Source><![CDATA[
    void setTaxWithholdVisible_IN()
    {
        TaxWithholdParameters_IN    taxWithholdParameters;

        taxWithholdParameters = TaxWithholdParameters_IN::find();
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tdsGroup)).visible(taxWithholdParameters.tdsActivate);
        ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tcsGroup)).visible(taxWithholdParameters.tcsActivate);
        taxWithhold_IN.visible(taxWithholdParameters.tdsActivate || taxWithholdParameters.tcsActivate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible</Name>
				<Source><![CDATA[
    void setVisible()
    {
        boolean isProject     = ledgerJournalTrans.AccountType ==  LedgerJournalACType::Project ||
                                ledgerJournalTrans.OffsetAccountType ==  LedgerJournalACType::Project;

        boolean isVend        = (ledgerJournalTrans.AccountType ==  LedgerJournalACType::Vend ||
                                ledgerJournalTrans.OffsetAccountType ==  LedgerJournalACType::Vend);

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            isVend = (ledgerJournalTrans.AccountType ==  LedgerJournalACType::Vend ||
                        ledgerJournalTrans.OffsetAccountType ==  LedgerJournalACType::Vend) &&
                        ( isConfigurationkeyEnabled(configurationKeyNum(Tax1099G)) &&
                            isConfigurationkeyEnabled(configurationKeyNum(Tax1099S)));
        }

        approve_InvoiceReleaseDate.visible(isVend);
        approve_ReleaseDateComment.visible(isVend);

        projectTab.visible(isProject);

        if (isTaxInformationEnabled)
        {
            boolean isProjectTrans = element.isProject();
            element.setTaxInformationVisible(isProjectTrans);
        }

        Correction.visible(isProject
            && LedgerParameters::find().TransactionReversalCorrection);

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoUS]))
        {
            tax1099Tab.visible(isVend);
        }

        boolean useReportingCurrency = Ledger::reportingCurrency() != '';
        totalsGroupTabularReportingCurrency.visible(useReportingCurrency);
        accountingCurrencytotalHeaderCaption.visible(useReportingCurrency);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible_IN</Name>
				<Source><![CDATA[
    private void setVisible_IN()
    {
        TaxParameters taxParametersLoc = TaxParameters::find();
        boolean       isTaxParametersMarked = TaxParameters::checkTaxParameters_IN();
        boolean       isTaxWithholdParameterMarked = TaxWithholdParameters_IN::checkTaxParameters();

        challanInformation_IN.visible(isTaxParametersMarked);
        updatePLA_IN.visible(taxParametersLoc.Excise_IN);
        plaVoucher_IN.visible(taxParametersLoc.Excise_IN);

        currency_AssessableValue_IN.visible(isTaxParametersMarked);
        currency_MaximumRetailPrice_IN.visible(isTaxParametersMarked);
        ledgerTaxJournal_IN.visible(isTaxParametersMarked);
        // Direct tax adjustment journals.
        ledgerTaxWithholdJournal_IN.visible(isTaxWithholdParameterMarked);
        DirectTax_TaxWithholdCode_IN.visible(isTaxWithholdParameterMarked);

        defermentSchedule_IN.visible(taxParametersLoc.vat_in);
        TaxGSTSummaryDetails_IN.visible(TaxSolutionScopeIntegrationUtil::isCompanyEnabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxWithholdAutority_IN</Name>
				<Source><![CDATA[
    void taxWithholdAutority_IN(boolean _checkStatus = false)
    {
        if (ledgerJournalTrans.checkSettledVendorAutority_IN(_checkStatus))
        {
            ledgerJournalTransTaxExtensionIN_DS.object(fieldNum(LedgerJournalTransTaxExtensionIN, tdsGroup)).enabled(false);
            ledgerJournalTransTaxExtensionIN_DS.object(fieldNum(LedgerJournalTransTaxExtensionIN, tcsGroup)).enabled(false);
            ledgerJournalTrans_DS.object(fieldNum(LedgerJournalTrans, TaxWithholdGroup)).enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesignForAverageVAT</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Changes the labels when Average VAT feature is active.
    /// </summary>
    private void updateDesignForAverageVAT()
    {
        // Tax invoice number
        documentNum.label("@SYS4082540");
        // Enter the identification number of the tax invoice received from the vendor.
        documentNum.helpText("@SYS4082955");
        // Tax invoice date
        documentDate.label("@SYS4082542");
        // Select the date of the vendorâ€™s tax invoice.
        documentDate.helpText("@SYS4082958");
        // Invoice number
        invoice.label("@SYS4726");

        ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, InvoiceDate)).visible(true);
        ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, InvoiceReceiptDate)).visible(true);
        ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, TaxInvoiceReceiptDate)).visible(true);
        ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, RealVendName)).visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateJournalBalance</Name>
				<Source><![CDATA[
    void updateJournalBalance()
    {
        // <GEERU>
        if (!journalFormTrans.parmFactureSource_RU())
        {
            // </GEERU>
            ledgerJournalTable.reread();
            ledgerJournalTable.setJournalBalance(ledgerjournaltrans_ds.ledgerJournalBalance());
            element.bookRefresh();
            // <GEERU>
        }
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSaleFactorField</Name>
				<Source><![CDATA[
    void updateSaleFactorField()
    {
        if (ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::DisposalSale ||
            ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::DisposalScrap)
        {
            ledgerJournalTrans_AssetSaleFactor_PL.allowEdit(true);
        }
        else
        {
            ledgerJournalTrans_AssetSaleFactor_PL.allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTaxWithholdControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the status of controls that for Thailand Withholding Tax feature.
    /// </summary>
    public void updateTaxWithholdControls()
    {
        switch (ledgerJournalTrans.AccountType)
        {
            case LedgerJournalACType::Cust:
                taxWithholdCertificate.enabled(true);
                taxWithholdPaymentGrossUpGroup.enabled(false);
                taxAgentGroup.enabled(false);
                break;

            case LedgerJournalACType::Vend:
                taxWithholdCertificate.enabled(false);
                taxWithholdPaymentGrossUpGroup.enabled(true);
                taxAgentGroup.enabled(true);
                break;

            default:
                taxWithholdCertificate.enabled(false);
                taxWithholdPaymentGrossUpGroup.enabled(false);
                taxAgentGroup.enabled(false);
                break;
        }

        if (taxWithholdPaymentGrossUpGroup.enabled())
        {
            if (ledgerJournalTrans.hasRelatedTaxWithholdTrans())
            {
                ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, PaymentGrossUpType)).allowEdit(false);
            }
            else
            {
                ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, PaymentGrossUpType)).allowEdit(true);
            }

            if (ledgerJournalTransExtensionTH.PaymentGrossUpType == TaxWithholdPaymentGrossUpType::Other)
            {
                ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, PaymentGrossUpOtherDetail)).enabled(true);
            }
            else
            {
                ledgerJournalTransExtensionTH_ds.object(fieldNum(LedgerJournalTransExtensionTH, PaymentGrossUpOtherDetail)).enabled(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAccountType_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates account type
    /// </summary>
    /// <param name="_accType">
    /// Account Type
    /// </param>
    /// <returns>
    /// true if valid; otherwise, false.
    /// </returns>
    public boolean validateAccountType_RU(LedgerJournalACType _accType)
    {
        boolean isValid = true;
        if (_accType == LedgerJournalACType::FixedAssets_RU ||
            _accType == LedgerJournalACType::RDeferrals)
        {
            isValid = checkFailed("@SYS327036");
        }
        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>visibleAccountNum_IN</Name>
				<Source><![CDATA[
    void visibleAccountNum_IN()
    {
        LedgerJournalTrans_Asset    ledgerJournalTrans_AssetLoc;

        if (ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
        {
            ledgerJournalTrans_AssetLoc = LedgerJournalTrans_Asset::find(ledgerJournalTrans.RecId);
            if (AssetParameters::find().DepreciationIncomeTaxAct_IN &&
                ledgerJournalTable.CurrentOperationsTax == CurrentOperationsTax::Tax)
            {
                AssetCreateJournal_BonusDepreciation.visible(true);
                ledgerJournalTrans_Asset_ds.object(fieldNum(LedgerJournalTrans_Asset, AssetGroup_IN)).visible(true);
                ledgerJournalTrans_AssetLoc.AssetGroup_IN = AssetTable::find(ledgerJournalTrans.parmAccount()).AssetGroup;
            }
            else
            {
                AssetCreateJournal_BonusDepreciation.visible(false);
                ledgerJournalTrans_Asset_ds.object(fieldNum(LedgerJournalTrans_Asset, AssetGroup_IN)).visible(false);
            }

            if (AssetParameters::find().DepreciationIncomeTaxAct_IN                                                             &&
                AssetBook::find(ledgerJournalTrans.parmAccount(), ledgerJournalTrans_AssetLoc.BookId).AssetGroupDepreciation_IN    &&
               (ledgerJournalTrans_AssetLoc.TransType == AssetTransTypeJournal::Depreciation                                    ||
                ledgerJournalTrans_AssetLoc.TransType == AssetTransTypeJournal::DepreciationAdj))
            {
                ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, LedgerDimension)).enabled(false);
            }
            else
            {
                ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, LedgerDimension)).enabled(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>visibleNotificationCentralBank</Name>
				<Source><![CDATA[
    void visibleNotificationCentralBank()
    {
        #ISOCountryRegionCodes
        if (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust ||
            ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust)
        {
            groupNotificationToTheCentralBank.visible(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]));
        }
        else
        {
            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend ||
                ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)
            {
                groupNotificationToTheCentralBank.visible(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]));
            }
            else
            {
                groupNotificationToTheCentralBank.visible(false);
            }
        }

        // <GEEU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLV]))
        {
            if (ledgerJournalTrans.AccountType          == LedgerJournalACType::Bank ||
                ledgerJournalTrans.OffsetAccountType    == LedgerJournalACType::Bank)
            {
                groupNotificationToTheCentralBank.visible(true);
            }
        }
        // </GEEU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>voucherType_CN</Name>
				<Source><![CDATA[
    public LedgerVoucherTypeId_CN voucherType_CN()
    {
        return LedgerVoucherType_CN::find(ledgerJournalTrans.LedgerVoucherType_CN).Id;
    }

]]></Source>
			</Method>
			<Method>
				<Name>customizeMenuOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Customizes the options used to populate the Office Menu.
    /// </summary>
    /// <param name = "_menuOptions">The menu options to be customized.</param>
    public void customizeMenuOptions(OfficeMenuOptions _menuOptions)
    {
        journalFormTrans.customizeOfficeMenuOptions(_menuOptions);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInitialTemplateFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the set of initial filters to be applied to the template.
    /// </summary>
    /// <param name = "_menuItem">
    /// The menu item for the template to apply the filters to.
    /// </param>
    /// <returns>
    /// The Map of filters to apply keyed by AOT entity name.
    /// </returns>
    public Map getInitialTemplateFilters(OfficeTemplateExportMenuItem _menuItem)
    {
        LedgerIJournalExcelTemplate template = LedgerJournalExcelTemplate::constructForTemplateName(_menuItem.templateId());

        Map filtersToApply = LedgerJournalExcelTemplate::getFilterMapForTemplate(template, journalFormTrans.journalTable());

        return filtersToApply;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTemplateSettings</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies any updates to the settings contained within the template for the specified menu item.
    /// </summary>
    /// <param name="_menuItem">The menu item.</param>
    /// <param name="_settingsManager">The <see cref="SettingsManager"/> to use when performing the updates.</param>
    public void updateTemplateSettings(OfficeTemplateExportMenuItem _menuItem, Microsoft.Dynamics.Platform.Integration.Office.SettingsManager _settingsManager)
    {
        journalFormTrans.initializeOpenExcelTemplate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonCompensationLetter_EE</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables and disables the button compensation letter.
    /// </summary>
    /// <param name = "_ledgerJournalTrans">The specified ledger journal trans.</param>
    protected void enableButtonCompensationLetter_EE(LedgerJournalTrans _ledgerJournalTrans)
    {
        QueryRun qrCust = this.getQueryRunForCompensation_EE(queryStr(CustVendCompensationReportCust), _ledgerJournalTrans);
        QueryRun qrVend = this.getQueryRunForCompensation_EE(queryStr(CustVendCompensationReportVend), _ledgerJournalTrans);

        compensationLetter.enabled(qrCust.next() || qrVend.next() ? !ledgerJournalEngine.posted() : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryRunForCompensation_EE</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query run for compensation by special ledger journal trans.
    /// </summary>
    /// <param name = "_query">The specified query.</param>
    /// <param name = "_ledgerJournalTrans">The specified ledger journal trans.</param>
    /// <returns>
    /// The query run with specified range.
    /// </returns>
    protected QueryRun getQueryRunForCompensation_EE(str _query, LedgerJournalTrans _ledgerJournalTrans)
    {
        Query custVendCompensation = new Query(_query);

        QueryBuildDataSource qbds = custVendCompensation.dataSourceTable(tableNum(SpecTrans));
        qbds.rangeField(fieldNum(SpecTrans, SpecRecId)).value(queryValue(_ledgerJournalTrans.RecId));
        qbds.rangeField(fieldNum(SpecTrans, SpecTableId)).value(queryValue(_ledgerJournalTrans.TableId));
        qbds.rangeField(fieldNum(SpecTrans, SpecCompany)).value(queryValue(_ledgerJournalTrans.DataAreaId));

        return new QueryRun(custVendCompensation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>visibleProvisionalAssessment_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the ProvisionalAssessment_IN to visible if it is customer invoice, else will set to invisible.
    /// </summary>
    // <GIN>
    public void visibleProvisionalAssessment_IN()
    {
        if ((LedgerJournalTrans.AccountType == LedgerJournalACType::Cust || LedgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust)
            && LedgerJournalTrans_Tax_Extension::isCustomerInvoice(LedgerJournalTrans))
        {
            ProvisionalAssessment_IN.visible(true);
        }
        else
        {
            ProvisionalAssessment_IN.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>settleTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the actions for settling transactions.
    /// </summary>
    protected void settleTransactions()
    {
        ledgerJournalEngine.settleTrans(ledgerJournalTrans);
        ledgerJournalEngine.preWrite(ledgerJournalTrans, ledgerJournalTrans_Project);
        ledgerJournalTrans.update();
        ledgerJournalTrans_ds.reread();
        ledgerJournalEngine.write(ledgerJournalTrans);
        ledgerJournalTrans.fillPaymentNotes();

        ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCashDiscOnInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the Cash Discount is applied on the invoice.
    /// </summary>
    /// <returns>
    /// A boolean value indicates Cash Discount is applied on the invoice.
    /// </returns>
    protected boolean isCashDiscOnInvoice()
    {
        return TaxParameters::find().CashDiscOnInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _p1)
    {
        #task

        if (_p1 == #taskRefresh)
        {
            // If the journal lines were modified through an integration such as the Excel add-in, the ledgerjournalengine journal balances
            // need to be recalculated to reflect the updated balance on the form
            if (ledgerJournalEngine)
            {
                ledgerJournalEngine.newJournalActive(ledgerJournalEngine.ledgerJournalTable(), true);
            }
        }

        int ret = super(_p1);
            
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTransTaxInformation</Name>
				<Source><![CDATA[
    private void updateTransTaxInformation()
    {
        // Since we changed the account/offset account, we need to update related TransTaxInformation as well.
        TransTaxInformation transTaxInformationLocal = TransTaxInformationHelper::newHelper().findTransTaxInformationByRecord(ledgerJournalTrans);
        if (transTaxInformationLocal)
        {
            ttsbegin;
            transTaxInformationLocal.selectForUpdate(true);

            TaxModelTaxable taxModelTaxable = TaxModelDocLineFactory::newTaxModelDocLine(ledgerJournalTrans);
            CustVendTable   custVendTable   = taxModelTaxable.getPartyTable();

            transTaxInformationLocal.CustomerLocation = 0;
            TransTaxInformationHelper::initFromCustVend(transTaxInformationLocal, custVendTable, taxModelTaxable);

            transTaxInformationLocal.update();
            ttscommit;
        }

        boolean isProject = element.isProject();
        if (isProject)
        {
            ProjTable projTable = ledgerJournalTrans.findProjTable();
            TransTaxInformationHelper helper = TransTaxInformationHelper::newHelper();
            helper.updateTransTaxInformationFromProjTable(ledgerJournalTrans_Project);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if it is a project transaction.
    /// </summary>
    /// <returns>true if project transaction; otherwise, false.</returns>
    private boolean isProject()
    {
        LedgerJournalTrans ledgerJournalTransLoc;
        boolean isProject;

        if (ledgerJournalTrans.AccountType ==  LedgerJournalACType::Project || ledgerJournalTrans.OffsetAccountType ==  LedgerJournalACType::Project)
        {
            isProject = true;
        }
        else
        {
            select firstonly RecId from ledgerJournalTransLoc
                where ledgerJournalTransLoc.Voucher == ledgerJournalTrans.Voucher
                    && (ledgerJournalTransLoc.AccountType ==  LedgerJournalACType::Project 
                        || ledgerJournalTransLoc.OffsetAccountType ==  LedgerJournalACType::Project);

            if (ledgerJournalTransLoc)
            {
                isProject = true;
            }
        }
        return isProject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxInformationVisible</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets tax information visible or not.
    /// </summary>
    private void setTaxInformationVisible(boolean _isProject)
    {
        if ((ledgerJournalTrans.AccountType == LedgerJournalACType::Project && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger)
            || (ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project))
        {
            TransTaxInformation_Cost.visible(false);
        }
        else
        {
            TransTaxInformation_Cost.visible(_isProject);
        }
        TransTaxInformation_Invoice.visible(_isProject);
        TransTaxInformation.visible(!_isProject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWithTaxPayment_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the with tax payment field visible and editable.
    /// </summary>
    private void setWithTaxPayment_IN()
    {
        if (LedgerJournalTrans.RecId)
        {
            if (LedgerJournalTrans::isCustomerInvoice(LedgerJournalTrans) || LedgerJournalTrans::isVendorInvoice(LedgerJournalTrans))
            {
                CustVendTable custVendTable = LedgerJournalTrans.findCustVendTable();
                TaxGSTEPZCodeHelper epzHelper = TaxGSTEPZCodeHelper::construct(custVendTable);
                ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, WithIGSTPayment)).visible(epzHelper.isEPZCodeNotNone() || TaxInformationCustTable_IN::findByCustTable(custVendTable.AccountNum).IsForeign);
                ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, WithIGSTPayment)).allowEdit(!epzHelper.isDeemedExport());
            }
            else
            {
                ledgerJournalTransTaxExtensionIN.WithIGSTPayment = NoYes::No;
                ledgerJournalTransTaxExtensionIN.WouldYouClaimRefund = NoYes::No;
                ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, WithIGSTPayment)).visible(false);
            }
        }
        else
        {
            ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, WithIGSTPayment)).visible(false);
            ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, WithIGSTPayment)).allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWouldYouClaimRefund_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the would you claim refund field visible and editable.
    /// </summary>
    private void setWouldYouClaimRefund_IN()
    {
        if (LedgerJournalTrans.RecId && LedgerJournalTrans.findCustVendTable().TableId == tableNum(CustTable))
        {
            ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, WouldYouClaimRefund)).visible(LedgerJournalTransTaxExtensionIN.WithIGSTPayment);
            ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, WouldYouClaimRefund)).allowEdit(LedgerJournalTransTaxExtensionIN.WithIGSTPayment);
        }
        else
        {
            ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, WouldYouClaimRefund)).visible(false);
            ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, WouldYouClaimRefund)).allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorChargedSalesTaxControl</Name>
				<Source><![CDATA[
    internal protected void updateVendorChargedSalesTaxControl()
    {
        boolean shouldVendorChargedSalesTaxVisible = TaxIntegrationUtils::isTaxIntegrationUseTaxAssessmentEnabled(TaxIntegrationBusinessProcess::Journal)
                                                        && (ledgerJournalTrans.isVendLine());
        boolean shouldVendorChargedSalesTaxEditable = ledgerJournalTrans.isTaxIntegrationAccrueUseTaxEnabled();
        ledgerJournalTransTaxExtension_ds.object(fieldNum(ledgerJournalTransTaxExtension, VendorChargedSalesTax)).visible(shouldVendorChargedSalesTaxVisible);
        ledgerJournalTransTaxExtension_ds.object(fieldNum(ledgerJournalTransTaxExtension, VendorChargedSalesTax)).enabled(shouldVendorChargedSalesTaxEditable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAccrueSalesTaxTypeControl</Name>
				<Source><![CDATA[
    internal protected void updateAccrueSalesTaxTypeControl()
    {
        boolean shouldAccruedSalesTaxTypeVisiable = (TaxIntegrationUtils::isTaxIntegrationUseTaxAssessmentEnabled(TaxIntegrationBusinessProcess::Journal)
                                                        && (ledgerJournalTrans.isVendLine()));
        ledgerJournalTransTaxExtension_ds.object(fieldNum(LedgerJournalTransTaxExtension, AccrueSalesTaxType)).visible(shouldAccruedSalesTaxTypeVisiable);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>LedgerJournalTrans</Name>
				<Methods>
					<Method>
						<Name>deleteMarked</Name>
						<Source><![CDATA[
        public void deleteMarked()
        {
            if (LedgerParameters::isChineseVoucher_CN() && ledgerJournalTrans.RecId == 0)
            {
                ledgerJournalEngine.formMethodDataSourceDeletePre_CN(ledgerJournalTrans);
            }
            
            // The journal lines can safely be deleted set based if all records are marked and
            // other requirements are met - if these requirements are not met, then
            // LedgerJournalDeleteTransaction class will revert to row by row.
            if (LedgerJournalDeleteTransaction::deleteInBatch(this.formRun(), ledgerJournalTrans))
            {
                LedgerJournalTrans_DS.research();
            }
            else
            {
                // Use standard delete
                super();
            }

            ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);

            settlementButton.enabled(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>refreshBudgetControls</Name>
						<Source><![CDATA[
        public void refreshBudgetControls()
        {
            if (budgetCheckResult.visible())
            {
                ledgerJournalEngine.resetBudgetCheckResultsCache();

                budgetCheckResult.update();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (!super())
            {
                // The LedgerJournalTrans' delete method requires an exception to be thrown
                // so that the transaction is aborted.
                throw Exception::Error;
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>beginBalance</Name>
						<Source><![CDATA[
        display AmountCur beginBalance()
        {
            return bankSingleCurrency ? balanceAmountCur : balanceAmountMST;
        }

]]></Source>
					</Method>
					<Method>
						<Name>endBalance</Name>
						<Source><![CDATA[
        edit LedgerJournalEndBalance endBalance(boolean _set, AmountMST _endBalance)
        {
            if (_set)
            {
                ledgerJournalTable.setEndBalance(_endBalance);
                element.bookRefresh();
            }

            return ledgerJournalTable.EndBalance;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid;
            LedgerJournalACType     ledgerJournalACType;
            LedgerJournalACType     offsetACType;
            ReasonRefRecID reasonRef = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, ReasonRefRecID)).getValue();
            boolean         useOtherAccount;
            ReasonCode      reasonCode;

            isValid = super();

            reasonCode = ReasonTableRef::find(reasonRef).Reason;

            ledgerJournalACType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, AccountType)).getValue();

            offsetACType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans,OffsetAccountType)).getValue();

            useOtherAccount = ledgerJournalTrans.parmOffsetLedgerDimension() ? true : false;

            if (isValid && !ledgerJournalEngine.formMethodDataSourceValidateWritePost())
            {
                isValid = false;
            }

            if (!reasonCode && isValid && ((offsetACType == LedgerJournalACType::FixedAssets &&
                    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, OffsetLedgerDimension)).getValue()!=0) ||
                    (ledgerJournalACType == LedgerJournalACType::FixedAssets &&
                    ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, LedgerDimension)).getValue()!=0)))
            {
                if (AssetParameters::transTypeRequiresValidation(ledgerJournalTrans_Asset_ds.object(fieldNum(LedgerJournalTrans_Asset,TransType)).getValue()))
                {
                    // The Reason code required.
                    isValid = checkFailed(strFmt("@SYS110217", "@SYS111246"));
                }
            }

            if (isValid && reasonRef && reasonCode)
            {
                //Check that the reason code is valid for the main account type
                if (ReasonFormTable::checkReasonCodeForAccountType(reasonRef,ledgerJournalACType))
                {
                    //If a offset account is specified check that the reason code is valid for the offset account type
                    if (useOtherAccount && !ReasonFormTable::checkReasonCodeForAccountType(reasonRef,offsetACType))
                    {
                        // The Reason code is not active for account type
                        isValid = checkFailed("@SYS115522");
                    }
                }
                else
                {
                    // The Reason code is not active for account type
                    isValid = checkFailed("@SYS115522");
                }
            }

            // Check account type across all lines for a voucher so single sided entries of types Vend or Cust
            // Are found even if Prepayment was checked for a line with a type other than Vend or Cust
            if (isValid && ledgerJournalTrans.Prepayment
                && !ledgerJournalTrans.ledgerJournalTable().LedgerJournalInclTax
                && (( ledgerJournalTable.mainAccountType(ledgerJournalTrans.Voucher) == LedgerJournalACType::Cust
                    && CustParameters::find().TaxOnPrepayment)
                    || (ledgerJournalTable.mainAccountType(ledgerJournalTrans.Voucher) == LedgerJournalACType::Vend
                    && VendParameters::find().TaxOnPrepayment)))
            {
                isValid = checkFailed("@SYS98399");
            }

            // <GCN>
            if (isValid
                && chineseVoucher_CN
                && !ledgerJournalTable.VoucherAllocatedAtPosting
                && !ledgerJournalTrans.Voucher_CN)
            {
                // Voucher number must be filled in
                isValid = checkFailed(strFmt("@SYS26332", "@SYS5732"));
            }
            // </GCN>

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>reread</Name>
						<Source><![CDATA[
        public void reread()
        {
            if (ledgerJournalTrans.RecId != 0)
            {
                // Clear the tax cache so the restored values display.
                // Do this before super() so the record is not dirtied if it is updated.
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans, false);

                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>exchRateTxt</Name>
						<Source><![CDATA[
        display ExchRateSecondTxt exchRateTxt()
        {
            return ledgerJournalEngine.exchRateTxt(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>correctedTaxAmount</Name>
						<Source><![CDATA[
        edit TaxAmountJournal correctedTaxAmount(
            boolean                  _set,
            LedgerJournalTrans       _ledgerJournalTrans,
            TaxAmountCur             _taxAmountCur)
        {
            TaxAmountCur   taxAmountCur = _taxAmountCur;

            if (_ledgerJournalTrans.RecId && !ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // This is not a new record and it's not in the LedgerJournalTrans entity's write event (LedgerJournalTrans_DS.write).

                if (_set)
                {
                    ledgerJournalEngine.correctTaxAmount(_ledgerJournalTrans, taxAmountCur, true, false);

                    // Calculate the cash discount using the passed in parameters. Use "null" for LedgerJournalTrans_Asset, as it's not part of the
                    // parameter list. This will cause the tax engine to attempt to select the record from the database.
                    // There may be issues later on if it turns out that the record is not being saved before this method is called. If that
                    // problem is ever confirmed, the tax calculation should be properly wired up--which would include changing the signature of
                    // this method. Currently, the strategy is to address these known issues on a one-off basis due to limited bandwidth, so we will
                    // leave it alone until we positively identify it as an actuall problem.
                    ledgerJournalEngine.cashDiscCodeModified(_ledgerJournalTrans, null);
                }
                else
                {
                    taxAmountCur = ledgerJournalEngine.correctedTaxAmount(_ledgerJournalTrans);
                }
            }
            else
            {
                if (_set)
                {
                    ledgerJournalEngine.correctTaxAmount(_ledgerJournalTrans, taxAmountCur, true, false);
                    ledgerJournalEngine.cashDiscCodeModified(_ledgerJournalTrans);
                }
                else
                {
                    if (correctedTaxAmountCurEdited)
                    {
                        // get the corrected tax amount from LJE because that is the only place an edited amount for a new LJT record exists
                        taxAmountCur = ledgerJournalEngine.getCorrectedTaxAmountCurrentLine();
                    }
                    else
                    {
                        // the corrected tax amount is the same as the calculated tax amount for a new LJT record
                        taxAmountCur = ledgerJournalEngine.taxAmountJournal(_ledgerJournalTrans);
                    }
                }
            }
            correctedTaxAmountCur = taxAmountCur;
            if (_set)
            {
                correctedTaxAmountCurEdited = true;
            }

            return taxAmountCur;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        void initValue()
        {
            if (ledgerJournalEngine.numberSeqFormHandlerJournal())
            {
                ledgerJournalEngine.numberSeqFormHandlerJournal().formMethodDataSourceCreatePre();
            }

            super();

            ledgerJournalEngine.formMethodDataSourceCreatePost();

            ledgerJournalEngine.initValue(ledgerJournalTrans);

            correctedTaxAmountCur = 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles the write event for the entire <c>LedgerJournalTrans</c> entity.
        /// </summary>
        /// <remarks>
        /// This method performs the write for the entire entity, which includes <c>LedgerJournalTrans</c>, <c>LedgerJournalTrans_Asset</c> and <c>LedgerJournalTrans_Project</c>.
        /// </remarks>
        public void write()
        {
            boolean isNewRecord = !ledgerJournalTrans.RecId; // Flag that indicates whether or not this is a new record.
            LedgerJournalTrans origLedgerJournalTrans = ledgerJournalTrans.orig();

            // <GEEPL>
            RefRecId serviceTariffNumber;
            // </GEEPL>

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // The kernel calls leaveRecord during the delete event which will cause this method to
                // be called if the user had made changes. This causes issues and must be special cased
                // until the behavior is changed.
                return;
            }

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // The entity is already being written. The extra call to write is unnecessary.
                return;
            }
            //sets the release date comment blank if the release date is blank
            if (ledgerJournalTrans.InvoiceReleaseDate == utcDateTimeNull())
            {
                ledgerJournalTrans.ReleaseDateComment = '';
            }

            reverseCharge.lineDSPreWrite();

            try
            {
                ttsbegin;

                // Signal the start of the write event.
                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityWriteEvent();

                // Clear out any old snapshots for the write event.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();

                ledgerJournalEngine.preWrite(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalEngine.preWriteUpdateDefaultDimension(ledgerJournalTrans, ledgerJournalTrans_Asset);
                ledgerJournalEngine.formMethodDataSourceWritePre();

                ledgerJournalEngine.vatData_updateVoucher(ledgerJournalTrans);

                // -----------------------------------------------------------------------------------
                // Validate and write the entire entity. This must be done because to maintain data integrity
                // as we require an "all or nothing" behavior.
                // -----------------------------------------------------------------------------------

                // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
                // the case the transaction is aborted.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();

                // <GEEPL>
                serviceTariffNumber = taxServiceTariff.ServiceTariffNumber;
                // </GEEPL>

                // If super() is called directly, the client currently refreshes all of the linked datasources,
                // which causes the LedgerJournalTrans_Project datasource to be corrupted. The result is the
                // changes to the LedgerJournalTrans_Project table are not saved.
                ledgerJournalTrans.write();


                ledgerJournalEngine.vatData_updateVoucher_NonPL(ledgerJournalTrans, origLedgerJournalTrans);

                // <GEEPL>
                // The service tariff relationship is lost during the super() call
                // from write since it is on a different data source. So, copy
                // the original value back in to ensure saving is done correctly.
                if (serviceTariffNumber && countryRegion_PL)
                {
                    taxServiceTariff.ServiceTariffNumber = serviceTariffNumber;
                    taxServiceTariff.ParentRecId = ledgerJournalTrans.RecId;
                    taxServiceTariff.ParentTableId = ledgerJournalTrans.TableId;
                }
                // </GEEPL>

                // <GCN>
                if (LedgerParameters::isChineseVoucher_CN())
                {
                    ledgerJournalTrans.reread();
                }
                // </GCN>

                if (ledgerJournalTrans.isFixedAssetsTransaction())
                {
                    // Synchronize, validate and write the fixed assets sibling record. This call will throw
                    // an exception if validation fails. A snapshot of the current buffer is taken to support
                    // in-memory rollback of the buffer in the case the transaction is aborted.
                    ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans_Asset();
                    ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWriteFixedAssetsSibling();
                }
                else
                {
                    // If this is not a fixed assets transaction, and it had been, the super() call
                    // above should have deleted the sibling record in the database. Because of this,
                    // the RecId of the buffer needs to be cleared out so that it will be inserted if
                    // it gets changed back to being a fixed assets transaction.
                    ledgerJournalTrans_Asset.RecId = 0;
                }

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    if (ledgerJournalTrans.isTax1099DetailTransaction())
                    {
                        // Synchronize, validate and write the Tax1099Detail sibling record. This call will throw
                        // an exception if validation fails. A snapshot of the current buffer is taken to support
                        // in-memory rollback of the buffer in the case the transaction is aborted.
                        ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfTax1099Detail();
                        ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWrite1099Sibling();
                    }
                    else
                    {
                        // If this is not a 1099 transaction, and it had been, the super() call
                        // above should have deleted the sibling record in the database. Because of this,
                        // the RecId of the buffer needs to be cleared out so that it will be inserted if
                        // it gets changed back to being a 1099 transaction.
                        tax1099BoxDetail.RecId = 0;
                    }
                }

                if (ledgerJournalTrans.isProjectTransaction())
                {
                    // Synchronize, validate and write the project sibling record. This call will throw
                    // an exception if validation fails. A snapshot of the current buffer is taken to support
                    // in-memory rollback of the buffer in the case the transaction is aborted.
                    ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans_Project();
                    ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWriteProjectSibling(keepSalesPriceOnWrite);
                }
                else
                {
                    // If this is not a project transaction, and it had been, the super() call
                    // above should have deleted the sibling record in the database. Because of this,
                    // the RecId of the buffer needs to be cleared out so that it will be inserted if
                    // it gets changed back to being a project transaction.
                    ledgerJournalTrans_Project.RecId = 0;
                }

                // <GEERU>
                if (ledgerJournalTrans.isFixedAssetsTransaction_RU())
                {
                    // Synchronize, validate and write the russian fixed assets sibling record. This call will throw
                    // an exception if validation fails. A snapshot of the current buffer is taken to support
                    // in-memory rollback of the buffer in the case the transaction is aborted.
                    ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans_RAsset();
                    ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWriteRAssetsSibling_RU();
                }
                else
                {
                    // If this is not a russian fixed assets transaction, and it had been, the super() call
                    // above should have deleted the sibling record in the database. Because of this,
                    // the RecId of the buffer needs to be cleared out so that it will be inserted if
                    // it gets changed back to being a fixed assets transaction.
                    ledgerJournalTrans_RAsset.RecId = 0;
                }

                if (ledgerJournalTrans.isCashTransaction_RU())
                {
                    ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans_RCash();
                    ledgerJournalTransEntityManager.getFormDataEventManager().validateAndWriteCashSibling_RU();
                }
                else
                {
                    ledgerJournalTrans_RCash.RecId = 0;
                }

                // </GEERU>

                if (isNewRecord && correctedTaxAmountCurEdited)
                {
                    ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans, correctedTaxAmountCur, true, false);
                }

                correctedTaxAmountCurEdited = false;

                switch (ledgerJournalTrans.AccountType)
                {
                    case LedgerJournalACType::Cust:
                    case LedgerJournalACType::Vend:
                        if (ledgerJournalTrans.CashDiscCode)
                        {
                            ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset, cashDiscChanged);
                        }
                        else
                        {
                            ledgerJournalEngine.deleteCashDisc(ledgerJournalTrans);
                        }
                        break;
                }

                // <GEERU>
                if (countryRegion_RU)
                {
                    ledgerJournalEngine.parmLedgerJournalTransRAsset(ledgerJournalTrans_RAsset);
                    ledgerJournalEngine.write(ledgerJournalTrans, cashDiscChanged, ledgerJournalTrans_Asset, null, ledgerJournalTrans_RCash);
                }
                else
                {
                    // </GEERU>
                    ledgerJournalEngine.write(ledgerJournalTrans, cashDiscChanged);
                    // <GEERU>
                }
                // </GEERU>

                if ((ledgerJournalTable.FixedOffsetAccount && ledgerJournalTable.parmOffsetLedgerDimension()) &&
                    (ledgerJournalTable.OffsetAccountType == LedgerJournalACType::Bank))
                {
                    bankSingleCurrency = BankAccountTable::isSingleCurrency(ledgerJournalTable.parmOffsetAccount(), ledgerJournalTable.JournalNum);
                }

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust)
                {
                    TradeBLWIJournalPurposeCodes::createRecord(TradeBLWICustVend::Customer,
                        ledgerJournalTrans.RecId,
                        ledgerJournalTrans.parmAccount(),
                        TradeBLWITypeOfForm::LedgerJournalTrans);
                }
                else if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
                {
                    TradeBLWIJournalPurposeCodes::createRecord(TradeBLWICustVend::Vendor,
                        ledgerJournalTrans.RecId,
                        ledgerJournalTrans.parmAccount(),
                        TradeBLWITypeOfForm::LedgerJournalTrans);
                }

                // Signal that the write event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent();

                // <GSA>
                if (zakatParameterEnabled)
                {
                    ledgerJournalTransZakat_SA.LedgerJournalTrans = ledgerJournalTrans.RecId;
                }
                // </GSA>

                if (ledgerJournalTransBankLC.TransType != BankLCLedgerJournalTransType::Blank)
                {
                    ledgerJournalTransBankLC.LedgerJournalTrans = ledgerJournalTrans.RecId;
                }

                // <GIN>
                if (ledgerJournalTransTaxExtensionIN_ds.isNeeded())
                {
                    element.setWithTaxPayment_IN();
                    element.setWouldYouClaimRefund_IN();
                    TaxModelDocLineExtensionController_IN::insertTaxExtensionRecord(ledgerJournalTransTaxExtensionIN, ledgerJournalTrans);
                }
                // </GIN>

                if (isLedgerJournalTransTaxExtensionEnabled)
                {
                    LedgerJournalTrans_ds.reread();
                    LedgerJournalTrans_ds.refresh();
                    LedgerJournalTransTaxExtension.save(LedgerJournalTrans);
                    LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxGroup)).allowEdit(LedgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                    LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxItemGroup)).allowEdit(LedgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                }

                // <GTH>
                if (ledgerJournalTransExtensionTH_ds.isNeeded())
                {
                    if (ledgerJournalTransExtensionTH.LedgerJournalTrans == 0)
                    {
                        ledgerJournalTransExtensionTH.LedgerJournalTrans = ledgerJournalTrans.RecId;
                        if (ledgerJournalTransExtensionTH_ds.validateWrite())
                        {
                            ledgerJournalTransExtensionTH_ds.write();
                        }
                    }
                }
                // </GTH>
                if (enableLedgerJournalTrans_W)
                {
                    LedgerJournalTrans_W.SysExtensionSerializerExtensionMap::insertAfterBaseTable(ledgerJournalTrans);
                }

                ttscommit;

                this.refresh();

                reverseCharge.lineDSPostWrite();

                element.updateAccrueSalesTaxTypeControl();
                element.updateVendorChargedSalesTaxControl();

            }
            catch (Exception::UpdateConflict)
            {
                // This exception should not be handled by the generic handling logic below, as it assumes
                // that a rollback needs to be performed.
                // A rollback should not be performed for an update conflict, as the record will never
                // be capable of being saved.

                // Signal that the write event is finished with a failure by calling endEntityWriteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);

                // Chain the exception forward.
                throw Exception::UpdateConflict;
            }
            catch
            {
                // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
                // of the transaction buffers must be handled as the kernel does not perform this automatically.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedWrite();

                // We need to figure out if the current voucher is used and generate one if it is used.
                ledgerJournalEngine.forceNewVoucher(ledgerJournalTrans.Voucher);

                // Signal that the write event is finished with a failure by calling endEntityWriteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityWriteEvent(true);

                throw Exception::Error;
            }

            // <GCN>
            if (enableShowDRsCRs
                && showDRsCRsController
                && showDRsCRsController.parmShowNegativeInRed())
            {
                ledgerJournalTrans_DS.clearDisplayOption(ledgerJournalTrans);
                ledgerJournalTrans_DS.refresh();
            }

            if (LedgerParameters::isJournalApproval_CN())
            {
                ledgerJournalEngine.setToOpenValue_CN();
                element.enableButtonsActive();
                element.bookRefresh();
            }
            // </GCN>
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        void linkActive()
        {
            ledgerJournalEngine.newJournalActive(ledgerJournalTable);
            ledgerJournalEngine.formMethodDataSourceLinkActivePre();
            journalFormTrans.datasourceLinkActivePre();

            // <GCN>
            element.setControlVisible_CN();
            // </GCN>

            super();

            if (ledgerJournalTable.JournalNum != journalNum)
            {
                // If the stored journalNum has become out of sync with the reference
                // to ledgerJournalTable, then we need to rerun initLedger. This
                // will occur when the user has switched journals on the parent form.
                element.initLedger();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            super();

            ledgerJournalTransRange   = this.query().dataSourceNo(1).addRange(fieldNum(LedgerJournalTrans, Invisible));
            ledgerJournalTransRange.value(strFmt('%1',0));

            ledgerJournalEngine = LedgerJournalEngine::construct(LedgerJournalType::Daily, element);
            ledgerJournalEngine.ledgerJournalTable(element.args().record());

            journalFormTrans.datasourceInitPost(ledgerJournalTrans);

            this.cacheAddMethod(tableMethodStr(LedgerJournalTrans, accountName));
            this.cacheAddMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));

            // <GCN>
            if (enableShowDRsCRs)
            {
                showDRsCRsController = LedgerShowDebCredController_CN::construct(ledgerJournalTrans.TableId);
                showDRsCRsController.addAmountCreditControl(ledgerJournalTrans_AmountCurCredit);
                showDRsCRsController.addAmountDebitControl(ledgerJournalTrans_AmountCurDebit);

                showDRsCRsController.parmShowDebitCreditColumn(true);
                showDRsCRsController.initControls();
            }
            // </GCN>
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            LedgerJournalTrans ledgerJournalTransCopy;

            try
            {
                ttsbegin;

                // The kernel calls leaveRecord during the super call, which will cause write to be called
                // on the datasource if there are changes to the buffer. We don't want this to happen,
                // so special case around this until the behavior is changed.

                // Signal that the entity delete event has started.
                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityDeleteEvent();

                // Clear out any old snapshots for the write event.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().clearSnapShots();

                ledgerJournalTransCopy = ledgerJournalTrans.data();
                ledgerJournalEngine.rereadWhenDirty(ledgerJournalTrans, true);

                // <GIN>
                if (AssetParameters::isDepreciationIncomeTaxActEnable_IN())
                {
                    ledgerJournalEngine.parmNewAccountNum_IN("");
                    ledgerJournalEngine.parmPrevAccountNum_IN("");
                }
                // </GIN>

                ledgerJournalEngine.preDelete(ledgerJournalTrans);
                ledgerJournalEngine.formMethodDataSourceDeletePre();

                if (!ledgerJournalTrans_Asset_DS.validateDelete())
                {
                    // The sibling table is invalid, so throw an exception to prevent actions like "form closing" from finishing
                    throw Exception::Error;
                }

                if (!ledgerJournalTrans_Project_DS.validateDelete())
                {
                    // The sibling table is invalid, so throw an exception to prevent actions like "form closing" from finishing
                    throw Exception::Error;
                }

                if (countryRegion_RU)
                {
                    if (!ledgerJournalTrans_RAsset_DS.validateDelete())
                    {
                        // The sibling table is invalid, so throw an exception to prevent actions like "form closing" from finishing
                        throw Exception::Error;
                    }
                }

                // A snapshot of the current buffer is taken to support in-memory rollback of the buffer in
                // the case the transaction is aborted.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().takeSnapshotOfLedgerJournalTrans();
                super();
                // -----------------------------------------------------------------------------------

                ledgerJournalEngine.delete(ledgerJournalTransCopy);

                if (ledgerJournalTrans)
                {
                    element.setDebCredProposal(true);
                }

                ledgerJournalTrans_DS.refresh();

                // Signal that the entity delete event has finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent();

                // Do not commit if the TTS level is 0 because that would generate a stack trace error
                // The TTS level becomes 0 if a display method threw an exception
                if (appl.ttsLevel() > 0)
                {
                    ttscommit;
                }
                else
                {
                    ttsabort;
                }
            }
            catch
            {
                // Handle any exception and then chain another generic one forward to force the form event to fail. Also, in-memory roll-backs
                // of the transaction buffers must be handled as the kernel does not perform this automatically.
                ledgerJournalTransEntityManager.getInMemoryRollbackManager().performRollbackForAbortedDelete();

                // Signal that the entity delete event is finished with a failure by calling endEntityDeleteEvent
                // and passing in 'true' for the failure parameter.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityDeleteEvent(true);

                throw Exception::Error;
            }

            settlementButton.enabled(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        void create(boolean append = false)
        {
            // Ensure the record is written before any pre creation methods are called
            // We explictly call leaveRecord to account for scenarios where New is clicked or Ctrl-N is hit on an unsaved record
            // In manual voucher entry scenarios the preCreate method clears form values if the record is not saved
            // An errror is thrown in the line below journalFormTrans.dataSourceCreatePre() if auto assigning of voucher number
            this.leaveRecord();

            // <GIN>
            if (AssetParameters::isDepreciationIncomeTaxActEnable_IN())
            {
                ledgerJournalEngine.parmNewAccountNum_IN("");
                ledgerJournalEngine.parmPrevAccountNum_IN("");
            }
            // </GIN>

            try
            {
                ledgerJournalTransEntityManager.getFormDataEventManager().beginEntityCreateEvent();

                journalFormTrans.datasourceCreatePre();

                element.setDebCredProposal(true);

                ledgerJournalEngine.preCreate(ledgerJournalTrans);
                super(append);

                virtualCashDiscDate         = dateNull();
                virtualCashDiscAmount       = 0;
                cashDiscChanged             = false;
                correctedTaxAmountCurEdited = false;

                // Signal that the create event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();
                keepSalesPriceOnWrite = false;
            }
            catch (Exception::UpdateConflict)
            {
                // This exception should not be handled by the generic handling logic below.

                // Signal that the create event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();

                // Chain the exception forward.
                throw Exception::UpdateConflict;
            }
            catch
            {
                // Signal that the create event is finished.
                ledgerJournalTransEntityManager.getFormDataEventManager().endEntityCreateEvent();

                throw Exception::Error;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Standard event handler that is called each time a record is read by the data source.
        /// </summary>
        /// <returns>
        /// An integer return code.
        /// </returns>
        public int active()
        {
            int ret;
            ledgerJournalTrans_DS.setFurtherPostingProtection();

            // <GIN>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                // Fields are made Visible no for Tax Adjustments Journal feature. Instead display methods are used to show the Withholdtax Group.
                LedgerJournalTransTaxExtensionIN ledgerJournalTransTaxExt = ledgerJournalTrans.ledgerJournalTransTaxExtensionIN();
                ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tdsGroup)).visible(ledgerJournalTransTaxExt.TaxWithholdCode == '');
                ledgerJournalTransTaxExtensionIN_ds.object(fieldNum(LedgerJournalTransTaxExtensionIN, tcsGroup)).visible(ledgerJournalTransTaxExt.TaxWithholdCode == '');
                directTax_IN.visible(ledgerJournalTransTaxExt.TaxWithholdCode != '');
                element.visibleProvisionalAssessment_IN();
                element.setWithTaxPayment_IN();
                element.setWouldYouClaimRefund_IN();
            }
            // </GIN>

            if (TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalTable.JournalType))
            {
                LedgerJournalTransTaxExtension taxExtension = ledgerJournalTrans.ledgerJournalTransTaxExtension();
                LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxGroup)).allowEdit(taxExtension.OverrideSalesTax == NoYes::Yes);
                LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxItemGroup)).allowEdit(taxExtension.OverrideSalesTax == NoYes::Yes);
            }

            ret = super();
            if (ret)
            {
                ledgerJournalEngine.active(ledgerJournalTrans);
                priorAccountType = ledgerJournalTrans.AccountType;

                if (ledgerJournalTrans.CashDiscCode)
                {
                    [virtualCashDiscDate, virtualCashDiscAmount] =
                        ledgerJournalEngine.custVendCashDiscCache(false, ledgerJournalTrans);
                    ledgerJournalTrans_ds.refresh();
                }

                ledgerJournalEngine.setChildDataSourceAccess(ledgerJournalTrans,custVendPaymJournalFee);

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger)
                {
                    currentMainAccountId = MainAccount::getMainAccountRecIdFromLedgerDimension(ledgerJournalTrans.LedgerDimension);
                    previousMainAccountId = currentMainAccountId;
                }
                else
                {
                    currentMainAccountId = 0;
                    previousMainAccountId = 0;
                }

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger)
                {
                    currentOffsetMainAccountId = MainAccount::getMainAccountRecIdFromLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension);
                }
                else
                {
                    currentOffsetMainAccountId = 0;
                }

                LedgerJournalTrans_OffsetType.allowEdit(!LedgerJournalTable.FixedOffsetAccount);

                ledgerJournalEngine::updateSegmentedEntryContext(LedgerJournalTrans_AccountNum, ledgerJournalTrans);
                ledgerJournalEngine::updateSegmentedEntryContext(Group4_AccountNum, ledgerJournalTrans);
                ledgerJournalEngine::updateSegmentedEntryContextForOffset(LedgerJournalTrans_OffsetAccount, ledgerJournalTrans);
                ledgerJournalEngine::updateSegmentedEntryContextForOffset(Group4_OffsetAccount, ledgerJournalTrans);

                LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(LedgerJournalTrans_OffsetAccount, ledgerJournalTable, ledgerJournalTrans);
                LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(Group4_OffsetAccount, ledgerJournalTable, ledgerJournalTrans);

                journalFormTrans.datasourceActivePost();

                element.visibleNotificationCentralBank();

                element.setVisible();

                // call to the method to set the Invoice Release Date and Release Comment according to the Approved checkbox
                element.setStoppedReleaseFields();

                element.setProjAccountNum();
                element.enableProjSalesCurrencyId();

                // <GEECZ>
                element.initIntracomVATDueDate();
                // </GEECZ>

                element.enableDepositSlipButton();

                // <GIN>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    element.enableUpdatePLA_IN();
                }
                // </GIN>

                element.setPaymentByLetterOfCredit();
                listcode.enabled(ledgerJournalTrans.listCodeAllowed());

                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoUS]))
                {
                    element.setAllowEditTax1099();

                    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                    {
                        element.setAllowEdit1099SFields();
                        element.setAllowEdit1099GFields();
                    }
                }
                
            }

            // <GIN>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]) && defermentSchedule_IN.visible())
            {
                TransTaxInformation transTaxInformationLocal = TransTaxInformationHelper::findOrCreateTransTaxInformationByRecord(ledgerJournalTrans);
                if (ledgerJournalEngine.posted() &&
                    ledgerJournalTrans.taxAmountJournal() > 0 &&
                    transTaxInformationLocal.VATGoodsType == VATGoodsType_IN::CapitalGoods &&
                    ((ledgerJournalTrans.AccountType == LedgerJournalACType::Vend) ||
                    (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)))
                {
                    defermentSchedule_IN.enabled(true);
                }
                else
                {
                    defermentSchedule_IN.enabled(false);
                }
            }

            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                element.setTaxWithholdEnabled_IN();
                element.taxWithholdAutority_IN();
            }
            // </GIN>

            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU, #isoPL]))
            {
                element.enableButtonCompensationLetter_EE(ledgerJournalTrans);
            }

            element.enableDisableCashRegister_W();

            if (ledgerJournalTrans.RecId != 0)
            {
                keepSalesPriceOnWrite = true;
            }

            element.enableCurrencyCodeOnDepreciation();

            if (isTaxInformationEnabled)
            {
                boolean isProject = element.isProject();
                element.setTaxInformationVisible(isProject);
            }

            LedgerJournalPostTransfer.enabled(!LedgerJournalTable.BankTransSummarizationEnabled);

            element.updateAccrueSalesTaxTypeControl();
            element.updateVendorChargedSalesTaxControl();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>taxAmountJournal</Name>
						<Source><![CDATA[
        display TaxAmountJournal taxAmountJournal(LedgerJournalTrans _ledgerJournalTrans)
        {
            TaxAmountJournal ledgerJournalTrans_TaxAmountJournal;

            ledgerJournalTrans_TaxAmountJournal = ledgerJournalEngine.taxAmountJournal(_ledgerJournalTrans);

            if (ledgerJournalTrans_TaxAmountJournal == 0)
            {
                correctedTaxAmount.allowEdit(false);
                correctedTaxAmount.skip(true);
            }
            else
            {
                correctedTaxAmount.allowEdit(true);
                correctedTaxAmount.skip(false);
            }

            return ledgerJournalTrans_TaxAmountJournal;
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorExist</Name>
						<Source><![CDATA[
        display ImageRes errorExist(LedgerJournalTrans _ledgerJournalTrans)
        {
            ImageRes res;

            #resAppl

            if (journalFormTrans.parmCheckPostResults().errorExistsInJournalLine(tableNum(LedgerJournalTrans), _ledgerJournalTrans.RecId))
            {
                res = imageListAppl.image(#ImageError);
            }
            else
            {
                res = -1;
            }

            return res;
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorLog</Name>
						<Source><![CDATA[
        display LedgerPostingMessage errorLog()
        {
            return journalFormTrans.parmCheckPostResults().errorLogJournalLine(tableNum(LedgerJournalTrans), ledgerJournalTrans.RecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>postedDateTime</Name>
						<Source><![CDATA[
        display JournalPostedDateTime postedDateTime()
        {
            return ledgerJournalEngine.postedDateTime();
        }

]]></Source>
					</Method>
					<Method>
						<Name>approvedBy</Name>
						<Source><![CDATA[
        display ApprovedByPersonnelNumber approvedBy()
        {
            return ledgerJournalEngine.approvedBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>rejectedBy</Name>
						<Source><![CDATA[
        display UserId rejectedBy()
        {
            return ledgerJournalEngine.rejectedBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>reportedAsReadyBy</Name>
						<Source><![CDATA[
        display UserId reportedAsReadyBy()
        {
            return ledgerJournalEngine.reportedAsReadyBy();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalBalance</Name>
						<Source><![CDATA[
        display AmountMST journalBalance()
        {
            return ledgerJournalEngine.journalDebit() - ledgerJournalEngine.journalCredit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalCredit</Name>
						<Source><![CDATA[
        display AmountMST journalCredit()
        {
            return ledgerJournalEngine.journalCredit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalDebit</Name>
						<Source><![CDATA[
        display AmountMST journalDebit()
        {
            return ledgerJournalEngine.journalDebit();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalBalanceReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary journalBalanceReportingCurrency()
        {
            return ledgerJournalEngine.journalDebitReportingCurrency() - ledgerJournalEngine.journalCreditReportingCurrency();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalCreditReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary journalCreditReportingCurrency()
        {
            return ledgerJournalEngine.journalCreditReportingCurrency();
        }

]]></Source>
					</Method>
					<Method>
						<Name>journalDebitReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary journalDebitReportingCurrency()
        {
            return ledgerJournalEngine.journalDebitReportingCurrency();
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherTotal</Name>
						<Source><![CDATA[
        display AmountMST voucherTotal()
        {
            return ledgerJournalEngine.voucherDebit(ledgerJournalTrans) - ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherCredit</Name>
						<Source><![CDATA[
        display AmountMST voucherCredit()
        {
            return ledgerJournalEngine.voucherCredit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherDebit</Name>
						<Source><![CDATA[
        display AmountMST voucherDebit()
        {
            return ledgerJournalEngine.voucherDebit(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherTotalReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary voucherTotalReportingCurrency()
        {
            return ledgerJournalEngine.voucherDebitReportingCurrency(ledgerJournalTrans) - ledgerJournalEngine.voucherCreditReportingCurrency(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherCreditReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary voucherCreditReportingCurrency()
        {
            return ledgerJournalEngine.voucherCreditReportingCurrency(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>voucherDebitReportingCurrency</Name>
						<Source><![CDATA[
        display AmountMSTSecondary voucherDebitReportingCurrency()
        {
            return ledgerJournalEngine.voucherDebitReportingCurrency(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>ledgerJournalBalance</Name>
						<Source><![CDATA[
        display AmountCur ledgerJournalBalance()
        {
            if (ledgerJournalTable.Posted)
            {
                return this.beginBalance();
            }
            else
            {
                return this.beginBalance() + ledgerJournalEngine.journalOffsetBalance();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>setFurtherPostingProtection</Name>
						<Source><![CDATA[
        void setFurtherPostingProtection()
        {
            int i;
            DictTable       dictTable = new DictTable(ledgerJournalTrans.TableId);
            FormDataObject  objectLedgerJournalTrans;
            boolean         preventEdit;

            preventEdit = ledgerJournalTrans.FurtherPostingType && ledgerJournalTrans.FurtherPostingRecId;

            for (i = 1; i <= dictTable.fieldCnt(); i++)
            {
                objectLedgerJournalTrans = ledgerJournalTrans_ds.object(dictTable.fieldCnt2Id(i));
                if (objectLedgerJournalTrans)
                {
                    if (preventEdit)
                    {
                        switch (dictTable.fieldCnt2Id(i))
                        {
                            case fieldNum(LedgerJournalTrans, AccountType),
                                 fieldNum(LedgerJournalTrans, LedgerDimension),
                                 fieldNum(LedgerJournalTrans, OffsetAccountType),
                                 fieldNum(LedgerJournalTrans, OffsetLedgerDimension),
                                 fieldNum(LedgerJournalTrans, AmountCurDebit),
                                 fieldNum(LedgerJournalTrans, AmountCurCredit),
                                 fieldNum(LedgerJournalTrans, CurrencyCode)  :
                                objectLedgerJournalTrans.allowEdit(false);
                                break;
                            default :
                                objectLedgerJournalTrans.allowEdit(true);
                        }
                    }
                    else
                    {
                        objectLedgerJournalTrans.allowEdit(true);
                    }
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>amountCurDebitForCashDiscInfo</Name>
						<Source><![CDATA[
        void amountCurDebitForCashDiscInfo()
        {
            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend &&
                ledgerJournalTrans.AmountCurDebit > 0)
            {
                if (ledgerJournalTrans.CashDiscAmount && ledgerJournalTrans.Invoice)
                {
                    info("@SYS99050");
                }
            }

            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust &&
                ledgerJournalTrans.AmountCurDebit < 0)
            {
                if (ledgerJournalTrans.CashDiscAmount && ledgerJournalTrans.Invoice)
                {
                    info("@SYS99051");
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>amountCurCreditForCashDiscInfo</Name>
						<Source><![CDATA[
        void amountCurCreditForCashDiscInfo()
        {
            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend && ledgerJournalTrans.AmountCurCredit < 0)
            {
                if (ledgerJournalTrans.CashDiscAmount && ledgerJournalTrans.Invoice)
                {
                    info("@SYS99050");
                }
            }

            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust && ledgerJournalTrans.AmountCurCredit > 0)
            {
                if (ledgerJournalTrans.CashDiscAmount && ledgerJournalTrans.Invoice)
                {
                    info("@SYS99051");
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>refreshLedgerJournalTrans_IN</Name>
						<Source><![CDATA[
        void refreshLedgerJournalTrans_IN()
        {
            ledgerJournalTrans_ds.reread();
            ledgerJournalTrans_ds.refreshEx();
        }

]]></Source>
					</Method>
					<Method>
						<Name>leaveRecord</Name>
						<Source><![CDATA[
        public boolean leaveRecord(boolean _forceUpdate = false)
        {
            boolean ret;

            ret = super(_forceUpdate);

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // A write was requested on the sibling and the client did not write the entity. This happens
                // when focus is removed from a sibling data source (such as LedgerJournalTrans_Asset) as the
                // client only calls write on that specific sibling and not on the entire entity.

                // Write the entire entity.
                ledgerJournalTrans_DS.write();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayRemittanceAddress</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the vendor remittance address associated with the vendor <c>RemittanceLocation</c> or <c>RemittanceAddress</c> record id field on the <c>LedgerJournalTrans</c> table.
        /// </summary>
        /// <returns>
        /// The remittance address.
        /// </returns>
        /// <remarks>
        /// The remittance address on the trans date is returned if the journal is posted.
        /// The current date effective remittance address is returned for an unposted journal.
        /// </remarks>
        public display RemittanceAddressing displayRemittanceAddress()
        {
            if (!hasFieldAccess(tableNum(LogisticsPostalAddress), fieldNum(LogisticsPostalAddress, Address), AccessType::View))
            {
                error("@SYS57330");
            }

            return ledgerJournalEngine.displayRemittanceAddress(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayOption</Name>
						<Source><![CDATA[
        public void displayOption(Common _record, FormRowDisplayOption _options)
        {
            super(_record, _options);

            // <GCN>
            if (showDRsCRsController != null && LedgerShowDebCredController_CN::isNegativeAmountsInRedFeatureEnabled())
            {
                showDRsCRsController.showNegativeAmountsInRed(_record, _options);
            }
            // </GCN>
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayBudgetCheckResult</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the budget check result for the current <c>LedgerJournalTrans</c> record.
        /// </summary>
        /// <returns>
        /// The budget check result for the current <c>LedgerJournalTrans</c> record.
        /// </returns>
        public display BudgetCheckResult displayBudgetCheckResult()
        {
            return ledgerJournalEngine.getBudgetCheckResult(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>insertIntoLedgerJournalTransTaxExt_IN</Name>
						<Source><![CDATA[
        /// <summary>
        /// Inserts <c>LedgerJournalTransTaxExtensionIN</c> record while it is calidate.
        /// </summary>
        public void insertIntoLedgerJournalTransTaxExt_IN()
        {
            ledgerJournalTransTaxExtensionIN.LedgerJournalTrans = ledgerJournalTrans.RecId;
            if (ledgerJournalTransTaxExtensionIN.validateWrite())
            {
                ledgerJournalTransTaxExtensionIN.insert();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>insertIntoLedgerJournalTransTaxExtension</Name>
						<Source><![CDATA[
        /// <summary>
        /// Inserts <c>LedgerJournalTransTaxExtension</c> record while it is calidate.
        /// </summary>
        public void insertIntoLedgerJournalTransTaxExtension()
        {
            LedgerJournalTransTaxExtension.LedgerJournalTrans = ledgerJournalTrans.RecId;
            if (LedgerJournalTransTaxExtension.validateWrite())
            {
                LedgerJournalTransTaxExtension.insert();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();

            journalFormTrans.setMassTransactionReversalButtonVisibility();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AccountAgreementId_RU</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.setAgreement_RU(ledgerJournalTrans);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ledgerJournalEngine.agreementLookup_RU(_formControl, ledgerJournalTrans, _filterStr);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                ledgerJournalEngine.agreementJumpRef_RU(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AccountType</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                // <GEERU>
                if (!element.validateAccountType_RU(ledgerJournalTrans.AccountType))
                {
                    return false;
                }

                // </GEERU>
                return super();
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                #ISOCountryRegionCodes
                LedgerJournalACType ledgerJournalACType = this.getValue();

                //  The call to super() was replaced with the following lines because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers and
                //  thus cannot be called from the super()
                if (priorAccountType != ledgerJournalACType)
                {
                    priorAccountType = ledgerJournalACType;
                    ledgerJournalEngine.accountTypeModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);
                }
                // end super

                LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(LedgerJournalTrans_OffsetAccount, ledgerJournalTable, ledgerJournalTrans);
                LedgerJournalEngine::updateSegmentedEntryForFixedOffsetAccount(Group4_OffsetAccount, ledgerJournalTable, ledgerJournalTrans);

                journalFormTrans.enableButtonsActive();
                element.visibleNotificationCentralBank();
                element.setVisible();

                element.setProjAccountNum();
                element.enableDepreciationStartDate();

                // <GEERU>
                if (countryRegion_RU)
                {
                    journalFormTrans.enableAgreementFields_RU();
                    journalFormTrans.enableFactureAutoCreate();
                }
                // </GEERU>

                if (ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, LedgerDimension)).getValue() != 0)
                {
                    if (!ReasonFormTable::checkReasonCodeForAccountType(ledgerJournalTrans.ReasonRefRecID, ledgerJournalACType))
                    {
                        ttsbegin;
                        ReasonTableRef::deleteByReference(ledgerJournalTrans.ReasonRefRecID);
                        ledgerJournalTrans.ReasonRefRecID = 0;
                        ttscommit;
                    }
                }

                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCA]))
                {
                    ledgerJournalTrans.gsthstTaxType_CA = TaxRegistration_CA::getGSTHSTTaxType(ledgerJournalTrans.AccountType);
                }

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
                ledgerJournalTrans_ds.rereadReferenceDataSources();

                // <GSA>
                if (zakatParameterEnabled)
                {
                    element.enableZakatGroups_SA();
                    ledgerJournalEngine.defaultVendAccountForSubcontractor_SA(ledgerJournalTrans, ledgerJournalTransZakat_SA);
                    ledgerJournalTransZakat_SA_ds.refresh();
                }
                // </GSA>

                // Clearing Remittance location when the account type is not vendor.
                if (ledgerJournalTrans.AccountType != LedgerJournalACType::Vend)
                {
                    ledgerJournalTrans.RemittanceLocation = 0;
                }

                // <GTH>
                if (taxWithholdEnabledTH)
                {
                    // Update the status of controls for Thailand withholding tax feature.
                    element.updateTaxWithholdControls();
                }
                // </GTH>

                element.enableDisableCashRegister_W();

                // <GIN>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    element.visibleProvisionalAssessment_IN();
                    LedgerJournalTransTaxExtensionIN.ProvisionalAssessment = NoYes::No;
                }
                // </GIN>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AmountCurCredit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers and
                //  thus cannot be called from the super()
                //
                ledgerJournalEngine.amountCurCreditModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                    (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project && ledgerJournalTrans.parmOffsetLedgerDimension()))
                {
                    LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                    // Recalc Project Qty Amount based on UnitCost and CreditAmount
                    ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                }

                if ((LedgerJournalTrans.TransactionType == LedgerTransType::WriteOff) || countryRegion_PL)
                {
                    ledgerJournalTrans.calcUserTaxBase();
                }

                ledgerJournalTrans_ds.refresh();

                if (TaxParameters::find().CashDiscOnInvoice)
                {
                    ledgerJournalTrans_ds.amountCurCreditForCashDiscInfo();
                }

                // <GIN>
                if (TaxWithholdParameters_IN::checkTaxParameters())
                {
                    element.setTaxWithholdEnabled_IN();
                }
                // </GIN>
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if (element.isCashDiscOnInvoice())
                {
                    ledgerJournalTrans_ds.amountCurCreditForCashDiscInfo();
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AmountCurDebit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers and
                //  thus cannot be called from the super()
                ledgerJournalEngine.amountCurDebitModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                    (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project && ledgerJournalTrans.parmOffsetLedgerDimension()))
                {
                    LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                    // Recalc Project Qty Amount based on UnitCost and DebitAmount
                    ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                }

                if ((LedgerJournalTrans.TransactionType == LedgerTransType::WriteOff) || countryRegion_PL)
                {
                    ledgerJournalTrans.calcUserTaxBase();
                }

                ledgerJournalTrans_ds.refresh();

                if (TaxParameters::find().CashDiscOnInvoice)
                {
                    ledgerJournalTrans_ds.amountCurDebitForCashDiscInfo();
                }

                // <GIN>
                if (TaxWithholdParameters_IN::checkTaxParameters())
                {
                    element.setTaxWithholdEnabled_IN();
                }
                // </GIN>
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if (element.isCashDiscOnInvoice())
                {
                    ledgerJournalTrans_ds.amountCurDebitForCashDiscInfo();
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Approved</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // call to the method to set the Invoice Release Date and Release Comment according to the Approved checkbox
                element.setStoppedReleaseFields();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Approver</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                HcmWorker hcmWorker;

                hcmWorker = super(_formReferenceControl);

                if (hcmWorker != null && !hcmWorkerLookupActiveCurrentCompany.validateWorker(hcmWorker.RecId))
                {
                    hcmWorker = null;
                }

                return hcmWorker;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                HcmWorker hcmWorker;

                hcmWorker = hcmWorkerLookupActiveCurrentCompany.lookupWorker(_formReferenceControl);

                return hcmWorker;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankAccountId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.updatePaymentFee(ledgerJournalTrans, custVendPaymJournalFee);
                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankDepositVoucher</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers so
                //  can't be called from the table.modified() method
                ledgerJournalEngine.bankDepositVoucherModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalTrans_ds.rereadReferenceDataSources();

                if (ledgerJournalTrans.OffsetLedgerDimension == 0)
                {
                    // clear the current main account because the offset ledger dimension was cleared
                    currentOffsetMainAccountId = 0;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankTransType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                {
                    journalFormTrans.setCashDueAnnouncementButtonEnabled_RU();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CashDiscAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                LedgerJournalCashDiscService  ledgerJournalCashDiscService;

                super();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                if (ledgerJournalTrans.CashDiscAmount)
                {
                    ledgerJournalCashDiscService = new LedgerJournalCashDiscService(ledgerJournalTrans.JournalNum,
                                                                                    ledgerJournalTrans.Voucher,
                                                                                    ledgerJournalTrans);

                    if (ledgerJournalCashDiscService.cashDiscBaseAmount(ledgerJournalTrans))
                    {
                        ledgerJournalTrans.CashDiscPercent = (ledgerJournalTrans.CashDiscAmount * 100) / ledgerJournalCashDiscService.cashDiscBaseAmount(ledgerJournalTrans);
                    }
                    else
                    {
                        ledgerJournalTrans.CashDiscPercent = 0;
                    }
                }
                ledgerJournalEngine.updateCashDiscDetail(ledgerJournalTrans);
                cashDiscChanged = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CashDiscCode</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = true;

                if (isValid && (ledgerJournalTrans.CashDiscCode != '') &&
                    (!CashDisc::existByCompany(ledgerJournalTrans.Company, ledgerJournalTrans.CashDiscCode)))
                {
                    isValid = checkFailed(
                        strFmt("@SYS138714", ledgerJournalTrans.CashDiscCode, ledgerJournalTrans.Company));
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                CashDisc::lookupCashDisc(_formControl, _filterStr, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                ledgerJournalEngine.updateCashDiscDetail(ledgerJournalTrans, false);
                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CashDiscPercent</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (!ledgerJournalTrans.CashDiscPercent)
                {
                    ledgerJournalTrans.CashDiscCode = "";
                    ledgerJournalTrans.CashDiscAmount = 0;
                    ledgerJournalTrans.DateCashDisc = dateNull();
                }

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscPercentModified(ledgerJournalTrans);
                ledgerJournalEngine.updateCashDiscDetail(ledgerJournalTrans);
                cashDiscChanged = true;
                FormDataUtil::getFormDataSource(ledgerJournalTrans).refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CFDIUUID_MX</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                str     fieldName;

                ret = super();

                fieldName = fieldPName(LedgerJournalTrans, InvoiceSeries_MX);

                if (LedgerJournalTrans.InvoiceSeries_MX != '')
                {
                    if (Box::yesNo(strFmt("@Mexico:ELedgerAccounting_InvoiceChange", fieldName), DialogButton::Yes) == DialogButton::No)
                    {
                        return false;
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Company</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.companyModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                LedgerJournalTrans_AccountNum.setDataAreaId(ledgerJournalTrans.Company, true);
                Group4_AccountNum.setDataAreaId(ledgerJournalTrans.Company, true);

                journalFormTrans.enableFieldsActive();

                ledgerJournalTrans_ds.refresh();
                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CurrencyCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                try
                {
                    ledgerJournalEngine.currencyModified(ledgerJournalTrans);

                    LedgerJournalTrans_AccountNum.parmCurrency(ledgerJournalTrans.CurrencyCode);
                    Group4_AccountNum.parmCurrency(ledgerJournalTrans.CurrencyCode);

                    LedgerJournalTrans_OffsetAccount.parmCurrency(ledgerJournalTrans.CurrencyCode);
                    Group4_OffsetAccount.parmCurrency(ledgerJournalTrans.CurrencyCode);

                    journalFormTrans.enableFieldsActive();

                    super();

                    LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                    // <GEEU>
                    if (TaxSpecificExchangeRateHelper::isTaxSpecificExchRateEnabledByBusinessProcess(TaxIntegrationBusinessProcess::Journal))
                    {
                        TaxSpecificExchangeRate::deleteBySourceRecord(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                    }
                    else if (TaxParameters::isBankExchRateEnabled_W())
                    {
                        SalesTaxTransactionExchangeRate::deleteBySourceRecord(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                    }
                    // </GEEU>
                }
                catch
                {
                    // If a currency code is selected without a valid exchange rate, the
                    // exchange rate values should be set to default/invalid values to prevent
                    // saving/posting of the record
                    ledgerJournalTrans.ExchRate = 0.0;
                    ledgerJournalTrans.ExchRateSecond = 0.0;
                    ledgerJournalTrans.Triangulation = NoYes::No;

                    super();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustVendAccount_PL</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (countryRegion_PL)
                {
                    ledgerJournalEngine.initFromCustVendVatRegNums_PL(ledgerJournalTrans);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DateCashDisc</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.updateCashDiscDetail(ledgerJournalTrans);
                cashDiscChanged = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DocumentDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.documentDateModified(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Due</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && ledgerJournalTrans.Due)
                {
                    PaymCalendarAdjustedDate paymCalendarAdjustedDate = PaymCalendarSourceLedgerJournalTrans::getAdjustedDate(ledgerJournalTrans);

                    ledgerJournalTrans.Due = PaymCalendarProcessor::getAdjustedDueDate(ledgerJournalTrans.Due, priorDueDate, paymCalendarAdjustedDate);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ExchRate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Invoice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers so
                //  can't be called from the table.modified() method
                //
                ledgerJournalEngine.invoiceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                //    super();

                ledgerJournalEngine.paymentModified(ledgerJournalTrans);
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);

                if (TaxParameters::find().CashDiscOnInvoice)
                {
                    ledgerJournalTrans_ds.amountCurCreditForCashDiscInfo();
                    ledgerJournalTrans_ds.amountCurDebitForCashDiscInfo();
                }

                element.enableDisableCashRegister_W();

                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if (TaxParameters::find().CashDiscOnInvoice)
                {
                    ledgerJournalTrans_ds.amountCurCreditForCashDiscInfo();
                    ledgerJournalTrans_ds.amountCurDebitForCashDiscInfo();
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InvoiceSeries_MX</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                str     fieldName;

                ret = super();

                fieldName = fieldPName(LedgerJournalTrans, CFDIUUID_MX);

                if (LedgerJournalTrans.CFDIUUID_MX != '')
                {
                    if (Box::yesNo(strFmt("@Mexico:ELedgerAccounting_InvoiceChange", fieldName), DialogButton::Yes) == DialogButton::No)
                    {
                        return false;
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                // <GEEPL>
                LedgerJournalAC assetId;
                // </GEEPL>

                boolean ret = super();

                // <GEEPL>
                if (countryRegion_PL)
                {
                    if (ret && ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
                    {
                        assetId = ledgerJournalTrans.parmAccount();
                        if (assetId
                            && (ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::DisposalSale
                            || ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::DisposalScrap)
                            && !AssetTable::isAssetForSale(assetId))
                        {
                            ret = checkFailed(strFmt("@GLS110194", assetId));
                        }
                    }
                }
                // </GEEPL>

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>setTaxDirectionControl</Name>
								<Source><![CDATA[
            /// <summary>
            /// This method will assign a value for the TaxDirectionControl field based on the value of TaxDirection of
            /// the GL account number.
            /// </summary>
            private void setTaxDirectionControl()
            {
                SelectableDataArea  companyId;
                NoYes               setTaxDirection = ledgerJournalTrans.TaxDirectionControl;

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Ledger &&
                    TaxParameters::find().MandatoryTaxDirection)
                {
                    // Determine if the compnay info is provided.
                    companyId = ledgerJournalTrans.Company;
                    if (!companyId)
                    {
                        companyId = curext();
                    }
                    else
                    {
                        if (! xDataArea::exist(companyId))
                        {
                            throw error(strFmt("@SYS10666",companyId));
                        }
                    }

                    changecompany(companyId)
                    {
                        // If the tax direction is set for the ledger account, set the TaxDirectionControl field.
                        if (MainAccountLegalEntity::findByMainAccountLegalEntity(ledgerJournalTrans.findMainAccount().RecId,
                                                                                CompanyInfo::findDataArea(companyId).RecId).TaxDirection)
                        {
                            setTaxDirection = NoYes::Yes;
                        }
                    }
                }

                ledgerJournalTrans.TaxDirectionControl = setTaxDirection;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Runs required logic on modification of main account field.
            /// </summary>
            /// <remarks>
            /// Validates whether the current reason code is appropriate for the new main account
            /// selected. If not, the reason code and comment fields are cleared.
            /// </remarks>
            public void modified()
            {
                boolean hasAccountChanged = element.hasAccountChanged();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                if (hasAccountChanged)
                {
                    //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                    //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers so
                    //  can't be called from the table.modified() method

                    ledgerJournalEngine.accountNumModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                    //This call needs to be made to update the RemittanceLocation reference group field which is modified in the ledgerJournalEngine.accountNumModified() method.
                    ledgerJournalTrans_ds.rereadReferenceDataSources();

                    // <GIN>
                    if (AssetParameters::isDepreciationIncomeTaxActEnable_IN())
                    {
                        ledgerJournalEngine.parmNewAccountNum_IN(ledgerJournalTrans.parmAccount());
                    }
                    // </GIN>

                    debCredProposal = ledgerJournalEngine.accountModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset, tax1099BoxDetail);

                    element.setDebCredProposal(false);
                }

                // <GIN>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    element.visibleAccountNum_IN();
                    element.visibleProvisionalAssessment_IN();
                    element.setWithTaxPayment_IN();
                    element.setWouldYouClaimRefund_IN();
                }
                // </GIN>

                if (ledgerJournalTrans.listCodeAllowed())
                {
                    ledgerJournalTrans.setListCode();
                    listcode.enabled(true);
                }
                else
                {
                    ledgerJournalTrans.Listcode = Listcode::IncludeNot;
                    listcode.enabled(false);
                }

                element.setVisible();
                element.setProjAccountNum();

                // Determine the tax direction based on the account number.
                this.setTaxDirectionControl();

                ledgerJournalTrans_ds.refresh();

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
                {
                    ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                    element.enableDepreciationStartDate();
                }
                else if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project)
                {
                    element.enableProjSalesCurrencyId();
                }

                if (this.getValue())
                {
                    LedgerJournalACType ledgerJournalACType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, AccountType)).getValue();

                    if (!ReasonFormTable::checkReasonCodeForAccountType(ledgerJournalTrans.ReasonRefRecID, ledgerJournalACType))
                    {
                        ReasonTableRef::deleteByReference(ledgerJournalTrans.ReasonRefRecID);
                        ledgerJournalTrans.ReasonRefRecID = 0;
                    }
                }

                journalFormTrans.enableButtonsActive();
                journalFormTrans.enableFieldsActive();

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, accountName));
                ledgerJournalTrans_ds.rereadReferenceDataSources();

                // <GIN>
                if (TaxWithholdParameters_IN::checkTaxParameters())
                {
                    element.setTaxWithholdEnabled_IN();
                }
                // </GIN>
                // <GSA>
                if (zakatParameterEnabled)
                {
                    if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
                    {
                        element.enableSubContractorGroup_SA();
                    }
                    ledgerJournalEngine.defaultVendAccountForSubcontractor_SA(ledgerJournalTrans, ledgerJournalTransZakat_SA);
                    ledgerJournalTransZakat_SA_ds.refresh();
                }
                // </GSA>
                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    element.setAllowEdit1099SFields();
                    element.setAllowEdit1099GFields();
                    element.setAllowEditTax1099();
                }

                element.enableDisableCashRegister_W();

                if (isTaxInformationEnabled)
                {
                    element.updateTransTaxInformation();
                }

                if (TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalTrans.ledgerJournalTable().JournalType))
                {
                    LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxGroup)).allowEdit(ledgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                    LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxItemGroup)).allowEdit(ledgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                }

                element.updateAccrueSalesTaxTypeControl();
                element.updateVendorChargedSalesTaxControl();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerVoucherType_CN</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // <GCN>
                if (chineseVoucher_CN)
                {
                    ledgerJournalEngine.voucherTypeUpdate_CN(ledgerJournalTrans);
                }
                // </GCN>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetAccountAgreementId_RU</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.setAgreement_RU(ledgerJournalTrans, AccountOffsetaccount::OffsetAccount);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ledgerJournalEngine.agreementLookup_RU(_formControl,
                    ledgerJournalTrans,
                    _filterStr,
                    AccountOffsetaccount::OffsetAccount);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                ledgerJournalEngine.agreementJumpRef_RU(ledgerJournalTrans, AccountOffsetaccount::OffsetAccount);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetAccountType</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                // <GEERU>
                if (!element.validateAccountType_RU(ledgerJournalTrans.OffsetAccountType))
                {
                    return false;
                }

                // </GEERU>
                return super();
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Runs required logic on modification of offset account type field.
            /// </summary>
            /// <remarks>
            /// Validates whether the current reason code is appropriate for the new offset account type
            /// selected. If not, the reason code and comment fields are cleared.
            /// </remarks>
            public void modified()
            {
                LedgerJournalACType offsetACType = this.getValue();

                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers and
                //  thus cannot be called from the super()
                //
                ledgerJournalEngine.offsetAccountTypeModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);
                //    super();

                journalFormTrans.enableButtonsActive();
                element.visibleNotificationCentralBank();
                element.setVisible();
                element.setProjAccountNum();
                element.enableDepreciationStartDate();
                // <GEERU>
                if (countryRegion_RU)
                {
                    journalFormTrans.enableAgreementFields_RU();
                }
                // </GEERU>

                if (ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, OffsetLedgerDimension)).getValue()!=0)
                {
                    if (!ReasonFormTable::checkReasonCodeForAccountType(ledgerJournalTrans.ReasonRefRecID, offsetACType))
                    {
                        ttsbegin;
                        ReasonTableRef::deleteByReference(ledgerJournalTrans.ReasonRefRecID);
                        ledgerJournalTrans.ReasonRefRecID = 0;
                        ttscommit;
                    }
                }

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));
                ledgerJournalTrans_ds.rereadReferenceDataSources();
                // <GSA>
                if (zakatParameterEnabled)
                {
                    element.enableZakatGroups_SA();
                    ledgerJournalEngine.defaultVendAccountForSubcontractor_SA(ledgerJournalTrans, ledgerJournalTransZakat_SA);
                    ledgerJournalTransZakat_SA_ds.refresh();
                }
                // </GSA>

                element.enableDisableCashRegister_W();

                // <GIN>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    element.visibleProvisionalAssessment_IN();
                    LedgerJournalTransTaxExtensionIN.ProvisionalAssessment = NoYes::No;
                }
                // </GIN>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetCompany</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.offsetCompanyModified(ledgerJournalTrans, ledgerJournalTrans_Asset);

                LedgerJournalTrans_OffsetAccount.setDataAreaId(ledgerJournalTrans.getOffsetCompany());
                Group4_OffsetAccount.setDataAreaId(ledgerJournalTrans.getOffsetCompany());

                journalFormTrans.enableFieldsActive();
                ledgerJournalTrans_ds.refresh();
                ledgerJournalTrans_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetLedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Runs required logic on modification of offset account field.
            /// </summary>
            /// <remarks>
            /// Validates whether the current reason code is appropriate for the new offset account
            /// selected. If not, the reason code and comment fields are cleared.
            /// </remarks>
            public void modified()
            {
                LedgerJournalACType     offsetACType;

                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers so
                //  can't be called from the table.modified() method
                //
                ledgerJournalEngine.offsetAccountModified(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);
                //    super();

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.initFromOffsetAccount(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalTrans_Asset);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

                if (TaxParameters::find().CashDiscOnInvoice)
                {
                    ledgerJournalTrans_ds.amountCurCreditForCashDiscInfo();
                    ledgerJournalTrans_ds.amountCurDebitForCashDiscInfo();
                }

                if (ledgerJournalTrans.AccountType != LedgerJournalACType::FixedAssets &&
                   ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::FixedAssets)
                {
                    // The primary account is not of type fixed assets and the offset account was changed
                    // to a fixed asset account, so redefault the depreciation start date.
                    ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                    element.enableDepreciationStartDate();
                }
                else if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project)
                {
                    element.enableProjSalesCurrencyId();
                }

                if (ledgerJournalTrans.listCodeAllowed())
                {
                    ledgerJournalTrans.setListCode();
                }

                if (this.getValue())
                {
                    offsetACType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, OffsetAccountType)).getValue();

                    if (!ReasonFormTable::checkReasonCodeForAccountType(ledgerJournalTrans.ReasonRefRecID, offsetACType))
                    {
                        ttsbegin;
                        ReasonTableRef::deleteByReference(ledgerJournalTrans.ReasonRefRecID);
                        ledgerJournalTrans.ReasonRefRecID = 0;
                        ttscommit;
                    }
                }

                ledgerJournalTrans_ds.cacheCalculateMethod(tableMethodStr(LedgerJournalTrans, offsetAccountName));

                // <GIN>
                if (TaxWithholdParameters_IN::checkTaxParameters())
                {
                    element.setTaxWithholdEnabled_IN();
                }
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    element.visibleProvisionalAssessment_IN();
                    element.setWithTaxPayment_IN();
                    element.setWouldYouClaimRefund_IN();
                }
                // </GIN>
                // <GSA>
                if (zakatParameterEnabled)
                {
                    element.enableSubContractorGroup_SA();
                    ledgerJournalEngine.defaultVendAccountForSubcontractor_SA(ledgerJournalTrans, ledgerJournalTransZakat_SA);
                    ledgerJournalTransZakat_SA_ds.refresh();
                }
                // </GSA>

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    element.setAllowEdit1099SFields();
                    element.setAllowEdit1099GFields();
                    element.setAllowEditTax1099();
                }

                element.enableDisableCashRegister_W();

                if (isTaxInformationEnabled)
                {
                    element.updateTransTaxInformation();
                }

                if (TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalTrans.ledgerJournalTable().JournalType))
                {
                    LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxGroup)).allowEdit(ledgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                    LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxItemGroup)).allowEdit(ledgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                }

                    
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OffsetPostingProfile_RU</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                LedgerJournalEngine::lookupPostingProfileForAccTypeOffset_RU(_formControl, _filterStr, ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Payment</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                ledgerJournalEngine.paymentModified(ledgerJournalTrans);

                element.enableDisableCashRegister_W();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PaymMode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                boolean isValid = true;

                ledgerJournalEngine.paymModeModified(ledgerJournalTrans);

                if (!ledgerJournalTrans)
                {
                    isValid = LedgerJournalTrans_ds.validateWrite();

                    if (isValid)
                    {
                        LedgerJournalTrans_DS.write();
                    }
                    else
                    {
                        // Revert to original value as the required business logic will not execute for the changed value
                        LedgerJournalTrans.PaymMode = LedgerJournalTrans.orig().PaymMode;
                    }
                }

                if (isValid)
                {
                    if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && ledgerJournalTrans.Payment)
                    {
                        ledgerJournalEngine.adjustDueDateOnPaymentMethodChange(ledgerJournalTrans, PaymCalendarModuleType::Vendor);
                    }

                    element.enableDisableCashRegister_W();

                    ledgerJournalEngine.calcPaymentFee(ledgerJournalTrans);

                    ledgerJournalTrans_ds.refresh();
                    ledgerJournalTrans_ds.rereadReferenceDataSources();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PaymSpec</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                boolean isValid = true;

                if (!ledgerJournalTrans)
                {
                    isValid = LedgerJournalTrans_ds.validateWrite();

                    if (isValid)
                    {
                        LedgerJournalTrans_ds.write();
                    }
                    else
                    {
                        // Revert to original value as the required business logic will not execute for the changed value
                        LedgerJournalTrans.PaymSpec = LedgerJournalTrans.orig().PaymSpec;
                    }
                }

                if (isValid)
                {
                    ledgerJournalEngine.calcPaymentFee(ledgerJournalTrans);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PostingProfile</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                LedgerJournalEngine::lookupPostingProfileForAccountType(_formControl, _filterStr, ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Prepayment</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isvalid;

                isvalid = super();

                // Use current values to handle unsaved changes and the validateWrite method will check across
                // The entire voucher so persisted values being change on the line do not impact the test
                if (ledgerJournalTrans.Prepayment
                    && !ledgerJournalTrans.ledgerJournalTable().LedgerJournalInclTax
                    && (((ledgerJournalTrans.AccountType == LedgerJournalACType::Cust
                        || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust)
                        && CustParameters::find().TaxOnPrepayment)
                        || ((ledgerJournalTrans.AccountType == LedgerJournalACType::Vend
                        || ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)
                        && VendParameters::find().TaxOnPrepayment)))
                {
                    error("@SYS98399");
                    isvalid = false;
                }

                return isvalid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                //  The call to super() was replaced with the following lines from super() because the defaulting logic was determined to be
                //  form-specific, and defaulting for project was moved to the LedgerJournalEngine class and requires multiple table buffers so
                //  can't be called from the table.modified() method
                ledgerJournalEngine.prepaymentModified(ledgerJournalTrans, ledgerJournalTrans_Project);

                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);

                // <GEERU>
                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust
                    || (countryRegion_RU
                    && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust))
                // </GEERU>
                {
                    ledgerJournalEngine.initCustPostingProfile(ledgerJournalTrans);
                }

                // <GEERU>
                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend
                    || (countryRegion_RU
                    && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend))
                // </GEERU>
                {
                    ledgerJournalEngine.initVendPostingProfile(ledgerJournalTrans);
                }

                ledgerJournalTrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RCashDocRepresType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // <GEERU>
                if (RCashParameters::isCashModuleEnabled())
                {
                    journalFormTrans.enableRepresPersonId_RU();
                }
                // </GEERU>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ReleaseDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Modifies the ReleaseDate field value of the ledgerJournalTrans table buffer.
            /// </summary>
            public void modified()
            {
                super();
                ledgerJournalEngine.releaseDateModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RemittanceAddress</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && ledgerJournalTrans.Payment)
                {
                    ledgerJournalEngine.adjustDueDateAddressChange(ledgerJournalTrans, PaymCalendarModuleType::Vendor);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RemittanceLocation</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = LogisticsLocationAppUtil::lookupRemittanceLocation(_formReferenceControl, ledgerJournalTrans.parmAccount(), ledgerJournalTrans.Company);

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                LogisticsLocationAppUtil::jumpRefLogisticsLocation(element, ledgerJournalTrans.RemittanceLocation);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ReverseEntry</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Sets the editable property of the LedgerJournalTrans table ReverseDate field.
            /// </summary>
            public void modified()
            {
                super();

                ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, ReverseDate)).allowEdit(ledgerJournalTrans.ReverseEntry);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Tax1099Fields</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    element.setAllowEdit1099SFields();
                    element.setAllowEdit1099GFields();
                    element.setAllowEditTax1099();

                    Tax1099BoxDetail::deleteOrClear1099Detail(Tax1099Fields::find(ledgerJournalTrans.Tax1099Fields).Tax1099Box, tax1099BoxDetail.RecId);
                    tax1099BoxDetail_ds.executeQuery();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxBase_W</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalTrans.TaxBase_W = sign(ledgerJournalEngine.taxAmountJournal(ledgerJournalTrans))*abs(ledgerJournalTrans.TaxBase_W);
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxCode</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxTable::taxTableLookup(_formControl, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                if ((LedgerJournalTrans.TransactionType == LedgerTransType::WriteOff) || countryRegion_PL)
                {
                    ledgerJournalTrans.calcUserTaxBase();
                }

                element.enableFieldsActive();

                ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
                ledgerjournaltrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                LedgerJournalTaxDocument ledgerJournalTaxDocument = LedgerJournalTaxDocument::construct(ledgerJournalTrans.JournalNum, ledgerJournalTrans.Voucher, ledgerJournalTrans.Invoice, ledgerJournalTrans);
                DataAreaId taxGroupCompany;

                if (ledgerJournalTable.TaxObligationCompany == TaxObligationCompany::Source)
                {
                    taxGroupCompany = ledgerJournalTaxDocument.getSourceCompany();
                }
                else
                {
                    taxGroupCompany = ledgerJournalTaxDocument.getLineByLedgerJournalTrans(ledgerJournalTrans).getDestinationCompany();
                }
                if (!taxGroupCompany)
                {
                    taxGroupCompany  = ledgerJournalTrans.Company;
                }
                TaxGroupHeading::taxGroupLookup(_formControl, taxGroupCompany);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
                ledgerjournaltrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxItemGroup</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                LedgerJournalTaxDocument ledgerJournalTaxDocument = LedgerJournalTaxDocument::construct(ledgerJournalTrans.JournalNum, ledgerJournalTrans.Voucher, ledgerJournalTrans.Invoice, ledgerJournalTrans);
                DataAreaId taxItemGroupCompany;

                if (ledgerJournalTable.TaxObligationCompany == TaxObligationCompany::Source)
                {
                    taxItemGroupCompany = ledgerJournalTaxDocument.getSourceCompany();
                }
                else
                {
                    taxItemGroupCompany = ledgerJournalTaxDocument.getLineByLedgerJournalTrans(ledgerJournalTrans).getDestinationCompany();
                }
                if (!taxItemGroupCompany)
                {
                    taxItemGroupCompany  = ledgerJournalTrans.Company;
                }
                TaxItemGroupHeading::taxItemGrouplookup(_formControl, taxItemGroupCompany);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.correctTaxAmount(ledgerJournalTrans,0); // clear manual tax regulation
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
                ledgerjournaltrans_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxWithholdGroup</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                boolean isValid = LedgerJournalTrans_ds.validateWrite();

                if (isValid)
                {
                    LedgerJournalTrans_DS.write();
                    ledgerJournalEngine.findSettledAmount(ledgerJournalTrans);
                }
                else
                {
                    // Revert to original value as the required business logic will not execute for the changed value
                    LedgerJournalTrans.TaxWithholdGroup = LedgerJournalTrans.orig().TaxWithholdGroup;
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                // don't call super because it ignores the reference company

                boolean isValid = true;

                if (isValid &&
                    (ledgerJournalTrans.TaxWithholdGroup != '') &&
                    (!TaxWithholdGroupHeading::existByCompany(ledgerJournalTrans.Company, ledgerJournalTrans.TaxWithholdGroup)))
                {
                    isValid = checkFailed(strFmt(
                        "@SYS112224",
                        ledgerJournalTrans.TaxWithholdGroup,
                        fieldPName(LedgerJournalTrans, TaxWithholdGroup),
                        tablePName(TaxWithholdGroupHeading)));
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxWithholdGroupHeading::lookupTaxWithholdGroup(_formControl, _filterStr, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();

                // <GCN>
                if (chineseVoucher_CN)
                {
                    ledgerJournalEngine.transDateUpdate_CN(ledgerJournalTrans);
                }
                // </GCN>

                ledgerJournalEngine.transDateModified(ledgerJournalTrans);
            
                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Project ||
                    ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Project)
                {
                    if (Box::yesNoOnce("@SYS54242", "@Proj:ProjectDateDialog", DialogButton::No) == DialogButton::Yes)
                    {
                        ledgerJournalEngine.setProjTransDate(ledgerJournalTrans, ledgerJournalTrans_Project);
                        LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
                    }
                }
          
                LedgerJournalTrans_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);
                Group4_AccountNum.parmControlDate(ledgerJournalTrans.TransDate);

                LedgerJournalTrans_OffsetAccount.parmControlDate(ledgerJournalTrans.TransDate);
                Group4_OffsetAccount.parmControlDate(ledgerJournalTrans.TransDate);

                CustPaymJournalFee_CustAccount.parmControlDate(ledgerJournalTrans.TransDate);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Triangulation</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                ledgerJournalEngine.clearTaxAmountCache(ledgerJournalTrans);
                ledgerJournalEngine.triangulationModified(ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VatDueDate_W</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // <GEEU>
                if (TaxSpecificExchangeRateHelper::isTaxSpecificExchRateEnabledByBusinessProcess(TaxIntegrationBusinessProcess::Journal))
                {
                    TaxSpecificExchangeRate::deleteBySourceRecord(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                }
                else if (TaxParameters::isBankExchRateEnabled_W())
                {
                    SalesTaxTransactionExchangeRate::deleteBySourceRecord(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId);
                }
                // </GEEU>
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VATNumJournal</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if (TaxVATNumTable::taxVATNumTableEnabled())
                {
                    TaxVATNumTable::lookupVATNum(_formControl, ledgerJournalTrans);
                }
                else
                {
                    super(_formControl, _filterStr);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>VendBankAccount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && ledgerJournalTrans.Payment)
                {
                    ledgerJournalEngine.adjustDueDateAddressChange(ledgerJournalTrans, PaymCalendarModuleType::Vendor);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Voucher</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalEngine.formMethodDataSourceVoucherModified();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Voucher_CN</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                // <GCN>
                if (ret
                    && chineseVoucher_CN)
                {
                    ret = ledgerJournalEngine.checkVoucher_CN(ledgerJournalTrans);
                }
                // </GCN>
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CustVendPaymJournalFee</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            CustPaymJournalFee_CustAccount.parmCurrency(custVendPaymJournalFee.FeeCurrency);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modifyModuleAccountType</Name>
						<Source><![CDATA[
        public void modifyModuleAccountType()
        {
            // Clear the account
            custVendPaymJournalFee.parmLedgerDimension(0);

            if (custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Ledger ||
                (custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Cust &&
                 custVendPaymJournalFee.Module == ModuleCustVend::Cust) ||
                (custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Vend &&
                 custVendPaymJournalFee.Module == ModuleCustVend::Vend))
            {
                // Enable account if the account type is ledger or the module & account type are customer or
                // the module & account type are vendor
                custPaymJournalFee_CustAccount.enabled(true);
            }
            else
            {
                custPaymJournalFee_CustAccount.enabled(false);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            ledgerJournalEngine.saveVoucherBalance(ledgerJournalTrans);
            super();
            ledgerJournalEngine.recalcVoucherBalance(ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ledgerJournalEngine.saveVoucherBalance(ledgerJournalTrans);
            ledgerJournalEngine.preWriteUpdateDefaultDimensionPaymFee(custVendPaymJournalFee);
            super();
            ledgerJournalEngine.recalcVoucherBalance(ledgerJournalTrans);

            // <GCN>
            if (LedgerParameters::isJournalApproval_CN())
            {
                ledgerJournalEngine.setToOpenValue_CN();
                element.enableButtonsActive();
                element.bookRefresh();
            }
            // </GCN>
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            switch (ledgerJournalTrans.AccountType)
            {
                case LedgerJournalACType::Cust:
                    custVendPaymJournalFee.Module = ModuleCustVend::Cust;
                    break;

                case LedgerJournalACType::Vend:
                    custVendPaymJournalFee.Module = ModuleCustVend::Vend;
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>LedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                CompanyId validationCompany;
                boolean ret;

                // This needs to happen in the correct company context
                if (custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Cust ||
                    custVendPaymJournalFee.LedgerJournalACType == LedgerJournalACType::Vend)
                {
                    validationCompany = ledgerJournalTrans.Company;
                }
                else
                {
                    validationCompany = ledgerJournalTrans.company();
                }

                changecompany(validationCompany)
                {
                    ret = super();
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerJournalACType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                custVendPaymJournalFee_ds.modifyModuleAccountType();
                custVendPaymJournalFee_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Module</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                custVendPaymJournalFee_ds.modifyModuleAccountType();
                custVendPaymJournalFee_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_Project</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ledgerJournalTransEntityManager.getFormDataEventManager().requestWriteForSibling();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the write if called from the LedgerJournalTrans datasource's write event.
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's write event.
                isValid = super();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Project.validateDelete directly as we don't want an extra delete
                // confirmation dialog to be shown.
                isValid = ledgerJournalTrans_Project.validateDelete();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the deletion if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Project.delete directly as super calls validateWrite, which will cause
                // an extra delete confirmation dialog to be shown.
                ledgerJournalTrans_Project.delete();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // The sibling write can no longer be handled so cancel the request.
                ledgerJournalTransEntityManager.getFormDataEventManager().cancelSiblingWriteRequest();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ActivityNumber</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if ((ledgerJournalTrans.AccountType ==  LedgerJournalACType::Project) ||
                    (ledgerJournalTrans.OffsetAccountType ==  LedgerJournalACType::Project))
                {
                    HierarchyTreeTable::lookupHierarchyTree(_formControl, ProjTable::find(ledgerJournalTrans_Project.ProjId), ProjParameters::find().BlockParentActivitySelection);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                ledgerJournalTrans_Project.activityNumberModified();

                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
                ledgerJournalEngine.setProjDefaultOffsetAccount(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalTrans_Project_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CategoryId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.projCategoryModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                super();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
                ledgerJournalEngine.setProjDefaultOffsetAccount(ledgerJournalTrans, ledgerJournalTrans_Project);
                ledgerJournalTrans_Project_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CostPrice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.projCostPriceModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                super();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjTransDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
                LedgerJournalTrans_Project_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Qty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.projQtyModified(ledgerJournalTrans, ledgerJournalTrans_Project);
                super();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Resource</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;
                boolean isProject;

                isProject = ledgerJournalTrans.AccountType ==  LedgerJournalACType::Project ||
                    ledgerJournalTrans.OffsetAccountType ==  LedgerJournalACType::Project;

                if (isProject)
                {
                    ret = ResourceLookup::lookupResource(_formReferenceControl, ledgerJournalTrans_Project);
                }
                else
                {
                    ret = super(_formReferenceControl);
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                ResourceView ret;
                boolean isProject;

                ret = super(_formReferenceControl);

                isProject = ledgerJournalTrans.AccountType ==  LedgerJournalACType::Project ||
                    ledgerJournalTrans.OffsetAccountType ==  LedgerJournalACType::Project;

                if (isProject && ret.RecId && !ResourceLookup::validateResource(ret.RecId, ledgerJournalTrans_Project))
                {
                    ret = null;
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                ledgerJournalEngine.parmLedgerJournalTrans_Project(ledgerJournalTrans_Project);
                ledgerJournalEngine.initDefaultDimension(ledgerJournalTrans);
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);
                // force update on the cost and sales amount since they are not automatically reflecting the values in the buffer.
                group4_CostPrice.update();
                group4_SalesPrice.update();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SalesCurrencyId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SalesPrice</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                keepSalesPriceOnWrite = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                ProjCostTrans::jumpRefTransId(ledgerJournalTrans, element);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_Asset</Name>
				<Methods>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Asset.validateDelete directly as we don't want an extra delete
                // confirmation dialog to be shown.
                isValid = ledgerJournalTrans_Asset.validateDelete();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the deletion if called from the LedgerJournalTrans datasource's delete event.

                // Call LedgerJournalTrans_Asset.delete directly as super calls validateWrite, which will cause
                // an extra delete confirmation dialog to be shown.
                ledgerJournalTrans_Asset.delete();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ledgerJournalTransEntityManager.getFormDataEventManager().requestWriteForSibling();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the write if called from the LedgerJournalTrans datasource's write event.
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's write event.
                isValid = super();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);
            ledgerJournalEngine.formMethodDataSourceFixedAssetsCreate(ledgerJournalTrans, ledgerJournalTrans_Asset);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        void initValue()
        {
            super();

            ledgerJournalEngine.initValueAsset(ledgerJournalTrans_Asset);
            element.enableDepreciationStartDate();
            element.enableCurrencyCodeOnDepreciation();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            element.enableDepreciationStartDate();
            element.enableCurrencyCodeOnDepreciation();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // The sibling write can no longer be handled so cancel the request.
                ledgerJournalTransEntityManager.getFormDataEventManager().cancelSiblingWriteRequest();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BookId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                AssetBook::lookupOpenBookIdForAsset(_formControl,
                                                    ledgerJournalTrans_Asset.AssetId,
                                                    true,  // CurrentOperationsTax must be considered
                                                    ledgerJournalTable.CurrentOperationsTax,
                                                    ledgerJournalTrans_Asset.Company,
                                                    true);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.assetBookIdModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                super();
                if (ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
                {
                    ledgerJournalEngine.initFromAssetTable(ledgerJournalTrans, ledgerJournalTrans_Asset);
                }

                ledgerJournalEngine.setAssetDepStartDate(ledgerJournalTrans, ledgerJournalTrans_Asset);
                element.enableDepreciationStartDate();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalEngine.assetTransTypeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);
                super();
                element.enableDepreciationStartDate();
                element.enableCurrencyCodeOnDepreciation();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransZakat_SA</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (ret && zakatParameterEnabled)
            {
                element.enableZakatSalesProjectId_SA();
                element.enableZakatGroups_SA();
                element.enableSubContractorGroup_SA();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                ret = ledgerJournalTransZakat_SA.validate();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (zakatParameterEnabled)
            {
                this.linkType(FormLinkType::InnerJoin);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ContractNum</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(
                FormControl _formControl,
                str         _filterStr)
            {
                VendContractZakat_SA::lookupContracts(_formControl,
                                                      VendInfoZakat_SA::find(ledgerJournalTransZakat_SA.Subcontractor).VendAccount);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(
                FormControl _formControl,
                str         _filterStr)
            {
                ProjTable::lookupProjId_SA(_formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SalesType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.enableZakatSalesProjectId_SA();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Subcontractor</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                VendTable::jumpRefAccountNum_SA(ledgerJournalTransZakat_SA,
                                                element,
                                                ledgerJournalTransZakat_SA.Subcontractor,
                                                fieldId2name(tableNum(LedgerJournalTransZakat_SA),
                                                fieldNum(LedgerJournalTransZakat_SA, Subcontractor)));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransBankLC</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (ledgerJournalTransBankLC.LedgerJournalTrans != 0)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateControls</Name>
						<Source><![CDATA[
        public void updateControls()
        {
            ledgerJournalTransBankLC_ds.object(fieldNum(LedgerJournalTransBankLC, TransType)).allowEdit(ledgerJournalTransBankLC.BankLCLine == 0);

            switch (ledgerJournalTransBankLC.TransType)
            {
                case BankLCLedgerJournalTransType::Blank:
                case BankLCLedgerJournalTransType::Settlement :
                    ledgerJournalTransBankLC_ds.object(fieldNum(LedgerJournalTransBankLC, BankLC)).allowEdit(false);
                    if (bankLCChargeEnabled)
                    {
                        ledgerJournalTransBankLC_ds.object(fieldNum(LedgerJournalTransBankLC, MarkupCode_SA)).allowEdit(false);
                    }
                    break;
                case BankLCLedgerJournalTransType::Margin :
                    ledgerJournalTransBankLC_ds.object(fieldNum(LedgerJournalTransBankLC, BankLC)).allowEdit(true);
                    if (bankLCChargeEnabled)
                    {
                        ledgerJournalTransBankLC_ds.object(fieldNum(LedgerJournalTransBankLC, MarkupCode_SA)).allowEdit(false);
                    }
                    break;
                case BankLCLedgerJournalTransType::MiscCharge_SA :
                    if (bankLCChargeEnabled)
                    {
                        ledgerJournalTransBankLC_ds.object(fieldNum(LedgerJournalTransBankLC, BankLC)).allowEdit(true);
                        ledgerJournalTransBankLC_ds.object(fieldNum(LedgerJournalTransBankLC, MarkupCode_SA)).allowEdit(true);
                    }
                    break;
            }

            ledgerJournalTransBankLC_ds.refresh();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (ret)
            {
                this.updateControls();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BankLC</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.setAccountsByBankLC();
                ledgerJournalTrans_DS.research(true);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                BankLC bankLC;

                bankLC = bankLCImportNumberController.lookupReference(_formReferenceControl);

                return bankLC;
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = bankLCImportNumberController.resolveReference(_formReferenceControl as FormReferenceGroupControl);

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                if (ledgerJournalTransBankLC.BankLC)
                {
                    bankLCImportNumberController.jumpRef(ledgerJournalTransBankLC.BankLC);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BankLCLine</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                BankLCLine  bankLCLineLocal;

                if (ledgerJournalTransBankLC.BankLCLine)
                {
                    bankLCLineLocal = ledgerJournalTrans.getBankLCLine();
                    switch (bankLCLineLocal.getInstanceRelationType())
                    {
                        case tableStr(BankLCImportLine) :
                            bankLCLineNumController = BankLCImportLineNumController::construct();
                            break;
                        case tableStr(BankLCExportLine) :
                            bankLCLineNumController = BankLCExportLineNumController::construct();
                            break;
                    }

                    bankLCLineNumController.parmBankLCRecId(bankLCLineLocal.BankLC);
                    bankLCLineNumController.jumpRef();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>MarkupCode_SA</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                bankLCImportMarkupLookupController.jumpRef(ledgerJournalTransBankLC.MarkupCode_SA);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                bankLCImportMarkupLookupController.lookup(_formControl, _filterStr);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ledgerJournalTransBankLC_ds.updateControls();
                super();
                ledgerJournalTransBankLC_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransTaxExtensionIN</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (this.isNeeded())
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            // <GIN>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                ledgerJournalTransTaxExtensionIN.LedgerJournalTrans = ledgerJournalTrans.RecId;
            }
            // </GIN>
        }

]]></Source>
					</Method>
					<Method>
						<Name>isNeeded</Name>
						<Source><![CDATA[
        public boolean isNeeded()
        {
            return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>TCSGroup</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // <GIN>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    element.setTaxWithholdEnabled_IN();
                }
                // </GIN>
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TCS, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                TaxWithholdGroupHeading::jumpRef(ledgerJournalTrans.ledgerJournalTransTaxExtensionIN().tcsGroup, TaxWithholdCodeType_IN::TCS, ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TDSGroup</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                // <GIN>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    element.setTaxWithholdEnabled_IN();
                }
                // </GIN>
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxWithholdGroupHeading::lookupTaxComponentGroup_IN(_formControl, TaxWithholdCodeType_IN::TDS, ledgerJournalTrans.Company);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                TaxWithholdGroupHeading::jumpRef(ledgerJournalTrans.ledgerJournalTransTaxExtensionIN().tdsGroup, TaxWithholdCodeType_IN::TDS, ledgerJournalTrans);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>Tax1099BoxDetail</Name>
				<Methods>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // The sibling write can no longer be handled so cancel the request.
                ledgerJournalTransEntityManager.getFormDataEventManager().cancelSiblingWriteRequest();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the validation if called from the LedgerJournalTrans datasource's delete event.

                // Call tax1099BoxDetail.validateDelete directly as we don't want an extra delete
                // confirmation dialog to be shown.
                isValid = tax1099BoxDetail.validateDelete();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                // Only perform the deletion if called from the LedgerJournalTrans datasource's delete event.

                // Call tax1099BoxDetail.delete directly as super calls validateWrite, which will cause
                // an extra delete confirmation dialog to be shown.
                tax1099BoxDetail.delete();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = true;

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                isValid = super();

                Tax1099Box tax1099Box = Tax1099Fields::find(ledgerJournalTrans.Tax1099Fields).Tax1099Box;

                if (isValid && tax1099Box == Tax1099G::unemploymentCompensation().tax1099Box)
                {
                    if ((tax1099BoxDetail.Tax1099StateTaxWithheld > ledgerJournalTrans.Tax1099Amount))
                    {
                        isValid = checkFailed("@SPS1943");
                    }
                }

                if (isValid && ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099S::grossProceeds()))
                {
                    if ((tax1099BoxDetail.Tax1099DateOfClosing == dateNull()) || (tax1099BoxDetail.Tax1099AddressorLegalDesc ==""))
                    {
                        isValid = checkFailed("@SPS3");
                    }
                }
                if (isValid)
                {
                    if (ledgerJournalTrans.Tax1099Fields ==
                        Tax1099Base::findTax1099FieldsRecId(Tax1099G::incomeTaxRefundsCreditsOffsets())
                            && (tax1099BoxDetail.Tax1099TaxYear < (year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))-15) || tax1099BoxDetail.Tax1099TaxYear > (year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) + 10)))
                    {
                        isValid = checkFailed(strFmt("@SPS17", "@SPS1064", int2str(year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) - 15), int2str(year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) + 10)));
                    }
                }
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ledgerJournalTransEntityManager.getFormDataEventManager().requestWriteForSibling();

            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                // Only perform the write if called from the LedgerJournalTrans datasource's write event.
                super();

                if (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099S::grossProceeds()))
                {
                    if (tax1099BoxDetail.Tax1099BuyersTax == 0.0)
                    {
                        warning(strFmt("@SPS14","@PublicSector:Tax1099S6BuyersPart"));
                    }
                    if (ledgerJournalTrans.Tax1099Amount == 0 && tax1099BoxDetail.Tax1099PropertyOrServices == NoYes::Yes)
                    {
                        warning(strFmt("@SPS18", fieldPName(LedgerJournalTrans, Tax1099Amount)));
                    }
                }

                if (ledgerJournalTrans.Tax1099Fields == Tax1099Base::findTax1099FieldsRecId(Tax1099G::incomeTaxRefundsCreditsOffsets()))
                {
                    if (tax1099BoxDetail.Tax1099TaxYear > year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) && tax1099BoxDetail.Tax1099TaxYear < (year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) + 15))
                    {
                        warning("@SPS2");
                    }
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>State</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                Tax1099BoxDetail::lookupTax1099State(_formControl, LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(ledgerJournalTrans.LedgerDimension));
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                tax1099BoxDetail.Tax1099StateTaxID = VendStateTaxID::findByVendState(LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(ledgerJournalTrans.LedgerDimension),tax1099BoxDetail.State).StateTaxID;
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                Tax1099BoxDetail::jumpRefTax1099State(LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(ledgerJournalTrans.LedgerDimension),tax1099BoxDetail.State);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TaxServiceTariff</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (countryRegion_PL && (!taxServiceTariff.ParentRecId || !taxServiceTariff.ParentTableId))
            {
                // Write can cause the child data source to lose it's foreign key values so restore them.
                taxServiceTariff.ParentRecId = ledgerJournalTrans.RecId;
                taxServiceTariff.ParentTableId = ledgerJournalTrans.TableId;
                taxServiceTariff_ds.refresh();
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransExtensionTH</Name>
				<Methods>
					<Method>
						<Name>isNeeded</Name>
						<Source><![CDATA[
        /// <summary>
        /// Checks whether this data sources should be enable or not.
        /// </summary>
        /// <returns>
        /// true if it should be eneabled; otherwise, return false.
        /// </returns>
        /// <remarks>
        /// This data source is joined to its parent data source with join type <c>Passive</c>
        /// by default. It means this data source is disabled by default.
        /// If any related feature needs this data source, then add condition(s) here to
        /// mark that it should be enabled.
        /// </remarks>
        public boolean isNeeded()
        {
            boolean ret;

            ret = taxWithholdEnabledTH || TaxThaiGovCertificationFeatureChecker::isAverageVATEnabled();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret= true;

            if (ledgerJournalTransExtensionTH.LedgerJournalTrans)
            {
                ret = super();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (ledgerJournalTransExtensionTH.LedgerJournalTrans)
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (this.isNeeded())
            {
                this.linkType(FormLinkType::OuterJoin);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (ret && taxWithholdEnabledTH)
            {
                element.updateTaxWithholdControls();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>PaymentGrossUpType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateTaxWithholdControls();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_ProjectTaxExtensionIN</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (countryRegion_IN)
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_W</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (enableLedgerJournalTrans_W)
            {
                // Switch the link type as fields appear in the grid that require an outerjoin
                ledgerJournalTrans_W_ds.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean     ret;
            CustAccount custAccount;
            // <GIN>
            boolean     validateInvoiceIdDate;
            // </GIN>

            if(LedgerJournalTrans.AccountType == LedgerJournalACType::Cust
                || LedgerJournalTrans.OffsetAccountType == LedgerJournalACType::Cust)
            {
                custAccount = LedgerJournalTrans.findCustTable().AccountNum;
                if (!custAccount)
                {
                    custAccount = LedgerJournalTrans.findCustForOffset().AccountNum;
                }
            }
            ret = LedgerJournalTrans_W.LedgerJournalTrans ? super() : true;

            // <GIN>
            if (ret && countryRegion_IN)
            {
                if (LedgerJournalTransTaxExtensionIN.InvoiceIdentification == InvoiceIdentification_IN::Revised
                    && !LedgerJournalTransTaxExtensionIN.RefSalesInvoiceId
                    && !LedgerJournalTransTaxExtensionIN.RefPurchInvoiceId)
                {
                    ret = checkFailed("@TaxGST:WarningMessageOfOriInvNumOriInvDate");
                }

                if (LedgerJournalTransTaxExtensionIN.RefSalesInvoiceId && LedgerJournalTransTaxExtensionIN.RefSalesInvoiceDate)
                {
                    validateInvoiceIdDate = CustInvoiceJour::existByInvoiceIdTransDate_IN(LedgerJournalTransTaxExtensionIN.RefSalesInvoiceId, LedgerJournalTransTaxExtensionIN.RefSalesInvoiceDate, custAccount)
                                    || ProjInvoiceJour::find(LedgerJournalTransTaxExtensionIN.RefSalesInvoiceId, LedgerJournalTransTaxExtensionIN.RefSalesInvoiceDate).RecId != 0;

                    if (!validateInvoiceIdDate)
                    {
                        ret = checkFailed("@SYP4860680");
                    }
                }
                else if ((LedgerJournalTransTaxExtensionIN.RefSalesInvoiceId && !LedgerJournalTransTaxExtensionIN.RefSalesInvoiceDate) || (!LedgerJournalTransTaxExtensionIN.RefSalesInvoiceId && LedgerJournalTransTaxExtensionIN.RefSalesInvoiceDate))
                {
                    ret = checkFailed("@SYP4860689");
                }
                if (LedgerJournalTransTaxExtensionIN.RefPurchInvoiceId && LedgerJournalTransTaxExtensionIN.RefPurchInvoiceDate)
                {
                    if(!VendInvoiceJour::existByInvoiceIdTransDate_IN(LedgerJournalTransTaxExtensionIN.RefPurchInvoiceId , LedgerJournalTransTaxExtensionIN.RefPurchInvoiceDate, LedgerJournalTrans.findVendTable().AccountNum))
                    {
                        ret = checkFailed("@SYP4860680");
                    }
                }
                else if ((LedgerJournalTransTaxExtensionIN.RefPurchInvoiceId && !LedgerJournalTransTaxExtensionIN.RefPurchInvoiceDate) || (!LedgerJournalTransTaxExtensionIN.RefPurchInvoiceId && LedgerJournalTransTaxExtensionIN.RefPurchInvoiceDate))
                {
                    ret = checkFailed("@SYP4860689");
                }
            }
            // </GIN>

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (enableLedgerJournalTrans_W && LedgerJournalTrans_W.LedgerJournalTrans != 0)
            {
                // Only write the child table if the country context is set to one that the table has fields linked to and the child table has the parent FK set
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            if (countryRegion_MX)
            {
                journalFormTrans.setCFDIWithholdingTaxFieldEnabled(LedgerJournalTrans_W_ds);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CashRegisterTerminal</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                RegisterRecId.value(CashRegisterTerminal_W::find(LedgerJournalTrans_W.CashRegisterTerminal).CashRegister);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();
                if (ret)
                {
                    if (LedgerJournalTrans_W.CashRegisterTerminal
                        && CashRegisterTerminal_W::find(LedgerJournalTrans_W.CashRegisterTerminal).Location != LocationRecId.value())
                    {
                        ret = checkFailed(strFmt("@FiscalServices:AS_LedgerJournalTransCustPaym_Form_CashTerm", CashRegisterLocation_W::find(LocationRecId.value()).Code));
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return CashRegisterTerminal_W::lookupTerminalForLocation(_formReferenceControl, LocationRecId.value());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>WithholdingTypeCode_MX</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                journalFormTrans.setCFDIWithholdingTaxFieldEnabled(LedgerJournalTrans_W_ds);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTrans_RAsset</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ledgerJournalTransEntityManager.getFormDataEventManager().requestWriteForSibling();
  
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = true;
  
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityWriteEvent())
            {
                isValid = super();
            }
  
            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean isValid = true;
  
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                isValid = ledgerJournalTrans_RAsset.validateDelete();
            }
  
            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isInEntityDeleteEvent())
            {
                ledgerJournalTrans_RAsset.delete();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();
  
            if (ledgerJournalTransEntityManager.getFormDataEventManager().isSiblingWriteRequested())
            {
                // The sibling write can no longer be handled so cancel the request.
                ledgerJournalTransEntityManager.getFormDataEventManager().cancelSiblingWriteRequest();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTransTaxExtension</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (element.isLedgerJournalTransTaxExtensionEnabled)
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            if (element.isLedgerJournalTransTaxExtensionEnabled)
            {
                LedgerJournalTransTaxExtension.LedgerJournalTrans = ledgerJournalTrans.RecId;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AccrueSalesTaxType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.updateVendorChargedSalesTaxControl();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OverrideSalesTax</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxGroup)).allowEdit(ledgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
                LedgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans, TaxItemGroup)).allowEdit(ledgerJournalTransTaxExtension.OverrideSalesTax == NoYes::Yes);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>PostJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.updateJournalBalance();
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getPostingResults());

                errorExist.visible(journalFormTrans.parmCheckPostResults().errorInJournalLine());

                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();
                element.bookRefresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PostJournalBatch</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            element.updateJournalBalance();
            ledgerJournalEngine.clearVoucher();

            try
            {
                LedgerJournalMultiPost::singleJournalPost(ledgerJournalTable);
            }
            finally
            {
                journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getPostingResults());

                errorExist.visible(journalFormTrans.parmCheckPostResults().errorInJournalLine());

                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();
                element.bookRefresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonCheckJournal</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.updateJournalBalance();

            super();

            infolog.infoActionObject(journalFormTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.validateJournalPost();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckVoucher</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.validateJournalPost();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SimulatePosting</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.validateJournalPost();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonGeneralJournal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            // The form must be closed to properly free up the journal block status when navigating away.
            element.close();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonReportAsReady</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // <GCN>
            LedgerJournalCheckPost_CN  ledgerJournalCheckPost;
            boolean                 journalApproval_CN = LedgerParameters::isJournalApproval_CN();
            // </GCN>

            // <GCN>
            if (journalApproval_CN)
            {
                ledgerJournalCheckPost = LedgerJournalCheckPost_CN::newLedgerJournalTable(ledgerJournalTable, NoYes::No);
                if (!ledgerJournalCheckPost.checkJournalReady())
                {
                    warning("@GLS54545");
                    return;
                }
            }
            // </GCN>

            ledgerJournalEngine.clearVoucher();

            ledgerJournalEngine.markReportAsReady();

            // <GCN>
            if (journalApproval_CN
                && ledgerJournalEngine.reportedAsReady())
            {
                info("@GLS54527");
            }
            // </GCN>

            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonApprove</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            // <GCN>
            if (LedgerParameters::isJournalApproval_CN())
            {
                Args args = new Args();
                args.caller(element);
                args.record(ledgerJournalTable);
                new MenuFunction(menuitemDisplayStr(LedgerJournalApproval_CN), MenuItemType::Display).run(args);
            }
            // </GCN>
            else
            {
                ledgerJournalEngine.markApproved();
            }

            ledgerJournalEngine.refreshWhenPosted();
            journalFormTrans.enableButtonsActive();
            element.bookRefresh();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonReject</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            ledgerJournalEngine.markRejected();
            ledgerJournalEngine.refreshWhenPosted();
            element.bookRefresh();
            journalFormTrans.enableButtonsActive();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WithholdTax_IN</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void  clicked()
        {
            if (LedgerJournalTable.Posted)
            {
                TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), null, element);
            }
            else
            {
                TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), ledgerJournalTrans, element);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxWithholdTrans_IN</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void  clicked()
        {
            if (LedgerJournalTable.Posted)
            {
                super();
            }
            else
            {
                TaxWithholdJournal_IN::calcAndShowWithholdTax(element.getShowWithholdTax_IN(), ledgerJournalTrans, element);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonCopyPeriodic</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args    args;

            ledgerJournalEngine.clearVoucher();

            args = new Args();
            args.record(ledgerJournalTable);
            LedgerJournalCopyPeriodic::main(args);

            ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
            ledgerJournalTrans_ds.research();
            ledgerJournalTrans_Project_ds.research();
            ledgerJournalTrans_Asset_ds.research();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Functions</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // <GEERU>
            boolean factureVisiblePurch = ledgerJournalTrans.isTaxCorrection_RU(false),
                    factureVisibleSales = ledgerJournalTrans.isTaxCorrection_RU(false),
                    factureEnabledPurch = factureVisiblePurch       &&
                                          ledgerJournalTable.Posted &&
                                          ledgerJournalTrans.OffsetAccountType != LedgerJournalACType::Cust,
                    factureEnabledSales = factureVisibleSales       &&
                                          ledgerJournalTable.Posted;
            #ISOCountryRegionCodes

            if (countryRegion_RU)
            {
                factureEditLinesSeparator_RU.visible(factureVisiblePurch || factureVisibleSales);
                factureEditLinesTaxCorrectionPurch_RU.visible(factureVisiblePurch || factureVisibleSales);
                factureEditLinesTaxCorrectionSales_RU.visible(factureVisiblePurch || factureVisibleSales);

                factureEditLinesTaxCorrectionPurch_RU.enabled(factureEnabledPurch);
                factureEditLinesTaxCorrectionSales_RU.enabled(factureEnabledSales);
            }
            // </GEERU>

            journalFormTrans.buttonClickedFunctions(ledgerJournalTrans);

            // <GIN>
            if (TaxParameters::checkTaxParameters_IN())
            {
                element.enableUpdatePLA_IN();
            }
            // </GIN>

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalPostTransfer</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            try
            {
                super();
            }
            finally
            {
                journalFormTrans.parmCheckPostResults(ledgerJournalEngine.getPostingResults());

                errorExist.visible(journalFormTrans.parmCheckPostResults().errorInJournalLine());

                ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);
                ledgerJournalEngine.refreshWhenPosted();
                journalFormTrans.enableButtonsActive();
                element.bookRefresh();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonDeleteTransactions</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            super();
            element.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonGetTransactions</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ledgerJournalEngine.clearVoucher();

            super();

            journalFormTrans.researchJournalLines();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerInAccountStatementTrans</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            ledgerJournalTrans_ds.research();
            ledgerJournalTrans_ds.active();
            ledgerJournalTrans_ds.linkActive();

            ledgerJournalEngine.updateInternalContainers(ledgerJournalTrans, true);
            ledgerJournalEngine.ledgerJournalTableUpdateTotals(ledgerJournalTable, false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerInAccountStatementTotal</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            ledgerJournalTrans_ds.research();
            ledgerJournalTrans_ds.active();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TradeBLWIChangeCode</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (!ledgerJournalTrans.RecId)
            {
                boolean isValid = LedgerJournalTrans_ds.validateWrite();

                if (isValid)
                {
                    LedgerJournalTrans_ds.write();
                }
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalGetAssetTrans</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            ledgerJournalTrans_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Inquiries</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            FactureModule_RU    module;
            boolean factured      = ledgerJournalTrans.fullyFactured_RU(false),
                    purchBook,
                    salesBook     = factured  && !purchBook;

            if (factured)
            {
                module    = ledgerJournalTrans.factureModule_RU();
                purchBook = (module == FactureModule_RU::TaxCorrectionPurch || module == FactureModule_RU::TaxCorrectionPurch_Cust);
                salesBook = !purchBook;
            }

            factureDummy_RU.visible(! factured);
            factureTaxCorrectionPurch_RU.visible(purchBook);
            factureTaxCorrectionSales_RU.visible(salesBook);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ShowSpecification</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            FormRun     formRun;
            Args        args = new Args();
            boolean     end  = false;

            super();

            if (!ledgerJournalTrans.parmLedgerDimension())
            {
                throw error("@SYS25989");
            }

            args.record(ledgerJournalTrans);

            switch (ledgerJournalTrans.AccountType)
            {
                case LedgerJournalACType::Cust :
                    formRun = new MenuFunction(menuitemDisplayStr(LedgerShowSpecLdgrJourTrnDaily),MenuItemType::Display).create(args);
                    break;

                case LedgerJournalACType::Vend :
                    formRun = new MenuFunction(menuitemDisplayStr(VendShowSpecifikation),MenuItemType::Display).create(args);
                    break;

                default:
                    end = true;
            }
            if (!end)
            {
                if (formRun)
                {
                    formRun.run();
                    formRun.wait();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxTotals</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            #Task

            super();
            ledgerJournalEngine.calculateTaxForCompleteJournal();
            LedgerJournalEngine::showTotalTaxes(ledgerJournalEngine);

            if (TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalTable.JournalType))
            {
                LedgerJournalTrans_ds.research(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Print_MenuButton</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            // <GTE><GIN>
            taxEngineLedgerJournalTransHeader   taxEngineLedgerJournalTransHeader;
            taxDocumentExtension_in             taxDocumentExtension;
            TaxDocument                         taxDocument;
            // </GTE></GIN>

            super();

            // <GTE><GIN>
            if (TaxSolutionScopeIntegrationUtil::isCompanyEnabled() && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                select firstOnly TableId, RecId from taxEngineLedgerJournalTransHeader
                    where taxEngineLedgerJournalTransHeader.JournalNum == ledgerJournalTrans.JournalNum
                        && taxEngineLedgerJournalTransHeader.Voucher    == ledgerJournalTrans.Voucher;

                taxDocument = TaxDocumentUtils::getTaxDocumentBySource(taxEngineLedgerJournalTransHeader.TableId, taxEngineLedgerJournalTransHeader.RecId);

                if (taxDocument)
                {
                    taxDocumentExtension = taxDocumentExtension_in::findByTaxDocument(taxDocument.TaxDocumentGuid);
                }

                if (ledgerJournalTrans.AccountType == LedgerJournalACType::Cust)
                {
                    GSTPayment_IN.enabled(LedgerJournalTrans::isCustomerPayment(ledgerJournalTrans) && ledgerJournalEngine.posted() && taxDocumentExtension.TaxInvReferenceType != GSTReference_IN::None);
                }
                else if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
                {
                    GSTPayment_IN.enabled(LedgerJournalTrans::isVendorPayment(ledgerJournalTrans) && ledgerJournalEngine.posted() && taxDocumentExtension.TaxInvReferenceType != GSTReference_IN::None);
                }
                else
                {
                    GSTPayment_IN.enabled(false);
                }
            }
            // </GTE></GIN>
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTransDailyTAccount</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;
            FormRun         formRun;
            MenuFunction    menuFunction;

            if (ledgerTAccountEnabled)
            {
                args = new Args();
                args.caller(element);

                menuFunction = new MenuFunction(menuitemDisplayStr(
                    LedgerJournalTransDailyTAccount),
                    MenuItemType::Display);
                if (menuFunction)
                {
                    formRun = menuFunction.create(args);
                    if (FormRun)
                    {
                        // Deletes current LedgerJournalTrans to release voucher number.
                        if (ledgerJournalTrans.RecId == 0)
                        {
                            ledgerJournalTrans_ds.delete();
                        }

                        formRun.run();
                        formRun.wait(true);
                    }
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DisplayJournalLines</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret;

            element.filterJournalLineErrors();

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FinancialDimension</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            journalFormTrans.enableDimensionButtonsActive(custVendPaymJournalFee);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AccountDimension</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.openAccountFinancialDimensionForm(ledgerJournalTrans, accountDimension.menuItemType(), accountDimension.menuItemName());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OffsetAccountDimension</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.openOffsetAccountFinancialDimensionForm(ledgerJournalTrans, offsetAccountDimension.menuItemType(), offsetAccountDimension.menuItemName());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PaymentFeeAccountDimension</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ledgerJournalEngine.openPaymFeeAccountFinancialDimensionForm(custVendPaymJournalFee, paymentFeeAccountDimension.menuItemType(), paymentFeeAccountDimension.menuItemName());

            custVendPaymJournalFee.write();
            custVendPaymJournalFee_ds.reread();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxTransSource</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            #Task
            FormRun taxTmpWorkTrans;
            try
            {
                if (!ledgerJournalTable.Posted)
                {
                    taxTmpWorkTrans = Tax::showTaxes(menuitemDisplayStr(TaxTmpWorkLedgerJournalTrnDaily), element.getShowTax(), ledgerJournalTrans, element);
                }
                else
                {
                    super();
                }
            }
            finally
            {
                if (TaxIntegrationUtils::isTaxIntegrationEnabledForJournalType(ledgerJournalTable.JournalType))
                {
                    if (taxTmpWorkTrans 
                        && taxTmpWorkTrans.name() == formStr(TaxTmpWorkTrans))
                    {
                        taxTmpWorkTrans.parmTaxTmpWorkTransFormHasInit(true);
                        LedgerJournalTrans_ds.research(true);
                    }
                    else
                    {
                        LedgerJournalTrans_ds.reread();
                        LedgerJournalTrans_ds.refresh();
                        element.task(#taskRefresh);
                    }
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxDocumentLauncher</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            this.parameters(classStr(TaxableDocumentDescriptorGeneralJournal));
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SettlementButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            LedgerJournalTrans localLedgerJournalTrans;

            localLedgerJournalTrans.data(ledgerJournalTrans);

            // <GIN>
            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                TaxWithholdUncommitted_IN::deleteForInvoice(
                    tableNum(LedgerJournalTable),
                    localLedgerJournalTrans.ledgerJournalTable().RecId,
                    localLedgerJournalTrans.Voucher,
                    localLedgerJournalTrans.Invoice);
            }
            // </GIN>

            super();

            element.settleTransactions();

            ledgerJournalTrans_ds.research(true);

            //recalculate balances
            ledgerJournalEngine.newJournalActive(ledgerJournalTable, true);

            overviewGrid.setFocus();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonSplitPosting</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // <GEEU>
            #ISOCountryRegionCodes
            boolean split = true;

            if (countryRegion_PL)
            {
                if (! ledgerJournalTrans.VatDueDate_W    ||
                            ! ledgerJournalTrans.vatNumJournal   ||
                            ! ledgerJournalTrans.Invoice         ||
                            ! ledgerJournalTrans.CustVendName_PL ||
                            ! ledgerJournalTrans.Addressing_PL)
                {
                    if (Box::okCancel("@GLS110095",DialogButton::Cancel) != DialogButton::Ok)
                    {
                        split = false;
                    }
                }
            }
            if (split)
            {
                super();
            }
            // </GEEU>
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DepositSlipButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            ledgerJournalTrans_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SaveVoucherTemplate</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Populates arguments and initiates the menu item action.
        /// </summary>
        void clicked()
        {
            // don't save to LedgerJournalTransVoucherTemplate if the row is not yet saved
            if (ledgerJournalTrans.RecId)
            {
                MenuFunction saveVoucherTemplateMenu = new MenuFunction(menuitemActionStr(LedgerJournalTransVoucherTemplateSave), MenuItemType::Action);

                Args args = new Args();
                args.record(ledgerJournalTrans);
                args.object(ledgerJournalEngine);

                saveVoucherTemplateMenu.run(args);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectVoucherTemplate</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Populates arguments and initiates the menu item action.
        /// </summary>
        void clicked()
        {
            Args            args;
            MenuFunction    loadVoucherTemplateMenu;

            loadVoucherTemplateMenu = new MenuFunction(menuitemActionStr(LedgerJournalTransVoucherTemplateSelect),MenuItemType::Action);
            args = new Args();
            args.record(ledgerJournalTrans);
            args.object(ledgerJournalEngine);

            loadVoucherTemplateMenu.run(args);
            element.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ErrorExist</Name>
				<Type>Image</Type>
				<Methods>
					<Method>
						<Name>toolTip</Name>
						<Source><![CDATA[
        public str toolTip()
        {
            LedgerPostingMessage ret;

            if (ledgerJournalTrans_DS.errorExist(ledgerJournalTrans))
            {
                ret = ledgerJournalTrans_DS.errorLog();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_Company</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            // Update the related segmented entry controls to ensure they are set to the correct company
            LedgerJournalTrans_AccountNum.setDataAreaId(this.text(), true);
            Group4_AccountNum.setDataAreaId(this.text(), true);

            return super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean ret;

            vatNumJournal.enabled(this.selection() == enum2int(LedgerJournalACType::Cust) || this.selection() == enum2int(LedgerJournalACType::Vend));

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        /// <summary>
        /// Removes the Project type when project operation integration feature is turned on as we need this data
        /// to flow from CE.
        /// </summary>
        public void enter()
        {
            super();
            
            if (element.enableProjectOperationsIntegrationFeature)
            {
                this.delete(enum2Str(LedgerJournalACType::Project));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AccountNum</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.accountNumLookup(
                ledgerJournalTrans_AccountNum,
                ledgerJournalTrans,
                ledgerJournalTrans.OffsetAccountType,
                ledgerJournalTrans.parmOffsetAccount()
                // <GEEPL>
                , ledgerJournalTrans_Asset
                // </GEEPL>
                ))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            if (_segment.parmDimensionAttribute().RecId == mainAccountDimAttr)
            {
                previousMainAccountId = currentMainAccountId;
            }

            super(_segment);

            currentMainAccountId = ledgerJournalEngine.onSegmentChangedForPrimaryAccount(ledgerJournalTrans_AccountNum, _segment, currentMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.accountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AmountCurDebit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        void gotFocus()
        {
            super();

            element.setDebCredProposal(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AmountCurCredit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        void gotFocus()
        {
            super();

            element.setDebCredProposal(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetCompany</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            LedgerJournalTrans_OffsetAccount.setDataAreaId(this.text(), true);
            Group4_OffsetAccount.setDataAreaId(this.text(), true);

            return super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        /// <summary>
        /// Removes the Project type when project operation integration feature is turned on as we need this data
        /// to flow from CE.
        /// </summary>
        public void enter()
        {
            super();
            
            if (element.enableProjectOperationsIntegrationFeature)
            {
                this.delete(enum2Str(LedgerJournalACType::Project));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_OffsetAccount</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            int currentSegmentIndex = LedgerJournalTrans_OffsetAccount.getCurrentSegmentIndex();

            if ((ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Ledger &&
                LedgerJournalTrans_OffsetAccount.getDimensionAttributeByControlIndex(currentSegmentIndex) != DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount)) ||
                !ledgerJournalEngine.offsetAccountNumLookUp(LedgerJournalTrans_OffsetAccount, ledgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentOffsetMainAccountId = ledgerJournalEngine.onSegmentChangedForOffsetAccount(LedgerJournalTrans_OffsetAccount, _segment, currentOffsetMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.offsetAccountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>editReasonCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Displays a filtered version of the Reasons lookup form to the user based on the <c>AccountType</c> and the <c>OffsetAccountType</c>.
        /// </summary>
        /// <remarks>
        /// This method will be called when the user open the reason code lookup form.
        /// </remarks>
        public void lookup()
        {
            LedgerJournalACType   offsetAccountType;
            LedgerJournalACType   accountType;
            boolean               useOffsetAccount;

            useOffsetAccount = ledgerJournalTrans.parmOffsetLedgerDimension() ? true : false;

            offsetAccountType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans,OffsetAccountType)).getValue();
            accountType = ledgerJournalTrans_ds.object(fieldNum(LedgerJournalTrans,AccountType)).getValue();
            ReasonFormTable::reasonCodeLookup(this,offsetAccountType,accountType,true,useOffsetAccount);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>fieldExchRate</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            LedgerJournalEngine::setProjCostSalesPrice(ledgerJournalTrans, ledgerJournalTrans_Project, ledgerJournalEngine.parmSalesPrice(), false, true);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WithIGSTPayment_WithIGSTPayment</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                element.setWouldYouClaimRefund_IN();
                LedgerJournalTransTaxExtensionIN.WouldYouClaimRefund = LedgerJournalTransTaxExtensionIN.WithIGSTPayment;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabCompany</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            LedgerJournalTrans_AccountNum.setDataAreaId(this.text(), true);
            Group4_AccountNum.setDataAreaId(this.text(), true);
            boolean ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabOffsetCompany</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            LedgerJournalTrans_OffsetAccount.setDataAreaId(this.text(), true);
            Group4_OffsetAccount.setDataAreaId(this.text(), true);
            boolean ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Due</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();

            priorDueDate = this.dateValue();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>VatNumJournal</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        void jumpRef()
        {
            if (TaxVATNumTable::taxVATNumTableEnabled())
            {
                TaxVATNumTable::jumpRefVATNum(ledgerJournalTrans, element);
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CashDiscBaseDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            ledgerJournalEngine.cashDiscBaseDateModified(ledgerJournalTrans);
            ledgerJournalEngine.cashDiscCodeModified(ledgerJournalTrans, ledgerJournalTrans_Asset);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OrigPaymReference_RU</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            custVendTransPaymRef_RU = LedgerJournalTrans_W::lookupPrePayment(this, OrigPaymentContragentType_RU.selection(), true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                if (custVendTransPaymRef_RU)
                {
                    ledgerJournalTrans_W.initPrePaymRef(custVendTransPaymRef_RU);
                    AmountCur paymAmount = abs(custVendTransPaymRef_RU.AmountCur);
                    AmountCur taxAmount = abs(LedgerJournalTrans.AmountCurDebit + LedgerJournalTrans.AmountCurCredit);

                    if (paymAmount != taxAmount)
                    {
                        warning(strFmt("@Facture:OrigPaym_Warning", paymAmount, taxAmount));
                    }

                    custVendTransPaymRef_RU = null;
                }
                else
                {
                    ledgerJournalTrans_W.clearPrePaymRef();
                }

                LedgerJournalTrans_W_ds.refresh();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransTaxInformationPaymentFeeButton_IN</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            Args parm = new Args();
            
            parm.record(LedgerJournalTrans::findRecId(CustVendPaymJournalFee.feeTransRecId, false));
            parm.caller(element);
            new MenuFunction(menuitemdisplaystr(TransTaxInformation), MenuItemType::Display).run(parm);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustPaymJournalFee_CustAccount</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.paymJournalFeeOpenLookup(this, ledgerJournalTrans, custVendPaymJournalFee))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            RecId currentPaymentFeeMainAccountId;

            super(_segment);

            currentPaymentFeeMainAccountId = 0;
            ledgerJournalEngine.onSegmentChangedForPrimaryAccount(CustPaymJournalFee_CustAccount, _segment, currentPaymentFeeMainAccountId, LedgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.paymJournalFeeCheckUseCustomLookup(custVendPaymJournalFee);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Group4_AccountNum</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            if (_segment.parmDimensionAttribute().RecId == mainAccountDimAttr)
            {
                previousMainAccountId = currentMainAccountId;
            }

            super(_segment);

            currentMainAccountId = ledgerJournalEngine.onSegmentChangedForPrimaryAccount(Group4_AccountNum, _segment, currentMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.accountNumLookup(Group4_AccountNum, LedgerJournalTrans))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.accountNumCheckUseCustomLookup(ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Group4_OffsetAccount</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (!ledgerJournalEngine.offsetAccountNumLookUp(Group4_OffsetAccount, LedgerJournalTrans, LedgerJournalTrans.OffsetAccountType))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            currentOffsetMainAccountId = ledgerJournalEngine.onSegmentChangedForOffsetAccount(Group4_OffsetAccount, _segment, currentOffsetMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return ledgerJournalEngine.offsetAccountNumCheckUseCustomLookup(ledgerJournalTrans, LedgerJournalTrans.OffsetAccountType);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_AssetTransType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret;

            ret = super();

            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                if (ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
                {
                    if (LedgerJournalTable::find(ledgerJournalTrans.JournalNum).CurrentOperationsTax != CurrentOperationsTax::Tax)
                    {
                        //"Bonus depreciation is applicable only for posting layer - Tax"
                        if (ledgerJournalTrans_Asset.TransType == AssetTransTypeJournal::BonusDepreciation)
                        {
                            return checkFailed(strFmt("@GLS5978", "@SYS28668"));
                        }
                    }
                    if (!AssetParameters::find().DepreciationIncomeTaxAct_IN)
                    {
                        //"Bonus depreciation cannot be selected for other than Income tax Act depreciation"
                        return checkFailed("@GLS63878");
                    }
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerJournalTrans_Asset_AssetGroup_IN</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if (ledgerJournalTrans.AccountType == LedgerJournalACType::FixedAssets)
            {
                AssetTable::fixedAssetGroupLookup_IN(this,ledgerJournalTrans.parmAccount());
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RemittanceTab</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            // Need to enable\Disable the Manage Address button depending
            // on an account been selected or not.
            if (ledgerJournalTrans.parmAccount() == '' || ledgerJournalTrans.AccountType != LedgerJournalACType::Vend)
            {
                remittance.allowEdit(false);
                remittance_ManageAddress.enabled(false);
                addAddress.enabled(false);
            }
            else
            {
                remittance.allowEdit(true);
                remittance_ManageAddress.enabled(true);
                addAddress.enabled(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Subcontractor_Subcontractor</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            VendAccount vendAccount;
            VendAccount offsetVendAccount;

            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend
                && ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Vend)
            {
                vendAccount = VendTable::findByLedgerDimension(ledgerJournalTrans.LedgerDimension).AccountNum;
                offsetVendAccount = VendTable::findByLedgerDimension(ledgerJournalTrans.OffsetLedgerDimension).AccountNum;

                if (VendInfoZakat_SA::findByVendAccount(vendAccount).IsSubcontractor
                    && VendInfoZakat_SA::findByVendAccount(offsetVendAccount).IsSubcontractor)
                {
                    VendInfoZakat_SA::lookupSubContractor(this, vendAccount,offsetVendAccount);
                }
                else
                {
                    super();
                }
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans</Name>
			<Table>LedgerJournalTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AcknowledgementDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Addressing_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AnnouncementNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Attachments_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAgreementExt_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankBillOfExchangeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankTransTypeCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeDepositTransRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankClientDocumentTypeId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCommAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyDealCourse_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyTransferLog_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankNegInstRecipientName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPaymentRegistrationNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPrintAccountNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPromissoryNoteNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconcileAccountAtPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRespWorkerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankSpecAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransSummarizationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankVendAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetSourceLedgerEntryUnposted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Cancel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashReceiptNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIUUID_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommProfileType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsignmentNoteNum_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectionType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAuthTransRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymDeliveryNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymSectionNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymTransNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustFactureAutoCreate_RU</DataField>
					<Enabled>No</Enabled>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerTaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsDuty_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsTariffDirection_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendAccount_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendName_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendNegInstProtestReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebitCurrencyCode_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DelayTaxCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Due</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ElectronicPaymentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorCodePayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseRecordType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseTariffCodes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Exempt_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FBSpedEcfDerexClasificationCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FinTag</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignBankFee_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GSTHSTTaxType_CA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GTAServiceCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HSNCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImportDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByPhone_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByTelex_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntentLetterId_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraComVATDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invisible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceIdentification_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceSeries_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ITCCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimensionName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalDlvDate_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucherType_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Listcode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRCCGeneralLedgerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPrintTxtOnCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRRefPaymID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NatureOfAssessee_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NegInstId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NoEdit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NonBusinessUsagePercentage_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NonRecoverablePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffSessionId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetFinTag</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetPostingProfile_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetTxt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OldLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionDate_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionID_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentPriority_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSequenceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymPurpose_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlafondDate_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PoolRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProvisionalAssessment_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchIdRange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchLedgerPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashPayTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCopyReverse_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDateComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitteeCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonCard_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonName_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesOrderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTaxFormTypes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceAccountingCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipBlockedForManualEntryCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SoftwareDeclReceived_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Fields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBase_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxDirectionControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSetoffVoucher_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAlternateVendorAcct_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCode_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transfer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferCurrency_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredOn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Triangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseOriginalDocumentAsFacture_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VatDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATGoodsType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOnPayment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOperationCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATPaymRefRecId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATTaxAgentVendAccount_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceDeclaration_IS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorTaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorVATDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymFeeGroup_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher_CN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<CounterField>LineNum</CounterField>
			<Index>NumVoucherIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustVendPaymJournalFee</Name>
			<Table>CustVendPaymJournalFee</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FeeCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FeeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>feeTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FeeValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPaymFeeCoveredByVendor_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalACType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxDirection_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_Project</Name>
			<Table>LedgerJournalTrans_Project</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjPriceGroupID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesCurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupSales</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupSales</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_Asset</Name>
			<Table>LedgerJournalTrans_Asset</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssetDocumentEntry_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BookId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetPostingStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsumptionQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DepreciationStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DepreciationTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentType_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAdjustedDepreciation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsPriorYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LowValuePoolType_AU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LVPTransferId_AU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefAssetID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReserveTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevaluationAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevaluationTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SaleFactor_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransZakat_SA</Name>
			<Table>LedgerJournalTransZakat_SA</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssetGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContractNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Subcontractor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransBankLC</Name>
			<Table>LedgerJournalTransBankLC</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BankLC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModuleType_SA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>UpdatePLAEnquiry</Name>
			<Table>UpdatePLAEnquiry_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PLALedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxComponentTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransRecId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransTaxExtensionIN</Name>
			<Table>LedgerJournalTransTaxExtensionIN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssessableValueTransactionCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CENVATCreditAvailed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsDuty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectSettlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExcludedGSTAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceIdentification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalInclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProvisionalAssessment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefPurchInvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefPurchInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefSalesInvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefSalesInvoiceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceEventGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInventVATCommodityCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSetoffVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAcknowledgementNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCountryRegionToRemittance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdNatureOfRemittance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WithIGSTPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WouldYouClaimRefund</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_RCash</Name>
			<Table>LedgerJournalTrans_RCash</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CashCollBagNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashCollBankContributor_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashCollCreditAccountNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashCollDebitAccountNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashCollStoreId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDocId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashReceiptNumLV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashSourceCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashSourceDescription_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExcludeExchAdj_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LvCashReceiptTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ManualRounding_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RoundOffCashAmount_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransRegDate_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransStatus</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>Tax1099BoxDetail</Name>
			<Table>Tax1099BoxDetail</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isDeleted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isModified</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099AddressorLegalDesc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099BuyersTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099DateOfClosing</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099PropertyOrServices</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateTaxID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateTaxWithheld</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099TaxYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099TradeOrBusiness</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TaxServiceTariff</Name>
			<Table>TaxServiceTariff</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceTariffNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<OnlyFetchActive>Yes</OnlyFetchActive>
			<InsertAtEnd>No</InsertAtEnd>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransExtensionTH</Name>
			<Table>LedgerJournalTransExtensionTH</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BranchNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CertificateDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CertificateNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReceiptDate</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentGrossUpOtherDetail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentGrossUpType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RealVendName</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAgent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoiceReceiptDate</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxNatureOfAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRegNum</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_ProjectTaxExtensionIN</Name>
			<Table>LedgerJournalTrans_ProjectTaxExtensionIN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssessableValueTransactionCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AssessableValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CompanyLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CustomsTariffCodeTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_DirectSettlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseRecordType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseTariffCodes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ExciseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SalesTaxFormTypes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ServiceCodeTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TaxInventVATCommodityCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans_Project</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans_Project</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_W</Name>
			<Table>LedgerJournalTrans_W</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CashRegisterTerminal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryPurpose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIBeneficiaryRetains_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIFinancialSystem_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestBelongsDerivedFinOp_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestCashedInTheCurrentPeriod_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestLossAmount_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestNominalAmount_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIInterestRealAmount_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChargeBearer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EPaymCFDIConfirmNumber_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LocalInstrument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefPurchInvoiceDate_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefPurchInvoiceId_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefSalesInvoiceDate_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefSalesInvoiceId_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WithholdingTypeCode_MX</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTrans_RAsset</Name>
			<Table>LedgerJournalTrans_RAsset</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetModel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetPostingStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CanDisposal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DepreciationBonusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeprPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StornoRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ToFromRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTransTaxExtension</Name>
			<Table>LedgerJournalTransTaxExtension</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccrueSalesTaxType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverrideSalesTax</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInCostPrice</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumTableType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorChargedSalesTax</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS3096</Caption>
		<DataSource xmlns="">LedgerJournalTrans</DataSource>
		<Mode xmlns="">Edit</Mode>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PostJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>LedgerJourPostLJTransDaily</MenuItemName>
								<MenuItemType>Action</MenuItemType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PostJournalBatch</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>LedgerJourPostLJTransDaily</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<Text>@GeneralLedger:LedgerJournalPostInBatch</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>ButtonCheckJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>92035011</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CheckJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourChkLedgerJourTransDaily</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CheckVoucher</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourChk1LedgerJourTransDaily</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SimulatePosting</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerJournalSimPostDaily</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS53323</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ButtonGeneralJournal</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<CopyCallerQuery>No</CopyCallerQuery>
								<MenuItemName>LedgerJournalTable3</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>ButtonCourse</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>153391685</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ButtonReportAsReady</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS22220</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ButtonApprove</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS16449</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ButtonReject</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS22331</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<SaveRecord>No</SaveRecord>
								<Text>@SYS2453</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>TaxWithhold_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>214748359</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>WithholdTax_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>TaxWithholdTmpWorkTrans_IN</MenuItemName>
										<Text>@SYS33817</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TaxWithholdTrans_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>TaxWithholdTrans_IN</MenuItemName>
										<Text>@SYS33817</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TaxWitholdChallan_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>TaxWithholdChallan_IN</MenuItemName>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS33817</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>PeriodicJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>LedgerBasic</ConfigurationKey>
								<ElementPosition>245426696</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>ButtonCopyPeriodic</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Update</NeededPermission>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Command>Save</Command>
										<Text>@SYS12752</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SaveJournal</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJournalSave</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS3868</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Functions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>276105033</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalPostTransfer</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourPostTrLJTransDaily</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalTransTxt</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>195225785</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalTransTxt</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ButtonDeleteTransactions</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>234270942</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJourDelTransLJTransDaily</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ButtonGetTransactions</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>273316099</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJourGetTransLJTransDaily</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>buttonFurtherPosting</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>312361256</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJournalFurtherPosting</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerInAccountStatementTrans</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerInAccountStatementTrans</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerInAccountStatementTotal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>LedgerInAccountStatementTotal</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalTransDateSet_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>546632198</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalTransDateSet_RU</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>TradeBLWIGroup</Name>
										<ConfigurationKey>ForeignTrade</ConfigurationKey>
										<CountryRegionCodes>BE</CountryRegionCodes>
										<ElementPosition>624722512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TradeBLWIChangeCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>663767669</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>TradeBLWIChangeLedgerJourTransDaily</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>CustVendCreditInvoicingGroup</Name>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<CountryRegionCodes>ES,SE</CountryRegionCodes>
										<ElementPosition>702812826</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ButtonCustVendCreditInvoicing</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>741857983</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>CustVendCreditInvoicing</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>LedgerTax_IN</Name>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<Type>ButtonSeparator</Type>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerTaxJournal_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>787410667</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerTaxJournal_IN</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerTaxWithholdJournal_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>832963351</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerTaxWithholdJournal_IN</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>Separator_IN</Name>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>878516037</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ChallanInformation_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1059797124</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ChallanInformation_IN</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>UpdatePLA_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1241078211</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>UpdatePLA_IN</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>FactureEditLinesSeparator_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>1422359298</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>FactureEditLinesTaxCorrectionSales_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1482786327</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>FactureEditLinesTaxCorrectionSales_RU</MenuItemName>
										<Text>@GLS101510</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>FactureEditLinesTaxCorrectionPurch_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1512999841</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>FactureEditLinesTaxCorrectionPurch_RU</MenuItemName>
										<Text>@GLS101386</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>CzSeparator_TaxDocument</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>CzCustVendAdvanceInvoices</ConfigurationKey>
										<CountryRegionCodes>CZ</CountryRegionCodes>
										<ElementPosition>1543213356</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CzTaxDocumentCreate_Vend</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>CzCustVendAdvanceInvoices</ConfigurationKey>
										<ElementPosition>1784921472</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>CzTaxDocumentCreate_Vend</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<Text>@GLS108299</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CancelCashDueAnnouncement_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1966202559</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>CancelCashDueAnnouncement_RU</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ExchRateCalcHU</Name>
										<ElementPosition>2028178999</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJournalExchRateHU</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CzTaxDocumentCreate_Cust</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>CzCustVendAdvanceInvoices</ConfigurationKey>
										<ElementPosition>2056843102</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>CzTaxDocumentCreate_Cust</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<Text>@GLS108299</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TaxGSTSummaryDetails_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>TaxGSTSummaryDetails_IN</MenuItemName>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS10340</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>FixedAssets</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Asset</ConfigurationKey>
								<ElementPosition>306783370</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalGetAssetTrans</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalGetAssetTrans</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AssetCreateJournal_Acquisition</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>AssetCreateJournal_Acquisition</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AssetCreateJournal_Depreciation</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>AssetCreateJournal_Depreciation</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AssetCreateJournal_BonusDepreciation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>AssetCreateJournal_Bonus</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AssetConsumptionProposal</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>AssetConsumptionProposal</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AssetCreateJournal_Revaluation</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>AssetCreateJournal_Revaluation</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AssetCreateJournal_TransferCapital</Name>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>AssetCreateJournal_TransferCapital</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AssetCreateJournal_Extraordinary</Name>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>AssetCreateJournal_Extraordinary</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS19633</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Inquiries</Name>
								<ElementPosition>337461707</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ShowSpecification</Name>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>495573147</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@sys53650</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ButtonBalanceControl</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>660764196</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerBalanceControl</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PaymentControl</Name>
										<ElementPosition>825955245</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerPaymentControl</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>TaxTotals</Name>
										<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
										<ElementPosition>991146294</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS62141</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonSeparatorControl">
										<Name>Separator3</Name>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1321528392</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ButtonSeparator</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PLAVoucher_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1486719441</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>UpdatePLAEnquiry</DataSource>
										<MenuItemName>PLAVoucher_IN</MenuItemName>
										<SaveRecord>No</SaveRecord>
										<Text>@GLS6273</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>FactureDummy_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>1651910490</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@GLS102575</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>FactureTaxCorrectionPurch_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1817101539</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>FactureJournalTaxCorrectionPurch_RU</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>FactureTaxCorrectionSales_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1982292588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>FactureJournalTaxCorrectionSales_RU</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>TransactionReversalFailures</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerJournalTransactionReversalFailures</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@GeneralLedger:TransactionReversalExecutionDetailHistory</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS3850</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Print_MenuButton</Name>
								<ElementPosition>368140044</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>JounalDetails</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournal</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<ShowShortCut>No</ShowShortCut>
										<Text>@SYS24010</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerVoucherReport</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>894784852</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>LedgerVoucher_CN</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<Text>@SYS86923</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>Movements</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalAccountMovement</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerTransPerJournal</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerTransPerJournal</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CompensationLetter</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1934972243</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>CustVendCompensationReport</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CashDueAnnouncement_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>CashDueAnnouncement_RU</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalPreview</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2102744403</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalPreview</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>LedgerJournalVoucherPreview</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2125114024</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>LedgerJournalVoucherPreview</MenuItemName>
										<MenuItemType>Output</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CashRegisterReceipt_W</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>CashRegisterReceiptPrint_W</MenuItemName>
										<MenuItemType>Action</MenuItemType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>GSTPayment_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataSource>LedgerJournalTrans</DataSource>
										<MenuItemName>TaxGSTPayment_IN</MenuItemName>
										<MenuItemType>Output</MenuItemType>
										<Text>@TaxGST:GSTPayment_IN</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS920</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>LedgerJournalTransDailyTAccount</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>JP</CountryRegionCodes>
								<ElementPosition>398818386</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>LedgerJournalTransDailyTAccount</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>DefermentSchedule_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>429496728</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>DefermentScheduleTrans_IN</MenuItemName>
								<Text>@GLS5212</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDropDialogButtonControl">
								<Name>TransactionReversalDialog</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>DropDialogButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>LedgerJournalTrans</DataSource>
								<MenuItemName>LedgerJournalTransTransactionReversalDialog</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@GeneralLedger:TransactionReversalJournalReversalCaption</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>Click here</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>SelectorGroup</Name>
				<ElementPosition>1204124758</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>DisplayJournalLines</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<EnumType>LedgerJournalLinesDisplayOption</EnumType>
						<Selection>255</Selection>
						<ViewEditMode>Edit</ViewEditMode>
						<Items />
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<LeftMargin>10</LeftMargin>
				<LeftMarginMode>Fixed</LeftMarginMode>
				<TopMargin>10</TopMargin>
				<TopMarginMode>Fixed</TopMarginMode>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>OverViewTab</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>OverviewActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>OverviewButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>NewLine</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>New</Command>
												<Text>@SYS2055</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>DeleteLine</Name>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>DeleteRecord</Command>
												<Text>@SYS10308</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>ButtonVoucherTrans</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>330382098</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<DataSource>LedgerJournalTrans</DataSource>
												<MenuItemName>LedgerTransVoucher1</MenuItemName>
												<SaveRecord>No</SaveRecord>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>FinancialDimension</Name>
												<ElementPosition>122713348</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>AccountDimension</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>LedgerJourTransDimLedgerJourTransDaily</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>OffsetAccountDimension</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1288490187</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>LedgerJourTrOffDimLedgerJourTransDay</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>PaymentFeeAccountDimension</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1717986916</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<DataSource>CustVendPaymJournalFee</DataSource>
														<MenuItemName>LedgerJourTransPayFeeDimLedgerJourTrnDay</MenuItemName>
													</AxFormControl>
												</Controls>
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS138491</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TaxTransSource</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>184070022</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<MenuItemName>TaxTransSourceLedgerJournalTrnDaily</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TaxDocumentLauncher</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>MenuFunctionButton</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>TaxDocumentLauncher</MenuItemName>
												<MenuItemType>Action</MenuItemType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>GAFInformation</Name>
												<Type>MenuFunctionButton</Type>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>TaxGSTEditTaxInformation_MY</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>LineFunctions</Name>
												<Type>MenuButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>SettlementButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>78090314</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@CashManagement:SettleTransactions</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>ButtonSplitPosting</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>117135471</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<DataSource>LedgerJournalTrans</DataSource>
														<MenuItemName>LedgerJournalSplitPosting</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>DepositSlipButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>156180628</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<DataSource>LedgerJournalTrans</DataSource>
														<MenuItemName>BankDepositSlip</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>LedgerJournalTransAccrual</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>429496727</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>LedgerJournalTransAccrual</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>SaveVoucherTemplate</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>507587041</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>LedgerJournalTransVoucherTemplateSave</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>SelectVoucherTemplate</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>468541884</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>LedgerJournalTransVoucherTemplateSelect</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>BudgetCheckResultsInquiry</Name>
														<ElementPosition>1156337343</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataSource>LedgerJournalTrans</DataSource>
														<MenuItemName>BudgetCheckResults</MenuItemName>
													</AxFormControl>
												</Controls>
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS10340</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>TransTaxInformation</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>MenuFunctionButton</Type>
												<FormControlExtension
													i:nil="true" />
												<DataSource>LedgerJournalTrans</DataSource>
												<MenuItemName>TransTaxInformation</MenuItemName>
												<NeedsRecord>Yes</NeedsRecord>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>TaxInformation</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>MenuButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>TransTaxInformation_Cost</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>MenuFunctionButton</Type>
														<Visible>No</Visible>
														<FormControlExtension
															i:nil="true" />
														<DataSource>LedgerJournalTrans</DataSource>
														<MenuItemName>TransTaxInformation</MenuItemName>
														<NeedsRecord>Yes</NeedsRecord>
														<Text>@SYS6893</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>TransTaxInformation_Invoice</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>MenuFunctionButton</Type>
														<Visible>No</Visible>
														<FormControlExtension
															i:nil="true" />
														<DataSource>LedgerJournalTrans_Project</DataSource>
														<MenuItemName>TransTaxInformation</MenuItemName>
														<NeedsRecord>Yes</NeedsRecord>
														<Text>@Proj:Invoice</Text>
													</AxFormControl>
												</Controls>
												<ButtonDisplay>TextOnly</ButtonDisplay>
												<Text>@SYS33614</Text>
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>overviewGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>ErrorExist</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>44739242</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Height>14</Height>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<Width>14</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ErrorExist</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Imagemode>SizeToFit</Imagemode>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_TransDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>67108863</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_AcknowledgementDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>89478484</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AcknowledgementDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>111848105</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_LedgerVoucherType_CN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>134217726</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTrans_LedgerVoucherType_CN_Id</Name>
												<DataRelationPath>LedgerVoucherType_CN</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerVoucherType_CN</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher_CN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>CN</CountryRegionCodes>
										<ElementPosition>156587347</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher_CN</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>LedgerJournalTrans_Attachments_CN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>CN</CountryRegionCodes>
										<ElementPosition>178956970</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Attachments_CN</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Company</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>153391688</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Company</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_AccountType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>805306362</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>939524089</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>SegmentedEntry</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_FinTag</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<PreviewPartRef>FinTagPreviewPart</PreviewPartRef>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<HideIfEmpty>No</HideIfEmpty>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@FinTag:FinTag_Label</Label>
										<ReferenceField>FinTag</ReferenceField>
										<ReplacementFieldGroup>DisplayValue</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Txt</Name>
										<ElementPosition>1073741816</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_AmountCurDebit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1207959543</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurDebit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_AmountCurCredit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1342177270</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurCredit</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetCompany</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>89478484</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetCompany</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_OffsetType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1476394997</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>LedgerJournalTrans_OffsetAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612724</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>SegmentedEntry</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_OffsetFinTag</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<PreviewPartRef>FinTagPreviewPart</PreviewPartRef>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<HideIfEmpty>No</HideIfEmpty>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@FinTag:FinTag_Journal_ColHead_OffsetFinTags</Label>
										<ReferenceField>OffsetFinTag</ReferenceField>
										<ReplacementFieldGroup>DisplayValue</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetTxt</Name>
										<ElementPosition>223696210</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetTxt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_CurrencyCode</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_ExchRate</Name>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Grid_TaxItemGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Grid_TaxGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Grid_OverrideSalesTax</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OverrideSalesTax</DataField>
										<DataSource>LedgerJournalTransTaxExtension</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WithHoldingTax_TaxWithholdGroup</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxWithholdGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>LedgerJournalTrans_Grid_ReleaseDate</Name>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReleaseDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_ReverseEntry</Name>
										<ElementPosition>1879048178</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>ReverseEntry</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_ReverseDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2013265905</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReverseDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CashDueAnnouncementNum_RU</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2147418110</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AnnouncementNum_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
								<VisibleRows>8</VisibleRows>
								<VisibleRowsMode>Fixed</VisibleRowsMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BottomGroup</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Top>0</Top>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AccountName</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>AccountName</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>OffsetAccountName</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>OffsetAccountName</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>taxAmountJournal1</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>taxAmountJournal</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS128996</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>correctedTaxAmount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>correctedTaxAmount</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS128972</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTransTaxExtension_AccrueSalesTaxType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccrueSalesTaxType</DataField>
										<DataSource>LedgerJournalTransTaxExtension</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTransTaxExtension_VendorChargedSalesTax</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>VendorChargedSalesTax</DataField>
										<DataSource>LedgerJournalTransTaxExtension</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>InvoiceIdentification_IN</Name>
										<HelpText>@SYS28223</HelpText>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceIdentification</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<ColumnsMode>Fill</ColumnsMode>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SYS6188</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GeneralTab</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>IdentificationGroup</Name>
								<ElementPosition>357913940</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_FBSpedEcfDerexClasificationCode_BR</Name>
										<HelpText>@SpedECFLayout4:FBSpedEcfDerexClassificationHelpText</HelpText>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<HideIfEmpty>No</HideIfEmpty>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SpedECFLayout4:FBSpedEcfDerexClassificationTable</Label>
										<ReferenceField>FBSpedEcfDerexClasificationCode_BR</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_Voucher_CN1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>CN</CountryRegionCodes>
										<ElementPosition>1342177278</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher_CN</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Qty</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_InvoiceIdentification_IN</Name>
										<HelpText>@SYS28223</HelpText>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceIdentification</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Caption>@SYS5711</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Reason</Name>
								<ElementPosition>894784850</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editReasonCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReasonCode</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editReasonComment</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReasonComment</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS86426</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Currency</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CurrencyCode</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Currency_Triangulation</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Triangulation</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>fieldExchRate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>fieldExchRateSecond</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editExchRateSecond</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Currency_AssessableValue_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2102744403</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AssessableValueTransactionCurrency</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Currency_MaximumRetailPrice_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2125114024</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MaximumRetailPrice</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>crossrate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>crossrate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS53164</Label>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>exchRateTxt</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>exchRateTxt</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<DisplayLength>15</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SYS333999</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ReportingCurrency</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReportingfieldExchRate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReportingCurrencyExchRate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReportingfieldExchRateSecond</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Manual</NeededPermission>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editReportingCurrencyExchRateSecond</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReportingCrossrate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>reportingCurrencyCrossrate</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS53164</Label>
										<MinNoOfDecimals>4</MinNoOfDecimals>
										<MinNoOfDecimalsMode>Fixed</MinNoOfDecimalsMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReportingExchRateTxt</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>exchRateTxtForReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<DisplayLength>15</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@GeneralLedger:ReportingCurrency</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax</Name>
								<ElementPosition>715827880</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxItemGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>OverrideSalesTax</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OverrideSalesTax</DataField>
										<DataSource>LedgerJournalTransTaxExtension</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TaxCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_TaxDirectionControl</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxDirectionControl</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_VatDueDate_W</Name>
										<ElementPosition>1687308579</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VatDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_IntraComVATDueDate_W</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransDaily_LedgerJournalTrans_IntraComVATDueDate_W</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntraComVATDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxAmountJournal</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
										<ElementPosition>1891830831</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>TaxAmountJournal</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_TaxInCostPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxInCostPrice</DataField>
										<DataSource>LedgerJournalTransTaxExtension</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_TaxBase_W</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1994091957</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxBase_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DirectTax_TaxWithholdCode_IN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxWithholdCode</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>GSTHSTTaxType_CA_GSTHSTTaxType_CA</Name>
										<CountryRegionCodes>CA</CountryRegionCodes>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>GSTHSTTaxType_CA</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WithHoldingTax_TaxWithholdGroup1</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxWithholdGroup</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>WithHoldingTax_TaxWithholdCalculate_TH</Name>
										<CountryRegionCodes>TH,SA</CountryRegionCodes>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxWithholdCalculate_TH</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>WithHoldingTax_TaxWithholdItemGroupHeading_TH</Name>
										<CountryRegionCodes>TH,SA</CountryRegionCodes>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>WithHoldingTax_TaxWithholdItemGroupHeading_TH_TaxWithholdItemGroup1</Name>
												<DataRelationPath>TaxWithholdItemGroupHeading_TH</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>TaxWithholdItemGroupHeading_TH</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WithHoldingTax_TDSGroup_IN</Name>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1968526675</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TDSGroup</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WithHoldingTax_TCSGroup_IN</Name>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>2058005160</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TCSGroup</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS333961</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WithIGSTPayment</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>WithIGSTPayment_WithIGSTPayment</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>WithIGSTPayment</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>WithIGSTPayment</DataGroup>
								<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WouldYouClaimRefund</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>WouldYouClaimRefund_WouldYouClaimRefund</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>WouldYouClaimRefund</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>WouldYouClaimRefund</DataGroup>
								<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LegalEntityGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TabCompany</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>153391688</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Company</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TabOffsetCompany</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>89478484</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetCompany</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@GeneralLedger:LegalEntity</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Posting</Name>
								<ElementPosition>1789569700</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>PostingRelease_ReleaseDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReleaseDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ReversingGroup_ReverseEntry</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReverseEntry</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ReversingGroup_ReverseDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReverseDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_Transfer</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Transfer</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS334010</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Agreement_RU</Name>
								<CountryRegionCodes>RU</CountryRegionCodes>
								<ElementPosition>536870910</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_AgreementCompany_RU</Name>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>824480326</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AgreementCompany_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_AccountAgreementId_RU</Name>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>1265481432</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountAgreementId_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>accountAgreementDocumentTitle_RU</Name>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>1706482538</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>accountAgreementDocumentTitle_RU</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetAgreementCompany_RU</Name>
										<ElementPosition>704643069</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAgreementCompany_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetAccountAgreementId_RU</Name>
										<ElementPosition>1185589928</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetAccountAgreementId_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>offsetAccountAgreementDocumentTitle_RU</Name>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<ElementPosition>1666536787</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>offsetAccountAgreementDocumentTitle_RU</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@GEE15365</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DirectTax_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>displayTDSGroup_IN</Name>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayTDSGroupForWHTTaxJournal_IN</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@GLS5362</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>displayTCSGroup_IN</Name>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayTCSGroupForWHTTaxJournal_IN</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@GLS5363</Label>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TaxWithholdCertificate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>TH</CountryRegionCodes>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxWithholdCertificate_CertificateNumber</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CertificateNumber</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>TaxWithholdCertificate_CertificateDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CertificateDate</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Certificate</DataGroup>
								<DataSource>LedgerJournalTransExtensionTH</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProvisionalAssessment_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProvisionalAssessment_IN_ProvisionalAssessment</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProvisionalAssessment</DataField>
										<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@PDS933</Caption>
								<DataGroup>ProvisionalAssessment</DataGroup>
								<DataSource>LedgerJournalTransTaxExtensionIN</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>InvoiceTab</Name>
						<ElementPosition>1811939326</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PostingProfileGroup</Name>
								<ElementPosition>429496728</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PostingProfile</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PostingProfile</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTrans_SettleVoucher</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettleVoucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_OffsetPostingProfile_RU</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>OffsetPostingProfile_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS12919</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InvoiceGroup</Name>
								<ElementPosition>644245092</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Invoice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Due</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Due</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Payment</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Payment</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PaymId</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymId</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatNumJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VATNumJournal</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InvoiceGroup_EnterpriseNumber</Name>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EnterpriseNumber</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PurchIdRange</Name>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>PurchIdRange</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InvoiceGroup_CFDIUUID_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIUUID_MX</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InvoiceGroup_InvoiceSeries_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceSeries_MX</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Invoice</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InvoiceTH</Name>
								<ElementPosition>751619274</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>InvoiceTH_InvoiceDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceDate</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>InvoiceTH_InvoiceReceiptDate</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceReceiptDate</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Invoice</DataGroup>
								<DataSource>LedgerJournalTransExtensionTH</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CashDiscountGroup</Name>
								<ElementPosition>858993456</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CashDiscCode</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDiscCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>CashDiscBaseDate</Name>
										<ElementPosition>894784852</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDiscBaseDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>CashDiscDate</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DateCashDisc</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CashDiscAmount</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDiscAmount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_CashDiscPercent</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDiscPercent</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Document</Name>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocumentNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DocumentDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Document</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Document_TH</Name>
								<ElementPosition>1181116002</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Document_TaxInvoiceReceiptDate</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxInvoiceReceiptDate</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Document_RealVendName</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RealVendName</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Document_TH_TaxNatureOfAddress</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxNatureOfAddress</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Document_TH_BranchNumber</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BranchNumber</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Document_TH_TaxRegNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxRegNum</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>TaxInvoice</DataGroup>
								<DataSource>LedgerJournalTransExtensionTH</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Approve</Name>
								<ElementPosition>1288490184</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Approve_Approver</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Approve_Approver_PersonnelNumber</Name>
												<DataRelationPath>Approver_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>Approver</ReferenceField>
										<ReplacementFieldGroup>PersonnelNumber</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Approved</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Approved</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>Approve_InvoiceReleaseDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceReleaseDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Approve_ReleaseDateComment</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReleaseDateComment</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Approve</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>g1099Fields</Name>
								<ElementPosition>1503238548</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>g1099Fields_Tax1099Fields</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>g1099Fields_Tax1099Fields_Tax1099Box</Name>
												<DataRelationPath>Tax1099Fields</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>Tax1099Fields</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Tax1099Amount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>PublicSector</ConfigurationKey>
										<ElementPosition>805306366</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099Amount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Fields1099_Tax1099State</Name>
										<ConfigurationKey>PublicSector</ConfigurationKey>
										<ElementPosition>1207959549</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099State</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Fields1099_Tax1099StateAmount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>PublicSector</ConfigurationKey>
										<ElementPosition>1610612732</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099StateAmount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>g1099Fields</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>IntrastatGroup</Name>
								<ElementPosition>1717986912</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Listcode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Listcode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Caption>@SYS27650</Caption>
								<DataGroup>Intrastat</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VatRegister_PL</Name>
								<ElementPosition>1825361094</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_CustVendAccount_PL</Name>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendAccount_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_Addressing_PL</Name>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Addressing_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_VATNumJournal</Name>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VATNumJournal</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_CustVendName_PL</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustVendName_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>VatRegister_PL_IntraComVATDueDate_W</Name>
										<ElementPosition>1503238548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:LedgerJournalTransDaily_VatRegister_PL_IntraComVATDueDate_W</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntraComVATDueDate_W</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>VatRegister_PL_TaxPeriodPaymentCode_PL</Name>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxPeriodPaymentCode_PL</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ServiceTariffNumber</Name>
										<ElementPosition>1932735276</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ServiceTariffNumber_ServiceTariffId_PL</Name>
												<DataRelationPath>ServiceTariffNumber_PL</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>TaxServiceTariff</DataSource>
										<Label>@GLS115893</Label>
										<ReferenceField>ServiceTariffNumber</ReferenceField>
										<ReplacementFieldGroup>ServiceTariffId</ReplacementFieldGroup>
									</AxFormControl>
								</Controls>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VendInvoiceDeclaration</Name>
								<ElementPosition>1932735276</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>VendInvoiceDeclaration_VendInvoiceDeclaration_IS</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>VendInvoiceDeclaration_VendInvoiceDeclaration_IS_InvoiceDeclarationId</Name>
												<DataRelationPath>InvoiceDeclarationId_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>VendInvoiceDeclaration_IS</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>VendInvoiceDeclaration</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CFDIWithholdingTax_MX</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CFDIWithholdingTax_MX_WithholdingTypeCode_MX</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>WithholdingTypeCode_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CFDIWithholdingTax_MX_CFDIBeneficiaryRetains_MX</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIBeneficiaryRetains_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CFDIWithholdingTax_MX_CFDIFinancialSystem_MX</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIFinancialSystem_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestBelongsDerivedFinOp_MX</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestBelongsDerivedFinOp_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestCashedInTheCurrentPeriod_MX</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestCashedInTheCurrentPeriod_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestNominalAmount_MX</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestNominalAmount_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestRealAmount_MX</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestRealAmount_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CFDIWithholdingTax_MX_CFDIInterestLossAmount_MX</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFDIInterestLossAmount_MX</DataField>
										<DataSource>LedgerJournalTrans_W</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>CFDIWithholdingTax_MX</DataGroup>
								<DataSource>LedgerJournalTrans_W</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS12128</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PaymentTab</Name>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymentGroup</Name>
								<ElementPosition>536870910</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PaymMode</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymMode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_PaymSpec</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymSpec</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<LookupButton>Always</LookupButton>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_Prepayment</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Prepayment</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>OrigPaymentContragentType_RU</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<EnumType>FactureTaxCorrectionContragentType_RU</EnumType>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>OrigPaymReference_RU</Name>
										<CountryRegionCodes>RU</CountryRegionCodes>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editDocumentNum</DataMethod>
										<DataSource>LedgerJournalTrans_W</DataSource>
										<Label>@Facture:OrigPaymRefRecId_Label</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>LedgerJournalTrans_CustFactureAutoCreate_RU</Name>
										<ElementPosition>1932735281</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustFactureAutoCreate_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ExcludeExchAdj</Name>
										<ElementPosition>2040109463</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ExcludeExchAdj_PL</DataField>
										<DataSource>LedgerJournalTrans_RCash</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS828</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Amount</Name>
								<ElementPosition>805306365</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalTrans_RemainAmount</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RemainAmount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CashDiscountAmount</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CashDiscAmount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>Amount</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BankGroup</Name>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankTransType</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankTransType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PaymentReference</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymReference</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankGroup_AnnouncementNum_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AnnouncementNum_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Bank</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DepositSlipGroup</Name>
								<ElementPosition>1342177275</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>BankDepositVoucherTab</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankDepositVoucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankDepositNum</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankDepositNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankChequeNum</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankChequeNum</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>DepositSlip</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BankTransSummarization</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SummarizationId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankTransSummarizationId</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupNotificationToTheCentralBank</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612730</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupNotificationToTheCentralBank_BankCentralBankPurposeCode</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankPurposeCode</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupNotificationToTheCentralBank_BankCentralBankPurposeText</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankPurposeText</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>GroupNotificationToTheCentralBank_ImportDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ImportDate</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupNotificationToTheCentralBank_BankCentralBankTransTypeCur_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCentralBankTransTypeCur_RU</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>GroupNotificationToTheCentralBank_BankCurrencyTransferLog_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>GroupNotificationToTheCentralBank_BankCurrencyTransferLog_RU_BankCurrencyTransferId</Name>
												<DataRelationPath>BankCurrencyTransferLog_RU</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>BankCurrencyTransferLog_RU</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GroupNotificationToTheCentralBank_BankPaymentRegistrationNum_LV</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankPaymentRegistrationNum_LV</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>NotificationToTheCentralBank</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BankLCGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048185</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTransBankLC_TransType</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransType</DataField>
										<DataSource>LedgerJournalTransBankLC</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTransBankLC_BankLC</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTransBankLC_BankLC_BankLCNumber</Name>
												<DataRelationPath>BankLC</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTransBankLC</DataSource>
										<ReferenceField>BankLC</ReferenceField>
										<ReplacementFieldGroup>LookupIdentification</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTransBankLC_MarkupCode</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MarkupCode_SA</DataField>
										<DataSource>LedgerJournalTransBankLC</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTransBankLC_BankLCLine</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormIntegerControl">
												<Name>LedgerJournalTransBankLC_BankLCLine_LineNum</Name>
												<DataRelationPath>BankLCLine</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Integer</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTransBankLC</DataSource>
										<ReferenceField>BankLCLine</ReferenceField>
										<ReplacementFieldGroup>LookupIdentification</ReplacementFieldGroup>
									</AxFormControl>
								</Controls>
								<Caption>@SYS316286</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Representative_RU</Name>
								<ElementPosition>2097151998</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Representative_RU_RCashDocRepresType</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RCashDocRepresType</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Representative_RU_RCashDocRepresPersonId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RCashDocRepresPersonId</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Representative_RU_M_represPersonNameEdit_W</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>represPersonNameEdit_W</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Representative_RU_M_represPersonCardEdit_W</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>represPersonCardEdit_W</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Representative_RU</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CashRegister_W</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LocationRecId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<ExtendedDataType>CashRegisterLocationRecId_W</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>TerminalRecId</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTrans_W</DataSource>
										<ReferenceField>CashRegisterTerminal</ReferenceField>
										<ReplacementFieldGroup>Code</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>RegisterRecId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<ExtendedDataType>CashRegisterRecId_W</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>OperatorRecId</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<ExtendedDataType>CashRegisterOperatorRecId_W</ExtendedDataType>
									</AxFormControl>
								</Controls>
								<Caption>@FiscalServices:AS_LedgerJournalTransDaily_GroupCashRegister</Caption>
								<DataSource>LedgerJournalTrans_W</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS828</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PaymentFeeTab</Name>
						<ElementPosition>2063597566</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane2</Name>
								<ElementPosition>477218588</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab2</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>NewDeleteGroup1</Name>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>AddButton</Name>
														<ElementPosition>715827880</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
														<Text>@SYS60080</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>RemoveButton</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS26394</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>CustVendPaymJournalFee</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>GAFInformation_MY</Name>
												<Type>ButtonGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>GAFInformation_MYButton</Name>
														<Type>MenuFunctionButton</Type>
														<FormControlExtension
															i:nil="true" />
														<DataSource>CustVendPaymJournalFee</DataSource>
														<MenuItemName>TaxGSTEditTaxInformation_MY</MenuItemName>
													</AxFormControl>
												</Controls>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>TransTaxInformationPaymentFee_IN</Name>
												<CountryRegionCodes>IN</CountryRegionCodes>
												<Type>ButtonGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>TransTaxInformationPaymentFeeButton_IN</Name>
														<CountryRegionCodes>IN</CountryRegionCodes>
														<Type>MenuFunctionButton</Type>
														<FormControlExtension
															i:nil="true" />
														<DataSource>CustVendPaymJournalFee</DataSource>
														<NeedsRecord>Yes</NeedsRecord>
														<Text>@SYS33614</Text>
													</AxFormControl>
												</Controls>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridPaymFee</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustPaymJournalFee_FeeId</Name>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FeeId</DataField>
										<DataSource>CustVendPaymJournalFee</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustPaymJournalFee_FeeValue</Name>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FeeValue</DataField>
										<DataSource>CustVendPaymJournalFee</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustPaymJournalFee_FeeCurrency</Name>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FeeCurrency</DataField>
										<DataSource>CustVendPaymJournalFee</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustPaymJournalFee_TaxGroup</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroup</DataField>
										<DataSource>CustVendPaymJournalFee</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustPaymJournalFee_TaxItemGroup</Name>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>CustVendPaymJournalFee</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CustVendPaymJournalFee_Module</Name>
										<ElementPosition>1503238548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Module</DataField>
										<DataSource>CustVendPaymJournalFee</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>CustVendPaymJournalFee_LedgerJournalACType</Name>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerJournalACType</DataField>
										<DataSource>CustVendPaymJournalFee</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>CustPaymJournalFee_CustAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1932735276</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>SegmentedEntry</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>LedgerJournalACType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>CustVendPaymJournalFee</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataSource>CustVendPaymJournalFee</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS57605</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ProjectTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>Project</ConfigurationKey>
						<ElementPosition>2113929214</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectIdentificationLedger</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Group4_TransDate</Name>
										<ElementPosition>477218588</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjTransDate</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<Label>@SYS54242</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>Group4_AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS80304</Label>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>Group4_OffsetAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>OffsetAccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group4_ActivityNumber</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_Project_Employment</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTrans_Project_Employment_DirPerson_FK_Name</Name>
												<DataRelationPath>HcmWorker.DirPerson_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<ReferenceField>Worker</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTrans_Project_Resource</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<ReferenceField>Resource</ReferenceField>
										<ReplacementFieldGroup>ResourceId</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group4_ProjCategoryId</Name>
										<ElementPosition>1670265058</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group4_ProjLinePropertyId</Name>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinePropertyId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Correction</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>Correction</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS89920</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectTransaction</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectTransaction_ProjTransId</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group4_Txt</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS15191</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectCostPrice</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Group4_ProjQty</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Group4_CostPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CostPrice</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>CostPrice</DataGroup>
								<DataSource>LedgerJournalTrans_Project</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectSalesPrice</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group4_ProjSalesCurrencyId</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesCurrencyId</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Group4_SalesPrice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesPrice</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>SalesPrice</DataGroup>
								<DataSource>LedgerJournalTrans_Project</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ProjectTaxGroup</Name>
								<ConfigurationKey>Project</ConfigurationKey>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectTaxGroup_ProjTaxGroupSales</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroupSales</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectTaxGroup_ProjTaxItemGroupSales</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroupSales</DataField>
										<DataSource>LedgerJournalTrans_Project</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>SalesTax</DataGroup>
								<DataSource>LedgerJournalTrans_Project</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS4534</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AssetTab</Name>
						<ElementPosition>2126512126</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>LedgerJournalTrans_AssetTransType_RU</Name>
								<ElementPosition>357913940</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TransType</DataField>
								<DataSource>LedgerJournalTrans_RAsset</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>LedgerJournalTrans_AssetTransType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TransType</DataField>
								<DataSource>LedgerJournalTrans_Asset</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>LedgerJournalTrans_AssetBookId</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>BookId</DataField>
								<DataSource>LedgerJournalTrans_Asset</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>DepreciationStartDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>DepreciationStartDate</DataField>
								<DataSource>LedgerJournalTrans_Asset</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>LedgerJournalTrans_Asset_AssetGroup_IN</Name>
								<ElementPosition>1744830462</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>AssetGroup_IN</DataField>
								<DataSource>LedgerJournalTrans_Asset</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>LedgerJournalTrans_AssetSaleFactor_PL</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1946157054</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>SaleFactor_PL</DataField>
								<DataSource>LedgerJournalTrans_Asset</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS12578</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>RemittanceTab</Name>
						<ElementPosition>2139095038</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane1</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab1</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ButtonGroup1</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>AddAddress</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<DataSource>LedgerJournalTrans</DataSource>
														<MenuItemName>CustDirPartyPostalAddressNew</MenuItemName>
														<Text>@SYS111834</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>Remittance_ManageAddress</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<DataSource>LedgerJournalTrans</DataSource>
														<MenuItemName>VendDirPartyPostalAddressAdvanced</MenuItemName>
														<Text>@SYS312927</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Remittance</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RemittanceTop</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>LedgerJournalTrans_RemittanceLocation</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>LedgerJournalTrans_RemittanceLocation_Description</Name>
														<DataRelationPath>RemittanceLocation_FK</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<DataSource>LedgerJournalTrans</DataSource>
												<ReferenceField>RemittanceLocation</ReferenceField>
												<ReplacementFieldGroup>Description</ReplacementFieldGroup>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>RemittanceBottom</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTrans_RemittanceAddress</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>displayRemittanceAddress</DataMethod>
												<DataSource>LedgerJournalTrans</DataSource>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SYS152838</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Tax1099Tab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2141192190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>g1099Fields2</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>g1099Fields2_Tax1099Fields</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>g1099Fields2_Tax1099Fields_Tax1099Box</Name>
												<DataRelationPath>Tax1099Fields</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTrans</DataSource>
										<ReferenceField>Tax1099Fields</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>g1099Fields2_Tax1099Amount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099Amount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>g1099Fields2_Tax1099State</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099State</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>g1099Fields2_Tax1099StateAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099StateAmount</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>g1099Fields</DataGroup>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax1099G1Fields</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Tax1099G</ConfigurationKey>
								<ElementPosition>1342177278</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Tax1099G1Fields_State</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>State</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Tax1099G1Fields_Tax1099StateTaxID</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099StateTaxID</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Tax1099G1Fields_Tax1099StateTaxWithheld</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099StateTaxWithheld</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SPS1936</Caption>
								<DataGroup>Tax1099G1Fields</DataGroup>
								<DataSource>Tax1099BoxDetail</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax1099GFields</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Tax1099G</ConfigurationKey>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>Tax1099GFields_Tax1099TaxYear</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099TaxYear</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
										<LimitText>4</LimitText>
										<LimitTextMode>Fixed</LimitTextMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Tax1099GFields_Tax1099TradeOrBusiness</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099TradeOrBusiness</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SPS1093</Caption>
								<DataGroup>Tax1099GFields</DataGroup>
								<DataSource>Tax1099BoxDetail</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax1099SFields</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>Tax1099S</ConfigurationKey>
								<ElementPosition>1879048189</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Tax1099SFields_Tax1099DateOfClosing</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099DateOfClosing</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Tax1099SFields_Tax1099AddressorLegalDesc</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099AddressorLegalDesc</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Tax1099SFields_Tax1099PropertyOrServices</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099PropertyOrServices</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Tax1099SFields_Tax1099BuyersTax</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tax1099BuyersTax</DataField>
										<DataSource>Tax1099BoxDetail</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>Tax1099SFields</DataGroup>
								<DataSource>Tax1099BoxDetail</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS118159</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>HistoryTab</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>2143289342</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CurrentJournalGroup</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReportedAsReadyBy</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ReportedAsReadyBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22056</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ApprovedBy1</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ApprovedBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RejectedBy</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>RejectedBy</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22205</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>PostedDateTime</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PostedDateTime</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS24582</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InterCompanyGroup</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_ForeignCompany</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ForeignCompany</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_ForeignVoucher</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ForeignVoucher</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS3805</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TransferGroup</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>LedgerJournalTrans_TransferredOn</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransferredOn</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TransferredBy</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransferredBy</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTrans_TransferredTo</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransferredTo</DataField>
										<DataSource>LedgerJournalTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS13220</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ErrorLogGroup</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ErrorLog</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ErrorLog</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<Label>@SYS22915</Label>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
								</Controls>
								<Caption>@SYS25864</Caption>
								<DataSource>LedgerJournalTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS10575</Caption>
						<DataSource>LedgerJournalTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Zakat_SA</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<CountryRegionCodes>SA</CountryRegionCodes>
						<ElementPosition>2145386494</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Revenue</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Revenue_SalesType</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesType</DataField>
										<DataSource>LedgerJournalTransZakat_SA</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Revenue_ProjId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>LedgerJournalTransZakat_SA</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Revenue_SalesId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesId</DataField>
										<DataSource>LedgerJournalTransZakat_SA</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Revenue</DataGroup>
								<DataSource>LedgerJournalTransZakat_SA</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Subcontractor</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>Subcontractor_Subcontractor</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>Subcontractor_Subcontractor_VendAccount</Name>
												<DataRelationPath>VendInfoZakat</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTransZakat_SA</DataSource>
										<ReferenceField>Subcontractor</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Subcontractor_ContractNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ContractNum</DataField>
										<DataSource>LedgerJournalTransZakat_SA</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Subcontractor</DataGroup>
								<DataSource>LedgerJournalTransZakat_SA</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MaintenanceExpense</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>MaintenanceExpense_AssetGroup</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>MaintenanceExpense_AssetGroup_GroupName</Name>
												<DataRelationPath>AssetGroupZakat</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTransZakat_SA</DataSource>
										<ReferenceField>AssetGroup</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>MaintenanceExpense</DataGroup>
								<DataSource>LedgerJournalTransZakat_SA</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS321586</Caption>
						<DataSource>LedgerJournalTransZakat_SA</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TaxWithholdTab</Name>
						<CountryRegionCodes>TH</CountryRegionCodes>
						<ElementPosition>2146435070</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TaxWithholdPaymentGrossUpGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>TaxWithholdPaymentGrossUpGroup_PaymentGrossUpType</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymentGrossUpType</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxWithholdPaymentGrossUpGroup_PaymentGrossUpOtherDetail</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymentGrossUpOtherDetail</DataField>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>PaymentGrossUp</DataGroup>
								<DataSource>LedgerJournalTransExtensionTH</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TaxAgentGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>LedgerJournalTransTaxWithhold_TaxAgent</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LedgerJournalTransTaxWithhold_TaxAgent_AgentId</Name>
												<DataRelationPath>TaxAgent</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>LedgerJournalTransExtensionTH</DataSource>
										<ReferenceField>TaxAgent</ReferenceField>
									</AxFormControl>
								</Controls>
								<DataGroup>TaxAgent</DataGroup>
								<DataSource>LedgerJournalTransExtensionTH</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS7372</Caption>
						<DataSource>LedgerJournalTransExtensionTH</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>LedgerJournalTrans</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Balances</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>TotalsGroupTabular</Name>
						<ExtendedStyle>tabularFields</ExtendedStyle>
						<Pattern>TabularFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BalancesCaptionRow</Name>
								<ExtendedStyle>tabularFields_title</ExtendedStyle>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>AccountingCurrencyTotalHeaderCaption</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ExtendedStyle>tabularFields_titleText</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS333999</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TotalsHeader</Name>
								<ExtendedStyle>tabularFields_rowHeader</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>RowCaptionsHeader</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text></Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>DebitHeader</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS9512</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>CreditHeader</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@GeneralLedger:LedgerJournalTransDailyCredit</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>BalanceHeader</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS95</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VoucherRow</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>613566756</ElementPosition>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>VoucherRowHeader</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS12371</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherDebit</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherDebit</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherCredit</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherCredit</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherTotal</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherTotal</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<FastTabSummary>No</FastTabSummary>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>JournalRow</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>920350134</ElementPosition>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>JournalRowHeader</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS6790</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalDebit</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalDebit</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalCredit</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalCredit</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalBalance</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalBalance</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BalancesRowFooter</Name>
								<ExtendedStyle>tabularFields_rowFooter</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<AllowUserSetup>Restricted</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>TotalsGroupTabularReportingCurrency</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ExtendedStyle>tabularFields</ExtendedStyle>
						<Pattern>TabularFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BalancesCaptionRowReportingCurrency</Name>
								<ExtendedStyle>tabularFields_title</ExtendedStyle>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>ReportingCurrencyTotalHeaderCaption</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_titleText</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@GeneralLedger:ReportingCurrency</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TotalsHeaderReportingCurrency</Name>
								<ExtendedStyle>tabularFields_rowHeader</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>DebitHeaderReportingCurrency</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS9512</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>CreditHeaderReportingCurrency</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@GeneralLedger:LedgerJournalTransDailyCredit</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>BalanceHeaderReportingCurrency</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS95</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>VoucherRowReportingCurrency</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>613566756</ElementPosition>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherDebitReportingCurrency</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherDebitReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherCreditReportingCurrency</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherCreditReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>VoucherTotalReportingCurrency</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>VoucherTotalReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<FastTabSummary>No</FastTabSummary>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>JournalRowReportingCurrency</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>920350134</ElementPosition>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalDebitReportingCurrency</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalDebitReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalCreditReportingCurrency</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalCreditReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>JournalBalanceReportingCurrency</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>JournalBalanceReportingCurrency</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BalancesRowFooterReportingCurrency</Name>
								<ExtendedStyle>tabularFields_rowFooter</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<AllowUserSetup>Restricted</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>OffsetBalance</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ExtendedStyle>tabularFields</ExtendedStyle>
						<Pattern>TabularFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FixedOffsetCaptionRow</Name>
								<ExtendedStyle>tabularFields_title</ExtendedStyle>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FixedOffsetHeaderRow</Name>
								<ExtendedStyle>tabularFields_rowHeader</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>FixedOffsetHeader</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS55041</Text>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FixedOffsetBalanceRow</Name>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>BeginBalanceRowHeader</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS95</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>beginBalance</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>beginBalance</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FixedOffsetTotalRow</Name>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>FixedOffsetJournalBalanceRowHeader</Name>
										<AllowEdit>No</AllowEdit>
										<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS55069</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>LedgerJournalBalance</Name>
										<AllowEdit>No</AllowEdit>
										<ConfigurationKey>LedgerBasic</ConfigurationKey>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ledgerJournalBalance</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FixedOffsetBalanceEndControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ExtendedStyle>tabularFields_row</ExtendedStyle>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>FixedOffsetEndBalanceRowHeader</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS50986</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>EndBalance</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>EndBalance</DataMethod>
										<DataSource>LedgerJournalTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FixedOffsetRowFooter</Name>
								<ExtendedStyle>tabularFields_rowFooter</ExtendedStyle>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<AllowUserSetup>No</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<AllowUserSetup>Restricted</AllowUserSetup>
						<ArrangeMethod>None</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>BudgetGroup</Name>
						<AllowEdit>No</AllowEdit>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>BudgetCheckResult</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ConfigurationKey>LedgerAdv2BudgetCtrl</ConfigurationKey>
								<ExtendedStyle>budgetCheckResult_status</ExtendedStyle>
								<PreviewPartRef>BudgetCheckResultPreview</PreviewPartRef>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayBudgetCheckResult</DataMethod>
								<DataSource>LedgerJournalTrans</DataSource>
								<Label>@SYS342081</Label>
								<Items />
							</AxFormControl>
						</Controls>
						<AllowUserSetup>Restricted</AllowUserSetup>
						<ColumnsMode>Fill</ColumnsMode>
					</AxFormControl>
				</Controls>
				<AllowUserSetup>Restricted</AllowUserSetup>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<DataSource>LedgerJournalTrans</DataSource>
				<FrameType>None</FrameType>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>