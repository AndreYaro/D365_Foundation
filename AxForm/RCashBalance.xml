<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RCashBalance</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class RCashBalance extends FormRun
    {
        RCashTable      cashTable;
        LedgerJournalTrans trans;

        ToDate          toDate;
        RCashAccount    accountNum;
        boolean         showCurrency;

        RCashBalance    balance;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (element.args().record() &&
            !(element.args().dataset() == tableNum(RCashTable) ||
              element.args().dataset() == tableNum(LedgerJournalTrans)))
            throw error("@GLS103799");

        switch (element.args().dataset())
        {
            case tableNum(RCashTable) :
                cashTable   = element.args().record();
                accountNum  = cashTable.AccountNum;
                toDate      = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
                break;
            case tableNum(LedgerJournalTrans) :
                trans       = element.args().record();
                toDate      = trans.TransDate;
                break;

            default :
                toDate      = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        }

        showCurrency = false;

        this.selectionChanged(toDate, showCurrency);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        dateEditToDate.dateValue(toDate);
        rCashBalances_AccountNum.visible(! cashTable.RecId);
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionChanged</Name>
				<Source><![CDATA[
    void selectionChanged(ToDate _toDate, NoYes _showCurrency)
    {
        toDate = _toDate;
        showCurrency = _showCurrency;
        if (showCurrency)
        {
            balance = new RCashBalanceCur(toDate);
        }
        else
        {
            balance = new RCashBalanceMST(toDate);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>tmpCashBalances</Name>
				<Source><![CDATA[
    RCashBalances tmpCashBalances()
    {
        RCashTable      tmpCashTable;
        RCashBalances   tmpCashBalances;
        RCashBalances   localCashBalances;
        RCashBalanceCur balanceCur;
        RCashBalanceMST balanceMST;

        void selectTable()
        {
            select firstonly AccountNum from tmpCashTable
                where tmpCashTable.RecId == cashTable.RecId;
        }

        this.updateDesign();

        tmpCashBalances.setTmp();
        tmpCashBalances.PeriodStart = LedgerFiscalCalendar::findPeriodStartDateByDateWithIndex(CompanyInfoHelper::fiscalCalendarRecId(), toDate);

        if (cashTable)
        {
            selectTable();
        }
        else
        {
            cashTable = RCashTable::find(trans.parmAccount());
            if (cashTable)
            {
                selectTable();
            }
            else
            {
                select AccountNum from tmpCashTable;
            }
        }

        while (tmpCashTable)
        {
            accountNum = tmpCashTable.AccountNum;
            tmpCashBalances.AccountNum  = accountNum;

            if (showCurrency)
            {
                balanceCur = balance;

                while select localCashBalances
                    group by CurrencyCode
                    where localCashBalances.AccountNum  == accountNum   &&
                          localCashBalances.PeriodStart <= toDate
                {
                    balanceCur.calc(accountNum, localCashBalances.CurrencyCode);

                    tmpCashBalances.CurrencyCode = localCashBalances.CurrencyCode;
                    tmpCashBalances.AmountCur = balanceCur.amountCur();
                    tmpCashBalances.AmountMST = balanceCur.amountMST();
                    tmpCashBalances.ExchAdjustment = balanceCur.amountExchAdjustment();
                    tmpCashBalances.insert();
                }
            }
            else
            {
                balanceMST = balance;
                balanceMST.calc(accountNum);

                tmpCashBalances.CurrencyCode = CompanyInfoHelper::standardCurrency();
                tmpCashBalances.AmountMST = balanceMST.amountMST();
                tmpCashBalances.AmountCur = balanceMST.payAmountMST(); // Use the field to save a value
                tmpCashBalances.insert();
            }
            next tmpCashTable;
        }
        return tmpCashBalances;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign()
    {
        rCashBalances_CurrencyCode.visible(showCurrency);
        rCashBalances_AmountCur.visible(showCurrency);
        rCashBalances_ExchAdjustment.visible(showCurrency);
        realEditPayAmountMST.visible(! showCurrency);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RCashBalances</Name>
				<Methods>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();

            switch (element.args().dataset())
            {
                case tableNum(RCashTable) :
                    accountNum = cashTable.AccountNum;
                    break;
                case tableNum(LedgerJournalTrans) :
                    trans      = element.args().record();
                    toDate     = trans.TransDate;
                    dateEditToDate.dateValue(toDate);
                    dateEditToDate.modified();
                    break;
            }

            rCashBalances_ds.executeQuery();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            rCashBalances.setTmp();
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryRun    qr;
            Query       query;

            if (this.query().dataSourceNo(1).table() != tableNum(RCashBalances))
            {
                // Called from remain check infolog
                qr = new QueryRun(this.query());
                qr.next();
                cashTable = qr.getNo(1);
                accountNum = cashTable.AccountNum;
                query = new Query();
                query.addDataSource(tableNum(RCashBalances));
                this.query(query);
            }

            rCashBalances.setTmpData(element.tmpCashBalances());
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>DateEditToDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.selectionChanged(this.dateValue(), checkShowCurrency.value() );
            rCashBalances_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckShowCurrency</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.selectionChanged(dateEditToDate.dateValue(), this.value());
            rCashBalances_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RCashBalances</Name>
			<Table>RCashBalances</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodStart</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@GLS104442</Caption>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<TitleDataSource xmlns="">RCashBalances</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ApplicationBar</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupCriteria</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilter</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>GridBalances</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>DateEditToDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>ToDate</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>CheckShowCurrency</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS53706</Label>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>GridBalances</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>RCashBalances_AccountNum</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>613566756</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>AccountNum</DataField>
						<DataSource>RCashBalances</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>RCashBalances_CurrencyCode</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>920350134</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CurrencyCode</DataField>
						<DataSource>RCashBalances</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>RCashBalances_AmountCur</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1227133512</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>AmountCur</DataField>
						<DataSource>RCashBalances</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>RCashBalances_AmountMST</Name>
						<ElementPosition>1533916890</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>AmountMST</DataField>
						<DataSource>RCashBalances</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>RCashBalances_ExchAdjustment</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1840700268</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ExchAdjustment</DataField>
						<DataSource>RCashBalances</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>RealEditPayAmountMST</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<CountryRegionCodes>RU</CountryRegionCodes>
						<ElementPosition>1994091957</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>AmountCur</DataField>
						<DataSource>RCashBalances</DataSource>
						<Label>@GLS104499</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
				</Controls>
				<DataSource>RCashBalances</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>