<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>LedgerJournalSplitPosting</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class LedgerJournalSplitPosting extends FormRun
{
    LedgerJournalSplitPosting           ledgerJournalSplitPosting;
    [FormObservable]
    Voucher                             voucher;
    [FormObservable]
    CurrencyCode                        currencyCode;
    [FormObservable]
    AmountCur                           originalAmountCur;
    [FormObservable]
    AmountCur                           totalAmountLines;
    [FormObservable]
    AmountCur                           totalGrosAmountCur;
    [FormObservable]
    AmountCur                           totalNetAmountCur;
    [FormObservable]
    AmountCur                           totalTaxAmountCur;
    [FormObservable]
    AmountCur                           totalRemainAmount;
    [FormObservable]
    AmountCur                           remainAmountLines;

    FormButtonControl                   buttonUpdate;
    FormRealControl                     fieldTaxAmount;
    FormStringControl                   fieldTaxGroup;
    FormStringControl                   fieldTaxItemGroup;
    FormStringControl                   fieldTaxCode;
    LedgerJournalTrans                  ledgerJournalTrans;
    LedgerJournalTable                  ledgerJournalTable;
    LedgerJournalEngine                 ledgerJournalEngine;
    FormRun                             callerForm;
    FormDataSource                      ledgerJournalTrans_ds;
    boolean                             modifiedData;
    [FormObservable]
    boolean                             journalAmountInclTax;
    [FormObservable]
    AmountCur                           amountDifference;
    RecId                               currentMainAccountId;
    LedgerJournalType                   ledgerJournalType;

}
]]></Source>
			</Method>
			<Method>
				<Name>amountDifference</Name>
				<Source><![CDATA[
    display AmountCur amountDifference()
    {
        return amountDifference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcLineTotals</Name>
				<Source><![CDATA[
    void calcLineTotals(TmpLedgerJournalSplitHeader _tmpLedgerJournalSplitHeader)
    {
        totalAmountLines    = ledgerJournalSplitPosting.totalAmountLines(_tmpLedgerJournalSplitHeader.LineNum);
        remainAmountLines   = _tmpLedgerJournalSplitHeader.amountToSplit() - totalAmountLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcTotals</Name>
				<Source><![CDATA[
    void calcTotals()
    {
        originalAmountCur  = ledgerJournalSplitPosting.originalAmountCur() + ledgerJournalSplitPosting.amountDifference();
        totalGrosAmountCur = ledgerJournalSplitPosting.totalGrosAmountCur();
        totalNetAmountCur  = ledgerJournalSplitPosting.totalNetAmountCur();
        totalTaxAmountCur  = ledgerJournalSplitPosting.totalTaxAmountCur();
        amountDifference   = ledgerJournalSplitPosting.amountDifference();

        if (journalAmountInclTax)
        {
            totalRemainAmount = originalAmountCur + totalGrosAmountCur;
        }
        else
        {
            totalRemainAmount = originalAmountCur + totalNetAmountCur;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    boolean canClose()
    {
        boolean ret = true;

        if (ret && modifiedData)
        {
            if (Box::okCancel("@SYS67795", DialogButton::Cancel, '') == DialogButton::Cancel)
            {
                ret = false;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyCode</Name>
				<Source><![CDATA[
    display CurrencyCode currencyCode()
    {
        return currencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>grosAmountModified</Name>
				<Source><![CDATA[
    void grosAmountModified()
    {
        ledgerJournalSplitPosting.grosAmountModified(tmpLedgerJournalSplitHeader);
        element.calcTotals();
        element.calcLineTotals(tmpLedgerJournalSplitHeader);

        if (tmpLedgerJournalSplitHeader.RecId)
        {
            tmpLedgerjournalSplitHeader_ds.reread();
        }
        else
        {
            tmpLedgerjournalSplitHeader_ds.refresh();
        }

        element.setAllowUpdate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        Object fr;

        super();

        TmpLedgerJournalSplitLines_LedgerAccount.parmValidateBlockedForManualEntry(true);

        buttonUpdate        = updateJournal;
        fieldTaxAmount      = tmpLedgerJournalSplitHeader_TaxAmountCur;
        fieldTaxGroup       = tmpLedgerJournalSplitHeader_TaxGroup;
        fieldTaxItemGroup   = tmpLedgerJournalSplitHeader_TaxItemGroup;
        fieldTaxCode        = tmpLedgerJournalSplitHeader_TaxCode;

        ledgerJournalType = element.args().parmEnum();

        if (ledgerJournalType == LedgerJournalType::Approval)
        {
            ledgerJournalSplitPosting = LedgerJournalSplitPostingApprove::construct();
        }
        else
        {
            ledgerJournalSplitPosting = LedgerJournalSplitPosting::construct();
        }

        if (element.args().caller())
        {
            callerForm              = element.args().caller();
            ledgerJournalTrans      = element.args().record();
            ledgerJournalTrans_ds   = callerForm.dataSource();

            if (ledgerJournalTrans)
            {
                ledgerJournalTable = ledgerJournalTrans.ledgerJournalTable();
                ledgerJournalType = ledgerJournalTable.JournalType;
            }

            element.initFromJournal(ledgerJournalTrans);

            if (formHasMethod(callerForm, identifierStr(ledgerJournalEngine)))
            {
                fr = callerForm;
                ledgerJournalEngine = fr.ledgerJournalEngine();
            }
        }

        element.calcTotals();

        grid.setFocus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromJournal</Name>
				<Source><![CDATA[
    void initFromJournal(LedgerJournalTrans _ledgerJournalTrans)
    {
        voucher                 = _ledgerJournalTrans.Voucher;
        currencyCode            = _ledgerJournalTrans.CurrencyCode;

        if (_ledgerJournalTrans.TaxGroup && _ledgerJournalTrans.TaxItemGroup && !_ledgerJournalTrans.isTaxable())
        {
            warning("@SYS330044");
        }

        ledgerJournalSplitPosting.initFromJournal(ledgerJournalTable, voucher);
        journalAmountInclTax = ledgerJournalSplitPosting.journalAmountInclTax();
        tmpLedgerJournalSplitHeader.setTmpData(ledgerJournalSplitPosting.tmpLedgerJournalSplitHeader());
        tmpLedgerJournalSplitLines.setTmpData(ledgerJournalSplitPosting.tmpLedgerJournalSplitLines());
        tmpLedgerJournalSplitLines_LedgerAccount.parmControlDate(_ledgerJournalTrans.TransDate);

        tmpLedgerJournalSplitHeader_ds.research();
        tmpLedgerJournalSplitLines_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>netAmountModified</Name>
				<Source><![CDATA[
    void netAmountModified()
    {
        ledgerJournalSplitPosting.netAmountModified(tmpLedgerJournalSplitHeader);
        element.calcTotals();
        element.calcLineTotals(tmpLedgerJournalSplitHeader);

        tmpLedgerjournalSplitHeader_ds.reread();
        tmpLedgerjournalSplitHeader_ds.refresh();

        element.setAllowUpdate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>originalAmountCur</Name>
				<Source><![CDATA[
    display AmountCur originalAmountCur()
    {
        return -originalAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>remainAmountLines</Name>
				<Source><![CDATA[
    display AmountCur remainAmountLines()
    {
        return remainAmountLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>research</Name>
				<Source><![CDATA[
    void research()
    {
        LedgerIJournalFormRefreshable callerRefreshable = element.args().caller() as LedgerIJournalFormRefreshable;

        if (callerRefreshable)
        {
            callerRefreshable.refresh();
        }

        LedgerIJournalFormCache callerCache = element.args().caller() as LedgerIJournalFormCache;

        if (callerCache)
        {
            callerCache.clearCache(ledgerJournalSplitPosting.voucher());
        }

        LedgerIJournalCashDiscount callerCashDiscount = element.args().caller() as LedgerIJournalCashDiscount;

        if (callerCashDiscount)
        {
            callerCashDiscount.updateCashDiscount(ledgerJournalSplitPosting.voucher());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEditHeader</Name>
				<Source><![CDATA[
    void setAllowEditHeader(TmpLedgerJournalSplitHeader _tmpLedgerJournalSplitHeader)
    {
        if ((_tmpLedgerJournalSplitHeader.TaxGroup && _tmpLedgerJournalSplitHeader.TaxItemGroup) ||
             _tmpLedgerJournalSplitHeader.TaxCode)
        {
            fieldTaxAmount.enabled(true);
        }
        else
        {
            fieldTaxAmount.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowUpdate</Name>
				<Source><![CDATA[
    void setAllowUpdate()
    {
        if (totalRemainAmount == 0 && ledgerJournalTrans)
        {
            buttonUpdate.enabled(ledgerJournalSplitPosting.showUpdateJournal());
        }
        else
        {
            buttonUpdate.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxAmountModified</Name>
				<Source><![CDATA[
    void taxAmountModified()
    {
        ledgerJournalSplitPosting.taxAmountModified(tmpLedgerJournalSplitHeader);
        element.calcTotals();
        element.calcLineTotals(tmpLedgerJournalSplitHeader);

        if (tmpLedgerJournalSplitHeader.RecId)
        {
            tmpLedgerjournalSplitHeader_ds.reread();
        }
        else
        {
            tmpLedgerjournalSplitHeader_ds.refresh();
        }
        element.setAllowUpdate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxGroupModified</Name>
				<Source><![CDATA[
    void taxGroupModified()
    {
        ledgerJournalSplitPosting.taxGroupModified(tmpLedgerJournalSplitHeader);
        element.calcTotals();
        element.calcLineTotals(tmpLedgerJournalSplitHeader);
        tmpLedgerjournalSplitHeader_ds.reread();
        tmpLedgerJournalSplitHeader_ds.refresh();
        element.setAllowUpdate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalAllocatedAmountCur</Name>
				<Source><![CDATA[
    display AmountCur totalAllocatedAmountCur()
    {
        if (journalAmountInclTax)
        {
            return -totalGrosAmountCur;
        }

        return -totalNetAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalAmountLines</Name>
				<Source><![CDATA[
    display AmountCur totalAmountLines()
    {
        return totalAmountLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalGrosAmountCur</Name>
				<Source><![CDATA[
    display AmountCur totalGrosAmountCur()
    {
        return -totalGrosAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalNetAmountCur</Name>
				<Source><![CDATA[
    display AmountCur totalNetAmountCur()
    {
        return totalNetAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalRemainAmount</Name>
				<Source><![CDATA[
    display AmountCur totalRemainAmount()
    {
        return -totalRemainAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalTaxAmountCur</Name>
				<Source><![CDATA[
    display AmountCur totalTaxAmountCur()
    {
        return totalTaxAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>voucher</Name>
				<Source><![CDATA[
    display Voucher voucher()
    {
        return voucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>segmentValueChangedDefaultDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads the segmented entry control with dimensions for the main account when the main account is changed.
    /// </summary>
    /// <param name="_segmentedEntry">
    /// The segmented entry control that was updated.
    /// </param>
    /// <param name="_currentMainAccountId">
    /// The current main account record ID.
    /// </param>
    public void segmentValueChangedDefaultDimensions(
        SegmentedEntryControl    _segmentedEntry,
        MainAccountRecId         _currentMainAccountId)
    {
        changecompany(_segmentedEntry.parmDataAreaId())
        {
            if (_segmentedEntry.getAccountStructure() != 0)
            {
                MainAccountRecId mainAccountId = _segmentedEntry.getValue(DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount));

                if ((mainAccountId != 0)
                    && (_currentMainAccountId != mainAccountId))
                {
                    if (ledgerJournalTrans.DefaultDimension)
                    {
                        Map defaultDimensionSpecifiers = LedgerDimensionDefaultingEngine::getDefaultDimensionSpecifiers(ledgerJournalTrans.DefaultDimension);
                        _segmentedEntry.setDimensionSpecifiers(defaultDimensionSpecifiers);
                    }

                    MainAccountLegalEntity mainAccount = MainAccountLegalEntity::findByMainAccountLegalEntity(mainAccountId, CompanyInfo::current());
                    if (mainAccount.DefaultDimension)
                    {
                        Map defaultDimensionSpecifiers = LedgerDimensionDefaultingEngine::getDefaultDimensionSpecifiers(mainAccount.DefaultDimension);
                        _segmentedEntry.setDimensionSpecifiers(defaultDimensionSpecifiers);
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TmpLedgerJournalSplitHeader</Name>
				<Methods>
					<Method>
						<Name>leaveRecord</Name>
						<Source><![CDATA[
        public boolean leaveRecord(boolean _forceUpdate = false)
        {
            boolean ret = super(_forceUpdate);
            tmpLedgerJournalSplitHeader_ds.reread();
            tmpLedgerJournalSplitHeader_ds.refresh();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        void initValue()
        {
            super();
            ledgerJournalSplitPosting.initValueHeader(tmpLedgerJournalSplitHeader);
            tmpLedgerJournalSplitHeader_ds.write();
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        void delete()
        {
            ledgerJournalSplitPosting.deleteHeader(tmpLedgerJournalSplitHeader);
            super();
            element.calcTotals();
            modifiedData = true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        void write()
        {
            super();
            ledgerJournalSplitPosting.adjustTaxInLine(tmpLedgerJournalSplitLines, tmpLedgerJournalSplitHeader);
            element.calcTotals();
            modifiedData = true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        int active()
        {
            int ret = super();
            element.calcLineTotals(tmpLedgerJournalSplitHeader);
            element.setAllowUpdate();
            element.setAllowEditHeader(tmpLedgerJournalSplitHeader);
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>GrosAmountCur</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                modifiedData = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>NetAmountCur</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                modifiedData = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxAmountCur</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                modifiedData = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxGroup</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                modifiedData = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TaxItemGroup</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                modifiedData = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TmpLedgerJournalSplitLines</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        void initValue()
        {
            super();
            ledgerJournalSplitPosting.initValueLine(tmpLedgerJournalSplitHeader, tmpLedgerJournalSplitLines);
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        void delete()
        {
            ledgerJournalSplitPosting.deleteLine(tmpLedgerJournalSplitLines);
            super();
            element.calcLineTotals(tmpLedgerJournalSplitHeader);
            modifiedData = true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        void write()
        {
            if (ledgerJournalSplitPosting.validateWrite(tmpLedgerJournalSplitLines))
            {
                super();
                ledgerJournalSplitPosting.adjustTaxInLine(tmpLedgerJournalSplitLines, tmpLedgerJournalSplitHeader);
                element.calcLineTotals(tmpLedgerJournalSplitHeader);
                element.setAllowUpdate();
                modifiedData = true;
            }
            else
            {
                buttonUpdate.enabled(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AmountCurCredit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                modifiedData = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AmountCurDebit</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                modifiedData = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                int signValue = 1;

                // the adjustOffsetAccountIfEmpty method may change the net amount for new tax amounts based on the account
                if (ledgerJournalSplitPosting.adjustOffsetAccountIfEmpty(tmpLedgerJournalSplitHeader, tmpLedgerJournalSplitLines) &&
                    !tmpLedgerJournalSplitLines)
                {
                    // need the amount already split to subtract from the total net when calculating the default amount
                    Amount previousSplitAmount = ledgerJournalSplitPosting.totalAmountLines(tmpLedgerJournalSplitHeader.LineNum);
                    Amount ledgerAmount = ledgerJournalTrans.AmountCurDebit ? ledgerJournalTrans.AmountCurDebit : ledgerJournalTrans.AmountCurCredit;

                    // for negative amounts the new net amount may be for the wrong sign so the sign needs to be determined and
                    // abs used to insure the default amount is of the same sign as the document amount
                    if (ledgerAmount < 0)
                    {
                        signValue = -1;
                    }

                    if (tmpLedgerJournalSplitLines.AmountCurDebit)
                    {
                        tmpLedgerJournalSplitLines.AmountCurDebit = abs((abs(TmpLedgerJournalSplitHeader.NetAmountCur) - abs(previousSplitAmount))) * signValue;
                    }
                    else if (tmpLedgerJournalSplitLines.AmountCurCredit)
                    {
                        tmpLedgerJournalSplitLines.AmountCurCredit = abs((abs(TmpLedgerJournalSplitHeader.NetAmountCur) - abs(previousSplitAmount))) * signValue;
                    }
                }
                super();
                tmpLedgerJournalSplitHeader_ds.refresh();
                modifiedData = true;
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = super();
                if (ret)
                {
                    ret = ledgerJournalSplitPosting.validateLedgerDimension(tmpLedgerJournalSplitLines.LineNum,
                                                                            tmpLedgerJournalSplitLines.LedgerDimension);
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransTxt</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                super();
                modifiedData = true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>UpdateJournal</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.calcTotals();
            element.setAllowUpdate();

            if (totalRemainAmount == 0 && ledgerJournalTrans)
            {
                LedgerJournalSplitPosting::updateLedgerJournalServer(ledgerJournalType, ledgerJournalSplitPosting.pack());
                element.research();
                super();
                element.close();

                if (ledgerJournalTrans && LedgerJournalTableType::isBudgetCheckRequiredAtLineItemEntry(
                                                                    ledgerJournalType,
                                                                    ledgerJournalTrans.company()))
                {
                    if (ledgerJournalEngine)
                    {
                        // Removes the original budget check result from the cache for the voucher to allow the cache update after budget check occurs.
                        ledgerJournalEngine.removeBudgetCheckResultFromCache(ledgerJournalTrans.Voucher);
                    }

                    // Recheck budget funds availability after break down the voucher on a journal voucher form.
                    ledgerJournalTrans.checkBudget();
                }
            }
            else
            {
                throw error("@SYS60274");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpLedgerJournalSplitHeader_TaxGroup</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean ret = super();
            element.taxGroupModified();
            element.setAllowEditHeader(tmpLedgerJournalSplitHeader);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpLedgerJournalSplitHeader_TaxItemGroup</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean ret = super();
            element.taxGroupModified();
            element.setAllowEditHeader(tmpLedgerJournalSplitHeader);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpLedgerJournalSplitHeader_TaxCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
            element.taxGroupModified();
            element.setAllowEditHeader(tmpLedgerJournalSplitHeader);
            ledgerJournalSplitPosting.validateAccountNumLines(tmpLedgerJournalSplitHeader);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpLedgerJournalSplitHeader_GrosAmountCur</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean ret = super();
            element.grosAmountmodified();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpLedgerJournalSplitHeader_TaxAmountCur</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean ret = super();
            element.taxAmountModified();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpLedgerJournalSplitHeader_NetAmountCur</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean ret = super();
            element.netAmountModified();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpLedgerJournalSplitLines_LedgerAccount</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>onSegmentChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// Custom logic when the user changes the selected segment.
        /// </summary>
        /// <param name = "_segment">The selected segment.</param>
        public void onSegmentChanged(DimensionControlSegment _segment)
        {
            super(_segment);

            element.segmentValueChangedDefaultDimensions(this, currentMainAccountId);

            currentMainAccountId = TmpLedgerJournalSplitLines_LedgerAccount.getValue(DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount));
            currentMainAccountId = ledgerJournalEngine.onSegmentChangedForPrimaryAccount(TmpLedgerJournalSplitLines_LedgerAccount, _segment, currentMainAccountId, ledgerJournalTrans);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpLedgerJournalSplitLines_AmountCurDebit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        boolean leave()
        {
            boolean ret = super();
            if (tmpLedgerJournalSplitLines.AmountCurDebit)
            {
                tmpLedgerJournalSplitLines.AmountCurCredit = 0;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean ret = super();
            if (tmpLedgerJournalSplitLines.AmountCurDebit)
            {
                tmpLedgerJournalSplitLines.AmountCurCredit = 0;
            }
            tmpLedgerJournalSplitLines_ds.write();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TmpLedgerJournalSplitLines_AmountCurCredit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        boolean leave()
        {
            boolean ret = super();
            if (tmpLedgerJournalSplitLines.AmountCurCredit)
            {
                tmpLedgerJournalSplitLines.AmountCurDebit = 0;
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean ret = super();
            if (tmpLedgerJournalSplitLines.AmountCurCredit)
            {
                tmpLedgerJournalSplitLines.AmountCurDebit = 0;
            }
            tmpLedgerJournalSplitLines_ds.write();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TmpLedgerJournalSplitHeader</Name>
			<Table>TmpLedgerJournalSplitHeader</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CashDiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GrosAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NetAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CounterField>LineNum</CounterField>
			<Index>LineNumIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TmpLedgerJournalSplitLines</Name>
			<Table>TmpLedgerJournalSplitLines</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AmountCurCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransTxt</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TmpLedgerJournalSplitHeader</JoinSource>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS59234</Caption>
		<Pattern xmlns="">TaskParentChild</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>HeaderActionPane</Name>
				<ElementPosition>357913941</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>HeaderButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>UpdateJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<NeededPermission>Update</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS4167</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalRight</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>HeaderTab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPage</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpLedgerJournalSplitHeader_TaxGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroup</DataField>
										<DataSource>TmpLedgerJournalSplitHeader</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpLedgerJournalSplitHeader_TaxItemGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroup</DataField>
										<DataSource>TmpLedgerJournalSplitHeader</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpLedgerJournalSplitHeader_TaxCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxCode</DataField>
										<DataSource>TmpLedgerJournalSplitHeader</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TmpLedgerJournalSplitHeader_GrosAmountCur</Name>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>GrosAmountCur</DataField>
										<DataSource>TmpLedgerJournalSplitHeader</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TmpLedgerJournalSplitHeader_TaxAmountCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxAmountCur</DataField>
										<DataSource>TmpLedgerJournalSplitHeader</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TmpLedgerJournalSplitHeader_NetAmountCur</Name>
										<ElementPosition>1879048185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>NetAmountCur</DataField>
										<DataSource>TmpLedgerJournalSplitHeader</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>TmpLedgerJournalSplitHeader</DataSource>
								<VisibleRows>5</VisibleRows>
								<VisibleRowsMode>Fixed</VisibleRowsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS59232</Caption>
						<DataSource>TmpLedgerJournalSplitHeader</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>TmpLedgerJournalSplitHeader</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupSplitter</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<HideIfEmpty>No</HideIfEmpty>
				<BackgroundColor>WindowBackground</BackgroundColor>
				<FrameType>None</FrameType>
				<Style>SplitterHorizontalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Lines</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Overview</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>OverviewActionPane</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>AddRemoveButtonGroup</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>OverviewAdd</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Command>New</Command>
												<Primary>Yes</Primary>
												<Text>@sys60080</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>OverviewRemove</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>CommandButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Command>DeleteRecord</Command>
												<Primary>Yes</Primary>
												<SaveRecord>No</SaveRecord>
												<Text>@sys26394</Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Accounts</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>TmpLedgerJournalSplitLines_LedgerAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>SegmentedEntry</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>TmpLedgerJournalSplitLines</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TmpLedgerJournalSplitLines_TransTxt</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransTxt</DataField>
										<DataSource>TmpLedgerJournalSplitLines</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TmpLedgerJournalSplitLines_AmountCurDebit</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurDebit</DataField>
										<DataSource>TmpLedgerJournalSplitLines</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TmpLedgerJournalSplitLines_AmountCurCredit</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountCurCredit</DataField>
										<DataSource>TmpLedgerJournalSplitLines</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>TmpLedgerJournalSplitLines</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<DataSource>TmpLedgerJournalSplitLines</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>TmpLedgerJournalSplitLines</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Main</Name>
				<AllowEdit>No</AllowEdit>
				<ElementPosition>715827882</ElementPosition>
				<Enabled>No</Enabled>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Source</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Skip>Yes</Skip>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Voucher</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Skip>Yes</Skip>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>Voucher</DataMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CurrencyCode</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Skip>Yes</Skip>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>CurrencyCode</DataMethod>
							</AxFormControl>
						</Controls>
						<Caption>@SYS11258</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>TotalAmounts</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Skip>Yes</Skip>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>OriginalAmountCur</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Skip>Yes</Skip>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>OriginalAmountCur</DataMethod>
								<Label>@SYS59621</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>TotalAllocatedAmountCur</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>TotalAllocatedAmountCur</DataMethod>
								<Label>@SYS59630</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>TotalRemainAmount</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Skip>Yes</Skip>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>TotalRemainAmount</DataMethod>
								<Label>@SYS53728</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<Caption>@SYS25311</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>LineAmounts</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Skip>Yes</Skip>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>TotalTaxAmountCur</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Skip>Yes</Skip>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>TotalTaxAmountCur</DataMethod>
								<Label>@SYS5878</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>TotalNetAmountCur</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Skip>Yes</Skip>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>TotalNetAmountCur</DataMethod>
								<Label>@SYS1019</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>RemainAmountLines</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Skip>Yes</Skip>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>RemainAmountLines</DataMethod>
								<Label>@SYS59625</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<Caption>@SYS8311</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>