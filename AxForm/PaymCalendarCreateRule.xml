<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PaymCalendarCreateRule</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PaymCalendarCreateRule extends FormRun
{
    private Name paymCalendarRuleName;
    private Description paymCalendarRuleDescription;
    private PaymCalendarRuleType paymRuleType;
    private PaymCalendarModuleType paymCalendarModuleType;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        PaymCalendarICreateRule callerForm = element.args().caller() as PaymCalendarICreateRule;

        if (callerForm)
        {
            paymCalendarModuleType = callerForm.getPaymCalendarModuleType();
        }
        else
        {
            throw error(Error::missingParameter(this));
        }

        paymRuleType = PaymCalendarRuleType::Specific;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRuleName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the control rule name is valid.
    /// </summary>
    /// <returns>
    /// true if the rule name is valid; otherwise, false.
    /// </returns>
    public boolean validateRuleName()
    {
        boolean isValid = true;

        if (ruleName.valueStr() != '')
        {
            // Determine whether the rule name is valid.
            isValid = !PaymCalendarRule::existForRuleName(paymCalendarModuleType, ruleName.valueStr());

            if (!isValid)
            {
                isValid = checkFailed(strFmt("@SYS153389", "@CashManagement:GLS220431","@CashManagement:GLS220446"));
            }
        }
        else
        {
            isValid = checkFailed(strFmt("@SYS84753", "@CashManagement:GLS220335"));
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPaymCalendarRule</Name>
				<Source><![CDATA[
    private PaymCalendarRule createPaymCalendarRule(Name _ruleName, Description _ruleDescription, PaymCalendarRuleType _ruleType)
    {
        PaymCalendarCriteriaRule criteriaRule;
        PaymCalendarRule paymCalendarRule;
        PaymCalendarLocationRule locationRule;

        switch (_ruleType)
        {
            case PaymCalendarRuleType::Specific:
                criteriaRule.Name = _ruleName;
                criteriaRule.Description = _ruleDescription;
                criteriaRule.RuleType = _ruleType;
                criteriaRule.ModuleType = paymCalendarModuleType;
                criteriaRule.insert();
                paymCalendarRule = PaymCalendarRule::find(criteriaRule.RecId);
                break;

            case PaymCalendarRuleType::LegalEntityLocation:
                paymCalendarRule.Name = _ruleName;
                paymCalendarRule.Description = _ruleDescription;
                paymCalendarRule.RuleType = _ruleType;
                paymCalendarRule.ModuleType = paymCalendarModuleType;
                paymCalendarRule.insert();
                break;

            case PaymCalendarRuleType::ThirdPartyLocation:
                locationRule.Name = _ruleName;
                locationRule.Description = _ruleDescription;
                locationRule.RuleType = _ruleType;
                locationRule.ModuleType = paymCalendarModuleType;
                locationRule.insert();
                paymCalendarRule = PaymCalendarRule::find(locationRule.RecId);
                break;
        }

        return paymCalendarRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        if (ruleName.validate())
        {
            PaymCalendarRule paymCalendarRule = this.createPaymCalendarRule(paymCalendarRuleName, paymCalendarRuleDescription, paymCalendarRuleType.selection());

            PaymCalendarICreateRule callerForm = element.args().caller() as PaymCalendarICreateRule;

            if (callerForm)
            {
                callerForm.positionToPaymCalendarRule(paymCalendarRule);
            }

            super();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>RuleName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        public void textChange()
        {
            super();

            // Keep the backing property in sync with the control text
            paymCalendarRuleName = ruleName.text();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            ret = ret && element.validateRuleName();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Description</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        public void textChange()
        {
            super();

            // Keep the backing property in sync with the control text
            paymCalendarRuleDescription = description.text();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>paymCalendarRuleType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            if (paymCalendarRuleType.selection() != PaymCalendarRuleType::Specific)
            {
                if (PaymCalendarRule::existForRuleType(paymCalendarModuleType, paymCalendarRuleType.selection()))
                {
                    if (paymCalendarRuleType.selection() == PaymCalendarRuleType::LegalEntityLocation)
                    {
                        return checkFailed("@CashManagement:GLS220347");
                    }
                    else if (paymCalendarModuleType == PaymCalendarModuleType::Vendor)
                    {
                        return checkFailed("@CashManagement:GLS220346");
                    }
                    else
                    {
                        return checkFailed("@CashManagement:GLS220354");
                    }
                }
            }

            ret = super();

            paymRuleType = paymCalendarRuleType.selection();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@CashManagement:PaymentCalendarRule</Caption>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>RuleName</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1176002949</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>Name</ExtendedDataType>
						<Label>@CashManagement:GLS220335</Label>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Description</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1533916890</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>Description</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>paymCalendarRuleType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1840700268</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<EnumType>PaymCalendarRuleType</EnumType>
						<Items />
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>AddButton</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<Text>@GLS220448</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>