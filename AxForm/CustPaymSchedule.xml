<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustPaymSchedule</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CustPaymSchedule extends FormRun
{
    CustInvoiceJour     custInvoiceJour;
    CustInvoiceTable    custInvoiceTable;
    SalesTable          salesTable;
    SalesParmTable      salesParmTable;
    MCRContinuityCustHeader mcrContinuityCustHeader;
    MCRContinuityCustLine   mcrContinuityCustLine;
    ProjProposalJour    projProposalJour;

    TableId                         paymtableId;
    Common                          paymCommonRecord;
    SysModule                       paymModule;
    DueDate                         priorDueDate;
    SalesComplementaryInvoiceHeader salesComplementaryInvoice;

    boolean updateCFMPlannedPayment;
    boolean allowDeleteSchedLine;
    boolean allowEditSchedLine;
}
]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        MCRContinuityCustHeader mcrContinuityCustHeaderLocal;
        SalesLine salesLine;

        boolean isValidPaymSchedTotals;

        AmountCur custPaymSchedTotal = custPaymSched.paymScheduleAmount();

        super();

        if (projProposalJour)
        {
            isValidPaymSchedTotals = projProposalJour.validatePaymSchedTotals();
        }
        else if (salesComplementaryInvoice)
        {
            isValidPaymSchedTotals = true;
        }
        else if (custInvoiceTable)
        {
            isValidPaymSchedTotals = custInvoiceTable.validatePaymSchedTotals();
        }
        else if (salesTable)
        {
            isValidPaymSchedTotals = salesTable.validatePaymSchedTotals();
        }
        else if (salesParmTable)
        {
            isValidPaymSchedTotals = salesParmTable.validatePaymSchedTotals();

            if (element.args().caller() is CustVendIRefreshFixedDueDate)
            {
                CustVendIRefreshFixedDueDate custVendCaller = element.args().caller() as CustVendIRefreshFixedDueDate;
                custVendCaller.refreshFixedDueDate();
            }
        }
        else if (mcrContinuityCustHeader && isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
        {
            mcrContinuityCustHeaderLocal=MCRContinuityCustHeader::findRecId(custPaymSched.ExtRecId,false);
            if (mcrContinuityCustHeaderLocal.BillUpFront && mcrContinuityCustHeaderLocal.PaymentScheduleId)
            {
                salesLine = SalesLine::findInventTransId(mcrContinuityCustHeaderLocal.InventTransId);
                isValidPaymSchedTotals = (custPaymSchedTotal == (salesLine.LineAmount + SalesLine::mcrCalcContinuityLineTax(salesLine)));
            }
        }

        if (!isValidPaymSchedTotals)
        {
            throw warning("@SYS85343");
        }

        if (updateCFMPlannedPayment &&
            custPaymSched.ExtRecId &&
            CFMParameters::isModuleEnabled())
        {
            CFMPlannedPaymentCalc cfmPlannedPaymentCalc = CFMPlannedPaymentCalc::construct(this.args().record());

            if (cfmPlannedPaymentCalc)
            {
                cfmPlannedPaymentCalc.calc();
            }
        }
 
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAdjustedDate</Name>
				<Source><![CDATA[
    public PaymCalendarAdjustedDate getAdjustedDate(TransDate _dueDate, PaymentDueDateUpdatePolicy _updatePolicy)
    {
        PaymCalendarAdjustedDate paymCalendarAdjustedDate;

        switch (paymtableId)
        {
            case tableNum(CustInvoiceJour) :
                paymCalendarAdjustedDate = PaymCalendarSourceCustInvoiceJournal::getAdjustedDate(_dueDate, _updatePolicy, custInvoiceJour);
                break;

            case tableNum(CustInvoiceTable) :
                paymCalendarAdjustedDate = CustFreeInvoiceCalcTotals::getAdjustedDueDate(_dueDate, _updatePolicy, custInvoiceTable);
                break;

            case tableNum(SalesParmTable) :
                paymCalendarAdjustedDate = PaymCalendarSourceSalesOrderParm::getAdjustedDueDate(_dueDate, _updatePolicy, salesParmTable);
                break;
            }

        return paymCalendarAdjustedDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (!element.args().record())
        {
            throw error(Error::missingRecord(this.name()));
        }

        super();

        if (TaxParameters::find().CashDiscOnInvoice)
        {
            custPaymSchedLine_ds.object(fieldNum(CustPaymSchedLine, DiscDate)).visible(false);
            custPaymSchedLine_ds.object(fieldNum(CustPaymSchedLine, DiscAmount)).visible(false);
        }
        }

]]></Source>
			</Method>
			<Method>
				<Name>isPaymCalendarActive</Name>
				<Source><![CDATA[
    public boolean isPaymCalendarActive()
    {
        boolean     isActive;

        switch (paymtableId)
        {
            case tableNum(CustInvoiceJour) :
            case tableNum(CustInvoiceTable) :
            case tableNum(SalesParmTable) :
            isActive = true;
            }

        return isActive;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>CustPaymSched</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            SalesTable          tmpSalesTable;
            FormRun             formRun;

            custPaymSched.data(this.queryRun().get(tableNum(CustPaymSched)));

            if (custPaymSched)
            {
                ttsbegin;

                select forupdate tmpSalesTable
                    where tmpSalesTable.RecId == custPaymSched.ExtRecId
                    && tmpSalesTable.TableId == custPaymSched.ExtTableId;

                super();

                if (tmpSalesTable)
                {
                    tmpSalesTable.PaymentSched = '';
                    tmpSalesTable.update();
                }

                ttscommit;
            }

            formRun = element.args().caller();

            if (formRun)
            {
                formRun.dataSource(1).research();
            }
            }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        void linkActive()
        {
            FormDataSource      callerDataSource;
            CustVendPaymSched   custVendPaymSched;
            TableId             tableId;
            RecId               recId;

            super();

            tableId = element.args().dataset();
            recId   = element.args().record().RecId;

            paymtableId = element.args().dataset();
            paymCommonRecord   = element.args().record();
            paymModule = SysModule::Cust;

            calc.enabled(true);

            switch (tableId)
            {
                case tableNum(CustInvoiceJour) :
                    custInvoiceJour = element.args().record();
                    if (custInvoiceJour.LedgerVoucher)
                    {
                        calc.enabled(false);
                    }
                    break;
                case tableNum(CustInvoiceTable) :
                    custInvoiceTable = element.args().record();
                    break;
                case tableNum(SalesTable) :
                    salesTable = element.args().record();
                    calc.visible(true);

                    if (salesTable.canInvoiceOrderFromCurrentSalesStatus())
                    {
                        if (!CustPaymSched::exist(tableId, recId))
                        {
                            custVendPaymSched = CustVendPaymSched::construct(SysModule::Cust, salesTable);
                            custVendPaymSched.copyPaymSched(PaymSched::find(salesTable.PaymentSched));
                            custPaymSched_DS.executeQuery();
                        }
                    }

                    copyPreciselyToInvoice.visible(true);
                    break;
                case tableNum(SalesParmTable) :
                    salesParmTable = element.args().record();
                    calc.visible(true);
                    break;
                case tableNum(MCRContinuityCustHeader):
                    if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
                    {
                        mcrContinuityCustHeader=element.args().record();
                        calc.visible(true);
                    }
                    break;
                case tableNum(ProjProposalJour) :
                    projProposalJour = element.args().record();
                    paymModule = SysModule::Project;
                    calc.visible(true);
                    break;
                case tableNum(SalesComplementaryInvoiceHeader):
                    salesComplementaryInvoice = element.args().record();
                    break;
            }

            callerDataSource = FormDataUtil::getFormDataSource(element.args().record());

            custPaymSched_ds.allowCreate    (callerDataSource.allowCreate());
            custPaymSched_ds.allowEdit      (callerDataSource.allowEdit());
            custPaymSched_ds.allowDelete    (callerDataSource.allowDelete());

            custPaymSched_ds.enableFields();
        }

]]></Source>
					</Method>
					<Method>
						<Name>enableFields</Name>
						<Source><![CDATA[
        void enableFields()
        {
            switch (custPaymSched.PaymSchedBy)
            {
                case PaymSchedBy::AmountByPayment :
                custPaymSched_ds.object(fieldNum(CustPaymSched, NumOfPayment)).allowEdit(false);
                    custPaymSched_ds.object(fieldNum(CustPaymSched, PaymentAmount)).allowEdit(true);
                    custPaymSched_ds.object(fieldNum(CustPaymSched, QtyUnit)).allowEdit(true);
                    break;

                case PaymSchedBy::NumOfPayment :
                custPaymSched_ds.object(fieldNum(CustPaymSched, NumOfPayment)).allowEdit(true);
                    custPaymSched_ds.object(fieldNum(CustPaymSched, PaymentAmount)).allowEdit(false);
                    custPaymSched_ds.object(fieldNum(CustPaymSched, QtyUnit)).allowEdit(true);
                    break;

                case PaymSchedBy::Total,
                     PaymSchedBy::Specified :
                    custPaymSched_ds.object(fieldNum(CustPaymSched, NumOfPayment)).allowEdit(false);
                    custPaymSched_ds.object(fieldNum(CustPaymSched, PaymentAmount)).allowEdit(false);
                    custPaymSched_ds.object(fieldNum(CustPaymSched, QtyUnit)).allowEdit(false);
                    break;

                default :
            }
            }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>PaymSchedBy</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                custPaymSched_ds.enableFields();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CustPaymSchedLine</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
    /// <summary>
        /// Activated when there is a Split payment option is marked.
        /// </summary>
        /// <returns>
        /// Returns true if it is split payment, otherwise returns false.
        /// </returns>
        public int active()
        {
            int ret;

            ret = super();

            if (CustPaymSchedLine.SplitPayment_IT)
            {
                custPaymSchedLine_ds.allowEdit(false);
                custPaymSchedLine_ds.allowDelete(false);
            }
                else
            {
                custPaymSchedLine_ds.allowEdit(allowEditSchedLine);
                custPaymSchedLine_ds.allowDelete(allowDeleteSchedLine);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        void linkActive()
        {
            FormDataSource  callerDataSource;
            TableId             tableId;

            super();

            if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
            {
                tableId = element.args().dataset();
            }
                callerDataSource = FormDataUtil::getFormDataSource(element.args().record());

            custPaymSchedLine_ds.allowCreate    (callerDataSource.allowCreate());
            custPaymSchedLine_ds.allowEdit      (callerDataSource.allowEdit());
            custPaymSchedLine_ds.allowDelete    (callerDataSource.allowDelete());
            if (isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
            {
                // The Is billed check box will indicate if a payment schedule line has been
                // billed or not. If the line is billed, the amounts on the line cannot be
                // changed and the calculate button will be disabled.
                grid_MCRIsBilled.visible(false);
                if (tableId == tableNum(MCRContinuityCustHeader))
                {
                    grid_MCRIsBilled.visible(true);
                    if (custPaymSchedLine.mcrContinuityPaymRecID!=0)
                    {
                        custPaymSchedLine_ds.allowEdit(callerDataSource.allowEdit(false));
                        calc.enabled(false);
                    }
                    }
                }

            //+Kem
            if (callerDataSource.table() == tableNum(ProjProposalJour))
            {
                // Because of the dataSource is set to no in all Allow-levels, this overrides its
                custPaymSchedLine_ds.allowCreate(true);
                custPaymSchedLine_ds.allowEdit  (true);
                custPaymSchedLine_ds.allowDelete(true);
            }
                //-Kem

            allowEditSchedLine      = custPaymSchedLine_ds.allowEdit();
            allowDeleteSchedLine    = custPaymSchedLine_ds.allowDelete();

            custPaymSchedLine_ds.active();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();

            updateCFMPlannedPayment = true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();

            updateCFMPlannedPayment = true;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>DueDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                PaymTerm paymTerm;
                PaymCalendarAdjustedDate paymCalendarAdjustedDate;
                PaymTermId paymTermId;

                super();

                // perform the payment calendar work only for the required countries
                if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && element.isPaymCalendarActive() && custPaymSchedLine.DueDate)
                {
                    // find the terms of payment
                    paymTermId = custInvoiceTable.Payment ? custInvoiceTable.Payment : salesParmTable.salesTable().Payment;
                    paymTerm = PaymTerm::find(paymTermId);

                    if (paymTerm.CustomerUpdateDueDate != PaymentDueDateUpdatePolicy::NoUpdate)
                    {
                        paymCalendarAdjustedDate = element.getAdjustedDate(custPaymSchedLine.DueDate, paymTerm.CustomerUpdateDueDate);
                        custPaymSchedLine.DueDate = PaymCalendarProcessor::getAdjustedDueDate(custPaymSchedLine.DueDate, priorDueDate, paymCalendarAdjustedDate);
                    }
                    }
                }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Calc</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            if ((custPaymSched.existLines() && CustVendPaymSched::prompt(custPaymSched)) || ! (custPaymSched.existLines()))
            {
                CustVendPaymSched::deletePaymSchedLines(custPaymSched, custPaymSchedLine);

                if (custInvoiceJour)
                {
                    custInvoiceJour.createPaymentSched();
                }
                    else
                {
                    if (custInvoiceTable)
                    {
                        custInvoiceTable.createPaymentSched();
                    }
                        else
                    {
                        if (salesParmTable)
                        {
                            salesParmTable.createPaymentSched();
                        }
                            else if (mcrContinuityCustHeader
                            && isConfigurationkeyEnabled(configurationKeyNum(MCRCallCenter)))
                        {
                            MCRContinuityCustHeader::recalcPaymentSchedLines(mcrContinuityCustHeader);
                        }
                            else
                        {
                            if (salesTable)
                            {
                                salesTable.createPaymentSched();
                            }
                                else
                            {
                                if (projProposalJour)
                                {
                                    projProposalJour.createPaymentSchedule();
                                }
                                    if (salesComplementaryInvoice)
                                {
                                    salesComplementaryInvoice.createPaymentSched();
                                }
                                }
                            }
                        }
                    }

                custPaymSched_ds.research();
            }
                custPaymSched_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Grid_DueDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();

            priorDueDate = this.dateValue();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CustPaymSched</Name>
			<Table>CustPaymSched</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CopyPreciselyToInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExtRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExtTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LowestAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRMiscchargeDist</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRRefTableID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumOfPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentType_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSchedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PeriodUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxDistribution</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustPaymSchedLine</Name>
			<Table>CustPaymSchedLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CFMPrepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRAmountDueChanged</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRContinuityPaymRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRInstallmentPaymRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPercentChange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRRetAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRShipping</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentType_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SplitPayment_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>CustPaymSched</JoinSource>
			<LinkType>Active</LinkType>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS23027</Caption>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<StatusBarStyle xmlns="">Simple</StatusBarStyle>
		<TitleDataSource xmlns="">CustPaymSched</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>805306367</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Calc</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<LeftMode>RightEdge</LeftMode>
								<NeededPermission>Manual</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS117</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PaymentSched</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_Name</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>CustPaymSched</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_Description</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>CustPaymSched</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Identification</DataGroup>
								<DataSource>CustPaymSched</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymentSchedule</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PaymentSchedule_PaymSchedBy</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsReceivable:CustPaymSchedule_PaymentSchedule_PaymSchedBy</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymSchedBy</DataField>
										<DataSource>CustPaymSched</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PaymentSchedule_PeriodUnit</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsReceivable:CustPaymSchedule_PaymentSchedule_PeriodUnit</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PeriodUnit</DataField>
										<DataSource>CustPaymSched</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>PaymentSchedule_QtyUnit</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsReceivable:CustPaymSchedule_PaymentSchedule_QtyUnit</HelpText>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>QtyUnit</DataField>
										<DataSource>CustPaymSched</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>PaymentSchedule_NumOfPayment</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsReceivable:CustPaymSchedule_PaymentSchedule_NumOfPayment</HelpText>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>NumOfPayment</DataField>
										<DataSource>CustPaymSched</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PaymentSchedule_PaymentAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsReceivable:CustPaymSchedule_PaymentSchedule_PaymentAmount</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymentAmount</DataField>
										<DataSource>CustPaymSched</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PaymentSchedule_LowestAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsReceivable:CustPaymSchedule_PaymentSchedule_LowestAmount</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LowestAmount</DataField>
										<DataSource>CustPaymSched</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>PaymentSchedule</DataGroup>
								<DataSource>CustPaymSched</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CopyPreciselyToInvoice</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>CheckBox</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataField>CopyPreciselyToInvoice</DataField>
								<DataSource>CustPaymSched</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS23027</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PaymLines</Name>
						<ElementPosition>1476395006</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane1</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab1</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>NewDeleteGroup1</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>AddButton1</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Primary>Yes</Primary>
														<Text>@sys60080</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>RemoveButton1</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<MultiSelect>Yes</MultiSelect>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@sys26394</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>CustPaymSchedLine</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>CustPaymSchedLine</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Grid_DueDate</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DueDate</DataField>
										<DataSource>CustPaymSchedLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Grid_DueAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_AccountsReceivable:CustPaymSchedule_Grid_DueAmount</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DueAmount</DataField>
										<DataSource>CustPaymSchedLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Grid_DiscDate</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_AccountsReceivable:CustPaymSchedule_Grid_DiscDate</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DiscDate</DataField>
										<DataSource>CustPaymSchedLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Grid_DiscAmount</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DiscAmount</DataField>
										<DataSource>CustPaymSchedLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Grid_M_MCRDisplayIsBilled</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>MCRDisplayIsBilled</DataMethod>
										<DataSource>CustPaymSchedLine</DataSource>
										<Label>@MCR12662</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Grid_MCRShipping</Name>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>MCRShipping</DataField>
										<DataSource>CustPaymSchedLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Grid_PaymentType_ES</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymentType_ES</DataField>
										<DataSource>CustPaymSchedLine</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Grid_CFMPrepayment</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CFMPrepayment</DataField>
										<DataSource>CustPaymSchedLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Grid_SplitPayment_IT</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SplitPayment_IT</DataField>
										<DataSource>CustPaymSchedLine</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>PaymentSchedule</DataGroup>
								<DataSource>CustPaymSchedLine</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS8433</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Notes</Name>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Note</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Note_Notes</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Notes</DataField>
										<DataSource>CustPaymSched</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Note</DataGroup>
								<DataSource>CustPaymSched</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS13887</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FooterGroup</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>Grid_MCRIsBilled</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>MCRCallCenter</ConfigurationKey>
						<ElementPosition>1207959550</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataMethod>MCRDisplayIsBilled</DataMethod>
						<DataSource>CustPaymSchedLine</DataSource>
						<Label>@MCR12662</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>