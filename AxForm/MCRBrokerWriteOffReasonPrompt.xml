<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>MCRBrokerWriteOffReasonPrompt</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class MCRBrokerWriteOffReasonPrompt extends FormRun
    {
        boolean     okButtonClicked;
        AmountCur   diffOrExtra;
        boolean     closing;

}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    ///<summary>
    ///     Returns whether the form can close or not.
    /// </summary>
    /// <returns>
    ///     true if the form can be close; otherwise, false.
    /// </returns>
    /// <remarks>
    ///     If the cancel was selected, allow the form to close and pass
    ///     an argument with value no, meaning that the cancel did not happen.
    ///     If cancel was not selected on the prompt and the reason code
    ///     has a value, then pass back reason code.
    ///     However, if a reason code is not required, pass back an empty string
    ///     If cancel was not selected on the prompt and the reason code
    ///     does not have a value, then throw an error and do not let the
    ///     user leave the form.
    /// </remarks>
    public boolean canClose()
    {
        boolean ret;
        MCRBrokerClaimProcessingArgs brokerArgs;

        ret = super();
        if (ret)
        {
            if (!okButtonClicked)
            {
                element.args().parmEnum(NoYes::No);
            }
            else
            {
                ret = ret && this.checkDiffExtraCondition();

                if (ret)
                {
                    brokerArgs = new MCRBrokerClaimProcessingArgs();
                    brokerArgs.parmWriteOffReasonCode(ReasonCode.valueStr());
                    element.args().parmObject(brokerArgs);
                element.args().parmEnum(NoYes::Yes);
            }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()

    {
        Args formArgs = this.args();

        super();

        if (formArgs)
        {
            DiffOrExtra = str2num(formArgs.parm());
            closing = formArgs.parmEnum();
        }

        if (closing)
        {
            element.design().caption("@SYS18742");
        }
        else
        {
            element.design().caption("@SYS108667");
        }

        // If nothing is being written off or credited extra do not need a reason code
        if (DiffOrExtra == 0)
        {
            ReasonCode.visible(false);
            mainInstruction.visible(false);
        }
        else
        {
            mainInstruction.text(strFmt("@MCR34560", diffOrExtra));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkDiffExtraCondition</Name>
				<Source><![CDATA[
    private boolean checkDiffExtraCondition()
    {
        if (DiffOrExtra)
        {
            if (ReasonCode.valueStr() == '')
            {
                error ("@MCR10858");
                return false;
            }
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ReasonCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            new MenuFunction(menuitemDisplayStr(MCRBrokerDifferentialReason), MenuItemType::Display).run();
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup  lookup = SysTableLookup::newParameters(tableNum(MCRBrokerWriteOffReason), this);
            lookup.addLookupfield(fieldNum(MCRBrokerWriteOffReason, ReasonCode));
            lookup.addLookupfield(fieldNum(MCRBrokerWriteOffReason, Description));
            lookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (diffOrExtra != 0 && !MCRBrokerWriteOffReason::find(reasonCode.text()))
            {
                error(strFmt("@MCR12053", reasonCode.text()));
                return;
            }

            super();
            okButtonClicked = true;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CancelButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            okButtonClicked = false;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<IsObsolete>Yes</IsObsolete>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS86426</Caption>
		<Frame xmlns="">Dialog</Frame>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>MainInstruction</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<FontSize>13</FontSize>
				<ForegroundColor>ScrollBar</ForegroundColor>
				<Text></Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ReasonCode</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>MCRBrokerClaimWriteOffCode</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>