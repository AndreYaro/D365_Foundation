<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjUtil</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjUtil extends FormRun
{
    //argument class for the calculation
    ProjUtilCalcParams params;

    [FormObservable]
    RealBase            utilizationHours;
    [FormObservable]
    RealBase            burdenHours;
    [FormObservable]
    RealBase            notIncludedHours;
    RealBase            overtimeHours;
    [FormObservable]
    RealBase            normHours;
    [FormObservable]
    RealBase            finalCalcResult;

    ProjTable           projTable;
    boolean             showSubProjects;

    #DEFINE.projUtil('projUtil') //if altered, remember to also change in Transaction and Forecast forms

    TmpProjHourUtilExcelPivot      tmpExcelExport;

}
]]></Source>
			</Method>
			<Method>
				<Name>calcParams</Name>
				<Source><![CDATA[
    public ProjUtilCalcParams calcParams()
    {
        return params;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculate</Name>
				<Source><![CDATA[
    //runs the calculation based on current value of params
    //and assigns results to appropriate holders.
    public void calculate()
    {
        [utilizationHours, burdenHours, normHours, overtimeHours, notIncludedHours, finalCalcResult] =
            ProjUtilCalc::calculate(params, tmpExcelExport);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayBurdenHours</Name>
				<Source><![CDATA[
    public display RealBase displayBurdenHours()
    {
        return burdenHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayConsumedHours</Name>
				<Source><![CDATA[
    public display RealBase displayConsumedHours()
    {
        return this.displayIncludedHours() + this.displayNotIncludedHours();
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayFinalCalcResult</Name>
				<Source><![CDATA[
    public display RealBase displayFinalCalcResult()
    {
        return finalCalcResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayIncludedHours</Name>
				<Source><![CDATA[
    public display RealBase displayIncludedHours()
    {
        return utilizationHours + burdenHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayNormHours</Name>
				<Source><![CDATA[
    public display RealBase displayNormHours()
    {
        return normHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayNotIncludedHours</Name>
				<Source><![CDATA[
    public display RealBase displayNotIncludedHours()
    {
        return notIncludedHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayUtilHours</Name>
				<Source><![CDATA[
    public display RealBase displayUtilHours()
    {
        return utilizationHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editActualBudget</Name>
				<Source><![CDATA[
    public edit ProjActualBudgetOnly editActualBudget(boolean _set, ProjActualBudgetOnly _projActualBudgetOnly)
    {
        if (_set)
        {
            //set boolean parameter accordingly
            params.paramIsBudget(_projActualBudgetOnly == ProjActualBudgetOnly::Budget);
        }

        //return corresponding value
        if (params.paramIsBudget())
        {
            return ProjActualBudgetOnly::Budget;
        }
        else
        {
            return ProjActualBudgetOnly::Actual;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editBillableEfficiency</Name>
				<Source><![CDATA[
    public edit ProjBillableEfficiency editBillableEfficiency(boolean _set, ProjBillableEfficiency _projBillableEfficiency)
    {
        if (_set)
        {
            //set boolean parameter accordingly
            params.paramIsEfficiency(_projBillableEfficiency == ProjBillableEfficiency::Efficiency);
        }

        //return corresponding value
        if (params.paramIsEfficiency())
        {
            return ProjBillableEfficiency::Efficiency;
        }
        else
        {
            return ProjBillableEfficiency::Billable;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editDateFrom</Name>
				<Source><![CDATA[
    public edit TransDate editDateFrom(boolean _set, TransDate _dateFrom)
    {
        if (_set)
        {
            params.paramFromDate(_dateFrom);
        }

        return params.paramFromDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editDateTo</Name>
				<Source><![CDATA[
    public edit TransDate editDateTo(boolean _set, TransDate _dateTo)
    {
        TransDate result;

        if (_set)
        {
            params.paramToDate(_dateTo);
        }

        result = params.paramToDate();

        if (result == dateMax())
        {
            result = dateNull();
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editForecastId</Name>
				<Source><![CDATA[
    public edit ForecastModelSubId editForecastId(boolean _set, ForecastModelSubId _forecastModelSubId)
    {
        if (_set)
        {
            params.paramForecastModelId(_forecastModelSubId);
        }

        return params.paramForecastModelId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPeriod</Name>
				<Source><![CDATA[
    public edit ProjPeriodId editPeriod(boolean _set, ProjPeriodId _projPeriodId)
    {
        if (_set)
        {
            params.paramPeriodId(_projPeriodId);
        }

        return  params.paramPeriodId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (element.args().dataset() == tableNum(ProjTable))
        {
            projTable = element.args().record();
            if (projTable::child(projTable.projId))
            {
                showSubProjects = true;
            }
        }

        IncludeSubprojects.Visible(showSubProjects);

        //Create a calculation parameters object
        //and initialize it with any data coming from
        //our caller form.
        //
        params = ProjUtilCalcParams::construct();
        this.initFromArgs();

        //fill up fields with default values,
        //show/hide them as appropriate, etc.
        //
        this.initPeriodFromWorker();
        this.showHideForecastModel();
        this.setActualBudgetCaption();
        this.showHideFields();
        this.setControlDecimals();
        this.setProjPeriodDate();
        this.resetResults();

        //Set parameter to save to temp export file
        params.paramIsExcelExport(true);

        element.setButtonVisibility();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmFieldsFromResource</Name>
				<Source><![CDATA[
    private void initParmFieldsFromResource(ResourceRecId _resource)
    {
        params.paramFilterType(ProjUtilCalcFilterType::Employee);
        params.paramResource(_resource);
        params.paramResourceCategory(ResourceFacade::getResourceCategory(params.paramResource()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromArgs</Name>
				<Source><![CDATA[
    //sets up the calculation parameters based on the
    //args object that was passed in, which would determine
    //what view and what entity we were called from
    public void initFromArgs()
    {
        HcmWorker           hcmWorker;
        ResourceView        resourceView;
        ResResourcesListView resourceListPageItem;
        ProjCategory        projCategory;
        ProjCategoryGroup   projCategoryGroup;
        ProjInvoiceTable    projInvoiceTable;
        ProjWIPTable        projWIPTable;
        ProjGroup           projGroup;
        ProjSorting         projSorting;
        CustTable           custTable;
        ProjGrantView       projGrantView;
        ProjGrant           projGrant;

        //setup params object depending on where we were called from
        switch (element.args().dataset())
        {
            case tablenum(HcmWorker):
                hcmWorker = element.args().record();
                this.initParmFieldsFromResource(ResourceFacade::findOrCreateByWorker(hcmWorker.RecId));
                break;

            case tablenum(ResourceView):
                resourceView = element.args().record();
                this.initParmFieldsFromResource(resourceView.RecId);
                break;

            case tableNum(ResResourcesListView):
                resourceListPageItem = element.args().record();
                this.initParmFieldsFromResource(resourceListPageItem.Resource);
                break;

            case tablenum(ProjCategory):
                params.paramFilterType(ProjUtilCalcFilterType::Category);
                projCategory = element.args().record();
                params.paramFilterValue(projCategory.CategoryId);
                break;

            case tablenum(ProjCategoryGroup):
                params.paramFilterType(ProjUtilCalcFilterType::CategoryGroup);
                projCategoryGroup = element.args().record();
                params.paramFilterValue(projCategoryGroup.CategoryGroupId);
                break;

            case tablenum(ProjTable):
                projTable = element.args().record();
                if (IncludeSubprojects.value())
                {
                    params.paramFilterType(ProjUtilCalcFilterType::ProjectWithSubprojects);
                }
                else
                {
                    params.paramFilterType(ProjUtilCalcFilterType::Project);
                }
                params.paramFilterValue(projTable.ProjId);
                break;

            case(tablenum(ProjGrantView)):
                projGrantView           = element.args().record();
                projTable               = ProjTable::find(projGrantView.ProjId);
                params.paramFilterValue(projTable.ProjId);
                break;

            case(tablenum(ProjGrant)):
                projGrant               = element.args().record();
                select firstonly ProjId from projGrantView
                where projGrantView.GrantId == projGrant.GrantId;
                projTable               = ProjTable::find(projGrantView.ProjId);
                params.paramFilterValue(projTable.ProjId);
                break;

            case tablenum(ProjInvoiceTable):
                params.paramFilterType(ProjUtilCalcFilterType::InvoiceProject);
                projInvoiceTable = element.args().record();
                params.paramFilterValue(projInvoiceTable.ProjInvoiceProjId);
                break;

            case tablenum(ProjWIPTable):
                params.paramFilterType(ProjUtilCalcFilterType::EstimateProject);
                projWIPTable = element.args().record();
                params.paramFilterValue(projWIPTable.ProjId);
                break;

            case tablenum(ProjGroup):
                params.paramFilterType(ProjUtilCalcFilterType::ProjectGroup);
                projGroup = element.args().record();
                params.paramFilterValue(projGroup.ProjGroupId);
                break;

            case tablenum(CustTable):
                params.paramFilterType(ProjUtilCalcFilterType::Customer);
                custTable = element.args().record();
                params.paramFilterValue(custTable.AccountNum);
                break;

            case tablenum(ProjSorting):
                projSorting = element.args().record();
                if (projSorting.SortCode == ProjSortValue::Sorting1)
                {
                    params.paramFilterType(ProjUtilCalcFilterType::Sorting1);
                }
                else if (projSorting.SortCode == ProjSortValue::Sorting2)
                {
                    params.paramFilterType(ProjUtilCalcFilterType::Sorting2);
                }
                else if (projSorting.SortCode == ProjSortValue::Sorting3)
                {
                    params.paramFilterType(ProjUtilCalcFilterType::Sorting3);
                }
                params.paramFilterValue(projSorting.SortingId);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPeriodDates</Name>
				<Source><![CDATA[
    //gets dates for the first entry in the period lines table and
    //puts them into the date fields on this form
    //called when the period is changed, and initially
    //If the period is blank, it is not used and dates
    //should return to empty.
    public void initPeriodDates()
    {
        ProjPeriodLine projPeriodLine;

        if (params.paramPeriodId())
        {
            select firstonly PeriodFrom, PeriodTo from  projPeriodLine
                where projPeriodLine.PeriodId   == params.paramPeriodId();

            params.paramFromDate(projPeriodLine.PeriodFrom);
            params.paramToDate(projPeriodLine.PeriodTo);
        }
        else
        {
            params.paramFromDate(dateNull());
            params.paramToDate(dateMax());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPeriodFromWorker</Name>
				<Source><![CDATA[
    //sets the period to a default value when called from worker
    public void initPeriodFromWorker()
    {
        ProjPeriodId        projPeriodId;

        if (params.paramFilterType() == ProjUtilCalcFilterType::Employee)
        {
            projPeriodId = ResourceFacade::getPeriodId(params.paramResource());
            params.paramPeriodId(projPeriodId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetResults</Name>
				<Source><![CDATA[
    //clears the calculation results from the form,
    //greys out transaction breakdown buttons.
    //Call when the user changed some parameters in UI,
    //so the old calculation results no longer reflect
    //new settings.
    public void resetResults()
    {
        utilizationHours = 0;
        burdenHours = 0;
        notIncludedHours = 0;
        overtimeHours = 0;
        normHours = 0;
        finalCalcResult = 0;

        transactionButton.enabled(false);
        hourForecastButton.enabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setActualBudgetCaption</Name>
				<Source><![CDATA[
    public void setActualBudgetCaption()
    {
        if (params.paramIsBudget())
        {
            HoursNumbers.text("@SYS80981"); //budget
        }
        else
        {
            HoursNumbers.text("@SYS33313"); //actual
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonVisibility</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the visibility of transaction, forecast and export to excel buttons.
    /// </summary>
    private void setButtonVisibility()
    {
        AccessRight     menuItemAccessRight;
        SecurityRights  securityRights;

        securityRights = SecurityRights::construct();

        // Transaction button
        menuItemAccessRight = securityRights.menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(projTransEmpl));

        if (menuItemAccessRight == AccessRight::NoAccess)
        {
            TransactionButton.visible(false);
        }

        // Hour forecast button
        menuItemAccessRight = securityRights.menuItemAccessRight(SecurableType::MenuItemDisplay, menuitemDisplayStr(projForecastEmpl));

        if (menuItemAccessRight == AccessRight::NoAccess)
        {
            HourForecastButton.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlDecimals</Name>
				<Source><![CDATA[
    public void setControlDecimals()
    {
        int hourDec = ProjParameters::find().HourQtyDecimals;
        int rateDec = ProjParameters::find().UtilRateDecimals;

        consumed.noOfDecimals(hourDec);
        notIncluded.noOfDecimals(hourDec);
        included.noOfDecimals(hourDec);
        burden.noOfDecimals(hourDec);
        norm.noOfDecimals(hourDec);
        utilization.noOfDecimals(hourDec);

        utilizationRate.noOfDecimals(rateDec);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjPeriodDate</Name>
				<Source><![CDATA[
    //switches to and from date fields with different lookups
    //depending on which lookup we want to use based on currently
    //selected employee period.
    public void setProjPeriodDate(boolean visible = (params.paramPeriodId() != ''))
    {
        ProjPeriodFromTo.visible(visible);
        startDate.visible(!visible);
        endDate.visible(!visible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showHideButtons</Name>
				<Source><![CDATA[
    public void showHideButtons()
    {
        //enable actual transactions button and
        //disable forecast button if Actual is selected;
        //enable forecast and disable actual if Budget is selecte.
        transactionButton.enabled(!params.paramIsBudget());
        hourForecastButton.enabled(params.paramIsBudget());
    }

]]></Source>
			</Method>
			<Method>
				<Name>showHideFields</Name>
				<Source><![CDATA[
    //determine the look of the form based on
    //calculation parameters passed in
    public void showHideFields()
    {
        //values for all cases except employee view with periodId
        included.visible(true);
        includedCaption.visible(true);

        norm.visible(false);
        normCaption.visible(false);

        if (params.paramFilterType() == ProjUtilCalcFilterType::Employee)
        {
            editPeriod.allowEdit(true);

            if (params.paramPeriodId() != '')
            {
                included.visible(false);
                includedCaption.visible(false);

                norm.visible(true);
                normCaption.visible(true);
            }
        }
        else
        {
            editPeriod.allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showHideForecastModel</Name>
				<Source><![CDATA[
    //hides the forecast model field when "Budget" is not selected
    public void showHideForecastModel()
    {
        if (actualBudget.valueStr() != enum2str(ProjActualBudgetOnly::Budget))
        {
            forecastModel.visible(false);
        }
        else
        {
            forecastModel.visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    //checks all the input parameters and ensures
    //the calculation can proceed
    public boolean validate()
    {
        boolean ret = true;

        ret = params.validate();

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>tmpProjUtil</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CalculateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            //check the input is valid
            if (!element.validate())
            {
                return;
            }

            element.calculate();

            element.showHideButtons();

            //
            //do the setting of caption above numbers
            //here as opposed to on modified of Actual/Budget
            //selector to avoid labeling old results with new
            //caption.
            element.setActualBudgetCaption();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransactionButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            args = new Args();
            args.record(null);
            args.caller(element);
            args.parm(#projUtil);
            args.parmObject(element.calcParams());

            new MenuFunction(menuitemdisplaystr(projTransEmpl), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HourForecastButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args            args;

            args = new Args();
            args.record(null);
            args.caller(element);
            args.parm(#projUtil);
            args.parmObject(element.calcParams());

            new MenuFunction(menuitemdisplaystr(projForecastEmpl), MenuItemType::Display).run(args);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Type</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.resetResults();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ActualBudget</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.showHideForecastModel();
            element.resetResults();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ForecastModel</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.resetResults();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>IncludeSubprojects</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.resetResults();
            if (IncludeSubprojects.value())
            {
                params.paramFilterType(ProjUtilCalcFilterType::ProjectWithSubprojects);
            }
            else
            {
                params.paramFilterType(ProjUtilCalcFilterType::Project);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EditPeriod</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            //fill in dates and show/hide other controls
            //as appropriate.
            element.setProjPeriodDate();
            element.showHideFields();
            element.resetResults();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        boolean validate()
        {
            if (!ProjPeriodTable::exist(this.text()) && this.text())
            {
                // The period is not valid.
                return checkFailed("@SYS102630");
            }

            return true;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>StartDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.resetResults();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EndDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.resetResults();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjPeriodFromTo</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Lookup for the proj period control. It will just show start and end dates for the selected period.
        /// </summary>
        public void lookup()
        {
            var projPeriodLine = ProjPeriodLine::findFromPeriod(params.paramPeriodId(), params.paramFromDate());

            Args args;
            FormRun formRun;

            args = new Args(formStr(ProjPeriodLookup));
            args.caller(element);
            args.parm(params.paramPeriodId());
            args.record(projPeriodLine);
            args.lookupRecord(projPeriodLine);

            formRun = classfactory.formRunClass(args);
            formRun.init();
            this.performFormLookup(formRun);

            formRun.wait();

            projPeriodLine = formRun.selectRecordModeSelectedRecord();

            if (projPeriodLine.RecId != 0)
            {
                this.text(TSTimesheetTable::startDateEndDate(projPeriodLine.PeriodFrom, projPeriodLine.PeriodTo));
                params.paramFromDate(projPeriodLine.PeriodFrom);
                params.paramToDate(projPeriodLine.PeriodTo);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>tmpProjUtil</Name>
			<Table>tmpProjUtil</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>projId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS102380</Caption>
		<DataSource xmlns="">tmpProjUtil</DataSource>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<StatusBarStyle xmlns="">Simple</StatusBarStyle>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>CalculateButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS1085</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>TransactionButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS15191</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>HourForecastButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS102639</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ParametersTab</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>UtilizationHour</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Type</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editBillableEfficiency</DataMethod>
										<Items />
									</AxFormControl>
								</Controls>
								<Caption>@SYS102380</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Data</Name>
								<ElementPosition>1811939326</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ActualBudget</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editActualBudget</DataMethod>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ForecastModel</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsReceivable:ProjUtil_ForecastModel</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editForecastId</DataMethod>
										<Label>@SYS82923</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>IncludeSubprojects</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS321414</Label>
									</AxFormControl>
								</Controls>
								<Caption>@SYS7403</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@Proj:CalculateParameters</Caption>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PeriodsTab</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Period</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EditPeriod</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editPeriod</DataMethod>
										<Label>@SYS342891</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>StartDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editDateFrom</DataMethod>
										<Label>@SYS24050</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>EndDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editDateTo</DataMethod>
										<Label>@SYS80662</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjPeriodFromTo</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS40</Label>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS40</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>HoursTab</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>TabPageTabularFields</Pattern>
						<PatternVersion>1.0</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HoursGroup</Name>
								<ElementPosition>1879048190</ElementPosition>
								<ExtendedStyle>tabularFields</ExtendedStyle>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>TableCaption</Name>
										<ExtendedStyle>tabularFields_title</ExtendedStyle>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<AllowUserSetup>No</AllowUserSetup>
										<ArrangeMethod>None</ArrangeMethod>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ColumnTitles</Name>
										<ExtendedStyle>tabularFields_rowHeader</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStaticTextControl">
												<Name>HoursHeader</Name>
												<AllowEdit>No</AllowEdit>
												<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
												<Type>StaticText</Type>
												<FormControlExtension
													i:nil="true" />
												<Text></Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStaticTextControl">
												<Name>HoursNumbers</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ExtendedStyle>tabularFields_colLabel</ExtendedStyle>
												<Type>StaticText</Type>
												<FormControlExtension
													i:nil="true" />
												<Text>@SYS60110</Text>
											</AxFormControl>
										</Controls>
										<AllowUserSetup>No</AllowUserSetup>
										<ArrangeMethod>None</ArrangeMethod>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ConsumedHoursGroup</Name>
										<ExtendedStyle>tabularFields_row</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStaticTextControl">
												<Name>ConsumedCaption</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
												<FilterExpression>%1</FilterExpression>
												<Type>StaticText</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Text>@SYS102632</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Consumed</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ConfigurationKey>Project</ConfigurationKey>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>displayConsumedHours</DataMethod>
												<Label>@SYS102632</Label>
												<NoOfDecimals>-1</NoOfDecimals>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
										</Controls>
										<AllowUserSetup>No</AllowUserSetup>
										<ArrangeMethod>None</ArrangeMethod>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>NotIncludedHoursGroup</Name>
										<ExtendedStyle>tabularFields_row</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStaticTextControl">
												<Name>NotIncludedCaption</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
												<FilterExpression>%1</FilterExpression>
												<Type>StaticText</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Text>@SYS102633</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>NotIncluded</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>displayNotIncludedHours</DataMethod>
												<Label>@SYS102633</Label>
												<NoOfDecimals>-1</NoOfDecimals>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
										</Controls>
										<AllowUserSetup>No</AllowUserSetup>
										<ArrangeMethod>None</ArrangeMethod>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>IncludedHoursGroup</Name>
										<ExtendedStyle>tabularFields_row</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStaticTextControl">
												<Name>IncludedCaption</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048190</ElementPosition>
												<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
												<FilterExpression>%1</FilterExpression>
												<Type>StaticText</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Text>@SYS102634</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Included</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ConfigurationKey>Project</ConfigurationKey>
												<ElementPosition>1879048190</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>displayIncludedHours</DataMethod>
												<Label>@SYS102634</Label>
												<NoOfDecimals>-1</NoOfDecimals>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
										</Controls>
										<AllowUserSetup>No</AllowUserSetup>
										<ArrangeMethod>None</ArrangeMethod>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>BurdenHoursGroup</Name>
										<ExtendedStyle>tabularFields_row</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStaticTextControl">
												<Name>BurdenCaption</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2013265918</ElementPosition>
												<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
												<FilterExpression>%1</FilterExpression>
												<Type>StaticText</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Text>@SYS102635</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Burden</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2013265918</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>displayBurdenHours</DataMethod>
												<Label>@SYS102635</Label>
												<NoOfDecimals>-1</NoOfDecimals>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
										</Controls>
										<AllowUserSetup>No</AllowUserSetup>
										<ArrangeMethod>None</ArrangeMethod>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>NormHoursGroup</Name>
										<ExtendedStyle>tabularFields_row</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStaticTextControl">
												<Name>NormCaption</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2080374782</ElementPosition>
												<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
												<FilterExpression>%1</FilterExpression>
												<Type>StaticText</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Text>@SYS102636</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Norm</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2080374782</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>displayNormHours</DataMethod>
												<Label>@SYS102636</Label>
												<NoOfDecimals>-1</NoOfDecimals>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
										</Controls>
										<AllowUserSetup>No</AllowUserSetup>
										<ArrangeMethod>None</ArrangeMethod>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>UtilizationHoursGroup</Name>
										<ExtendedStyle>tabularFields_row</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStaticTextControl">
												<Name>UtilizationCaption</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2113929214</ElementPosition>
												<ExtendedStyle>tabularFields_rowLabel</ExtendedStyle>
												<FilterExpression>%1</FilterExpression>
												<Type>StaticText</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Text>@SYS102380</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>Utilization</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2113929214</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>displayUtilHours</DataMethod>
												<Label>@SYS102380</Label>
												<NoOfDecimals>-1</NoOfDecimals>
												<ShowLabel>No</ShowLabel>
											</AxFormControl>
										</Controls>
										<AllowUserSetup>No</AllowUserSetup>
										<ArrangeMethod>None</ArrangeMethod>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>TableFooter</Name>
										<ExtendedStyle>tabularFields_rowFooter</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<AllowUserSetup>No</AllowUserSetup>
										<ArrangeMethod>None</ArrangeMethod>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<AllowUserSetup>Restricted</AllowUserSetup>
								<ArrangeMethod>None</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS1151</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>UtilizationRateTab</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>UtilizationRateGroup</Name>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>UtilizationRate</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayFinalCalcResult</DataMethod>
										<Label>@SYS102638</Label>
										<NoOfDecimals>1</NoOfDecimals>
										<NoOfDecimalsMode>Fixed</NoOfDecimalsMode>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS102637</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>tmpProjUtil</DataSource>
				<Style>FastTabs</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>