<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>JournalizingDefinitionTrans</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class JournalizingDefinitionTrans extends FormRun
{
    QueryBuildRange     rangePurchasingTransactionType;
    QueryBuildRange     rangeAccountsPayableTransactionType;
    QueryBuildRange     rangeBudgetTransactionType;

    QueryBuildRange     rangeCustomerTransactionType;
    QueryBuildRange     rangeLedgerTransactionType;
    QueryBuildRange     rangeBankTransactionTypes;

    QueryBuildRange     rangeBudgetReservationJournalizingType;

    QueryBuildRange     rangePayrollTransactionType;
    HcmBenefitPlanLookup benefitPlanLookup;
    PayrollTaxCodeLookup taxCodeLookup;
    Integer             lastSel;
    SysDictEnum          dictEnumTableGroupAll;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        #ISOCountryRegionCodes

        boolean isBudgetReservationEnabled;

        LogisticsAddressCountryRegionId countryRegionId = LogisticsAddressCountryRegion::findByISOCode(#isoUS).CountryRegionId;
        super();

        if (!isConfigurationkeyEnabled(new DictTable(tableNum(EcoResCategory)).configurationKeyId()))
        {
            journalizingDefinitionPurchTrans_DS.linkType(FormLinkType::Passive);
            journalizingDefinitionPayablesTrans_DS.linkType(FormLinkType::Passive);
        }

        ctrlPurchasingTransactionType.selection(enum2int(PurchasingTransactionType::PurchaseRequisition));
        ctrlAccountsPayableTransactionType.selection(AccountsPayableTransactionType::APInvoice);
        ctrlBudgetTransactionType.selection(BudgetTransactionType::OriginalBudget);

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            ctrlBankTransactionTypes.selection(BankTransactionTypes::Paymentjournal);
            TabPageGeneralLedger.visible(PublicSectorUtils::isPurchYearEndEnabled()
                                            || PublicSectorUtils::isLedgerYearEndClosingEnabled());

            isBudgetReservationEnabled = PublicSectorUtils::isBudgetReservationEnabled();
            tabPageBudgetReservation_PSN.visible(isBudgetReservationEnabled);

            if (isBudgetReservationEnabled)
            {
                ctrlBudgetReservationJournalizingType_PSN.selection(enum2int(BudgetReservationJournalizingType_PSN::BudgetReservation));
            }
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(PayrollAdministration)))
        {
            ctrlPayrollTransactionType.selection(PayrollTransactionType::PayStatement);
            benefitPlanLookup = HcmBenefitPlanLookup::newCustomOptions(true, PayrollType::Contribution, false);
            taxCodeLookup = PayrollTaxCodeLookup::newCustomOptions(countryRegionId, true, NoYes::No, false);
        }
        dictEnumTableGroupAll = new SysDictEnum(enumNum(TableGroupAll));
                
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadPayrollTransCodeComboBox</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets up the option items of the combobox control <c>JournalizingDefinitionPayrollTrans_Code</c>
    /// </summary>
    public void loadPayrollTransCodeComboBox()
    {
        JournalizingDefinitionPayrollTrans_Code.clear();

        if (journalizingDefinitionPayrollTrans.LineType == PayrollPayStatementLineType::TaxContribution ||
            journalizingDefinitionPayrollTrans.LineType == PayrollPayStatementLineType::TaxDeduction)
        {
            // Set up combobox items Table, Group, and All
            JournalizingDefinitionPayrollTrans_Code.add(dictEnumTableGroupAll.value2Label(TableGroupAll::Table));
            JournalizingDefinitionPayrollTrans_Code.add(dictEnumTableGroupAll.value2Label(TableGroupAll::GroupId));
            JournalizingDefinitionPayrollTrans_Code.add(dictEnumTableGroupAll.value2Label(TableGroupAll::All));

            // Set to All as initial selected option on the Code combobox
            JournalizingDefinitionPayrollTrans_Code.selection(this.mapTableGroupAllToCustomValues(TableGroupAll::All));
        }
        else
        {
            // Set up combobox items Table and All
            JournalizingDefinitionPayrollTrans_Code.add(dictEnumTableGroupAll.value2Label(TableGroupAll::Table));
            JournalizingDefinitionPayrollTrans_Code.add(dictEnumTableGroupAll.value2Label(TableGroupAll::All));

            // Set to All as initial selected option on the Code combobox
            JournalizingDefinitionPayrollTrans_Code.selection(this.mapTableGroupAllToCustomValues(TableGroupAll::All));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapTableGroupAllToCustomValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Maps the <c>TableGroupAll</c> enum value to customized value used in combobox control <c>JournalizingDefinitionPayrollTrans_Code</c>
    /// </summary>
    /// <param name="_value">
    /// A value of base enum <c>TableGroupAll</c>.
    /// </param>
    /// <returns>
    /// The mapped value from the customized options.
    /// </returns>
    private int mapTableGroupAllToCustomValues(TableGroupAll _value)
    {
        int convertedValue;

        switch (JournalizingDefinitionPayrollTrans.LineType)
        {
            case PayrollPayStatementLineType::BenefitContribution:
            case PayrollPayStatementLineType::BenefitDeduction:
            case PayrollPayStatementLineType::Earning:
                switch (_value)
                {
                    case TableGroupAll::Table:
                        convertedValue = 0;
                        break;
                    case TableGroupAll::GroupId:
                        convertedValue = -1;
                        break;
                    case TableGroupAll::All:
                        convertedValue = 1;
                        break;
                }
                break;
            case PayrollPayStatementLineType::TaxContribution:
            case PayrollPayStatementLineType::TaxDeduction:
                convertedValue = _value;
                break;
        }

        return convertedValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parsePayrollTransCodeComboBoxValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the <c>Code</c> field value of <c>JournalizingDefinitionPayrollTrans</c> table based on
    /// the selected value of the <c>JournalizingDefinitionPayrollTrans_Code</c> combobox control
    /// </summary>
    public void parsePayrollTransCodeComboBoxValue()
    {
        if (journalizingDefinitionPayrollTrans.LineType == PayrollPayStatementLineType::TaxContribution ||
            journalizingDefinitionPayrollTrans.LineType == PayrollPayStatementLineType::TaxDeduction)
        {
            switch (journalizingDefinitionPayrollTrans_Code.selection())
            {
                case 0:
                    journalizingDefinitionPayrollTrans.Code = TableGroupAll::Table;
                    break;

                case 1:
                    journalizingDefinitionPayrollTrans.Code = TableGroupAll::GroupId;
                    break;

                case 2:
                    journalizingDefinitionPayrollTrans.Code = TableGroupAll::All;
                    journalizingDefinitionPayrollTrans.SpecificCode = 0;
                    journalizingDefinitionPayrollTrans.SpecificGroup = 0;
                    break;
            }
        }
        else
        {
            switch (journalizingDefinitionPayrollTrans_Code.selection())
            {
                case 0:
                    journalizingDefinitionPayrollTrans.Code = TableGroupAll::Table;
                    break;

                case 1:
                    journalizingDefinitionPayrollTrans.Code = TableGroupAll::All;
                    journalizingDefinitionPayrollTrans.SpecificCode = 0;
                    journalizingDefinitionPayrollTrans.SpecificGroup = 0;
                    break;
            }
        }

        element.updateDesign(JournalizingDefinitionModuleId::Payroll);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        this.setTabPage();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTabPage</Name>
				<Source><![CDATA[
    private void setTabPage()
    {
        JournalizingDefinition  journalizingDefinitionBuffer;
        if (element.args().record() && element.args().record().TableId == tableNum(JournalizingDefinition))
        {
            journalizingDefinitionBuffer = element.args().record();
            switch ( journalizingDefinitionBuffer.JournalizingDefinitionModuleValue )
            {
                case JournalizingDefinitionModuleId::Purchasing:
                    tabPagePurchasing.setFocus();
                    element.args().lookuprecord(JournalizingDefinitionPurchTrans::findByJournalizingDefinitionId(journalizingDefinitionBuffer.RecId));
                    journalizingDefinitionPurchTrans_ds.research();
                    break;

                case JournalizingDefinitionModuleId::AccountsPayable:
                    tabPageAccountsPayable.setFocus();
                    element.args().lookuprecord(JournalizingDefinitionPayablesTrans::findByJournalizingDefinitionId(journalizingDefinitionBuffer.RecId));
                    journalizingDefinitionPayablesTrans_ds.research();
                    break;

                case JournalizingDefinitionModuleId::Budget:
                    tabPageBudget.setFocus();
                    element.args().lookuprecord(JournalizingDefinitionBudgetTrans::findByJournalizingDefinitionId(journalizingDefinitionBuffer.RecId));
                    journalizingDefinitionBudgetTrans_ds.research();
                    break;

                case JournalizingDefinitionModuleId::BudgetReservation_PSN:
                    tabPageBudgetReservation_PSN.setFocus();
                    element.args().lookuprecord(JournalizingDefinitionBudgetReservation_PSN::findByJournalizingDefinitionId(journalizingDefinitionBuffer.RecId));
                    break;

                case JournalizingDefinitionModuleId::Bank:
                    if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                    {
                        tabPageBank.setFocus();
                        element.args().lookuprecord(JournalizingDefinitionBankTrans::findByJournalizingDefinitionId(journalizingDefinitionBuffer.RecId));
                        journalizingDefinitionBankTrans_ds.research();
                    }
                    break;

                case JournalizingDefinitionModuleId::Payroll:
                    if (isConfigurationkeyEnabled(configurationKeyNum(PayrollAdministration)))
                    {
                        tabPagePayroll.setFocus();
                        element.args().lookuprecord(JournalizingDefinitionPayrollTrans::findByJournalizingDefinitionId(journalizingDefinitionBuffer.RecId));
                        journalizingDefinitionPayrollTrans_ds.research();
                    }
                    break;
            }
        }
        else
        {
            if (isConfigurationkeyEnabled(configurationKeyNum(LogisticsBasic)))
            {
                tabPagePurchasing.setFocus();
                element.defaultDataSource(journalizingDefinitionPurchTrans_ds);
            }

            else if (isConfigurationkeyEnabled(configurationKeyNum(LedgerBasicBudget)))
            {
                tabPageBudget.setFocus();
                element.defaultDataSource(journalizingDefinitionBudgetTrans_ds);
            }
            else if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            {
                tabPageBank.setFocus();
                element.defaultDataSource(journalizingDefinitionBankTrans_ds);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(JournalizingDefinitionModuleId _journalizingDefinitionModuleId)
    {
        boolean allowEdit;

        switch ( _journalizingDefinitionModuleId )
        {
            case JournalizingDefinitionModuleId::Purchasing:

                accountRelationPurch.allowEdit(journalizingDefinitionPurchTrans.VendAccountCode != TableGroupAll::All);
                itemRelationPurch.allowEdit(journalizingDefinitionPurchTrans.ItemCode != TableGroupCategoryAll::All && journalizingDefinitionPurchTrans.ItemCode != TableGroupCategoryAll::Category);
                journalizingDefinitionPurchTrans_CategoryRelation.allowEdit(journalizingDefinitionPurchTrans.ItemCode == TableGroupCategoryAll::Category);
                break;

            case JournalizingDefinitionModuleId::AccountsPayable:

                editAccountRelationAP.allowEdit(journalizingDefinitionPayablesTrans.VendAccountCode!= TableGroupAll::All);
                editItemRelationAP.allowEdit(journalizingDefinitionPayablesTrans.ItemCode != TableGroupCategoryAll::All && journalizingDefinitionPayablesTrans.ItemCode != TableGroupCategoryAll::Category);
                journalizingDefinitionPayablesTrans_CategoryRelation.allowEdit(journalizingDefinitionPayablesTrans.ItemCode == TableGroupCategoryAll::Category);
                break;

            case JournalizingDefinitionModuleId::Budget:

                referenceGroupTransactionCode.allowEdit(journalizingDefinitionBudgetTrans.BudgetTransactionTypeCode == TableAll::Table);
                break;

            case JournalizingDefinitionModuleId::BudgetReservation_PSN:
                JournalizingDefinitionBudgetReservation_PSN_BudgetReservationType.allowEdit(journalizingDefinitionBudgetReservation_PSN.BudgetReservationTypeCode == TableAll::Table);
                break;

            case JournalizingDefinitionModuleId::Bank:
                if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
                {
                    editVendPaymModeRelation.allowEdit(journalizingDefinitionBankTrans.VendPaymModeCode != TableAll::All);
                    editBankRelation.allowEdit(journalizingDefinitionBankTrans.BankCode != TableGroupAll::All);
                }

                if (isConfigurationkeyEnabled(configurationKeyNum(PayrollAdministration)))
                {
                    allowEdit = ctrlBankTransactionTypes.selection() == BankTransactionTypes::PayrollDisbursementJournal;

                    JournalizingDefinitionBankTrans_BankCode.allowEdit(!allowEdit);
                    VendPaymModeCode.allowEdit(!allowEdit);
                }
                break;

            case JournalizingDefinitionModuleId::Payroll:
                if (isConfigurationkeyEnabled(configurationKeyNum(PayrollAdministration)))
                {
                    if (JournalizingDefinitionPayrollTrans.RecId == 0)
                    {
                        // Disables and enables controls on a new record
                        editSpecificCode.allowEdit(JournalizingDefinitionPayrollTrans.Code == TableGroupAll::Table ||
                                                   JournalizingDefinitionPayrollTrans.Code == TableGroupAll::GroupId);
                        JournalizingDefinitionPayrollTrans_Code.allowEdit(enum2str(JournalizingDefinitionPayrollTrans.LineType) != "");
                    }
                    else
                    {
                        // Disables controls on an existing record
                        editSpecificCode.allowEdit(false);
                        JournalizingDefinitionPayrollTrans_Code.allowEdit(false);
                    }
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>JournalizingDefinitionPurchTrans</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource dsJournalizingDefinitionPurch;
            super();

            dsJournalizingDefinitionPurch = journalizingDefinitionPurchTrans_ds.query().dataSourceTable(tableNum(JournalizingDefinitionPurchTrans));
            dsJournalizingDefinitionPurch.clearRanges();
            dsJournalizingDefinitionPurch.clearDynalinks();
            rangePurchasingTransactionType = dsJournalizingDefinitionPurch.addRange(fieldNum(JournalizingDefinitionPurchTrans,PurchasingTransactionType));
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Filters the <c>JournalizingDefinitionPurchTrans</c> table according to the transaction type.
        /// </summary>
        public void executeQuery()
        {
            if (isConfigurationkeyEnabled(new DictTable(tableNum(EcoResCategory)).configurationKeyId()))
            {
                rangePurchasingTransactionType.value(int2str(ctrlPurchasingTransactionType.selection()));
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enable or Disables the account relation and item relation fields.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public int active()
        {
            int ret;

            ret = super();
            element.updateDesign(JournalizingDefinitionModuleId::Purchasing);

            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            {
                accountRelationPurch.allowEdit(journalizingDefinitionPurchTrans.VendAccountCode != TableGroupAll::All);
                itemRelationPurch.allowEdit(journalizingDefinitionPurchTrans.ItemCode != TableGroupCategoryAll::All);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the values of <c>ItemCode</c>, <c>VendAccountCode</c> and <c>PurchasingTransactionType</c> fields of <c>JournalizingDefinitionPurchTrans</c> table.
        /// </summary>
        public void initValue()
        {
            super();
            journalizingDefinitionPurchTrans.ItemCode = TableGroupCategoryAll::All;
            journalizingDefinitionPurchTrans.VendAccountCode = TableGroupAll::All;
            journalizingDefinitionPurchTrans.PurchasingTransactionType = any2Enum(ctrlPurchasingTransactionType.selection());
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>EcoResCategory</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                Args args = new Args();

                args.caller(this);
                new MenuFunction(menuitemDisplayStr(ProcCategoryHierarchyManagement), MenuItemType::Display).run(args);
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return EcoResCategory::resolveCategoryHierarchyRole(
                    _formReferenceControl,
                    EcoResCategoryNamedHierarchyRole::Procurement);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return EcoResCategory::lookupCategoryHierarchyRole(
                    _formReferenceControl,
                    EcoResCategoryNamedHierarchyRole::Procurement);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>JournalizingDefinition</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = JournalizingDefinition::lookupRefCtrlJournalizingDefByModule(_formReferenceControl,JournalizingDefinitionModuleId::Purchasing);

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>JournalizingDefinitionPayablesTrans</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource dsJournalizingDefinitionAP;
            super();

            dsJournalizingDefinitionAP = journalizingDefinitionPayablesTrans_ds.query().dataSourceTable(tableNum(JournalizingDefinitionPayablesTrans));
            dsJournalizingDefinitionAP.clearRanges();
            dsJournalizingDefinitionAP.clearDynalinks();
            rangeAccountsPayableTransactionType = dsJournalizingDefinitionAP.addRange(fieldNum(JournalizingDefinitionPayablesTrans,AccountsPayableTransactionType));
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enable or Disables the account relation and item relation fields.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public int active()
        {
            int ret;

            ret = super();
            element.updateDesign(JournalizingDefinitionModuleId::AccountsPayable);

            if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
            {
                editAccountRelationAP.allowEdit(journalizingDefinitionPayablesTrans.VendAccountCode != TableGroupAll::All);
                editItemRelationAP.allowEdit(journalizingDefinitionPayablesTrans.ItemCode != TableGroupCategoryAll::All);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the values of <c>ItemCode</c>, <c>VendAccountCode</c> and <c>AccountsPayableTransactionType</c> fields of <c>JournalizingDefinitionPayablesTrans</c> table.
        /// </summary>
        public void initValue()
        {
            super();
            journalizingDefinitionPayablesTrans.ItemCode = TableGroupCategoryAll::All;
            journalizingDefinitionPayablesTrans.VendAccountCode = TableGroupAll::All;
            journalizingDefinitionPayablesTrans.AccountsPayableTransactionType = ctrlAccountsPayableTransactionType.selection();
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Filters the <c>JournalizingDefinitionPayablesTrans</c> table according to the transaction type.
        /// </summary>
        public void executeQuery()
        {
            if (isConfigurationkeyEnabled(new DictTable(tableNum(EcoResCategory)).configurationKeyId()))
            {
                rangeAccountsPayableTransactionType.value(int2str(ctrlAccountsPayableTransactionType.selection()));
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>EcoResCategory</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return EcoResCategory::resolveCategoryHierarchyRole(
                    _formReferenceControl,
                    EcoResCategoryNamedHierarchyRole::Procurement);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return EcoResCategory::lookupCategoryHierarchyRole(
                    _formReferenceControl,
                    EcoResCategoryNamedHierarchyRole::Procurement);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>JournalizingDefinition</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = JournalizingDefinition::lookupRefCtrlJournalizingDefByModule(_formReferenceControl,JournalizingDefinitionModuleId::AccountsPayable);

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>JournalizingDefinitionCustomerTrans</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource dsJournalizingDefinitionCust;

            super();
            dsJournalizingDefinitionCust = journalizingDefinitionCustomerTrans_ds.query().dataSourceTable(tableNum(JournalizingDefinitionCustomerTrans));
            rangeCustomerTransactionType = dsJournalizingDefinitionCust.addRange(fieldNum(JournalizingDefinitionCustomerTrans, CustomerTransactionType));
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the values of <c>MatchType</c> and <c>CustomerTransactionType</c> fields of <c>JournalizingDefinitionCustomerTrans</c> table.
        /// </summary>
        public void initValue()
        {
            super();

            if (any2Enum(ctrlAccountsReceivableTransactionType.selection()) == CustomerTransactionType::FreeTextInvoice ||
                any2Enum(ctrlAccountsReceivableTransactionType.selection()) == CustomerTransactionType::Interestnote )
            {
                journalizingDefinitionCustomerTrans.MatchType = BillingCodeBillingClassAll::BillingCode;
            }
            else if (any2Enum(ctrlAccountsReceivableTransactionType.selection()) == CustomerTransactionType::WriteOff)
            {
                journalizingDefinitionCustomerTrans.MatchType = BillingCodeBillingClassAll::BillingClassification;
            }
            journalizingDefinitionCustomerTrans.CustomerTransactionType = any2Enum(ctrlAccountsReceivableTransactionType.selection());
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Filters the <c>JournalizingDefinitionCustomerTrans</c> table according to the transaction type.
        /// </summary>
        public void executeQuery()
        {
            rangeCustomerTransactionType.value(int2str(ctrlAccountsReceivableTransactionType.selection()));
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables or disables the match code field.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public int active()
        {
            int ret;

            ret = super();
            editMatchCode.allowEdit(journalizingDefinitionCustomerTrans.MatchType != BillingCodeBillingClassAll::All);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>JournalizingDefinition</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = JournalizingDefinition::lookupRefCtrlJournalizingDefByModule(_formReferenceControl, JournalizingDefinitionModuleId::AccountsReceivable);

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>JournalizingDefinitionBudgetTrans</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            BudgetTransactionType budgetTransactionType;

            if (isConfigurationkeyEnabled(configurationKeyNum(LedgerBasicBudget)))
            {
                budgetTransactionType = ctrlBudgetTransactionType.selection();
                rangeBudgetTransactionType.value(int2str(enum2int(budgetTransactionType)));
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            journalizingDefinitionBudgetTrans.BudgetTransactionTypeCode = TableAll::All;
            journalizingDefinitionBudgetTrans.BudgetTransactionType = enum2int(ctrlBudgetTransactionType.selection());
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource dsJournalizingDefinitionBudget;

            super();

            dsJournalizingDefinitionBudget = this.query().dataSourceTable(tableNum(JournalizingDefinitionBudgetTrans));
            dsJournalizingDefinitionBudget.clearRanges();
            dsJournalizingDefinitionBudget.clearDynalinks();
            rangeBudgetTransactionType = dsJournalizingDefinitionBudget.addRange(fieldNum(JournalizingDefinitionBudgetTrans, BudgetTransactionType));
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            element.updateDesign(JournalizingDefinitionModuleId::Budget);
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BudgetTransactionCode</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = BudgetTransactionCode::lookupBudgetTransactionCodeByType(_formReferenceControl,ctrlBudgetTransactionType.selection());

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>JournalizingDefinition</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = JournalizingDefinition::lookupRefCtrlJournalizingDefByModule(_formReferenceControl,JournalizingDefinitionModuleId::Budget);

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>JournalizingDefinitionGeneralLedgerTrans</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Filters the <c>JournalizingDefinitionGeneralLedgerTrans</c> table according to the transaction type.
        /// </summary>
        public void executeQuery()
        {
            rangeLedgerTransactionType.value(int2str(ctrlLedgerTransactionType.selection()));

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the values of <c>LedgerTransType</c> and <c>FundClass</c> fields of <c>JournalizingDefinitionGeneralLedgerTrans</c> table.
        /// </summary>
        public void initValue()
        {
            super();

            journalizingDefinitionGeneralLedgerTrans.LedgerTransType = ctrlLedgerTransactionType.selection();
            journalizingDefinitionGeneralLedgerTrans.FundClass = FundClassValueAll::All;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource dsJournalizingDefinitionGL;

            super();

            dsJournalizingDefinitionGL = journalizingDefinitionGeneralLedgerTrans_ds.query().dataSourceTable(tableNum(JournalizingDefinitionGeneralLedgerTrans));
            rangeLedgerTransactionType = dsJournalizingDefinitionGL.addRange(fieldNum(JournalizingDefinitionGeneralLedgerTrans,LedgerTransType));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>JournalizingDefinition</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = JournalizingDefinition::lookupRefCtrlJournalizingDefByModule(_formReferenceControl, JournalizingDefinitionModuleId::GeneralLedger);

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>JournalizingDefinitionBankTrans</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            BankTransactionTypes bankTransactionTypes = ctrlBankTransactionTypes.selection();
            rangeBankTransactionTypes.value(int2str(enum2int(bankTransactionTypes)));
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the values of BankCode, MethodOfPaymentCode and BankTransactionType fields of <c>JournalizingDefinitionBankTrans</c> table.
        /// </summary>
        public void initValue()
        {
            super();
            journalizingDefinitionBankTrans.BankCode = TableGroupAll::All;
            journalizingDefinitionBankTrans.VendPaymModeCode = TableAll::All;
            journalizingDefinitionBankTrans.BankTransactionTypes = ctrlBankTransactionTypes.selection();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enable or Disables the bank relation and method of payment relation fields.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public int active()
        {
            int ret;

            ret = super();
            element.updateDesign(JournalizingDefinitionModuleId::Bank);
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource dsJournalizingDefinitionBankTrans;

            super();

            dsJournalizingDefinitionBankTrans = journalizingDefinitionBankTrans_ds.query().dataSourceTable(tableNum(JournalizingDefinitionBankTrans));
            dsJournalizingDefinitionBankTrans.clearRanges();
            dsJournalizingDefinitionBankTrans.clearDynalinks();
            rangeBankTransactionTypes = dsJournalizingDefinitionBankTrans.addRange(fieldNum(JournalizingDefinitionBankTrans, BankTransactionTypes));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>JournalizingDefinition</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = JournalizingDefinition::lookupRefCtrlJournalizingDefByModule(_formReferenceControl,JournalizingDefinitionModuleId::Bank);

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>JournalizingDefinitionPayrollTrans</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            element.updateDesign(JournalizingDefinitionModuleId::Payroll);
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            PayrollTransactionType payrollTransactionType;

            if (isConfigurationkeyEnabled(configurationKeyNum(PayrollAdministration)))
            {
                payrollTransactionType = ctrlPayrollTransactionType.selection();
                rangePayrollTransactionType.value(int2str(enum2int(payrollTransactionType)));
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            // Set Code to have no value initially
            journalizingDefinitionPayrollTrans.Code = dictEnumTableGroupAll.index2Value(-1);

            journalizingDefinitionPayrollTrans.PayrollTransactionType = enum2int(ctrlPayrollTransactionType.selection());
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource dsJournalizingDefinitionPayroll;
            super();

            dsJournalizingDefinitionPayroll = journalizingDefinitionPayrollTrans_ds.queryBuildDataSource();
            dsJournalizingDefinitionPayroll.clearRanges();
            dsJournalizingDefinitionPayroll.clearDynalinks();
            rangePayrollTransactionType = dsJournalizingDefinitionPayroll.addRange(fieldNum(JournalizingDefinitionPayrollTrans,PayrollTransactionType));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Code</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.parsePayrollTransCodeComboBoxValue();

                if (journalizingDefinitionPayrollTrans.Code == TableGroupAll::All)
                {
                    journalizingDefinitionPayrollTrans.SpecificCode = 0;
                    journalizingDefinitionPayrollTrans.SpecificGroup = 0;
                }

                element.updateDesign(JournalizingDefinitionModuleId::Payroll);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>JournalizingDefinition</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;
                JournalizingDefinition localJournalizingDefintion;

                ret = super(_formReferenceControl);

                if (ret && ret.RecId)
                {
                    localJournalizingDefintion = JournalizingDefinition::findByRecId(ret.RecId);

                    if (localJournalizingDefintion.JournalizingDefinitionModuleValue != JournalizingDefinitionModuleId::Payroll)
                    {
                        ret = null;
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common ret;

                ret = JournalizingDefinition::lookupRefCtrlJournalizingDefByModule(_formReferenceControl,JournalizingDefinitionModuleId::Payroll);

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LineType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (JournalizingDefinitionPayrollTrans.orig().LineType != JournalizingDefinitionPayrollTrans.LineType)
                {
                    JournalizingDefinitionPayrollTrans.Code = TableGroupAll::All;
                    JournalizingDefinitionPayrollTrans.SpecificCode = 0;
                    JournalizingDefinitionPayrollTrans.SpecificGroup = 0;
                    JournalizingDefinitionPayrollTrans.JournalizingDefinition = 0;
                }

                element.loadPayrollTransCodeComboBox();
                element.updateDesign(JournalizingDefinitionModuleId::Payroll);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>JournalizingDefinitionBudgetReservation_PSN</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            BudgetReservationJournalizingType_PSN budgetReservationJournalizingType_PSN;

            budgetReservationJournalizingType_PSN = any2Enum(ctrlBudgetReservationJournalizingType_PSN.selection());
            rangeBudgetReservationJournalizingType.value(queryValue(budgetReservationJournalizingType_PSN));

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            JournalizingDefinitionBudgetReservation_PSN.BudgetReservationTypeCode = TableAll::All;
            JournalizingDefinitionBudgetReservation_PSN.BudgetReservationJournalizingType = any2Enum(ctrlBudgetReservationJournalizingType_PSN.selection());
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            QueryBuildDataSource dsJournalizingDefinitionBudgetReservation;

            super();

            dsJournalizingDefinitionBudgetReservation = this.query().dataSourceTable(tableNum(JournalizingDefinitionBudgetReservation_PSN));
            
            rangeBudgetReservationJournalizingType = dsJournalizingDefinitionBudgetReservation.addRange(fieldNum(JournalizingDefinitionBudgetReservation_PSN, BudgetReservationJournalizingType));
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            element.updateDesign(JournalizingDefinitionModuleId::BudgetReservation_PSN);
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BudgetReservationTypeCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateDesign(JournalizingDefinitionModuleId::BudgetReservation_PSN);
                journalizingDefinitionBudgetReservation_PSN_ds.rereadReferenceDataSources();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>JournalizingDefinition</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common journalizingDefinitionTransaction;

                journalizingDefinitionTransaction = JournalizingDefinition::lookupRefCtrlJournalizingDefByModule(_formReferenceControl,JournalizingDefinitionModuleId::BudgetReservation_PSN);

                return journalizingDefinitionTransaction;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>TabPagePurchasing</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>allowPageDeactivate</Name>
						<Source><![CDATA[
        public boolean allowPageDeactivate()
        {
            return journalizingDefinitionPurchTrans_ds.leaveRecord();
        }

]]></Source>
					</Method>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();
            element.defaultDataSource(journalizingDefinitionPurchTrans_ds);
            ctrlPurchasingTransactionType.setFocus();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlPurchasingTransactionType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();
            lastSel = this.selection();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes the executequery method of datasource.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public int selectionChange()
        {
            int  ret;

            if (! journalizingDefinitionPurchTrans_ds.leaveRecord())
            {
                this.selection(lastSel);
                return 0;
            }

            ret = super();

            journalizingDefinitionPurchTrans_ds.executeQuery();
            journalizingDefinitionPurchTrans_ds.refresh();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalizingDefinitionPurchTrans_ItemCode</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables or Disables and Sets item relation field on the basis of item code field.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();
            element.updateDesign(JournalizingDefinitionModuleId::Purchasing);
            if (journalizingDefinitionPurchTrans.ItemCode != journalizingDefinitionPurchTrans.orig().ItemCode)
            {
                journalizingDefinitionPurchTrans.editItemRelation(true,'');
                journalizingDefinitionPurchTrans.EcoResCategory = 0;
                journalizingDefinitionPurchTrans_ds.rereadReferenceDataSources();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ItemRelationPurch</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Displays the lookup to the user by calling the lookup method of <c>InventTable</c> table or <c>InventItemGroup</c> table.
        /// </summary>
        public void lookup()
        {
            switch ( journalizingDefinitionPurchTrans.ItemCode )
            {
                case TableGroupCategoryAll::Table:
                    InventTable::lookupItem(this);
                    break;

                case TableGroupCategoryAll::Group:
                    InventItemGroup::lookupItemGroup(this);
                    break;
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalizingDefinitionPurchTrans_AccountCode</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables or Disables and Sets account relation field on the basis of account code field.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();
            element.updateDesign(JournalizingDefinitionModuleId::Purchasing);
            if (journalizingDefinitionPurchTrans.ItemCode != journalizingDefinitionPurchTrans.orig().ItemCode)
            {
                journalizingDefinitionPurchTrans.editAccountRelation(true,'');
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AccountRelationPurch</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Displays the lookup to the user by calling the lookup method of <c>VendTable</c> table or <c>VendGroup</c> table.
        /// </summary>
        public void lookup()
        {
            switch (journalizingDefinitionPurchTrans.VendAccountCode)
            {
                case TableGroupAll::Table:
                    VendTable::lookupVendTable(this);
                    break;

                case TableGroupAll::GroupId:
                    VendGroup::lookupVendorGroup(this);
                    break;
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            switch (journalizingDefinitionPurchTrans.VendAccountCode)
            {
                case TableGroupAll::Table:
                    return VendTable::resolveAmbiguousReferenceVendor(this);

                default:
                    return super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabPageAccountsPayable</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>allowPageDeactivate</Name>
						<Source><![CDATA[
        public boolean allowPageDeactivate()
        {
            return journalizingDefinitionPayablesTrans_ds.leaveRecord();
        }

]]></Source>
					</Method>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();
            element.defaultDataSource(journalizingDefinitionPayablesTrans_ds);
            ctrlAccountsPayableTransactionType.setFocus();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlAccountsPayableTransactionType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();
            lastSel = this.selection();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes the executequery method of datasource.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public int selectionChange()
        {
            int  ret;
            if (! journalizingDefinitionPayablesTrans_ds.leaveRecord())
            {
                this.selection(lastSel);
                return 0;
            }

            ret = super();

            journalizingDefinitionPayablesTrans_ds.executeQuery();
            journalizingDefinitionPayablesTrans_ds.refresh();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalizingDefinitionPayablesTrans_ItemCode</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables or disables and sets item relation field on the basis of item code field.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();
            element.updateDesign(JournalizingDefinitionModuleId::AccountsPayable);
            if (journalizingDefinitionPayablesTrans.ItemCode != journalizingDefinitionPayablesTrans.orig().ItemCode)
            {
                journalizingDefinitionPayablesTrans.editItemRelation(true,'');
                journalizingDefinitionPayablesTrans.EcoResCategory = 0;
                journalizingDefinitionPayablesTrans_ds.rereadReferenceDataSources();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>editItemRelationAP</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Displays the lookup to the user by calling the lookup method of <c>InventTable</c> table or <c>InventItemGroup</c> table.
        /// </summary>
        public void lookup()
        {
            switch ( journalizingDefinitionPayablesTrans.ItemCode )
            {
                case TableGroupCategoryAll::Table:
                    InventTable::lookupItem(this);
                    break;

                case TableGroupCategoryAll::Group:
                    InventItemGroup::lookupItemGroup(this);
                    break;
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalizingDefinitionPayablesTrans_VendAccountCode</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables or disables and sets account relation field on the basis of account code field.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();
            element.updateDesign(JournalizingDefinitionModuleId::AccountsPayable);
            if (journalizingDefinitionPayablesTrans.ItemCode != journalizingDefinitionPayablesTrans.orig().ItemCode)
            {
                journalizingDefinitionPayablesTrans.editAccountRelation(true,'');
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>editAccountRelationAP</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Displays the lookup to the user by calling the lookup method of <c>VendTable</c> table or <c>VendGroup</c> table.
        /// </summary>
        public void lookup()
        {
            switch ( journalizingDefinitionPayablesTrans.VendAccountCode )
            {
                case TableGroupAll::Table:
                    VendTable::lookupVendTable(this);
                    break;

                case TableGroupAll::GroupId:
                    VendGroup::lookupVendorGroup(this);
                    break;
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            switch (journalizingDefinitionPayablesTrans.VendAccountCode)
            {
                case TableGroupAll::Table:
                    return VendTable::resolveAmbiguousReferenceVendor(this);

                default:
                    return super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabPageBudget</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>allowPageDeactivate</Name>
						<Source><![CDATA[
        public boolean allowPageDeactivate()
        {
            return journalizingDefinitionBudgetTrans_ds.leaveRecord();
        }

]]></Source>
					</Method>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            element.defaultDataSource(journalizingDefinitionBudgetTrans_ds);
            ctrlBudgetTransactionType.setFocus();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlBudgetTransactionType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();
            lastSel = this.selection();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int  ret;

            if (! journalizingDefinitionBudgetTrans_ds.leaveRecord())
            {
                this.selection(lastSel);
                ret = 0;
            }
            else
            {
                ret = super();
                journalizingDefinitionBudgetTrans_ds.executeQuery();
                journalizingDefinitionBudgetTrans_ds.refresh();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalizingDefinitionBudgetTrans_BudgetTransactionTypeCode</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.updateDesign(JournalizingDefinitionModuleId::Budget);
            if (journalizingDefinitionBudgetTrans.BudgetTransactionTypeCode == TableAll::All)
            {
                journalizingDefinitionBudgetTrans.BudgetTransactionCode = 0;
                journalizingDefinitionBudgetTrans_ds.rereadReferenceDataSources();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabPageBudgetReservation_PSN</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>allowPageDeactivate</Name>
						<Source><![CDATA[
        public boolean allowPageDeactivate()
        {
            return journalizingDefinitionBudgetReservation_PSN_ds.leaveRecord();
        }

]]></Source>
					</Method>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            element.defaultDataSource(journalizingDefinitionBudgetReservation_PSN_ds);
            journalizingDefinitionBudgetReservation_PSN_BudgetReservationTypeCode.setFocus();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlBudgetReservationJournalizingType_PSN</Name>
				<Type>RadioButton</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();
            lastSel = this.selection();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int  currentSelectionValue;

            if (!journalizingDefinitionBudgetReservation_PSN_ds.leaveRecord())
            {
                this.selection(lastSel);
                currentSelectionValue = 0;
            }
            else
            {
                currentSelectionValue = super();
                journalizingDefinitionBudgetReservation_PSN_ds.executeQuery();
            }

            return currentSelectionValue;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabPageBank</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>allowPageDeactivate</Name>
						<Source><![CDATA[
        public boolean allowPageDeactivate()
        {
            return journalizingDefinitionBankTrans_ds.leaveRecord();
        }

]]></Source>
					</Method>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            element.defaultDataSource(journalizingDefinitionBankTrans_ds);
            ctrlBankTransactionTypes.setFocus();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlBankTransactionTypes</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();
            lastSel = this.selection();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int  ret;

            if (!journalizingDefinitionBankTrans_ds.leaveRecord())
            {
                this.selection(lastSel);
                ret = 0;
            }
            else
            {
                ret = super();
                journalizingDefinitionBankTrans_ds.executeQuery();
                journalizingDefinitionBankTrans_ds.refresh();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalizingDefinitionBankTrans_BankCode</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables or disables and sets bank relation field on the basis of bank code field.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();
            element.updateDesign(JournalizingDefinitionModuleId::Bank);

            if (journalizingDefinitionBankTrans.BankCode != journalizingDefinitionBankTrans.orig().BankCode)
            {
                journalizingDefinitionBankTrans.editBankRelation(true,'');
                journalizingDefinitionBankTrans_ds.rereadReferenceDataSources();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>editBankRelation</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            MenuFunction     menuFunction;
            Args args = new Args();

            if (journalizingDefinitionBankTrans.BankCode == TableGroupAll::GroupId)
            {
                menuFunction = new MenuFunction(menuitemDisplayStr(BankGroup), MenuItemType::Display);
                args.lookupRecord(BankGroup::find(journalizingDefinitionBankTrans.BankGroupId));
            }
            else
            {
                menuFunction = new MenuFunction(menuitemDisplayStr(BankAccountTable), MenuItemType::Display);
                args.lookupRecord(BankAccountTable::find(journalizingDefinitionBankTrans.BankId));
            }

            args.caller(element);

            menuFunction.run(args);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Displays the lookup to the user by calling the lookup method of <c>BankAccountTable</c> table or <c>BankGroup</c> table.
        /// </summary>
        public void lookup()
        {
            switch ( journalizingDefinitionBankTrans.BankCode )
            {
                case TableGroupAll::Table:
                    BankAccountTable::lookupBankAccount(this);
                    break;

                case TableGroupAll::GroupId:
                    BankGroup::lookupBankGroup(this);
                    break;
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>VendPaymModeCode</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables or disables and sets method of payment relation field on the basis of method of payment code field.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();
            element.updateDesign(JournalizingDefinitionModuleId::Bank);

            if (journalizingDefinitionBankTrans.VendPaymModeCode != journalizingDefinitionBankTrans.orig().VendPaymModeCode)
            {
                journalizingDefinitionBankTrans.editVendPaymModeRelation(true, '');
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>editVendPaymModeRelation</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Args            args;
            MenuFunction     menuFunction;

            menuFunction = new MenuFunction(menuitemDisplayStr(VendPaymMode), MenuItemType::Display);

            args = new Args(formStr(VendPaymMode));
            args.lookupRecord(VendPaymModeTable::find(journalizingDefinitionBankTrans.VendPaymModeId));
            args.caller(element);

            menuFunction.run(args);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Displays the lookup to the user by calling the lookup method of <c>VendPaymModeTable</c> table.
        /// </summary>
        public void lookup()
        {
            switch ( journalizingDefinitionBankTrans.VendPaymModeCode )
            {
                case TableAll::Table:
                    if (ctrlBankTransactionTypes.selection() == BankTransactionTypes::AccountsReceivableSettlement)
                    {
                        CustPaymModeTable::lookupPaymMethod(this, '', '');
                    }
                    else
                    {
                        VendPaymModeTable::lookupPaymMethod(this, '', '');
                    }

                    break;
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabPageAccountReceivable</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            element.defaultDataSource(journalizingDefinitionCustomerTrans_ds);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlAccountsReceivableTransactionType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();

            lastSel = this.selection();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes the executequery method of datasource.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public int selectionChange()
        {
            int ret;

            if (!journalizingDefinitionCustomerTrans_ds.leaveRecord())
            {
                this.selection(lastSel);
                return 0;
            }

            ret = super();

            journalizingDefinitionCustomerTrans_ds.executeQuery();
            journalizingDefinitionCustomerTrans_ds.refresh();

            if (ctrlAccountsReceivableTransactionType.valueStr() == enum2str(CustomerTransactionType::WriteOff))
            {
                journalizingDefinitionCustTrans_MatchType.delete(enum2str(BillingCodeBillingClassAll::BillingCode));
            }
            else
            {
                if (journalizingDefinitionCustTrans_MatchType.find(enum2str(BillingCodeBillingClassAll::BillingCode)) == -1)
                {
                    journalizingDefinitionCustTrans_MatchType.add(enum2str(BillingCodeBillingClassAll::BillingCode));
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalizingDefinitionCustTrans_MatchType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables or Disables and Sets item relation field on the basis of item code field.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();

            editMatchCode.allowEdit(journalizingDefinitionCustomerTrans.MatchType != BillingCodeBillingClassAll::All);
            if (journalizingDefinitionCustomerTrans.MatchType != journalizingDefinitionCustomerTrans.orig().MatchType)
            {
                journalizingDefinitionCustomerTrans.editMatchCode(true, '');
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>editMatchCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();

            if (journalizingDefinitionCustomerTrans.MatchType == BillingCodeBillingClassAll::BillingCode)
            {
                CustBillingCode::jumpRefBillingCode(this, journalizingDefinitionCustomerTrans.CustBillingCode);
            }
            else if (journalizingDefinitionCustomerTrans.MatchType == BillingCodeBillingClassAll::BillingClassification)
            {
                CustBillingClassification::jumpRefBillingClassification(this, journalizingDefinitionCustomerTrans.CustBillingClassification);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Displays the lookup to the user by calling the lookup method of <c>CustBillingCode</c> table or <c>CustBillingClassification</c> table.
        /// </summary>
        public void lookup()
        {
            switch (journalizingDefinitionCustomerTrans.MatchType)
            {
                case BillingCodeBillingClassAll::BillingCode:
                    JournalizingDefinitionCustomerTrans::custBillingCodeLookupFilterOutTransType(this, journalizingDefinitionCustomerTrans.CustomerTransactionType);
                    break;

                case BillingCodeBillingClassAll::BillingClassification:
                    JournalizingDefinitionCustomerTrans::custBillingClassificationLookupFilterOutTransType(this, journalizingDefinitionCustomerTrans.CustomerTransactionType);
                    break;
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabPageGeneralLedger</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            element.defaultDataSource(journalizingDefinitionGeneralLedgerTrans_ds);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlLedgerTransactionType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();

            lastSel = this.selection();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes the executequery method of datasource.
        /// </summary>
        /// <returns>
        /// The integer value returns from the super.
        /// </returns>
        public int selectionChange()
        {
            int  ret;

            if (!journalizingDefinitionGeneralLedgerTrans_ds.leaveRecord())
            {
                this.selection(lastSel);
                return 0;
            }

            ret = super();

            journalizingDefinitionGeneralLedgerTrans_ds.executeQuery();
            journalizingDefinitionGeneralLedgerTrans_ds.refresh();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabPagePayroll</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>allowPageDeactivate</Name>
						<Source><![CDATA[
        public boolean allowPageDeactivate()
        {
            return journalizingDefinitionPayrollTrans_ds.leaveRecord();
        }

]]></Source>
					</Method>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            element.defaultDataSource(journalizingDefinitionPayrollTrans_ds);
            ctrlPayrollTransactionType.setFocus();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlPayrollTransactionType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();
            lastSel = this.selection();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int  ret;

            if (! journalizingDefinitionPayrollTrans_ds.leaveRecord())
            {
                this.selection(lastSel);
                ret = 0;
            }
            else
            {
                ret = super();
                journalizingDefinitionPayrollTrans_ds.executeQuery();
                journalizingDefinitionPayrollTrans_ds.refresh();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>JournalizingDefinitionPayrollTrans_Code</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean ret;

            ret = super();

            if (JournalizingDefinitionPayrollTrans.RecId == 0)
            {
                element.parsePayrollTransCodeComboBoxValue();
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret;

            ret = super();

            if (ret)
            {
                element.parsePayrollTransCodeComboBoxValue();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>editSpecificCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            switch (JournalizingDefinitionPayrollTrans.LineType)
            {
                case PayrollPayStatementLineType::Earning:
                    PayrollEarningCode::lookup(this);
                    break;
                case PayrollPayStatementLineType::BenefitContribution:
                    benefitPlanLookup.parmPayrollType(PayrollType::Contribution);
                    benefitPlanLookup.lookupBenefitPlan(this);
                    break;
                case PayrollPayStatementLineType::BenefitDeduction:
                    benefitPlanLookup.parmPayrollType(PayrollType::Deduction);
                    benefitPlanLookup.lookupBenefitPlan(this);
                    break;
                case PayrollPayStatementLineType::TaxContribution:
                    if (JournalizingDefinitionPayrollTrans.Code == TableGroupAll::GroupId)
                    {
                        PayrollTaxGroup::lookupPostingDefinitionTaxGroup(this);
                    }
                    else
                    {
                        taxCodeLookup.parmIsEmployerTax(NoYes::Yes);
                        taxCodeLookup.lookupTaxCode(this);
                    }
                    break;
                case PayrollPayStatementLineType::TaxDeduction:
                    if (JournalizingDefinitionPayrollTrans.Code == TableGroupAll::GroupId)
                    {
                        PayrollTaxGroup::lookupPostingDefinitionTaxGroup(this);
                    }
                    else
                    {
                        taxCodeLookup.parmIsEmployerTax(NoYes::No);
                        taxCodeLookup.lookupTaxCode(this);
                    }
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinitionPurchTrans</Name>
			<Table>JournalizingDefinitionPurchTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EcoResCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchasingTransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendGroup</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Passive</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinitionPayablesTrans</Name>
			<Table>JournalizingDefinitionPayablesTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountsPayableTransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EcoResCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendGroup</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Passive</LinkType>
			<AllowCheck>No</AllowCheck>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinitionCustomerTrans</Name>
			<Table>JournalizingDefinitionCustomerTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CustBillingClassification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBillingCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerTransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MatchType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinitionBudgetTrans</Name>
			<Table>JournalizingDefinitionBudgetTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BudgetTransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetTransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetTransactionTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources>
				<AxFormReferencedDataSource>
					<Name>JournalizingDefinition</Name>
					<Table>JournalizingDefinition</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>dataAreaId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>JournalizingDefinitionCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>JournalizingDefinitionDesc</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>JournalizingDefinitionModuleValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<JoinSource>JournalizingDefinitionBudgetTrans</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<JoinRelation>journalizingDefinition</JoinRelation>
				</AxFormReferencedDataSource>
			</ReferencedDataSources>
			<LinkType>Passive</LinkType>
			<AllowCheck>No</AllowCheck>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinitionGeneralLedgerTrans</Name>
			<Table>JournalizingDefinitionGeneralLedgerTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FundClass</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources>
				<AxFormReferencedDataSource>
					<Name>JournalizingDefinition1</Name>
					<Table>JournalizingDefinition</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>dataAreaId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>JournalizingDefinitionCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>JournalizingDefinitionDesc</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>JournalizingDefinitionModuleValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<JoinSource>JournalizingDefinitionGeneralLedgerTrans</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<JoinRelation>JournalizingDefinition</JoinRelation>
				</AxFormReferencedDataSource>
			</ReferencedDataSources>
			<AllowCheck>No</AllowCheck>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinitionBankTrans</Name>
			<Table>JournalizingDefinitionBankTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BankCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransactionTypes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymModeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymModeId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Passive</LinkType>
			<AllowCheck>No</AllowCheck>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinitionPayrollTrans</Name>
			<Table>JournalizingDefinitionPayrollTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayrollTransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SpecificCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SpecificGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources>
				<AxFormReferencedDataSource>
					<Name>PayrollJournalizingDefinition</Name>
					<Table>JournalizingDefinition</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>dataAreaId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>JournalizingDefinitionCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>JournalizingDefinitionDesc</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>JournalizingDefinitionModuleValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<JoinSource>JournalizingDefinitionPayrollTrans</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<JoinRelation>JournalizingDefinition_FK</JoinRelation>
				</AxFormReferencedDataSource>
			</ReferencedDataSources>
			<LinkType>Passive</LinkType>
			<AllowCheck>No</AllowCheck>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>JournalizingDefinitionBudgetReservation_PSN</Name>
			<Table>JournalizingDefinitionBudgetReservation_PSN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BudgetReservationJournalizingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetReservationType_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetReservationTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalizingDefinition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources>
				<AxFormReferencedDataSource>
					<Name>JournalizingDefinitionBudgetReservation</Name>
					<Table>JournalizingDefinition</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>DataAreaId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>JournalizingDefinitionCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>JournalizingDefinitionDesc</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>JournalizingDefinitionModuleValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Partition</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<JoinSource>JournalizingDefinitionBudgetReservation_PSN</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<JoinRelation>JournalizingDefinition</JoinRelation>
				</AxFormReferencedDataSource>
			</ReferencedDataSources>
			<LinkType>Passive</LinkType>
			<AllowCheck>No</AllowCheck>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS128170</Caption>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<StatusBarStyle xmlns="">Simple</StatusBarStyle>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>MainActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPagePurchasing</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>LogisticsBasic</ConfigurationKey>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PurchasingCustomFilter</Name>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ctrlPurchasingTransactionType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_ctrlPurchasingTransactionType</HelpText>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<EnumType>PurchasingTransactionType</EnumType>
										<Label>@SYS11584</Label>
										<Items />
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridPurch</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>JournalizingDefinitionPurchTrans_ItemCode</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_JournalizingDefinitionPurchTrans_ItemCode</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemCode</DataField>
										<DataSource>JournalizingDefinitionPurchTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ItemRelationPurch</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editItemRelation</DataMethod>
										<DataSource>JournalizingDefinitionPurchTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>JournalizingDefinitionPurchTrans_CategoryRelation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1811939326</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>JournalizingDefinitionPurchTrans_CategoryRelation_Name</Name>
												<DataRelationPath>EcoResCategory</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>JournalizingDefinitionPurchTrans</DataSource>
										<ReferenceField>EcoResCategory</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>JournalizingDefinitionPurchTrans_AccountCode</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>VendAccountCode</DataField>
										<DataSource>JournalizingDefinitionPurchTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AccountRelationPurch</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editAccountRelation</DataMethod>
										<DataSource>JournalizingDefinitionPurchTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ReferenceJournalizingDefinitionPurch</Name>
										<ElementPosition>2105540606</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReferenceJournalizingDefinitionPurch_JournalizingDefinitionCode</Name>
												<DataRelationPath>JournalizingDefinition</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>JournalizingDefinitionPurchTrans</DataSource>
										<ReferenceField>JournalizingDefinition</ReferenceField>
										<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>getJournalizingDefinitionDescriptionPurch</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_getJournalizingDefinitionDescriptionPurch</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>journalizingDefinitionDescription</DataMethod>
										<DataSource>JournalizingDefinitionPurchTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>JournalizingDefinitionPurchTrans</DataSource>
								<MultiSelect>No</MultiSelect>
							</AxFormControl>
						</Controls>
						<Caption>@SYS114900</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageAccountsPayable</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>LogisticsBasic</ConfigurationKey>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AccountsPayableCustomFilter</Name>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ctrlAccountsPayableTransactionType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_ctrlAccountsPayableTransactionType</HelpText>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<EnumType>AccountsPayableTransactionType</EnumType>
										<Label>@SYS11584</Label>
										<Items />
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridAP</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>JournalizingDefinitionPayablesTrans_ItemCode</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_JournalizingDefinitionPayablesTrans_ItemCode</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemCode</DataField>
										<DataSource>JournalizingDefinitionPayablesTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editItemRelationAP</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editItemRelation</DataMethod>
										<DataSource>JournalizingDefinitionPayablesTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>JournalizingDefinitionPayablesTrans_CategoryRelation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1811939326</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>JournalizingDefinitionPayablesTrans_CategoryRelation_Name</Name>
												<DataRelationPath>EcoResCategory</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>JournalizingDefinitionPayablesTrans</DataSource>
										<ReferenceField>EcoResCategory</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>JournalizingDefinitionPayablesTrans_VendAccountCode</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>VendAccountCode</DataField>
										<DataSource>JournalizingDefinitionPayablesTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editAccountRelationAP</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editAccountRelation</DataMethod>
										<DataSource>JournalizingDefinitionPayablesTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ReferenceJournalizingDefinitionPayables</Name>
										<ElementPosition>2105540606</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReferenceJournalizingDefinitionPayables_JournalizingDefinitionCode</Name>
												<DataRelationPath>JournalizingDefinition</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>JournalizingDefinitionPayablesTrans</DataSource>
										<ReferenceField>JournalizingDefinition</ReferenceField>
										<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>getJournalizingDefinitionDescriptionAP</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_getJournalizingDefinitionDescriptionAP</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>journalizingDefinitionDescription</DataMethod>
										<DataSource>JournalizingDefinitionPayablesTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>JournalizingDefinitionPayablesTrans</DataSource>
								<MultiSelect>No</MultiSelect>
							</AxFormControl>
						</Controls>
						<Caption>@SYS25194</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageBudget</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>LedgerBasicBudget</ConfigurationKey>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BudgetCustomFilter</Name>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ctrlBudgetTransactionType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_ctrlBudgetTransactionType</HelpText>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<EnumType>BudgetTransactionType</EnumType>
										<Label>@SYS7444</Label>
										<Items />
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridBudgetTransaction</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>JournalizingDefinitionBudgetTrans_BudgetTransactionTypeCode</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>BudgetTransactionTypeCode</DataField>
										<DataSource>JournalizingDefinitionBudgetTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ReferenceGroupTransactionCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1386916521</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReferenceGroupTransactionCode_Name</Name>
												<DataRelationPath>BudgetTransactionCode</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>JournalizingDefinitionBudgetTrans</DataSource>
										<ReferenceField>BudgetTransactionCode</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ReferenceGroupJournalizingDefinition</Name>
										<ElementPosition>1700091219</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReferenceGroupJournalizingDefinition_JournalizingDefinitionCode</Name>
												<DataRelationPath>JournalizingDefinition</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>JournalizingDefinitionBudgetTrans</DataSource>
										<ReferenceField>JournalizingDefinition</ReferenceField>
										<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>JournalizingDefinition1_JournalizingDefinitionDesc</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_JournalizingDefinition1_JournalizingDefinitionDesc</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalizingDefinitionDesc</DataField>
										<DataSource>JournalizingDefinition</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>JournalizingDefinitionBudgetTrans</DataSource>
								<MultiSelect>No</MultiSelect>
							</AxFormControl>
						</Controls>
						<Caption>@SYS80981</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageBudgetReservation_PSN</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BudgetReservationJournalizingCustomFilter</Name>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRadioButtonControl">
										<Name>ctrlBudgetReservationJournalizingType_PSN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
										<HelpText>@SYS183763</HelpText>
										<Type>RadioButton</Type>
										<FormControlExtension
											i:nil="true" />
										<Caption>@SYS7444</Caption>
										<EnumType>BudgetReservationJournalizingType_PSN</EnumType>
										<Items />
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridBudgetReservation_PSN</Name>
								<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>JournalizingDefinitionBudgetReservation_PSN_BudgetReservationTypeCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
										<HelpText>@FieldDescriptions_Budgeting_BudgetReservationPS::TransactionPostingDefinition_ReservationTypeRelationColumn</HelpText>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BudgetReservationTypeCode</DataField>
										<DataSource>JournalizingDefinitionBudgetReservation_PSN</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>JournalizingDefinitionBudgetReservation_PSN_BudgetReservationType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>JournalizingDefinitionBudgetReservation_PSN</DataSource>
										<ReferenceField>BudgetReservationType</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>JournalizingDefinitionBudgetReservation_PSN_JournalizingDefinition</Name>
										<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
										<HelpText>@SYS153466</HelpText>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>JournalizingDefinitionBudgetReservation_PSN</DataSource>
										<ReferenceField>JournalizingDefinition</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>JournalizingDefinitionBudgetReservation_PSN_JournalizingDefinitionDesc</Name>
										<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalizingDefinitionDesc</DataField>
										<DataSource>JournalizingDefinitionBudgetReservation</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>JournalizingDefinitionBudgetReservation_PSN</DataSource>
								<MultiSelect>No</MultiSelect>
							</AxFormControl>
						</Controls>
						<Caption>@Budgeting_BudgetReservationPS:BudgetReservation</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageBank</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>PublicSector</ConfigurationKey>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BankCustomFilter</Name>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ctrlBankTransactionTypes</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_ctrlBankTransactionTypes</HelpText>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<EnumType>BankTransactionTypes</EnumType>
										<Label>@SYS7444</Label>
										<Items />
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridBankTransactionTypes</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>JournalizingDefinitionBankTrans_BankCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankCode</DataField>
										<DataSource>JournalizingDefinitionBankTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editBankRelation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editBankRelation</DataMethod>
										<DataSource>JournalizingDefinitionBankTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>VendPaymModeCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1811939326</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>VendPaymModeCode</DataField>
										<DataSource>JournalizingDefinitionBankTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editVendPaymModeRelation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editVendPaymModeRelation</DataMethod>
										<DataSource>JournalizingDefinitionBankTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ReferenceGroupJournalizingDefinitionBank</Name>
										<ElementPosition>2058005160</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReferenceGroupJournalizingDefinitionBank_JournalizingDefinitionCode</Name>
												<DataRelationPath>JournalizingDefinition</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>JournalizingDefinitionBankTrans</DataSource>
										<Mandatory>Yes</Mandatory>
										<ReferenceField>JournalizingDefinition</ReferenceField>
										<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>journalizingDefinitionDescription</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2102744402</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_journalizingDefinitionDescription</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>journalizingDefinitionDescription</DataMethod>
										<DataSource>JournalizingDefinitionBankTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>JournalizingDefinitionBankTrans</DataSource>
								<MultiSelect>No</MultiSelect>
							</AxFormControl>
						</Controls>
						<Caption>@SYS22173</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageAccountReceivable</Name>
						<ConfigurationKey>PublicSector</ConfigurationKey>
						<ElementPosition>1789569704</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AccountReceivableCustomFilter</Name>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ctrlAccountsReceivableTransactionType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_ctrlAccountsReceivableTransactionType</HelpText>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<EnumType>CustomerTransactionType</EnumType>
										<Label>@SYS11584</Label>
										<Selection>31</Selection>
										<Items />
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridAR</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>JournalizingDefinitionCustTrans_MatchType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>MatchType</DataField>
										<DataSource>JournalizingDefinitionCustomerTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editMatchCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655763</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editMatchCode</DataMethod>
										<DataSource>JournalizingDefinitionCustomerTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>JournalizingDefinitionCustomerTrans_JournalizingDef</Name>
										<ElementPosition>1789569704</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>JournalizingDefinitionCustomerTrans_JournalizingDef_JournalizingDefinitionCode</Name>
												<DataRelationPath>JournalizingDefinition</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>JournalizingDefinitionCustomerTrans</DataSource>
										<Mandatory>Yes</Mandatory>
										<ReferenceField>JournalizingDefinition</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>getJournalizingDefinitionDescription1</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1968526675</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_getJournalizingDefinitionDescription1</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>journalizingDefinitionDescription</DataMethod>
										<DataSource>JournalizingDefinitionCustomerTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>JournalizingDefinitionCustomerTrans</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS128605</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageGeneralLedger</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>PublicSector</ConfigurationKey>
						<ElementPosition>1968526675</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GeneralLedgerCustomFilter</Name>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ctrlLedgerTransactionType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_ctrlLedgerTransactionType</HelpText>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<EnumType>LedgerOpenCloseTransType</EnumType>
										<Label>@SYS11584</Label>
										<Selection>1</Selection>
										<Items />
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridGL</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>JournalizingDefinitionGeneralLedgerTrans_FundClass</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FundClass</DataField>
										<DataSource>JournalizingDefinitionGeneralLedgerTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ReferenceGroup</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReferenceGroup_JournalizingDefinitionCode</Name>
												<DataRelationPath>JournalizingDefinition</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>JournalizingDefinitionGeneralLedgerTrans</DataSource>
										<ReferenceField>JournalizingDefinition</ReferenceField>
										<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>JournalizingDefinition1_JournalizingDefinitionDesc1</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_JournalizingDefinition1_JournalizingDefinitionDesc1</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalizingDefinitionDesc</DataField>
										<DataSource>JournalizingDefinition1</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>JournalizingDefinitionGeneralLedgerTrans</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS24097</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPagePayroll</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ConfigurationKey>PayrollAdministration</ConfigurationKey>
						<ElementPosition>2058005160</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PayrollCustomFilter</Name>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ctrlPayrollTransactionType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<EnumType>PayrollTransactionType</EnumType>
										<Items />
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridPayrollTransaction</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>JournalizingDefinitionPayrollTrans_LineType</Name>
										<ElementPosition>459594036</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineType</DataField>
										<DataSource>JournalizingDefinitionPayrollTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>JournalizingDefinitionPayrollTrans_Code</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>689391054</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Code</DataField>
										<DataSource>JournalizingDefinitionPayrollTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>editSpecificCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>919188074</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editSpecificCode</DataMethod>
										<DataSource>JournalizingDefinitionPayrollTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>JournalizingDefinitionPayrollTrans_JournalizingDef</Name>
										<ElementPosition>1148985094</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>JournalizingDefinitionPayrollTrans_JournalizingDef_JournalizingDefinitionCode</Name>
												<DataRelationPath>JournalizingDefinition_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>JournalizingDefinitionPayrollTrans</DataSource>
										<ReferenceField>JournalizingDefinition</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>JournalizingDefinitionPayroll_JournalizingDefinitionDesc</Name>
										<ElementPosition>1594343919</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_GeneralLedger:JournalizingDefinitionTrans_JournalizingDefinitionPayroll_JournalizingDefinitionDesc</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalizingDefinitionDesc</DataField>
										<DataSource>PayrollJournalizingDefinition</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>JournalizingDefinitionPayrollTrans</DataSource>
								<MultiSelect>No</MultiSelect>
							</AxFormControl>
						</Controls>
						<Caption>@SYS2694</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>