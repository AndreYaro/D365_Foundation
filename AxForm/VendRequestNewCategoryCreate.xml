<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>VendRequestNewCategoryCreate</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class VendRequestNewCategoryCreate extends FormRun
{
    private EcoResCategoryHierarchy selectedCategoryHierarchy;
    private EcoResCategoryTreeDatasource hierarchyTree;
    private FormTreeItem newCategoryItem;
    private int rootCategoryItem;
    private VendVendorRequestNewCategoryManager newCategoryManager;

    private Set selectedNodes = new Set(Types::AnyType);

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (!element.args().caller())
        {
            throw error(Error::missingFormActiveBuffer(element.name()));
        }

        // Initialize category tree
        selectedCategoryHierarchy = EcoResCategoryHierarchy::find(EcoResCategoryHierarchyRole::getHierarchiesByRole(EcoResCategoryNamedHierarchyRole::Procurement).CategoryHierarchy);

        if (selectedCategoryHierarchy && selectedCategoryHierarchy.RecId)
        {
            element.initializeCategoryTree();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeCategoryTree</Name>
				<Source><![CDATA[
    internal void initializeCategoryTree()
    {
        EcoResCategoryLookupParameters lookupParameters = new EcoResCategoryLookupParameters(false, false, true);
        lookupParameters.parmLimitByLevel(VendRequestManagementParameters::getCategoryHierarchySelectionLevel());

        EcoResCategory root = EcoResCategory::getRoot(selectedCategoryHierarchy.RecId);

        if (!root)
        {
            throw Global::error("@SYS134281");
        }

        QueryBuildRange range = ecoResCategoryHierarchy_ds.query().dataSourceTable(tableNum(EcoResCategoryHierarchy)).addRange(fieldNum(EcoResCategoryHierarchy, RecId));
        range.value( queryValue(selectedCategoryHierarchy.RecId ) );
        ecoResCategoryHierarchy_ds.executeQuery();

        hierarchyTree = new EcoResCategoryTreeDatasource(ecoResCategory_ds,
                                                         categoryTree,
                                                         fieldNum(EcoResCategory, RecId),
                                                         fieldNum(EcoResCategory, ParentCategory),
                                                         fieldNum(EcoResCategory, Name),
                                                         false /* No ID in description */,
                                                         true,
                                                         fieldNum(EcoResCategory, Code),
                                                         selectedCategoryHierarchy,
                                                         ecoResCategoryHierarchy_ds,
                                                         lookupParameters);

        #ResAppl
        #FormTreeControl
        #KeyPressed

        hierarchyTree.initRoot(root.Name, root.RecId, hierarchyTree.image());

        VendVendorRequestNewCategoryManager::construct().disableActiveCategoriesInTree(CategoryTree.getRoot(), categoryTree);
        EcoResCategory_ds.research();
        EcoResCategoryHierarchy_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>traverseTrees</Name>
				<Source><![CDATA[
    /// <summary>
    /// Traverse the tree to find selected node.
    /// </summary>
    /// <param name="_rootNodeIdx">
    /// Root node of the tree.
    /// </param>
    internal void traverseTrees(int _rootNodeIdx)
    {
        TreeItemIdx categoryTreeItemIdx;
        FormTreeItem categoryTreeItem;

        categoryTreeItemIdx = _rootNodeIdx? CategoryTree.getChild(_rootNodeIdx) : CategoryTree.getRoot();

        while (categoryTreeItemIdx)
        {
            categoryTreeItem = CategoryTree.getItem(categoryTreeItemIdx);

            if (categoryTreeItem.stateChecked() == FormTreeCheckedState::Checked)
            {
                selectedNodes.add(categoryTreeItem.data());
            }

            this.traverseTrees(categoryTreeItemIdx);
            categoryTreeItemIdx = categoryTree.getNextSibling(categoryTreeItemIdx);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>EcoResCategory</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            ecoResCategory_ds.query().dataSourceTable(tableNum(EcoResCategory)).addRange(fieldNum(EcoResCategory, RecId)).value(queryValue(newCategoryItem.idx()));

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CategoryFindReferenceGroup</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            Args args = new Args(formStr(EcoResCategorySearchList));
            args.record(ecoResCategory);
            args.caller(this);

            FormRun formRun = ClassFactory::formRunClassOnClient(args);
            formRun.init();

            this.performFormLookup(formRun);

            return formRun.selectRecordModeSelectedRecord();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (hierarchyTree)
            {
                hierarchyTree.expandAndSelect(categoryFindReferenceGroup.value());
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveReference</Name>
						<Source><![CDATA[
        public Common resolveReference()
        {
            return EcoResCategory::resolveCategoryHierarchy(this, selectedCategoryHierarchy);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CategoryTree</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>expanded</Name>
						<Source><![CDATA[
        public void expanded(int _idx, FormTreeExpand _action, anytype _data)
        {
            super(_idx, _action, _data);

            if (hierarchyTree)
            {
                hierarchyTree.onExpanded(_idx, _action);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>expanding</Name>
						<Source><![CDATA[
        boolean expanding(int _idx, FormTreeExpand _action, anytype _data)
        {
            boolean ret = true;

            ret = super(_idx, _action, _data);

            if (hierarchyTree)
            {
                hierarchyTree.expanding(_idx, _action, _data);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _oldItem, FormTreeItem _newItem, FormTreeSelect _how)
        {
            // Reset the global variables everytime the Category node changes
            rootCategoryItem = this.getRoot();
            newCategoryItem = _newItem;

            super(_oldItem, _newItem, _how);

            if (hierarchyTree)
            {
                hierarchyTree.selectionChanged(_oldItem, _newItem);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkedStateChanged</Name>
						<Source><![CDATA[
        public void checkedStateChanged(int _Idx, FormTreeCheckedState _newState)
        {
            super(_Idx, _newState);

            VendVendorRequestNewCategoryManager::activeNodesStateChangeEvent(_Idx, _newState, CategoryTree);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKCommandButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            element.traverseTrees(CategoryTree.getRoot());
            Set activeNodes = new Set(Types::AnyType);
            activeNodes = VendVendorRequestNewCategoryManager::getActiveCategoriesForVendor();

            Set selectedNodesForNewRequest = new Set(Types::AnyType);
            selectedNodesForNewRequest = Set::difference(selectedNodes, activeNodes);

            VendVendorRequestNewCategoryManager::construct().createVendorRequest(selectedNodesForNewRequest);

            element.args().caller().datasource().research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSourceChangeGroupMode>ImplicitInnerOuter</DataSourceChangeGroupMode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>EcoResCategory</Name>
			<Table>EcoResCategory</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CategoryHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Code</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultProjectGlobalCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultThreshold_PSN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsActive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCategoryAttributesInherited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsTangible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Level</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetLeft</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NestedSetRight</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentCategory</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PKWiUCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResCategoryHierarchy</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources>
				<AxFormDataSourceDerived>
					<Name>EcoResCategory_PCClass</Name>
					<Table>PCClass</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ReuseEnabled</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
			</DerivedDataSources>
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResCategoryHierarchy</Name>
			<Table>EcoResCategoryHierarchy</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HierarchyModifier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SCM:VendorNewCategoryRequestCreateFormCaption</Caption>
		<DialogSize xmlns="">Large</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<WindowResize xmlns="">Dynamic</WindowResize>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContentGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStaticTextControl">
						<Name>StaticText</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>StaticText</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Text>@SCM:VendorRequestNewCategoryCreateDialog</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>CategoryFindReferenceGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CategoryFindReferenceGroup_Name</Name>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<ExtendedDataType>EcoResCategoryId</ExtendedDataType>
						<ReplacementFieldGroup>NameDescription</ReplacementFieldGroup>
						<ShowLabel>No</ShowLabel>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTreeControl">
						<Name>CategoryTree</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Tree</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<FormControlExtension
							i:nil="true" />
						<CheckBox>Yes</CheckBox>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKCommandButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<ShowShortCut>No</ShowShortCut>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>