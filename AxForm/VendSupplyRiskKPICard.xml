<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>VendSupplyRiskKPICard</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class VendSupplyRiskKPICard extends FormRun implements VendSupplyRiskIKPI
{
    private VendSupplyRiskKPIType   kpiType;
    private VendSupplyRiskKPICache  cache;
    private UnknownNoYes dateFilterFeatureState;
    private VendSupplyRiskSelectPeriodState periodState;
    private MenuItemName listPageMenuItemName;
    private Caption listPageCaption;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Args args = element.args();

        if (args.parmEnumType() == enumNum(VendSupplyRiskKPIType))
        {
            kpiType = args.parmEnum();
        }
        else
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        super();

        switch (kpiType)
        {
            case VendSupplyRiskKPIType::InFullDelivery:
                listPageMenuItemName = menuItemDisplayStr(VendSupplyRiskReceiptNotInFull);
                listPageCaption = "@SCM:VendSupplyRiskReceiptNotInFull";
                break;

            case VendSupplyRiskKPIType::OnTimeDelivery:
                listPageMenuItemName = menuItemDisplayStr(VendSupplyRiskReceiptNotOnTime);
                listPageCaption = "@SCM:VendSupplyRiskReceiptNotOnTime";
                break;

            case VendSupplyRiskKPIType::OnTimeInFullDelivery:
                listPageMenuItemName = menuItemDisplayStr(VendSupplyRiskPurchaseOrderLineOnTimeInFullListPage);
                listPageCaption = "@SCM:VendSupplyRiskReceiptNotOTIF";
                break;

            case VendSupplyRiskKPIType::RequestedDeliveryDateAcceptance:
                listPageMenuItemName = menuItemDisplayStr(VendSupplyRiskPurchaseOrderLineLateConfirmed);
                listPageCaption = "@SCM:VendSupplyRiskPurchaseOrderLineLateConfirmed";
                break;
        }

        OpenListPage.visible(listPageMenuItemName && this.dateFilterEnabled());

        this.updateKPI(cache, periodState);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateKPI</Name>
				<Source><![CDATA[
    public void updateKPI(VendSupplyRiskKPICache _cache, VendSupplyRiskSelectPeriodState _periodState)
    {
        cache = _cache;
        periodState = _periodState;

        if (this.hasExecutedInit()
            && this.dateFilterEnabled())
        {
            VendSupplyRiskKPICard::newKPI(_cache, kpiType, Icon, Caption, Percentage, Goal).initialize();

            OpenListPage.text(strFmt('%1 (%2)', listPageCaption, _cache.KPITotal - _cache.KPICount));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateFilterEnabled</Name>
				<Source><![CDATA[
    private boolean dateFilterEnabled()
    {
        if (dateFilterFeatureState == UnknownNoYes::Unknown)
        {
            if (VendSupplyRiskDateFilterFeature::instance().isEnabled())
            {
                dateFilterFeatureState = UnknownNoYes::Yes;
            }
            else
            {
                dateFilterFeatureState = UnknownNoYes::No;
            }
        }

        return dateFilterFeatureState == UnknownNoYes::Yes;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>VendSupplyRiskKPICache</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            if (!element.dateFilterEnabled())
            {
                QueryBuildDataSource queryBuildDataSource = VendSupplyRiskKPICache_ds.query().dataSourceTable(tableNum(VendSupplyRiskKPICache));

                queryBuildDataSource.clearRanges();
                queryBuildDataSource.addRange(fieldNum(VendSupplyRiskKPICache, KPIType)).value(queryValue(kpiType));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();

            if (!element.dateFilterEnabled())
            {
                VendSupplyRiskKPICard::newKPI(this.cursor(), kpiType, Icon, Caption, Percentage, Goal).initialize();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>OpenListPage</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            Args args = new Args();
            args.parmObject(periodState);
            args.caller(element);

            new MenuFunction(listPageMenuItemName, MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>VendSupplyRiskKPICache</Name>
			<Table>VendSupplyRiskKPICache</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KPICount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KPIGoal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KPITotal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KPIType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Pattern xmlns="">Custom</Pattern>
		<Style xmlns="">FormPart</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>SupplyRiskConfirmedRateCard</Name>
				<ExtendedStyle>BusinessCard</ExtendedStyle>
				<Pattern>BusinessCardThreeFields</Pattern>
				<PatternVersion>1.0</PatternVersion>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormImageControl">
						<Name>Icon</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Image</Type>
						<FormControlExtension
							i:nil="true" />
						<ImageLocation>AOTResource</ImageLocation>
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Percentage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ExtendedStyle>Heading</ExtendedStyle>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Caption</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ChangeCase>UpperCase</ChangeCase>
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Goal</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ChangeCase>UpperCase</ChangeCase>
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>ActionPane</Name>
						<Type>ActionPane</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ActiionPaneButtonGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>OpenListPage</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<NeededPermission>Read</NeededPermission>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<NormalImage>Details</NormalImage>
										<Text>@SCM:VendSupplyRiskPurchaseOrderLineAggregatedReceipt</Text>
									</AxFormControl>
								</Controls>
								<HideIfEmpty>No</HideIfEmpty>
							</AxFormControl>
						</Controls>
						<Style>Strip</Style>
					</AxFormControl>
				</Controls>
				<AllowUserSetup>Restricted</AllowUserSetup>
				<ArrangeMethod>None</ArrangeMethod>
				<Style>Card</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>