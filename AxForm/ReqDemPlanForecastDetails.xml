<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ReqDemPlanForecastDetails</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ReqDemPlanForecastDetails extends FormRun implements ReqRefreshableFormInterface
{
    ReqDemPlanAggregatedMatrixBuilder   forecastBuilder;
    ReqDemPlanAggregatedMatrixBuilder   historyBuilder;
    ReqDemPlanForecastAggregator        forecastAggregator = new ReqDemPlanForecastAggregator();
    ReqDemPlanForecastAttributeManager  attributeManager = new ReqDemPlanForecastAttributeManager();
    ReqDemPlanMatrix                    currentForecastMatrix;
    ReqDemPlanMatrix                    currentHistoryMatrix;
    ReqDemPlanDateConverter             dateConverter;
    ReqDemPlanAggregatedForecast        currentAggregation;
    int                                 frozenColumnCount;
    FormRun                             callerForm;

    Common                              forecastSalesArgumentRecord;
    ReqDemPlanGeneratedForecast         generatedForecast;

    boolean                             showHistoricalAccuracy;

    ReqDemPlanForecastDetailsDataContract currentDataContract;
    private SysLookupMultiSelectCtrl    modelMultiSelectControl;
    private str                         modelMultiSelectedControlIds;
    private str                         modelMultiSelectedControlNames;
    private Query                       forecastModelQuery = new Query();
    private const int                   currentVersion = 1;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (ReqDemPlanCreateForecastService::isForecastGenerationInProgress())
        {
            throw error("@DMP:ForecastGenerationInProgressFormNotAvailable");
        }

        super();

        if (!this.args().caller())
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        callerForm = this.args().caller();

        dateConverter = ReqDemPlanDateConverter::construct();

        currentDataContract = this.args().parmObject() as ReqDemPlanForecastDetailsDataContract;
        if (!currentDataContract)
        {
            throw error(error::missingRecord(formstr(ReqDemPlanForecastDetails)));
        }

        var callerRecord = ReqDemPlanAggregatedForecast::find(currentDataContract.parmAggregationRecId());
        this.args().lookupRecord(callerRecord);

        generatedForecast = ReqDemPlanGeneratedForecast::findLatest();

        this.initModelMultiSelect();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();
         
        xSysLastValue::getLast(this);
        this.setControlValuesFromSysLastValues();
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        xSysLastValue::saveLast(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlValuesFromSysLastValues</Name>
				<Source><![CDATA[
    private void setControlValuesFromSysLastValues()
    {
        if (this.modelMultiSelectedControlIds)
        {
            modelMultiSelectControl.set([str2Con(this.modelMultiSelectedControlIds), str2Con(this.modelMultiSelectedControlNames)]);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueUserId</Name>
				<Source><![CDATA[
    private UserId lastValueUserId()
    {
        return curUserId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueType</Name>
				<Source><![CDATA[
    private UtilElementType lastValueType()
    {
        return UtilElementType::Form;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    private IdentifierName lastValueElementName()
    {
        return this.name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    private IdentifierName lastValueDesignName()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDataAreaId</Name>
				<Source><![CDATA[
    private DataAreaId lastValueDataAreaId()
    {
        return curext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    private void initParmDefault()
    {
        // The method is needed because of the call: xSysLastValue::getLast(this);
        // since getLast assumes that the passed object implements initParmDefault method.
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        modelMultiSelectedControlIds = con2Str(modelMultiSelectControl.get());
        modelMultiSelectedControlNames = con2Str(modelMultiSelectControl.getSelectedFieldValues());
        return [currentVersion, modelMultiSelectedControlIds, modelMultiSelectedControlNames];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        Integer version = conPeek(packedClass, 1);
        switch (version)
        {
            case currentVersion:
                [version, modelMultiSelectedControlIds, modelMultiSelectedControlNames] = packedClass;
                break;
            default:
                return false;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initModelMultiSelect</Name>
				<Source><![CDATA[
    private void initModelMultiSelect()
    {
        QueryBuildDataSource qbd = forecastModelQuery.addDataSource(tableNum(ForecastModel));
        forecastModelQuery.addQueryFilter(qbd, fieldStr(ForecastModel, Type))
            .value(queryValue(HeadingSub::Heading));
        QueryBuildFieldList fieldList = qbd.fields();
        fieldList.dynamic(NoYes::No);
        fieldList.clearFieldList();
        
        FieldId modelFieldId = fieldNum(ForecastModel, ModelId);
        fieldList.addField(modelFieldId);
        fieldList.addField(fieldNum(ForecastModel, Txt));

        QueryBuildDataSource forecastByModel = qbd.addDataSource(tableNum(ReqDemPlanAggregatedForecastHistoryByModel));
        forecastByModel.fields().dynamic(NoYes::No);
        forecastByModel.fields().clearFieldList();
        forecastByModel.addLink(modelFieldId, fieldNum(ReqDemPlanAggregatedForecastHistoryByModel, ForecastModelId));
        forecastByModel.joinMode(JoinMode::ExistsJoin);

        QueryBuildDataSource forecast = forecastByModel.addDataSource(tableNum(ReqDemPlanAggregatedForecast));
        forecast.fields().dynamic(NoYes::No);
        forecast.fields().clearFieldList();
        forecast.joinMode(JoinMode::ExistsJoin);
        forecast.addLink(fieldNum(ReqDemPlanAggregatedForecastHistoryByModel, SourceRecId), fieldNum(ReqDemPlanAggregatedForecast, RecId));

        this.modelMultiSelectControl = SysLookupMultiSelectCtrl::constructWithQuery(element, ForecastModel, forecastModelQuery, false, [tableNum(ForecastModel), modelFieldId]);
        ForecastModel.visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setForecastModelFilters</Name>
				<Source><![CDATA[
    private void setForecastModelFilters(ReqDemPlanGranularityAttribute _attributeKey, date _start, date _end)
    {
        QueryBuildDataSource aggregatedForecast = forecastModelQuery.dataSourceTable(tableNum(ReqDemPlanAggregatedForecast));
        SysQuery::findOrCreateRange(aggregatedForecast, fieldNum(ReqDemPlanAggregatedForecast, ForecastDate))
            .value(queryRange(_start, _end));
        SysQuery::findOrCreateRange(aggregatedForecast, fieldNum(ReqDemPlanAggregatedForecast, AttributeKey))
            .value(_attributeKey);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWithDataContract</Name>
				<Source><![CDATA[
    private void initWithDataContract(ReqDemPlanForecastDetailsDataContract _dataContract)
    {
        if (currentAggregation.RecId != _dataContract.parmAggregationRecId())
        {
            currentAggregation = ReqDemPlanAggregatedForecast::find(_dataContract.parmAggregationRecId());

            this.applyFilters(currentAggregation, ReqDemPlanAggregatedForecast_DS);
            this.applyFilters(currentAggregation, ReqDemPlanAggregatedHistory_DS);

            forecastBuilder = new ReqDemPlanAggregatedMatrixBuilder(ReqDemPlanAggregatedForecast_DS.query(), _dataContract.parmForecastPeriodStart(), _dataContract.parmForecastPeriodEnd(),
                _dataContract.parmDateGranularity());
            forecastBuilder.parmMatrixLineDefinitions().addEnd(new ReqDemPlanMatrixLineDefinitionGeneric("@SYS102639"));
            forecastBuilder.parmMatrixLineDefinitions().addEnd(new ReqDemPlanMatrixLineDefinitionManualAdjustments());
            forecastBuilder.parmMatrixLineDefinitions().addEnd(new ReqDemPlanMatrixLineDefinitionSigma());

            forecastBuilder.parmShowTotalSumColumn(true);

            this.setupHistoryBuilder(_dataContract);

            GranularityText.text(attributeManager.getPivotAttributesNameValueText(currentAggregation));
            this.initForecastSalesButton(currentAggregation);
            this.setAggregateModelVariables(currentAggregation);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupHistoryBuilder</Name>
				<Source><![CDATA[
    private void setupHistoryBuilder(ReqDemPlanForecastDetailsDataContract _dataContract)
    {
        historyBuilder = new ReqDemPlanAggregatedMatrixBuilder(
            ReqDemPlanAggregatedHistory_DS.query(), 
            _dataContract.parmHistoricalPeriodStart(), 
            _dataContract.parmHistoricalPeriodEnd(), 
            _dataContract.parmDateGranularity());
        historyBuilder.parmShowTotalSumColumn(true);
        historyBuilder.parmShowTotalAverageColumn(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyFilters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies filter values on all pivot attribute values.
    /// </summary>
    /// <param name = "_aggregation">The aggregation record to filter by.</param>
    /// <param name = "_dataSource">The data source to filter.</param>
    private void applyFilters(ReqDemPlanAggregatedForecast _aggregation, FormDataSource _dataSource)
    {
        var query = _dataSource.query();
        var queryBuildDataSource = query.dataSourceTable(_dataSource.table());

        var range = SysQuery::findOrCreateRange(queryBuildDataSource, fieldNum(ReqDemPlanAggregatedForecast, AttributeKey));

        range.value(_aggregation.AttributeKey);
        range.status(RangeStatus::Hidden);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshForecast</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes the forecast data.
    /// </summary>
    /// <param name = "_buildPeriods">A Boolean value indicating whether to refresh date columns.</param>
    /// <param name = "_updateRecord">A Boolean value indicating whether to refresh only current forecast record</param>
    /// <param name = "_updateChart">A Boolean value indicating whether the chart should be refreshed.</param>
    public void refreshForecast(boolean _buildPeriods = currentForecastMatrix == null, boolean _updateRecord = false, boolean _updateChart = true)
    {
        if (_buildPeriods)
        {
            forecastBuilder.buildPeriods();
        }

        if (_updateRecord)
        {
            forecastBuilder.updateMatrixRecord(currentForecastMatrix, currentAggregation);
        }
        else
        {
            frozenColumnCount = generatedForecast ? generatedForecast.getFrozenBucketsCountAfterDate(forecastBuilder.parmStartDate()) : 0;

            currentForecastMatrix = forecastBuilder.buildMatrix(ReqDemPlanPageDirection::Reset);
        }

        ReqDemPlanTableControlBuilder::buildFromMatrix(ForecastTable, currentForecastMatrix);

        if (currentHistoryMatrix && _updateChart)
        {
            this.buildChart();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshHistory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes the historical data.
    /// </summary>
    /// <param name = "_buildPeriods">A Boolean value indicating whether to refresh date columns.</param>
    private void refreshHistory(boolean _buildPeriods = currentHistoryMatrix == null)
    {
        if (_buildPeriods)
        {
            historyBuilder.buildPeriods();
            this.setForecastModelFilters(currentAggregation.AttributeKey, historyBuilder.parmStartDate(), historyBuilder.parmEndDate());
        }

        historyBuilder.clearMatrixLineDefinitions();
        historyBuilder.parmMatrixLineDefinitions().addEnd(new ReqDemPlanMatrixLineDefinitionGeneric("@DMP:DetailsFormHistoricalDemand"));

        List forecastModelIds = this.getForecastModelIds();
        historyBuilder.parmForecastModelIds(forecastModelIds);
        
        ReqDemPlanMatrixLineDefinitionHistoricalForecast historicalForecastMatrixLineDefinition = new ReqDemPlanMatrixLineDefinitionHistoricalForecast();
        historicalForecastMatrixLineDefinition.parmNumberOfModels(forecastModelIds.elements());
        historyBuilder.parmMatrixLineDefinitions().addEnd(historicalForecastMatrixLineDefinition);

        if (showHistoricalAccuracy)
        {
            historyBuilder.parmMatrixLineDefinitions().addEnd(new ReqDemPlanMatrixLineDefinitionMae());
            historyBuilder.parmMatrixLineDefinitions().addEnd(new ReqDemPlanMatrixLineDefinitionMape());
        }

        currentHistoryMatrix = historyBuilder.buildMatrix(ReqDemPlanPageDirection::Reset);
        ReqDemPlanTableControlBuilder::buildFromMatrix(HistoryTable, currentHistoryMatrix);

        if (currentForecastMatrix)
        {
            this.buildChart();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getForecastModelIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the selected model ids from the control or an empty list if the first value is empty.
    /// </summary>
    /// <returns>A container of the model ids</returns>
    private List getForecastModelIds()
    {
        container selectedFieldValues = modelMultiSelectControl ? modelMultiSelectControl.getSelectedFieldValues() : conNull();
        if (selectedFieldValues && !conPeek(selectedFieldValues, 1))
        {
            return new List(Types::String);
        }
        else
        {
            return con2List(selectedFieldValues);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildChart</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the chart using the current values for historical and forecast data.
    /// </summary>
    public void buildChart()
    {
        delete_from historicalGraphicsData;
        delete_from historicalForecastGraphicsData;
        delete_from forecastGraphicsData;
        delete_from confidenceGraphicsData;

        this.buildChartCategories();

        if (currentHistoryMatrix != null)
        {
            var enumerator = currentHistoryMatrix.parmColumnLabels().getEnumerator();
            var i = 1;
            while (enumerator.moveNext())
            {
                var coordinates = [1, i];
                if (currentHistoryMatrix.cellExists(coordinates))
                {
                    historicalGraphicsData.clear();
                    historicalGraphicsData.CategorySort = i;
                    historicalGraphicsData.Category = enumerator.current();
                    historicalGraphicsData.Value = currentHistoryMatrix.cellValue(coordinates);
                    historicalGraphicsData.insert();
                }

                var forecastCoordinates = [2, i];
                if (currentHistoryMatrix.cellExists(forecastCoordinates))
                {
                    historicalForecastGraphicsData.clear();
                    historicalForecastGraphicsData.CategorySort = i;
                    historicalForecastGraphicsData.Category = enumerator.current();
                    historicalForecastGraphicsData.Value = currentHistoryMatrix.cellValue(forecastCoordinates);
                    historicalForecastGraphicsData.insert();
                }

                ++i;
            }

            //Workaround making historical data series and forecast data series continuous
            var historyEndCoordinate = [1, i - 1];
            if (currentHistoryMatrix.parmCells().exists(historyEndCoordinate))
            {
                var historyEndDateKey = ReqDemPlanBucket::findBucketStart(historyBuilder.parmEndDate());
                var forecastStartDateKey = ReqDemPlanBucket::findBucketStart(forecastBuilder.parmStartDate());

                if (forecastStartDateKey - historyEndDateKey == 1)
                {
                    forecastGraphicsData.clear();
                    forecastGraphicsData.CategorySort = 0;
                    forecastGraphicsData.Category = date2StrUsr(dateConverter.dateKeyToDate(historyEndDateKey, forecastBuilder.parmDateGranularity()));

                    ReqDemPlanMatrixCell cell = currentHistoryMatrix.parmCells().lookup(historyEndCoordinate);
                    forecastGraphicsData.Value = cell.value();
                    forecastGraphicsData.insert();
                }
            }

            historicalGraphicsData_ds.research();
            historicalForecastGraphicsData_ds.research();
        }

        if (currentForecastMatrix != null)
        {
            var enumerator = currentForecastMatrix.parmColumnLabels().getEnumerator();
            var i = 1;
            while (enumerator.moveNext())
            {
                var coordinates = [1, i];
                if (currentForecastMatrix.cellExists(coordinates))
                {
                    forecastGraphicsData.clear();
                    forecastGraphicsData.CategorySort = i;
                    forecastGraphicsData.Category = enumerator.current();
                    forecastGraphicsData.Value = currentForecastMatrix.cellValue(coordinates);
                    forecastGraphicsData.insert();
                }

                var sigmaCoordinates = [3, i];
                if (currentForecastMatrix.parmCells().exists(sigmaCoordinates))
                {
                    ReqDemPlanAggregatedForecast aggregation = currentForecastMatrix.cellRecord(sigmaCoordinates);
                    var sigma = currentForecastMatrix.cellValue(sigmaCoordinates);

                    confidenceGraphicsData.clear();
                    confidenceGraphicsData.CategorySort = i;
                    confidenceGraphicsData.Category = enumerator.current();
                    confidenceGraphicsData.MinValue = aggregation.OriginalQty - sigma;
                    confidenceGraphicsData.MaxValue = aggregation.OriginalQty + sigma;
                    confidenceGraphicsData.insert();
                }
                i++;
            }

            forecastGraphicsData_ds.research();
            confidenceGraphicsData_ds.research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCallerForm</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Refreshes the caller form in order to display modifications.
    /// </summary>
    /// <param name="_aggregation">
    ///     The record instance to pass to the caller form.
    /// </param>
    public void refreshCallerForm(Common _aggregation = null)
    {
        var refreshableForm = callerForm as ReqRefreshableFormInterface;
        if (refreshableForm)
        {
            if (_aggregation)
            {
                refreshableForm.refreshFormRecord(_aggregation);
            }
            else
            {
                refreshableForm.refreshForm();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates table controls with data.
    /// </summary>
    /// <param name = "_retainPosition">The boolean value indicating whether to retain current cursor position or not; optional.</param>
    public void refreshForm(boolean _retainPosition = false)
    {
        element.refreshHistory(true);
        element.refreshForecast(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshFormRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes given record in the form.
    /// </summary>
    /// <param name = "_record">The record that should be refreshed on the caller form.</param>
    public void refreshFormRecord(Common _record)
    {
        if (currentForecastMatrix)
        {
            forecastBuilder.updateMatrixRecord(currentForecastMatrix, _record);
            ReqDemPlanTableControlBuilder::buildFromMatrix(ForecastTable, currentForecastMatrix);
            this.buildChart();
        }

        this.refreshCallerForm(_record);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrentForecastMatrix</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Exposes the current matrix with the forecast data.
    /// </summary>
    public ReqDemPlanMatrix getCurrentForecastMatrix()
    {
        return currentForecastMatrix;
    }

]]></Source>
			</Method>
			<Method>
				<Name>forecastCellModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates tables, charts and related forms when a new value is entered in the forecast field.
    /// </summary>
    public void forecastCellModified()
    {
        var row = ForecastTable.row();
        var column = ForecastTable.column();

        if (column == ForecastTable.columns())
        {
            this.forecastSumCellModified(row, column);
        }
        else
        {
            var newQty = ForecastTable.cell(column, row).data();
            this.forecastCellChangeQty(row, column, newQty);
        }

        this.buildChart();
    }

]]></Source>
			</Method>
			<Method>
				<Name>forecastCellChangeQty</Name>
				<Source><![CDATA[
    private void forecastCellChangeQty(int _row, int _column, real _newQty)
    {
        if (currentForecastMatrix.cellExists([_row, _column]))
        {
            currentAggregation = currentForecastMatrix.cellRecord([_row, _column]);
            try
            {
                forecastAggregator.deaggregate(currentAggregation, _newQty);

                ForecastTable.updateCell(_column, _row);

                element.refreshForecast(false, true, false);
                element.refreshCallerForm(currentAggregation);
            }
            catch
            {
                if (!currentAggregation)
                {
                    Box::warning("@DMP:FormOutdatedAndRefreshed");
                    element.refreshCallerForm();
                    element.close();
                }
            }
        }
        else
        {
            error("@DMP:ForecastZero");
            ForecastTable.cell(_column, _row).data(0);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>forecastSumCellModified</Name>
				<Source><![CDATA[
    private void forecastSumCellModified(int _row, int _column)
    {
        real originalSumQty  = currentForecastMatrix.cellValue([_row, _column]);

        if (originalSumQty != 0 || ReqDemPlanForecastAggregatorZeroQuantityToggle::instance().isEnabled())
        {
            boolean zeroOriginalQuantity = originalSumQty == 0;

            real newSumQty       = ForecastTable.cell(_column, _row).data();
            real changeRatio     = zeroOriginalQuantity ? newSumQty : newSumQty / originalSumQty;

            for (int i = 1; i < _column; i++)
            {
                real newCellQty = zeroOriginalQuantity ? newSumQty / (_column - 1) : currentForecastMatrix.cellValue([_row, i]) * changeRatio;

                this.forecastCellChangeQty(_row, i, newCellQty);
            }

            forecastBuilder.updateMatrixTotalRecord(currentForecastMatrix, _row, _column, newSumQty);
        }
        else
        {
            error("@DMP:ForecastZero");
            ForecastTable.cell(_column, _row).data(0);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildChartCategories</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the data source with chart categories.
    /// </summary>
    /// <remarks>
    /// In order to display series with gaps on the chart, all categories must be specified in the separate data source.
    /// This data source must also be put as the first data set in the chart control.
    /// </remarks>
    private void buildChartCategories()
    {
        delete_from categoriesGraphicsData;

        var startKey = ReqDemPlanBucket::findBucketStart(historyBuilder.parmStartDate());
        var endKey = ReqDemPlanBucket::findBucketStart(forecastBuilder.parmEndDate());

        for (var currentKey = startKey; currentKey <= endKey; ++currentKey)
        {
            categoriesGraphicsData.clear();
            categoriesGraphicsData.CategorySort = currentKey;
            categoriesGraphicsData.Category = date2StrUsr(dateConverter.dateKeyToDate(currentKey, forecastBuilder.parmDateGranularity()));
            categoriesGraphicsData.insert();
        }

        categoriesGraphicsData_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initForecastSalesButton</Name>
				<Source><![CDATA[
    private void initForecastSalesButton(ReqDemPlanAggregatedForecast aggregation)
    {
        if (aggregation.ItemId)
        {
            changecompany(aggregation.company())
            {
                forecastSalesArgumentRecord = InventTable::find(aggregation.ItemId);
            }
        }
        else if (aggregation.AllocationKey)
        {
            changecompany(aggregation.company())
            {
                forecastSalesArgumentRecord = ForecastItemAllocation::find(aggregation.AllocationKey);
            }
        }

        ForecastSales.enabled(forecastSalesArgumentRecord != null);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAggregateModelVariables</Name>
				<Source><![CDATA[
    private void setAggregateModelVariables(ReqDemPlanAggregatedForecast _aggregation)
    {
        var aggregateVariables = ReqDemPlanModelVariables::aggregateVariables(_aggregation, attributeManager);

        boolean dataExists = aggregateVariables.parmAggregateRowsCount() > 0;

        if (dataExists)
        {
            ErrorPercentage.label(aggregateVariables.parmAggregateRowsCount() > 1 ? "@DMP:FieldAvgErrorPercentage" : "@DMP:FieldErrorPercentage");
            ErrorPercentage.realValue(aggregateVariables.parmErrorPercentage());

            ForecastingModelNames.label(aggregateVariables.parmForecastModelsCount() > 1 ? "@DMP:ReqDemPlanModelNames" : "@DMP:ReqDemPlanModelName");
            ForecastingModelNames.text(aggregateVariables.parmForecastModelNames());

            if (aggregateVariables.parmForecastGenerationFailed())
            {
                warning("@DMP:ForecastFailedForGivenDimension");
            }
        }

        ErrorPercentage.visible(dataExists);
        ForecastingModelNames.visible(dataExists);
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeCompanyContext</Name>
				<Source><![CDATA[
    protected void changeCompanyContext(SelectableDataArea _selectableDataArea)
    {
        appl.setDefaultCompany(_selectableDataArea, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtons</Name>
				<Source><![CDATA[
    protected void enableButtons()
    {
        TransactionDetails.enabled(ForecastTable && ForecastTable.row() > 0 && ForecastTable.column() > 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        #task
        int ret;

        if (_taskId == #taskRefresh)
        {
            ReqDemPlanAggregatedForecastNavigation_DS.active();
        }
        else
        {
            ret = super(_taskId);
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ReqDemPlanAggregatedForecastNavigation</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            var qbds = this.queryBuildDataSource();

            qbds.sortClear();
            qbds.orderMode(OrderMode::GroupBy);
            qbds.addSortField(fieldNum(ReqDemPlanAggregatedForecast, AttributeKey));
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (ReqDemPlanCreateForecastService::isForecastGenerationInProgress())
            {
                Box::stop("@DMP:ForecastGenerationInProgressFormNotAvailable");
                element.close();
            }

            ReqDemPlanAggregatedForecast aggregatedForecast;

            select firstonly crosscompany RecId from aggregatedForecast
                where aggregatedForecast.AttributeKey == reqDemPlanAggregatedForecastNavigation.AttributeKey;

            if (aggregatedForecast)
            {
                currentDataContract.parmAggregationRecId(aggregatedForecast.RecId);
                element.initWithDataContract(currentDataContract);
                element.refreshHistory(true);
                element.refreshForecast(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ReqDemPlanAggregatedForecast</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            var filter = this.query().addQueryFilter(this.queryBuildDataSource(), fieldStr(ReqDemPlanAggregatedForecast, SourceTable));
            filter.value(tablestr(ReqDemPlanForecast));
            filter.status(RangeStatus::Hidden);

            filter = this.query().addQueryFilter(this.queryBuildDataSource(), fieldStr(ReqDemPlanAggregatedForecast, Version));
            filter.value(queryValue(enum2int(ReqDemPlanForecastVersion::Forecasted)));
            filter.status(RangeStatus::Hidden);

            ReqDemPlanAggregatedForecast.setTmp();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ReqDemPlanAggregatedHistory</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            var filter = this.query().addQueryFilter(this.queryBuildDataSource(), fieldStr(ReqDemPlanAggregatedForecast, SourceTable));
            filter.value(tablestr(ReqDemPlanCubeStagingTable));
            filter.status(RangeStatus::Hidden);

            ReqDemPlanAggregatedHistory.setTmp();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ForecastSales</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (forecastSalesArgumentRecord != null)
            {
                Args args = new Args();
                args.record(forecastSalesArgumentRecord);
                args.caller(element);
                this.menufunction().run(args);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ForecastModel</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
            element.refreshHistory();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ShowHistoricalAccuracy</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            showHistoricalAccuracy = this.toggleValue();
            element.refreshHistory();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HistoryDateRange</Name>
				<Type>DropDialogButton</Type>
				<Methods>
					<Method>
						<Name>dialogClosed</Name>
						<Source><![CDATA[
        public void dialogClosed(xFormRun _formRun)
        {
            super(_formRun);

            Object dialogForm = _formRun;

            historyBuilder.parmStartDate(dialogForm.fromDate());
            historyBuilder.parmEndDate(dialogForm.toDate());
            element.refreshHistory(true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>dialogInitialized</Name>
						<Source><![CDATA[
        public void dialogInitialized(xFormRun _formRun)
        {
            super(_formRun);

            Object dialogForm = _formRun;
            dialogForm.setFromDate(historyBuilder.parmStartDate());
            dialogForm.setToDate(historyBuilder.parmEndDate());
            dialogForm.setDateGranularity(historyBuilder.parmDateGranularity());

            if (generatedForecast)
            {
                dialogForm.setFromDateLimit(generatedForecast.HistoricalStart);
                dialogForm.setToDateLimit(generatedForecast.getForecastEndDate());
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HistoryTable</Name>
				<Type>Table</Type>
				<Methods>
					<Method>
						<Name>editControl</Name>
						<Source><![CDATA[
        public FormControl editControl(int _Column, int _Row)
        {
            FormControl ret;

            ret = HistoryQtyCell;

            if (currentHistoryMatrix.parmCells().exists([_Row, _Column]))
            {
                ReqDemPlanMatrixCell cell = currentHistoryMatrix.parmCells().lookup([_Row, _Column]);

                if (!cell.enabled())
                {
                    ret = HistoryQtyCellDisabled;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ForecastDateRange</Name>
				<Type>DropDialogButton</Type>
				<Methods>
					<Method>
						<Name>dialogClosed</Name>
						<Source><![CDATA[
        public void dialogClosed(xFormRun _formRun)
        {
            super(_formRun);

            Object dialogForm = _formRun;

            forecastBuilder.parmStartDate(dialogForm.fromDate());
            forecastBuilder.parmEndDate(dialogForm.toDate());
            element.refreshForecast(true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>dialogInitialized</Name>
						<Source><![CDATA[
        public void dialogInitialized(xFormRun _formRun)
        {
            super(_formRun);

            Object dialogForm = _formRun;
            dialogForm.setFromDate(forecastBuilder.parmStartDate());
            dialogForm.setToDate(forecastBuilder.parmEndDate());
            dialogForm.setDateGranularity(forecastBuilder.parmDateGranularity());

            if (generatedForecast)
            {
                dialogForm.setFromDateLimit(generatedForecast.ForecastStartDate);
                dialogForm.setToDateLimit(generatedForecast.getForecastEndDate());
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransactionDetails</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            ReqDemPlanAggregatedForecast aggregatedForecast;

            var row =  ForecastTable.row();
            var column =  ForecastTable.column();

            if (currentForecastMatrix)
            {
                if (currentForecastMatrix.cellExists([row, column]))
                {
                    aggregatedForecast = currentForecastMatrix.cellRecord([row, column]);
                }
            }

            if (aggregatedForecast)
            {
                element.changeCompanyContext(aggregatedForecast.DataAreaId);

                var args = new Args();
                args.caller(element);
                args.record(aggregatedForecast);
                this.menufunction().run(args);
            }
            else
            {
                warning("@SYS32808");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ForecastTable</Name>
				<Type>Table</Type>
				<Methods>
					<Method>
						<Name>editControl</Name>
						<Source><![CDATA[
        public FormControl editControl(int _column, int _row)
        {
            FormControl control;

            var coordinates = [_row, _column];
            if (_row == 1)
            {
                var isFrozen = _column <= frozenColumnCount;

                var forecastMatrix = element.getCurrentForecastMatrix();
                if (forecastMatrix)
                {
                    if (forecastMatrix.cellExists(coordinates))
                    {
                        ReqDemPlanAggregatedForecast aggregation = forecastMatrix.cellRecord(coordinates);

                        if (aggregation.Qty != aggregation.OriginalQty)
                        {
                            if (isFrozen)
                            {
                                control = ForecastQtyCellModifiedFrozen;
                            }
                            else
                            {
                                control = ForecastQtyCellModified;
                            }
                        }
                    }
                }

                if (!control)
                {
                    if (isFrozen)
                    {
                        control = ForecastQtyCellFrozen;
                    }
                    else
                    {
                        control = ForecastQtyCell;
                    }
                }
            }
            else
            {
                ReqDemPlanMatrixCell cell;

                if (currentHistoryMatrix.parmCells().exists(coordinates))
                {
                    cell = currentForecastMatrix.parmCells().lookup(coordinates);
                }

                if (cell && cell.enabled())
                {
                    control = ManualAdjustmentQtyCell;
                }
                else
                {
                    control = ForecastQtyCellDisabled;
                }
            }

            return control;
        }

]]></Source>
					</Method>
					<Method>
						<Name>activeCellChanged</Name>
						<Source><![CDATA[
        public void activeCellChanged()
        {
            super();

            element.enableButtons();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ForecastQtyCell</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.forecastCellModified();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ForecastQtyCellModified</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.forecastCellModified();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ForecastQtyCellDisabled</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.forecastCellModified();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ReqDemPlanAggregatedForecastNavigation</Name>
			<Table>ReqDemPlanAggregatedForecast</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AllocationKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Color</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Configuration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForecastDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogisticsAddressStateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogisticsCountryRegionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Sigma</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Site</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Size</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Style</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Version</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Warehouse</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ReqDemPlanAggregatedForecast</Name>
			<Table>ReqDemPlanAggregatedForecast</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AggQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AllocationKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Color</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Configuration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForecastDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InsideFreezingHorizon</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogisticsAddressStateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogisticsCountryRegionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModelId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Site</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Size</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Style</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Version</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Warehouse</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<LinkType>Passive</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ReqDemPlanAggregatedHistory</Name>
			<Table>ReqDemPlanAggregatedForecast</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AggQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AllocationKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Color</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Configuration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForecastDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InsideFreezingHorizon</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogisticsAddressStateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LogisticsCountryRegionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModelId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Site</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Size</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Style</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Version</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Warehouse</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<LinkType>Passive</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ForecastGraphicsData</Name>
			<Table>GraphicsTmpData</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategorySort</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Serie</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Value</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Passive</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HistoricalGraphicsData</Name>
			<Table>GraphicsTmpData</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategorySort</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Serie</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Value</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Passive</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CategoriesGraphicsData</Name>
			<Table>GraphicsTmpData</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategorySort</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Serie</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Value</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Passive</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ConfidenceGraphicsData</Name>
			<Table>GraphicsRangeTmpData</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategorySort</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaxValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Serie</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Passive</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HistoricalForecastGraphicsData</Name>
			<Table>GraphicsTmpData</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategorySort</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Serie</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Value</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Passive</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DMP:DetailsFormCaption</Caption>
		<Pattern xmlns="">DetailsMaster</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">DetailsFormMaster</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ForecastSalesGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ForecastSales</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>ForecastSales</MenuItemName>
								<Text>@DMP:CurrentDemandForecast</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>NavigationGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>ReqDemPlanAggregatedForecastNavigation_AttributeKey</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>NavigationGrid</Name>
						<AllowEdit>No</AllowEdit>
						<Type>Grid</Type>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReqDemPlanAggregatedForecastNavigation_AttributeKey</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>AttributeKey</DataField>
								<DataSource>ReqDemPlanAggregatedForecastNavigation</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReqDemPlanAggregatedForecastNavigation_AllocationKey</Name>
								<Type>String</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataField>AllocationKey</DataField>
								<DataSource>ReqDemPlanAggregatedForecastNavigation</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ReqDemPlanAggregatedForecastNavigation_ItemId</Name>
								<Type>String</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataField>ItemId</DataField>
								<DataSource>ReqDemPlanAggregatedForecastNavigation</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>ReqDemPlanAggregatedForecastNavigation</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>PanelTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DetailsPanel</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TitleGroup</Name>
								<ExtendedStyle>tabularFields</ExtendedStyle>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GranularityText</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Label>@SCM:TitleString</Label>
										<ShowLabel>No</ShowLabel>
										<Style>TitleField</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ForecastModelGroup</Name>
										<ExtendedStyle>entityStatus</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ForecastModel</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>ForecastModelId</ExtendedDataType>
												<Label>@SYS58021</Label>
												<LabelPosition>Above</LabelPosition>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalRight</ArrangeMethod>
										<Breakable>No</Breakable>
										<FrameType>None</FrameType>
										<Style>CustomFilter</Style>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>DetailTitleContainer</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTabControl">
								<Name>MainTab</Name>
								<Type>Tab</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>HistoryTabPage</Name>
										<Pattern>ToolbarList</Pattern>
										<PatternVersion>1.2</PatternVersion>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>HistoryActionPane</Name>
												<Type>ActionPane</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>HistoricalAccuracy</Name>
														<Type>ButtonGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>ShowHistoricalAccuracy</Name>
																<Type>Button</Type>
																<FormControlExtension
																	i:nil="true" />
																<NormalImage>Total</NormalImage>
																<Text>@DMP:ShowHistoricalForecastAccuracy</Text>
																<ToggleButton>Check</ToggleButton>
															</AxFormControl>
														</Controls>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>HistoryDateRangeGroup</Name>
														<Type>ButtonGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormDropDialogButtonControl">
																<Name>HistoryDateRange</Name>
																<Type>DropDialogButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<MenuItemName>ReqDemPlanForecastViewerDateRange</MenuItemName>
																<NormalImage>Month</NormalImage>
																<Text>@DMP1433</Text>
															</AxFormControl>
														</Controls>
														<Caption>@SYS41297</Caption>
													</AxFormControl>
												</Controls>
												<Style>Strip</Style>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormTableControl">
												<Name>HistoryTable</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Table</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>HistoryQtyCell</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>Real</Type>
														<FormControlExtension
															i:nil="true" />
														<Label>@SCM:ReqDemPlanForecastDetails_ForecastQtyCell</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>HistoryQtyCellDisabled</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Enabled>No</Enabled>
														<Type>Real</Type>
														<FormControlExtension
															i:nil="true" />
														<Label>@SCM:ReqDemPlanForecastDetails_ForecastQtyCellDisabled</Label>
														<ShowLabel>No</ShowLabel>
														<ShowZero>No</ShowZero>
													</AxFormControl>
												</Controls>
												<Column>1</Column>
												<Columns>0</Columns>
												<Row>1</Row>
												<Rows>1</Rows>
											</AxFormControl>
										</Controls>
										<Caption>@DMP:DetailsFormHistoricalDemand</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>ForecastTabPage</Name>
										<Pattern>ToolbarList</Pattern>
										<PatternVersion>1.2</PatternVersion>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>ForecastActionPane</Name>
												<Type>ActionPane</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>ForecastDateRangeGroup</Name>
														<Type>ButtonGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormDropDialogButtonControl">
																<Name>ForecastDateRange</Name>
																<Type>DropDialogButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<MenuItemName>ReqDemPlanForecastViewerDateRange</MenuItemName>
																<NormalImage>Month</NormalImage>
																<Text>@DMP1012</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>TransactionDetails</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<Type>MenuFunctionButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<MenuItemName>ReqDemPlanForecastViewerTransactions</MenuItemName>
																<MenuItemType>Action</MenuItemType>
																<NormalImage>BulletedList</NormalImage>
															</AxFormControl>
														</Controls>
														<Caption>@SYS41297</Caption>
													</AxFormControl>
												</Controls>
												<Style>Strip</Style>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormTableControl">
												<Name>ForecastTable</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Table</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ForecastQtyCell</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>Real</Type>
														<FormControlExtension
															i:nil="true" />
														<Label>@SCM:ReqDemPlanForecastDetails_ForecastQtyCell</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ForecastQtyCellFrozen</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ExtendedStyle>planning_fieldFrozen</ExtendedStyle>
														<Type>Real</Type>
														<FormControlExtension
															i:nil="true" />
														<Label>@SCM:ReqDemPlanForecastDetails_ForecastQtyCellFrozen</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ManualAdjustmentQtyCell</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Enabled>No</Enabled>
														<Type>Real</Type>
														<FormControlExtension
															i:nil="true" />
														<Label>@SCM:ReqDemPlanForecastDetails_ManualAdjustmentQtyCell</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ForecastQtyCellModified</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ExtendedStyle>planning_fieldModified</ExtendedStyle>
														<Type>Real</Type>
														<FormControlExtension
															i:nil="true" />
														<Label>@SCM:ReqDemPlanForecastDetails_ForecastQtyCellModified</Label>
														<ShowLabel>No</ShowLabel>
														<ViewEditMode>Edit</ViewEditMode>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ForecastQtyCellModifiedFrozen</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Enabled>No</Enabled>
														<ExtendedStyle>planning_fieldModified</ExtendedStyle>
														<Type>Real</Type>
														<FormControlExtension
															i:nil="true" />
														<Label>@SCM:ReqDemPlanForecastDetails_ForecastQtyCellModifiedFrozen</Label>
														<ShowLabel>No</ShowLabel>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ForecastQtyCellDisabled</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Enabled>No</Enabled>
														<Type>Real</Type>
														<FormControlExtension
															i:nil="true" />
														<Label>@SCM:ReqDemPlanForecastDetails_ForecastQtyCellDisabled</Label>
														<ShowLabel>No</ShowLabel>
														<ShowZero>No</ShowZero>
													</AxFormControl>
												</Controls>
												<Column>1</Column>
												<Columns>0</Columns>
												<Row>1</Row>
												<Rows>3</Rows>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ForecastFooter</Name>
												<Pattern>FieldsFieldGroups</Pattern>
												<PatternVersion>1.1</PatternVersion>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>ErrorPercentage</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>Real</Type>
														<FormControlExtension
															i:nil="true" />
														<Label>@DMP:FieldErrorPercentage</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ForecastingModelNames</Name>
														<AllowEdit>No</AllowEdit>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<ExtendedDataType>ReqDemPlanModelNames</ExtendedDataType>
													</AxFormControl>
												</Controls>
												<ColumnsMode>Fill</ColumnsMode>
												<Caption>@DMP:ForecastModelDetails</Caption>
												<FrameOptionButton>Hide</FrameOptionButton>
												<OptionValue>0</OptionValue>
											</AxFormControl>
										</Controls>
										<Caption>@SYS102639</Caption>
										<FastTabExpanded>Yes</FastTabExpanded>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>ChartTabPage</Name>
										<Pattern>Custom</Pattern>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ChartGroup</Name>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>Group</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormContainerControl">
														<Name>Chart</Name>
														<Type>Container</Type>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension>
															<Name>SysChart</Name>
															<ExtensionComponents>
																<AxFormControlExtensionComponent xmlns=""
																	i:type="AxFormControlExtensionComponentComposite">
																	<Name>parmDataSets</Name>
																	<ExtensionComponents>
																		<AxFormControlExtensionComponent xmlns=""
																			i:type="AxFormControlExtensionComponentLeaf">
																			<Name>CategoryDataSet</Name>
																			<ComponentType>SysBuildChartDataSet</ComponentType>
																			<ExtensionProperties>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataSource</Name>
																					<Type>String</Type>
																					<Value>CategoriesGraphicsData</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmCategoryField</Name>
																					<Type>String</Type>
																					<Value>Category</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmGroupBy</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																			</ExtensionProperties>
																		</AxFormControlExtensionComponent>
																		<AxFormControlExtensionComponent xmlns=""
																			i:type="AxFormControlExtensionComponentLeaf">
																			<Name>ForecastDataSet</Name>
																			<ComponentType>SysBuildChartDataSet</ComponentType>
																			<ExtensionProperties>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataSource</Name>
																					<Type>String</Type>
																					<Value>ForecastGraphicsData</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmCategoryField</Name>
																					<Type>String</Type>
																					<Value>Category</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmGroupBy</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																			</ExtensionProperties>
																		</AxFormControlExtensionComponent>
																		<AxFormControlExtensionComponent xmlns=""
																			i:type="AxFormControlExtensionComponentLeaf">
																			<Name>HistoricalDataSet</Name>
																			<ComponentType>SysBuildChartDataSet</ComponentType>
																			<ExtensionProperties>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataSource</Name>
																					<Type>String</Type>
																					<Value>HistoricalGraphicsData</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmCategoryField</Name>
																					<Type>String</Type>
																					<Value>Category</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmGroupBy</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																			</ExtensionProperties>
																		</AxFormControlExtensionComponent>
																		<AxFormControlExtensionComponent xmlns=""
																			i:type="AxFormControlExtensionComponentLeaf">
																			<Name>HistoricalForecastDataSet</Name>
																			<ComponentType>SysBuildChartDataSet</ComponentType>
																			<ExtensionProperties>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataSource</Name>
																					<Type>String</Type>
																					<Value>HistoricalForecastGraphicsData</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmCategoryField</Name>
																					<Type>String</Type>
																					<Value>Category</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmGroupBy</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																			</ExtensionProperties>
																		</AxFormControlExtensionComponent>
																		<AxFormControlExtensionComponent xmlns=""
																			i:type="AxFormControlExtensionComponentLeaf">
																			<Name>ConfidenceDataSet</Name>
																			<ComponentType>SysBuildChartDataSet</ComponentType>
																			<ExtensionProperties>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataSource</Name>
																					<Type>String</Type>
																					<Value>ConfidenceGraphicsData</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmCategoryField</Name>
																					<Type>String</Type>
																					<Value>Category</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmGroupBy</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																			</ExtensionProperties>
																		</AxFormControlExtensionComponent>
																	</ExtensionComponents>
																</AxFormControlExtensionComponent>
																<AxFormControlExtensionComponent xmlns=""
																	i:type="AxFormControlExtensionComponentComposite">
																	<Name>parmMeasures</Name>
																	<ExtensionComponents>
																		<AxFormControlExtensionComponent xmlns=""
																			i:type="AxFormControlExtensionComponentLeaf">
																			<Name>Historical</Name>
																			<ComponentType>SysBuildChartMeasure</ComponentType>
																			<ExtensionProperties>
																				<AxFormControlExtensionProperty>
																					<Name>parmChartType</Name>
																					<Type>Enum</Type>
																					<TypeName>SysChartType</TypeName>
																					<Value>Line</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmTitle</Name>
																					<Type>String</Type>
																					<Value>@DMP:HistorySeries</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataLabels</Name>
																					<Type>Enum</Type>
																					<TypeName>SysChartDataLabels</TypeName>
																					<Value>None</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataSet</Name>
																					<Type>String</Type>
																					<Value>HistoricalDataSet</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmMeasureField</Name>
																					<Type>String</Type>
																					<Value>Value</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmUseSecondaryYAxis</Name>
																					<Type>Enum</Type>
																					<TypeName>boolean</TypeName>
																					<Value>False</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmSecondaryYAxisName</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmClickMenuItemType</Name>
																					<Type>Enum</Type>
																					<TypeName>MenuItemType</TypeName>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmClickMenuItemName</Name>
																					<Type>ExtendedDataType</Type>
																					<TypeName>MenuItemName</TypeName>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmKeyField</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmParameter1</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmParameter2</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataLabelsFormat</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmColor</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																			</ExtensionProperties>
																		</AxFormControlExtensionComponent>
																		<AxFormControlExtensionComponent xmlns=""
																			i:type="AxFormControlExtensionComponentLeaf">
																			<Name>HistoricalForecast</Name>
																			<ComponentType>SysBuildChartMeasure</ComponentType>
																			<ExtensionProperties>
																				<AxFormControlExtensionProperty>
																					<Name>parmChartType</Name>
																					<Type>Enum</Type>
																					<TypeName>SysChartType</TypeName>
																					<Value>Line</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmTitle</Name>
																					<Type>String</Type>
																					<Value>@DMP:HistoricalForecast</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataLabels</Name>
																					<Type>Enum</Type>
																					<TypeName>SysChartDataLabels</TypeName>
																					<Value>None</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataSet</Name>
																					<Type>String</Type>
																					<Value>HistoricalForecastDataSet</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmMeasureField</Name>
																					<Type>String</Type>
																					<Value>Value</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmUseSecondaryYAxis</Name>
																					<Type>Enum</Type>
																					<TypeName>boolean</TypeName>
																					<Value>False</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmSecondaryYAxisName</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmClickMenuItemType</Name>
																					<Type>Enum</Type>
																					<TypeName>MenuItemType</TypeName>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmClickMenuItemName</Name>
																					<Type>ExtendedDataType</Type>
																					<TypeName>MenuItemName</TypeName>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmKeyField</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmParameter1</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmParameter2</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataLabelsFormat</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmColor</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																			</ExtensionProperties>
																		</AxFormControlExtensionComponent>
																		<AxFormControlExtensionComponent xmlns=""
																			i:type="AxFormControlExtensionComponentLeaf">
																			<Name>Confidence</Name>
																			<ComponentType>SysBuildChartRangeMeasure</ComponentType>
																			<ExtensionProperties>
																				<AxFormControlExtensionProperty>
																					<Name>parmChartType</Name>
																					<Type>Enum</Type>
																					<TypeName>SysChartRangeType</TypeName>
																					<Value>AreaRange</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmMaxMeasureField</Name>
																					<Type>String</Type>
																					<Value>MaxValue</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmMinMeasureField</Name>
																					<Type>String</Type>
																					<Value>MinValue</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmTitle</Name>
																					<Type>String</Type>
																					<Value>@DMP:ConfidenceInterval</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataLabels</Name>
																					<Type>Enum</Type>
																					<TypeName>SysChartDataLabels</TypeName>
																					<Value>None</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataSet</Name>
																					<Type>String</Type>
																					<Value>ConfidenceDataSet</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmUseSecondaryYAxis</Name>
																					<Type>Enum</Type>
																					<TypeName>boolean</TypeName>
																					<Value>False</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmSecondaryYAxisName</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmClickMenuItemType</Name>
																					<Type>Enum</Type>
																					<TypeName>MenuItemType</TypeName>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmClickMenuItemName</Name>
																					<Type>ExtendedDataType</Type>
																					<TypeName>MenuItemName</TypeName>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmKeyField</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmParameter1</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmParameter2</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataLabelsFormat</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmColor</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																			</ExtensionProperties>
																		</AxFormControlExtensionComponent>
																		<AxFormControlExtensionComponent xmlns=""
																			i:type="AxFormControlExtensionComponentLeaf">
																			<Name>Forecast</Name>
																			<ComponentType>SysBuildChartMeasure</ComponentType>
																			<ExtensionProperties>
																				<AxFormControlExtensionProperty>
																					<Name>parmChartType</Name>
																					<Type>Enum</Type>
																					<TypeName>SysChartType</TypeName>
																					<Value>Line</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmTitle</Name>
																					<Type>String</Type>
																					<Value>@DMP:ForecastSeries</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataLabels</Name>
																					<Type>Enum</Type>
																					<TypeName>SysChartDataLabels</TypeName>
																					<Value>None</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataSet</Name>
																					<Type>String</Type>
																					<Value>ForecastDataSet</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmMeasureField</Name>
																					<Type>String</Type>
																					<Value>Value</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmUseSecondaryYAxis</Name>
																					<Type>Enum</Type>
																					<TypeName>boolean</TypeName>
																					<Value>False</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmSecondaryYAxisName</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmClickMenuItemType</Name>
																					<Type>Enum</Type>
																					<TypeName>MenuItemType</TypeName>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmClickMenuItemName</Name>
																					<Type>ExtendedDataType</Type>
																					<TypeName>MenuItemName</TypeName>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmKeyField</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmParameter1</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmParameter2</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataLabelsFormat</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmColor</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																			</ExtensionProperties>
																		</AxFormControlExtensionComponent>
																	</ExtensionComponents>
																</AxFormControlExtensionComponent>
																<AxFormControlExtensionComponent xmlns=""
																	i:type="AxFormControlExtensionComponentComposite">
																	<Name>parmSecondaryYAxes</Name>
																	<ExtensionComponents />
																</AxFormControlExtensionComponent>
															</ExtensionComponents>
															<ExtensionProperties>
																<AxFormControlExtensionProperty>
																	<Name>parmLegendEnabled</Name>
																	<Type>Enum</Type>
																	<TypeName>boolean</TypeName>
																	<Value>True</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmLegendAlignment</Name>
																	<Type>Enum</Type>
																	<TypeName>SysChartHorizontalAlignment</TypeName>
																	<Value>Auto</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmLegendPosition</Name>
																	<Type>Enum</Type>
																	<TypeName>SysChartVerticalAlignment</TypeName>
																	<Value>Auto</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmLegendLayout</Name>
																	<Type>Enum</Type>
																	<TypeName>SysChartLegendLayout</TypeName>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmTitleAlignment</Name>
																	<Type>Enum</Type>
																	<TypeName>SysChartHorizontalAlignment</TypeName>
																	<Value>Auto</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmText</Name>
																	<Type>String</Type>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmTitlePosition</Name>
																	<Type>Enum</Type>
																	<TypeName>SysChartVerticalAlignment</TypeName>
																	<Value>Auto</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmSerializedButtons</Name>
																	<Type>String</Type>
																	<Value>Line;Bar;Column;Pie;Funnel</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmYAxisTitle</Name>
																	<Type>String</Type>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmYAxisVisible</Name>
																	<Type>Enum</Type>
																	<TypeName>boolean</TypeName>
																	<Value>True</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmXAxisTitle</Name>
																	<Type>String</Type>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmClickMenuItemType</Name>
																	<Type>Enum</Type>
																	<TypeName>MenuItemType</TypeName>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmClickMenuItemName</Name>
																	<Type>ExtendedDataType</Type>
																	<TypeName>MenuItemName</TypeName>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmInteractionsDisabled</Name>
																	<Type>Enum</Type>
																	<TypeName>boolean</TypeName>
																	<Value>False</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmZoomLimit</Name>
																	<Type>Enum</Type>
																	<TypeName>SysChartDateTimeInterval</TypeName>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmToolbarEnabled</Name>
																	<Type>Enum</Type>
																	<TypeName>boolean</TypeName>
																	<Value>False</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmPadMargin</Name>
																	<Type>Int32</Type>
																	<Value>0</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmCrosshairsEnabled</Name>
																	<Type>Enum</Type>
																	<TypeName>boolean</TypeName>
																	<Value>True</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmTooltipShared</Name>
																	<Type>Enum</Type>
																	<TypeName>boolean</TypeName>
																	<Value>True</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmYAxisLabelsHidden</Name>
																	<Type>Enum</Type>
																	<TypeName>boolean</TypeName>
																	<Value>False</Value>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmYAxisMinValue</Name>
																	<Type>String</Type>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmYAxisMaxValue</Name>
																	<Type>String</Type>
																</AxFormControlExtensionProperty>
																<AxFormControlExtensionProperty>
																	<Name>parmPlotLineEnabled</Name>
																	<Type>Enum</Type>
																	<TypeName>boolean</TypeName>
																	<Value>False</Value>
																</AxFormControlExtensionProperty>
															</ExtensionProperties>
														</FormControlExtension>
														<Controls />
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalLeft</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<Caption>@DMP:DetailsFormChart</Caption>
										<FastTabExpanded>Yes</FastTabExpanded>
									</AxFormControl>
								</Controls>
								<Style>FastTabs</Style>
							</AxFormControl>
						</Controls>
						<PanelStyle>Details</PanelStyle>
						<Style>DetailsFormDetails</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GridPanel</Name>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GridCustomFilterGroup</Name>
								<Pattern>CustomAndQuickFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>MainGridQuickFilter</Name>
										<FormControlExtension>
											<Name>QuickFilterControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>targetControlName</Name>
													<Type>String</Type>
													<Value>MainGrid</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>defaultColumnName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>placeholderText</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>MainGrid</Name>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReqDemPlanAggregatedForecastNavigation_AttributeKey1</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AttributeKey</DataField>
										<DataSource>ReqDemPlanAggregatedForecastNavigation</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ReqDemPlanAggregatedForecastNavigation</DataSource>
								<DefaultAction>MainGridAction</DefaultAction>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>MainGridAction</Name>
								<Type>CommandButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Command>DetailsView</Command>
							</AxFormControl>
						</Controls>
						<PanelStyle>Grid</PanelStyle>
						<Style>DetailsFormGrid</Style>
					</AxFormControl>
				</Controls>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>