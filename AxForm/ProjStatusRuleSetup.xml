<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjStatusRuleSetup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjStatusRuleSetup extends FormRun
{
    ProjStatus  projStatus;
    ProjType    projType;

    boolean     createForecastChecked;
    boolean     createQuotationChecked;
    boolean     createEstimateChecked;
    boolean     createItemTaskChecked;
    boolean     createJournalChecked;
    boolean     createInvoiceProposalChecked;
    boolean     reverseEliminateChecked;
    boolean     createBeginningBalanceChecked;

    private boolean enableProjMultipleContractLinesForProjectFeature = ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled();

}
]]></Source>
			</Method>
			<Method>
				<Name>createBeginningBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables beginning balance rule if the checkbox is marked.
    /// </summary>
    /// <param name="_set">
    /// true if the checkbox is modified; otherwise, false.
    /// </param>
    /// <param name="_checked">
    /// A boolean value to specify whether the checkbox is marked or not.
    /// </param>
    /// <returns>
    /// true if the checkbox is marked; otherwise, false.
    /// </returns>
    public edit boolean createBeginningBalance(boolean _set, boolean _checked)
    {
        if (_set)
        {
            createBeginningBalanceChecked = _checked;
            ProjStatusTypeRule::enableRule(projStatus, projType, ProjStatusRule::CreateBeginningBalance, createBeginningBalanceChecked);
        }

        return createBeginningBalanceChecked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createEstimate</Name>
				<Source><![CDATA[
    public edit boolean createEstimate(boolean _set, boolean _checked)
    {
        if (_set)
        {
            createEstimateChecked = _checked;
            ProjStatusTypeRule::enableRule(projStatus, projType, ProjStatusRule::CreateEstimate, createEstimateChecked);
        }

        return createEstimateChecked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createForecast</Name>
				<Source><![CDATA[
    public edit boolean createForecast(boolean _set, boolean _checked)
    {
        if (_set)
        {
            createForecastChecked = _checked;
            ProjStatusTypeRule::enableRule(projStatus, projType, ProjStatusRule::CreateForecast, createForecastChecked);
        }

        return createForecastChecked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createInvoiceProposal</Name>
				<Source><![CDATA[
    public edit boolean createInvoiceProposal(boolean _set, boolean _checked)
    {
        if (_set)
        {
            createInvoiceProposalChecked = _checked;
            ProjStatusTypeRule::enableRule(projStatus, projType, ProjStatusRule::CreateInvoiceProposal, createInvoiceProposalChecked);
        }

        return createInvoiceProposalChecked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createItemTask</Name>
				<Source><![CDATA[
    public edit boolean createItemTask(boolean _set, boolean _checked)
    {
        if (_set)
        {
            createItemTaskChecked = _checked;
            ProjStatusTypeRule::enableRule(projStatus, projType, ProjStatusRule::CreateItemTask, createItemTaskChecked);
        }

        return createItemTaskChecked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createJournal</Name>
				<Source><![CDATA[
    public edit boolean createJournal(boolean _set, boolean _checked)
    {
        if (_set)
        {
            createJournalChecked = _checked;
            ProjStatusTypeRule::enableRule(projStatus, projType, ProjStatusRule::CreateJournal, createJournalChecked);
        }

        return createJournalChecked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createQuotation</Name>
				<Source><![CDATA[
    public edit boolean createQuotation(boolean _set, boolean _checked)
    {
        if (_set)
        {
            createQuotationChecked = _checked;
            ProjStatusTypeRule::enableRule(projStatus, projType, ProjStatusRule::CreateQuotation, createQuotationChecked);
        }

        return createQuotationChecked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        projType = element.enableProjMultipleContractLinesForProjectFeature ? ProjType::None : ProjType::TimeMaterial;

        ProjMutilContractLinesFeatureFormController::updateFormControlVisibity(element, [projTypeSelect.id()]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reverseEliminate</Name>
				<Source><![CDATA[
    public edit boolean reverseEliminate(boolean _set, boolean _checked)
    {
        if (_set)
        {
            reverseEliminateChecked = _checked;
            ProjStatusTypeRule::enableRule(projStatus, projType, ProjStatusRule::ReverseEliminate, reverseEliminateChecked);
        }

        return reverseEliminateChecked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>statusTypeChanged</Name>
				<Source><![CDATA[
    public void statusTypeChanged()
    {
        boolean statusAllowed;

        createForecastChecked = ProjStatusTypeRule::exist(projStatus, projType, ProjStatusRule::CreateForecast);
        createForecast.update();
        createQuotationChecked = ProjStatusTypeRule::exist(projStatus, projType, ProjStatusRule::CreateQuotation);
        createQuotation.update();
        createEstimateChecked = ProjStatusTypeRule::exist(projStatus, projType, ProjStatusRule::CreateEstimate);
        createEstimate.update();
        createItemTaskChecked = ProjStatusTypeRule::exist(projStatus, projType, ProjStatusRule::CreateItemTask);
        createItemTask.update();
        createJournalChecked = ProjStatusTypeRule::exist(projStatus, projType, ProjStatusRule::CreateJournal);
        createJournal.update();
        createInvoiceProposalChecked = ProjStatusTypeRule::exist(projStatus, projType, ProjStatusRule::CreateInvoiceProposal);
        createInvoiceProposal.update();
        reverseEliminateChecked = ProjStatusTypeRule::exist(projStatus, projType, ProjStatusRule::ReverseEliminate);
        reverseEliminate.update();
        createBeginningBalanceChecked =  ProjStatusTypeRule::exist(projStatus, projType, ProjStatusRule::CreateBeginningBalance);
        createBeginningBalance.update();

        // All checkboxes will be disabled if the selected status is not valid for the selected type
        statusAllowed = ProjStatusTypeRule::checkStatus(projType, projStatus);
        
        createForecast.enabled(statusAllowed && projStatus != ProjStatus::Completed);

        createQuotation.enabled(statusAllowed && projStatus != ProjStatus::Completed &&
            (projType == ProjType::TimeMaterial || projType == ProjType::FixedPrice || projType == ProjType::None));

        createEstimate.enabled(statusAllowed && projStatus != ProjStatus::Completed && projStatus != ProjStatus::Created &&
            (projType == ProjType::FixedPrice || projType == ProjType::Investment || projType == ProjType::None));

        createItemTask.enabled(statusAllowed &&
             this.enableCreateItemTaskForProjStatus() &&
             projType != ProjType::Time);

        createJournal.enabled(statusAllowed &&
            this.enableCreateJournalForProjStatus());

        createInvoiceProposal.enabled(statusAllowed &&
            this.enableCreateInvoiceProposalForProjStatus() &&
            (projType == ProjType::TimeMaterial ||
             projType == ProjType::FixedPrice || 
             projType == ProjType::None));
        
        reverseEliminate.enabled(statusAllowed && 
            ProjStatusTypeRule::shouldEnableReverseEliminateForProjStatus(projStatus, projType));

        createBeginningBalance.enabled(statusAllowed && projStatus != ProjStatus::Completed);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableCreateItemTaskForProjStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the 'Create item tasks' control should be enabled based on the <c>ProjStatus</c> enumeration value.
    /// </summary>
    /// <returns>
    /// true if the 'Create item tasks' control should be enabled based on the <c>ProjStatus</c> enumeration value; otherwise, false.
    /// </returns>
    protected boolean enableCreateItemTaskForProjStatus()
    {
        return projStatus == ProjStatus::InProcess ||
                projStatus == ProjStatus::User1 ||
                projStatus == ProjStatus::User2 ||
                projStatus == ProjStatus::User3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableCreateJournalForProjStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the 'Create journals' control should be enabled based on the <c>ProjStatus</c> enumeration value.
    /// </summary>
    /// <returns>
    /// true if the 'Create journals' control should be enabled based on the <c>ProjStatus</c> enumeration value; otherwise, false.
    /// </returns>
    protected boolean enableCreateJournalForProjStatus()
    {
        return projStatus == ProjStatus::InProcess ||
                projStatus == ProjStatus::User1 ||
                projStatus == ProjStatus::User2 ||
                projStatus == ProjStatus::User3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableCreateInvoiceProposalForProjStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the 'Create invoice proposal' control should be enabled based on the <c>ProjStatus</c> enumeration value.
    /// </summary>
    /// <returns>
    /// true if the 'Create invoice proposal' control should be enabled based on the <c>ProjStatus</c> enumeration value; otherwise, false.
    /// </returns>
    protected boolean enableCreateInvoiceProposalForProjStatus()
    {
        return projStatus == ProjStatus::InProcess ||
                projStatus == ProjStatus::User1 ||
                projStatus == ProjStatus::User2 ||
                projStatus == ProjStatus::User3;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TmpProjStatusSetup</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.statusTypeChanged();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            TmpProjStatusSetup  tmpProjStatusSetupLocal;

            if (element.args().record())
            {
                tmpProjStatusSetupLocal = element.args().record();
                projStatus = tmpProjStatusSetupLocal.ProjStatus;
                element.design().caption(strfmt('%1 - %2: %3', "@SYS23052", "@SYS56619", enum2str(projStatus)));
                element.statusTypeChanged();
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>projTypeSelect</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            projType = str2enum(projType, this.valueStr());
            element.statusTypeChanged();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        /// <summary>
        /// Disable the control when <c>ProjEnableMultipleContractLinesForProjectFeature</c> is turned on, and hide None project type when the feature is turned off.
        /// </summary>
        public void enter()
        {
            super();

            if (ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled())
            {
                this.selection(enum2int(projType::None));
                this.modified();
                this.enabled(false);
                this.visible(false);
            }
            else
            {
                this.delete(enum2Str(projType::None));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TmpProjStatusSetup</Name>
			<Table>TmpProjStatusSetup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjStage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SortOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>usedByCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>usedByFixedPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>usedByInternal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>usedByInvestment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>usedByNone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>usedByTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>usedByTimeMaterial</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS105992</Caption>
		<DataSource xmlns="">TmpProjStatusSetup</DataSource>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<TitleDataSource xmlns="">TmpProjStatusSetup</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentGroup</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>projTypeSelect</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<EnumType>ProjType</EnumType>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ProjStatusRuleGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CreateBeginningBalance</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>createBeginningBalance</DataMethod>
								<Label>@SYS134441</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CreateForecast</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_ProjectManagementAndAccounting:ProjStatusRuleSetup_CreateForecast</HelpText>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>createForecast</DataMethod>
								<Label>@SYS105995</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CreateQuotation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>createQuotation</DataMethod>
								<Label>@SYS105996</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CreateEstimate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>createEstimate</DataMethod>
								<Label>@SYS105997</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CreateItemTask</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>createItemTask</DataMethod>
								<Label>@SYS105998</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CreateJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2113929214</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>createJournal</DataMethod>
								<Label>@SYS105999</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CreateInvoiceProposal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2130706430</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>createInvoiceProposal</DataMethod>
								<Label>@SYS106000</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>ReverseEliminate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2139095038</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_ProjectManagementAndAccounting:ProjStatusRuleSetup_ReverseEliminate</HelpText>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>reverseEliminate</DataMethod>
								<Label>@SYS106001</Label>
							</AxFormControl>
						</Controls>
						<Caption>@SYS105992</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>FormButtonGroupControl1</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>commandButtonOK</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>