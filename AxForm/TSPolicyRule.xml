<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TSPolicyRule</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TSPolicyRule extends FormRun
{
    RefRecId                    policyRuleTypeId;
    RefRecId                    policyId;
    SysPolicyRule               sysPolicyRule;
    SysPolicyType               policyType;
    SysPolicyRuleType           policyRuleType;
    RecId                       policyRecId;
    boolean                     canSaveRule, cancelPolicy, isNew;

}
]]></Source>
			</Method>
			<Method>
				<Name>cancelPolicy</Name>
				<Source><![CDATA[
    private void cancelPolicy()
{
    TSPolicyRule           tsPolicyRuleDelete;
    TSPolicyLanguageTxt    langTxt;

    if (isNew)
    {
        ttsbegin;

        // Clear out any message text translations that may have been added
        delete_from langTxt
            where langTxt.TSPolicyRule == tsPolicyRule.RecId;

        // Finally, delete the temporary rule itself in case it was saved
        tsPolicyRuleDelete = TSPolicyRule::find(tsPolicyRule.RecId, true);

        if (tsPolicyRuleDelete)
        {
            tsPolicyRuleDelete.doDelete();
        }

        ttscommit;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
{
    boolean ret;

    ret = super();

    cancelPolicy = Box::yesNo("@SYS93677", DialogButton::Yes) == DialogButton::No;

    if (!cancelPolicy)
    {
        // The user has hit the 'X', but decided they want to save the rule.
        // We need to make sure they have supplied message text, and if they
        // haven't, don't close the form (and don't head to the close method).
        if (!this.validateFields())
        {
            return false;
        }
    }

    return ret;
}

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
{
    if (cancelPolicy)
    {
        this.cancelPolicy();
    }
    else
    {
        // User is trying to save the rule;
        // check to make sure they have supplied a message.
        if (!this.validateFields())
        {
            // If they have not, then do not close
            return;
        }
        else
        {
            // Otherwise, we can save it & close
            this.savePolicy();
        }
    }

    super();
}

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
{
    Object      object;
    DictEnum    policyTypeEnum;
    str         ruleTypeLabel;
    DictEnum    ruleTypeEnum;

    ruleTypeEnum    = new DictEnum(enumNum(SysPolicyRuleTypeEnum));
    policyTypeEnum  = new DictEnum(enumNum(SysPolicyTypeEnum));

    super();

    if (!(element.args().caller()))
    {
        throw error(Error::missingFormActiveBuffer(element.name()));
    }

    object              = element.args().caller();
    policyRuleTypeId = str2int64(element.args().parm());
    policyId         = element.args().caller().getPolicyIndex();

    sysPolicyRule = element.args().record() as SysPolicyRule;

    select firstOnly PolicyType, Name from policyRuleType
        where policyRuleType.RecId == policyRuleTypeId;

    policyType = SysPolicyType::find(policyRuleType.PolicyType);

    // Detect which type of policyruletype and set the visibility of the controls accordingly
    switch (policyType.PolicyType)
    {
        case SysPolicyTypeEnum::TimesheetPolicy:
            ruleTypeLabel = ruleTypeEnum.value2Label(ruleTypeEnum.symbol2Value(policyRuleType.Name));
            switch (policyRuleType.Name)
            {
                case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TSDayHoursRule)):
                    MinCalendar.label("@Timesheet:Policy_MinDayHours_Calendar");
                    MaxCalendar.label("@Timesheet:Policy_MaxDayHours_Calendar");
                    break;

                case ruleTypeEnum.value2Symbol(enum2int(SysPolicyRuleTypeEnum::TSWeekHoursRule)):
                    MinCalendar.label("@Timesheet:Policy_MinWeekHours_Calendar");
                    MaxCalendar.label("@Timesheet:Policy_MaxWeekHours_Calendar");
                    break;
            }
           break;
    }

    // Set the caption on the form
    this.design().caption(strFmt("@SYS309171", enum2str(policyType.PolicyType), strLwr(ruleTypeLabel)));
    staticText.text(strFmt("@SYS309171", strMin(), ruleTypeLabel));

    if (!sysPolicyRule)
    {
        commandButton.clicked();
        isNew = true;
        companycontext.text(CompanyInfo::find().DataArea);
    }
    else
    {
        SysPolicyUtil::filterPolicyRule(tsPolicyRule_ds,sysPolicyRule);
        isNew = false;
        companycontext.text(TSPolicyRule.CompanyId);
        tsPolicyRule_Message.text(tsPolicyRule.userMessage());
        tsPolicyRule_TSAction.selection(tsPolicyRule.TSAction);
        MinCalendar.text(TSPolicyRule.MinCalendar);
        MaxCalendar.text(TSPolicyRule.MaxCalendar);
        tsPolicyRule_Message.text(tsPolicyRule.userMessage());
    }

    // If expired do no allow editing
    if (!isNew && (tsPolicyRule.ValidTo < DateTimeUtil::utcNow() || tsPolicyRule.ValidFrom == tsPolicyRule.ValidTo))
    {
        groupDetails.enabled(false);
        save.visible(false);
    }
    else
    {
        // The valid from control is disabled in case the rule has already started
        // The expiration will be editable from the GridPolicyRules option 'Change Date'
        // Enabling all the other fields
        groupDetails.enabled(true);
        save.visible(true);
    }

}

]]></Source>
			</Method>
			<Method>
				<Name>savePolicy</Name>
				<Source><![CDATA[
    public void savePolicy()
{
    RecId                   origRecid;
    DictEnum                ruleTypeEnum;
    RecordInsertList        tsPolicyLanguageTxtList;
    TSPolicyLanguageTxt     tsPolicyLanguageTxt, tsPolicyLanguageTxtNew;

    ruleTypeEnum = new DictEnum(enumNum(SysPolicyRuleTypeEnum));

    origRecid = tsPolicyRule.RecId;

    canSaveRule = true;
    tsPolicyRule.write();
    canSaveRule = false;

    // copy the languagetxt entries from the retired policy to the new policy.
    // This is needed incase of upates to a policy as a new policy is created for every update to the policy
    if (origRecid != tsPolicyRule.RecId && origRecid != 0)
    {
        tsPolicyLanguageTxtList = new RecordInsertList(tableNum(TSPolicyLanguageTxt));

        while select tsPolicyLanguageTxt
            where tsPolicyLanguageTxt.TSPolicyRule == origRecid
        {
            tsPolicyLanguageTxtNew.TSPolicyRule    = tsPolicyRule.RecId;
            tsPolicyLanguageTxtNew.LanguageId      = tsPolicyLanguageTxt.LanguageId;
            tsPolicyLanguageTxtNew.Txt             = tsPolicyLanguageTxt.Txt;
            tsPolicyLanguageTxtList.add(tsPolicyLanguageTxtNew);
        }

        tsPolicyLanguageTxtList.insertDatabase();
    }

}

]]></Source>
			</Method>
			<Method>
				<Name>validateFields</Name>
				<Source><![CDATA[
    private boolean validateFields()
{
    if (MinCalendar.text() == '' && MaxCalendar.text() == '')
    {
        warning("@Timesheet:Policy_Calendar_ErrorMessage");
    }
    else if (tsPolicyRule_TSAction.selection() == 0)
    {
        warning("@SYS342778");
    }
    else if (tsPolicyRule_Message.text() == '')
    {
        warning("@SYS342779");
    }
    else
    {
        return true;
    }

    return false;
}

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TSPolicyRule</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
{
    if (canSaveRule)
    {
        super();
    }
}

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
{
    super();

    tsPolicyRule.Policy         = policyId;
    tsPolicyRule.PolicyRuleType = policyRuleTypeId;

    if (!tsPolicyRule)
    {
        tsPolicyRule.ValidFrom  = element.args().caller().getDefaultStartDate(policyId, policyRuleTypeId);
        tsPolicyRule.ValidTo    = DateTimeUtil::maxValue();
        tsPolicyRule.CompanyId  = CompanyInfo::find().DataArea;
    }

}

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CompanyContext</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
{
    boolean ret;

    ret = super();

    appl.setDefaultCompany(companycontext.valueStr(), false);

    TSPolicyRule.CompanyId   = companycontext.valueStr();

    TSPolicyRule.MinCalendar = '';
    TSPolicyRule.MaxCalendar = '';

    MinCalendar.text('');
    MaxCalendar.text('');

    return ret;
}

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MinCalendar</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
{
    boolean ret;

    ret = super();

    TSPolicyRule.MinCalendar = MinCalendar.text();

    return ret;
}

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MaxCalendar</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
{
    boolean ret;

    ret = super();

    TSPolicyRule.MaxCalendar = MaxCalendar.text();

    return ret;
}

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TSPolicyRule_TSAction</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
{
    TSPolicyRule.TSAction = tsPolicyRule_TSAction.selection();

    return super();
}

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MessageLanguages</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
{
    MenuFunction    menuFunction;
    Args            args;

    menuFunction = new MenuFunction(menuitemDisplayStr(TSPolicyLanguageTxt), MenuItemType::Display);

    // Check access rights
    if (!menuFunction || !menuFunction.checkAccessRights())
    {
        // Access rights are not sufficient to use this function.
        throw error("@SYS81158");
    }

    if (!tsPolicyRule)
    {
        element.savePolicy();
    }

    args         = new Args();
    args.record(tsPolicyRule);

    // This is only used by the activate method to refresh the message box
    sysPolicyRule.RecId = tsPolicyRule.RecId;

    args.caller(this);
    menuFunction.run(args);

    tsPolicyRule_Message.text(tsPolicyRule.userMessage());

    // Set focus in the message box
    tsPolicyRule_Message.setFocus();

}

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Save</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
{
    super();
    element.close();
}

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Close</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
{
    super();

    cancelPolicy = true;

    element.close();
}

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TSPolicyRule</Name>
			<Table>TSPolicyRule</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsInherited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaxCalendar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinCalendar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Policy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PolicyRuleType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TSAction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<ValidTimeStateUpdate>EffectiveBased</ValidTimeStateUpdate>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Timesheet:Policy_RuleDetails_Header</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsGroup</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupDetails</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>StaticText</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>306783376</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>StaticText</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DateGroup</Name>
								<ElementPosition>613566754</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>TSPolicyRule_ValidFrom</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ValidFrom</DataField>
										<DataSource>TSPolicyRule</DataSource>
										<Label>@SYS35161</Label>
										<TimeHours>No</TimeHours>
										<TimeMinute>No</TimeMinute>
										<TimeSeconds>No</TimeSeconds>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>TSPolicyRule_ValidTo</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DateTime</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ValidTo</DataField>
										<DataSource>TSPolicyRule</DataSource>
										<Label>@SYS102701</Label>
										<TimeHours>No</TimeHours>
										<TimeMinute>No</TimeMinute>
										<TimeSeconds>No</TimeSeconds>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>CommandButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CommandButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Command>New</Command>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HoursGroup</Name>
								<ElementPosition>920350132</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Group_</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CompanyContext</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>CompanyId</ExtendedDataType>
												<Label>@Timesheet:Policy_Company_Dropdown</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>MinHoursGroup</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>MinCalendar</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ExtendedDataType>CalendarId</ExtendedDataType>
													</AxFormControl>
												</Controls>
												<Columns>2</Columns>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>MaxHoursGroup</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>MaxCalendar</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ExtendedDataType>CalendarId</ExtendedDataType>
													</AxFormControl>
												</Controls>
												<Columns>2</Columns>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Caption>@Timesheet:Policy_Conditions_Header</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BottomGroup</Name>
								<ElementPosition>1227133510</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>TSPolicyRule_TSAction</Name>
										<AlignControl>No</AlignControl>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<EnumType>TSPolicyViolationLevel</EnumType>
										<HideFirstEntry>Yes</HideFirstEntry>
										<Label>@Timesheet:Policy_ViolationActions_Header</Label>
										<LabelBold>Bold</LabelBold>
										<LabelPosition>Above</LabelPosition>
										<Items />
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MessageGroup</Name>
								<ElementPosition>1533916888</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TSPolicyRule_Message</Name>
										<AlignControl>No</AlignControl>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS14327</Label>
										<LabelBold>Bold</LabelBold>
										<LabelPosition>Above</LabelPosition>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MsgButtonGroup</Name>
								<ElementPosition>1840700266</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ButtonGroup1</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>MessageLanguages</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>ImageOnly</ButtonDisplay>
												<MenuItemName>TSPolicyLanguageTxt</MenuItemName>
												<NormalImage>Translate</NormalImage>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalRight</ArrangeMethod>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>Save</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1193046468</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Text>@SYS5473</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>Close</Name>
						<ElementPosition>1670265057</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS57717</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>