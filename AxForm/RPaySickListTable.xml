<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RPaySickListTable</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/* TODO: (Code Upgrade) Group control Average had TopMode property set to BottomEdge. This property is no longer respected. Make any necessary adjustments to correct the position of the group control. */
    [Form]
    public class RPaySickListTable extends FormRun
    {
        RPayAverageEarnEngine_SickList rPayAverageEarnEngine_SickList;
        QueryBuildRange                workMonthRange;
        boolean                        vacationExtension;
        boolean                        vacationBreaking;
        boolean                        businessTripBreaking;
}
]]></Source>
			</Method>
			<Method>
				<Name>averageTotal</Name>
				<Source><![CDATA[
    display  RPayAmount averageTotal()
    {
        return  conPeek(rPayAverageEarnEngine_SickList.calcAverageAmountTotal(), 1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkBusinessTrip</Name>
				<Source><![CDATA[
    boolean checkBusinessTrip()
    {
        RPayAverageEarnEmplPeriodTable      rpayAverageEarnEmplPeriodTableBusinessTrip;
        TransLink_RU                        transLink;
        RPayAverageEarnEngine_BusinessTrip  rPayAverageEarnEngine_BusinessTrip;
        RHRMEmplTable                       emplTable = RHRMEmplTable::find(rpayAverageEarnEmplPeriodTable.EmplId);
        container                           con;
        int                                 i;
        StartDate                           startDateLocal;
        EndDate                             endDateLocal;
        Dialog                              createdialog = new Dialog("@RUP2604");
        RecId                               businessTripRecId;
        boolean                             businessTripExists = false;
        #define.two(2)

        businessTripBreaking = false;

        select firstonly rpayAverageEarnEmplPeriodTableBusinessTrip
            where rpayAverageEarnEmplPeriodTableBusinessTrip.AverageEarnCodeType    == RPayAverageEarnCodeType::BusinessTrip    &&
                  rpayAverageEarnEmplPeriodTableBusinessTrip.EmplId                 == rpayAverageEarnEmplPeriodTable.EmplId    &&
                  rpayAverageEarnEmplPeriodTableBusinessTrip.Included               == NoYes::No                                &&
                  rpayAverageEarnEmplPeriodTableBusinessTrip.StartDate              <= rpayAverageEarnEmplPeriodTable.EndDate   &&
                  rpayAverageEarnEmplPeriodTableBusinessTrip.EndDate                >= rpayAverageEarnEmplPeriodTable.StartDate &&
                  rpayAverageEarnEmplPeriodTableBusinessTrip.BusinessTripRecordType == RPayBusinessTripRecordType::BusinessTrip
            #transLinkNotExistsReversed_RU(transLink, rpayAverageEarnEmplPeriodTableBusinessTrip);

        if (rpayAverageEarnEmplPeriodTableBusinessTrip)
        {
            return checkFailed(strFmt("@RUP2626",
                                      emplTable.EmployeeId,
                                      emplTable.name(),
                                      rpayAverageEarnEmplPeriodTableBusinessTrip.StartDate,
                                      rpayAverageEarnEmplPeriodTableBusinessTrip.EndDate));
        }

        rPayAverageEarnEngine_BusinessTrip = new RPayAverageEarnEngine_BusinessTrip(
                    rpayAverageEarnEmplPeriodTableBusinessTrip.EmplId,
                    rpayAverageEarnEmplPeriodTableBusinessTrip.rPayAverageEarnCode,
                    rpayAverageEarnEmplPeriodTableBusinessTrip.AverageEarnCalcPeriod);

        while select rpayAverageEarnEmplPeriodTableBusinessTrip
            where rpayAverageEarnEmplPeriodTableBusinessTrip.AverageEarnCodeType    == RPayAverageEarnCodeType::BusinessTrip    &&
                  rpayAverageEarnEmplPeriodTableBusinessTrip.EmplId                 == rpayAverageEarnEmplPeriodTable.EmplId    &&
                  rpayAverageEarnEmplPeriodTableBusinessTrip.Included               == NoYes::Yes                               &&
                  rpayAverageEarnEmplPeriodTableBusinessTrip.StartDate              <= rpayAverageEarnEmplPeriodTable.EndDate   &&
                  rpayAverageEarnEmplPeriodTableBusinessTrip.EndDate                >= rpayAverageEarnEmplPeriodTable.StartDate &&
                  rpayAverageEarnEmplPeriodTableBusinessTrip.BusinessTripRecordType == RPayBusinessTripRecordType::BusinessTrip
            #transLinkNotExistsReversed_RU(transLink, rpayAverageEarnEmplPeriodTableBusinessTrip)
        {
            rPayAverageEarnEngine_BusinessTrip.rPayAverageEarnEmplPeriodTable(rpayAverageEarnEmplPeriodTableBusinessTrip);
            con = rPayAverageEarnEngine_BusinessTrip.getBusinessTripIntervals();

            for (i = 1 ; i <= conLen(con) ; i ++)
            {
                startDateLocal = conPeek(conPeek(con,i), 1);
                endDateLocal   = conPeek(conPeek(con,i), #two);

                if (rpayAverageEarnEmplPeriodTable.StartDate <= endDateLocal && rpayAverageEarnEmplPeriodTable.EndDate >= startDateLocal)
                {
                    businessTripBreaking = true;

                    if (! businessTripRecId)
                    {
                        businessTripRecId = rpayAverageEarnEmplPeriodTableBusinessTrip.prevFirstBusinessTrip().RecId;
                    }
                }
            }
        }

        if (! businessTripBreaking)
        {
            return true;
        }

        createdialog.addText(strFmt("@RUP2627",rpayAverageEarnEmplPeriodTable.StartDate ,rpayAverageEarnEmplPeriodTable.EndDate));

        createdialog.run();
        if (createdialog.closedOk())
        {
            businessTripBreaking  = true;
            return false;
        }
        else
        {
            businessTripBreaking  = false;
            return checkFailed(strFmt("@RUP2613",
                                      emplTable.EmployeeId,
                                      emplTable.name(),
                                      rpayAverageEarnEmplPeriodTable.StartDate,
                                      rpayAverageEarnEmplPeriodTable.EndDate));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkSpecTime</Name>
				<Source><![CDATA[
    boolean checkSpecTime()
    {
        boolean                         vacRet, tripRet;

        vacRet  = this.checkVacation();
        tripRet = this.checkBusinessTrip();

        if (! vacRet && vacationBreaking)
            vacRet = rPayAverageEarnEmplPeriodTable.vacationBreaking(vacationExtension);

        if (! tripRet && businessTripBreaking)
            tripRet = rPayAverageEarnEmplPeriodTable.businessTripBreaking();

        return vacRet && tripRet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkVacation</Name>
				<Source><![CDATA[
    boolean checkVacation()
    {
        RPayAverageEarnEmplPeriodTable rpayAverageEarnEmplPeriodTableVacation;
        TransLink_RU                   transLink;
        RPayAverageEarnEngine_Vacation rPayAverageEarnEngine_Vacation;
        RHRMEmplTable                  emplTable = RHRMEmplTable::find(rpayAverageEarnEmplPeriodTable.EmplId);
        container                      con;
        int                            i;
        StartDate                      startDateLocal;
        EndDate                        endDateLocal;
        Dialog                         createdialog = new Dialog("@RUP2408");
        DialogField                    dialogFieldExtension;
        RecId                          vacationRecId;
        boolean                        vacationExists = false;
        #define.two(2)

        vacationBreaking = false;

        select firstonly rpayAverageEarnEmplPeriodTableVacation
            where rpayAverageEarnEmplPeriodTableVacation.AverageEarnCodeType  == RPayAverageEarnCodeType::Vacation        &&
                  rpayAverageEarnEmplPeriodTableVacation.EmplId               == rpayAverageEarnEmplPeriodTable.EmplId    &&
                  rpayAverageEarnEmplPeriodTableVacation.Included             == NoYes::No                                &&
                  rpayAverageEarnEmplPeriodTableVacation.StartDate            <= rpayAverageEarnEmplPeriodTable.EndDate   &&
                  rpayAverageEarnEmplPeriodTableVacation.EndDate              >= rpayAverageEarnEmplPeriodTable.StartDate &&
                  rpayAverageEarnEmplPeriodTableVacation.VacationRecordType   == RPayVacationRecordType::Vacation
            #transLinkNotExistsReversed_RU(transLink, rpayAverageEarnEmplPeriodTableVacation);

        if (rpayAverageEarnEmplPeriodTableVacation)
        {
            return checkFailed(strFmt("@RUP2439",
                                      emplTable.EmployeeId,
                                      emplTable.name(),
                                      rpayAverageEarnEmplPeriodTableVacation.StartDate,
                                      rpayAverageEarnEmplPeriodTableVacation.EndDate));
        }

        rPayAverageEarnEngine_Vacation = new RPayAverageEarnEngine_Vacation(rpayAverageEarnEmplPeriodTableVacation.EmplId,
                                                                            rpayAverageEarnEmplPeriodTableVacation.rPayAverageEarnCode,
                                                                            rpayAverageEarnEmplPeriodTableVacation.AverageEarnCalcPeriod);
        vacationExtension = true;

        while select rpayAverageEarnEmplPeriodTableVacation
            where rpayAverageEarnEmplPeriodTableVacation.AverageEarnCodeType == RPayAverageEarnCodeType::Vacation        &&
                  rpayAverageEarnEmplPeriodTableVacation.EmplId              == rpayAverageEarnEmplPeriodTable.EmplId    &&
                  rpayAverageEarnEmplPeriodTableVacation.Included            == NoYes::Yes                               &&
                  rpayAverageEarnEmplPeriodTableVacation.StartDate           <= rpayAverageEarnEmplPeriodTable.EndDate   &&
                  rpayAverageEarnEmplPeriodTableVacation.EndDate             >= rpayAverageEarnEmplPeriodTable.StartDate &&
                  rpayAverageEarnEmplPeriodTableVacation.VacationRecordType  == RPayVacationRecordType::Vacation
            #transLinkNotExistsReversed_RU(transLink, rpayAverageEarnEmplPeriodTableVacation)
        {
            rPayAverageEarnEngine_Vacation.rPayAverageEarnEmplPeriodTable(rpayAverageEarnEmplPeriodTableVacation);
            con = rPayAverageEarnEngine_Vacation.getVacationIntervals();

            for (i = 1 ; i <= conLen(con) ; i ++)
            {
                startDateLocal = conPeek(conPeek(con,i), 1);
                endDateLocal   = conPeek(conPeek(con,i), #two);

                if (rpayAverageEarnEmplPeriodTable.StartDate <= endDateLocal && rpayAverageEarnEmplPeriodTable.EndDate >= startDateLocal)
                {
                    vacationBreaking = true;

                    if (! vacationRecId)
                    {
                        vacationRecId = rpayAverageEarnEmplPeriodTableVacation.prevFirstVacation().RecId;
                    }

                    vacationExtension = vacationExtension && vacationRecId == rpayAverageEarnEmplPeriodTableVacation.prevFirstVacation().RecId;
                }
            }
        }

        if (! vacationBreaking)
        {
            return true;
        }

        createdialog.addText(strFmt("@RUP2438",rpayAverageEarnEmplPeriodTable.StartDate ,rpayAverageEarnEmplPeriodTable.EndDate));

        if (vacationExtension)
        {
            dialogFieldExtension = createdialog.addField(enumStr(NoYes), "@RUP2440", "@RUP2441");
        }

        createdialog.run();
        if (createdialog.closedOk())
        {
            if (vacationExtension)
            {
                vacationExtension = dialogFieldExtension.value();
            }
            vacationBreaking  = true;
            return false;
        }
        else
        {
            vacationBreaking  = false;
            return checkFailed(strFmt("@RUP1888",
                                      emplTable.EmployeeId,
                                      emplTable.name(),
                                      "@GLS106125",
                                      rpayAverageEarnEmplPeriodTable.StartDate,
                                      rpayAverageEarnEmplPeriodTable.EndDate));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formController</Name>
				<Source><![CDATA[
    public RPayAEFormController formController()
    {
        return rPayAverageEarnEngine_SickList.formController();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        nonAppearanceTimeGroupCode.helpText("@RUP2335");
        rPayAverageEarnEngine_SickList = new RPayAverageEarnEngine_SickList(rPayAverageEarnEmplPeriodTable.EmplId,
                                                                            rPayAverageEarnEmplPeriodTable.rPayAverageEarnCode,
                                                                            rPayAverageEarnEmplPeriodTable.AverageEarnCalcPeriod);
        rPayAverageEarnEngine_SickList.formRun(this);
        rPayAverageEarnEngine_SickList.setupPayAverageSourceType(payAverageSourceType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign()
    {
        rPayAverageEarnEngine_SickList.updateFormDesign();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateNumberOfWorkedMonths</Name>
				<Source><![CDATA[
    void updateNumberOfWorkedMonths()
    {
        StartDate   startAllPeriod = rPayAverageEarnEngine_SickList.getStartDateOfCheckedPeriod();

        rPayAverageEarnEngine_SickList.updateNumberOfWorkedMonths(startAllPeriod, endmth(prevMth(rPayAverageEarnEmplPeriodTable.StartDate)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTimesheet</Name>
				<Source><![CDATA[
    public void updateTimesheet(RPayAverageEarnEmplPeriodTable _document, StartDate _startDate = _document.StartDate, EndDate _endDate = _document.EndDate)
    {
        if (rPayAverageEarnEngine_SickList.formController().needTSUpdate() == UnknownNoYes::Yes)
        {
            RPayTblUpdater::updateTimesheetFromDocument(_startDate, _endDate, _document.EmplId, [_document.TableId, _document.RecId]);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RpayAverageEarnEmplPeriodTable</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            this.cacheAddMethod(tableMethodStr(RPayAverageEarnEmplPeriodTable, payEmplName));
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean                        ret = true;
            RPaySickIllParameters          rPaySickIllParameters = RPaySickIllParameters::find(rPayAverageEarnEmplPeriodTable.RpayIllType);
            Months                         monthNum;
            TransDate                      endDate;
            RHRMVirtualNetworkFamily       rhrmVirtualNetworkFamily;

            if ( !rPayAverageEarnEmplPeriodTable.Included)
            {
                rPayAverageEarnEngine_SickList.rPayAverageEarnEmplPeriodTable(rPayAverageEarnEmplPeriodTable);
                ret = rPayAverageEarnEngine_SickList.check();

                if (ret)
                {
                    if (rPayAverageEarnEmplPeriodTable.RpayIllType == RPayIllType::ChildVacation && rPaySickIllParameters.AgeLimit)
                    {
                        if (rPayAverageEarnEmplPeriodTable.FamilyRecId)
                        {
                            monthNum = any2int(RPayRateTable::find(rPaySickIllParameters.AgeLimit).getValue(RPayRateCallContext::construct(rPayAverageEarnEmplPeriodTable.StartDate, rPayAverageEarnEmplPeriodTable.EmplId)));

                            rhrmVirtualNetworkFamily = RHRMVirtualNetworkFamily::findByRecId(rPayAverageEarnEmplPeriodTable.FamilyRecId);

                            endDate = rhrmVirtualNetworkFamily.lastDateChildBenefit(monthNum);

                            if (rPayAverageEarnEmplPeriodTable.EndDate > endDate)
                            {
                                 warning(strFmt("@RUP2953",
                                               rPayAverageEarnEmplPeriodTable.EndDate,
                                               endDate,
                                               monthNum,
                                               rhrmVirtualNetworkFamily.KinName,
                                               rhrmVirtualNetworkFamily.BirthDate));
                            }
                        }
                        else
                        {
                            ret = checkFailed("@RUP2954");
                        }
                    }

                    ret = ret && rPayAverageEarnEngine_SickList.disributeRestYearDays(rPayAverageEarnEmplPeriodTable.StartDate, true);
                }
            }
            if (ret)
            {
                 ret = super();
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            this.query().dataSourceTable(tableNum(RPayAverageEarnEmplPeriodTable)).
                addRange(fieldNum(RPayAverageEarnEmplPeriodTable, AverageEarnCodeType)).value(queryValue(RPayAverageEarnCodeType::SickList));

            if (element.args().dataset() == tableNum(RPayAverageEarnEmplPeriodTable))
            {
                this.query().dataSourceTable(tableNum(RPayAverageEarnEmplPeriodTable)).
                addRange(fieldNum(RPayAverageEarnEmplPeriodTable, RecId)).value(con2Str(TransLink_RU::rpayGetReverseInCon(element.args().record())));
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            rPayAverageEarnEmplPeriodTable.AddPaymFromPaymFund = RPaySickIllParameters::find(rPayAverageEarnEmplPeriodTable.RpayIllType).AddPaymFromPaymFund;
            rPayAverageEarnEmplPeriodTable.AverageEarnCodeType = RPayAverageEarnCodeType::SickList;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            RPayAverageEarnEmplPeriodTable origTable;

            origTable =  rPayAverageEarnEmplPeriodTable.orig();

            super();

            if ( !rPayAverageEarnEmplPeriodTable.Included)
            {
                if ((rPayAverageEarnEngine_SickList.formController().needTSUpdate() == UnknownNoYes::Yes
                 && (origTable.StartDate   != rPayAverageEarnEmplPeriodTable.StartDate
                  || origTable.EndDate     != rPayAverageEarnEmplPeriodTable.EndDate
                  || origTable.RpayIllType != rPayAverageEarnEmplPeriodTable.RpayIllType)
                 && ! rPayAverageEarnEmplPeriodTable.RecalcSickListId
                 && element.checkSpecTime()))
                {
                    if (origTable.RecId)
                    {
                        element.updateTimesheet(origTable,
                                                min(origTable.StartDate, rPayAverageEarnEmplPeriodTable.StartDate),
                                                max(origTable.EndDate, rPayAverageEarnEmplPeriodTable.EndDate));
                    }
                    else
                    {
                        element.updateTimesheet(rPayAverageEarnEmplPeriodTable,
                                                rPayAverageEarnEmplPeriodTable.StartDate,
                                                rPayAverageEarnEmplPeriodTable.EndDate);
                    }
                }
                if ( !bufCmp(rPayAverageEarnEmplPeriodTable, origTable))
                {
                    rPayAverageEarnEngine_SickList.rPayAverageEarnEmplPeriodTable(rPayAverageEarnEmplPeriodTable);
                    rPayAverageEarnEngine_SickList.calculateNow();
                    rPayAverageEarnEngine_SickList.disributeRestYearDays(rPayAverageEarnEmplPeriodTable.StartDate, false);
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (ret)
            {
                rPayAverageEarnEngine_SickList.rPayAverageEarnEmplPeriodTable(rPayAverageEarnEmplPeriodTable);
                element.updateDesign();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            RPayAverageEarnEmplPeriodTable rPayAverageEarnEmplPeriodTableOrig;
            boolean                        isReverseLine = rPayAverageEarnEmplPeriodTable.isReverseLine();

            rPayAverageEarnEmplPeriodTableOrig = rPayAverageEarnEmplPeriodTable.data();

            super();

            rPayAverageEarnEmplPeriodTableOrig.deleteAssociatedVacationBusinessTrip(rPayAverageEarnEngine_SickList.formController().needTSUpdate() == UnknownNoYes::Yes);

            if (rPayAverageEarnEngine_SickList.formController().needTSUpdate() == UnknownNoYes::Yes
             && rPayAverageEarnEmplPeriodTableOrig.RecId)
            {
                rPayAverageEarnEmplPeriodTableOrig.RecId = 0;
                element.updateTimesheet(rPayAverageEarnEmplPeriodTableOrig,
                                        rPayAverageEarnEmplPeriodTableOrig.StartDate,
                                        rPayAverageEarnEmplPeriodTableOrig.EndDate);
            }
            rPayAverageEarnEngine_SickList.rPayAverageEarnEmplPeriodTable(rPayAverageEarnEmplPeriodTableOrig);
            rPayAverageEarnEngine_SickList.disributeRestYearDays(dateStartYr(rPayAverageEarnEmplPeriodTableOrig.StartDate), false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean                 ret;

            RPaySickIllParameters   rPaySickIllParameters = RPaySickIllParameters::find(rPayAverageEarnEmplPeriodTable.RpayIllType);
            ret = super();

            if (ret)
            {
                ret = rpayAverageEarnEmplPeriodTable.averageEarnForSickListDeleteCheck();
            }

            if (ret)
            {
                ret = rPayAverageEarnEngine_SickList.disributeRestYearDays(rPayAverageEarnEmplPeriodTable.StartDate, true);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>kinName</Name>
						<Source><![CDATA[
        edit PersonName kinName(boolean _set, RPayAverageEarnEmplPeriodTable _rPayAverageEarnEmplPeriodTable, PersonName _kinName)
        {
            RHRMVirtualNetworkFamily    family;

            if (_set)
            {
                family = RHRMVirtualNetworkFamily::findByRecId(str2recId(_kinName));
                if (family)
                {
                    _rPayAverageEarnEmplPeriodTable.FamilyRecId = family.RecId;
                }
                else
                {
                    _rPayAverageEarnEmplPeriodTable.FamilyRecId = RHRMVirtualNetworkFamily::findByKinName(
                                                                                            RHRMEmplTable::find(_rPayAverageEarnEmplPeriodTable.EmplId).personTable().PersonnelNumber,
                                                                                            _kinName).RecId;
                }
            }

            return RHRMVirtualNetworkFamily::findByRecId(_rPayAverageEarnEmplPeriodTable.FamilyRecId).KinName;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>EmplId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                rpayAverageEarnEmplPeriodTable_ds.cacheCalculateMethod(tableMethodStr(RPayAverageEarnEmplPeriodTable, payEmplName));

                rPayAverageEarnEmplPeriodTable.initFromAverageEarnEmplTable();
                rPayAverageEarnEmplPeriodTable.PartTimeCoefficient = RPayAverageEarnParameters::partTimeFactor(rPayAverageEarnEmplPeriodTable.EmplId, rPayAverageEarnEmplPeriodTable.StartDate);
                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>EndDate</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean     ret;

                ret = super();

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Hospital</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>HospitalType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Included</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                RPayAverageEarnEmplPeriodTable  averageEarnEmplPeriodTableCurOrig   = rPayAverageEarnEmplPeriodTable.orig();
                RPayAverageEarnEmplPeriodTable  averageEarnEmplPeriodTableCur;
                RPayAverageEarnEmplPeriodTable  averageEarnEmplPeriodTableLocal;
                RPayAverageEarnEngine           averageEarnEngineLocal;

                if (rPayAverageEarnEmplPeriodTable.CorrectedSickListId)
                {
                    select forupdate averageEarnEmplPeriodTableLocal
                        where averageEarnEmplPeriodTableLocal.AverageEarnCodeType  == rPayAverageEarnEmplPeriodTable.AverageEarnCodeType &&
                              averageEarnEmplPeriodTableLocal.EmplId               == rPayAverageEarnEmplPeriodTable.EmplId              &&
                              averageEarnEmplPeriodTableLocal.PayPeriod            == rPayAverageEarnEmplPeriodTable.PayPeriod           &&
                              averageEarnEmplPeriodTableLocal.Included             == averageEarnEmplPeriodTableCurOrig.Included         &&
                              averageEarnEmplPeriodTableLocal.RecalcSickListId     == rPayAverageEarnEmplPeriodTable.CorrectedSickListId &&
                              averageEarnEmplPeriodTableLocal.CorrectedSickListId  == '';
                }
                else if (rPayAverageEarnEmplPeriodTable.RecalcSickListId)
                {
                    select forupdate averageEarnEmplPeriodTableLocal
                        where averageEarnEmplPeriodTableLocal.AverageEarnCodeType  == rPayAverageEarnEmplPeriodTable.AverageEarnCodeType &&
                              averageEarnEmplPeriodTableLocal.EmplId               == rPayAverageEarnEmplPeriodTable.EmplId              &&
                              averageEarnEmplPeriodTableLocal.PayPeriod            == rPayAverageEarnEmplPeriodTable.PayPeriod           &&
                              averageEarnEmplPeriodTableLocal.Included             == averageEarnEmplPeriodTableCurOrig.Included         &&
                              averageEarnEmplPeriodTableLocal.RecalcSickListId     == rPayAverageEarnEmplPeriodTable.RecalcSickListId    &&
                              averageEarnEmplPeriodTableLocal.CorrectedSickListId  == rPayAverageEarnEmplPeriodTable.RecalcSickListId;
                }

                super();

                if (rPayAverageEarnEmplPeriodTable.RecId)
                {
                    averageEarnEmplPeriodTableCur.data(rPayAverageEarnEmplPeriodTable);

                    rPayAverageEarnEngine_SickList.rPayAverageEarnEmplPeriodTable(rPayAverageEarnEmplPeriodTable);
                    rPayAverageEarnEngine_SickList.includedModified();

                    if (averageEarnEmplPeriodTableLocal)
                    {
                        ttsbegin;

                        averageEarnEmplPeriodTableLocal.Included = rPayAverageEarnEmplPeriodTable.Included;
                        averageEarnEmplPeriodTableLocal.PayPeriod = rPayAverageEarnEmplPeriodTable.PayPeriod;
                        averageEarnEmplPeriodTableLocal.update();

                        averageEarnEngineLocal = RPayAverageEarnEngine::construct(averageEarnEmplPeriodTableLocal,
                                                                                  averageEarnEmplPeriodTableLocal.AverageEarnCalcPeriod);
                        averageEarnEngineLocal.includedModified();

                        ttscommit;

                        rPayAverageEarnEmplPeriodTable_DS.research();
                        rPayAverageEarnEmplPeriodTable_DS.positionToRecord(averageEarnEmplPeriodTableCur);
                    }
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if (ret && ! rPayAverageEarnEmplPeriodTable.RecId)
                {
                    ret = checkFailed("@GLS106197");
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LimitByMROT</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (rPayAverageEarnEmplPeriodTable.LimitByMROT)
                {
                    rPayAverageEarnEmplPeriodTable.mrotStartDate = dateNull();
                    rPayAverageEarnEmplPeriodTable.mrotEndDate   = dateNull();
                }

                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>MROTEndDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (rPayAverageEarnEmplPeriodTable.mrotStartDate != dateNull() || rPayAverageEarnEmplPeriodTable.mrotStartDate != dateNull())
                {
                    rPayAverageEarnEmplPeriodTable.LimitByMROT = NoYes::No;
                }
                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>MROTStartDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (rPayAverageEarnEmplPeriodTable.mrotStartDate != dateNull() || rPayAverageEarnEmplPeriodTable.mrotStartDate != dateNull())
                {
                    rPayAverageEarnEmplPeriodTable.LimitByMROT = NoYes::No;
                }

                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PrevPaySickListId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();
                if (ret && rPayAverageEarnEmplPeriodTable.PrevPaySickListId)
                {
                    if (! rPayAverageEarnEmplPeriodTable.previousSickList())
                    {
                        ret = checkFailed(strFmt("@GLS110754", rPayAverageEarnEmplPeriodTable.PrevPaySickListId,rPayAverageEarnEmplPeriodTable.EmplId));
                    }
                    else
                    {
                        rPayAverageEarnEngine_SickList.initFromPreviousSickList();
                    }
                }
                if (ret)
                {
                    element.updateDesign();
                }
                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SysTableLookup       sysTableLookup = SysTableLookup::newParameters(tableNum(RPayAverageEarnEmplPeriodTable),_formControl);
                Query                query = new Query();
                QueryBuildDataSource qBd;

                if (rPayAverageEarnEmplPeriodTable.EmplId)
                {
                    qBd = query.addDataSource(tableNum(RPayAverageEarnEmplPeriodTable));
                    sysTableLookup.addLookupfield(fieldNum(RPayAverageEarnEmplPeriodTable,RpaySickListId));
                    sysTableLookup.addLookupfield(fieldNum(RPayAverageEarnEmplPeriodTable,StartDate));
                    sysTableLookup.addLookupfield(fieldNum(RPayAverageEarnEmplPeriodTable,EndDate));
                    sysTableLookup.addLookupfield(fieldNum(RPayAverageEarnEmplPeriodTable,RpayIllType));
                    qBd.addRange(fieldNum(RPayAverageEarnEmplPeriodTable, AverageEarnCodeType)).value(queryValue(RPayAverageEarnCodeType::SickList));
                    qBd.addRange(fieldNum(RPayAverageEarnEmplPeriodTable,EmplId)).value(rPayAverageEarnEmplPeriodTable.EmplId);
                    qBd.addRange(fieldNum(RPayAverageEarnEmplPeriodTable,Included)).value(queryValue(NoYes::Yes));
                    qBd.addRange(fieldNum(RPayAverageEarnEmplPeriodTable, CorrectedSickListId)).value(SysQuery::valueEmptyString());

                    sysTableLookup.parmQuery(query);
                    sysTableLookup.performFormLookup();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RecalcSickListId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                rPayAverageEarnEngine_SickList.initFromRecalcSickList();

                element.updateDesign();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SysTableLookup       sysTableLookup = SysTableLookup::newParameters(tableNum(RPayAverageEarnEmplPeriodTable), _formControl);
                Query                query = new Query();
                QueryBuildDataSource qBd;

                if (rPayAverageEarnEmplPeriodTable.EmplId)
                {
                    sysTableLookup.addLookupfield(fieldNum(RPayAverageEarnEmplPeriodTable, RpaySickListId));
                    sysTableLookup.addLookupfield(fieldNum(RPayAverageEarnEmplPeriodTable, StartDate));
                    sysTableLookup.addLookupfield(fieldNum(RPayAverageEarnEmplPeriodTable, EndDate));
                    sysTableLookup.addLookupfield(fieldNum(RPayAverageEarnEmplPeriodTable, RpayIllType));

                    qBd = query.addDataSource(tableNum(RPayAverageEarnEmplPeriodTable));
                    qBd.addRange(fieldNum(RPayAverageEarnEmplPeriodTable, AverageEarnCodeType)).value(queryValue(RPayAverageEarnCodeType::SickList));
                    qBd.addRange(fieldNum(RPayAverageEarnEmplPeriodTable, EmplId)).value(rPayAverageEarnEmplPeriodTable.EmplId);
                    qBd.addRange(fieldNum(RPayAverageEarnEmplPeriodTable, Included)).value(queryValue(NoYes::Yes));

                    qBd = qBd.addDataSource(tableNum(RPayAverageEarnEmplPeriodTable));
                    qBd.relations(false);

                    qBd.addLink(fieldNum(RPayAverageEarnEmplPeriodTable, RpaySickListId), fieldNum(RPayAverageEarnEmplPeriodTable, RecalcSickListId));
                    qBd.addLink(fieldNum(RPayAverageEarnEmplPeriodTable, EmplId), fieldNum(RPayAverageEarnEmplPeriodTable, EmplId));
                    qBd.joinMode(JoinMode::NoExistsJoin);

                    sysTableLookup.parmQuery(query);
                    sysTableLookup.performFormLookup();
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RPayAverageEarnCode</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                RPayAverageEarnEngine::jumpRef2EarnTable(rPayAverageEarnEmplPeriodTable);
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                RPayAverageEarnEngine::performAverageEarnTypeLookup(_formControl, RPayAverageEarnCodeType::SickList);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                rPayAverageEarnEmplPeriodTable.initFromAverageEarnEmplTable();
                rPayAverageEarnEmplPeriodTable_ds.cacheCalculateMethod(tableMethodStr(RPayAverageEarnEmplPeriodTable,averageEarnName));
                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RPayAverageTimeCalcType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RpayIllType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                rPayAverageEarnEmplPeriodTable.AddPaymFromPaymFund = RPaySickIllParameters::find(rPayAverageEarnEmplPeriodTable.RpayIllType).AddPaymFromPaymFund;
                rPayAverageEarnEmplPeriodTable.rPayAverageEarnCode = RPaySickIllParameters::find(rPayAverageEarnEmplPeriodTable.RpayIllType).AverageEarnCode;
                rPayAverageEarnEmplPeriodTable.initFromAverageEarnEmplTable();
                element.updateDesign();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean     ret;

                ret = super();

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RpaySickListId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                rPayAverageEarnEngine_SickList.rPayAverageEarnEmplPeriodTable(rPayAverageEarnEmplPeriodTable);

                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RpaySickListType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.updateDesign();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>StartDate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                rPayAverageEarnEmplPeriodTable.PartTimeCoefficient = RPayAverageEarnParameters::partTimeFactor(rPayAverageEarnEmplPeriodTable.EmplId,
                                                                                                               rPayAverageEarnEmplPeriodTable.StartDate);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean     ret;

                ret = super();

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>RpayAverageEarnTrans</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            if (this.allowCreate())
            {
                rPayAverageEarnEngine_SickList.createAverageEarnTransDialog();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();
            rPayAverageEarnEngine_SickList.updateAverageEarnEmplPeriodTable();
            rPayAverageEarnEngine_SickList.updateAverageEarnValue();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();

            rPayAverageEarnEngine_SickList.updateAverageEarnEmplPeriodTable();
            rPayAverageEarnEngine_SickList.updateAverageEarnValue();

            rpayAverageEarnEmplPeriodTable_ds.active();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>RPayAverageEarnValue</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            wageTypeEdit.allowEdit(!rPayAverageEarnEmplPeriodTable.Included &&
                                    rPayAverageEarnValue.PayAverageSourceType == RPayAverageSourceType::PaymentFund);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>wageTypeEdit</Name>
						<Source><![CDATA[
        edit LabelType wageTypeEdit(boolean _set, RPayAverageEarnValue _averageEarnValue, LabelType _wageType)
        {
            LabelType ret;
            SysDictEnum dictEnum;
            RPaySickWageTypeView wageTypeView;
            int value;

            if (_set)
            {
                dictEnum = new SysDictEnum(enumNum(RPaySickWageTypeView));
                value = dictEnum.name2Value(_wageType);
                if (value != 255)
                {
                    if (_wageType == '' || _averageEarnValue.PayAverageSourceType != RPayAverageSourceType::PaymentFund)
                    {
                        _averageEarnValue.SickWageType = RPaySickWageType::None;
                    }
                    else
                    {
                        wageTypeView = value;
                        _averageEarnValue.SickWageType = RPayAverageEarnValue::wageTypeView2WageType(wageTypeView);
                    }

                    ret = _averageEarnValue.wageType();
                }
            }
            else
            {
                if (_averageEarnValue.SickWageType == RPaySickWageType::None && _averageEarnValue.PayAverageSourceType == RPayAverageSourceType::PaymentFund)
                {
                    ret = '';
                }
                else
                {
                    ret = _averageEarnValue.wageType();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>editPayAverageSourceType</Name>
						<Source><![CDATA[
        edit Integer editPayAverageSourceType(boolean _set,RPayAverageEarnValue _payAverageEarnValue, Integer _rPayAverageSourceType)
        {
            if (_set)
            {
                _payAverageEarnValue.PayAverageSourceType = _rPayAverageSourceType;
            }
            return _payAverageEarnValue.PayAverageSourceType;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AverageRate</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                rPayAverageEarnEngine_SickList.updateSickListValue();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PayAverageSourceType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                rPayAverageEarnEngine_SickList.updateSickListValue();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PayDayHour</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                rPayAverageEarnEngine_SickList.updateSickListValue();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PayPeriod</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                rPayAverageEarnValue.PayPeriod = endmth(rPayAverageEarnValue.PayPeriod);
                ret = super();

                if (ret)
                {
                    if (rPayAverageEarnValue.PayPeriod < dateStartMth(rPayAverageEarnEmplPeriodTable.StartDate) ||
                       rPayAverageEarnValue.PayPeriod > endmth(rPayAverageEarnEmplPeriodTable.EndDate))
                    {
                        ret = checkFailed(strFmt("@GLS105819","@GLS106118"));
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SickListPercentage</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                rPayAverageEarnEngine_SickList.updateSickListValue();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>RPaySicklistPrevPeriod</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();
            element.updateNumberOfWorkedMonths();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();

            element.updateNumberOfWorkedMonths();
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            TransDate transDate;

            transDate = rPayAverageEarnEmplPeriodTable.sickListStartDate();

            workMonthRange.value(strFmt('%1..%2',rPayAverageEarnEngine_SickList.getStartDateOfCheckedPeriod(), endmth(prevMth(transDate))));
            workMonthRange.status(RangeStatus::Hidden);
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            workMonthRange = this.query().dataSourceTable(tableNum(RPaySicklistPrevPeriod)).addRange(fieldNum(RPaySicklistPrevPeriod, WorkMonth));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>TSUpdateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            rPayAverageEarnEngine_SickList.formController().onClickTSUpdateButton();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>kinName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            RHRMVirtualNetworkFamily::lookupKinName(this, RHRMEmplTable::find(rPayAverageEarnEmplPeriodTable.EmplId).personTable().PersonnelNumber, true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonCalcCurrent</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (! rPayAverageEarnEmplPeriodTable.Included)
            {
                if (rPayAverageEarnEmplPeriodTable.isReverseLine())
                {
                    checkFailed("@RUP6660");
                }
                else
                {
                    rPayAverageEarnEngine_SickList.rPayAverageEarnEmplPeriodTable(rPayAverageEarnEmplPeriodTable);
                    rPayAverageEarnEngine_SickList.calculateNow();
                    rPayAverageEarnEmplPeriodTable_ds.refresh();
                    rPayAverageEarnEmplPeriodTable_ds.reread();
                    rPayAverageEarnTrans_ds.research();
                }
            }
            else
            {
                info (strFmt("@GLS106123","@GLS106118"));
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>wageTypeEdit</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            EnumLookup_RU::lookup(this, enumNum(RPaySickWageTypeView));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonRecalcPrevWorkPeriod</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            rPaySicklistPrevPeriod_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RpayAverageEarnEmplPeriodTable</Name>
			<Table>RPayAverageEarnEmplPeriodTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActuallyFund</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActuallyTimeGroupCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddPaymFromPaymFund</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApplyRestriction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AverageEarnCalcPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>averageEarnCodeType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AverageFund</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AverageTimeGroupCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BonusFund</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BusinessTripRecordType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BusinessTripTypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalcBonusInProportion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalcByFund</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalcByMROT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalcByPrevYears</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedSickListId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DayNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmplId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FamilyRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hospital</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HospitalType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Included</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LimitByMROT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MonthForCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MROTAmountAe</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MROTEndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MROTStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NonAppearanceTimeGroupCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumOfWorkedMonths</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartTimeCoefficient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrevBusinessTripStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrevPaySickListId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrevVacationStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecalcByPrevYears</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecalcSickListId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RiseFactor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RPayAverageEarnCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RpayAverageFullMonthCalcType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RPayAverageTimeCalcType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RPayBonusAccountingCriterion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RPayDayHourCalc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RpayIllType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RpaySickListId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RpaySickListType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RPayWeekDuration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ScheduleTimeGroupCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SheetTableRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SickListRecalcNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SickListRecalcPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceSickListId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumOnHand</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SumOnHandBlocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VacationRecordType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VacationTypeId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RpayAverageEarnTrans</Name>
			<Table>RPayAverageEarnTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AverageEarnEmplPeriodRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RPayAverageSourceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RPayDayHour</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RpayAverageEarnEmplPeriodTable</JoinSource>
			<LinkType>Active</LinkType>
			<Index>RecIdPeriodSourceIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RPayAverageEarnValue</Name>
			<Table>RPayAverageEarnValue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AverageEarnEmplPeriodRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AverageRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSourceLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayAverageSourceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayDayHour</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SickListPercentage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SickWageType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RpayAverageEarnEmplPeriodTable</JoinSource>
			<LinkType>Active</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RPaySicklistPrevPeriod</Name>
			<Table>RPaySicklistPrevPeriod</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AtCurrentWork</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmplId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Factor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberOfDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberOfWorkDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayCalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkMonth</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RpayAverageEarnEmplPeriodTable</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RUP6343</Caption>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>FormStateButtons</Name>
						<ElementPosition>1342177278</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>TSUpdateButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@RUP6380</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<LeftMode>AutoLeft</LeftMode>
						<Top>0</Top>
						<TopMode>BottomEdge</TopMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>MenuItemPrint</Name>
								<ElementPosition>477218588</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
								<MenuItemName>RPaySickListReportExcel</MenuItemName>
								<MenuItemType>Output</MenuItemType>
								<Text>@SYS8813</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>RPayCalculate_SickList</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RPayCalculate_SickList</MenuItemName>
								<MenuItemType>Action</MenuItemType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>RPaySumModule</Name>
								<ElementPosition>954437176</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RPaySumModule</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>RPayEmplPeriodTrans</Name>
								<ElementPosition>1193046470</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RPayEmplPeriodTrans</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>RPayCalendarTable</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RPayCalendarTable</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>RPayReverse</Name>
								<ElementPosition>1670265058</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
								<MenuItemName>RPayReverse</MenuItemName>
								<MenuItemType>Action</MenuItemType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>ShowReverse</Name>
								<ElementPosition>1908874352</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
								<MenuItemName>RPaySickListTable</MenuItemName>
								<Text>@RUP2950</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalRight</ArrangeMethod>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPage</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RpayAverageEarnEmplPeriodTable_RPayAverageEarnCode</Name>
										<ElementPosition>286331152</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RPayAverageEarnCode</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RpayAverageEarnEmplPeriodTable_EmplId</Name>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EmplId</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EmplName</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>572662304</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>payEmplName</DataMethod>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RpayAverageEarnEmplPeriodTable_RpaySickListId</Name>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RpaySickListId</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RpayAverageEarnEmplPeriodTable_PrevPaySickListId</Name>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PrevPaySickListId</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RpayAverageEarnEmplPeriodTable_CorrectedSickListId</Name>
										<ElementPosition>1002159032</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CorrectedSickListId</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RpayAverageEarnEmplPeriodTable_RecalcSickListId</Name>
										<ElementPosition>1145324608</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RecalcSickListId</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>RpayAverageEarnEmplPeriodTable_StartDate</Name>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>StartDate</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>RpayAverageEarnEmplPeriodTable_EndDate</Name>
										<ElementPosition>1431655760</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndDate</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RpayAverageEarnEmplPeriodTable_RpaySickListType</Name>
										<ElementPosition>1574821336</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RpaySickListType</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RpayAverageEarnEmplPeriodTable_RpayIllType</Name>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RpayIllType</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RpayAverageEarnEmplPeriodTable_Included</Name>
										<ElementPosition>1861152488</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>Included</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>RpayAverageEarnEmplPeriodTable_PayPeriod</Name>
										<ElementPosition>2004318064</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayPeriod</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPage1</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupCalculate</Name>
								<ElementPosition>390451572</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>MonthForCalc</Name>
										<ElementPosition>429496728</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MonthForCalc</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RpayAverageEarnEmplPeriodTable_CalcByFund</Name>
										<ElementPosition>644245092</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CalcByFund</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RPayDayHourCalc</Name>
										<ElementPosition>858993456</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RPayDayHourCalc</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RpaySickListType</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RpaySickListType</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RpayAverageEarnEmplPeriodTable_AddPaymFromPaymFund</Name>
										<ElementPosition>1288490184</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AddPaymFromPaymFund</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RpayAverageEarnEmplPeriodTable_RecalcByPrevYears</Name>
										<ElementPosition>1503238548</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RecalcByPrevYears</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RpayAverageEarnEmplPeriodTable_CalcByPrevYears</Name>
										<ElementPosition>1717986912</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CalcByPrevYears</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RpayAverageEarnEmplPeriodTable_PartTimeCoefficient</Name>
										<ElementPosition>1932735276</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PartTimeCoefficient</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@RUP203</Caption>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MROT</Name>
								<ElementPosition>585677358</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>MROT_CalcByMROT</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CalcByMROT</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>MROT_LimitByMROT</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LimitByMROT</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>MROT_MROTStartDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MROTStartDate</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>MROT_MROTEndDate</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MROTEndDate</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>MROT</DataGroup>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupSumParameters</Name>
								<ElementPosition>780903144</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ActuallyFund</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActuallyFund</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AverageFund</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AverageFund</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RiseFactor</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RiseFactor</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>NumericalParameters</DataGroup>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupTimeParameters</Name>
								<ElementPosition>976128930</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ScheduleTimeGroupCode</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ScheduleTimeGroupCode</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ActuallyTimeGroupCode</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActuallyTimeGroupCode</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>NonAppearanceTimeGroupCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>NonAppearanceTimeGroupCode</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AverageTimeGroupCode</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AverageTimeGroupCode</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>TimeParameters</DataGroup>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupBonus</Name>
								<ElementPosition>1171354716</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BonusFund</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BonusFund</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>RPayBonusAccountingCriterion</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RPayBonusAccountingCriterion</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>GroupBonus_CalcBonusInProportion</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CalcBonusInProportion</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Bonus</DataGroup>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupSost</Name>
								<ElementPosition>1366580502</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Included</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Included</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>PayPeriod</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayPeriod</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SumOnHand</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>SumOnHand</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>Status</DataGroup>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FamilyGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1561806288</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>kinName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>kinName</DataMethod>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@RUP2354</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Reverse_Group</Name>
								<ElementPosition>1757032074</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Reverse_CorrectedPeriod</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CorrectedPeriod</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Reverse_CorrectedSickListId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CorrectedSickListId</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Reverse</DataGroup>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Recalculation</Name>
								<ElementPosition>1887182598</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Recalculation_SickListRecalcPeriod</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SickListRecalcPeriod</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Recalculation</DataGroup>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Hospital</Name>
								<ElementPosition>2017333122</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Hospital_HospitalType</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>HospitalType</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Hospital_Hospital</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Hospital</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Hospital_M_hospitalName</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>hospitalName</DataMethod>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Hospital</DataGroup>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS19924</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPage2</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupDates</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>StartDate</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>StartDate</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>EndDate</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndDate</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
								</Controls>
								<Columns>4</Columns>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Calculate</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupAverage</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>350</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>ActionPaneFund</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ActionPane</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormActionPaneTabControl">
														<Name>ActionPaneTabFund</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ActionPaneTab</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonGroupControl">
																<Name>NewDeleteGroupFund</Name>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Left>0</Left>
																<Type>ButtonGroup</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormCommandButtonControl">
																		<Name>NewButtonFund</Name>
																		<ElementPosition>1073741822</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>CommandButton</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																		<Command>New</Command>
																		<NormalImage>New</NormalImage>
																		<Primary>Yes</Primary>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormCommandButtonControl">
																		<Name>DeleteButtonFund</Name>
																		<ElementPosition>1610612733</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>CommandButton</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																		<Command>DeleteRecord</Command>
																		<NormalImage>Delete</NormalImage>
																		<Primary>Yes</Primary>
																		<SaveRecord>No</SaveRecord>
																		<Text>@sys14425</Text>
																	</AxFormControl>
																</Controls>
																<ArrangeMethod>Vertical</ArrangeMethod>
																<DataSource>RpayAverageEarnTrans</DataSource>
															</AxFormControl>
														</Controls>
														<AlignChild>No</AlignChild>
														<AlignChildren>No</AlignChildren>
														<ArrangeMethod>Vertical</ArrangeMethod>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<Style>Strip</Style>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>Grid1</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>0</Height>
												<Type>Grid</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>RpayAverageEarnTrans_PayPeriod</Name>
														<ElementPosition>613566756</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>PayPeriod</DataField>
														<DataSource>RpayAverageEarnTrans</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>RpayAverageEarnTrans_RPayAverageSourceType</Name>
														<ElementPosition>920350134</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>RPayAverageSourceType</DataField>
														<DataSource>RpayAverageEarnTrans</DataSource>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>RpayAverageEarnTrans_RPayDayHour</Name>
														<ElementPosition>1227133512</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>RPayDayHour</DataField>
														<DataSource>RpayAverageEarnTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>RpayAverageEarnTrans_Amount</Name>
														<ElementPosition>1533916890</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Amount</DataField>
														<DataSource>RpayAverageEarnTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>AverageRate</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>1840700268</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>payAverage</DataMethod>
														<DataSource>RpayAverageEarnTrans</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
												</Controls>
												<DataSource>RpayAverageEarnTrans</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Average</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Top>0</Top>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>AverageTotal</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<LeftMode>AutoRight</LeftMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>AverageTotal</DataMethod>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>RpayAverageEarnEmplPeriodTable_MROTAmountAe</Name>
														<AllowEdit>No</AllowEdit>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<LeftMode>AutoRight</LeftMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>MROTAmountAe</DataField>
														<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
												</Controls>
											</AxFormControl>
										</Controls>
										<Caption>@RUP461</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ctrlSplitterX</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>4</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<HideIfEmpty>No</HideIfEmpty>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Group1</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>ActionPane1</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ActionPane</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormActionPaneTabControl">
														<Name>ActionPaneTab1</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ActionPaneTab</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonGroupControl">
																<Name>NewDeleteGroupAE</Name>
																<ElementPosition>1073741822</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Left>0</Left>
																<Type>ButtonGroup</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormCommandButtonControl">
																		<Name>NewButtonAE</Name>
																		<ElementPosition>1073741822</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>CommandButton</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																		<Command>New</Command>
																		<NormalImage>New</NormalImage>
																		<Primary>Yes</Primary>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormCommandButtonControl">
																		<Name>DeleteButtonAE</Name>
																		<ElementPosition>1610612733</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>CommandButton</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																		<Command>DeleteRecord</Command>
																		<NormalImage>Delete</NormalImage>
																		<Primary>Yes</Primary>
																		<SaveRecord>No</SaveRecord>
																		<Text>@sys14425</Text>
																	</AxFormControl>
																</Controls>
																<ArrangeMethod>Vertical</ArrangeMethod>
																<DataSource>RPayAverageEarnValue</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormButtonGroupControl">
																<Name>ButtonGroup1</Name>
																<ElementPosition>1610612733</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Left>0</Left>
																<Type>ButtonGroup</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>ButtonCalcCurrent</Name>
																		<ElementPosition>715827882</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Left>0</Left>
																		<LeftMode>RightEdge</LeftMode>
																		<NeededPermission>Delete</NeededPermission>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<Text>@SYS7170</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormMenuFunctionButtonControl">
																		<Name>RPayEmplTblSum</Name>
																		<ElementPosition>1073741823</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>MenuFunctionButton</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<DataSource>RpayAverageEarnTrans</DataSource>
																		<MenuItemName>RPayEmplTblSum</MenuItemName>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormMenuFunctionButtonControl">
																		<Name>RPayAveragePayString</Name>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>MenuFunctionButton</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<DataSource>RpayAverageEarnTrans</DataSource>
																		<MenuItemName>RPayAveragePayString</MenuItemName>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormMenuFunctionButtonControl">
																		<Name>RpayAverageBonusSum</Name>
																		<ElementPosition>1789569705</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>MenuFunctionButton</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
																		<MenuItemName>RpayAverageBonusSum</MenuItemName>
																	</AxFormControl>
																</Controls>
																<ArrangeMethod>Vertical</ArrangeMethod>
															</AxFormControl>
														</Controls>
														<AlignChild>No</AlignChild>
														<AlignChildren>No</AlignChildren>
														<ArrangeMethod>Vertical</ArrangeMethod>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<Style>Strip</Style>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>Grid2</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>0</Height>
												<Type>Grid</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>RPayAverageEarnValue_PayPeriod</Name>
														<ElementPosition>357913940</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>PayPeriod</DataField>
														<DataSource>RPayAverageEarnValue</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>RPayAverageEarnValue_StartDate</Name>
														<ElementPosition>536870910</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>StartDate</DataField>
														<DataSource>RPayAverageEarnValue</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormDateControl">
														<Name>RPayAverageEarnValue_EndDate</Name>
														<ElementPosition>715827880</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Date</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>EndDate</DataField>
														<DataSource>RPayAverageEarnValue</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>RPayAverageEarnValue_SickListPercentage</Name>
														<ElementPosition>894784850</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>SickListPercentage</DataField>
														<DataSource>RPayAverageEarnValue</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>payAverageSourceType</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741820</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>ComboBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>editPayAverageSourceType</DataMethod>
														<DataSource>RPayAverageEarnValue</DataSource>
														<Label>@RUP504</Label>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>RPayAverageEarnValue_AverageRate</Name>
														<ElementPosition>1252698790</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>AverageRate</DataField>
														<DataSource>RPayAverageEarnValue</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>RPayAverageEarnValue_PayDayHour</Name>
														<ElementPosition>1431655760</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>PayDayHour</DataField>
														<DataSource>RPayAverageEarnValue</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>RPayAverageEarnValue_Amount</Name>
														<ElementPosition>1610612730</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>Amount</DataField>
														<DataSource>RPayAverageEarnValue</DataSource>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>RPayAverageEarnValue_IsSourceLine</Name>
														<ElementPosition>1789569700</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<BackgroundColor>WindowBackground</BackgroundColor>
														<DataField>IsSourceLine</DataField>
														<DataSource>RPayAverageEarnValue</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>wageTypeEdit</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1968526670</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>wageTypeEdit</DataMethod>
														<DataSource>RPayAverageEarnValue</DataSource>
														<Label>@SYS23315</Label>
														<LookupButton>Always</LookupButton>
													</AxFormControl>
												</Controls>
												<DataSource>RPayAverageEarnValue</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>Itog</Name>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormRealControl">
														<Name>SickListSum</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Real</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataMethod>averageEarnValueSum</DataMethod>
														<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
														<Label>@RUP470</Label>
														<NoOfDecimals>-1</NoOfDecimals>
													</AxFormControl>
												</Controls>
											</AxFormControl>
										</Controls>
										<Caption>@RUP462</Caption>
									</AxFormControl>
								</Controls>
								<Columns>3</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@Sys7895</Caption>
						<DataSource>RPayAverageEarnValue</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPage3</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Group_Group</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RpayAverageEarnEmplPeriodTable_ApplyRestriction</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ApplyRestriction</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RpayAverageEarnEmplPeriodTable_NumOfWorkedMonths</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>NumOfWorkedMonths</DataField>
										<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ButtonRecalcPrevWorkPeriod</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<LeftMode>AutoRight</LeftMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@RUP2077</Text>
									</AxFormControl>
								</Controls>
								<Columns>3</Columns>
								<Caption>@RUP2076</Caption>
								<DataSource>RpayAverageEarnEmplPeriodTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid3</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>RPaySicklistPrevPeriod_WorkMonth</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>WorkMonth</DataField>
										<DataSource>RPaySicklistPrevPeriod</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RPaySicklistPrevPeriod_PayCalendarId</Name>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayCalendarId</DataField>
										<DataSource>RPaySicklistPrevPeriod</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RPaySicklistPrevPeriod_AtCurrentWork</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>AtCurrentWork</DataField>
										<DataSource>RPaySicklistPrevPeriod</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RPaySicklistPrevPeriod_NumberOfWorkDays</Name>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>NumberOfWorkDays</DataField>
										<DataSource>RPaySicklistPrevPeriod</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RPaySicklistPrevPeriod_Factor</Name>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Factor</DataField>
										<DataSource>RPaySicklistPrevPeriod</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>NumberOfDays</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>NumberOfDays</DataField>
										<DataSource>RPaySicklistPrevPeriod</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>RPaySicklistPrevPeriod</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@RUP2075</Caption>
						<DataSource>RPaySicklistPrevPeriod</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>