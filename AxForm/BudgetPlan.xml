<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BudgetPlan</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BudgetPlan extends FormRun implements LedgerIChartOfAccountsReference, SysIFilterConsumerForm
{
    boolean generateLines;
    BudgetPlanActiveView activeView;
    BudgetPlanHeaderRecId userLockedHeader;
    BudgetPlanLayoutManager layoutManager;
    BudgetPlanLedgerDimensionPivotControl budgetPlanLedgerDimensionPivotControl;
    DataAreaId currentDataAreaId;
    LedgerChartOfAccountsRecId ledgerChartOfAccountsRecId;
    Set gridControlSet;
    DimensionSetSegmentValue segmentValues;
    RecId previousBudgetPlanHeaderRecId;
    NoYes isLineEditable;
    private boolean researchForGenerateActiveViewLines;

}
]]></Source>
			</Method>
			<Method>
				<Name>registerDatasourceOnQueryingEvent</Name>
				<Source><![CDATA[
    public void registerDatasourceOnQueryingEvent()
    {
        BudgetPlanHeader_DS.OnQueryExecuting += eventhandler(this.parmFilterFormQueryEventHandler().applyFilter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSubmitToWorkflow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the current budget plan can be submitted to workflow.
    /// </summary>
    /// <returns> true, if the budget plan can be submitted to workflow; otherwise, false. </returns>
    public boolean canSubmitToWorkflow()
    {
        return budgetPlanHeader.canSubmitToWorkflow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveAmbiguousReference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resolves the ambiguous reference for the dimension attribute.
    /// </summary>
    /// <param name = "_formStringControl">
    /// The value of "Dimension value" control.
    /// </param>
    /// <returns>
    /// The resolved value of the dimension attribute.
    /// </returns>
    public str resolveAmbiguousReference(FormStringControl _formStringControl)
    {
        DimensionAttribute  dimensionAttribute = DimensionAttribute::findByLocalizedName(_formStringControl.label());

        return DimensionValueLookupHelper::lookupResolveAmbiguousReference(dimensionAttribute, _formStringControl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canPerformAction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a budget plan document altering action can be performed.
    /// </summary>
    /// <returns> true, if the current user can perform a button action; otherwise, false. </returns>
    public boolean canPerformAction()
    {
        if (!BudgetPlanHeader.isCurrent())
        {
            budgetPlanHeader.reread();
        }

        return !BudgetPlan::isUserBlocked(budgetPlanHeader, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>editIsInUse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Manages the assignment of the current editing user of the budget plan.
    /// </summary>
    /// <param name="_set"> Determines if the in use information is set or read. </param>
    /// <param name="_isInUse"> Whether the user marked or unmarked in use. </param>
    /// <returns> The status of the in use on the header. </returns>
    public edit NoYes editIsInUse(boolean _set, NoYes _isInUse)
    {
        if (_set)
        {
            ttsbegin;

            budgetPlanHeader.InUseBy = curUserId();
            budgetPlanHeader.update();

            ttscommit;

            userLockedHeader = budgetPlanHeader.RecId;

            // Form needs to be refreshed for updated control states
            BudgetPlanHeader_DS.research(true);
        }

        return budgetPlanHeader.InUseBy ? NoYes::Yes : NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearInUse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets a budget plan header to the not in use state.
    /// </summary>
    public void clearInUse()
    {
        if (BudgetPlan::clearInUse(userLockedHeader))
        {
            // If the in use has been cleared, reset the locked header id.
            userLockedHeader = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBudgetPlanLayoutManager</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the instance of the <c>BudgetPlanLayoutManager</c> class object.
    /// </summary>
    public BudgetPlanLayoutManager getBudgetPlanLayoutManager()
    {
        return layoutManager;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bindGridControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds columns to grid dynamically.
    /// </summary>
    public void bindGridControls()
    {
        BudgetPlanLayoutMapping layoutMapping;
        FormControl             previousFormControl;

        while select layoutMapping
            order by ElementIndex
            where layoutMapping.Layout == layoutManager.parmBudgetPlanLayoutRecId()
                && layoutMapping.LanguageId == currentUserLanguage()
        {
            previousFormControl = this.setControlPreviousCurrent(previousFormControl, layoutMapping.FieldName, layoutMapping);

            // The current element may have a description element associated with it. Move that next to the current element.
            if (layoutMapping.DescriptionFieldName != BudgetPlanningConstants::emptyString)
            {
                previousFormControl = this.setControlPreviousCurrent(previousFormControl, layoutMapping.DescriptionFieldName, layoutMapping, true);

                // If Forecast Position, add the column for the worker name after the position description.
                if (layoutMapping.DescriptionFieldName == BudgetPlanningConstants::ForecastPositionDescriptionControlName)
                {
                    previousFormControl = this.setControlPreviousCurrent(previousFormControl, BudgetPlanningConstants::ForecastPositionWorkerControlName, layoutMapping, true);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlPreviousCurrent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves the control next to the previous control that was marked as visible.
    /// </summary>
    /// <param name = "_previousFormControl"> The previous <c>FormControl</c> that was marked as visible. </param>
    /// <param name = "_fieldName"> The name of the next control to find and move. </param>
    /// <param name = "_layoutMapping"> The buffer of the <c>BudgetPlanLayoutMapping</c> record. </param>
    /// <param name = "_isDescriptionColumn"> Boolean to indicate if the current control is a description element. </param>
    /// <returns> The current <c>FormControl</c> value. </returns>
    public FormControl setControlPreviousCurrent(
        FormControl             _previousFormControl,
        FieldName               _fieldName,
        BudgetPlanLayoutMapping _layoutMapping,
        boolean                 _isDescriptionColumn = false)
    {
        FormControl previousFormControl = _previousFormControl;
        FormControl currentFormControl;

        currentFormControl = element.design().controlName(_fieldName);
        currentFormControl.visible(true);

        if (previousFormControl)
        {
            // Move the current control next to the previous control that was marked as visible
            LineViewLinesGrid.moveControl(currentFormControl.id(), previousFormControl.id());
        }

        if (_layoutMapping.Ordinal && !_isDescriptionColumn)
        {
            // If the control is a non-dimension control, set its editable property
            currentFormControl.allowEdit( _layoutMapping.IsEditable);
        }

        if (!_isDescriptionColumn)
        {
            this.setControlLabel(currentFormControl, _layoutMapping.FieldLabel);
        }

        previousFormControl = element.design().control(currentFormControl.id());

        return previousFormControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHeaderControlsEditable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the editing state of the header controls.
    /// </summary>
    /// <param name="_allowEdit"> Boolean to determining whether the header controls are editable or not. </param>
    /// <remarks>
    /// A budget plan can be in a state where it is editable overall but it is in use by another user. In this case
    /// the header controls need to be disabled but the editability of the document must be retained.
    /// </remarks>
    public void setHeaderControlsEditable(boolean _allowEdit)
    {
        int gridColumnsCount = LineViewHeaderDetails.controlCount();
        for (int i = 1; i <= gridColumnsCount; i++)
        {
            LineViewHeaderDetails.controlNum(i).allowEdit(_allowEdit);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableLineActions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables or disables form controls related to tasks performed on <c>BudgetPlanLineActiveView</c> records.
    /// </summary>
    public void enableLineActions()
    {
        BudgetPlanInteractionHelper budgetPlanInteractionHelper;

        budgetPlanInteractionHelper = BudgetPlanInteractionHelper::newFromBudgetPlanHeader(budgetPlanHeader);
        budgetPlanInteractionHelper.initHeaderActions();
        budgetPlanInteractionHelper.initLineActions();

        AddLine.enabled(budgetPlanInteractionHelper.parmAddLineButtonEnabled());
        RemoveLine.enabled(budgetPlanInteractionHelper.parmRemoveLineButtonEnabled());
        AllocateBudget.enabled(budgetPlanInteractionHelper.parmAllocateBudgetButtonEnabled());

        BudgetPlanGenerateFromGeneralLedger.enabled(budgetPlanInteractionHelper.parmBudgetPlanGenerateFromGeneralLedger());
        BudgetPlanGenerateBudgetPlan.enabled(budgetPlanInteractionHelper.parmBudgetPlanGenerateBudgetPlan());
        BudgetPlanGenerateAsset.enabled(budgetPlanInteractionHelper.parmBudgetPlanGenerateAsset());
        AddPositions.enabled(budgetPlanInteractionHelper.parmAddPositionsButtonEnabled());
        BudgetPlanGenerateProjectForecast.enabled(budgetPlanInteractionHelper.parmBudgetPlanGenerateProjectForecast());
        BudgetPlanGenerateDemandForecast.enabled(budgetPlanInteractionHelper.parmBudgetPlanGenerateDemandForecast());
        BudgetPlanGenerateSupplyForecast.enabled(budgetPlanInteractionHelper.parmBudgetPlanGenerateSupplyForecast());
        BudgetPlanGenerateBudgetTransaction.enabled(budgetPlanInteractionHelper.parmBudgetPlanGenerateBudgetTransaction());

        // Disallow adding using keyboard input
        BudgetPlanLineActiveView_DS.allowCreate(budgetPlanInteractionHelper.parmAddLineButtonEnabled());
        BudgetPlanLineActiveView_DS.allowEdit(budgetPlanInteractionHelper.parmBudgetPlanEditable());
        BudgetPlanLineActiveView_DS.allowDelete(budgetPlanInteractionHelper.parmRemoveLineButtonEnabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableHeaderActions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables or disables form controls related to tasks performed on <c>BudgetPlanHeader</c> records.
    /// </summary>
    public void enableHeaderActions()
    {
        if (userLockedHeader != 0
            && (userLockedHeader != budgetPlanHeader.RecId || element.inViewMode()))
        {
            element.clearInUse();
        }

        // Need to reread from the datasource because the in use status
        // may have changed since the form displayed the header previously.
        budgetPlanHeader_ds.reread();

        BudgetPlanInteractionHelper budgetPlanInteractionHelper;
        budgetPlanInteractionHelper = BudgetPlanInteractionHelper::newFromBudgetPlanHeader(budgetPlanHeader);
        budgetPlanInteractionHelper.initHeaderActions();

        if (budgetPlanInteractionHelper.parmBudgetPlanEditable())
        {
            element.design().viewEditMode(ViewEditMode::Auto);
        }
        else
        {
            element.design().viewEditMode(ViewEditMode::View);
        }

        boolean allowEdit = !budgetPlanInteractionHelper.parmUserIsBlocked();

        this.setHeaderControlsEditable(allowEdit);
        LineViewLinesGrid.allowEdit(allowEdit);

        if (budgetPlanHeader.InUseBy == BudgetPlanningConstants::emptyString
            && budgetPlanHeader.RecId
            && userLockedHeader == 0
            && !element.inViewMode())
        {
            this.setInUse(budgetPlanHeader);
            userLockedHeader = budgetPlanHeader.RecId;
        }

        BudgetPlanLayout budgetPlanLayout = BudgetPlanLayout::find(budgetPlanHeader.Layout);

        BudgetPlanLineMassUpdate.visible(budgetPlanLayout.UseBudgetPlanLineMassUpdate);
        BudgetPlanMassUpdateTemplate.visible(budgetPlanLayout.UseBudgetPlanLineMassUpdate);
        // Enable mass update buttons only for those scenarios in which budget plan is editable
        BudgetPlanLineMassUpdate.enabled(budgetPlanInteractionHelper.parmBudgetPlanEditable());
        BudgetPlanMassUpdateTemplate.enabled(budgetPlanInteractionHelper.parmBudgetPlanEditable());

        BudgetPlanSetLayout.enabled(budgetPlanHeader.Layout && !budgetPlanInteractionHelper.parmUserIsBlocked());
        BudgetPlanHeader_EditInUseBy.allowEdit(budgetPlanInteractionHelper.parmUserIsBlocked());
        BudgetPlanWorkflowDropDialog.enabled(budgetPlanInteractionHelper.parmWorkflowButtonEnabled());

        // Disallow deleting using keyboard input
        BudgetPlanHeader_DS.allowDelete(budgetPlanInteractionHelper.parmDeleteButtonEnabled());
        BudgetPlanHeader_DS.allowEdit(budgetPlanInteractionHelper.parmBudgetPlanEditable());
        BudgetPlanHeader_PlanningUserGroup.visible(BudgetPlanningConfiguration::find().UseBudgetPlanningUserGroups);

        // Refresh the datasource to display all the bound field changes.
        budgetPlanHeader_ds.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInUse</Name>
				<Source><![CDATA[
    private void setInUse(BudgetPlanHeader _budgetPlanHeader)
    {
        BudgetPlan::setInUse(_budgetPlanHeader);
        userLockedHeader = _budgetPlanHeader.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        if (!budgetPlanHeader.isCurrent())
        {
            BudgetPlanHeader_DS.refreshRecord();
        }

        int ret = super(_taskId);

        switch (_taskId)
        {
            case BudgetPlanningConstants::EditTask:
                if (BudgetPlan::isUserBlocked(budgetPlanHeader))
                {
                    // The plan is currently being edited by someone else, need to refresh the form for updated controls
                    BudgetPlanHeader_DS.research(true);
                }
                else
                {
                    this.editIsInUse(true, NoYes::Yes);
                }
                break;
            case BudgetPlanningConstants::TaskDoneEditRecord:
                // Clear the in use status.
                element.clearInUse();

                // Research the datasource so that any changes are displayed.
                BudgetPlanHeader_DS.research(true);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        if (budgetPlanHeader.InUseBy == curUserId())
        {
            this.clearInUse();
        }
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetGrid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets the grid by removing the previously added controls.
    /// </summary>
    /// <remarks>
    /// The form manipulates the same instance of the grid from memory. The columns from a previous record do not
    /// get reset for a new layout and simply get added on at the end. This method resets the grid layout.
    /// </remarks>
    public void resetGrid()
    {
        Counter gridColumnsCount = LineViewLinesGrid.controlCount();

        for (int i = 1; i <= gridColumnsCount; i++)
        {
            LineViewLinesGrid.controlNum(i).visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControlLabel</Name>
				<Source><![CDATA[
    private void setControlLabel(FormControl _formControl, LabelString _controlLabelText)
    {
        switch (_formControl.type())
        {
            case FormControlType::ComboBox:
                FormComboBoxControl formComboBoxControl = _formControl;
                formComboBoxControl.label(_controlLabelText);
                break;

            case FormControlType::CheckBox:
                FormCheckBoxControl formCheckBoxControl = _formControl;
                formCheckBoxControl.label(_controlLabelText);
                break;

            case FormControlType::Date:
                FormDateControl formDateControl = _formControl;
                formDateControl.label(_controlLabelText);
                break;

            case FormControlType::Real:
                FormRealControl formRealControl = _formControl;
                formRealControl.label(_controlLabelText);
                break;

            case FormControlType::String:
                FormStringControl formStringControl = _formControl;
                formStringControl.label(_controlLabelText);
                break;

            case FormControlType::ReferenceGroup:
                FormReferenceGroupControl formReferenceGroupControl = _formControl;
                formReferenceGroupControl.label(_controlLabelText);
                break;

            default:
                // Do nothing
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        BudgetPlanHeader lookupBudgetPlanHeader;

        lookupBudgetPlanHeader = element.args().record() as BudgetPlanHeader;

        if (lookupBudgetPlanHeader.RecId)
        {
            element.args().lookupRecord(lookupBudgetPlanHeader);
        }

        super();

        gridControlSet = new Set(Types::Integer);

        FormCommandButtonControl attachmentButton = this.control(this.controlId(BudgetPlanningConstants::SystemDefinedAttachButton)) as FormCommandButtonControl;

        if (attachmentButton)
        {
            BudgetPlanFormHelper formHelper = BudgetPlanFormHelper::construct();
            formHelper.parmBudgetPlanHeader(budgetPlanHeader);
            attachmentButton.registerOverrideMethod(methodStr(FormCommandButtonControl, clicked), methodStr(BudgetPlanFormHelper, attachButtonClicked), formHelper);
        }

        HeaderDetailsNarrative.visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLedgerChartOfAccountsRecId</Name>
				<Source><![CDATA[
    public LedgerChartOfAccountsRecId getLedgerChartOfAccountsRecId()
    {
        return ledgerChartOfAccountsRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
    public void lookup(FormStringControl _formStringControl)
    {
        DimensionAttribute  dimensionAttribute = DimensionAttribute::findByLocalizedName(_formStringControl.label());

        if (!dimensionAttribute)
        {
            throw error(strFmt("@Budget:BudgetPlan_Validation_UnknownDimensionAttribute", _formStringControl.label()));
        }

        DimensionValueLookupHelper::lookupDimensionValues(dimensionAttribute, _formStringControl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableLines</Name>
				<Source><![CDATA[
    public void enableLines(boolean _enable = false)
    {
        if (_enable)
        {
            lineViewHeaderDetails.collapse();
        }
        else
        {
            lineViewHeaderDetails.expand();
        }

        lineViewLines.visible(_enable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshActiveViewLines</Name>
				<Source><![CDATA[
    public void refreshActiveViewLines()
    {
        element.resetGrid();
        activeView = BudgetPlanActiveView::newFromBudgetPlanHeader(budgetPlanHeader.RecId);
        layoutManager = activeView.parmLayoutManager();

        budgetPlanLedgerDimensionPivotControl = BudgetPlanLedgerDimensionPivotControl::newFromBudgetPlanHeader(budgetPlanHeader.RecId);
        BudgetPlanLedgerDimensionPivotControl::checkDimensionFocusContainsValidSegments(budgetPlanHeader.BudgetPlanningProcess, budgetPlanHeader.Layout);
        budgetPlanLedgerDimensionPivotControl.parmEffectiveDate(layoutManager.getDefaultEffectiveDate());

        activeView.createBudgetPlanActiveViewAndDetailFromLine();

        element.bindGridControls();
        budgetPlanLineActiveView_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateActiveViewLines</Name>
				<Source><![CDATA[
    public void generateActiveViewLines()
    {
        element.resetGrid();
        element.enableLines();

        // Generate the matrix data only when budget plan is displayed in line view
        BudgetPlanLayout currentLayout = BudgetPlanLayout::find(budgetPlanHeader.Layout);
        if (currentLayout == null || !BudgetPlanLayoutHelper::checkLayoutExistsInHeaderSetup(budgetPlanHeader, currentLayout))
        {
            BudgetPlanLayoutHelper::resetHeaderLayout(budgetPlanHeader.RecId);
            budgetPlanHeader.reread();
        }

        currentDataAreaId = BudgetPlan::getDataAreaId(budgetPlanHeader.RecId);
        ledgerChartOfAccountsRecId = BudgetPlanningProcessSetup::getLedgerRecId(budgetPlanHeader.RecId);

        if (budgetPlanHeader.Layout)
        {
            BudgetPlanLedgerDimensionPivotControl::checkDimensionFocusContainsValidSegments(budgetPlanHeader.BudgetPlanningProcess, budgetPlanHeader.Layout);

            activeView                            = BudgetPlanActiveView::newFromBudgetPlanHeader(budgetPlanHeader.RecId);
            layoutManager                         = activeView.parmLayoutManager();

            budgetPlanLedgerDimensionPivotControl = BudgetPlanLedgerDimensionPivotControl::newFromBudgetPlanHeader(budgetPlanHeader.RecId);
            budgetPlanLedgerDimensionPivotControl.parmEffectiveDate(layoutManager.getDefaultEffectiveDate());

            if (!BudgetPlan::isUserBlocked(budgetPlanHeader))
            {
                activeView.createBudgetPlanActiveViewAndDetailFromLine();
            }

            element.bindGridControls();
        }
        else
        {
            warning("@Budget:BudgetPlanLayoutNotFound");
        }

        element.enableLines(true);
        element.enableLineActions();

        // Performance: Skip research of the active view when the form is guaranteed to research for us during load
        if (researchForGenerateActiveViewLines && previousBudgetPlanHeaderRecId != 0)
        {
            budgetPlanLineActiveView_ds.research();
        }

        researchForGenerateActiveViewLines = true;

        previousBudgetPlanHeaderRecId = budgetPlanHeader.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateActiveViewLinesForNewHeader</Name>
				<Source><![CDATA[
    private void generateActiveViewLinesForNewHeader()
    {
        if ((previousBudgetPlanHeaderRecId != budgetPlanHeader.RecId)
            && TabPageDetails.isActivePage())
        {
            this.generateActiveViewLines();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        element.ViewOptionHelper().LineViewSwitched += eventhandler(element.generateActiveViewLinesForNewHeader);

        // This is to handle the form opening from other than the listpage/grid view
        if (element.args().formViewOption() == FormViewOption::Details)
        {
            element.generateActiveViewLines();
        }
        else
        {
            researchForGenerateActiveViewLines = false;
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>BudgetPlanHeader</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = true)
        {
            NewButton.clicked();
        }

]]></Source>
					</Method>
					<Method>
						<Name>refreshRecord</Name>
						<Source><![CDATA[
        /// <summary>
        /// Refreshes the <c>BudgetPlanHeader</c> record by reading from the database.
        /// </summary>
        public void refreshRecord()
        {
            budgetPlanHeader_ds.reread();
            budgetPlanHeader_ds.refresh();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            element.enableHeaderActions();
            element.enableLineActions();
            element.generateActiveViewLinesForNewHeader();

            if (TabPageGrid.isActivePage())
            {
                researchForGenerateActiveViewLines = false;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Currency</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                BudgetPlanLineActiveView_ds.research();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ParentBudgetPlanHeader</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                BudgetPlanHeader parentBudgetPlanHeaderRecord;

                if (budgetPlanHeader.BudgetPlanningProcess && budgetPlanHeader.BudgetingOrganization)
                {
                    parentBudgetPlanHeaderRecord = BudgetPlan::lookupParentBudgetPlanHeader(
                                                                _formReferenceControl,
                                                                budgetPlanHeader.BudgetPlanningProcess,
                                                                budgetPlanHeader.BudgetingOrganization);
                }

                return parentBudgetPlanHeaderRecord;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>BudgetPlanLineActiveView</Name>
				<Methods>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the starter values on the <c>BudgetPlanLineActiveView</c> line record buffer.
        /// </summary>
        public void initValue()
        {
            super();

            budgetPlanLineActiveView.BudgetPlanHeader = budgetPlanHeader.RecId;
            budgetPlanLineActiveView.defaultRow();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modifiedDimensionValues</Name>
						<Source><![CDATA[
        /// <summary>
        /// Modifies the dimension values based on the new segment values entered.
        /// </summary>
        /// <param name = "_fieldNum"> The field ID of the segment that was changed. </param>
        public void modifiedDimensionValues(FieldId _fieldNum)
        {
            segmentValues = budgetPlanLedgerDimensionPivotControl.getValidSegments(segmentValues);

            BudgetPlanLedgerDimensionPivotControl::convertToDimensionValues(segmentValues, budgetPlanLineActiveView);

            budgetPlanLineActiveView_ds.updateLedgerDimension(_fieldNum);
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateTransactionCurrencyAmount</Name>
						<Source><![CDATA[
        /// <summary>
        /// Updates the <c>TransactionCurrencyAmount</c> value on the <c>BudgetPlanLine</c> record/s.
        /// </summary>
        /// <param name = "_fieldNum"> The field ID of the column that changed. </param>
        public void updateTransactionCurrencyAmount(FieldId _fieldNum)
        {
            budgetPlanLedgerDimensionPivotControl.parmOrdinal(BudgetPlanLayoutManager::getOrdinalForLayoutFieldNum(layoutManager.parmBudgetPlanLayoutRecId(), _fieldNum));

            budgetPlanLineActiveView.LedgerDimension = budgetPlanLedgerDimensionPivotControl.generateLedgerDimension(segmentValues);

            activeView.createOrUpdateBudgetPlanLine(
                budgetPlanLineActiveView,
                _fieldNum,
                fieldStr(BudgetPlanLine, TransactionCurrencyAmount));

            this.refreshRecord();
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateQuantity</Name>
						<Source><![CDATA[
        /// <summary>
        /// Updates the <c>Quantity</c> value on the <c>BudgetPlanLine</c> record/s.
        /// </summary>
        /// <param name = "_fieldNum"> The field ID of the column that changed. </param>
        public void updateQuantity(FieldId _fieldNum)
        {
            budgetPlanLedgerDimensionPivotControl.parmOrdinal(BudgetPlanLayoutManager::getOrdinalForLayoutFieldNum(layoutManager.parmBudgetPlanLayoutRecId(), _fieldNum));

            budgetPlanLineActiveView.LedgerDimension = budgetPlanLedgerDimensionPivotControl.generateLedgerDimension(segmentValues);

            activeView.createOrUpdateBudgetPlanLine(
                budgetPlanLineActiveView,
                _fieldNum,
                fieldStr(BudgetPlanLine, Quantity));

            this.refreshRecord();
        }

]]></Source>
					</Method>
					<Method>
						<Name>updateLedgerDimension</Name>
						<Source><![CDATA[
        /// <summary>
        /// Updates the <c>LedgerDimension</c> value on the <c>BudgetPlanLine</c> record/s.
        /// </summary>
        /// <param name = "_fieldNum"> The field ID of the column that changed.</param>
        public void updateLedgerDimension(FieldId _fieldNum)
        {
            if (!budgetPlanLineActiveView.isNewRecord())
            {
                budgetPlanLineActiveView.LedgerDimension = budgetPlanLedgerDimensionPivotControl.generateLedgerDimension(segmentValues);
                budgetPlanLineActiveView.write();
                activeView.createOrUpdateBudgetPlanLine(
                    budgetPlanLineActiveView,
                    _fieldNum,
                    fieldStr(BudgetPlanLine, LedgerDimension));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateSegmentValue</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validates the changes to the segment value.
        /// </summary>
        /// <param name = "_arrayIndex"> The index of the segment that changed. </param>
        /// <returns> true if the changes are valid to commit; otherwise, false. </returns>
        public boolean validateSegmentValue(ArrayIdx _arrayIndex)
        {
            boolean isValid = true;

            budgetPlanLedgerDimensionPivotControl.validateSegmentValue(
                _arrayIndex,
                segmentValues);

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkSegmentValueExists</Name>
						<Source><![CDATA[
        /// <summary>
        /// Checks if the segment value exists.
        /// </summary>
        /// <param name = "_arrayIndex"> The index of the segment that changed. </param>
        /// <returns> true if the segment value exists; otherwise, false. </returns>
        public boolean checkSegmentValueExists(ArrayIdx _arrayIndex)
        {
            return budgetPlanLedgerDimensionPivotControl.segmentValueExists(segmentValues, _arrayIndex);
        }

]]></Source>
					</Method>
					<Method>
						<Name>refreshRecord</Name>
						<Source><![CDATA[
        /// <summary>
        /// Refreshes the <c>BudgetPlanLineActiveView</c> record by reading from the database.
        /// </summary>
        public void refreshRecord()
        {
            budgetPlanLineActiveView.reread();
            budgetPlanLineActiveView_ds.reread();
            budgetPlanLineActiveView_ds.refresh();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            segmentValues = BudgetPlanLedgerDimensionPivotControl::convertToSegmentArray(budgetPlanLineActiveView);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AssetId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                activeView.createOrUpdateBudgetPlanLine(
                    budgetPlanLineActiveView,
                    fieldNum(BudgetPlanLineActiveView, AssetId),
                    fieldStr(BudgetPlanLine, AssetId),
                    true);
                budgetPlanLineActiveView_ds.refreshRecord();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                changecompany(currentDataAreaId)
                {
                    AssetTable::lookupAssetsNotSoldOrScrapped(_formControl);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>BudgetClass</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                activeView.createOrUpdateBudgetPlanLine(
                    budgetPlanLineActiveView,
                    fieldNum(BudgetPlanLineActiveView, BudgetClass),
                    fieldStr(BudgetPlanLine, BudgetClass),
                    true);
                budgetPlanLineActiveView_ds.refreshRecord();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Comment</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                activeView.createOrUpdateBudgetPlanLine(
                    budgetPlanLineActiveView,
                    fieldNum(BudgetPlanLineActiveView, Comment),
                    fieldStr(BudgetPlanLine, Comment),
                    true);
                budgetPlanLineActiveView_ds.refreshRecord();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DimensionValue1</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.lookup(_formControl as FormStringControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = super();

                segmentValues[1] = budgetPlanLineActiveView.DimensionValue1;

                isValid = isValid && budgetPlanLineActiveView_ds.checkSegmentValueExists(1);

                if (isValid)
                {
                    budgetPlanLineActiveView_ds.validateSegmentValue(1);
                }
                else
                {
                    segmentValues[1] = budgetPlanLineActiveView.orig().DimensionValue1;
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                segmentValues[1] = budgetPlanLineActiveView.DimensionValue1;

                budgetPlanLineActiveView_ds.modifiedDimensionValues(fieldNum(BudgetPlanLineActiveView, DimensionValue1));

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DimensionValue10</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.lookup(_formControl as FormStringControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = super();

                segmentValues[10] = budgetPlanLineActiveView.DimensionValue10;

                isValid = isValid && budgetPlanLineActiveView_ds.checkSegmentValueExists(10);
                
                if (isValid)
                {
                    budgetPlanLineActiveView_ds.validateSegmentValue(10);
                }
                else
                {
                    segmentValues[10] = budgetPlanLineActiveView.orig().DimensionValue10;
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                segmentValues[10] = budgetPlanLineActiveView.DimensionValue10;

                budgetPlanLineActiveView_ds.modifiedDimensionValues(fieldNum(BudgetPlanLineActiveView, DimensionValue10));

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DimensionValue11</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.lookup(_formControl as FormStringControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = super();

                segmentValues[11] = budgetPlanLineActiveView.DimensionValue11;

                isValid = isValid && budgetPlanLineActiveView_ds.checkSegmentValueExists(11);

                if (isValid)
                {
                    budgetPlanLineActiveView_ds.validateSegmentValue(11);
                }
                else
                {
                    segmentValues[11] = budgetPlanLineActiveView.orig().DimensionValue11;
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                segmentValues[11] = budgetPlanLineActiveView.DimensionValue11;

                budgetPlanLineActiveView_ds.modifiedDimensionValues(fieldNum(BudgetPlanLineActiveView, DimensionValue11));

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DimensionValue2</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.lookup(_formControl as FormStringControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = super();

                segmentValues[2] = budgetPlanLineActiveView.DimensionValue2;

                isValid = isValid && budgetPlanLineActiveView_ds.checkSegmentValueExists(2);

                if (isValid)
                {
                    budgetPlanLineActiveView_ds.validateSegmentValue(2);
                }
                else
                {
                    segmentValues[2] = budgetPlanLineActiveView.orig().DimensionValue2;
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                segmentValues[2] = budgetPlanLineActiveView.DimensionValue2;

                budgetPlanLineActiveView_ds.modifiedDimensionValues(fieldNum(BudgetPlanLineActiveView, DimensionValue2));

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DimensionValue3</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.lookup(_formControl as FormStringControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = super();

                segmentValues[3] = budgetPlanLineActiveView.DimensionValue3;

                isValid = isValid && budgetPlanLineActiveView_ds.checkSegmentValueExists(3);

                if (isValid)
                {
                    budgetPlanLineActiveView_ds.validateSegmentValue(3);
                }
                else
                {
                    segmentValues[3] = budgetPlanLineActiveView.orig().DimensionValue3;
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                segmentValues[3] = budgetPlanLineActiveView.DimensionValue3;

                budgetPlanLineActiveView_ds.modifiedDimensionValues(fieldNum(BudgetPlanLineActiveView, DimensionValue3));

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DimensionValue4</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.lookup(_formControl as FormStringControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = super();

                segmentValues[4] = budgetPlanLineActiveView.DimensionValue4;

                isValid = isValid && budgetPlanLineActiveView_ds.checkSegmentValueExists(4);

                if (isValid)
                {
                    budgetPlanLineActiveView_ds.validateSegmentValue(4);
                }
                else
                {
                    segmentValues[4] = budgetPlanLineActiveView.orig().DimensionValue4;
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                segmentValues[4] = budgetPlanLineActiveView.DimensionValue4;

                budgetPlanLineActiveView_ds.modifiedDimensionValues(fieldNum(BudgetPlanLineActiveView, DimensionValue4));

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DimensionValue5</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.lookup(_formControl as FormStringControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = super();

                segmentValues[5] = budgetPlanLineActiveView.DimensionValue5;

                isValid = isValid && budgetPlanLineActiveView_ds.checkSegmentValueExists(5);

                if (isValid)
                {
                    budgetPlanLineActiveView_ds.validateSegmentValue(5);
                }
                else
                {
                    segmentValues[5] = budgetPlanLineActiveView.orig().DimensionValue5;
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                segmentValues[5] = budgetPlanLineActiveView.DimensionValue5;

                budgetPlanLineActiveView_ds.modifiedDimensionValues(fieldNum(BudgetPlanLineActiveView, DimensionValue5));

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DimensionValue6</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.lookup(_formControl as FormStringControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = super();

                segmentValues[6] = budgetPlanLineActiveView.DimensionValue6;

                isValid = isValid && budgetPlanLineActiveView_ds.checkSegmentValueExists(6);

                if (isValid)
                {
                    budgetPlanLineActiveView_ds.validateSegmentValue(6);
                }
                else
                {
                    segmentValues[6] = budgetPlanLineActiveView.orig().DimensionValue6;
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                segmentValues[6] = budgetPlanLineActiveView.DimensionValue6;

                budgetPlanLineActiveView_ds.modifiedDimensionValues(fieldNum(BudgetPlanLineActiveView, DimensionValue6));

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DimensionValue7</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.lookup(_formControl as FormStringControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = super();

                segmentValues[7] = budgetPlanLineActiveView.DimensionValue7;

                isValid = isValid && budgetPlanLineActiveView_ds.checkSegmentValueExists(7);

                if (isValid)
                {
                    budgetPlanLineActiveView_ds.validateSegmentValue(7);
                }
                else
                {
                    segmentValues[7] = budgetPlanLineActiveView.orig().DimensionValue7;
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                segmentValues[7] = budgetPlanLineActiveView.DimensionValue7;

                budgetPlanLineActiveView_ds.modifiedDimensionValues(fieldNum(BudgetPlanLineActiveView, DimensionValue7));

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DimensionValue8</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.lookup(_formControl as FormStringControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = super();

                segmentValues[8] = budgetPlanLineActiveView.DimensionValue8;

                isValid = isValid && budgetPlanLineActiveView_ds.checkSegmentValueExists(8);

                if (isValid)
                {
                    budgetPlanLineActiveView_ds.validateSegmentValue(8);
                }
                else
                {
                    segmentValues[8] = budgetPlanLineActiveView.orig().DimensionValue8;
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                segmentValues[8] = budgetPlanLineActiveView.DimensionValue8;

                budgetPlanLineActiveView_ds.modifiedDimensionValues(fieldNum(BudgetPlanLineActiveView, DimensionValue8));

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DimensionValue9</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.lookup(_formControl as FormStringControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = super();

                segmentValues[9] = budgetPlanLineActiveView.DimensionValue9;

                isValid = isValid && budgetPlanLineActiveView_ds.checkSegmentValueExists(9);

                if (isValid)
                {
                    budgetPlanLineActiveView_ds.validateSegmentValue(9);
                }
                else
                {
                    segmentValues[9] = budgetPlanLineActiveView.orig().DimensionValue9;
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                segmentValues[9] = budgetPlanLineActiveView.DimensionValue9;

                budgetPlanLineActiveView_ds.modifiedDimensionValues(fieldNum(BudgetPlanLineActiveView, DimensionValue9));

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>IsNewRequest</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                activeView.createOrUpdateBudgetPlanLine(
                    budgetPlanLineActiveView,
                    fieldNum(BudgetPlanLineActiveView, IsNewRequest),
                    fieldStr(BudgetPlanLine, IsNewRequest),
                    true);
                budgetPlanLineActiveView_ds.refreshRecord();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>IsRecurring</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                activeView.createOrUpdateBudgetPlanLine(
                    budgetPlanLineActiveView,
                    fieldNum(BudgetPlanLineActiveView, IsRecurring),
                    fieldStr(BudgetPlanLine, IsRecurring),
                    true);
                budgetPlanLineActiveView_ds.refreshRecord();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Position</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                activeView.createOrUpdateBudgetPlanLine(
                    budgetPlanLineActiveView,
                    fieldNum(BudgetPlanLineActiveView, Position),
                    fieldStr(BudgetPlanLine, Position),
                    true);
                budgetPlanLineActiveView_ds.refreshRecord();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                if (BudgetLinkPositionToMultipleForecastDetailsFlight::instance().isEnabled())
                {
                    return BudgetPlanLookupHelper::lookupForecastPositionReferenceV2(_formReferenceControl);
                }
                else
                {
                    return BudgetPlanLookupHelper::lookupForecastPositionReference(_formReferenceControl);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                BudgetPlanFormHelper::jumpRefFilterForecastPosition(
                    HcmPositionForecast::find(budgetPlanLineActiveView.Position),
                    element,
                    budgetPlanHeader.BudgetPlanningProcess);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProjectId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                activeView.createOrUpdateBudgetPlanLine(
                    budgetPlanLineActiveView,
                    fieldNum(BudgetPlanLineActiveView, ProjectId),
                    fieldStr(BudgetPlanLine, ProjectId),
                    true);
                budgetPlanLineActiveView_ds.refreshRecord();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                changecompany(currentDataAreaId)
                {
                    ProjTable::lookupProjIdByForecastRule(_formControl);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProposedAsset</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                activeView.createOrUpdateBudgetPlanLine(
                    budgetPlanLineActiveView,
                    fieldNum(BudgetPlanLineActiveView, ProposedAsset),
                    fieldStr(BudgetPlanLine, ProposedAsset),
                    true);
                budgetPlanLineActiveView_ds.refreshRecord();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProposedProject</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                activeView.createOrUpdateBudgetPlanLine(
                    budgetPlanLineActiveView,
                    fieldNum(BudgetPlanLineActiveView, ProposedProject),
                    fieldStr(BudgetPlanLine, ProposedProject),
                    true);
                budgetPlanLineActiveView_ds.refreshRecord();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity1</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity1));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity10</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity10));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity11</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity11));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity12</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity12));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity13</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity13));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity14</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity14));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity15</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity15));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity16</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity16));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity17</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity17));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity18</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity18));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity19</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity19));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity2</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity2));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity20</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity20));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity21</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity21));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity22</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity22));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity23</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity23));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity24</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity24));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity25</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity25));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity26</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity26));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity27</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity27));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity28</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity28));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity29</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity29));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity3</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity3));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity30</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity30));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity31</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity31));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity32</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity32));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity33</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity33));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity34</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity34));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity35</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity35));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity36</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity36));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity4</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity4));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity5</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity5));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity6</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity6));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity7</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity7));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity8</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity8));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Quantity9</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateQuantity(fieldNum(BudgetPlanLineActiveView, Quantity9));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount1</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount1));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount10</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount10));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount11</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount11));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount12</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount12));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount13</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount13));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount14</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount14));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount15</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount15));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount16</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount16));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount17</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount17));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount18</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount18));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount19</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount19));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount2</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount2));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount20</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount20));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount21</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount21));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount22</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount22));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount23</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount23));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount24</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount24));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount25</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount25));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount26</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount26));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount27</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount27));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount28</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount28));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount29</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount29));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount3</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount3));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount30</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount30));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount31</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount31));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount32</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount32));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount33</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount33));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount34</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount34));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount35</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount35));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount36</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount36));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount4</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount4));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount5</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount5));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount6</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount6));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount7</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount7));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount8</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount8));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyAmount9</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                budgetPlanLineActiveView_ds.updateTransactionCurrencyAmount(fieldNum(BudgetPlanLineActiveView, TransactionCurrencyAmount9));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TransactionCurrencyCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                activeView.createOrUpdateBudgetPlanLine(
                    budgetPlanLineActiveView,
                    fieldNum(BudgetPlanLineActiveView, TransactionCurrencyCode),
                    fieldStr(BudgetPlanLine, TransactionCurrencyCode),
                    true);

                budgetPlanLineActiveView_ds.refreshRecord();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>AttachButton</Name>
				<Type>DropDialogButton</Type>
				<Methods>
					<Method>
						<Name>dialogClosed</Name>
						<Source><![CDATA[
        public void dialogClosed(xFormRun _formRun)
        {
            super(_formRun);

            budgetPlanHeader_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ResetButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (element.canPerformAction())
            {
                element.setInUse(BudgetPlanHeader);

                super();

                if (BudgetPlan::resetBudgetPlan(budgetPlanHeader.RecId))
                {
                    budgetPlanHeader_ds.research(true);
                    element.generateActiveViewLines();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>WorksheetButton</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (element.canPerformAction())
            {
                element.setInUse(BudgetPlanHeader);

                element.generateActiveViewLines();

                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabPageDetails</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();

            budgetPlanHeader_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HeaderDetails_BudgetPlanningProcess</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            BudgetPlanFormHelper::jumpRefLookupRecord(BudgetPlanningProcess::findByLocalizedName(this.valueStr()), element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetPlanHeader_BudgetPlanningStage</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            BudgetPlanFormHelper::jumpRefLookupRecord(BudgetPlanningStage::findByName(this.valueStr()), element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetPlanHeader_BudgetPlanPriority</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            BudgetPlanFormHelper::jumpRefLookupRecord(BudgetPlanPriority::findByLocalizedName(this.valueStr()), element);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            BudgetPlan::lookupBudgetPlanPriority(this, budgetPlanHeader.BudgetPlanningProcess);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid;

            isValid = super();

            if (isValid)
            {
                isValid = budgetPlanHeader.validateField(fieldNum(BudgetPlanHeader, BudgetPlanPriority));
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddLine</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (!BudgetPlan::isUserBlocked(budgetPlanHeader, true))
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RemoveLine</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (!BudgetPlan::isUserBlocked(budgetPlanHeader, true))
            {
                element.setInUse(BudgetPlanHeader);

                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AllocateBudget</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (element.canPerformAction())
            {
                element.setInUse(BudgetPlanHeader);

                if (budgetplanLineActiveView_ds.cursor())
                {
                    // Pass the selected budget plan line active view record.
                    BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Action, menuItemActionStr(BudgetPlanAllocate), this, budgetplanLineActiveView_ds.cursor());
                }
                else
                {
                    // When budget plan header has no budget plan line active view records, Pass the record ID of the
                    // current budget plan header.
                    BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Action, menuItemActionStr(BudgetPlanAllocate), this, budgetPlanHeader);
                }

                activeView.createBudgetPlanActiveViewAndDetailFromLine();
                BudgetPlanLineActiveView_ds.research();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetPlanSetLayout</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (element.canPerformAction())
            {
                element.setInUse(BudgetPlanHeader);

                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetPlanGenerateFromGeneralLedger</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Action, menuItemActionStr(BudgetPlanGenerateFromGeneralLedger), this, budgetPlanHeader);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetPlanGenerateBudgetPlan</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Action, menuItemActionStr(BudgetPlanGenerateBudgetPlan), this, budgetPlanHeader);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetPlanGenerateAsset</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Action, menuItemActionStr(BudgetPlanGenerateAsset), this, budgetPlanHeader);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddPositions</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (element.canPerformAction())
            {
                element.setInUse(BudgetPlanHeader);

                BudgetPlanFormHelper::openDialogForm(formStr(BudgetPlanHcmSelect), budgetPlanHeader);

                activeView.createBudgetPlanActiveViewAndDetailFromLine();
                BudgetPlanLineActiveView_ds.research();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetPlanGenerateProjectForecast</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Action, menuItemActionStr(BudgetPlanGenerateProjectForecast), this, budgetPlanHeader);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetPlanGenerateDemandForecast</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Action, menuItemActionStr(BudgetPlanGenerateDemandForecast), this, budgetPlanHeader);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetPlanGenerateSupplyForecast</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Action, menuItemActionStr(BudgetPlanGenerateSupplyForecast), this, budgetPlanHeader);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetPlanGenerateBudgetTransaction</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Action, menuItemActionStr(BudgetPlanGenerateBudgetTransaction), this, budgetPlanHeader);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetRegisterEntryFromBudgetPlan</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            BudgetPlanFormHelper::openDialogFormByMenuItem(MenuItemType::Action, menuItemActionStr(BudgetRegisterEntryFromBudgetPlan), this, budgetPlanHeader);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DimensionValue1</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return element.resolveAmbiguousReference(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DimensionValue2</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return element.resolveAmbiguousReference(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DimensionValue3</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return element.resolveAmbiguousReference(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DimensionValue4</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return element.resolveAmbiguousReference(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DimensionValue5</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return element.resolveAmbiguousReference(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DimensionValue6</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return element.resolveAmbiguousReference(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DimensionValue7</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return element.resolveAmbiguousReference(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DimensionValue8</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return element.resolveAmbiguousReference(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DimensionValue9</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return element.resolveAmbiguousReference(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DimensionValue10</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return element.resolveAmbiguousReference(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DimensionValue11</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return element.resolveAmbiguousReference(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HeaderDetails_BudgetPlanningStage</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            BudgetPlanFormHelper::jumpRefLookupRecord(BudgetPlanningStage::findByName(this.valueStr()), element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HeaderDetails_BudgetPlanPriority</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            BudgetPlanFormHelper::jumpRefLookupRecord(BudgetPlanPriority::findByLocalizedName(this.valueStr()), element);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            BudgetPlan::lookupBudgetPlanPriority(this, budgetPlanHeader.BudgetPlanningProcess);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid;

            isValid = super();

            if (isValid)
            {
                isValid = budgetPlanHeader.validateField(fieldNum(BudgetPlanHeader, BudgetPlanPriority));
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EditInGridBudgetPlanningProcess</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            BudgetPlanFormHelper::jumpRefLookupRecord(BudgetPlanningProcess::findByLocalizedName(this.valueStr()), element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EditInGridBudgetPlanningStage</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            BudgetPlanFormHelper::jumpRefLookupRecord(BudgetPlanningStage::findByName(this.valueStr()), element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EditInGridBudgetPlanPriority</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            BudgetPlanFormHelper::jumpRefLookupRecord(BudgetPlanPriority::findByLocalizedName(this.valueStr()), element);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            BudgetPlan::lookupBudgetPlanPriority(this, budgetPlanHeader.BudgetPlanningProcess);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid;

            isValid = super();

            if (isValid)
            {
                isValid = budgetPlanHeader.validateField(fieldNum(BudgetPlanHeader, BudgetPlanPriority));
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<FormTemplate>DetailsPage</FormTemplate>
	<InteractionClass>BudgetPlanInteraction</InteractionClass>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>BudgetPlanHeader</Name>
			<Table>BudgetPlanHeader</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BudgetingOrganization</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetPlanningProcess</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetPlanningStage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetPlanPreparer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetPlanPriority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InUseBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsHistorical</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Layout</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentBudgetPlanHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlanningUserGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Rank</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkflowStatus</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>BudgetPlanLineActiveView</Name>
			<Table>BudgetPlanLineActiveView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssetId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetClass</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetPlanHeader</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Comment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionName1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionName10</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionName11</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionName2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionName3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionName4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionName5</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionName6</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionName7</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionName8</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionName9</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionValue1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionValue10</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionValue11</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionValue2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionValue3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionValue4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionValue5</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionValue6</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionValue7</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionValue8</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionValue9</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsNewRequest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsRecurring</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Position</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PositionScenario</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjectId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProposedAsset</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProposedProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity10</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity11</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity12</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity13</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity14</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity15</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity16</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity17</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity18</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity19</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity20</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity21</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity22</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity23</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity24</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity25</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity26</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity27</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity28</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity29</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity30</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity31</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity32</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity33</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity34</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity35</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity36</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity5</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity6</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity7</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity8</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quantity9</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount10</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount11</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount12</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount13</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount14</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount15</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount16</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount17</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount18</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount19</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount20</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount21</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount22</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount23</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount24</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount25</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount26</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount27</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount28</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount29</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount30</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount31</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount32</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount33</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount34</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount35</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount36</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount5</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount6</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount7</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount8</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyAmount9</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCurrencyCode</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources>
				<AxFormReferencedDataSource>
					<Name>BudgetPlanProposedAsset</Name>
					<Table>BudgetPlanProposedAsset</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>Description</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Name</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Partition</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<JoinSource>BudgetPlanLineActiveView</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<JoinRelation>ProposedAsset</JoinRelation>
				</AxFormReferencedDataSource>
				<AxFormReferencedDataSource>
					<Name>BudgetPlanProposedProject</Name>
					<Table>BudgetPlanProposedProject</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>Description</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Name</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Partition</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<JoinSource>BudgetPlanLineActiveView</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<JoinRelation>ProposedProject</JoinRelation>
				</AxFormReferencedDataSource>
				<AxFormReferencedDataSource>
					<Name>PositionForecast</Name>
					<Table>HcmPositionForecast</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>CreatedBy</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CreatedDateTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ForecastStatus</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ModifiedBy</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>ModifiedDateTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Partition</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Position</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources>
						<AxFormReferencedDataSource>
							<Name>Position</Name>
							<Table>HcmPosition</Table>
							<Fields>
								<AxFormDataSourceField>
									<DataField>CreatedBy</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>CreatedDateTime</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>ModifiedBy</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>ModifiedDateTime</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>Partition</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>PositionId</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>RecId</DataField>
								</AxFormDataSourceField>
								<AxFormDataSourceField>
									<DataField>TableId</DataField>
								</AxFormDataSourceField>
							</Fields>
							<ReferencedDataSources />
							<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
							<JoinSource>PositionForecast</JoinSource>
							<LinkType>OuterJoin</LinkType>
							<JoinRelation>Position</JoinRelation>
						</AxFormReferencedDataSource>
					</ReferencedDataSources>
					<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
					<JoinSource>BudgetPlanLineActiveView</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<JoinRelation>PositionForecast</JoinRelation>
				</AxFormReferencedDataSource>
			</ReferencedDataSources>
			<JoinSource>BudgetPlanHeader</JoinSource>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Budget:BudgetPlanSingular</Caption>
		<DataSource xmlns="">BudgetPlanHeader</DataSource>
		<Pattern xmlns="">DetailsTransaction</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">DetailsFormTransaction</Style>
		<TitleDataSource xmlns="">BudgetPlanHeader</TitleDataSource>
		<WorkflowDataSource xmlns="">BudgetPlanHeader</WorkflowDataSource>
		<WorkflowType xmlns="">BudgetPlanReview</WorkflowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPaneHeader</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>HeaderHomeTab</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>MaintainGroup</Name>
								<ElementPosition>613566756</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>AttachButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@Budget:AssociateBudgetPlan</HelpText>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>BudgetPlanAttach</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Primary>Yes</Primary>
										<ShowShortCut>No</ShowShortCut>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ResetButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@GLS70466</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<ShowShortCut>No</ShowShortCut>
										<Text>@GLS70467</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS316703</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>NewGroup</Name>
								<ElementPosition>920350134</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>NewButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>BudgetPlanNew</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<OpenMode>New</OpenMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ChildButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>BudgetPlanChild</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<OpenMode>New</OpenMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CopyButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>BudgetPlanCopy</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<OpenMode>New</OpenMode>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS2055</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>MassUpdateGroup</Name>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonGroup</Type>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BudgetPlanMassUpdateTemplate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>BudgetPlanLineMassUpdateTemplate</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<Text>@DMF:ExportTemplate</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>BudgetPlanLineMassUpdate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataSource>BudgetPlanHeader</DataSource>
										<MenuItemName>BudgetPlanLineMassUpdate</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@SYS97333</Caption>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@GLS70070</Caption>
						<DataSource>BudgetPlanHeader</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ViewHierarchy</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>BudgetPlanHierarchyView</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<DataSource>BudgetPlanHeader</DataSource>
								<MenuItemName>BudgetPlanHierarchyView</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Organization</NormalImage>
								<OpenMode>View</OpenMode>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@SYS53654</Caption>
						<DataSource>BudgetPlanHeader</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>WorksheetGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>WorksheetButton</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@GLS70508</HelpText>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Big>Yes</Big>
								<MenuItemName>BudgetPlanWorksheet</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<MultiSelect>No</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<ShowShortCut>No</ShowShortCut>
								<Text>@GLS70227</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDropDialogButtonControl">
								<Name>JustificationDropDialog</Name>
								<Type>DropDialogButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>BudgetPlanHeader</DataSource>
								<MenuItemName>BudgetPlanJustificationDropDialog</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
						</Controls>
						<Caption>@GLS70227</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>BudgetPlanWorkflowDropDialogButtonGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDropDialogButtonControl">
								<Name>BudgetPlanWorkflowDropDialog</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>DropDialogButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>BudgetPlanHeader</DataSource>
								<MenuItemName>BudgetPlanWorkflowDropDialog</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Workflow</NormalImage>
							</AxFormControl>
						</Controls>
						<DataSource>BudgetPlanHeader</DataSource>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>BudgetPlanHeader</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationList</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>NavigationListQuickFilter</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>NavigationListGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>NavigationList_Name</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>NavigationListGrid</Name>
						<AllowEdit>No</AllowEdit>
						<Type>Grid</Type>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>NavigationList_DocumentNumber</Name>
								<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_NavigationList_DocumentNumber</HelpText>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>DocumentNumber</DataField>
								<DataSource>BudgetPlanHeader</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>NavigationList_Name</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>BudgetPlanHeader</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>NavigationList_BudgetPlanningStage</Name>
								<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_NavigationList_BudgetPlanningStage</HelpText>
								<Type>ReferenceGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<DataSource>BudgetPlanHeader</DataSource>
								<ReferenceField>BudgetPlanningStage</ReferenceField>
								<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
							</AxFormControl>
						</Controls>
						<DataSource>BudgetPlanHeader</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>MainTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageDetails</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TitleGroup</Name>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>HeaderTitle_DocumentNumName</Name>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>titleFields</DataMethod>
										<DataSource>BudgetPlanHeader</DataSource>
										<ShowLabel>No</ShowLabel>
										<Style>TitleField</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>EntityStatus</Name>
										<ExtendedStyle>entityStatus</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>HeaderDetails_BudgetPlanningProcess</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>780903144</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<PreviewPartRef>BudgetPlanTranslatedPreviewProcess</PreviewPartRef>
												<Skip>Yes</Skip>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>processName</DataMethod>
												<DataSource>BudgetPlanHeader</DataSource>
												<LookupButton>Never</LookupButton>
												<ShowLabel>No</ShowLabel>
												<ViewEditMode>View</ViewEditMode>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>HeaderDetails_BudgetingOrganization</Name>
												<AllowEdit>No</AllowEdit>
												<Skip>Yes</Skip>
												<Type>ReferenceGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>BudgetPlanHeader</DataSource>
												<ReferenceField>BudgetingOrganization</ReferenceField>
												<ReplacementFieldGroup>Name</ReplacementFieldGroup>
												<ShowLabel>No</ShowLabel>
												<ViewEditMode>View</ViewEditMode>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalRight</ArrangeMethod>
										<Breakable>No</Breakable>
										<FrameType>None</FrameType>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>DetailTitleContainer</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTabControl">
								<Name>HeaderLinePanelsTab</Name>
								<Type>Tab</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>LinesPanel</Name>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTabControl">
												<Name>LineViewTab</Name>
												<Type>Tab</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>LineViewHeaderDetails</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Pattern>FieldsFieldGroups</Pattern>
														<PatternVersion>1.1</PatternVersion>
														<Type>TabPage</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>BudgetPlanHeader_Name</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Name</DataField>
																<DataSource>BudgetPlanHeader</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormReferenceGroupControl">
																<Name>BudgetPlanHeader_ParentBudgetPlanHeader</Name>
																<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_BudgetPlanHeader_ParentBudgetPlanHeader</HelpText>
																<Type>ReferenceGroup</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls />
																<DataSource>BudgetPlanHeader</DataSource>
																<ReferenceField>ParentBudgetPlanHeader</ReferenceField>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormReferenceGroupControl">
																<Name>BudgetPlanHeader_BudgetPlanPreparer</Name>
																<Type>ReferenceGroup</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls />
																<DataSource>BudgetPlanHeader</DataSource>
																<ReferenceField>BudgetPlanPreparer</ReferenceField>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>BudgetPlanHeader_WorkflowAssignedUser</Name>
																<PreviewPartRef>BudgetPlanWorkflowApprovers</PreviewPartRef>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>displayAssignedWorkflowUserForCurrentHeader</DataMethod>
																<DataSource>BudgetPlanHeader</DataSource>
																<Label>@Budget:BudgetPlanWorkflowAssignedTo</Label>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>BudgetPlanHeader_PlanningUserGroup</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>PlanningUserGroup</DataField>
																<DataSource>BudgetPlanHeader</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>BudgetPlanHeader_BudgetPlanningStage</Name>
																<AllowEdit>No</AllowEdit>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>976128930</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_BudgetPlanHeader_BudgetPlanningStage</HelpText>
																<PreviewPartRef>BudgetPlanTranslatedPreviewStage</PreviewPartRef>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>stageName</DataMethod>
																<DataSource>BudgetPlanHeader</DataSource>
																<ViewEditMode>View</ViewEditMode>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>BudgetPlanHeader_BudgetPlanPriority</Name>
																<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_BudgetPlanHeader_BudgetPlanPriority</HelpText>
																<PreviewPartRef>BudgetPlanTranslatedPreviewPriority</PreviewPartRef>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>editBudgetPlanPriorityName</DataMethod>
																<DataSource>BudgetPlanHeader</DataSource>
																<PresenceDataField>BudgetPlanPriority</PresenceDataField>
																<PresenceDataSource>BudgetPlanHeader</PresenceDataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormIntegerControl">
																<Name>BudgetPlanHeader_Rank</Name>
																<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_BudgetPlanHeader_Rank</HelpText>
																<Type>Integer</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Rank</DataField>
																<DataSource>BudgetPlanHeader</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>BudgetPlanHeader_Currency</Name>
																<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_BudgetPlanHeader_Currency</HelpText>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Currency</DataField>
																<DataSource>BudgetPlanHeader</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>BudgetPlanHeader_WorkflowStatus</Name>
																<Type>ComboBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>WorkflowStatus</DataField>
																<DataSource>BudgetPlanHeader</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>BudgetPlanHeader_InUseBy</Name>
																<AllowEdit>No</AllowEdit>
																<AutoDeclaration>Yes</AutoDeclaration>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>InUseBy</DataField>
																<DataSource>BudgetPlanHeader</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCheckBoxControl">
																<Name>BudgetPlanHeader_EditInUseBy</Name>
																<AllowEdit>No</AllowEdit>
																<AutoDeclaration>Yes</AutoDeclaration>
																<FilterExpression>%1</FilterExpression>
																<Type>CheckBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>editIsInUse</DataMethod>
																<Label>@SYS10653</Label>
															</AxFormControl>
														</Controls>
														<ColumnsMode>Fill</ColumnsMode>
														<Caption>@Budget:BudgetPlanHeaderCaption</Caption>
														<DataSource>BudgetPlanHeader</DataSource>
														<FastTabExpanded>Yes</FastTabExpanded>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>LineViewLines</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<HeightMode>SizeToAvailable</HeightMode>
														<Type>TabPage</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormActionPaneControl">
																<Name>LineViewLinesToolbar</Name>
																<Type>ActionPane</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormActionPaneTabControl">
																		<Name>ActionPaneTab</Name>
																		<Type>ActionPaneTab</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls />
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonGroupControl">
																		<Name>LineRecordActions</Name>
																		<Type>ButtonGroup</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls>
																			<AxFormControl xmlns=""
																				i:type="AxFormCommandButtonControl">
																				<Name>AddLine</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<Type>CommandButton</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<Command>New</Command>
																				<NormalImage>Add</NormalImage>
																				<Text>@Budget:AddLine</Text>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormCommandButtonControl">
																				<Name>RemoveLine</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<Type>CommandButton</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<Command>DeleteRecord</Command>
																				<NormalImage>Delete</NormalImage>
																				<Text>@Budget:Remove</Text>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormMenuFunctionButtonControl">
																				<Name>AllocateBudget</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<Type>MenuFunctionButton</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<MenuItemName>BudgetPlanAllocate</MenuItemName>
																				<MenuItemType>Action</MenuItemType>
																				<MultiSelect>Yes</MultiSelect>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormMenuFunctionButtonControl">
																				<Name>BudgetPlanSetLayout</Name>
																				<AutoDeclaration>Yes</AutoDeclaration>
																				<Type>MenuFunctionButton</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<DataSource>BudgetPlanHeader</DataSource>
																				<MenuItemName>BudgetPlanSetLayout</MenuItemName>
																				<NeedsRecord>Yes</NeedsRecord>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormMenuButtonControl">
																				<Name>BudgetPlanGenerateAddTo</Name>
																				<Type>MenuButton</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<Controls>
																					<AxFormControl xmlns=""
																						i:type="AxFormMenuFunctionButtonControl">
																						<Name>BudgetPlanGenerateFromGeneralLedger</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>MenuFunctionButton</Type>
																						<FormControlExtension
																							i:nil="true" />
																						<MenuItemName>BudgetPlanGenerateFromGeneralLedger</MenuItemName>
																						<MenuItemType>Action</MenuItemType>
																						<Text>@Budget:BudgetPlan_AddFromGeneralLedger</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormMenuFunctionButtonControl">
																						<Name>BudgetPlanGenerateBudgetPlan</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>MenuFunctionButton</Type>
																						<FormControlExtension
																							i:nil="true" />
																						<MenuItemName>BudgetPlanGenerateBudgetPlan</MenuItemName>
																						<MenuItemType>Action</MenuItemType>
																						<Text>@Budget:BudgetPlanSingular</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormMenuFunctionButtonControl">
																						<Name>BudgetPlanGenerateAsset</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>MenuFunctionButton</Type>
																						<FormControlExtension
																							i:nil="true" />
																						<MenuItemName>BudgetPlanGenerateAsset</MenuItemName>
																						<MenuItemType>Action</MenuItemType>
																						<Text>@Budget:BudgetPlan_AddFromFixedAsset</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormMenuFunctionButtonControl">
																						<Name>AddPositions</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>MenuFunctionButton</Type>
																						<FormControlExtension
																							i:nil="true" />
																						<DataSource>BudgetPlanHeader</DataSource>
																						<MenuItemName>BudgetPlanHcmSelect</MenuItemName>
																						<NeedsRecord>Yes</NeedsRecord>
																						<Text>@Budget:BudgetPlan_AddFromPosition</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormMenuFunctionButtonControl">
																						<Name>BudgetPlanGenerateProjectForecast</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>MenuFunctionButton</Type>
																						<FormControlExtension
																							i:nil="true" />
																						<MenuItemName>BudgetPlanGenerateProjectForecast</MenuItemName>
																						<MenuItemType>Action</MenuItemType>
																						<Text>@Budget:BudgetPlan_AddFromProjectForecasts</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormMenuFunctionButtonControl">
																						<Name>BudgetPlanGenerateDemandForecast</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>MenuFunctionButton</Type>
																						<FormControlExtension
																							i:nil="true" />
																						<MenuItemName>BudgetPlanGenerateDemandForecast</MenuItemName>
																						<MenuItemType>Action</MenuItemType>
																						<Text>@Budget:BudgetPlan_AddFromDemandForecasts</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormMenuFunctionButtonControl">
																						<Name>BudgetPlanGenerateSupplyForecast</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>MenuFunctionButton</Type>
																						<FormControlExtension
																							i:nil="true" />
																						<MenuItemName>BudgetPlanGenerateSupplyForecast</MenuItemName>
																						<MenuItemType>Action</MenuItemType>
																						<Text>@Budget:BudgetPlan_AddFromSupplyForecasts</Text>
																					</AxFormControl>
																					<AxFormControl xmlns=""
																						i:type="AxFormMenuFunctionButtonControl">
																						<Name>BudgetPlanGenerateBudgetTransaction</Name>
																						<AutoDeclaration>Yes</AutoDeclaration>
																						<Type>MenuFunctionButton</Type>
																						<FormControlExtension
																							i:nil="true" />
																						<MenuItemName>BudgetPlanGenerateBudgetTransaction</MenuItemName>
																						<MenuItemType>Action</MenuItemType>
																						<Text>@Budget:BudgetPlan_AddFromBudgetRegisterEntry</Text>
																					</AxFormControl>
																				</Controls>
																				<Text>@Budget:BudgetPlan_AddFrom</Text>
																			</AxFormControl>
																			<AxFormControl xmlns=""
																				i:type="AxFormMenuFunctionButtonControl">
																				<Name>BudgetRegisterEntryFromBudgetPlan</Name>
																				<Type>MenuFunctionButton</Type>
																				<FormControlExtension
																					i:nil="true" />
																				<MenuItemName>BudgetRegisterEntryFromBudgetPlan</MenuItemName>
																				<MenuItemType>Action</MenuItemType>
																				<Text>@Budget:BudgetPlan_AddToBudgetRegisterEntry</Text>
																			</AxFormControl>
																		</Controls>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																</Controls>
																<Style>Strip</Style>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGridControl">
																<Name>LineViewLinesGrid</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<Type>Grid</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionValue1</Name>
																		<Type>String</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionValue1</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionName1</Name>
																		<AllowEdit>No</AllowEdit>
																		<Skip>Yes</Skip>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionName1</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<Label>@Budget:DescriptionColumnHeading</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionValue2</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionValue2</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionName2</Name>
																		<AllowEdit>No</AllowEdit>
																		<Skip>Yes</Skip>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionName2</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<Label>@Budget:DescriptionColumnHeading</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionValue3</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionValue3</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionName3</Name>
																		<AllowEdit>No</AllowEdit>
																		<Skip>Yes</Skip>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionName3</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<Label>@Budget:DescriptionColumnHeading</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionValue4</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionValue4</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionName4</Name>
																		<AllowEdit>No</AllowEdit>
																		<Skip>Yes</Skip>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionName4</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<Label>@Budget:DescriptionColumnHeading</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionValue5</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionValue5</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionName5</Name>
																		<AllowEdit>No</AllowEdit>
																		<Skip>Yes</Skip>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionName5</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<Label>@Budget:DescriptionColumnHeading</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionValue6</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionValue6</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionName6</Name>
																		<AllowEdit>No</AllowEdit>
																		<Skip>Yes</Skip>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionName6</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<Label>@Budget:DescriptionColumnHeading</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionValue7</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionValue7</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionName7</Name>
																		<AllowEdit>No</AllowEdit>
																		<Skip>Yes</Skip>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionName7</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<Label>@Budget:DescriptionColumnHeading</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionValue8</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionValue8</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionName8</Name>
																		<AllowEdit>No</AllowEdit>
																		<Skip>Yes</Skip>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionName8</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<Label>@Budget:DescriptionColumnHeading</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionValue9</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionValue9</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionName9</Name>
																		<AllowEdit>No</AllowEdit>
																		<Skip>Yes</Skip>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionName9</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<Label>@Budget:DescriptionColumnHeading</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionValue10</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionValue10</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionName10</Name>
																		<AllowEdit>No</AllowEdit>
																		<Skip>Yes</Skip>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionName10</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<Label>@Budget:DescriptionColumnHeading</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionValue11</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionValue11</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>DimensionName11</Name>
																		<AllowEdit>No</AllowEdit>
																		<Skip>Yes</Skip>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>DimensionName11</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<Label>@Budget:DescriptionColumnHeading</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>TransactionCurrencyCode</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyCode</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>AssetId</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>AssetId</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>AssetIdDescription</Name>
																		<Type>String</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataMethod>displayAssetName</DataMethod>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormComboBoxControl">
																		<Name>BudgetClass</Name>
																		<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_BudgetClass</HelpText>
																		<Type>ComboBox</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>BudgetClass</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<Items />
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>Comment</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Comment</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormCheckBoxControl">
																		<Name>IsNewRequest</Name>
																		<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_IsNewRequest</HelpText>
																		<Type>CheckBox</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>IsNewRequest</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormCheckBoxControl">
																		<Name>IsRecurring</Name>
																		<Type>CheckBox</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>IsRecurring</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormReferenceGroupControl">
																		<Name>Position</Name>
																		<Type>ReferenceGroup</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls />
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<ReferenceField>Position</ReferenceField>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>PositionDescription</Name>
																		<Type>String</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataMethod>description</DataMethod>
																		<DataSource>Position</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>PositionWorkerName</Name>
																		<Type>String</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataMethod>worker</DataMethod>
																		<DataSource>Position</DataSource>
																		<Label>@SYS305602</Label>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>ProjectId</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>ProjectId</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>ProjectIdDescription</Name>
																		<Type>String</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<DataMethod>displayProjectName</DataMethod>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormReferenceGroupControl">
																		<Name>ProposedAsset</Name>
																		<Type>ReferenceGroup</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls />
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<ReferenceField>ProposedAsset</ReferenceField>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>ProposedAssetDescription</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Description</DataField>
																		<DataSource>BudgetPlanProposedAsset</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormReferenceGroupControl">
																		<Name>ProposedProject</Name>
																		<Type>ReferenceGroup</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls />
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																		<ReferenceField>ProposedProject</ReferenceField>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>ProposedProjectDescription</Name>
																		<Type>String</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Description</DataField>
																		<DataSource>BudgetPlanProposedProject</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount1</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount1</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount2</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount2</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount3</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount3</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount4</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount4</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount5</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount5</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount6</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount6</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount7</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount7</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount8</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount8</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount9</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount9</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount10</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount10</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount11</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount11</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount12</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount12</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount13</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount13</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount14</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount14</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount15</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount15</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount16</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount16</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount17</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount17</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount18</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount18</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount19</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount19</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount20</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount20</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount21</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount21</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount22</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount22</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount23</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount23</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount24</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount24</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount25</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount25</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount26</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount26</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount27</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount27</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount28</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount28</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount29</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount29</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount30</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount30</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount31</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount31</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount32</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount32</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount33</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount33</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount34</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount34</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount35</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount35</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>TransactionCurrencyAmount36</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TransactionCurrencyAmount36</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity1</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity1</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity2</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity2</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity3</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity3</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity4</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity4</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity5</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity5</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity6</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity6</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity7</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity7</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity8</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity8</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity9</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity9</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity10</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity10</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity11</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity11</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity12</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity12</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity13</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity13</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity14</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity14</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity15</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity15</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity16</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity16</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity17</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity17</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity18</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity18</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity19</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity19</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity20</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity20</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity21</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity21</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity22</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity22</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity23</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity23</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity24</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity24</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity25</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity25</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity26</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity26</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity27</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity27</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity28</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity28</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity29</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity29</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity30</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity30</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity31</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity31</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity32</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity32</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity33</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity33</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity34</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity34</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity35</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity35</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormRealControl">
																		<Name>Quantity36</Name>
																		<PreviewPartRef>BudgetPlanScenarioDetail</PreviewPartRef>
																		<Type>Real</Type>
																		<Visible>No</Visible>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Quantity36</DataField>
																		<DataSource>BudgetPlanLineActiveView</DataSource>
																	</AxFormControl>
																</Controls>
																<DataSource>BudgetPlanLineActiveView</DataSource>
																<Style>Tabular</Style>
																<VisibleRows>5</VisibleRows>
																<VisibleRowsMode>Fixed</VisibleRowsMode>
															</AxFormControl>
														</Controls>
														<Caption>@Budget:BudgetPlanLinesCaption</Caption>
														<FastTabExpanded>Always</FastTabExpanded>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>LineViewLineDetails</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>TabPage</Type>
														<Visible>No</Visible>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormTabControl">
																<Name>LineDetailsTab</Name>
																<Type>Tab</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormTabPageControl">
																		<Name>LineDetailsTabPage</Name>
																		<Pattern>FieldsFieldGroups</Pattern>
																		<PatternVersion>1.1</PatternVersion>
																		<Type>TabPage</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<Controls />
																		<ColumnsMode>Fill</ColumnsMode>
																		<Caption>@Budget:BudgetPlanLineDetailsCaption</Caption>
																	</AxFormControl>
																</Controls>
															</AxFormControl>
														</Controls>
														<Caption>@Budget:BudgetPlanLineDetailsCaption</Caption>
													</AxFormControl>
												</Controls>
												<Style>FastTabs</Style>
											</AxFormControl>
										</Controls>
										<PanelStyle>DetailsLine</PanelStyle>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>HeaderPanel</Name>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTabControl">
												<Name>HeaderDetailsTab</Name>
												<Type>Tab</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>HeaderDetailsTabPage</Name>
														<Pattern>FieldsFieldGroups</Pattern>
														<PatternVersion>1.1</PatternVersion>
														<Type>TabPage</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>HeaderDetails_Name</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Name</DataField>
																<DataSource>BudgetPlanHeader</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormReferenceGroupControl">
																<Name>HeaderDetails_ParentBudgetPlanHeader</Name>
																<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_HeaderDetails_ParentBudgetPlanHeader</HelpText>
																<Type>ReferenceGroup</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls />
																<DataSource>BudgetPlanHeader</DataSource>
																<ReferenceField>ParentBudgetPlanHeader</ReferenceField>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormReferenceGroupControl">
																<Name>HeaderDetails_BudgetPlanPreparer</Name>
																<Type>ReferenceGroup</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls />
																<DataSource>BudgetPlanHeader</DataSource>
																<ReferenceField>BudgetPlanPreparer</ReferenceField>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>HeaderDetails_WorkflowAssignedUser</Name>
																<PreviewPartRef>BudgetPlanWorkflowApprovers</PreviewPartRef>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>displayAssignedWorkflowUserForCurrentHeader</DataMethod>
																<DataSource>BudgetPlanHeader</DataSource>
																<Label>@Budget:BudgetPlanWorkflowAssignedTo</Label>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>HeaderDetails_PlanningUserGroup</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>PlanningUserGroup</DataField>
																<DataSource>BudgetPlanHeader</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>HeaderDetails_BudgetPlanningStage</Name>
																<AllowEdit>No</AllowEdit>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>976128930</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_HeaderDetails_BudgetPlanningStage</HelpText>
																<PreviewPartRef>BudgetPlanTranslatedPreviewStage</PreviewPartRef>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>stageName</DataMethod>
																<DataSource>BudgetPlanHeader</DataSource>
																<ViewEditMode>View</ViewEditMode>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>HeaderDetails_BudgetPlanPriority</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1757032074</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_HeaderDetails_BudgetPlanPriority</HelpText>
																<PreviewPartRef>BudgetPlanTranslatedPreviewPriority</PreviewPartRef>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>editBudgetPlanPriorityName</DataMethod>
																<DataSource>BudgetPlanHeader</DataSource>
																<LookupButton>Always</LookupButton>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormIntegerControl">
																<Name>HeaderDetails_Rank</Name>
																<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_HeaderDetails_Rank</HelpText>
																<Type>Integer</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Rank</DataField>
																<DataSource>BudgetPlanHeader</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>HeaderDetails_Currency</Name>
																<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_HeaderDetails_Currency</HelpText>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Currency</DataField>
																<DataSource>BudgetPlanHeader</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>HeaderDetails_WorkflowStatus</Name>
																<AllowEdit>No</AllowEdit>
																<Type>ComboBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>WorkflowStatus</DataField>
																<DataSource>BudgetPlanHeader</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>HeaderDetails_InUseBy</Name>
																<AllowEdit>No</AllowEdit>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>InUseBy</DataField>
																<DataSource>BudgetPlanHeader</DataSource>
															</AxFormControl>
														</Controls>
														<ColumnsMode>Fill</ColumnsMode>
														<Caption>@Budget:BudgetPlanHeaderCaption</Caption>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormTabPageControl">
														<Name>HeaderDetailsNarrative</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Pattern>Custom</Pattern>
														<Type>TabPage</Type>
														<Visible>No</Visible>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>NarrativeDescriptionGroup</Name>
																<Type>Group</Type>
																<WidthMode>SizeToAvailable</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl>
																		<Name>Description</Name>
																		<FormControlExtension>
																			<Name>HTMLEditor</Name>
																			<ExtensionComponents />
																			<ExtensionProperties>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataSourceName</Name>
																					<Type>String</Type>
																					<Value>BudgetPlanHeader</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataFieldName</Name>
																					<Type>String</Type>
																					<Value>Description</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataMethodName</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																			</ExtensionProperties>
																		</FormControlExtension>
																	</AxFormControl>
																</Controls>
																<Caption>@Budget:DescriptionColumnHeading</Caption>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormGroupControl">
																<Name>RevenueSummaryGroup</Name>
																<Type>Group</Type>
																<WidthMode>SizeToAvailable</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl>
																		<Name>RevenueSummary</Name>
																		<FormControlExtension>
																			<Name>HTMLEditor</Name>
																			<ExtensionComponents />
																			<ExtensionProperties>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataSourceName</Name>
																					<Type>String</Type>
																					<Value>BudgetPlanHeader</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataFieldName</Name>
																					<Type>String</Type>
																					<Value>RevenueSummary</Value>
																				</AxFormControlExtensionProperty>
																				<AxFormControlExtensionProperty>
																					<Name>parmDataMethodName</Name>
																					<Type>String</Type>
																				</AxFormControlExtensionProperty>
																			</ExtensionProperties>
																		</FormControlExtension>
																	</AxFormControl>
																</Controls>
																<Caption>@Budget:BudgetPlanning_RevenueSummary</Caption>
															</AxFormControl>
														</Controls>
														<Caption>@Budget:BudgetPlanning_Narrative</Caption>
														<FastTabExpanded>No</FastTabExpanded>
													</AxFormControl>
												</Controls>
												<Style>FastTabs</Style>
											</AxFormControl>
										</Controls>
										<PanelStyle>DetailsHeader</PanelStyle>
									</AxFormControl>
								</Controls>
								<ShowTabs>No</ShowTabs>
							</AxFormControl>
						</Controls>
						<PanelStyle>Details</PanelStyle>
						<Style>DetailsFormDetails</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageGrid</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GridGroup</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Pattern>CustomAndQuickFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>PlanListQuickFilter</Name>
										<FormControlExtension>
											<Name>QuickFilterControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>targetControlName</Name>
													<Type>String</Type>
													<Value>HeaderGrid</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>defaultColumnName</Name>
													<Type>String</Type>
													<Value>EditInGridName</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>placeholderText</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>HeaderGrid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>WorkflowStatus</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayWorkflowStatusImage</DataMethod>
										<DataSource>BudgetPlanHeader</DataSource>
										<Label>@SYS106702</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EditInGridDocumentNumber</Name>
										<ElementPosition>390451572</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_EditInGridDocumentNumber</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DocumentNumber</DataField>
										<DataSource>BudgetPlanHeader</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EditInGridName</Name>
										<ElementPosition>585677358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>BudgetPlanHeader</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EditInGridBudgetPlanningProcess</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>780903144</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<PreviewPartRef>BudgetPlanTranslatedPreviewProcess</PreviewPartRef>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>processName</DataMethod>
										<DataSource>BudgetPlanHeader</DataSource>
										<LookupButton>Always</LookupButton>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EditInGridBudgetPlanningStage</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>976128930</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_EditInGridBudgetPlanningStage</HelpText>
										<PreviewPartRef>BudgetPlanTranslatedPreviewStage</PreviewPartRef>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>stageName</DataMethod>
										<DataSource>BudgetPlanHeader</DataSource>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>EditInGridBudgetPlanPreparer</Name>
										<ElementPosition>1171354716</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>EditInGridBudgetPlanPreparer_DirPerson_FK_Name</Name>
												<DataRelationPath>BudgetPlanPreparer.DirPerson_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>BudgetPlanHeader</DataSource>
										<ReferenceField>BudgetPlanPreparer</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EditInGridWorkflowAssignedUser</Name>
										<PreviewPartRef>BudgetPlanWorkflowApprovers</PreviewPartRef>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayAssignedWorkflowUserForCurrentHeader</DataMethod>
										<DataSource>BudgetPlanHeader</DataSource>
										<Label>@Budget:BudgetPlanWorkflowAssignedTo</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>EditInGridBudgetingOrganization</Name>
										<ElementPosition>1366580502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>EditInGridBudgetingOrganization_Name</Name>
												<DataRelationPath>BudgetingOrganization</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>BudgetPlanHeader</DataSource>
										<ReferenceField>BudgetingOrganization</ReferenceField>
										<ReplacementFieldGroup>Name</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>EditInGridWorkflowStatus</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1561806288</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>WorkflowStatus</DataField>
										<DataSource>BudgetPlanHeader</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EditInGridBudgetPlanPriority</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1757032074</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_EditInGridBudgetPlanPriority</HelpText>
										<PreviewPartRef>BudgetPlanTranslatedPreviewPriority</PreviewPartRef>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editBudgetPlanPriorityName</DataMethod>
										<DataSource>BudgetPlanHeader</DataSource>
										<LookupButton>Always</LookupButton>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>EditInGridRank</Name>
										<ElementPosition>1952257860</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_Budgeting:BudgetPlan_EditInGridRank</HelpText>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Rank</DataField>
										<DataSource>BudgetPlanHeader</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>EditInGridInUseBy</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayInUseImage</DataMethod>
										<DataSource>BudgetPlanHeader</DataSource>
										<Label>@SYS10653</Label>
									</AxFormControl>
								</Controls>
								<DataSource>BudgetPlanHeader</DataSource>
								<DefaultAction>HeaderGridDefaultAction</DefaultAction>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>HeaderGridDefaultAction</Name>
								<Type>CommandButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Command>DetailsView</Command>
								<DefaultButton>Yes</DefaultButton>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
						</Controls>
						<PanelStyle>Grid</PanelStyle>
						<Scrollbars>Auto</Scrollbars>
						<Style>DetailsFormGrid</Style>
					</AxFormControl>
				</Controls>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>