<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CustPaymByLine</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class CustPaymByLine extends FormRun
{
    #ISOCountryRegionCodes

    LedgerJournalTrans callingLedgerJournalTrans;
    CustTrans callingCustTrans;
    CustTransOpen callingCustTransOpen;
    SpecTrans callingSpecTrans;

    FormRun callerForm;

    CustOpenTransLineManager custOpenTransLineManager;
    CustVendOpenTransManager localCustVendOpenTransManager;
    CustPaymSettlementManager localCustPaymSettlementManager;
    SpecTransManager localSpecTransManager;

}
]]></Source>
			</Method>
			<Method>
				<Name>executeCallParentFormUpdateSettleAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the parent form by new settlement amount.
    /// </summary>
    /// <param name="_newSettlementAmount">
    /// The new amount to settle.
    /// </param>
    public void executeCallParentFormUpdateSettleAmount(AmountCur _newSettlementAmount )
    {
        CashDiscAmount cashDiscAmountToTake;
        CashDiscAmount lineCashDiscAmountToTake;
        AmountCur unmarkedAmountRemaining;

        lineCashDiscAmountToTake = custOpenTransLineManager.findTotalCashDiscountAmountForTransLine();
        cashDiscAmountToTake = custOpenTransLineManager.getCashDiscountAmountMarkedToBeTaken();
        unmarkedAmountRemaining = localSpecTransManager.findUnmarkedAmountForRef(
            callingCustTransOpen.AmountCur,
            callingCustTransOpen.company(),
            tableNum(CustTransOpen),
            callingCustTransOpen.RecId);

        if (callerForm.name() == formStr(CustOpenTrans)
            || callerForm.name() == formStr(CustOpenTrans_RU))
        {
            if (custOpenTransLineManager.isTransFullySettled())
            {
                _newSettlementAmount = unmarkedAmountRemaining - cashDiscAmountToTake;

                localCustVendOpenTransManager.updateSettleAmount(callingCustTransOpen, _newSettlementAmount);
            }
            else
            {
                localCustVendOpenTransManager.updateAmounts(callingCustTransOpen,
                    _newSettlementAmount,
                    _newSettlementAmount,
                    lineCashDiscAmountToTake,
                    false);
            }
        }
        else if (callerForm.name() == formStr(CustPaymEntry))
        {
            if (custOpenTransLineManager.isTransFullySettled())
            {
                _newSettlementAmount = unmarkedAmountRemaining - cashDiscAmountToTake;

                localCustPaymSettlementManager.updateSettleAmount(callingCustTransOpen, _newSettlementAmount);
            }
            else
            {
                localCustPaymSettlementManager.updateSettleAmountForInvoiceLines(callingCustTransOpen, _newSettlementAmount, lineCashDiscAmountToTake);
            }
        }
        else if (callerForm.name() == formStr(LedgerJournalTransCustPaym))
        {
            // settlement amount is greater than invoice settlement amount.
            if ((_newSettlementAmount > (unmarkedAmountRemaining - cashDiscAmountToTake))
                || (cashDiscAmountToTake < lineCashDiscAmountToTake))
            {
                _newSettlementAmount = unmarkedAmountRemaining - cashDiscAmountToTake;

                localSpecTransManager.updateSettleBalanceAndDisc(
                    callingCustTransOpen.company(),
                    tableNum(CustTransOpen),
                    callingCustTransOpen.RecId,
                    _newSettlementAmount,
                    cashDiscAmountToTake,
                    callingLedgerJournalTrans.TransDate);
            }
            else
            {
                localSpecTransManager.updateSettleBalanceAndDisc(
                    callingCustTransOpen.company(),
                    tableNum(CustTransOpen),
                    callingCustTransOpen.RecId,
                    _newSettlementAmount,
                    lineCashDiscAmountToTake,
                    callingLedgerJournalTrans.TransDate);
            }
        }

        custOpenTransLineManager.resetMarkedTotals();
        custTransOpenLine_ds.research(true);

        element.updatedDesignDynamic();
        element.updateTotalSettleAmountCur();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs one-time form initialization before it opens.
    /// </summary>
    public void init()
    {
        CustTable custTable;
        CashDiscAmount cashDiscAmount;
        DiscGraceDays foundGraceDays = 0;
        Common originator;

        callerForm = element.args().caller();
        if (callerForm is CustPaymISettlementAmountCallback)
        {
            if (callerForm.name() == formStr(LedgerJournalTransCustPaym))
            {
                callingLedgerJournalTrans = this.args().record();
                callingCustTransOpen = CustTransOpen::find(callingLedgerJournalTrans.MarkedInvoiceRecId);
                localSpecTransManager = SpecTransManager::newFromSpec(callingLedgerJournalTrans, true);
                custOpenTransLineManager = CustOpenTransLineManager::construct(callingLedgerJournalTrans.MarkedInvoiceRecId, callingLedgerJournalTrans);

                foundGraceDays = CustPaymModeTable::discGraceDays(callingLedgerJournalTrans.PaymMode);
                cashDiscAmount = CustTransCashDisc::findByUseCashDisc(
                    tableNum(CustTransOpen),
                    callingCustTransOpen.RecId,
                    callingCustTransOpen.UseCashDisc,
                    callingLedgerJournalTrans.TransDate,
                    foundGraceDays).CashDiscAmount;
            }
            else
            {
                callingCustTransOpen = this.args().record();

                if (callerForm.name() == formStr(CustOpenTrans)
                    || callerForm.name() == formStr(CustOpenTrans_RU))
                {
                    localCustVendOpenTransManager = this.args().parmObject();
                    localSpecTransManager = localCustVendOpenTransManager.parmSpecTransManager();
                    cashDiscAmount = localCustVendOpenTransManager.findApplicableCustVendTransCashDisc(callingCustTransOpen).CashDiscAmount;
                }
                else
                {
                    localCustPaymSettlementManager = this.args().parmObject();
                    localSpecTransManager = localCustPaymSettlementManager.parmSpecTransMgr();
                    cashDiscAmount = localCustPaymSettlementManager.findCashDisc(callingCustTransOpen).CashDiscAmount;
                }
            }

            callingSpecTrans = localSpecTransManager.findByRef(callingCustTransOpen.company(), tableNum(CustTransOpen), callingCustTransOpen.RecId);

            switch (callingSpecTrans.SpecTableId)
            {
                case tableNum(LedgerJournalTrans):
                    // CallingSpecTrans.SpecCompany is the data area id of the ledger trans record, so look up using
                    // data area as opposed to calling findByRef which uses the ledgerJournalTrans.Company field instead
                    callingLedgerJournalTrans = LedgerJournalTrans::findByRefAndDataArea(callingSpecTrans.SpecCompany, callingSpecTrans.SpecRecId, false);
                    custOpenTransLineManager = CustOpenTransLineManager::construct(callingCustTransOpen.RecId, callingLedgerJournalTrans);
                    break;

                case tableNum(CustTable):
                    custTable = CustTable::findByRef(callingSpecTrans.SpecCompany, callingSpecTrans.SpecRecId, false);
                    custOpenTransLineManager = CustOpenTransLineManager::construct(callingCustTransOpen.RecId, custTable);
                    break;

                case tableNum(CustInvoiceTable):
                    changecompany(callingSpecTrans.SpecCompany)
                    {
                        originator = CustInvoiceTable::findRecId(callingSpecTrans.SpecRecId, false);
                    }
                    custOpenTransLineManager = CustOpenTransLineManager::construct(callingCustTransOpen.RecId, originator);
                    break;

                case tableNum(SalesTable):
                    changecompany(callingSpecTrans.SpecCompany)
                    {
                        originator = SalesTable::findRecId(callingSpecTrans.SpecRecId, false);
                    }
                    custOpenTransLineManager = CustOpenTransLineManager::construct(callingCustTransOpen.RecId, originator);
                    break;

                default:
                    Debug::assert(false);
                    break;
            }

            custOpenTransLineManager.parmCashDiscAmountToTake(callingCustTransOpen.getCashDiscAmountToTake(cashDiscAmount));

            super();

            // <GIN>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
               && TaxWithholdParameters_IN::find())
            {
                element.setVisible_IN();
            }
            // </GIN>
            custTransOpen_ds.executeQuery();

            custAccountName.text(CustTable::find(CustTrans::findByCompany(callingCustTransOpen.company(), callingCustTransOpen.RefRecId).AccountNum).name());
        }
        else
        {
            throw error(Error::missingFormActiveBuffer(formStr(CustPaymByLine)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        this.wait(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible_IN</Name>
				<Source><![CDATA[
    public void setVisible_IN()
    {
        boolean isVisible;

        amountCur_IN.visible(isVisible);
        isVisible = (callingCustTransOpen.TaxWithholdAmountOrigin_IN != 0);
        custTransOpen_AmountCur.visible(!isVisible);
        amountCur_IN.visible(isVisible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatedDesignDynamic</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the controls editing behaviour.
    /// </summary>
    public void updatedDesignDynamic()
    {
        if (custOpenTransLineManager.isTransMarkedLine(custTransOpenLine) == NoYes::No)
        {
            settleAmountCur.allowEdit(false);
            isMarkedForSettlement.allowEdit(true);
        }
        else
        {
            if (custTransOpenLine.AmountCur > 0)
            {
                //can mark and edit the +ve line
                isMarkedForSettlement.allowEdit(true);
                settleAmountCur.allowEdit(true);
            }
            else
            {
                //can not mark or edit a -ve line
                isMarkedForSettlement.allowEdit(false);
                settleAmountCur.allowEdit(false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTotalSettleAmountCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the total amount to settle value on the control.
    /// </summary>
    public void updateTotalSettleAmountCur()
    {
        totalSettlePaymAmountCur.realValue(custOpenTransLineManager.getMarkedTotal());
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();

        CustPaymISettlementAmountCallback caller = callerForm as CustPaymISettlementAmountCallback;

        if (caller)
        {
            caller.updateForNewSettlementAmount(custOpenTransLineManager.getMarkedTotal());
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>CustTransOpen</Name>
				<Methods>
					<Method>
						<Name>displayDiscToTake</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the total cash discount amount to take on the transaction.
        /// </summary>
        /// <param name="_custTransOpen">
        /// The <c>CustTransOpen</c> record for finding specific <c>SpecTrans</c> record.
        /// </param>
        /// <returns>
        /// The total cash discount amount to take on the transaction.
        /// </returns>
        public display CashDiscAmount displayDiscToTake(CustTransOpen _custTransOpen)
        {
            CashDiscAmount cashDiscToTake;
            SpecTrans specTrans;

            specTrans = localSpecTransManager.findByRef(_custTransOpen.company(), tableNum(CustTransOpen), _custTransOpen.RecId);

            if (specTrans)
            {
                cashDiscToTake = specTrans.CashDiscToTake;
            }

            return cashDiscToTake;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            custTransOpenLine_ds.query().dataSourceTable(tableNum(CustTransOpenLine)).addRange(fieldNum(CustTransOpenLine, CustTransOpen)).value(queryValue(callingCustTransOpen.RecId));
            custTransOpenLine_ds.query().dataSourceTable(tableNum(CustTransOpenLine)).addOrderByField(fieldNum(CustTransOpenLine, CustInvoiceLineIdRef), SortOrder::Ascending);

            super();

            element.updateTotalSettleAmountCur();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>CustTransOpenLine</Name>
				<Methods>
					<Method>
						<Name>displayLineAmount</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the orginal invoice line amount.
        /// </summary>
        /// <param name="_custTransOpenLine">
        /// The <c>CustTransOpenLine</c> record.
        /// </param>
        /// <returns>
        /// The amount of invoice line.
        /// </returns>
        public display AmountCur displayLineAmount(CustTransOpenLine _custTransOpenLine)
        {
            return custOpenTransLineManager.getOrigLineAmount(_custTransOpenLine);
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayLineDescription</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the invoice line description.
        /// </summary>
        /// <param name="_custTransOpenLine">
        /// The <c>CustTransOpenLine</c> record.
        /// </param>
        /// <returns>
        /// The description for invoice line.
        /// </returns>
        public display Description displayLineDescription(CustTransOpenLine _custTransOpenLine)
        {
            return custOpenTransLineManager.getLineDescription(_custTransOpenLine);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (ret)
            {
                element.updatedDesignDynamic();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayDiscToTakeAmountOnLine</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the cash discount amount to take on invoice line.
        /// </summary>
        /// <param name="_custTransOpenLine">
        /// The <c>CustTransOpenLine</c> record.
        /// </param>
        /// <returns>
        /// The invoice line cash discount amount to take.
        /// </returns>
        public display AmountCur displayDiscToTakeAmountOnLine(CustTransOpenLine _custTransOpenLine)
        {
            return custOpenTransLineManager.getCashDiscAmount(_custTransOpenLine);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editSettleAmountCur</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets or sets the settle amount.
        /// </summary>
        /// <param name="_set">
        /// true if the settle amount is set; otherwise, false.
        /// </param>
        /// <param name="_custTransOpenLine">
        /// The current instance of the CustTransOpen table.
        /// </param>
        /// <param name="_settleAmountCur">
        /// The new settle amount.
        /// </param>
        /// <returns>
        /// The settle amount.
        /// </returns>
        public edit AmountCur editSettleAmountCur(
            boolean _set,
            CustTransOpenLine _custTransOpenLine,
            AmountCur _settleAmountCur)
        {
            if (_set)
            {
                try
                {
                    ttsbegin;

                    if (_settleAmountCur > 0)
                    {
                        AmountCur remainingLineAmount = custOpenTransLineManager.findUnmarkedLineAmount(_custTransOpenLine);
                        AmountCur lineAmountToSettle = custOpenTransLineManager.determineSettleAmountForTransLine(remainingLineAmount, true);

                        //amount greater than amount not settled and discount to take
                        if (_settleAmountCur > (lineAmountToSettle))
                        {
                            throw error("@SYS134231");
                        }
                        custOpenTransLineManager.updateSettlementLineAmount(_custTransOpenLine.RecId, _settleAmountCur);
                    }
                    else
                    {
                        custOpenTransLineManager.unmarkTransLine(_custTransOpenLine);
                    }

                    custOpenTransLineManager.updateCashDiscountOnTransLines(_custTransOpenLine.RecId);
                    element.executeCallParentFormUpdateSettleAmount(custOpenTransLineManager.getMarkedTotal());

                    ttscommit;
                }
                catch
                {
                    ttsabort;
                    custOpenTransLineManager.resetMarkedTotals();
                }
            }

            return custOpenTransLineManager.getSettleLineAmount(_custTransOpenLine);
        }

]]></Source>
					</Method>
					<Method>
						<Name>editIsMarkedForSettlement</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets or sets whether the open transaction is marked for settlement.
        /// </summary>
        /// <param name="_set">
        /// true if marked for settlement is set; otherwise, false.
        /// </param>
        /// <param name="_custTransOpenLine">
        /// The current instance of the CustTransOpen table.
        /// </param>
        /// <param name="_isMarkedForSettlement">
        /// The new marked for settlement when the <paramref name="_set"/> is true.
        /// </param>
        /// <returns>
        /// Whether the open transaction is marked for settlement.
        /// </returns>
        public edit NoYes editIsMarkedForSettlement(
            boolean _set,
            CustTransOpenLine _custTransOpenLine,
            NoYes _isMarkedForSettlement)
        {
            NoYes wasItMarked;
            CustTransMarkedOpenLine custTransMarkedOpenLine;
            boolean allowParentUpdate = true;

            custTransMarkedOpenLine = CustTransMarkedOpenLine::findByRefId(callingSpecTrans.RecId, _custTransOpenLine.RecId);

            if (_set)
            {
                try
                {
                    ttsbegin;

                    if (_isMarkedForSettlement == NoYes::No)
                    {
                        if ((custTransMarkedOpenLine.AmountToSettle == 0) && (custTransMarkedOpenLine.CashDiscLineToTake != 0))
                        {
                            allowParentUpdate = false;
                        }
                        else
                        {
                            custOpenTransLineManager.unmarkTransLine(_custTransOpenLine);
                            wasItMarked = NoYes::No;
                        }
                    }
                    else
                    {
                        custOpenTransLineManager.markTransLine(_custTransOpenLine);
                        wasItMarked = NoYes::Yes;
                    }

                    if (allowParentUpdate)
                    {
                        custOpenTransLineManager.updateCashDiscountOnTransLines(_custTransOpenLine.RecId);
                        element.executeCallParentFormUpdateSettleAmount(custOpenTransLineManager.getMarkedTotal());
                    }

                    ttscommit;
                }
                catch
                {
                    ttsabort;
                }
            }
            else if (custTransMarkedOpenLine)
            {
                wasItMarked = NoYes::Yes;
            }

            return wasItMarked;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayTDS_IN</Name>
						<Source><![CDATA[
        display AmountCur displayTDS_IN(CustTransOpenLine _custTransOpenLine)
        {
            return TaxWithholdTrans_IN::getTDSTCSAmountPerInvoiceLine(_custTransOpenLine, TaxWithholdCodeType_IN::TDS);
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayTCS_IN</Name>
						<Source><![CDATA[
        display AmountCur displayTCS_IN(CustTransOpenLine _custTransOpenLine)
        {
            return TaxWithholdTrans_IN::getTDSTCSAmountPerInvoiceLine(_custTransOpenLine, TaxWithholdCodeType_IN::TCS);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>CustTrans</Name>
				<Methods>
					<Method>
						<Name>displayTotalAmountCurrency_IN</Name>
						<Source><![CDATA[
        // For each TaxWithholdTrans_IN record against the current active invoice number, find the cumulative value of AmountCur
        // from the related records in CustTransOpenLine. As of now in M2 only FTI is completed by Core team for the 'Invoice tracking' functionality.
        // This display method will have to be modified using Voucher numbers instead of Invoiceid for journals etc, when Core impementation for
        // journals etc. is complete.
        display AmountCur displayTotalAmountCurrency_IN(CustTrans _custTrans)
        {
            return TaxWithholdTrans_IN::totalAmountCurrency_IN(_custTrans.Invoice);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CustTransOpen</Name>
			<Table>CustTransOpen</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDiscNoticeDeadline</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCExportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscountLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjUnrealizedReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineAmount_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineAmountPaymCur_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestAmount_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestAmountPaymCur_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastInterestDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PossibleCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettledLinePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettledTotalAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettlementPriorityCashDiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAmountOrigin_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseCashDisc</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustTransOpenLine</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustTransOpenLine</Name>
			<Table>CustTransOpenLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustInvoiceLineIdRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransOpen</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustTrans</Name>
			<Table>CustTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCExportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeSeqNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CancelledPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Closed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetterCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConcessionContractId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConcessionSettlementId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ControlNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBillingClassification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUROTriangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustmentReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Interest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdj</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRateReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymManBatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymManLackDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfileClose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyCrossRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailCustTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailStoreId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTerminalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Settlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoiceSalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>CustTransOpen</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@CashManagement:SettleInvoiceLines</Caption>
		<DialogSize xmlns="">Large</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomerDetails</Name>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustomerCompany</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>DataAreaId</DataField>
						<DataSource>CustTransOpen</DataSource>
						<Label>@SYS13342</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustAccount</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>AccountNum</DataField>
						<DataSource>CustTransOpen</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustAccountName</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Skip>Yes</Skip>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS9624</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>InvoiceDetail</Name>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Invoice</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CustTrans_Invoice</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Invoice</DataField>
								<DataSource>CustTrans</DataSource>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Currency</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CustTrans_CurrencyCode</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>CurrencyCode</DataField>
								<DataSource>CustTrans</DataSource>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Amount</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>CustTransOpen_AmountCur</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>894784852</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_AccountsPayable:CustPaymByLine_CustTransOpen_AmountCur</HelpText>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>AmountCur</DataField>
								<DataSource>CustTransOpen</DataSource>
								<Label>@SYS134107</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>AmountCur_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>IN</CountryRegionCodes>
								<ElementPosition>1252698793</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_AccountsPayable:CustPaymByLine_AmountCur_IN</HelpText>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayTotalAmountCurrency_IN</DataMethod>
								<DataSource>CustTrans</DataSource>
								<Label>@SYS134107</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>DiscToTake</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_AccountsPayable:CustPaymByLine_DiscToTake</HelpText>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayDiscToTake</DataMethod>
								<DataSource>CustTransOpen</DataSource>
								<Label>@SYS134073</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>TotalSettlePaymAmountCur</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_AccountsPayable:CustPaymByLine_TotalSettlePaymAmountCur</HelpText>
								<Skip>Yes</Skip>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS134108</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>InvoiceLines</Name>
				<ElementPosition>1717986916</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>InvoiceLinesGrid</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>IsMarkedForSettlement</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@FieldDescriptions_AccountsPayable:CustPaymByLine_IsMarkedForSettlement</HelpText>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataMethod>editIsMarkedForSettlement</DataMethod>
								<DataSource>CustTransOpenLine</DataSource>
								<Label>@SYS19120</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InvoiceDescription</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayLineDescription</DataMethod>
								<DataSource>CustTransOpenLine</DataSource>
								<Label>@SYS80470</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>lineDebitAmount</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayLineAmount</DataMethod>
								<DataSource>CustTransOpenLine</DataSource>
								<Label>@SYS10500</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WHT_IN</Name>
								<AllowEdit>No</AllowEdit>
								<CountryRegionCodes>IN</CountryRegionCodes>
								<ElementPosition>1946157054</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdTrans_IN_TDS</Name>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayTDS_IN</DataMethod>
										<DataSource>CustTransOpenLine</DataSource>
										<Label>@GLS5470</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TaxWithholdTrans_IN_TCS</Name>
										<CountryRegionCodes>IN</CountryRegionCodes>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayTCS_IN</DataMethod>
										<DataSource>CustTransOpenLine</DataSource>
										<Label>@GLS5471</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<BackgroundColor>WindowBackground</BackgroundColor>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>lineAmountNotSettled</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@FieldDescriptions_AccountsPayable:CustPaymByLine_lineAmountNotSettled</HelpText>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>AmountCur</DataField>
								<DataSource>CustTransOpenLine</DataSource>
								<Label>@SYS860</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>DiscToTakeOnLine</Name>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@FieldDescriptions_AccountsPayable:CustPaymByLine_DiscToTakeOnLine</HelpText>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>displayDiscToTakeAmountOnLine</DataMethod>
								<DataSource>CustTransOpenLine</DataSource>
								<Label>@SYS134073</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>settleAmountCur</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2113929214</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@FieldDescriptions_AccountsPayable:CustPaymByLine_settleAmountCur</HelpText>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editSettleAmountCur</DataMethod>
								<DataSource>CustTransOpenLine</DataSource>
								<Label>@SYS114018</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<DataSource>CustTransOpenLine</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CompleteMarkInvoiceLine</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<NeededPermission>Manual</NeededPermission>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<Text>@SYS5469</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>