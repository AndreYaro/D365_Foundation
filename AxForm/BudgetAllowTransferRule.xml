<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BudgetAllowTransferRule</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BudgetAllowTransferRule extends FormRun
{
    #task

    BudgetAllowTransferRuleManager allowTransferRuleManager;
    DimensionExpressionController allowTransferRuleExpressionController;

    LedgerRecId primaryLedgerRecId;

}
]]></Source>
			</Method>
			<Method>
				<Name>saveBudgetAllowTransferRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Attempts to save the budget allow transfer rule if all mandatory fields are entered.
    /// </summary>
    private void saveBudgetAllowTransferRule()
    {
        if (!budgetAllowTransferRule.RecId
            && budgetAllowTransferRule.Name
            && budgetAllowTransferRule.DimensionHierarchyAccountStructure)
        {
            // Save the budget allow transfer rule if all mandatory fields are entered.
            element.task(#taskSave);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        // Get the primary ledger.
        primaryLedgerRecId = Ledger::current();

        if (!primaryLedgerRecId)
        {
            throw error(strfmt("@SYS19096", this.name(), tablestr(Ledger)));
        }

        if (!LedgerStructure::existsForLedger())
        {
            throw error("@SYS314058");
        }

        super();

        // Initialize the rule expression controller.
        allowTransferRuleExpressionController = DimensionExpressionController::newForExpressionBuilder(memberCriteriaBuilder);

        // Set the initial form state.
        element.setAllowEditForRule();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        // Provide a notification to the user of the impact of creating rules and what no member criteria indicates.
        warning("@Budget:BudgetTransferRuleNoCriteriaSpecified");
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEditForMember</Name>
				<Source><![CDATA[
    public void setAllowEditForMember()
    {
        if (budgetAllowTransferRuleMember)
        {
            budgetAllowTransferRuleMember_ds.allowDelete(true);
            deleteMemberButton.enabled(true);

            budgetAllowTransferRuleMember_ds.allowEdit(true);

            allowTransferRuleExpressionController.setEnabled(!element.inViewMode());
        }
        else
        {
            budgetAllowTransferRuleMember_ds.allowDelete(false);
            budgetAllowTransferRuleMember_ds.allowEdit(false);

            deleteMemberButton.enabled(false);
            allowTransferRuleExpressionController.clearExpressions();
            allowTransferRuleExpressionController.setEnabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAllowEditForRule</Name>
				<Source><![CDATA[
    public void setAllowEditForRule()
    {
        if (budgetAllowTransferRule)
        {
            // Enable the buttons.
            copyRuleButton.enabled(true);
            newMemberButton.enabled(true);
        }
        else
        {
            // Disable the buttons.
            copyRuleButton.enabled(false);
            newMemberButton.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEditRecordMode</Name>
				<Source><![CDATA[
    public void setEditRecordMode()
    {
        if (element.inViewMode())
        {
            // Put the form in edit mode.
            element.task(#taskEditRecord);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _p1)
    {
        int ret;

        ret = super(_p1);

        if (_p1 == #taskEditRecord)
        {
            this.setAllowEditForMember();
        }
        else if (_p1 == #taskDoneEditRecord)
        {
            this.setAllowEditForMember();
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>BudgetAllowTransferRule</Name>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            element.setAllowEditForRule();

            // Reset the rule manager to force a reload of the expression builder control.
            allowTransferRuleManager = null;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            budgetAllowTransferRule.PrimaryLedger = primaryLedgerRecId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            // Add the primary ledger range to the rule.
            QueryBuildRange qbrPrimaryLedger = this.query().dataSourceTable(tablenum(BudgetAllowTransferRule)).addRange(fieldnum(BudgetAllowTransferRule, PrimaryLedger));
            qbrPrimaryLedger.value(SysQuery::value(primaryLedgerRecId));
            qbrPrimaryLedger.status(RangeStatus::Hidden);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>DimensionHierarchyAccountStructure</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid = super();

                if (isValid
                    && budgetAllowTransferRule.orig().DimensionHierarchyAccountStructure == budgetAllowTransferRule.DimensionHierarchyAccountStructure
                    || (BudgetAllowTransferRuleMember::existByBudgetAllowTransferRule(budgetAllowTransferRule.RecId)
                    && Box::yesNo("@SYS324213", DialogButton::No) == DialogButton::No))
                {
                    // The account structure has not changed or the change was not confirmed as the rule has existing members.
                    // Prevent the modified logic from being executed by returning false.
                    isValid = false;
                }

                return isValid;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // Delete all members when the account structure changes to ensure there is no overlapping criteria.
                BudgetAllowTransferRuleManager::deleteMembersForBudgetAllowTransferRule(budgetAllowTransferRule.RecId);

                budgetAllowTransferRuleMember_ds.research(true);

                // Attempt to save the budget allow transfer rule if all mandatory fields are entered.
                element.saveBudgetAllowTransferRule();
            }

]]></Source>
							</Method>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                Name accountStructureName = _formReferenceControl.filterValue(
                AbsoluteFieldBinding::construct(
                    fieldstr(DimensionHierarchy, Name),
                    tablestr(DimensionHierarchy))).value();

                Common resolvedRecord = DimensionHierarchy::findByTypeAndName(DimensionHierarchyType::AccountStructure, accountStructureName);

                return resolvedRecord;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                Common lookupRecord = BudgetPrimaryLedgerDimensionAttribute::lookupAccountStructure(_formReferenceControl, budgetAllowTransferRule.DimensionHierarchyAccountStructure);

                return lookupRecord;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Name</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // Attempt to save the budget allow transfer rule information if all mandatory fields are entered.
                element.saveBudgetAllowTransferRule();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>BudgetAllowTransferRuleMember</Name>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            if (budgetAllowTransferRuleMember)
            {
                if (!allowTransferRuleManager || allowTransferRuleManager.parmMemberName() != budgetAllowTransferRuleMember.Name)
                {
                    allowTransferRuleManager = BudgetAllowTransferRuleManager::construct(budgetAllowTransferRuleMember.RecId);

                    if (allowTransferRuleExpressionController)
                    {
                        // Load the member expression controller.
                        allowTransferRuleExpressionController.loadAvailableDimensionAttributes(
                            BudgetAllowTransferRuleManager::getAvailableDimensionAttributes(budgetAllowTransferRule.PrimaryLedger, budgetAllowTransferRule.DimensionHierarchyAccountStructure));

                        allowTransferRuleExpressionController.loadExpressions(
                            allowTransferRuleManager.parmExpressionCriteriaCollection());
                    }
                }
            }
            else
            {
                // Reset the rule manager to clear the expression controller.
                allowTransferRuleManager = null;
                allowTransferRuleExpressionController.clearExpressions();
            }

            element.setAllowEditForMember();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean isValid = super();

            isValid = isValid && this.validateBudgetAllowTransferRuleMember();

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateBudgetAllowTransferRuleMember</Name>
						<Source><![CDATA[
        public boolean validateBudgetAllowTransferRuleMember()
        {
            boolean isValid = true;

            if (allowTransferRuleManager)
            {
                allowTransferRuleManager.parmExpressionCriteriaCollection(allowTransferRuleExpressionController.getExpressionCriteriaCollection());

                // Validate the member.
                isValid = allowTransferRuleManager.validate();
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            this.saveBudgetAllowTransferRuleMember();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>saveBudgetAllowTransferRuleMember</Name>
						<Source><![CDATA[
        public void saveBudgetAllowTransferRuleMember()
        {
            if (allowTransferRuleManager)
            {
                allowTransferRuleManager.parmExpressionCriteriaCollection(allowTransferRuleExpressionController.getExpressionCriteriaCollection());
                allowTransferRuleManager.save();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if (Box::yesNo("@SYS320415", DialogButton::No) == DialogButton::Yes)
            {
                // The deletion of the selected member was confirmed.
                BudgetAllowTransferRuleManager::deleteBudgetAllowTransferRuleMember(budgetAllowTransferRuleMember.RecId);

                // Reset the state to avoid pending changes from calling save.
                memberCriteriaBuilder.apply();

                budgetAllowTransferRuleMember_ds.research();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>leaveRecord</Name>
						<Source><![CDATA[
        public boolean leaveRecord(boolean _forceUpdate = false)
        {
            boolean canLeaveRecord = super(_forceUpdate);

            if (canLeaveRecord)
            {
                if (memberCriteriaBuilder.hasPendingChanges())
                {
                    canLeaveRecord = budgetAllowTransferRuleMember_ds.validateWrite();

                    if (canLeaveRecord)
                    {
                        memberCriteriaBuilder.apply();
                        budgetAllowTransferRuleMember_ds.write();
                    }
                }
            }

            return canLeaveRecord;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CopyRuleButton</Name>
				<Type>DropDialogButton</Type>
				<Methods>
					<Method>
						<Name>dialogClosed</Name>
						<Source><![CDATA[
        public void dialogClosed(xFormRun _formRun)
        {
            super(_formRun);

            if (_formRun.closedOk())
            {
                BudgetAllowTransferRuleICopy allowTransferRuleICopy = _formRun as BudgetAllowTransferRuleICopy;

                if (allowTransferRuleICopy)
                {
                    element.setEditRecordMode();

                    BudgetAllowTransferRule budgetAllowTransferRuleCopy;
                    select firstonly * from budgetAllowTransferRuleCopy
                        where budgetAllowTransferRuleCopy.PrimaryLedger == primaryLedgerRecId
                           && budgetAllowTransferRuleCopy.Name == allowTransferRuleICopy.getName();

                    element.args().lookupRecord(budgetAllowTransferRuleCopy);
                    budgetAllowTransferRule_ds.research(false);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NewMemberButton</Name>
				<Type>DropDialogButton</Type>
				<Methods>
					<Method>
						<Name>dialogClosed</Name>
						<Source><![CDATA[
        public void dialogClosed(xFormRun _formRun)
        {
            super(_formRun);

            if (_formRun.closedOk())
            {
                BudgetAllowTransferRuleICreateMember allowTransferRuleICreateMember = _formRun as BudgetAllowTransferRuleICreateMember;

                if (allowTransferRuleICreateMember)
                {
                    element.setEditRecordMode();

                    // Create a rule member for the entered name.
                    BudgetAllowTransferRuleMember newRuleMember = BudgetAllowTransferRuleManager::createBudgetAllowTransferRuleMember(
                        budgetAllowTransferRule.RecId,
                        allowTransferRuleICreateMember.getMemberName());

                    budgetAllowTransferRuleMember_ds.research();

                    // Find the new member & set focus on the name
                    budgetAllowTransferRuleMember_ds.positionToRecord(newRuleMember);
                    budgetAllowTransferRuleMember_Name.setFocus();
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeleteMemberButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            budgetAllowTransferRuleMember_ds.delete();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>BudgetAllowTransferRule</Name>
			<Table>BudgetAllowTransferRule</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionHierarchyAccountStructure</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryLedger</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>PrimaryLedgerNameIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>BudgetAllowTransferRuleMember</Name>
			<Table>BudgetAllowTransferRuleMember</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BudgetAllowTransferRule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>BudgetAllowTransferRule</JoinSource>
			<AllowCreate>No</AllowCreate>
			<Index>BudgetAllowTransferRuleNameIdx</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS320760</Caption>
		<DataSource xmlns="">BudgetAllowTransferRule</DataSource>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>RuleActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>CopyRuleButtonGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDropDialogButtonControl">
								<Name>CopyRuleButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>DropDialogButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>BudgetAllowTransferRuleCopy</MenuItemName>
							</AxFormControl>
						</Controls>
						<DataSource>BudgetAllowTransferRule</DataSource>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>BudgetAllowTransferRule</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationListGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>RuleGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>BudgetAllowTransferRule_Name</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>RuleGrid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>BudgetAllowTransferRule_Name</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>BudgetAllowTransferRule</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>BudgetAllowTransferRule_Description</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>BudgetAllowTransferRule</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>BudgetAllowTransferRule</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<DataSource>BudgetAllowTransferRule</DataSource>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>BudgetAllowTransferRule_Name1</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>BudgetAllowTransferRule</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>BudgetAllowTransferRule_Description1</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>BudgetAllowTransferRule</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>BudgetAllowTransferRule_DimensionHierarchyAccountStructure</Name>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>BudgetAllowTransferRule_DimensionHierarchyAccountStructure_Name</Name>
								<DataRelationPath>DimensionHierarchy</DataRelationPath>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<DataSource>BudgetAllowTransferRule</DataSource>
						<ReferenceField>DimensionHierarchyAccountStructure</ReferenceField>
						<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>Auto</ArrangeMethod>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DetailsTabPage</Name>
						<Pattern>NestedSimpleListDetails</Pattern>
						<PatternVersion>UX7 1.1</PatternVersion>
						<Type>TabPage</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>MemberActionPaneStrip</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>MaintainMemberButtonGroup</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Left>0</Left>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormDropDialogButtonControl">
												<Name>NewMemberButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>DropDialogButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataSource>BudgetAllowTransferRule</DataSource>
												<MenuItemName>BudgetAllowTransferRuleCreateMember</MenuItemName>
												<NormalImage>New</NormalImage>
												<Primary>Yes</Primary>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>DeleteMemberButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<NeededPermission>Delete</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<NormalImage>Delete</NormalImage>
												<SaveRecord>No</SaveRecord>
												<Text>@SYS26394</Text>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>BudgetAllowTransferRuleMember</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MemberBody</Name>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>MemberList</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>MemberGrid</Name>
												<AllowEdit>No</AllowEdit>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Grid</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>SizeToContent</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>BudgetAllowTransferRuleMember_Name</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<DataField>Name</DataField>
														<DataSource>BudgetAllowTransferRuleMember</DataSource>
														<DisplayLength>100</DisplayLength>
														<DisplayLengthMode>Fixed</DisplayLengthMode>
													</AxFormControl>
												</Controls>
												<AlternateRowShading>No</AlternateRowShading>
												<DataSource>BudgetAllowTransferRuleMember</DataSource>
												<MultiSelect>No</MultiSelect>
												<ShowColLabels>No</ShowColLabels>
												<ShowRowLabels>No</ShowRowLabels>
											</AxFormControl>
										</Controls>
										<DataSource>BudgetAllowTransferRuleMember</DataSource>
										<FrameType>None</FrameType>
										<Style>BorderlessGridContainer</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>MemberCriteriaDetails</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>MemberCriteriaHeader</Name>
												<Type>Group</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<ColumnsMode>Fill</ColumnsMode>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>MemberCriteriaBody</Name>
												<Pattern>Custom</Pattern>
												<Type>Group</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>FormGroupControl1</Name>
														<HelpText>@FieldDescriptions_Budgeting:BudgetAllowTransferRule_FormGroupControl1</HelpText>
														<Pattern>DimensionExpressionBuilder</Pattern>
														<PatternVersion>1.0</PatternVersion>
														<Type>Group</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormContainerControl">
																<Name>MemberCriteriaBuilder</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<NeededPermission>Update</NeededPermission>
																<Type>Container</Type>
																<FormControlExtension>
																	<Name>DimensionExpressionBuilder</Name>
																	<ExtensionComponents />
																	<ExtensionProperties>
																		<AxFormControlExtensionProperty>
																			<Name>parmControllerClassName</Name>
																			<Type>ExtendedDataType</Type>
																			<TypeName>ClassName</TypeName>
																			<Value>BudgetDimensionExpressionBuilderController</Value>
																		</AxFormControlExtensionProperty>
																	</ExtensionProperties>
																</FormControlExtension>
																<Controls />
															</AxFormControl>
														</Controls>
														<HideIfEmpty>No</HideIfEmpty>
														<Caption>@SYS320743</Caption>
													</AxFormControl>
												</Controls>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<DataSource>BudgetAllowTransferRuleMember</DataSource>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@Budget:BudgetTransferRuleLines</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>