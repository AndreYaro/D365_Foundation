<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PurchAgreementChangeContractor_PSN</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class PurchAgreementChangeContractor_PSN extends FormRun
    {
        PurchAgreementHeader        purchAgreementHeader;
        VendAccount                 previousVendorAccount;
        VendAccount                 newVendorAccount;
        recId                       purchAgreementRecId;
}
]]></Source>
			</Method>
			<Method>
				<Name>changeContractor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates or replaces various fields of different tables to reflect the contractor change.
    /// </summary>
    public void changeContractor()
    {
        VendTable   vendTableCurrent;
        VendTable   vendTablePrevious;

        if (PublicSectorUtils::isFrenchRegulatoryEnabled())
        {
            vendTableCurrent = VendTable::find(newVendorAccount);
            vendTablePrevious = VendTable::find(previousVendorAccount);

            PurchAgreementHeader::updateVendorForContractorChange(purchAgreementRecId, vendTableCurrent);
            AgreementHeaderDefault::updateContactInfoForContractorChange(purchAgreementRecId, vendTableCurrent);
            AgreementHeaderDefault::updateAddressInfoForContractorChange(purchAgreementRecId, vendTableCurrent);
            PurchAgreementHeaderDefault::updateInvoiceAccountForContractorChange(purchAgreementRecId, vendTableCurrent);
            PurchAgreementSubcontractor::updateCocontractorForContractorChange(purchAgreementRecId, vendTableCurrent, vendTablePrevious);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the values from dialog fields.
    /// </summary>
    public void getControlValues()
    {
        newVendorAccount    =  newContractor.valueStr();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes variables and control on the <c>PurchAgreementChangeContractor</c> form.
    /// </summary>
    public void init()
    {
        super();

        purchAgreementHeader = element.args().record() as PurchAgreementHeader;
        previousVendorAccount = purchAgreementHeader.VendAccount;
        purchAgreementRecId = purchAgreementHeader.RecId;

        changePrimaryContractorText.text(strFmt("@SPS2157", purchAgreementHeader.VendAccount, purchAgreementHeader.PurchNumberSequence));
        changeContractor.enabled(element.isCocontractorValid());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCocontractorValid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the value for the Co-contractor.
    /// </summary>
    /// <returns>
    /// true if the validation is successful; otherwise, false.
    /// </returns>
    public boolean isCocontractorValid()
    {
        boolean isValid = true;

        if (newContractor.valueStr() == '')
        {
            isValid = false;
        }
        else if (!PurchAgreementSubcontractor::existsByAgreementHeaderAndCocontractor(purchAgreementRecId, newContractor.valueStr()))
        {
            isValid = false;
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAndValidateFooterMessageDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the value for the Co-contractor and sets the error message text to be displayed on footer note.
    /// </summary>
    /// <returns>
    /// true if the validation is successful; otherwise, false.
    /// </returns>
    public boolean setAndValidateFooterMessageDisplay()
    {
        boolean isValid  = element.isCocontractorValid();

        if (!isValid)
        {
            warning(strFmt("@SPS2380", newContractor.valueStr()));
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the parameters entered in the dialog.
    /// </summary>
    /// <returns>
    /// true if the validation is successful; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean     canChange = true;
        canChange = element.isCocontractorValid();

        return canChange;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>NewContractor</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean isValid;

            isValid = element.setAndValidateFooterMessageDisplay();

            changeContractor.enabled(isValid);

            return super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            PurchAgreementSubcontractor::lookupCocontractor(this, purchAgreementRecId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            boolean isValid;

            ret = super();

            isValid = element.setAndValidateFooterMessageDisplay();

            changeContractor.enabled(isValid);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>textChange</Name>
						<Source><![CDATA[
        public void textChange()
        {
            boolean isValid;

            super();

            if (newContractor.valueStr() == '')
            {
                changeContractor.enabled(false);
            }
            else
            {
                isValid = element.isCocontractorValid();
                changeContractor.enabled(isValid);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ChangeContractor</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validates and changes the contractor.
        /// </summary>
        void clicked()
        {
            super();

            element.getControlValues();

            ttsbegin;
            if (element.validate())
            {
                element.changeContractor();
            }
            ttscommit;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SPS2156</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<Width xmlns="">350</Width>
		<WindowResize xmlns="">Fixed</WindowResize>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>ChangePrimaryContractorText</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1288490187</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Group_Group</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>NewContractor</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SPS2303</Label>
								<LookupButton>Always</LookupButton>
							</AxFormControl>
						</Controls>
						<BackgroundColor>WindowBackground</BackgroundColor>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>ChangeContractor</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<AutoRefreshData>Yes</AutoRefreshData>
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<Text>@SPS2097</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>