<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>WHSOutboundWorkLoadVisualization</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class WHSOutboundWorkLoadVisualization extends FormRun implements IChartClickable
{
    private WHSChartFilterName filterName;
    private const int RefreshDuration = 60000; // 1 minute

    private WHSTmpOutboundWorkLoadChart workLoadChartDataTmp;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        filterName
    #endmacro

}
]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    public void initParmDefault()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        int version = RunBase::getVersion(packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version,#CurrentList] = packedClass;
                return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDataAreaId</Name>
				<Source><![CDATA[
    public dataAreaId lastValueDataAreaId()
    {
        return curext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueDesignName</Name>
				<Source><![CDATA[
    public identifiername lastValueDesignName()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    public identifiername lastValueElementName()
    {
        return formStr(WHSOutboundWorkLoadVisualization);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueType</Name>
				<Source><![CDATA[
    public UtilElementType lastValueType()
    {
        return UtilElementType::Form;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastValueUserId</Name>
				<Source><![CDATA[
    public userId lastValueUserId()
    {
        return curuserid();
    }

]]></Source>
			</Method>
			<Method>
				<Name>drillThroughClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Appends the selected filter name to the drill through parameter object.
    /// </summary>
    /// <param name = "_args">The context args, args.parmObject has a map of context including name and keys, args.record is empty but can set here</param>
    /// <param name = "_mf">The menu function that will get executed if true is returned</param>
    /// <returns>True to run the menu function, false to cancel</returns>
    public boolean drillThroughClicked(Args _args, MenuFunction _mf)
    {
        SysChartDrillThruParameters parameters = _args.parmObject();
        parameters.warehouseWorkLoadVisualizationFilterName(element.filterName);
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        xSysLastValue::getLast(this);
        super();

        if (filterName)
        {
            ChartFilter.text(filterName);
            this.generateChart(filterName);
        }
        else
        {
            this.displayChart();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>autoRefreshChart</Name>
				<Source><![CDATA[
    public void autoRefreshChart(AsyncTaskResult _tr)
    {
        if (this.closed())
        {
            return;
        }

        var stateContainer = _tr.getAsyncState();
        WHSChartFilterName selectedFilterName = conPeek(stateContainer, 1);

        if (selectedFilterName != ChartFilter.valueStr())
        {
            return;
        }

        WHSOutboundWorkLoadChartFilter outboundWorkLoadChartFilter = WHSOutboundWorkLoadChartFilter::find(filterName);
        int noOfTimesRefreshed = conPeek(stateContainer, 2);

        if ((outboundWorkLoadChartFilter.RefreshInterval * 60 * 1000) <= (noOfTimesRefreshed * RefreshDuration))
        {
            this.generateChart(selectedFilterName);
        }
        else
        {
            element.setTimeoutEx(formMethodStr(WHSOutboundWorkLoadVisualization, autoRefreshChart),
                                [filterName, noOfTimesRefreshed + 1],
                                RefreshDuration);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>filter_lookup</Name>
				<Source><![CDATA[
    private void filter_lookup(FormControl _ctrl)
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(WHSOutboundWorkLoadChartFilter), _ctrl);
        Query                   query          = new Query();
        QueryBuildDataSource    qbds;

        sysTableLookup.addLookupfield(fieldNum(WHSOutboundWorkLoadChartFilter, FilterName));
        sysTableLookup.addLookupfield(fieldNum(WHSOutboundWorkLoadChartFilter, Description));

        qbds = query.addDataSource(tableNum(WHSOutboundWorkLoadChartFilter));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateChartData</Name>
				<Source><![CDATA[
    private void populateChartData(WHSOutboundWorkLoadChartFilter _outboundWorkLoadChartFilter)
    {
        workLoadChartDataTmp = WHSOutboundWorkLoadChartQueryBuilder::init(_outboundWorkLoadChartFilter).populateChartData(WHSTmpOutboundWorkLoadChart);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateChartTitle</Name>
				<Source><![CDATA[
    private void updateChartTitle(WHSOutboundWorkLoadChartFilter _outboundWorkLoadChartFilter)
    {
        SysChartTitle title = BarChart.Title();
        title.parmText(strFmt("@WAX:OutboundChartChartTitle",
                        fieldId2PName(_outboundWorkLoadChartFilter.XAxisValueTableId, _outboundWorkLoadChartFilter.XAxisValueFieldId),
                        fieldId2PName(_outboundWorkLoadChartFilter.XAxisGroupTableId, _outboundWorkLoadChartFilter.XAxisGroupFieldId)));

        SysChartTitle title2 = TimeChart.Title();
        title2.parmText(strFmt("@WAX:OutboundChartChartTitle",
                        fieldId2PName(_outboundWorkLoadChartFilter.XAxisValueTableId, _outboundWorkLoadChartFilter.XAxisValueFieldId),
                        fieldId2PName(_outboundWorkLoadChartFilter.XAxisGroupTableId, _outboundWorkLoadChartFilter.XAxisGroupFieldId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateChartYAxis</Name>
				<Source><![CDATA[
    private void updateChartYAxis(WHSOutboundWorkLoadChartFilter _outboundWorkLoadChartFilter)
    {
        List list = BarChart.YAxes();
        ListEnumerator enumerator = list.getEnumerator();

        while (enumerator.moveNext())
        {
            SysChartYAxis yAxis = enumerator.current() as SysChartYAxis;

            if (yAxis)
            {
                yAxis.parmTitle(this.yAxisTitle(_outboundWorkLoadChartFilter));
                break;
            }
        }

        BarChart.YAxes(list);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateChartDataLabel</Name>
				<Source><![CDATA[
    private void updateChartDataLabel(WHSOutboundWorkLoadChartFilter _outboundWorkLoadChartFilter)
    {
        List list = BarChart.Measures();
        ListEnumerator enumerator = list.getEnumerator();

        while (enumerator.moveNext())
        {
            SysChartMeasure measure = enumerator.current() as SysChartMeasure;

            if (measure)
            {
                if (_outboundWorkLoadChartFilter.DisplayLevel == WHSChartDisplayLevel::OpenLines)
                {
                    measure.parmDataLabelsFormat(WHSOutboundWorkLoadChartConstants::OpenLinesDataLabelsFormat);
                }
                else
                {
                    measure.parmDataLabelsFormat(WHSOutboundWorkLoadChartConstants::OpenHeadersDataLabelsFormat);
                }

                break;
            }
        }

        BarChart.Measures(list);
    }

]]></Source>
			</Method>
			<Method>
				<Name>yAxisTitle</Name>
				<Source><![CDATA[
    private str yAxisTitle(WHSOutboundWorkLoadChartFilter _outboundWorkLoadChartFilter)
    {
        return (_outboundWorkLoadChartFilter.DisplayLevel == WHSChartDisplayLevel::OpenLines) ?
            "@WAX:OutboundChartCountOfWorkLinesText" : "@WAX:OutboundChartCountOfWorkHeaderText";
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateChartXAxis</Name>
				<Source><![CDATA[
    private void updateChartXAxis(WHSOutboundWorkLoadChartFilter _outboundWorkLoadChartFilter)
    {
        BarChart.XAxisTitle(fieldId2PName(_outboundWorkLoadChartFilter.XAxisGroupTableId, _outboundWorkLoadChartFilter.XAxisGroupFieldId));
        TimeChart.XAxisTitle(fieldId2PName(_outboundWorkLoadChartFilter.XAxisGroupTableId, _outboundWorkLoadChartFilter.XAxisGroupFieldId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLastRefresh</Name>
				<Source><![CDATA[
    private void updateLastRefresh()
    {
        var lastRunTime = DateTimeUtil::applyTimeZoneOffset(DateTimeUtil::getSystemDateTime(), DateTimeUtil::getUserPreferredTimeZone());
        LastRefreshDateTime.dateTimeValue(lastRunTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayChart</Name>
				<Source><![CDATA[
    private void displayChart()
    {
        BarChart.visible(!TimeViewCheckbox.checked());
        TimeChart.visible(TimeViewCheckbox.checked());
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateChart</Name>
				<Source><![CDATA[
    public void generateChart(WHSChartFilterName _filterName)
    {
        filterName = _filterName;

        WHSOutboundWorkLoadChartFilter outboundWorkLoadChartFilter = WHSOutboundWorkLoadChartFilter::find(filterName);
        
        this.populateChartData(outboundWorkLoadChartFilter);

        this.updateChartTitle(outboundWorkLoadChartFilter);

        this.updateChartYAxis(outboundWorkLoadChartFilter);

        this.updateChartXAxis(outboundWorkLoadChartFilter);

        this.updateChartDataLabel(outboundWorkLoadChartFilter);

        this.displayChart();

        this.updateLastRefresh();
        
        if (outboundWorkLoadChartFilter.AutoRefresh)
        {
            element.setTimeoutEx(formMethodStr(WHSOutboundWorkLoadVisualization, autoRefreshChart), 
                                [filterName, 1], 
                                RefreshDuration);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ButtonSetDefault</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            filterName = ChartFilter.valueStr();

            xSysLastValue::saveLast(element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ChartFilter</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            element.filter_lookup(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
            
            element.generateChart(this.valueStr());
            WHSTmpOutboundWorkLoadChart_ds.executeQuery();
            
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TimeViewCheckbox</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (ChartFilter.text())
            {
                element.displayChart();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>WHSTmpOutboundWorkLoadChart</Name>
			<Table>WHSTmpOutboundWorkLoadChart</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>XAxis</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>XAxis2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>YAxis</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>YAxis2</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@WAX:OutboundChartWorkLoadVisualizationFormCaption</Caption>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">Custom</Pattern>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FilterActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>FiltersActionPane</Name>
						<Type>ActionPaneTab</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ButtonGroupFilters</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ButtonSetDefault</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DisabledImageLocation>EmbeddedResource</DisabledImageLocation>
										<Text>@WAX1341</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>WorkLoadBarChartFilter</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>WHSOutboundWorkLoadVisualizationConfigureFilter</MenuItemName>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Caption>@WAX:WAX_MenuTitle_ButtonGroup_WHSLoadPlanningWorkbenchButtonGroupFilters</Caption>
							</AxFormControl>
						</Controls>
						<Caption>@WAX1635</Caption>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FilterAndAutoRefreshGroup</Name>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ChartFilter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>Filter</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateTimeControl">
						<Name>LastRefreshDateTime</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>DateTime</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>Last refresh: </Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>TimeViewCheckbox</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>Estimated/Actual time</Label>
						<LabelPosition>Above</LabelPosition>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>Auto</ArrangeMethod>
				<ColumnsMode>Fill</ColumnsMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ChartGroupControl</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormContainerControl">
						<Name>BarChart</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Container</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>SysChart</Name>
							<ExtensionComponents>
								<AxFormControlExtensionComponent xmlns=""
									i:type="AxFormControlExtensionComponentComposite">
									<Name>parmDataSets</Name>
									<ExtensionComponents>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>WHSOutboundWorkLoadChartDataSet</Name>
											<ComponentType>SysBuildChartDataSet</ComponentType>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmDataSource</Name>
													<Type>String</Type>
													<Value>WHSTmpOutboundWorkLoadChart</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmCategoryField</Name>
													<Type>String</Type>
													<Value>XAxis</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmGroupBy</Name>
													<Type>String</Type>
													<Value>XAxis2</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
									</ExtensionComponents>
								</AxFormControlExtensionComponent>
								<AxFormControlExtensionComponent xmlns=""
									i:type="AxFormControlExtensionComponentComposite">
									<Name>parmMeasures</Name>
									<ExtensionComponents>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>WHSOutboundWorkLoadChartMeasure</Name>
											<ComponentType>SysBuildChartMeasure</ComponentType>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmChartType</Name>
													<Type>Enum</Type>
													<TypeName>SysChartType</TypeName>
													<Value>Column</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmMeasureField</Name>
													<Type>String</Type>
													<Value>YAxis</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmTitle</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmDataLabels</Name>
													<Type>Enum</Type>
													<TypeName>SysChartDataLabels</TypeName>
													<Value>Outside</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmDataLabelsFormat</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmDataSet</Name>
													<Type>String</Type>
													<Value>WHSOutboundWorkLoadChartDataSet</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmUseSecondaryYAxis</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmSecondaryYAxisName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmClickMenuItemType</Name>
													<Type>Enum</Type>
													<TypeName>MenuItemType</TypeName>
													<Value>Action</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmClickMenuItemName</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>MenuItemName</TypeName>
													<Value>WHSOutboundWorkLoadChartDrillThrough</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmKeyField</Name>
													<Type>String</Type>
													<Value>XAxis</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmParameter1</Name>
													<Type>String</Type>
													<Value>XAxis2</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmParameter2</Name>
													<Type>String</Type>
													<Value>XAxis</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmColor</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
									</ExtensionComponents>
								</AxFormControlExtensionComponent>
								<AxFormControlExtensionComponent xmlns=""
									i:type="AxFormControlExtensionComponentComposite">
									<Name>parmSecondaryYAxes</Name>
									<ExtensionComponents />
								</AxFormControlExtensionComponent>
							</ExtensionComponents>
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>parmLegendEnabled</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>True</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmLegendAlignment</Name>
									<Type>Enum</Type>
									<TypeName>SysChartHorizontalAlignment</TypeName>
									<Value>Auto</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmLegendPosition</Name>
									<Type>Enum</Type>
									<TypeName>SysChartVerticalAlignment</TypeName>
									<Value>Auto</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmLegendLayout</Name>
									<Type>Enum</Type>
									<TypeName>SysChartLegendLayout</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmTitleAlignment</Name>
									<Type>Enum</Type>
									<TypeName>SysChartHorizontalAlignment</TypeName>
									<Value>Auto</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmText</Name>
									<Type>String</Type>
									<Value>Work status</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmTitlePosition</Name>
									<Type>Enum</Type>
									<TypeName>SysChartVerticalAlignment</TypeName>
									<Value>Auto</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmSerializedButtons</Name>
									<Type>String</Type>
									<Value>Line;Bar;Column;Pie;Funnel</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmYAxisTitle</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmYAxisVisible</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>True</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmYAxisLabelsHidden</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmYAxisMinValue</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmYAxisMaxValue</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmXAxisTitle</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmClickMenuItemType</Name>
									<Type>Enum</Type>
									<TypeName>MenuItemType</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmClickMenuItemName</Name>
									<Type>ExtendedDataType</Type>
									<TypeName>MenuItemName</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmInteractionsDisabled</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmZoomLimit</Name>
									<Type>Enum</Type>
									<TypeName>SysChartDateTimeInterval</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmToolbarEnabled</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmPadMargin</Name>
									<Type>Int32</Type>
									<Value>0</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmCrosshairsEnabled</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmTooltipShared</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmPlotLineEnabled</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
						<Controls />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormContainerControl">
						<Name>TimeChart</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Container</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>SysChart</Name>
							<ExtensionComponents>
								<AxFormControlExtensionComponent xmlns=""
									i:type="AxFormControlExtensionComponentComposite">
									<Name>parmDataSets</Name>
									<ExtensionComponents>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>WHSTmpOutboundWorkLoadChart</Name>
											<ComponentType>SysBuildChartDataSet</ComponentType>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmDataSource</Name>
													<Type>String</Type>
													<Value>WHSTmpOutboundWorkLoadChart</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmCategoryField</Name>
													<Type>String</Type>
													<Value>XAxis</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmGroupBy</Name>
													<Type>String</Type>
													<Value>XAxis2</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
									</ExtensionComponents>
								</AxFormControlExtensionComponent>
								<AxFormControlExtensionComponent xmlns=""
									i:type="AxFormControlExtensionComponentComposite">
									<Name>parmMeasures</Name>
									<ExtensionComponents>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>OutboundWorkLoadTimeChartMeasure</Name>
											<ComponentType>SysBuildChartMeasure</ComponentType>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmChartType</Name>
													<Type>Enum</Type>
													<TypeName>SysChartType</TypeName>
													<Value>Column</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmMeasureField</Name>
													<Type>String</Type>
													<Value>YAxis2</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmTitle</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmDataLabels</Name>
													<Type>Enum</Type>
													<TypeName>SysChartDataLabels</TypeName>
													<Value>Outside</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmDataLabelsFormat</Name>
													<Type>String</Type>
													<Value>{y} min</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmDataSet</Name>
													<Type>String</Type>
													<Value>WHSTmpOutboundWorkLoadChart</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmUseSecondaryYAxis</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmSecondaryYAxisName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmClickMenuItemType</Name>
													<Type>Enum</Type>
													<TypeName>MenuItemType</TypeName>
													<Value>Action</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmClickMenuItemName</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>MenuItemName</TypeName>
													<Value>WHSOutboundWorkLoadChartDrillThrough</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmKeyField</Name>
													<Type>String</Type>
													<Value>XAxis</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmParameter1</Name>
													<Type>String</Type>
													<Value>XAxis2</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmParameter2</Name>
													<Type>String</Type>
													<Value>XAxis</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmColor</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
									</ExtensionComponents>
								</AxFormControlExtensionComponent>
								<AxFormControlExtensionComponent xmlns=""
									i:type="AxFormControlExtensionComponentComposite">
									<Name>parmSecondaryYAxes</Name>
									<ExtensionComponents />
								</AxFormControlExtensionComponent>
							</ExtensionComponents>
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>parmLegendEnabled</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>True</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmLegendAlignment</Name>
									<Type>Enum</Type>
									<TypeName>SysChartHorizontalAlignment</TypeName>
									<Value>Auto</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmLegendPosition</Name>
									<Type>Enum</Type>
									<TypeName>SysChartVerticalAlignment</TypeName>
									<Value>Auto</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmLegendLayout</Name>
									<Type>Enum</Type>
									<TypeName>SysChartLegendLayout</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmTitleAlignment</Name>
									<Type>Enum</Type>
									<TypeName>SysChartHorizontalAlignment</TypeName>
									<Value>Auto</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmTitlePosition</Name>
									<Type>Enum</Type>
									<TypeName>SysChartVerticalAlignment</TypeName>
									<Value>Auto</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmSerializedButtons</Name>
									<Type>String</Type>
									<Value>Line;Bar;Column;Pie;Funnel</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmYAxisTitle</Name>
									<Type>String</Type>
									<Value>Estimated/Actual time</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmYAxisVisible</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>True</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmYAxisLabelsHidden</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmYAxisMinValue</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmYAxisMaxValue</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmXAxisTitle</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmClickMenuItemType</Name>
									<Type>Enum</Type>
									<TypeName>MenuItemType</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmClickMenuItemName</Name>
									<Type>ExtendedDataType</Type>
									<TypeName>MenuItemName</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmInteractionsDisabled</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmZoomLimit</Name>
									<Type>Enum</Type>
									<TypeName>SysChartDateTimeInterval</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmToolbarEnabled</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmPadMargin</Name>
									<Type>Int32</Type>
									<Value>0</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmCrosshairsEnabled</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmTooltipShared</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmPlotLineEnabled</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
						<Controls />
					</AxFormControl>
				</Controls>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>