<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailCatalogProductAttributeTranslation</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailCatalogProductAttributeTranslation extends FormRun
    {
        LanguageId      translationLanguage;
        str             selectALanguageText;
        Map             languageMap;                //Key: LanguageId, Value: LanguageDescription
        Map             comboDisplayLanguageMap;    //Key: LanguageDisplayText, Value: LanguageId
        Object          caller;
        #SysTranslation
}
]]></Source>
			</Method>
			<Method>
				<Name>filterByLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Filters translation texts by language selected in the drop down.
    /// </summary>
    public void filterByLanguage()
    {
        ecoResTextValueTranslation_ds.query().dataSourceTable(EcoResTextValueTranslation.TableId).
            findRange(fieldNum(EcoResTextValueTranslation, Language)).value(queryValue(translationLanguage));

        retailTmpCatalogProductAttributes_ds.executeQuery();

        if ( languageComboBox.valueStr() == selectALanguageText )
        {
            translatedValue.enabled( false );
            removeTranslatedLanguage.enabled( false );
        }
        else
        {
            translatedValue.enabled( true );
            removeTranslatedLanguage.enabled( true );
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTranslatedLanguagesMap</Name>
				<Source><![CDATA[
    public Map getTranslatedLanguagesMap()
    {
        return languageMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        FormRun callerFormRun = element.args().caller();
        selectALanguageText     = "@SYS320734";

        super();
        caller = element.args().caller();

        this.populateLanguageDropDown();

        if (translationLanguage == #BlankString)
        {
            addTranslatableLanguage.setFocus();
        }

        if (callerFormRun.inViewMode())
        {
            AddTranslatableLanguage.allowEdit(false);
            AddTranslatableLanguage.enabled(false);
            RemoveTranslatedLanguage.allowEdit(false);
            RemoveTranslatedLanguage.enabled(false);
            TranslatedValue.allowEdit(false);
            TranslatedValue.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the selected languages to the form combo box.
    /// </summary>
    /// <param  name='_languageTableDataSource'>
    /// An instance of the <c>formdatasource</c> class denoting the selected languages.
    /// </param>
    public void populate(FormDataSource _languageTableDataSource)
    {
        LanguageTable           languageTable;
        LanguageId              languageId;
        LanguageDescription     languageDescription;
        str                     languageDisplay;
        str                     firstLanguageDisplay;
        int                     i;

        for (languageTable = _languageTableDataSource.getFirst(true) ? _languageTableDataSource.getFirst(true) : _languageTableDataSource.cursor();
                languageTable;
                languageTable = _languageTableDataSource.getNext())
        {
            i++;

            //Insert a new record
            languageId = languageTable.LanguageId;
            languageDescription = languageTable.languageDescription();
            languageDisplay = SysTranslationDetailHelper::prepareLanguageDescription(languageDescription, languageId);
            languageComboBox.add(languageDisplay);
            comboDisplayLanguageMap.insert(languageDisplay, languageId);
            if (i==1)
            {
                firstLanguageDisplay = languageDisplay;
            }
        }

        if ( languageComboBox.valueStr() == selectALanguageText && firstLanguageDisplay != #BlankString)
        {
            languageComboBox.delete(selectALanguageText);
        }
        if (firstLanguageDisplay == #BlankString)
        {
            firstLanguageDisplay = languageComboBox.getText(0);
        }
        if ( languageComboBox.getText(0) != selectALanguageText )
        {
            languageComboBox.selectText(firstLanguageDisplay);
            languageComboBox.selectionChange();
            TranslatedValue.setFocus();
        }

        if ( languageComboBox.items() > 0)
        {
            removeTranslatedLanguage.enabled(true);
        }
        else
        {
            removeTranslatedLanguage.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateLanguageDropDown</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the language dropdown with languages which have translation texts.
    /// </summary>
    void populateLanguageDropDown()
    {
        EcoResTextValueTranslation localEcoResTextValueTranslation;
        RetailTmpCatalogProductAttributes localRetailTmpCatalogProductAttributes;
        LanguageDescription languageDescription;
        str languageDisplay;
        languageMap             = new Map(Types::String,Types::String);
        comboDisplayLanguageMap = new Map(Types::String,Types::String);

        localRetailTmpCatalogProductAttributes.linkPhysicalTableInstance(RetailTmpCatalogProductAttributes);

        languageComboBox.clear();

        while select Language from localEcoResTextValueTranslation
            group by Language
            exists join localRetailTmpCatalogProductAttributes
                where localRetailTmpCatalogProductAttributes.Value == localEcoResTextValueTranslation.TextValueTable
        {
            languageDescription = LanguageTable::languageId2Description(localEcoResTextValueTranslation.Language);
            languageDisplay = SysTranslationDetailHelper::prepareLanguageDescription(languageDescription, localEcoResTextValueTranslation.Language);

            comboDisplayLanguageMap.insert(languageDisplay, localEcoResTextValueTranslation.Language);
            languageMap.insert(localEcoResTextValueTranslation.Language, languageDescription);
            languageComboBox.add(languageDisplay);
        }

        if (comboDisplayLanguageMap.empty())
        {
            languageComboBox.add(selectALanguageText);
            languageComboBox.selectText(selectALanguageText);
            translationLanguage = #BlankString;
        }
        else
        {
            languageComboBox.selectText(languageComboBox.getText(0));
            translationLanguage = comboDisplayLanguageMap.lookup(languageComboBox.getText(0));
        }
        this.filterByLanguage();
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeTranslations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the translated user inputs from the database.
    /// </summary>
    public void removeTranslations()
    {
        ecoResTextValueTranslation localEcoResTextValueTranslation;
        RetailTmpCatalogProductAttributes localRetailTmpCatalogProductAttributes;

        localRetailTmpCatalogProductAttributes.linkPhysicalTableInstance(RetailTmpCatalogProductAttributes);

        delete_from localEcoResTextValueTranslation
            where localEcoResTextValueTranslation.Language == translationLanguage
            exists join localRetailTmpCatalogProductAttributes
                where localRetailTmpCatalogProductAttributes.Value == localEcoResTextValueTranslation.TextValueTable
                   && localRetailTmpCatalogProductAttributes.HasCatalogValue;

        if (caller && formHasMethod(caller, identifierStr(onTextTranslateChanged)))
        {
            caller.onTextTranslateChanged();
        }

        this.populateLanguageDropDown();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RetailTmpCatalogProductAttributes</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            RetailTmpCatalogProductAttributes localRetailTmpCatalogProductAttributes;
            Args args = element.args();

            if (args.record() && args.record().TableId == RetailTmpCatalogProductAttributes.TableId)
            {
                localRetailTmpCatalogProductAttributes = args.record();
                RetailTmpCatalogProductAttributes.linkPhysicalTableInstance(args.record());
            }

            super();

            this.query().dataSourceTable(this.table()).addRange(fieldNum(RetailTmpCatalogProductAttributes, Value)).value(SysQuery::valueNot(0));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResTextValue</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResTextValueTranslation</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            EcoResAttributeValue ecoResAttributeValue;
            EcoResTextValueTranslation catalogTranslation;

            RetailCatalogProductAttributeFormHelper helper;
            ttsBegin;

            if (!retailTmpCatalogProductAttributes.HasCatalogValue)
            {
                // the edited value was outside of catalog, we have to duplicate it to catalog and change there.
                helper = element.args().caller().getHelper();

                retailTmpCatalogProductAttributes.Value = ecoResTextValue.pcDuplicate();
                retailTmpCatalogProductAttributes.HasCatalogValue = NoYes::Yes;
                retailTmpCatalogProductAttributes.update();

                ecoResAttributeValue.Attribute = retailTmpCatalogProductAttributes.Attribute;
                ecoResAttributeValue.Value = retailTmpCatalogProductAttributes.Value;
                ecoResAttributeValue.InstanceValue = helper.findOrCreateInstanceValue(retailTmpCatalogProductAttributes);
                ecoResAttributeValue.insert();

                if (ecoResTextValueTranslation.RecId)
                {
                    // update duplicated translation.
                    select firstonly forupdate catalogTranslation
                        where catalogTranslation.TextValueTable == retailTmpCatalogProductAttributes.Value
                           && catalogTranslation.Language == ecoResTextValueTranslation.Language;

                    catalogTranslation.TextValue = ecoResTextValueTranslation.TextValue;
                    catalogTranslation.update();
                    ecoResTextValueTranslation.reread();
                }
                else
                {
                    // insert the translation for the duplicated text value.
                    ecoResTextValueTranslation.TextValueTable = retailTmpCatalogProductAttributes.Value;
                    super();
                }

                retailTmpCatalogProductAttributes_ds.research(true);
            }
            else
            {
                super();
            }

            if (caller && caller is RetailICatalogTranslation)
            {
                RetailICatalogTranslation retailCatalogITextTranslation = caller as RetailICatalogTranslation;
                retailCatalogITextTranslation.onTextTranslateChanged();
            }

            ttsCommit;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            if (EcoResTextValueTranslation.RecId == 0)
            {
                EcoResTextValueTranslation_ds.initValue();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            ecoResTextValueTranslation.TextValueTable = ecoResTextValue.RecId;
            ecoResTextValueTranslation.Language = translationLanguage;
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            this.query().dataSourceTable(this.table()).clearRanges();
            this.query().dataSourceTable(this.table()).addRange(fieldNum(EcoResTextValueTranslation, Language)).value(queryValue(SystemParameters::getSystemLanguageId()));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResAttributeType</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.query().dataSourceTable(this.table()).addRange(fieldNum(EcoResAttributeType, IsEnumeration)).value(queryValue(NoYes::No));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>LanguageComboBox</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// Selection change event of Language drop down.
        /// </summary>
        /// <returns>An integer value.</returns>
        public int selectionChange()
        {
            int ret = super();

            translationLanguage = #BlankString;

            if (languageComboBox.valueStr() != selectALanguageText)
            {
                translationLanguage = comboDisplayLanguageMap.lookup(languageComboBox.valueStr());
            }
            element.filterByLanguage();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RetailTmpCatalogProductAttributes</Name>
			<Table>RetailTmpCatalogProductAttributes</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Attribute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeGroupAttribute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeSourceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Channel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HasCatalogValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InternalOrganization</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StandardAttributeTextValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Value</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResTextValue</Name>
			<Table>EcoResTextValue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Origin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TextValue</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RetailTmpCatalogProductAttributes</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResTextValueTranslation</Name>
			<Table>EcoResTextValueTranslation</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Language</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TextValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TextValueTable</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResTextValue</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResAttribute</Name>
			<Table>EcoResAttribute</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AttributeModifier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RetailTmpCatalogProductAttributes</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResAttributeType</Name>
			<Table>EcoResAttributeType</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsEnumeration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsHidden</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResAttribute</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS328384</Caption>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<NewRecordAction xmlns="">AddTranslatableLanguage</NewRecordAction>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<StatusBarStyle xmlns="">Simple</StatusBarStyle>
		<Style xmlns="">SimpleList</Style>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionPaneControl1</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>LanguageButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<LeftMode>AutoLeft</LeftMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDropDialogButtonControl">
								<Name>AddTranslatableLanguage</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<NeededPermission>Create</NeededPermission>
								<Type>DropDialogButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<FormViewOption>Grid</FormViewOption>
								<MenuItemName>SysTranslationLanguage</MenuItemName>
								<NormalImage>New</NormalImage>
								<Text>@SYS108299</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>RemoveTranslatedLanguage</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<LeftMode>AutoRight</LeftMode>
								<NeededPermission>Delete</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<NormalImage>Delete</NormalImage>
								<Text>@FLM48</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Columns>2</Columns>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>AvailableLanguageGroup</Name>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl1</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>LanguageComboBox</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ComboType>List</ComboType>
						<Label>@SYS93120</Label>
						<Items />
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>EcoResAttribute_Name</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>EcoResAttribute</DataSource>
						<Label>@RET490402</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Value</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>TextValue</DataField>
						<DataSource>EcoResTextValue</DataSource>
						<Label>@SYS74192</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>TranslatedValue</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>TextValue</DataField>
						<DataSource>EcoResTextValueTranslation</DataSource>
						<Label>@SYS312018</Label>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
				</Controls>
				<DataSource>RetailTmpCatalogProductAttributes</DataSource>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>