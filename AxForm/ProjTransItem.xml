<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjTransItem</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ProjTransItem extends FormRun
{
    QueryBuildDataSource    qb_projTable;
    QueryBuildDataSource    qb_ProjCategory;
    QueryBuildDataSource    qb_projItemTrans;
    QueryBuildDataSource    qb_projItemTransSale1;
    QueryBuildDataSource    qb_projItemTransSale2;
    QueryBuildDataSource    qb_ProjLineProperty;
    QueryBuildDataSource    qb_ProjService;
    QueryBuildDataSource    qb_ProjServiceItemReq;
    QueryBuildDataSource    qb_ProjTransPosting;
	QueryBuildDataSource    qb_ProjGrantView;

	// Range ProjGrantID
	QueryBuildRange         criteriaGrantID;

    // Range lineProperty
    QueryBuildRange         criteriatoBeInvoiced;

    // Range projTable
    QueryBuildRange         criteriaWIPProjId;
    QueryBuildRange         criteriaProjId;

    QueryBuildRange         criteriaProjInvoiceProjId;
    QueryBuildRange         criteriaFixedPrice;
    QueryBuildRange         criteriaTimeMaterial;
    QueryBuildRange         criteriaInternal;
    QueryBuildRange         criteriaCost;
    QueryBuildRange         criteriaInvestment;
    QueryBuildRange         criteriaTime;
    QueryBuildRange         criteriaSorting1;
    QueryBuildRange         criteriaSorting2;
    QueryBuildRange         criteriaSorting3;
    QueryBuildRange         criteriaGroupId;
    QueryBuildRange         criteriaCustAccount;

    // Range projCategoryId
    QueryBuildRange         criteriaCategoryGroupId;

    // Range projItemTrans
    QueryBuildRange         criteriaItemId;
    QueryBuildRange         criteriaTransDate;
    QueryBuildRange         criteriaCategoryId;
    QueryBuildRange         criteriaTransStatus1;
    QueryBuildRange         criteriaTransStatus2;
    QueryBuildRange         criteriaTransId;
    QueryBuildRange         criteriaRefId;
    QueryBuildRange         criteriaService;
    QueryBuildRange         criteriaServiceItemReq;
    QueryBuildRange         criteriaSalesCurrency;
    QueryBuildRange         criteriaActivityId;

    //Range LedgerTransDate
    QueryBuildRange         criteriaLedgerTransDate;

    InventDimCtrl_Frm       inventDimFormSetup;

    [FormObservable]
    TransDate               ledgerFromDate;
    [FormObservable]
    TransDate               ledgerToDate;

    ProjInvoiceControl      projInvoiceControl;
    boolean                 linkInvoiceControl;

    ProjStatistic           projStatistic;
    boolean                 linkProjStatistic;

    ProjCostControl         projCostControl;
    boolean                 linkProjCostControl;

    ProjCashFlow            projCashFlow;
    boolean                 linkProjCashFlow;

    boolean                 linkProjService;
    boolean                 linkProjServiceItemReq;

    boolean                 m_bLinkProjFinancialStatisitc;

    Map                     salesAmountCache;
    Map                     costAmountCache;

    ProjTransIdBase         transId;
    ProjItemTransId         refTransid;

    SMAServiceOrderTable    serviceOrderTable;

    boolean                 rangeCategoryGroup;
    boolean                 rangeLedgerTransDate;

    ProjCreateAdjTraceTree  traceTree;
    ProjTransIdBase         selectionTransId;
    boolean                 callerTree;

    // Hold all ProjItemTransId in the subcontract
    str                     psaRefTransidArray;

    TaxExciseTypeController_IN      taxExciseTypeController;

    private boolean enableProjMultipleContractLinesForProjectFeature = ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled();

    #ISOCountryRegionCodes

}
]]></Source>
			</Method>
			<Method>
				<Name>bookRefresh</Name>
				<Source><![CDATA[
    void bookRefresh()
    {
        projItemTrans_ds.refresh();
        projItemTrans_ds.reread();
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    Query buildQuery()
    {
        QueryBuildRange          qrProjTransId;
        QueryBuildDataSource     taxExtensionInDataSource;
        SMAServiceOrderLine      serviceOrderLine;
        SalesLine                salesLine;
        QueryBuildDataSource     qbsDim;
        PSATmpProjInvoiceSummary tSummary;

        Query                   q = new Query();

        qb_projItemTrans    = q.addDataSource(tableNum(ProjItemTrans));

        qbsDim = qb_projItemTrans.addDataSource(tableNum(InventDim));
        qbsDim.name(inventDim_ds.name());
        qbsDim.addLink(fieldNum(ProjItemTrans, InventDimId), fieldNum(InventDim, InventDimId));
        qbsDim.fetchMode(0);
        qbsDim.joinMode(JoinMode::InnerJoin);
        qbsDim.addSortIndex(indexNum(InventDim,DimIdIdx));
        qbsDim.indexIsHint(true);

        criteriaItemId      = qb_projItemTrans.addRange(fieldNum(ProjItemTrans, ItemId));
        criteriaTransDate   = qb_projItemTrans.addRange(fieldNum(ProjItemTrans, TransDate));
        criteriaCategoryId  = qb_projItemTrans.addRange(fieldNum(ProjItemTrans, CategoryId));
        criteriaProjId      = qb_projItemTrans.addRange(fieldNum(ProjItemTrans, ProjId));
        criteriaActivityId  = qb_projItemTrans.addRange(fieldNum(ProjItemTrans, ActivityNumber));
        criteriaTransId     = qb_projItemTrans.addRange(fieldNum(ProjItemTrans, ProjTransId));
        criteriaRefId       = qb_projItemTrans.addRange(fieldNum(ProjItemTrans, ProjTransIdRef));
        criteriaSalesCurrency = qb_projItemTrans.addRange(fieldNum(ProjItemTrans, CurrencyId));

         // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            taxExtensionInDataSource = qb_projItemTrans.addDataSource(tableNum(ProjItemTransTaxExtensionIN));
            taxExtensionInDataSource.relations(true);
            taxExtensionInDataSource.joinMode(JoinMode::OuterJoin);
        }
        // </GIN>

        qb_projItemTransSale1    = qb_projItemTrans.addDataSource(tableNum(ProjItemTransSale));
        qb_projItemTransSale1.relations(true);
        qb_projItemTransSale1.joinMode(JoinMode::ExistsJoin);
        criteriaTransStatus1 = qb_projItemTransSale1.addRange(fieldNum(ProjItemTransSale, TransStatus));

        // Used for partial invoice which requires to joins to the table
        qb_projItemTransSale2 = qb_projItemTrans.addDataSource(tableNum(ProjItemTransSale));
        qb_projItemTransSale2.relations(true);
        qb_projItemTransSale2.joinMode(JoinMode::ExistsJoin);
        criteriaTransStatus2 = qb_projItemTransSale2.addRange(fieldNum(ProjItemTransSale, TransStatus));
        qb_projItemTransSale2.enabled(false);

        // Filter by the project Id
        if (element.args().dataset() == tableNum(PSATmpProjInvoiceSummary))
        {
            tSummary = element.args().record();
            qb_projItemTrans.addRange(fieldNum(ProjItemTrans,ProjId)).value(tSummary.ProjId);
        }

        if (rangeCategoryGroup)
        {
            qb_ProjCategory = qb_projItemTrans.addDataSource(tableNum(ProjCategory));
            qb_ProjCategory.addLink(fieldNum(ProjItemTrans, CategoryId), fieldNum(ProjCategory, CategoryId));
            qb_ProjCategory.fetchMode(0);
            qb_ProjCategory.joinMode(JoinMode::ExistsJoin);
            criteriaCategoryGroupId = qb_ProjCategory.addRange(fieldNum(ProjCategory, CategoryGroupId));
        }

        if (linkProjServiceItemReq || linkProjService) // either ItemReq and ItemCom exists or not
        {
            if (linkProjServiceItemReq && linkProjService) // both ItemReq and ItemCom exists
            {
                // setting projId criteria to the correct
                criteriaProjId  = qb_projItemTrans.addRange(fieldNum(ProjItemTrans, ProjId));

                // clear range ProjTransId
                qrProjTransId    = qb_projItemTrans.findRange(fieldNum(ProjItemTrans, ProjTransIdRef));

                while (qrProjTransId)
                {
                    qb_projItemTrans.clearRange(fieldNum(ProjItemTrans, ProjTransIdRef));
                    qrProjTransId    = qb_projItemTrans.findRange(fieldNum(ProjItemTrans, ProjTransIdRef));
                }
                // Add range for each found
                while select ProjTransId from salesLine
                    where salesLine.SalesType == SalesType::ItemReq &&
                          salesLine.ProjId    == serviceOrderTable.ProjId &&
                          salesLine.ServiceOrderId == serviceOrderTable.ServiceOrderId &&
                          salesLine.SalesStatus    == SalesStatus::Invoiced
                {
                    qb_projItemTrans.addRange(fieldNum(ProjItemTrans, ProjTransIdRef)).value(salesLine.ProjTransId);
                }

                while select ProjTransId from serviceOrderLine
                    where serviceOrderLine.ServiceOrderId     == serviceOrderTable.ServiceOrderId &&
                          serviceOrderLine.TransactionType    == SMATransactionType::Item  &&
                          serviceOrderLine.ServiceOrderStatus == SMAServiceOrderStatus::Posted
                {
                    qb_projItemTrans.addRange(fieldNum(ProjItemTrans, ProjTransIdRef)).value(serviceOrderLine.ProjTransId);
                }
            }
            else
            {
                if (linkProjServiceItemReq) // Item Requirement
                {
                    qb_ProjServiceItemReq = qb_projItemTrans.addDataSource(tableNum(SalesLine));

                    qb_ProjServiceItemReq.addLink(fieldNum(ProjItemTrans, ProjTransIdRef), fieldNum(SalesLine, ProjTransId));
                    qb_ProjServiceItemReq.addLink(fieldNum(ProjItemTrans, ProjId), fieldNum(SalesLine, ProjId));
                    qb_ProjServiceItemReq.fetchMode(0);
                    qb_ProjServiceItemReq.joinMode(JoinMode::InnerJoin);

                    criteriaService = qb_ProjServiceItemReq.addRange(fieldNum(SalesLine, ServiceOrderId));
                    criteriaProjId  = qb_ProjServiceItemReq.addRange(fieldNum(SalesLine, ProjId));
                }

                if (linkProjService) // Item consumption(journal)
                {
                    qb_ProjService = qb_projItemTrans.addDataSource(tableNum(SMAServiceOrderLine));

                    qb_ProjService.addLink(fieldNum(ProjItemTrans, ProjTransIdRef), fieldNum(SMAServiceOrderLine, ProjTransId));
                    qb_ProjService.addLink(fieldNum(ProjItemTrans, ProjId), fieldNum(SMAServiceOrderLine, ProjId));
                    qb_ProjService.fetchMode(0);
                    qb_ProjService.joinMode(JoinMode::InnerJoin);

                    criteriaService = qb_ProjService.addRange(fieldNum(SMAServiceOrderLine, ServiceOrderId));
                    criteriaProjId  = qb_ProjService.addRange(fieldNum(SMAServiceOrderLine, ProjId));
                }
            }
        }
        else
        {
            qb_projTable = qb_projItemTrans.addDataSource(tableNum(ProjTable));
            qb_projTable.addLink(fieldNum(ProjItemTrans, ProjId), fieldNum(ProjTable, ProjId));
            qb_projTable.fetchMode(0);
            qb_projTable.joinMode(JoinMode::ExistsJoin);

            criteriaProjInvoiceProjId = qb_projTable.addRange(fieldNum(ProjTable, ProjInvoiceProjId));
            criteriaProjId            = qb_projTable.addRange(fieldNum(ProjTable, ProjId));
            criteriaWIPProjId         = qb_projTable.addRange(fieldNum(ProjTable, wipProject));

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                criteriaFixedPrice        = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaTimeMaterial      = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaInternal          = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaCost              = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaInvestment        = qb_projTable.addRange(fieldNum(ProjTable, Type));
                criteriaTime              = qb_projTable.addRange(fieldNum(ProjTable, Type));
            }
            criteriaSorting1          = qb_projTable.addRange(fieldNum(ProjTable, SortingId), 1);
            criteriaSorting2          = qb_projTable.addRange(fieldNum(ProjTable, SortingId), 2);
            criteriaSorting3          = qb_projTable.addRange(fieldNum(ProjTable, SortingId), 3);
            criteriaGroupId           = qb_projTable.addRange(fieldNum(ProjTable, ProjGroupId));
            criteriaCustAccount       = qb_projTable.addRange(fieldNum(ProjTable, CustAccount));
        }

        if (rangeLedgerTransDate)
        {
            qb_ProjTransPosting = qb_projItemTrans.addDataSource(tablenum(ProjTransPosting));
            qb_ProjTransPosting.addLink(fieldnum(ProjItemTrans,ProjTransId), fieldnum(ProjTransPosting, TransId));
            qb_ProjTransPosting.joinMode(JoinMode::ExistsJoin);

            criteriaLedgerTransDate = qb_ProjTransPosting.addRange(fieldnum(ProjTransPosting,LedgerTransDate));
        }

        return q;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQueryLineproperty</Name>
				<Source><![CDATA[
    Query buildQueryLineproperty(JoinMode _joinMode)
    {
        Query q = element.buildQuery();

        if (selectInvoiceStatus.selection() == projSelectTrans::ToBeInvoiced)
        {
            qb_ProjLineProperty = qb_projItemTrans.addDataSource(tableNum(ProjLineProperty));

            qb_ProjLineProperty.addLink(fieldNum(ProjItemTrans, LinePropertyId), fieldNum(ProjLineProperty, LinePropertyId));
            qb_ProjLineProperty.fetchMode(0);

            criteriatoBeInvoiced = qb_ProjLineProperty.addRange(fieldNum(ProjLineProperty, ToBeInvoiced));
            criteriatoBeInvoiced.value(queryValue(NoYes::No));

            qb_ProjLineProperty.joinMode(_joinMode);
        }
        else if (selectInvoiceStatus.selection() == projSelectTrans::NoChargeable)
        {
            QueryBuildDataSource qbds = qb_projItemTrans.addDataSource(tableNum(ProjItemNonChargeableTrans));
            qbds.relations(false);
            qbds.addLink(fieldNum(ProjItemTrans, ProjTransId), fieldNum(ProjItemNonChargeableTrans, ProjTransId));
            qbds.joinMode(_joinMode);
        }

        return q;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        this.initDataSet();

        super();

        ledgerFromDate  = dateNull();
        ledgerToDate    = dateMax();

        if (element.args().dataset() == tableNum(TmpProjStatistic))
        {
            priceAmount.selection(PriceAmount::LedgerUpdate);
        }

        if (element.args().dataset() == tableNum(TmpProjCashFlow))
        {
            priceAmount.selection(PriceAmount::LedgerUpdate);
        }

        element.setPriceAmount();
        element.setVisible();

        if (this.args().dataset() == tableNum(HierarchyTreeTable) || this.args().dataset() == tableNum(ProjTable))
        {
            this.setLinkCriteria();
        }

        element.updateDesign(InventDimFormDesignUpdate::Init);

        salesAmountCache    = new Map(Types::String, Types::Real);
        costAmountCache     = new Map(Types::String, Types::Real);

        traceTree = new ProjCreateAdjTraceTree(ctrlTree, ProjTransType::Item);

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            element.setVisibleTaxInformation_IN();
        }
        // </GIN>

        // <GTE>
        boolean isGTEEnabled = TaxSolutionScopeIntegrationUtil::isCompanyEnabled();
        TransTaxInformation.visible(TaxParameters::checkTaxParameters_IN() || isGTEEnabled);
        TaxGroupId.visible(!isGTEEnabled);
        TaxItemGroupId.visible(!isGTEEnabled);
        // </GTE>

        SubcontractLine.visible(FeatureStateProvider::isFeatureEnabled(ProjEnableSubcontractActualsPostingFeature::instance()));

        TransIdPackSlip.visible(FeatureStateProvider::isFeatureEnabled(ProjCancelItemReqPackingSlipFeature::instance()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDataSet</Name>
				<Source><![CDATA[
    void initDataSet()
    {
        ProjItemTrans           projItemTransLink;
        SalesLine               salesLineLink;
        PurchLine               purchLineLink;
        PurchReqLine            purchReqLineLink;
        PurchRFQCaseLine        purchRFQCaseLineLink;

        ProjTransPosting        projTransPosting;

        InventJournalTrans      inventJournalTrans;

        SMAServiceOrderLine     serviceOrderLine;
        container               existTransTypesPosted;

        TmpProjPeriodic         tmpProjPeriodic;
        TmpProjAdjustment       tmpProjAdjustment;
        TmpProjPeriodicLedger   tmpProjPeriodicLedger;

        ProdTable                   prodTable;
        ProdTableProj               prodTableProj;
        ProdJournalBOM              prodJournalBOM;
        ProdBOM                     prodBOM;
        CostControlTransCommittedCost   committedCostTable;

        linkProjService     = false;
        switch (element.args().dataset())
        {
            case tableNum(ProjItemTrans):
                projItemTransLink   = element.args().record();
                transId             = projItemTransLink.ProjTransId;
                break;

            case tableNum(SalesLine):
                salesLineLink       = element.args().record();
                refTransid          = salesLineLink.ProjTransId;
                break;

            case tableNum(PurchLine):
                purchLineLink       = element.args().record();
                refTransid          = purchLineLink.ProjTransId;
                break;

            case tableNum(PurchReqLine):
                purchReqLineLink    = element.args().record();
                refTransid          = purchReqLineLink.ProjTransId;
                break;

            case tableNum(PurchRFQCaseLine):
                purchRFQCaseLineLink = element.args().record();
                refTransid           = purchRFQCaseLineLink.ProjTransId;
                break;

            case(tableNum(ProjTransPosting)):
                projTransPosting    = element.args().record();
                transId             = projTransPosting.TransId;
                break;

            case(tableNum(SMAServiceOrderLine)):
                serviceOrderLine    = element.args().record();
                transId             = serviceOrderLine.ProjTransId;
                break;

            case(tableNum(InventJournalTrans)):
                inventJournalTrans  = element.args().record();
                transId             = inventJournalTrans.ProjTransId;
                break;

            case(tableNum(ProdTable)):
                prodTable           = element.args().record();
                transId             = prodTable.ProjTransId;
                break;

            case(tableNum(ProdTableProj)):
                prodTableProj  = element.args().record();
                transId                     = prodTableProj.ProjTransId;
                break;

            case(tableNum(ProdJournalBOM)):
                prodJournalBOM      = element.args().record();
                transId             = prodJournalBOM.ProjTransId;
                break;

            case tableNum(ProdBOM):
                prodBOM             = element.args().record();
                refTransid          = prodBOM.ProjTransId;
                break;

            case(tableNum(TmpProjPeriodic)):
                tmpProjPeriodic     = element.args().record();
                transId             = tmpProjPeriodic.TransId;
                break;

            case(tableNum(TmpProjPeriodicLedger)):
                tmpProjPeriodicLedger   =  element.args().record();
                transId                 = tmpProjPeriodicLedger.TransId;
                break;

            case(tableNum(TmpProjAdjustment)):
                tmpProjAdjustment   = element.args().record();
                transId             = tmpProjAdjustment.TransId;
                break;

            case(tableNum(SMAServiceOrderTable)):
                serviceOrderTable = element.args().record();
                existTransTypesPosted  = SMAServiceOrderLine::existTransTypePosted(serviceOrderTable.ServiceOrderId, NoYes::No, NoYes::Yes, NoYes::Yes, NoYes::No, NoYes::No);
                linkProjService        = conPeek(existTransTypesPosted, 2); // Item Consumption
                linkProjServiceItemReq = conPeek(existTransTypesPosted, 3); // Item Requirement
                break;

            case(tableNum(CostControlTransCommittedCost)):
                committedCostTable = element.args().record();
                refTransid=committedCostTable.ProjTransId;
                break;

            // Hold  all the ProjItemTransId in the subcontract
            case(tableNum(PSATmpSubcontractRetainage)):
                psaRefTransidArray          = element.args().parm();
                break;

            // Called from the CtrlTree from AdjustmentTrace TabPage
            default:
                callerTree = true;
            }

            if ((!element.args().caller()) || (element.args().caller() && element.args().caller().name() != formStr(ProjTransItem)))
            {
                callerTree = false;
            }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    Object inventDimSetupObject()
    {
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkInvoiceControl</Name>
				<Source><![CDATA[
    void linkInvoiceControl()
    {
        #define.star('*')

        if (projInvoiceControl.parmProjTransDateFrom() || projInvoiceControl.parmProjTransDateTo())
        {
            criteriaTransDate.value(SysQuery::range(projInvoiceControl.parmProjTransDateFrom(), projInvoiceControl.parmProjTransDateTo()));
        }

        if (projInvoiceControl.parmItemId())
        {
            criteriaItemId.value(projInvoiceControl.parmItemId());
        }

        if (projInvoiceControl.parmProjCategoryId())
        {
            criteriaCategoryId.value(projInvoiceControl.parmProjCategoryId());
        }

        if (projInvoiceControl.parmCategoryGroupId())
        {
            criteriaCategoryGroupId.value(projInvoiceControl.parmCategoryGroupId());
        }

        if (!element.enableProjMultipleContractLinesForProjectFeature)
        {
            if (projInvoiceControl.parmFixedPrice())
            {
                criteriaFixedPrice.value(queryValue(ProjType::FixedPrice));
            }
            else
            {
                criteriaFixedPrice.value(queryValue(SysQuery::valueEmptyString()));
            }

            if (projInvoiceControl.parmTimeMaterial())
            {
                criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
            }
            else
            {
                criteriaTimeMaterial.value(queryValue(SysQuery::valueEmptyString()));
            }

            if (projInvoiceControl.parmInternalCost())
            {
                criteriaInternal.value(queryValue(ProjType::Cost));
            }
            else
            {
                criteriaInternal.value(queryValue(SysQuery::valueEmptyString()));
            }

            if (projInvoiceControl.parmInternalCost())
            {
                criteriaCost.value(queryValue(ProjType::Internal));
            }
            else
            {
                criteriaCost.value(queryValue(SysQuery::valueEmptyString()));
            }

            if (projInvoiceControl.parmInvestment())
            {
                criteriaInvestment.value(queryValue(ProjType::Investment));
            }
            else
            {
                criteriaInvestment.value(queryValue(SysQuery::valueEmptyString()));
            }
        }

        if (projInvoiceControl.parmProjId())
        {
            criteriaProjId.value(queryValue(projInvoiceControl.parmProjId()));
        }

        if (projInvoiceControl.parmProjInvoiceProjId())
        {
            criteriaProjInvoiceProjId.value(queryValue(projInvoiceControl.parmProjInvoiceProjId()));
        }

        if (projInvoiceControl.parmSalesCurrency())
        {
            criteriaSalesCurrency.value(queryValue(projInvoiceControl.parmSalesCurrency()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkProjCashFlow</Name>
				<Source><![CDATA[
    void linkProjCashFlow()
    {
        #define.star('*')

        if (projCashFlow.parmItem())
        {
            if (projCashFlow.parmProjectFromDate() || projCashFlow.parmProjectToDate())
            {
                criteriaTransDate.value(SysQuery::range(projCashFlow.parmProjectFromDate(), projCashFlow.parmProjectToDate()));
            }

            if (projCashFlow.parmitemId())
            {
                criteriaItemId.value(projCashFlow.parmitemId());
            }

            if (projCashFlow.parmCategoryId())
            {
                criteriaCategoryId.value(projCashFlow.parmCategoryId());
            }

            if (projCashFlow.parmCategoryGroupId())
            {
                criteriaCategoryGroupId.value(projCashFlow.parmCategoryGroupId());
            }

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                if (projCashFlow.parmFixedPrice())
                {
                    criteriaFixedPrice.value(queryValue(ProjType::FixedPrice));
                }

                if (projCashFlow.parmTimeMaterial())
                {
                    criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
                }

                if (projCashFlow.parmInternalCost())
                {
                    criteriaInternal.value(queryValue(ProjType::Cost));
                }

                if (projCashFlow.parmInternalCost())
                {
                    criteriaCost.value(queryValue(ProjType::Internal));
                }

                if (projCashFlow.parmInvestment())
                {
                    criteriaInvestment.value(queryValue(ProjType::Investment));
                }

                if (projCashFlow.parmTimeProject())
                {
                    criteriaTime.value(queryValue(ProjType::Time));
                }

                if (!(projCashFlow.parmFixedPrice()   ||
                        projCashFlow.parmTimeMaterial() ||
                        projCashFlow.parmInternalCost() ||
                        projCashFlow.parmInvestment()   ||
                        projCashFlow.parmTimeProject()))
                {
                    criteriaInvestment.value(queryValue(SysQuery::valueEmptyString()));
                }
            }

            if (projCashFlow.parmSorting1())
            {
                criteriaSorting1.value(queryValue(projCashFlow.parmSorting1()));
            }

            if (projCashFlow.parmSorting2())
            {
                criteriaSorting2.value(queryValue(projCashFlow.parmSorting2()));
            }

            if (projCashFlow.parmSorting3())
            {
                criteriaSorting3.value(queryValue(projCashFlow.parmSorting3()));
            }

            if (projCashFlow.parmCustAccount())
            {
                criteriaCustAccount.value(queryValue(projCashFlow.parmCustAccount()));
            }

            if (projCashFlow.parmProjGroupId())
            {
                criteriaGroupId.value(queryValue(projCashFlow.parmProjGroupId()));
            }

            if (projCashFlow.parmProjTree())
            {
                criteriaProjId.value(projCashFlow.parmProjId()+ #star);
            }
            else
            {
                if (projCashFlow.parmProjId())
                {
                    criteriaProjId.value(queryValue(projCashFlow.parmProjId()));
                }
            }

            if (projCashFlow.parmProjWIPId())
            {
                criteriaWIPProjId.value(queryValue(projCashFlow.parmProjWIPId()));
            }

            if (projCashFlow.parmProjInvoiceProjId())
            {
                criteriaProjInvoiceProjId.value(queryValue(projCashFlow.parmProjInvoiceProjId()));
            }
        }
        else
        {
            criteriaProjId.value(queryValue(SysQuery::valueEmptyString()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkProjCostControl</Name>
				<Source><![CDATA[
    void linkProjCostControl()
    {
        #define.star('*')

        if (projCostControl.parmItem())
        {
            ledgerFromDate  = projCostControl.parmLedgerTransDateFrom();
            ledgerToDate    = projCostControl.parmLedgerTransDateTo();

            ledgerDates.visible(true);

            if (ledgerFromDate && (ledgerFromDate != dateNull()))
            {
                ledgerDateFrom.dateValue(ledgerFromDate);
            }

            if (ledgerToDate && (ledgerToDate != dateMax()))
            {
                ledgerDateTo.dateValue(ledgerToDate);
            }

            if (! (ledgerFromDate && ledgerToDate))
            {
                ledgerDates.visible(false);
            }

            if (projCostControl.parmProjTransDateFrom() || projCostControl.parmProjTransDateTo())
            {
                criteriaTransDate.value(SysQuery::range(projCostControl.parmProjTransDateFrom(), projCostControl.parmProjTransDateTo()));
            }

            if (projCostControl.parmItemId())
            {
                criteriaItemId.value(projCostControl.parmItemId());
            }

            if (projCostControl.parmProjCategoryId())
            {
                criteriaCategoryId.value(projCostControl.parmProjCategoryId());
            }

            if (projCostControl.parmCategoryGroupId())
            {
                criteriaCategoryGroupId.value(projCostControl.parmCategoryGroupId());
            }

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                if (projCostControl.parmFixedPrice())
                {
                    criteriaFixedPrice.value(queryValue(ProjType::FixedPrice));
                }

                if (projCostControl.parmTimeMaterial())
                {
                    criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
                }

                if (projCostControl.parmInternalCost())
                {
                    criteriaInternal.value(queryValue(ProjType::Cost));
                }

                if (projCostControl.parmInternalCost())
                {
                    criteriaCost.value(queryValue(ProjType::Internal));
                }

                if (projCostControl.parmInvestment())
                {
                    criteriaInvestment.value(queryValue(ProjType::Investment));
                }

                if (projCostControl.parmTime())
                {
                    criteriaTime.value(queryValue(ProjType::Time));
                }

                if (!(projCostControl.parmFixedPrice()   ||
                        projCostControl.parmTimeMaterial() ||
                        projCostControl.parmInternalCost() ||
                        projCostControl.parmInvestment()   ||
                        projCostControl.parmTime()))
                {
                    criteriaInvestment.value(queryValue(SysQuery::valueEmptyString()));
                }
            }

            if (projCostControl.parmProjSorting1())
            {
                criteriaSorting1.value(queryValue(projCostControl.parmProjSorting1()));
            }

            if (projCostControl.parmProjSorting2())
            {
                criteriaSorting2.value(queryValue(projCostControl.parmProjSorting2()));
            }

            if (projCostControl.parmProjSorting3())
            {
                criteriaSorting3.value(queryValue(projCostControl.parmProjSorting3()));
            }

            if (projCostControl.parmCustomerAccount())
            {
                criteriaCustAccount.value(queryValue(projCostControl.parmCustomerAccount()));
            }

            if (projCostControl.parmProjGroupId())
            {
                criteriaGroupId.value(queryValue(projCostControl.parmProjGroupId()));
            }

            if (projCostControl.parmProjTree())
            {
                criteriaProjId.value(projCostControl.parmProjId()+ #star);
            }
            else
            {
                if (projCostControl.parmProjId())
                {
                    criteriaProjId.value(queryValue(projCostControl.parmProjId()));
                }
            }

            if (projCostControl.parmProjWIPId())
            {
                criteriaWIPProjId.value(queryValue(projCostControl.parmProjWIPId()));
            }

            if (projCostControl.parmProjInvoiceProjId())
            {
                criteriaProjInvoiceProjId.value(queryValue(projCostControl.parmProjInvoiceProjId()));
            }
        }
        else
        {
            criteriaProjId.value(queryValue(SysQuery::valueEmptyString()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkProjStatistic</Name>
				<Source><![CDATA[
    void linkProjStatistic()
    {
        #define.star('*')

        if (projStatistic.parmItem())
        {
            ledgerFromDate  = projStatistic.parmLedgerFromDate();
            ledgerToDate    = projStatistic.parmLedgerToDate();

            ledgerDates.visible(true);

            if (ledgerFromDate && (ledgerFromDate != dateNull()))
            {
                ledgerDateFrom.dateValue(ledgerFromDate);
            }

            if (ledgerToDate && (ledgerToDate != dateMax()))
            {
                ledgerDateTo.dateValue(ledgerToDate);
            }

            if (! (ledgerFromDate && ledgerToDate))
            {
                ledgerDates.visible(false);
            }

            if (projStatistic.parmProjFromDate() || projStatistic.parmProjToDate())
            {
                criteriaTransDate.value(SysQuery::range(projStatistic.parmProjFromDate(), projStatistic.parmProjToDate()));
            }

            if (projStatistic.parmLedgerFromDate() || projStatistic.parmLedgerToDate())
            {
                criteriaLedgerTransDate.value(SysQuery::range(projStatistic.parmLedgerFromDate(), projStatistic.parmLedgerToDate()));
            }

            if (projStatistic.parmitemId())
            {
                criteriaItemId.value(projStatistic.parmitemId());
            }

            if (projStatistic.parmProjCategoryId())
            {
                criteriaCategoryId.value(projStatistic.parmProjCategoryId());
            }

            if (projStatistic.parmCategoryGroupId())
            {
                criteriaCategoryGroupId.value(projStatistic.parmCategoryGroupId());
            }

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                if (projStatistic.parmFixedPrice())
                {
                    criteriaFixedPrice.value(queryValue(ProjType::FixedPrice));
                }

                if (projStatistic.parmTimeMaterial())
                {
                    criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
                }

                if (projStatistic.parmInternalCost())
                {
                    criteriaInternal.value(queryValue(ProjType::Cost));
                }

                if (projStatistic.parmInternalCost())
                {
                    criteriaCost.value(queryValue(ProjType::Internal));
                }

                if (projStatistic.parmInvestment())
                {
                    criteriaInvestment.value(queryValue(ProjType::Investment));
                }

                if (projStatistic.parmTime())
                {
                    criteriaTime.value(queryValue(ProjType::Time));
                }

                if (!(projStatistic.parmFixedPrice()   ||
                    projStatistic.parmTimeMaterial() ||
                    projStatistic.parmInternalCost() ||
                    projStatistic.parmInvestment()   ||
                    projStatistic.parmTime()))
                {
                    criteriaInvestment.value(queryValue(SysQuery::valueEmptyString()));
                }
            }

            if (projStatistic.parmSorting1())
            {
                criteriaSorting1.value(queryValue(projStatistic.parmSorting1()));
            }

            if (projStatistic.parmSorting2())
            {
                criteriaSorting2.value(queryValue(projStatistic.parmSorting2()));
            }

            if (projStatistic.parmSorting3())
            {
                criteriaSorting3.value(queryValue(projStatistic.parmSorting3()));
            }

            if (projStatistic.parmCustAccount())
            {
                criteriaCustAccount.value(queryValue(projStatistic.parmCustAccount()));
            }

            if (projStatistic.parmProjGroupId())
            {
                criteriaGroupId.value(queryValue(projStatistic.parmProjGroupId()));
            }

            if (projStatistic.parmGrantID())
            {
                qb_ProjGrantView = SysQuery::findOrCreateDataSource(projItemTrans_ds.query(), tableNum(ProjGrantView), tableNum(ProjItemTrans));
                qb_ProjGrantView.addLink(fieldNum(ProjItemTrans,ProjId), fieldNum(ProjGrantView, ProjId));
				criteriaGrantID = qb_ProjGrantView.addRange(fieldNum(ProjGrantView, GrantId));
				criteriaGrantID.value(queryValue(projStatistic.parmGrantID()));
            }
			else if (projStatistic.parmProjTree())
            {
                criteriaProjId.value(projStatistic.parmProjId()+ #star);
            }
            else
            {
                if (projStatistic.parmProjId())
                {
                    criteriaProjId.value(queryValue(projStatistic.parmProjId()));
                }
            }

            if (projStatistic.parmProjWIPId())
            {
                criteriaWIPProjId.value(queryValue(projStatistic.parmProjWIPId()));
            }

            if (projStatistic.parmProjInvoiceProjId())
            {
                criteriaProjInvoiceProjId.value(queryValue(projStatistic.parmProjInvoiceProjId()));
            }
        }
        else
        {
            criteriaProjId.value(queryValue(SysQuery::valueEmptyString()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>projCashFlow</Name>
				<Source><![CDATA[
    ProjCashFlow projCashFlow()
    {
        return projCashFlow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projStatistic</Name>
				<Source><![CDATA[
    ProjStatistic projStatistic()
    {
        return projStatistic;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PSALinkProjFinancialStatistic</Name>
				<Source><![CDATA[
    void PSALinkProjFinancialStatistic()
    {
        PSATmpProjFinancialStatistic tTmpProjStatistic;
        PSATmpStr                    sProjId;
        TransDate                    dLedgerFromDate;
        TransDate                    dLedgerToDate;
        #define.star('*')

        void setProjInvoiceCriteria()
        {
            criteriaProjInvoiceProjId.value(queryValue(projStatistic.parmProjInvoiceProjId()));

            if (!element.enableProjMultipleContractLinesForProjectFeature)
            {
                if (projStatistic.parmFixedPrice())
                {
                    criteriaFixedPrice.value(queryValue(ProjType::FixedPrice));
                }
                if (projStatistic.parmTimeMaterial())
                {
                    criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
                }
                if (projStatistic.parmInternalCost())
                {
                    criteriaInternal.value(queryValue(ProjType::Cost));
                }
                if (projStatistic.parmInternalCost())
                {
                    criteriaCost.value(queryValue(ProjType::Internal));
                }
                if (projStatistic.parmInvestment())
                {
                    criteriaInvestment.value(queryValue(ProjType::Investment));
                }
                if (projStatistic.parmTime())
                {
                    criteriaTime.value(queryValue(ProjType::Time));
                }
            }
        }

        tTmpProjStatistic = element.args().record();
        sProjId = tTmpProjStatistic.ProjViewId;

        dLedgerFromDate  = projStatistic.parmLedgerFromDate();
        dLedgerToDate    = projStatistic.parmLedgerToDate();

        ledgerDates.visible(true);

        if (dLedgerFromDate && (dLedgerFromDate != dateNull()))
        {
            ledgerDateFrom.dateValue(dLedgerFromDate);
        }

        if (dLedgerToDate && (dLedgerToDate != dateMax()))
        {
            ledgerDateTo.dateValue(dLedgerToDate);
        }

        if (!(dLedgerFromDate && dLedgerToDate))
        {
            ledgerDates.visible(false);
        }

        if (projStatistic.parmProjFromDate() || projStatistic.parmProjToDate())
        {
            criteriaTransDate.value(strFmt('%1..%2',queryValue(projStatistic.parmProjFromDate()),
                                                    queryValue(projStatistic.parmProjToDate())));
        }

        if (tTmpProjStatistic.ProjTotal == PSAProjTotal::None)
        {
            criteriaProjId.value(queryValue(sProjId));
        }
        else if (tTmpProjStatistic.ProjTotal == PSAProjTotal::LevelTotal)
        {
            if (projStatistic.psaParmDisplayLevel() == 0)
            {
                if (projStatistic.parmProjInvoiceProjId())
                {
                    setProjInvoiceCriteria();
                }
                else if (projStatistic.parmProjId())
                {
                    if (projStatistic.parmProjTree())
                    {
                        criteriaProjId.value(sProjId + #star);
                    }
                    else
                    {
                        criteriaProjId.value(sProjId);
                    }
                }
            }
            else
            {
                criteriaProjId.value(sProjId + #star);
            }
        }
        else
        {
            if (projStatistic.parmProjInvoiceProjId() && tTmpProjStatistic.ProjTotal == PSAProjTotal::GrandTotal)
            {
                setProjInvoiceCriteria();
            }
            else
            {
                criteriaProjId.value(strLTrim(sProjId) + #star);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedTransId</Name>
				<Source><![CDATA[
    ProjTransIdBase selectedTransId()
    {
        return selectionTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setButtonAccess</Name>
				<Source><![CDATA[
    void setButtonAccess()
    {
        ProjItemTrans       projItemTransSelected;
        ProjItemTransSale   projItemTransSaleCheck;
        boolean             projReverseTransEnabled;
        boolean             projAdjustmentEnabled;
        boolean             committedCostEnabled;
        boolean             projAdjTraceEnabled;
        ProjItemTrans       childProjItemTrans;
        boolean             lockFieldsForAdjustments;
        boolean             CDSLockingOptionAdjustments = ProjCDSLockingOptionTable::get(ProjCDSLockingOption::Adjustments);

        for (projItemTransSelected = projItemTrans_ds.getFirst(true)
            ? projItemTrans_ds.getFirst(true)
            : projItemTrans_ds.cursor(); projItemTransSelected; projItemTransSelected = projItemTrans_ds.getNext())
        {
            if (! projAdjustmentEnabled)
            {
                lockFieldsForAdjustments = CDSLockingOptionAdjustments ? Project::isProjectExternallyManaged(projItemTransSelected.ProjId) : false;
                projAdjustmentEnabled = ProjTrans::newProjItemTrans(projItemTransSelected).adjustable() && !lockFieldsForAdjustments;
            }

            if (! committedCostEnabled)
            {
                committedCostEnabled = true;
            }

            while select projItemTransSaleCheck
                where projItemTransSaleCheck.ProjTransId == projItemTransSelected.ProjTransId
            {
                if (! projReverseTransEnabled)
                {
                    projReverseTransEnabled = projItemTransSaleCheck.canBeMarkedForCreditNote();
                }
            }

            if (! projAdjTraceEnabled)
            {
                projAdjTraceEnabled = projItemTransSelected.AdjRefTransId ? true : false;
                if (! projAdjTraceEnabled)
                {
                    select firstonly RecId from childProjItemTrans
                        where childProjItemTrans.AdjRefTransId == projItemTransSelected.ProjTransId;

                    projAdjTraceEnabled = childProjItemTrans.RecId ? true : false;
                }
            }
        }

        projReverseTrans.enabled(projReverseTransEnabled);
        projAdjustmentItem.enabled(projAdjustmentEnabled);
        costControlCommittedCost.enabled(committedCostEnabled);
        transAdjustmentTrace.enabled(projAdjTraceEnabled);

        projItemTransSelected = projItemTrans_ds.cursor();
        boolean allowSplitTransaction = ProjSplitTransaction::canSplitTransaction(projItemTransSelected);
        SplitTransaction.enabled(allowSplitTransaction);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLinkCriteria</Name>
				<Source><![CDATA[
    void setLinkCriteria()
    {
        #define.star("*")

        ProjInvoiceTable    projInvoiceTable;
        ProjWIPTable        projWIPTable;
        ProjTable           projTable;
        ProjId              projId;
        ProjCategory        projCategory;
        ProjCategoryGroup   projCategoryGroup;
        HierarchyTreeTable  hierarchyTreeTable;
        smmActivities       smmActivities;

        switch (element.args().dataset())
        {
            case(tableNum(ProjWIPTable)):
                projWIPTable = element.args().record();
                criteriaWIPProjId.value(projWIPTable.ProjId);
                break;

            case(tableNum(ProjInvoiceTable)):
                projInvoiceTable = element.args().record();
                criteriaProjInvoiceProjId.value(projInvoiceTable.ProjInvoiceProjId);
                break;

            case(tableNum(ProjTable)):
                projTable   = element.args().record();
                projId      = projTable.ProjId;
                criteriaProjId.value(projId + #star);
                break;

            case(tableNum(ProjCategory)):
                projCategory = element.args().record();
                criteriaCategoryId.value(projCategory.CategoryId);
                break;

            case(tableNum(ProjCategoryGroup)):
                projCategoryGroup = element.args().record();
                criteriaCategoryGroupId.value(projCategoryGroup.CategoryGroupId);
                break;

            case(tableNum(SMAServiceOrderTable)):
                criteriaProjId.value(serviceOrderTable.ProjId);

                if (linkProjService ^ linkProjServiceItemReq)
                {
                    criteriaService.value(serviceOrderTable.ServiceOrderId);
                }
                break;

            case (tableNum(HierarchyTreeTable)):
                hierarchyTreeTable = element.args().record();
                smmActivities = smmActivities::findWithRecId(hierarchyTreeTable.RefRecId);
                criteriaActivityId.value(queryValue(smmActivities.ActivityNumber));

                projTable = HierarchyTreeTable_Extension::findAssociation(smmActivities, tableNum(ProjTable));
                criteriaProjId.value(projId);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceAmount</Name>
				<Source><![CDATA[
    void setPriceAmount()
    {
        if (element.args().dataset() == tableNum(TmpProjStatistic) ||
            element.args().dataset() == tableNum(PSATmpProjFinancialStatistic))

        {
            priceAmount.selection(PriceAmount::LedgerUpdate);
        }
        else if (element.args().dataset() == tableNum(TmpProjCashFlow))
        {
            priceAmount.selection(PriceAmount::LedgerUpdate);
        }
        else
        {
            priceAmount.selection(ProjParameters::find().DisplayPriceAmount);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWithholdEnabled_IN</Name>
				<Source><![CDATA[
    void setTaxWithholdEnabled_IN()
    {
        projItemTransTaxExtensionIN_ds.object(fieldNum(ProjItemTransTaxExtensionIN, tdsGroup)).enabled(!projItemTransTaxExtensionIN.tcsGroup);
        projItemTransTaxExtensionIN_ds.object(fieldNum(ProjItemTransTaxExtensionIN, tcsGroup)).enabled(!projItemTransTaxExtensionIN.tdsGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisible</Name>
				<Source><![CDATA[
    void setVisible()
    {
        switch (priceAmount.selection())
        {
            case PriceAmount::Price:
                costPriceGrid.visible(true);
                salesPriceGrid.visible(true);
                currencyIdGrid.visible(true);
                costAmountGrid.visible(false);
                salesAmountGrid.visible(false);
                transTurnoverGrid.visible(false);
                break;

            case PriceAmount::LedgerUpdate:
                costPriceGrid.visible(false);
                salesPriceGrid.visible(false);
                currencyIdGrid.visible(false);
                costAmountGrid.visible(true);
                salesAmountGrid.visible(true);
                transTurnoverGrid.visible(false);
                break;

            case PriceAmount::LineAmount:
                costPriceGrid.visible(false);
                salesPriceGrid.visible(true);
                currencyIdGrid.visible(true);
                costAmountGrid.visible(false);
                salesAmountGrid.visible(false);
                transTurnoverGrid.visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleTaxInformation_IN</Name>
				<Source><![CDATA[
    public void setVisibleTaxInformation_IN()
    {
        boolean         isTaxParametersMarked   = TaxParameters::checkTaxParameters_IN();
        boolean         taxWithholdParameters   = TaxWithholdParameters_IN::checkTaxParameters();

        MaxRetailPrice.visible(isTaxParametersMarked);
        AssessableValue.visible(isTaxParametersMarked);
        WithholdingTax_IN.visible(taxWithholdParameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(InventDimFormDesignUpdate mode)
    {
        InventDimParm inventDimParm;

        switch (mode)
        {
            case InventDimFormDesignUpdate::Init    :

                if (!inventDimFormSetup)
                {
                    inventDimFormSetup  = InventDimCtrl::newFromForm(element);
                }

                inventDimParm.initProductDimensionsAllGroups();
                inventDimFormSetup.parmDimParmVisibleGrid(inventDimParm);
                inventDimFormSetup.formSetControls(true);

                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        if (this.args().parmEnumType() == enumNum(IsSplitTransaction))
        {
            // Setup and open trace group
            if (this.args().parmEnum() == NoYes::Yes)
            {
                TransAdjustmentTrace.clicked();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineSalesAmount</Name>
				<Source><![CDATA[
    public AmountCur determineSalesAmount(ProjItemTrans _projItemTrans)
    {
        return _projItemTrans.salesAmount(_projItemTrans, ledgerFromDate, ledgerToDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineCostAmount</Name>
				<Source><![CDATA[
    public AmountCur determineCostAmount(ProjItemTrans _projItemTrans)
    {
        return _projItemTrans.costAmount(_projItemTrans, ledgerFromDate, ledgerToDate);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ProjItemTrans</Name>
				<Methods>
					<Method>
						<Name>setQuery</Name>
						<Source><![CDATA[
        public void setQuery()
        {
            switch (selectInvoiceStatus.selection())
            {
                case projSelectTrans::All:
                    this.query(element.buildQuery());
                    break;

                case projSelectTrans::Invoiced:
                    this.query(element.buildQuery());
                    break;

                case projSelectTrans::PartiallyInvoiced:
                    this.query(element.buildQuery());
                    break;

                case projSelectTrans::Adjusted:
                    this.query(element.buildQuery());
                    break;

                case projSelectTrans::ToBeInvoiced:
                    this.query(element.buildQueryLineProperty(JoinMode::NoExistsJoin));
                    break;

                case projSelectTrans::NoChargeable:
                    this.query(element.buildQueryLineProperty(JoinMode::ExistsJoin));
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>cursorNotify</Name>
						<Source><![CDATA[
        public void cursorNotify(int _event)
        {
            ProjItemTrans        projItemTransCache;
            Set                  setTransCache;

            super(_event);

            if (priceAmount.selection() == PriceAmount::LedgerUpdate)
            {
                if (_event == 0 || _event == 1)
                {
                    projItemTransCache = projItemTrans_DS.getFirst(0,false);
                    while (projItemTransCache)
                    {
                        if (! salesAmountCache.exists(projItemTransCache.ProjTransId))
                        {
                            if (! setTransCache)
                            {
                                setTransCache = new Set(Types::String);
                            }
                            setTransCache.add(projItemTransCache.ProjTransId);
                        }

                        projItemTransCache = projItemTrans_DS.getNext();
                    }

                    if (setTransCache)
                    {
                        salesAmountCache = Map::create(ProjItemTrans::salesAmountDisplayCache(setTransCache.pack(),salesAmountCache.pack(),ledgerFromDate,ledgerToDate));
                        costAmountCache  = Map::create(ProjItemTrans::costAmountDisplayCache(setTransCache.pack(),costAmountCache.pack(),ledgerFromDate,ledgerToDate));
                    }
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            super();

            this.cacheAddMethod(tableMethodStr(ProjItemTrans, costPrice));
            this.cacheAddMethod(tableMethodStr(ProjItemTrans, costAmount));
            this.cacheAddMethod(tableMethodStr(ProjItemTrans, salesPrice));
            this.cacheAddMethod(tableMethodStr(ProjItemTrans, salesAmount));
            this.cacheAddMethod(tableMethodStr(ProjItemTrans, transTurnover));
            this.cacheAddMethod(tableMethodStr(ProjItemTrans, projInvoiceStatus));

            this.setQuery();
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        void linkActive()
        {
            rangeCategoryGroup = false;
            rangeLedgerTransDate = false;

            switch (element.args().dataset())
            {
                case(tableNum(TmpProjStatistic)):
                    // linkActive called again .criteria changed... close form
                    if (projStatistic)
                    {
                        element.close();
                    }

                    projStatistic       = element.args().parmObject();
                    linkProjStatistic   = true;

                    if (projStatistic.parmCategoryGroupId())
                    {
                        rangeCategoryGroup = true;
                    }

                    if (projStatistic.parmLedgerFromDate()|| projStatistic.parmLedgerToDate())
                    {
                        rangeLedgerTransDate = true;
                    }
                    break;

                case tableNum(PSATmpProjFinancialStatistic):
                        projStatistic = element.args().parmObject();
                        m_bLinkProjFinancialStatisitc =  true;
                    break;

                case(tableNum(TmpProjCashFlow)):
                    // linkActive called again .criteria changed... close form
                    if (projCashFlow)
                    {
                        element.close();
                    }

                    projCashFlow       = element.args().parmObject();
                    linkProjCashFlow   = true;

                    if (projCashFlow.parmCategoryGroupId())
                    {
                        rangeCategoryGroup = true;
                    }
                    break;

                case(tableNum(TmpProjCostControl)):
                    // linkActive called again .criteria changed... close form
                    if (projCostControl)
                    {
                        element.close();
                    }

                    projCostControl       = element.args().parmObject();
                    linkProjCostControl   = true;

                    if (projCostControl.parmCategoryGroupId())
                    {
                        rangeCategoryGroup = true;
                    }
                    break;

                case(tableNum(TmpProjInvoiceControl)):
                    // linkActive called again .criteria changed... close form
                    if (projInvoiceControl)
                    {
                        element.close();
                    }

                    projInvoiceControl  = element.args().parmObject();
                    linkInvoiceControl  = true;

                    if (projInvoiceControl.parmCategoryGroupId())
                    {
                        rangeCategoryGroup = true;
                    }
                    break;
            }

            if (element.args().dataset())
            {
                switch (selectInvoiceStatus.selection())
                {
                    case projSelectTrans::All:
                        this.query(element.buildQuery());
                        break;

                    case projSelectTrans::Invoiced:
                        this.query(element.buildQuery());
                        break;

                    case projSelectTrans::PartiallyInvoiced:
                        this.query(element.buildQuery());
                        break;

                    case projSelectTrans::Adjusted:
                        this.query(element.buildQuery());
                        break;

                    case projSelectTrans::ToBeInvoiced:
                        this.query(element.buildQueryLineproperty(JoinMode::NoExistsJoin));
                        break;

                    case projSelectTrans::NoChargeable:
                        this.query(element.buildQueryLineProperty(JoinMode::ExistsJoin));
                        break;
                }
            }

            element.setLinkCriteria();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>salesAmount</Name>
						<Source><![CDATA[
        display AmountCur salesAmount(ProjItemTrans _projItemTrans)
        {
            if (! salesAmountCache.exists(_projItemTrans.ProjTransId))
            {
                salesAmountCache.insert(_projItemTrans.ProjTransId, element.determineSalesAmount(_projItemTrans));
            }

            return salesAmountCache.lookup(_projItemTrans.ProjTransId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>costAmount</Name>
						<Source><![CDATA[
        display AmountCur costAmount(ProjItemTrans _projItemTrans)
        {
            if (! costAmountCache.exists(_projItemTrans.ProjTransId))
            {
                costAmountCache.insert(_projItemTrans.ProjTransId, element.determineCostAmount(_projItemTrans));
            }

            return costAmountCache.lookup(_projItemTrans.ProjTransId);
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (callerTree)
            {
                criteriaTransId.value(element.args().caller().selectedTransId());

                super();

                return;
            }

            switch (selectInvoiceStatus.selection())
            {
                case projSelectTrans::All:
                    if (criteriaTimeMaterial)
                    {
                        criteriaTimeMaterial.value(SysQuery::valueUnlimited());
                    }
                    qb_projItemTransSale1.enabled(false);
                    qb_projItemTransSale2.enabled(false);
                    break;

                case projSelectTrans::Invoiced:
                    if (criteriaTimeMaterial)
                    {
                        criteriaTimeMaterial.value(SysQuery::valueUnlimited());
                    }
                    qb_projItemTransSale1.enabled(true);
                    criteriaTransStatus1.value(strFmt("%1,%2,%3",
                                              queryValue(ProjTransStatus::Invoiced),
                                              queryValue(ProjTransStatus::MarkedCreditnote),
                                              queryValue(ProjTransStatus::CreditnoteProposal)));
                    qb_projItemTransSale2.enabled(true);
                    qb_projItemTransSale2.joinMode(JoinMode::NoExistsJoin);
                    criteriaTransStatus2.value(queryValue(ProjTransStatus::Posted));
                    break;

                case projSelectTrans::PartiallyInvoiced:
                    if (criteriaTimeMaterial)
                    {
                        criteriaTimeMaterial.value(SysQuery::valueUnlimited());
                    }
                    qb_projItemTransSale1.enabled(true);
                    //Invoiced
                    criteriaTransStatus1.value(strFmt("%1,%2,%3",
                                              queryValue(ProjTransStatus::Invoiced),
                                              queryValue(ProjTransStatus::MarkedCreditnote),
                                              queryValue(ProjTransStatus::CreditnoteProposal)));
                    
                    // Not Invoiced or adjusted
                    qb_projItemTransSale2.enabled(true);
                    qb_projItemTransSale2.joinMode(JoinMode::ExistsJoin);
                    criteriaTransStatus2.value(queryValue(ProjTransStatus::Posted));
                    break;
 
                case projSelectTrans::Adjusted:
                    qb_projItemTransSale1.enabled(true);
                    criteriaTransStatus1.value(queryValue(ProjTransStatus::Adjusted));

                    qb_projItemTransSale2.enabled(false);
                    break;

                case projSelectTrans::ToBeInvoiced:
                    if (criteriaTimeMaterial && !element.enableProjMultipleContractLinesForProjectFeature)
                    {
                        criteriaTimeMaterial.value(queryValue(ProjType::TimeMaterial));
                    }
                    qb_projItemTransSale1.enabled(true);
                    criteriaTransStatus1.value(strFmt("%1,%2",
                                              queryValue(ProjTransStatus::Posted),
                                              queryValue(ProjTransStatus::InvoiceProposal)));

                    qb_projItemTransSale2.enabled(false);
                    break;

                case projSelectTrans::NoChargeable:
                    if (criteriaTimeMaterial)
                    {
                        criteriaTimeMaterial.value(SysQuery::valueUnlimited());
                    }
                    qb_projItemTransSale1.enabled(true);
                    criteriaTransStatus1.value(strFmt("%1,%2",
                                              queryValue(ProjTransStatus::Posted)));

                    qb_projItemTransSale2.enabled(false);
                    break;
            }

            if (linkInvoiceControl)
            {
                element.linkInvoiceControl();
            }

            if (linkProjStatistic)
            {
                element.linkProjStatistic();
            }

            if (linkProjCostControl)
            {
                element.linkProjCostControl();
            }

            if (m_bLinkProjFinancialStatisitc)
            {
                element.PSALinkProjFinancialStatistic();
            }

            if (linkProjCashFlow)
            {
                element.linkProjCashFlow();
            }

            if (transId)
            {
                criteriaTransId.value(transId);
            }

            if (refTransid)
            {
                criteriaRefId.value(refTransid);
            }

            // Filter all item transactions of the subcontract
            else
            {
                if (psaRefTransidArray)
                {
                    criteriaRefId.value(psaRefTransidArray);
                }
            }

            super();

            element.setButtonAccess();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            element.setButtonAccess();

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ProjItemTransTaxExtensionIN</Name>
				<Methods>
					<Method>
						<Name>isNeeded</Name>
						<Source><![CDATA[
        public boolean isNeeded()
        {
            return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]);
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            if (this.isNeeded())
            {
                this.linkType(FormLinkType::OuterJoin);
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SplitTransaction</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            // Update the record being displayed
            projItemTrans_ds.reread();
            projItemTrans_ds.rereadReferenceDataSources();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransAdjustmentTrace</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            adjustmentTraceTabPage.visible(true);
            adjustmentTraceTabPage.setFocus();

            traceTree.createTraceTree(projItemTrans.ProjTransId);
            fieldList.text(traceTree.listofFields());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PriceAmount</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setVisible();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectInvoiceStatus</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            projItemTrans_ds.setQuery();
            element.setLinkCriteria();
            projItemTrans_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Tab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        public void tabChanged(int _fromTab, int _toTab)
        {
            super(_fromTab, _toTab);

            if (_fromTab == 6)
            {
                adjustmentTraceTabPage.visible(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SubcontractLine</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();
            ProjectOperationsDWHelper dw = ProjectOperationsDWHelper::construct();
            dw.openProjectSubcontractLineDetailsInCE(projItemTrans.SubcontractLine, projItemTrans.DataAreaId);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransIdPackSlip</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            super();
            ProjectOperationsDWHelper dw = ProjectOperationsDWHelper::construct();
            dw.openProjectSubcontractLineDetailsInCE(projItemTrans.SubcontractLine, projItemTrans.DataAreaId);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Group_M_proposalId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            ProjProposalJour::jumpRefProposal(projItemTrans.proposalId(),projItemTrans.ProjTransId,ProjTransType::Item);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Group_M_invoiceId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            ProjInvoiceJour::jumpRefInvoice(projItemTrans.ProjTransId,ProjTransType::Item);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FundingSourceCost</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {   
            Project::jumpRefFundingSource(projItemTransCost.FundingSource, element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FundingSourceSale</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            Project::jumpRefFundingSource(projItemTransSale.FundingSource, element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GoToTransaction</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args    args;
            FormRun formRun;

            args = new Args();
            args.name(formStr(ProjTransItem));
            args.caller(element);

            formRun = classfactory.formRunClass(args);
            formRun.init();
            formRun.run();
            formRun.wait();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SetupTree</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args    args;
            FormRun formRun;

            args = new Args();
            args.name(formStr(ProjAdjTreeCreateVisualization));
            args.caller(element);

            formRun = classfactory.formRunClass(args);
            formRun.init();
            formRun.run();
            formRun.wait();

            if (formRun.closedOk())
            {
                 adjustmentTraceTabPage.visible(true);
                 adjustmentTraceTabPage.setFocus();

                 traceTree.createTraceTree(projItemTrans.ProjTransId);
                 fieldList.text(traceTree.listofFields());
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlTree</Name>
				<Type>Tree</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged(FormTreeItem _oldItem, FormTreeItem _newItem, FormTreeSelect _how)
        {
            super(_oldItem, _newItem, _how);

            selectionTransId = ctrlTree.getItem(_newItem.idx()).data();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<AllowPreLoading>No</AllowPreLoading>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ProjItemTrans</Name>
			<Table>ProjItemTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActivityNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AdjRefTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntrastatFulfillmentDate_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCorrection</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinePropertyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackingSlipId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAdjustRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransIdRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAContractLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PSAProjOrigTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalCostAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalSalesAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionOrigin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherPackingSlip</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoQuery>No</AutoQuery>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjItemTransCost</Name>
			<Table>ProjItemTransCost</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CostType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerCostAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerStatusCost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerTransdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjAdjustRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjInventAdjust</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPPeriod</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjItemTrans</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<Index>ProjIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1HashHex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoQuery>No</AutoQuery>
			<JoinSource>ProjItemTrans</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjItemTransSale</Name>
			<Table>ProjItemTransSale</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ControlId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ControlVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FundingSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerSalesAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerSalesPosted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerTransdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjProposalId_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxAsPerOriginalInvoice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WIPType</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjItemTrans</JoinSource>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ProjItemTransTaxExtensionIN</Name>
			<Table>ProjItemTransTaxExtensionIN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AssessableValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsTariffCodeTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectSettlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DSA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseRecordType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseTariffCodes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostalAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjItemTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTaxFormTypes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceEventGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInventVATCommodityCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WarehouseLocation</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ProjItemTrans</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS91516</Caption>
		<DataSource xmlns="">ProjItemTrans</DataSource>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<TitleDataSource xmlns="">ProjItemTrans</TitleDataSource>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane1</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab1</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupControl3</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProjPeriodicPostingCost</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ProjPeriodicPostingCost</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProjPeriodicPostingSales</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ProjPeriodicPostingSales</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>InvoiceProposal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2105540606</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ProjInvoiceProposal</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProjReverseTrans</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ProjReverseTrans</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDropDialogButtonControl">
										<Name>ProjAdjustmentItem</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1946157054</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>DropDialogButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>ProjItemTrans</DataSource>
										<MenuItemName>ProjAdjustmentDropMenu</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>SplitTransaction</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>ProjItemTrans</DataSource>
										<MenuItemName>ProjSplitTransaction</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<Caption>@SYS10340</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupControl2</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ProjInvoiceLine</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>ProjInvoiceLine</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>CostControlCommittedCost</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>ProjItemTrans</DataSource>
										<MenuItemName>costcontrolCommittedCost</MenuItemName>
										<SaveRecord>No</SaveRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>TransAdjustmentTrace</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS133198</Text>
									</AxFormControl>
								</Controls>
								<Caption>@SYS3850</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupControl4</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>InventTransVoucher</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>InventTransVoucher</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>InventDimParmFixed</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MenuItemName>InventDimParmFixed</MenuItemName>
									</AxFormControl>
								</Controls>
								<Caption>@SYS981</Caption>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<Caption>@SYS40422</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Project</Name>
								<ElementPosition>1409286141</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>ProjTransPosting</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Voucher</Name>
								<ElementPosition>939524094</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataSource>ProjItemTrans</DataSource>
								<MenuItemName>ProjLedgerTransVoucher</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>TransTaxInformation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>MenuFunctionButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataSource>ProjItemTrans</DataSource>
								<MenuItemName>TransTaxInformation</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>TopGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl1</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>ProjectItemTrans_TransDate</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DisplayGroup</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>PriceAmount</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>PriceAmount</EnumType>
								<Label>@SYS90428</Label>
								<LabelAlignment>Right</LabelAlignment>
								<Items />
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>FilterGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SelectInvoiceStatus</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>projSelectTrans</EnumType>
								<Label>@SYS50275</Label>
								<LabelAlignment>Right</LabelAlignment>
								<Items />
							</AxFormControl>
						</Controls>
						<Columns>3</Columns>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>LedgerDates</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>LedgerDateFrom</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@Proj:LedgerDatesFrom</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>LedgerDateTo</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@Proj:LedgerDatesTo</Label>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Overview</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>800</Width>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjectItemTrans_TransDate</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjItemTrans_ProjId</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjectItemTrans_Category</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjItemTrans_ItemId</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InventoryDimensions</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventSiteId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_inventBatchId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventBatchId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_wMSLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>wMSLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_inventSerialId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventSerialId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventStatusId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStatusId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_LicensePlateId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>LicensePlateId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventOwnerId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventOwnerId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventProfileId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventProfileId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventGtdId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventGtdId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>InventoryDimensions</DataGroup>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Qty</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>ProjItemTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>costPriceGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>costPrice</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>costAmountGrid</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2139095038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_ProjectManagementAndAccounting:ProjTransItem_costAmountGrid</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>costAmount</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
										<Label>@SYS90204</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>currencyIdGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2143289342</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPriceGrid</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2145386494</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>salesPrice</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>salesAmountGrid</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2146435070</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>salesAmount</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
										<Label>@SYS2835</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TransTurnoverGrid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2146959358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>transTurnover</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
										<Label>@SYS10500</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjItemTrans_LinePropertyId</Name>
										<ElementPosition>2147221502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinePropertyId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjInvoiceStatus</Name>
										<ElementPosition>2147287038</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>projInvoiceStatus</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjItemTrans_TransactionOrigin</Name>
										<ElementPosition>2147352574</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransactionOrigin</DataField>
										<DataSource>ProjItemTrans</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SubcontractLine</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>Project</ConfigurationKey>
										<ElementPosition>2147221502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SubcontractLine</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TransIdPackSlip</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>Project</ConfigurationKey>
										<ElementPosition>2147221502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransIdPackSlip</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ProjItemTrans</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<DataSource>ProjItemTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<ElementPosition>1476395006</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Transaction</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Transaction_ProjTransId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjTransId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Transaction_ProjTransIdRef</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjTransIdRef</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Transaction_AdjRefTransId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AdjRefTransId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Transaction_VoucherPackingSlip</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VoucherPackingSlip</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Transaction_Txt</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Txt</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Transaction_TransactionOrigin</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransactionOrigin</DataField>
										<DataSource>ProjItemTrans</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>Transaction</DataGroup>
								<DataSource>ProjItemTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SalesPriceGroup</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SalesPriceGroup_SalesUnit</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesUnit</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SalesPriceGroup_CurrencyId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPriceGroup_M_salesPrice</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>salesPrice</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
										<DisplayLength>20</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPriceGroup_M_lineAmount</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_ProjectManagementAndAccounting:ProjTransItem_SalesPriceGroup_M_lineAmount</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>lineAmount</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
										<DisplayLength>20</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPriceGroup_M_ledgerSalesAmount</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>ledgerSalesAmount</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SalesPriceGroup_TotalSalesAmountCur</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TotalSalesAmountCur</DataField>
										<DataSource>ProjItemTrans</DataSource>
										<DisplayLength>20</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>SalesPrice</DataGroup>
								<DataSource>ProjItemTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CostPriceGroup</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPriceGroup_Qty</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>ProjItemTrans</DataSource>
										<DisplayLength>20</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPriceGroup_M_costPrice</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>costPrice</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
										<DisplayLength>20</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPriceGroup_M_costAmountTotal</Name>
										<AllowEdit>No</AllowEdit>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>costAmountTotal</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
										<DisplayLength>20</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CostPriceGroup_costPriceTotal</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>costPriceTotal</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>CostPrice</DataGroup>
								<DataSource>ProjItemTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Item</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Item_InventTransId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventTransId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Item_PackingSlipId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PackingSlipId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Item_ProjAdjustRefId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjAdjustRefId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>Item_LedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>LedgerDimensionDefaultAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>ProjItemTrans</DataSource>
										<ReferenceField>LedgerDimension</ReferenceField>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>Items</DataGroup>
								<DataSource>ProjItemTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Tax</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxGroupId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxGroupId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxItemGroupId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaxItemGroupId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>SalesTax</DataGroup>
								<DataSource>ProjItemTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Invoice</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group_M_proposalId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>proposalId</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Group_M_invoiceId</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>invoiceId</DataMethod>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>Invoice</DataGroup>
								<DataSource>ProjItemTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AssessableValue</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>IN</CountryRegionCodes>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjItemTransTaxExtensionIN_AssessableValue</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AssessableValueTransactionCurrency</DataField>
										<DataSource>ProjItemTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@GLS5298</Caption>
								<DataSource>ProjItemTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MaxRetailPrice</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>IN</CountryRegionCodes>
								<ElementPosition>2080374782</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjItemTransTaxExtensionIN_MaximumRetailPrice</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>MaximumRetailPrice</DataField>
										<DataSource>ProjItemTransTaxExtensionIN</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@GLS5296</Caption>
								<DataSource>ProjItemTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Identification_TransDate</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_ProjId</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ProjId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_ActivityNumber</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActivityNumber</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_CategoryId</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_ItemId</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_LinePropertyId</Name>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LinePropertyId</DataField>
										<DataSource>ProjItemTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<DataGroup>Identification</DataGroup>
								<DataSource>ProjItemTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>WithholdingTax_IN</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<CountryRegionCodes>IN</CountryRegionCodes>
								<ElementPosition>1946157054</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WithholdingTax_IN_TDSGroup</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TDSGroup</DataField>
										<DataSource>ProjItemTransTaxExtensionIN</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>WithholdingTax_IN_TCSGroup</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TCSGroup</DataField>
										<DataSource>ProjItemTransTaxExtensionIN</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>WithholdingTax</DataGroup>
								<DataSource>ProjItemTransTaxExtensionIN</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
						<DataSource>ProjItemTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Dimension</Name>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Pattern>DimensionEntryControl</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>DimensionEntryControl</Name>
								<NeededPermission>Manual</NeededPermission>
								<Type>Container</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>DimensionEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmControlLabelText</Name>
											<Type>String</Type>
											<Value>@SYS101181</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumerationName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmDataSourceName</Name>
											<Type>String</Type>
											<Value>ProjItemTrans</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValueSetReferenceField</Name>
											<Type>String</Type>
											<Value>DefaultDimension</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumValueSetReferenceField</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@SYS138491</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>InvDimensions</Name>
						<ElementPosition>2013265918</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DimInventoryDimensions</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_configId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>configId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_InventSizeId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventSizeId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_InventColorId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventColorId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_InventStyleId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventStyleId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_InventVersionId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventVersionId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_InventSiteId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventSiteId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_InventLocationId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventLocationId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_inventBatchId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>inventBatchId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_wMSLocationId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>wMSLocationId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_inventSerialId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>inventSerialId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_InventStatusId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventStatusId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_LicensePlateId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LicensePlateId</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_InventOwnerId_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventOwnerId_RU</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_InventProfileId_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventProfileId_RU</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimInventoryDimensions_InventGtdId_RU</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>InventGtdId_RU</DataField>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>InventoryDimensions</DataGroup>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS118397</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Cost</Name>
						<ElementPosition>2080374782</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid1</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjItemTransCost_LedgerTransdate</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerTransdate</DataField>
										<DataSource>ProjItemTransCost</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ProjItemTransCost_Voucher</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Voucher</DataField>
										<DataSource>ProjItemTransCost</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjItemTransCost_AmountMST</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_ProjectManagementAndAccounting:ProjTransItem_ProjItemTransCost_AmountMST</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AmountMST</DataField>
										<DataSource>ProjItemTransCost</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjItemTransCost_ProjLedgerStatus</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerStatusCost</DataField>
										<DataSource>ProjItemTransCost</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjItemTransCost_TransStatus</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransStatus</DataField>
										<DataSource>ProjItemTransCost</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjItemTransCost_WIPPeriod</Name>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>WIPPeriod</DataField>
										<DataSource>ProjItemTransCost</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>FundingSourceCost</Name>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FundingSourceCost_FundingSourceId</Name>
												<DataRelationPath>FundingSource</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>ProjItemTransCost</DataSource>
										<ReferenceField>FundingSource</ReferenceField>
										<ReplacementFieldGroup>FundingSourceName</ReplacementFieldGroup>
									</AxFormControl>
								</Controls>
								<DataSource>ProjItemTransCost</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS4249</Caption>
						<DataSource>ProjItemTransCost</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Sale</Name>
						<ElementPosition>2105540606</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>SaleGrid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjItemTransSale_LedgerTransdate</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerTransdate</DataField>
										<DataSource>ProjItemTransSale</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjItemTransSale_SalesPrice</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>SalesPrice</DataField>
										<DataSource>ProjItemTransSale</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjItemTransSale_LineAmount</Name>
										<ElementPosition>1744830462</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineAmount</DataField>
										<DataSource>ProjItemTransSale</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>ProjItemTransSale_LedgerSalesPosted</Name>
										<ElementPosition>1879048190</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>LedgerSalesPosted</DataField>
										<DataSource>ProjItemTransSale</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ProjItemTransSale_LedgerSalesAmount</Name>
										<ElementPosition>2013265918</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LedgerSalesAmount</DataField>
										<DataSource>ProjItemTransSale</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ProjItemTransSale_WIPPeriod</Name>
										<ElementPosition>2080374782</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>WIPPeriod</DataField>
										<DataSource>ProjItemTransSale</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ProjItemTransSale_TransStatus</Name>
										<ElementPosition>2113929214</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransStatus</DataField>
										<DataSource>ProjItemTransSale</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>FundingSourceSale</Name>
										<ElementPosition>2130706430</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FundingSourceSale_FundingSourceId</Name>
												<DataRelationPath>FundingSource</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>ProjItemTransSale</DataSource>
										<ReferenceField>FundingSource</ReferenceField>
										<ReplacementFieldGroup>FundingSourceName</ReplacementFieldGroup>
									</AxFormControl>
								</Controls>
								<DataSource>ProjItemTransSale</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS37101</Caption>
						<DataSource>ProjItemTransSale</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AdjustmentTraceTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2130706430</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ButtonGroup1</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>GoToTransaction</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@SYS133347</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>SetupTree</Name>
														<ElementPosition>1610612734</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@SYS133492</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTreeControl">
								<Name>ctrlTree</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Tree</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FieldGroup</Name>
								<Pattern>FillText</Pattern>
								<PatternVersion>UX7 1.0</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>FieldList</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>StaticText</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
							</AxFormControl>
						</Controls>
						<Caption>@SYS133198</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>ProjItemTrans</DataSource>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>