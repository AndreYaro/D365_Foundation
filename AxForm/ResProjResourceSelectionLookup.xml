<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ResProjResourceSelectionLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ResProjResourceSelectionLookup extends FormRun
{
}
]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ResCompanyResourceSchedulableDetailDistinctView</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Modify the lookup query based on the specified context.
        /// </summary>
        public void init()
        {
            #TimeConstants

            xArgs args = element.args();
            ResSearchCriteria searchCriteria = args.parmObject();
            PSAProjSchedRole activityResource = args.record();

            Query resourceQuery;

            if (searchCriteria)
            {
                ClassId resourceCategoryCriteriaId = classnum(ResResourceCategorySearchCriteria);
                ResResourceCategorySearchCriteria criteriaItem = searchCriteria.getCriteriaItem(resourceCategoryCriteriaId);

                if (criteriaItem)
                {
                    // remove / ignore Team member role criteria
                    ResourceCategoryRecId defaultCategory = ResourceCategoryFacade::defaultResourceCategory();
                    ResourceCategoryId defaultCategoryId = ResourceCategoryFacade::getId(defaultCategory);
                    str criteriaValues = criteriaItem.getValues();
                    int valuesLength = strLen(criteriaValues);

                    if (criteriaValues == defaultCategoryId)
                    {
                        searchCriteria.removeCriteriaItem(resourceCategoryCriteriaId);
                    }
                    else if (strScan(criteriaValues, defaultCategoryId, 1, valuesLength))
                    {
                        criteriaItem.removeValue(defaultCategoryId);
                    }
                }

                ResAvailabilityViewContext context = ResAvailabilityViewContext::construct();
                context.searchString(searchCriteria.getCriteriaString());
                utcdatetime startDateTime = DateTimeUtil::newDateTime(activityResource.PSARoleStartDate, #LastSecondOfTheDay);
                context.startDateTime(startDateTime);
                utcdatetime endDateTime = DateTimeUtil::newDateTime(activityResource.PSARoleEndDate, #LastSecondOfTheDay);
                context.endDateTime(endDateTime);

                ResAddResourceCollection collectionProvider = ResAddResourceCollection::construct();
                collectionProvider.setContext(context);
                resourceQuery = collectionProvider.getExecuteQuery();
            }

            super();

            if (resourceQuery)
            {
                QueryBuildDataSource mainDS = resourceQuery.dataSourceNo(1);
                QueryBuildDataSource projectTeam = mainDS.addDataSource(tableNum(PSAProjSchedRole));
                projectTeam.joinMode(JoinMode::NoExistsJoin);
                projectTeam.relations(false);
                projectTeam.addLink(fieldNum(ResCompanyResourceSchedulableDetailDistinctView, Resource), fieldNum(PSAProjSchedRole, Resource));
                projectTeam.addRange(fieldNum(PSAProjSchedRole, ProjId)).value(queryValue(activityResource.ProjId));

                this.query(resourceQuery);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ResCompanyResourceSchedulableDetailDistinctView</Name>
			<Table>ResCompanyResourceSchedulableDetailDistinctView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>EffectiveDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpirationDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecipientCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Res:Resources</Caption>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>ResourceLookupList</Name>
				<AllowEdit>No</AllowEdit>
				<HeightMode>SizeToContent</HeightMode>
				<Type>Grid</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ResourceName</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>ResCompanyResourceSchedulableDetailDistinctView</DataSource>
						<Label>@Res:ResourceName</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SourceCompany</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>SourceCompany</DataField>
						<DataSource>ResCompanyResourceSchedulableDetailDistinctView</DataSource>
						<Label>@Res:LegalEntity</Label>
					</AxFormControl>
				</Controls>
				<DataSource>ResCompanyResourceSchedulableDetailDistinctView</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>