<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PSASubContractRetainage</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
    public class PSASubContractRetainage extends FormRun
    {
        ProjId          m_sProjId;
        NoYesId         m_eIncludeLower;
        VendAccount     m_sVendAccount;
        PurchIdBase     m_sSubcontract;
        TransDate       m_toDate;
        TransDate       m_fromDate;
        NoYesId         m_eFirst;

        PSATmpSubcontractRetainage      tmpSubcontractRetainage;

        private boolean projOpsEnabled = ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled();

        #DEFINE.star('*')
}
]]></Source>
			</Method>
			<Method>
				<Name>includeLower</Name>
				<Source><![CDATA[
    NoyesId includeLower(NoYesId _includeLower = m_eIncludeLower)
    {
        m_eIncludeLower = _includeLower;
        return m_eIncludeLower;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        IncludeLower.visible(!projOpsEnabled);

        if (element.projId() && !projOpsEnabled)
        {
            includeLower.enabled(true);
        }
        else
        {
            includeLower.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    TransDate parmFromDate(TransDate _fromDate = m_fromDate)
    {
        m_fromDate = _fromDate;
        return m_fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    TransDate parmToDate(TransDate _toDate = m_toDate)
    {
        m_toDate = _toDate;
        return m_toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projId</Name>
				<Source><![CDATA[
    ProjId projId(ProjId _projId = m_sProjId)
    {
        m_sProjId = _projId;
        return m_sProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>querySubcontract</Name>
				<Source><![CDATA[
    private Query querySubcontract()
    {
        QueryBuildDataSource oSubcontract;
        Query                querySubcontract = new Query();

        oSubcontract  = querySubcontract.addDataSource(tablenum(PurchTable));
        oSubcontract.clearRanges();
        if ((m_eFirst) && (!element.args().caller()))
        {
            oSubcontract.addRange(fieldnum(PurchTable, PurchId)).value(SysQuery::valueEmptyString());
            m_eFirst = false;
            return querySubcontract;
        }
        if (element.vendAccount())
        {
            oSubcontract.addRange(fieldnum(PurchTable, OrderAccount)).value(element.vendAccount());
        }
        if (element.subcontract())
        {
            oSubcontract.addRange(fieldnum(PurchTable, PurchId)).value(element.subcontract());
        }

        if (element.projId())
        {
            if (element.includeLower())
            {
                oSubcontract.addRange(fieldnum(PurchTable, ProjId)).value(element.projId() + #star);
            }
            else
            {
                oSubcontract.addRange(fieldnum(PurchTable, ProjId)).value(element.projId());
            }
        }

        return querySubcontract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subcontract</Name>
				<Source><![CDATA[
    PurchIdBase subcontract(PurchIdBase _subcontract = m_sSubcontract)
    {
        m_sSubcontract = _subcontract;
        return m_sSubcontract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subcontractRetainage</Name>
				<Source><![CDATA[
    void subcontractRetainage()
    {
        QueryRun                            queryRun  = new QueryRun(element.querySubcontract());
        PurchTable                          purchTable;
        PurchLine                           purchLine;
        VendInvoiceTrans                    invoiceTrans;
        VendInvoiceJour                     invoiceJour;
        GeneralJournalEntry                 generalJournalEntry;
        GeneralJournalAccountEntry          generalJournalAccountEntry;
        SubledgerVoucherGeneralJournalEntry subledgerVoucherGeneralJournalEntry;
        VendTrans                           vendTransOrg;
        AmountCur                           lineAmount,invoicedAmount,retainAmount,
                                            paidAmount,backingAmount;

        delete_from tmpSubcontractRetainage;

        while (queryRun.next())
        {
            tmpSubcontractRetainage.clear();
            purchTable = queryRun.get(tablenum(PurchTable));

            select sum(LineAmount),PurchId from purchLine
                where purchLine.PurchId == purchTable.PurchId;

            lineAmount     = purchLine.LineAmount;
            select sum(LineAmount), sum(TaxAmount) from invoiceTrans
               exists join purchLine
                    where invoiceTrans.InventTransId == purchLine.InventTransId &&
                          purchLine.PurchId          == purchTable.PurchId      &&
                          invoiceTrans.InvoiceDate   >= element.parmFromDate()  &&
                          invoiceTrans.InvoiceDate   <= element.parmToDate();

            invoicedAmount = invoiceTrans.LineAmount + invoiceTrans.TaxAmount;

            select sum(SettleAmountCur), sum(AmountCur) from vendTransOrg
               exists join invoiceJour
                        where vendTransOrg.AccountNum == purchTable.OrderAccount
                            && invoiceJour.PurchId == purchTable.PurchId
                            && vendTransOrg.Invoice == invoiceJour.InvoiceId
                            && vendTransOrg.TransType == LedgerTransType::Purch
                            && vendTransOrg.Voucher == invoiceJour.LedgerVoucher
                            && vendTransOrg.TransDate   >= element.parmFromDate()
                            && vendTransOrg.TransDate   <= element.parmToDate();
                       
            paidAmount = abs((vendTransOrg.AmountCur) - (vendTransOrg.SettleAmountCur));

            retainAmount =0;

            while select LedgerVoucher, DataAreaId,InvoiceDate,PurchId,InvoiceId,numberSequenceGroup,InternalInvoiceId from invoiceJour
                where invoiceJour.PurchId == purchTable.PurchId
                join GeneralJournalEntry from subledgerVoucherGeneralJournalEntry
                where subledgerVoucherGeneralJournalEntry.Voucher == invoiceJour.LedgerVoucher &&
                    subledgerVoucherGeneralJournalEntry.VoucherDataAreaId == invoiceJour.DataAreaId &&
                    subledgerVoucherGeneralJournalEntry.AccountingDate == invoiceJour.InvoiceDate
                join RecId  from generalJournalEntry
                where generalJournalEntry.RecId == subledgerVoucherGeneralJournalEntry.GeneralJournalEntry &&
                    generalJournalEntry.Ledger == Ledger::current()
                join GeneralJournalEntry,TransactionCurrencyAmount from generalJournalAccountEntry
                where generalJournalEntry.RecId == generalJournalAccountEntry.GeneralJournalEntry &&
                    generalJournalAccountEntry.PostingType     == LedgerPostingType::PSAProjPurchRetain
            {
                select recid from invoiceTrans
                    where invoiceTrans.PurchID == invoiceJour.PurchId &&
                          invoiceTrans.InvoiceId == invoiceJour.InvoiceId &&
                          invoiceTrans.InvoiceDate == invoiceJour.InvoiceDate &&
                          invoiceTrans.numberSequenceGroup == invoiceJour.numberSequenceGroup &&
                          invoiceTrans.InternalInvoiceId   == invoiceJour.InternalInvoiceId
                        join InventTransId,PurchId from purchLine
                            where invoiceTrans.InventTransId == purchLine.InventTransId &&
                                  purchLine.PurchId          == purchTable.PurchId;
                if (invoiceTrans)
                {
                    retainAmount = retainAmount- generalJournalAccountEntry.TransactionCurrencyAmount;
                }
            }
            backingAmount  = lineAmount - invoicedAmount;

            if (purchTable.ProjId)
            {
                tmpSubcontractRetainage.ProjId         = purchTable.ProjId;
                tmpSubcontractRetainage.ProjName       = ProjTable::find( purchTable.ProjId).Name;
                tmpSubcontractRetainage.VendAccount    = purchTable.OrderAccount;
                tmpSubcontractRetainage.Currency       = VendTable::find(purchTable.OrderAccount).Currency;
                tmpSubcontractRetainage.VendName       = DirPartyTable::findRec(VendTable::find(purchTable.OrderAccount).Party).Name;
                tmpSubcontractRetainage.SubContract    = purchTable.PurchId;
                tmpSubcontractRetainage.LineAmount     = lineAmount;
                tmpSubcontractRetainage.InvoicedAmount = invoicedAmount - retainAmount;
                tmpSubcontractRetainage.RetainAmount   = retainAmount;
                tmpSubcontractRetainage.PaidAmount     = paidAmount;
                tmpSubcontractRetainage.BackAmount     = backingAmount;
                tmpSubcontractRetainage.PurchaseOrderCurrency = purchTable.CurrencyCode;
                tmpSubcontractRetainage.insert();
            }
        }
        PSATmpSubcontractRetainage.setTmpData(tmpSubcontractRetainage);
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalBackAmount</Name>
				<Source><![CDATA[
    display AmountCur totalBackAmount()
    {
        PSATmpSubcontractRetainage  subcontractRetainage;
        AmountCur                   backAmount;

        for (subcontractRetainage = PSATmpSubcontractRetainage_ds.getFirst() ? PSATmpSubcontractRetainage_ds.getFirst():PSATmpSubcontractRetainage_ds.cursor();
            subcontractRetainage;  subcontractRetainage = PSATmpSubcontractRetainage_ds.getNext())
        {
            backAmount = backAmount + subcontractRetainage.BackAmount;
        }

        return backAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalInvoicedAmount</Name>
				<Source><![CDATA[
    display AmountCur totalInvoicedAmount()
    {
        PSATmpSubcontractRetainage  subcontractRetainage;
        AmountCur                   invoicedAmount;

        for (subcontractRetainage = PSATmpSubcontractRetainage_ds.getFirst() ? PSATmpSubcontractRetainage_ds.getFirst() :PSATmpSubcontractRetainage_ds.cursor();
            subcontractRetainage;  subcontractRetainage = PSATmpSubcontractRetainage_ds.getNext())
        {
            invoicedAmount = invoicedAmount + subcontractRetainage.InvoicedAmount;
        }

        return invoicedAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalLineAmount</Name>
				<Source><![CDATA[
    display AmountCur totalLineAmount()
    {
        PSATmpSubcontractRetainage  subcontractRetainage;
        AmountCur                   lineAmount;

        for (subcontractRetainage = PSATmpSubcontractRetainage_ds.getFirst() ? PSATmpSubcontractRetainage_ds.getFirst() : null;
            subcontractRetainage;  subcontractRetainage = PSATmpSubcontractRetainage_ds.getNext())
        {
            lineAmount = lineAmount + subcontractRetainage.LineAmount;
        }

        return lineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalPaidAmount</Name>
				<Source><![CDATA[
    display AmountCur totalPaidAmount()
    {
        PSATmpSubcontractRetainage  subcontractRetainage;
        AmountCur                   paidAmount;

        for (subcontractRetainage = PSATmpSubcontractRetainage_ds.getFirst() ? PSATmpSubcontractRetainage_ds.getFirst():PSATmpSubcontractRetainage_ds.cursor();
            subcontractRetainage;subcontractRetainage = PSATmpSubcontractRetainage_ds.getNext())
        {
            paidAmount = paidAmount + subcontractRetainage.PaidAmount;
        }

        return paidAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalRetainAmount</Name>
				<Source><![CDATA[
    display AmountCur totalRetainAmount()
    {
        PSATmpSubcontractRetainage  subcontractRetainage;
        AmountCur                   retainAmount;

        for (subcontractRetainage = PSATmpSubcontractRetainage_ds.getFirst()? PSATmpSubcontractRetainage_ds.getFirst() :PSATmpSubcontractRetainage_ds.cursor();
             subcontractRetainage;  subcontractRetainage = PSATmpSubcontractRetainage_ds.getNext())
        {
            retainAmount = retainAmount + subcontractRetainage.RetainAmount;
        }

        return retainAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendAccount</Name>
				<Source><![CDATA[
    VendAccount  vendAccount(VendAccount _vendAccount = m_sVendAccount)
    {
        m_sVendAccount = _vendAccount;
        return m_sVendAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendAccountLookupFilterQuery</Name>
				<Source><![CDATA[
    private Query vendAccountLookupFilterQuery()
    {
        var query = VendorDataInteractorFactory::constructDefaultBaseQuery();
        var queryBuildDataSource = query.dataSourceTable(tableNum(VendTable));

        if (Subcontract.valueStr())
        {
            var queryBuildPurchTable = queryBuildDataSource.addDataSource(tableNum(PurchTable));
            queryBuildPurchTable.relations(true);
            queryBuildPurchTable.joinMode(JoinMode::ExistsJoin);
            queryBuildPurchTable.addRange(fieldNum(PurchTable, PurchId)).value(queryValue(Subcontract.valueStr()));
        }

        return query;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PSATmpSubcontractRetainage</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            element.subcontractRetainage();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            VendTable            vendTable;
            ProjTable            projTable;
            QueryBuildDataSource subcontractRetainage;

            super();

            m_eFirst = true;

            if (element.args().caller())
            {
                switch (element.args().caller().name())
                {
                    case formStr (VendTable):
                        vendTable = element.args().record();
                        element.vendAccount(vendTable.AccountNum);
                        VendAccount.text(vendTable.AccountNum);
                        break;

                    case formStr (ProjTable):
                    case formStr (ProjProjectsListPage):
                        projTable = element.args().record();
                        element.projId(projTable.ProjId);
                        ProjId.text(projTable.ProjId);
                        includeLower.value(!projOpsEnabled);
                        element.includeLower(!projOpsEnabled);
                        break;
                    default:
                }
            }

            subcontractRetainage = this.query().dataSourceTable(tablenum(PSATmpSubcontractRetainage));
            subcontractRetainage.clearDynalinks();

            FromDate.dateValue(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
            element.parmFromDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
            ToDate.dateValue(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
            element.parmToDate(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Refresh</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            PSATmpSubcontractRetainage_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjTransItem</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args = new args();
            PurchLine purchLine;
            str       tmpStr = '';

            args.caller(element);
            args.record(PSATmpSubcontractRetainage);
            while select PurchId,ProjTransId from purchLine
                where purchLine.PurchId == PSATmpSubcontractRetainage.SubContract
            {
                if (strlen(tmpStr))
                {
                    tmpStr = tmpStr +',"' + purchLine.ProjTransId +'"';
                }
                else
                {
                    tmpStr = '"' + purchLine.ProjTransId + '"';
                }
            }
            if (!PSATmpSubcontractRetainage.SubContract)
            {
                tmpStr = SysQuery::valueEmptyString();
            }
            if (!tmpStr)
            {
                tmpStr = SysQuery::valueEmptyString();
            }
            args.parm(tmpStr);
            new MenuFunction(menuitemdisplaystr(ProjTransItem), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.parmToDate(ToDate.dateValue());
            element.parmFromDate(this.dateValue());

            if (!element.parmFromDate())
            {
                 element.parmFromDate(dateNull());
            }

            if (!element.parmToDate())
            {
                 element.parmToDate(maxdate());
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>VendAccount</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query query = element.vendAccountLookupFilterQuery();
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(VendTable), VendAccount, true,
                    VendorDataInteractorFactory::useExistingOrCreateResolver(this, query));
            sysTableLookup.addLookupfield(fieldNum(VendTable, AccountNum));
            sysTableLookup.addLookupfield(fieldNum(VendTable, Party));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            element.vendAccount(this.valueStr());

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveAmbiguousReference</Name>
						<Source><![CDATA[
        public str resolveAmbiguousReference()
        {
            return VendorDataInteractorFactory::resolveAmbiguousReferenceForControl(this, element.vendAccountLookupFilterQuery());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProjId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(ProjTable), ProjId);
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource = query.addDataSource(tableNum(ProjTable));
            QueryBuildDataSource    queryBuildPurchTable;

            if (Subcontract.valueStr())
            {
                queryBuildPurchTable = queryBuildDataSource.addDataSource(tableNum(PurchTable));
                queryBuildPurchTable.relations(true);

                queryBuildPurchTable.addRange(fieldNum(PurchTable, PurchId)).value(queryValue(Subcontract.valueStr()));
            }
            sysTableLookup.addLookupfield(fieldNum(ProjTable, ProjId));
            sysTableLookup.addLookupfield(fieldNum(ProjTable, Name));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.projId(this.text());

            if (element.projId() && !projOpsEnabled)
            {
                includeLower.enabled(true);
            }
            else
            {
                includeLower.value(false);
                element.includeLower(false);
                includeLower.enabled(false);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Subcontract</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(PurchTable), SubContract);
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource = query.addDataSource(tableNum(PurchTable));

            if (VendAccount.valueStr())
            {
                QueryBuildDataSource.addRange(fieldNum(PurchTable, OrderAccount)).value(queryValue(VendAccount.valueStr()));
            }
            if (ProjId.valueStr())
            {
                QueryBuildDataSource.addRange(fieldNum(PurchTable, ProjId)).value(queryValue(ProjId.valueStr()));
            }
            sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchId));
            sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchName));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            element.subcontract(this.valueStr());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>IncludeLower</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            element.includeLower(this.value());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PSATmpSubcontractRetainage</Name>
			<Table>PSATmpSubcontractRetainage</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BackAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoicedAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaidAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProjName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetainAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubContract</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendName</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@PSA11499</Caption>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">SimpleList</Style>
		<TitleDataSource xmlns="">PSATmpSubcontractRetainage</TitleDataSource>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Refresh</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS60181</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<LeftMargin>60</LeftMargin>
						<LeftMarginMode>Fixed</LeftMarginMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ViewButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>RelatedInformation</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>PurchTable</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>PurchTable</MenuItemName>
										<Text>@SYS25545</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ProjTransItem</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS91516</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS111665</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Filter</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<Visible>No</Visible>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>FromDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>536870910</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>TransDate</ExtendedDataType>
						<Label>@SYS5209</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>ToDate</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>805306365</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>TransDate</ExtendedDataType>
						<Label>@SYS35904</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>VendAccount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>VendAccount</ExtendedDataType>
						<Label>@SYS80105</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ProjId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1342177275</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>ProjId</ExtendedDataType>
						<Label>@SYS80304</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Subcontract</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612730</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>PurchIdBase</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>IncludeLower</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1879048185</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS91949</Label>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>general_ProjId</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ProjId</DataField>
						<DataSource>PSATmpSubcontractRetainage</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>general_VendAccount</Name>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>VendAccount</DataField>
						<DataSource>PSATmpSubcontractRetainage</DataSource>
						<Label>@SYS80105</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>general_SubContract</Name>
						<ElementPosition>1957341864</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>SubContract</DataField>
						<DataSource>PSATmpSubcontractRetainage</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>general_SalesCurrency</Name>
						<ElementPosition>2035635538</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Currency</DataField>
						<DataSource>PSATmpSubcontractRetainage</DataSource>
						<Label>@SYS56480</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>general_PurchaseOrderCurrency</Name>
						<ElementPosition>2035635538</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>PurchaseOrderCurrency</DataField>
						<DataSource>PSATmpSubcontractRetainage</DataSource>
						<Label>@ProcurementAndSourcing:PurchaseOrderCurrency</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>general_LineAmount</Name>
						<ElementPosition>2113929214</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>LineAmount</DataField>
						<DataSource>PSATmpSubcontractRetainage</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>general_InvoicedAmount</Name>
						<ElementPosition>2130706430</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>InvoicedAmount</DataField>
						<DataSource>PSATmpSubcontractRetainage</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>general_RetainAmount</Name>
						<ElementPosition>2139095038</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>RetainAmount</DataField>
						<DataSource>PSATmpSubcontractRetainage</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>general_PaidAmount</Name>
						<ElementPosition>2143289342</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>PaidAmount</DataField>
						<DataSource>PSATmpSubcontractRetainage</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
				</Controls>
				<DataSource>PSATmpSubcontractRetainage</DataSource>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>