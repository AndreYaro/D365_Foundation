<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TrvAssignWorker</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TrvAssignWorker extends FormRun
{
}
]]></Source>
			</Method>
			<Method>
				<Name>updateCallerForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the caller form, if any.
    /// </summary>
    private void updateCallerForm()
    {
        if (element.args())
        {
            TrvIUpdateEnabled updateEnabledCaller = element.args().caller() as TrvIUpdateEnabled;
            if (updateEnabledCaller)
            {
                updateEnabledCaller.updateForm();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>TrvAssignWorkerLookup</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Override super() logic to create a lookup for all workers in this company.
        /// </summary>
        public void lookup()
        {
            HcmWorkerLookup::newOnlyActiveEmployeesWithinCompany().lookupWorker(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OkButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Reassign unreconciled expenses to another employee.
        /// </summary>
        public void clicked()
        {
            super();
            TrvPBSMaindata	        selectedCreditCardTransaction;
            MultiSelectionHelper    selectedCreditCardTransactions = MultiSelectionHelper::createFromCaller(element.args().caller());
            HcmWorkerRecId          workerRecId = HcmWorker::findByPersonnelNumber(TrvAssignWorkerLookup.valueStr()).RecId;

            selectedCreditCardTransaction = selectedCreditCardTransactions.getFirst();

            ttsbegin;
            while (selectedCreditCardTransaction)
            {
                selectedCreditCardTransaction.selectForUpdate(true);
                selectedCreditCardTransaction.Worker = workerRecId;
                selectedCreditCardTransaction.update();

                TrvExpTrans trvExpTrans;
                select firstonly forupdate trvExpTrans where trvExpTrans.PBSRecId == selectedCreditCardTransaction.RecId;

                if (trvExpTrans.RecId && workerRecId != trvExpTrans.CreatingWorker)
                {
                    // Remove from expense report if already attached to an expense report
                    if (trvExpTrans.ExpNumber)
                    {
                        trvExpTrans.updateExpenseReport('', false);
                    }

                    // Move expense line to the new worker
                    TrvExpTrans::updateCreatingWorker(trvExpTrans.RecId, workerRecId);
                }

                selectedCreditCardTransaction = selectedCreditCardTransactions.getNext();
            }
            ttscommit;

            element.updateCallerForm();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@Expense:ReassignTransactionsFormTitle</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>TrvAssignWorkerFields</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>TrvAssignWorkerLookup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS101316</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>TrvAssignWorkerButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>