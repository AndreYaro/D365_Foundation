<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PaymCalendar</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PaymCalendar extends FormRun
{
}
]]></Source>
			</Method>
			<Method>
				<Name>enableDisableCountryRegion</Name>
				<Source><![CDATA[
    public void enableDisableCountryRegion()
    {
        boolean isNewRecord = (paymCalendar.RecId == 0);
        boolean allowEdit = isNewRecord && (CountryRegionCalendarCheckBox.value() == true);

        PaymCalendarCountryRegion_CountryRegion1.allowEdit(allowEdit);
        PaymCalendarCountryRegion_CountryRegion1.skip(!allowEdit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableStateHoliday</Name>
				<Source><![CDATA[
    public void enableDisableStateHoliday()
    {
        LogisticsAddressState logisticsAddressState;
        LogisticsAddressCountryRegion logisticsAddressCountryRegion;
        boolean enableStateHoliday;

        // Enable/disable State holiday
        enableStateHoliday = false;

        if (PaymCalendarCountryRegion.CountryRegion != 0)
        {
            select firstonly RecId from logisticsAddressState
                join RecId from logisticsAddressCountryRegion
                    where logisticsAddressCountryRegion.CountryRegionId == logisticsAddressState.CountryRegionId
                        && logisticsAddressCountryRegion.RecId == PaymCalendarCountryRegion.CountryRegion;

            enableStateHoliday = (logisticsAddressState.RecId != 0);
        }

        StateHolidaysButton.enabled(enableStateHoliday);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        int defaultYear = year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));

        super();

        // Set default sorts
        PaymCalendar_q.dataSourceTable(tablenum(PaymCalendar)).addSortField(fieldNum(PaymCalendar, Name));
        PaymCalendarException_q.dataSourceTable(tablenum(PaymCalendarException)).addSortField(fieldNum(PaymCalendarException, ExceptionDate));

        // Setup year filter
        paymCalendarException_ds.query().dataSourceTable(tableNum(PaymCalendarException)).addRange(fieldNum(PaymCalendarException, ExceptionDate));
        CalendarYearStringEdit.text(int2str(defaultYear));
        this.setYearRange(defaultYear);

        StateHolidaysButton.enabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setYearRange</Name>
				<Source><![CDATA[
    public void setYearRange(int _year)
    {
        date firstDayInYear;
        date lastDayInYear;

        PreferredLocale locale = new xSession().preferredLocale();

        firstDayInYear = mkDate(1, 1, _year);
        lastDayInYear = DateTimeUtil::getEndOfYearDate(locale, firstDayInYear);

        paymCalendarException_ds.query().dataSourceTable(tableNum(PaymCalendarException)).rangeField(fieldNum(PaymCalendarException, ExceptionDate)).value(queryRange(firstDayInYear, lastDayInYear));
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PaymCalendar</Name>
				<Methods>
					<Method>
						<Name>deleted</Name>
						<Source><![CDATA[
        public void deleted()
        {
            super();

            // Clear country/region fields when deleting last record; numberOfRowsLoaded() is decremented
            // only after this method completes so check against 1
            if (paymCalendar_ds.numberOfRowsLoaded() == 1)
            {
                CountryRegionCalendarCheckBox.value(false);
                PaymCalendarCountryRegion.CountryRegion = 0;
                element.enableDisableStateHoliday();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            Name fieldName;

            if ((CountryRegionCalendarCheckBox.value() == true) && PaymCalendarCountryRegion.CountryRegion == 0)
            {
                fieldName = fieldId2PName(tableNum(PaymCalendarCountryRegion), fieldNum(PaymCalendarCountryRegion, CountryRegion));
                return checkFailed(strFmt("@SYS26332", fieldName));
            }

            return super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            StateHoliday stateHoliday;
            LogisticsAddressState logisticsAddressState;
            LogisticsAddressCountryRegion logisticsAddressCountryRegion;

            boolean isValid = super();

            // Check if state holidays exist
            if (isValid && PaymCalendarCountryRegion.CountryRegion != 0)
            {
                select firstonly RecId from stateHoliday
                    exists join logisticsAddressState
                        where logisticsAddressState.RecId == stateHoliday.State
                    exists join logisticsAddressCountryRegion
                        where logisticsAddressCountryRegion.CountryRegionId == logisticsAddressState.CountryRegionId
                            && logisticsAddressCountryRegion.RecId == PaymCalendarCountryRegion.CountryRegion;

                if (stateHoliday)
                {
                    if (DialogButton::No == Box::yesNo(strFmt("@CashManagement:GLS220198", "@CashManagement:GLS220106"), DialogButton::No, "@SYS24848"))
                    {
                        isValid = false;
                    }
                }
            }

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            boolean isNewRecord = (paymCalendar.RecId == 0);
            boolean allowEdit = isNewRecord;

            ret = super();

            if (isNewRecord)
            {
                // Default to non-location based
                CountryRegionCalendarCheckBox.value(false);
            }
            else
            {
                // Set value based on saved state
                CountryRegionCalendarCheckBox.value(PaymCalendarCountryRegion.CountryRegion != 0);
            }

            // Enable/disable calendar type
            CountryRegionCalendarCheckBox.allowEdit(allowEdit);
            CountryRegionCalendarCheckBox.skip(!allowEdit);

            // Enable/disable country region
            element.enableDisableCountryRegion();

            // Enable/disable State holiday
            element.enableDisableStateHoliday();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>PaymCalendarException</Name>
				<Methods>
					<Method>
						<Name>DayOfDate</Name>
						<Source><![CDATA[
        display String30 DayOfDate(PaymCalendarException _paymCalendarException)
        {
            return dayName(dayOfWk(_paymCalendarException.ExceptionDate));
        }

]]></Source>
					</Method>
					<Method>
						<Name>MonthOfDate</Name>
						<Source><![CDATA[
        display String30 MonthOfDate(PaymCalendarException _paymCalendarException)
        {
            return mthName(mthOfYr(_paymCalendarException.ExceptionDate));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ExceptionDate</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                PaymCalendarException paymCalendarExceptionLocal;
                StateHoliday stateHoliday;
                CityHoliday cityHoliday;
                LogisticsAddressState logisticsAddressState;
                LogisticsAddressCity logisticsAddressCity;
                LogisticsAddressCountryRegion logisticsAddressCountryRegion;
                boolean isValid;

                isValid = super();

                // Check for duplicate date
                paymCalendarExceptionLocal = PaymCalendarException::findByPaymCalendarDate(paymCalendar.RecId, PaymCalendarException.ExceptionDate);

                if (paymCalendarExceptionLocal)
                {
                    isValid = checkFailed(strFmt(
                        "@CashManagement:GLS220199",
                        date2StrUsr(PaymCalendarException.ExceptionDate)));
                }

                // Check for same date in state and city holiday
                if (isValid && PaymCalendarCountryRegion)
                {
                    select firstonly RecId from stateHoliday
                            where stateHoliday.HolidayDate == PaymCalendarException.ExceptionDate
                        join StateId from logisticsAddressState
                            where logisticsAddressState.RecId == stateHoliday.State
                        exists join logisticsAddressCountryRegion
                            where logisticsAddressCountryRegion.RecId == PaymCalendarCountryRegion.CountryRegion
                                && logisticsAddressCountryRegion.CountryRegionId == logisticsAddressState.CountryRegionId;

                    if (stateHoliday)
                    {
                        isValid = checkFailed(strFmt(
                            "@GLS220220",
                            date2StrUsr(PaymCalendarException.ExceptionDate),
                            logisticsAddressState.StateId));
                    }
                    else
                    {
                        select firstonly RecId from cityHoliday
                            where cityHoliday.HolidayDate == PaymCalendarException.ExceptionDate
                            join CountryRegionId, Name from logisticsAddressCity
                                where logisticsAddressCity.RecId == cityHoliday.City
                            exists join logisticsAddressCountryRegion
                                where logisticsAddressCountryRegion.RecId == PaymCalendarCountryRegion.CountryRegion
                                    && logisticsAddressCountryRegion.CountryRegionId == logisticsAddressCity.CountryRegionId;

                        if (cityHoliday)
                        {
                            isValid = checkFailed(strFmt(
                                "@GLS222235",
                                date2StrUsr(PaymCalendarException.ExceptionDate),
                                logisticsAddressCity.Name));
                        }
                    }
                }

                return isValid;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>PaymCalendarCountryRegion</Name>
				<Methods />
				<Fields>
					<Field>
						<DataField>CountryRegion</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.enableDisableStateHoliday();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean isValid;
                PaymCalendarCountryRegion paymCalendarCountryRegionLocal;

                isValid = super();

                if (isValid && paymCalendarCountryRegion.CountryRegion != 0)
                {
                    select firstonly RecId from paymCalendarCountryRegionLocal
                        where paymCalendarCountryRegionLocal.CountryRegion == paymCalendarCountryRegion.CountryRegion;

                    if (paymCalendarCountryRegionLocal)
                    {
                        isValid = checkFailed("@CashManagement:GLS220197");
                    }
                }

                return isValid;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CountryRegionCalendarCheckBox</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            // Clear country region if unchecking
            if (CountryRegionCalendarCheckBox.value() == false)
            {
                PaymCalendarCountryRegion.CountryRegion = 0;
                element.enableDisableStateHoliday();
            }

            element.enableDisableCountryRegion();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CalendarYearStringEdit</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            int maxYear = year(maxDate());
            int minYear = year(dateNull());
            int yearValue;

            ret = super();

            yearValue = str2int(this.valueStr());

            if ((yearValue < minYear) || (yearValue > maxYear))
            {
                return checkFailed(strFmt("@CashManagement:GLS220200", this.valueStr()));
            }

            element.setYearRange(yearValue);
            paymCalendarException_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSourceChangeGroupMode>ImplicitInnerOuter</DataSourceChangeGroupMode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PaymCalendar</Name>
			<Table>PaymCalendar</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsFridayBusinessDay</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsMondayBusinessDay</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSaturdayBusinessDay</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSundayBusinessDay</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsThursdayBusinessDay</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsTuesdayBusinessDay</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsWednesdayBusinessDay</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>NameIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PaymCalendarException</Name>
			<Table>PaymCalendarException</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExceptionDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExceptionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymCalendar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PaymCalendar</JoinSource>
			<LinkType>Active</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PaymCalendarCountryRegion</Name>
			<Table>PaymCalendarCountryRegion</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CountryRegion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymCalendar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PaymCalendar</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@CashManagement:GLS220106</Caption>
		<DataSource xmlns="">PaymCalendar</DataSource>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>StateHolidaysButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>StateHoliday</MenuItemName>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>PaymCalendar</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl1</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PaymCalendar_Name</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>PaymCalendar</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>PaymCalendarCountryRegion_CountryRegion</Name>
								<ElementPosition>1670265058</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@FieldDescriptions_AccountsPayable:PaymCalendar_PaymCalendarCountryRegion_CountryRegion</HelpText>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PaymCalendarCountryRegion_CountryRegion_CountryRegionId</Name>
										<DataRelationPath>CountryRegion</DataRelationPath>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<DataSource>PaymCalendarCountryRegion</DataSource>
								<ReferenceField>CountryRegion</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PaymCalendar_Description1</Name>
								<ElementPosition>1908874352</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>PaymCalendar</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>PaymCalendar</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PaymCalendar_Name1</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>613566756</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>PaymCalendar</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>CountryRegionCalendarCheckBox</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>766958445</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_AccountsPayable:PaymCalendar_CountryRegionCalendarCheckBox</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@CashManagement:GLS220263</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>PaymCalendarCountryRegion_CountryRegion1</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>920350134</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@FieldDescriptions_AccountsPayable:PaymCalendar_PaymCalendarCountryRegion_CountryRegion1</HelpText>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PaymCalendarCountryRegion_CountryRegion1_CountryRegionId</Name>
								<DataRelationPath>CountryRegion</DataRelationPath>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<DataSource>PaymCalendarCountryRegion</DataSource>
						<ReferenceField>CountryRegion</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PaymCalendar_Description</Name>
						<ElementPosition>1227133512</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>PaymCalendar</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>WeekdaysTab</Name>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Weekdays</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Weekdays_IsMondayBusinessDay</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsMondayBusinessDay</DataField>
										<DataSource>PaymCalendar</DataSource>
										<Style>Checkbox</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Weekdays_IsTuesdayBusinessDay</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsTuesdayBusinessDay</DataField>
										<DataSource>PaymCalendar</DataSource>
										<Style>Checkbox</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Weekdays_IsWednesdayBusinessDay</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsWednesdayBusinessDay</DataField>
										<DataSource>PaymCalendar</DataSource>
										<Style>Checkbox</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Weekdays_IsThursdayBusinessDay</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsThursdayBusinessDay</DataField>
										<DataSource>PaymCalendar</DataSource>
										<Style>Checkbox</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Weekdays_IsFridayBusinessDay</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsFridayBusinessDay</DataField>
										<DataSource>PaymCalendar</DataSource>
										<Style>Checkbox</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Weekdays_IsSaturdayBusinessDay</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsSaturdayBusinessDay</DataField>
										<DataSource>PaymCalendar</DataSource>
										<Style>Checkbox</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Weekdays_IsSundayBusinessDay</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsSundayBusinessDay</DataField>
										<DataSource>PaymCalendar</DataSource>
										<Style>Checkbox</Style>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@CashManagement:GLS220116</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ExceptionDays</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane1</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab1</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ButtonGroup1</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>AddException</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Text>@SYS2318</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>RemoveException</Name>
														<ElementPosition>1610612733</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<SaveRecord>No</SaveRecord>
														<Text>@sys311855</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>PaymCalendarException</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ExceptionDaysFilter</Name>
								<ElementPosition>1840700268</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CalendarYearStringEdit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@CashManagement:PaymCalendarExceptionDayFilterLabel</Label>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Exceptions</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>PaymCalendarException_Date</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_AccountsPayable:PaymCalendar_PaymCalendarException_Date</HelpText>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ExceptionDate</DataField>
										<DataSource>PaymCalendarException</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DayOfDate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>DayOfDate</DataMethod>
										<DataSource>PaymCalendarException</DataSource>
										<Label>@SYS4569</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>MonthOfDate</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>MonthOfDate</DataMethod>
										<DataSource>PaymCalendarException</DataSource>
										<Label>@SYS11451</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PaymCalendarException_ExceptionType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_AccountsPayable:PaymCalendar_PaymCalendarException_ExceptionType</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ExceptionType</DataField>
										<DataSource>PaymCalendarException</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PaymCalendarException_Description</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>PaymCalendarException</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>PaymCalendarException</DataSource>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
						</Controls>
						<Caption>@CashManagement:GLS220190</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>