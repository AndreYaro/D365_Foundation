<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>JmgLockScreenDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public final class JmgLockScreenDialog extends FormRun
{
    private Name                        callerName;
    private int                         currentTimerValue;
    private guid                        localguid;
    private JmgInstrumentationLogger    logger;

}
]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void run()
    {
        logger = JmgInstrumentationLogger::createLogger(formStr(JmgLockScreenDialog));
        localguid = newGuid();
        using(var activityContext = JmgRegistrationInstrumentationActivities::initFormParms(logger.registration().lockScreen(), callerName))
        {
            super();
            
            this.logguid();
            icon.normalImage(ImageReferenceSymbol::Personalize);
            CounterText.text(strFmt("@SCM:JmgRemainingTime", currentTimerValue));
            EmptyText.setFocus();
            EmptyText.visible();          
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>logguid</Name>
				<Source><![CDATA[
    private void logguid()
    {
        SysInstrumentationEventDataJsonSerializer serializer = new SysInstrumentationEventDataJsonSerializer();

        serializer.setValue(JmgRegistrationInstrumentationActivities::ParmGuid, guid2Str(localguid));
        logger.logInformation(serializer.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallerName</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public Name parmCallerName(IdentifierName  _callerName = callerName)
    {
        callerName = _callerName;
        return callerName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrentTimerValue</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int parmCurrentTimerValue(int  _currentTimerValue = currentTimerValue)
    {
        currentTimerValue = _currentTimerValue;
        return currentTimerValue;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>LockScreenTimer</Name>
				<Type>Custom</Type>
				<Methods>
					<Method>
						<Name>elapsed</Name>
						<Source><![CDATA[
        [Hookable(false)]
        public int elapsed()
        {
            int ret;
    
            ret = super();

            currentTimerValue = currentTimerValue -1;
            CounterText.text(strFmt("@SCM:JmgRemainingTime", currentTimerValue));
            if(currentTimerValue == -1)
            {
                if (logger)
                {
                    using(var activityContext = logger.registration().lockScreenClosed())
                    {
                        element.logguid();
                    }
                }
                element.close();
            }
            else if(currentTimerValue == 0)
            {
                icon.normalImage(ImageReferenceSymbol::GreenCheck);
            }
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<AllowUserSetup xmlns="">No</AllowUserSetup>
		<Caption xmlns="">@SCM:JmgScreenIsLocked</Caption>
		<DialogSize xmlns="">Full</DialogSize>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Custom</Pattern>
		<Scrollbars xmlns="">No</Scrollbars>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<WindowType xmlns="">Slider</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogGroup</Name>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ImageGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>PleaseSanitize</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ExtendedStyle>staticText_mediumHeadingFont</ExtendedStyle>
								<HeightMode>Auto</HeightMode>
								<Type>StaticText</Type>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SCM:JmgPleaseSanitize</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormImageControl">
								<Name>icon</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Image</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS8483</Label>
								<ShowLabel>No</ShowLabel>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>MainGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>TextGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>429496729</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStaticTextControl">
												<Name>CounterText</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ExtendedStyle>staticText_mediumHeadingFont</ExtendedStyle>
												<HeightMode>Auto</HeightMode>
												<Type>StaticText</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Text></Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStaticTextControl">
												<Name>EmptyText</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>StaticText</Type>
												<FormControlExtension
													i:nil="true" />
												<Text></Text>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>Auto</ArrangeMethod>
										<ArrangeWhen>Never</ArrangeWhen>
										<LeftMargin>11</LeftMargin>
										<RightMargin>11</RightMargin>
										<RightMarginMode>Fixed</RightMarginMode>
										<TopMargin>11</TopMargin>
										<TopMarginMode>Fixed</TopMarginMode>
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Auto</ArrangeMethod>
								<ArrangeWhen>Never</ArrangeWhen>
							</AxFormControl>
						</Controls>
						<ArrangeWhen>Never</ArrangeWhen>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl>
				<Name>LockScreenTimer</Name>
				<FormControlExtension>
					<Name>TimerControl</Name>
					<ExtensionComponents />
					<ExtensionProperties>
						<AxFormControlExtensionProperty>
							<Name>interval</Name>
							<Type>Int32</Type>
							<Value>1</Value>
						</AxFormControlExtensionProperty>
						<AxFormControlExtensionProperty>
							<Name>startOnFormCreation</Name>
							<Type>Enum</Type>
							<TypeName>NoYes</TypeName>
							<Value>Yes</Value>
						</AxFormControlExtensionProperty>
					</ExtensionProperties>
				</FormControlExtension>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>