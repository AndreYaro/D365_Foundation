<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailCommerceValidatorCreateValidation</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailCommerceValidatorCreateValidation extends FormRun
{
}
]]></Source>
			</Method>
			<Method>
				<Name>createOrExecuteValidation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or executes the validation
    /// </summary>
    private void createOrExecuteValidation(boolean _executeNow = false)
    {
        if (OMOperatingUnitId.value())
        {
            // Create and save/executes validation
            RetailCommerceValidator::create(OMOperatingUnitId.value(),_executeNow);

            element.close();
        }
        else
        {
            warning("@Retail:RetailCommerceValidatorChannelIdWarning");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupChannel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Channel Name lookup.
    /// </summary>
    /// <param name = "_callerFormControl">The form control</param>
    /// <returns>The selected record of <c>OMOperatingUnit</c> table.</returns>
    public OMOperatingUnit lookupChannel(FormControl _callerFormControl)
    {
        Args args;
        FormRun lookupFormRun;
        Form channelLookupForm = new Form(formStr(RetailCommerceValidatorChannelLookup));
        FormReferenceControl operatingUnitReferenceCtrl = _callerFormControl as FormReferenceControl;
        OMOperatingUnit omOperatingUnit;

        args = new Args();
        args.name(formStr(RetailCommerceValidatorChannelLookup));
        args.caller(_callerFormControl.formRun());
        args.parmObject(this);

        // A reference control supposed to contain a key RecId value
        omOperatingUnit = OMOperatingUnit::find(operatingUnitReferenceCtrl.value(), OMOperatingUnitType::RetailChannel);

        if (omOperatingUnit.RecId != 0)
        {
            args.lookupRecord(omOperatingUnit);
        }

        // Perform form lookup on the caller form control
        if (operatingUnitReferenceCtrl)
        {
            lookupFormRun = FormAutoLookupFactory::buildReferenceLookupFromCustomForm(operatingUnitReferenceCtrl, channelLookupForm, args);
            operatingUnitReferenceCtrl.performFormLookup(lookupFormRun);
        }

        omOperatingUnit = lookupFormRun.selectRecordModeSelectedRecord();

        return omOperatingUnit;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>OMOperatingUnitId</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        /// <summary>
        /// Exploded channel reference group lookup. It shows all leaf channels
        /// Ex: Mall channel has 4 channels linked to it, 'San Jose', 'San Francisco', 'Atlanta' and 'Houston' with distance > 0.
        /// All those 4 channels are leaf channels and Mall is a channel which is a group of all 4. Lookup shows only leaf channels not a group channel.
        /// </summary>
        /// <returns>Common table containing of lookup records.</returns>
        public Common lookupReference()
        {
            return element.lookupChannel(OMOperatingUnitId);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Save</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Saves the record
        /// </summary>
        public void clicked()
        {
            super();

            // Creates the validation.
            element.createOrExecuteValidation();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Execute</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes validation
        /// </summary>
        public void clicked()
        {
            super();

            // Creates and executes the validation.
            element.createOrExecuteValidation(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Cancel</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Closes the form.
        /// </summary>
        public void clicked()
        {
            super();

            element.closeCancel();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">Create new validation</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ParametersGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ValidationId</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>OMOperatingUnitId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ReferenceGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<ExtendedDataType>OMOperatingUnitRefRecId</ExtendedDataType>
						<Label>@Retail:ReportChannelId</Label>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>Save</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Button</Type>
						<FormControlExtension
							i:nil="true" />
						<AutoRefreshData>Yes</AutoRefreshData>
						<Text>@SYS55796</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>Execute</Name>
						<Type>Button</Type>
						<FormControlExtension
							i:nil="true" />
						<Text>@SYS2076</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>Cancel</Name>
						<Type>Button</Type>
						<FormControlExtension
							i:nil="true" />
						<Text>@SYS104253</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>