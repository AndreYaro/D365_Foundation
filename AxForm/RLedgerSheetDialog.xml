<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RLedgerSheetDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public final class RLedgerSheetDialog extends FormRun
{
    Dialog               dialog;

    FilenameFilter       filenameLookupFilter;
    str                  filenameLookupInitialPath;
    str                  filenameLookupTitle;
    str                  filenameLookupFilename;
    str                  folderLookupTitle;
    boolean              running;
    TransDate            fromDateValue;
    TransDate            toDateValue;
    MainAccountNum       mainAccountValue;
    MainAccountNum       mainAccountNumFromValue;
    MainAccountNum       mainAccountNumToValue;
    CurrencyType_RU      currencyTypeValue;
    CurrencyCode         currencyCodeValue;
    boolean              debCredProposalValue;
    DateCode             periodCodeValue;
    container            selectedFieldsOrder;
    CurrencyTypeBrief_RU currencyTypeBriefValue;

    NoYes                contragentValue;
    CustVendAC           custVendACValue;

    CustVendDetailBalans_RU custVendDetailBalansValue;

    DimensionDefault                  dimensionCriteria;

    DimensionEntryControl dimensionEntryControl;

    protected const int mainAccountNumber = 0;
    protected const int custVendAccount = 1;
    protected const int contract = 2;
    protected const int fields = 3;

}
]]></Source>
			</Method>
			<Method>
				<Name>addAll</Name>
				<Source><![CDATA[
    void addAll()
    {
        int         it;
        int         len = fields - conlen(selectedFieldsOrder);
        int         cur, prev;
        container   upper = [ mainAccountNumber,
                              custVendAccount ],
                    lower = [ contract ];

        container   allFieldsOrder;
        const int value2 = 2;

        if (! len)
            return;

        for (it = 0; it < fields; it++)
        {
            if (! confind(selectedFieldsOrder, it))
            {
                allFieldsOrder += it;
            }
        }

        for (it = 1; it <= len; it ++)
        {
            selectedFieldsOrder += conpeek(allFieldsOrder, it);
        }

        it = value2;
        while (it <= conlen(selectedFieldsOrder))
        {
            cur  = conpeek(selectedFieldsOrder, it);
            prev = conpeek(selectedFieldsOrder, it - 1);
            if (confind(upper, cur) &&
                confind(lower, prev))
            {
                selectedFieldsOrder = conins(selectedFieldsOrder, it - 1, cur);
                selectedFieldsOrder = condel(selectedFieldsOrder, it + 1, 1);
                it = value2;
            }
            else
            {
                it ++;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>controlSearchHelper</Name>
				<Source><![CDATA[
    private boolean controlSearchHelper(FormGroupControl _groupControl, str _controlName)
    {
        boolean result;
        for (int i = 1; i <= _groupControl.controlCount(); i += 1)
        {
            FormControl formControl = _groupControl.controlNum(i);
            if (formControl.name() == _controlName)
            {
                result = true;
                break;
            }
        }
        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustColumnWidth</Name>
				<Source><![CDATA[
    private void adjustColumnWidth(FormListControl _listView,
                                   int             _column,
                                   int             _minWidth = -1)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustForTab</Name>
				<Source><![CDATA[
    void adjustForTab(boolean useTab = true)
    {
        if (useTab)
            bottomGrp.frameType(FormFrameType::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>batch</Name>
				<Source><![CDATA[
    void batch(boolean batchable)
    {
        batch.visible(batchable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    void closeOk()
    {
        if (dimensionEntryControl)
        {
            dimensionCriteria = dimensionEntryControl.saveAttributeValueSet();
        }

        dialog.updateServer();
        if (dialog.runBase())
        {
            if (dialog.runBase().checkCloseDialog(this))
                super();
        }
        else
            super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyTypeModified</Name>
				<Source><![CDATA[
    void currencyTypeModified()
    {
        if (currencyType.visible())
        {
            switch (currencyType.selection())
            {
                case CurrencyType_RU::Standard      :
                    currencyCode.text(CompanyInfoHelper::standardCurrency());
                    currencyCode.enabled(false);
                    break;
                case CurrencyType_RU::Secondary    :
                    currencyCode.text(CompanyInfoHelper::secondaryCurrency_RU());
                    currencyCode.enabled(false);
                    break;
                case CurrencyType_RU::Currency    :
                    currencyCode.enabled(true);
                    break;
            }
        }
        if (currencyTypeBrief.visible())
        {
            this.initCurrencyCodeControl(currencyTypeBrief.selection());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCurrencyCodeControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes currency code form control based on currency type brief
    /// </summary>
    /// <param name = "_selection">type brief selected by user</param>
    protected void initCurrencyCodeControl(CurrencyTypeBrief_RU _selection)
    {
        switch (_selection)
        {
            case CurrencyTypeBrief_RU::Standard :
                currencyCode.text(CompanyInfoHelper::standardCurrency());
                currencyCode.enabled(false);
                break;
            case CurrencyTypeBrief_RU::Currency :
                currencyCode.enabled(true);
                break;
            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delAll</Name>
				<Source><![CDATA[
    void delAll()
    {
        selectedFieldsOrder = connull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delSelected</Name>
				<Source><![CDATA[
    public void delSelected()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    Dialog dialog()
    {
        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtons</Name>
				<Source><![CDATA[
    void enableButtons()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlValue</Name>
				<Source><![CDATA[
    container getControlValue()
    {
        [periodCodeValue, fromDateValue, toDateValue, mainAccountValue, currencyTypeValue, currencyCodeValue, debCredProposalValue, selectedFieldsOrder, currencyTypeBriefValue, contragentValue, custVendACValue, custVendDetailBalansValue, dimensionCriteria, mainAccountNumFromValue, mainAccountNumToValue] = [periodCode.text(),
                          fromDate.dateValue(),
                          toDate.dateValue(),
                          mainAccountNum.text(),
                          currencyType.selection(),
                          currencyCode.text(),
                          crediting.value(),
                          selectedFieldsOrder,
                          currencyTypeBrief.selection(),
                          contragent.value(),
                          custVendAC.text(),
                          custVendDetailBalans.selection(),
                          dimensionCriteria,
                          mainAccountNumFrom.text(),
                          mainAccountNumTo.text()];

        return [periodCodeValue, fromDateValue, toDateValue, mainAccountValue, currencyTypeValue, currencyCodeValue, debCredProposalValue, selectedFieldsOrder, currencyTypeBriefValue, contragentValue, custVendACValue, custVendDetailBalansValue, dimensionCriteria, mainAccountNumFromValue, mainAccountNumToValue];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDescription</Name>
				<Source><![CDATA[
    private str getDescription(int  _val)
    {
        str ret = "";
        const str dot = ".";

        switch (_val)
        {
            case mainAccountNumber  :
                ret = "@GLS105064";
                break;
            case custVendAccount :
                ret = strrem("@GLS104555", dot);
                break;
            case contract        :
                ret = "@GLS105065";
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        RLedgerSheetEngine rLedgerSheetEngine;
        DialogGroup        dimensionCriteriaDialogGroup;

        super();

        dialog = this.args().caller();

        if (this.runBase().canGoBatch())
        {
            tab.showTabs(true);
            this.adjustForTab();
        }

        [periodCodeValue, fromDateValue, toDateValue, mainAccountValue, currencyTypeValue, currencyCodeValue, debCredProposalValue, selectedFieldsOrder, currencyTypeBriefValue, contragentValue, custVendACValue, custVendDetailBalansValue, dimensionCriteria, mainAccountNumFromValue, mainAccountNumToValue] = this.runBase().getLastValue();

        periodCode.text(periodCodeValue);
        mainAccountNum.text(mainAccountValue);
        mainAccountNumFrom.text(mainAccountNumFromValue);
        mainAccountNumTo.text(mainAccountNumToValue);
        fromDate.dateValue(fromDateValue);
        toDate.dateValue(toDateValue);
        currencyType.selection(currencyTypeValue);
        currencyCode.text(currencyCodeValue);
        crediting.value(debCredProposalValue);
        currencyTypeBrief.selection(currencyTypeBriefValue);
        contragent.value(contragentValue);
        custVendAC.text(custVendACValue);
        custVendDetailBalans.selection(custVendDetailBalansValue);

        this.runBase().dialogUpdateDesign(dialog);
        this.updateQuery();

        this.currencyTypeModified();

        if (detailBalans.visible())
        {
            element.runBase().updatePrintCVField(custVendDetailBalans.selection());
        }

        rLedgerSheetEngine = this.runBase() as RLedgerSheetEngine;
        dimensionCriteriaDialogGroup = rLedgerSheetEngine.dimensionCriteriaDialogGroup();
        if (dimensionCriteriaDialogGroup.formBuildGroup().visible() && ! this.controlSearchHelper(dimensionCriteriaDialogGroup.control() as FormGroupControl, 'DimensionEntryControl1'))
        {
            dimensionEntryControl = DimensionEntryControlBuild::addToDialogGroup(dimensionCriteriaDialogGroup, classstr(LedgerDimensionEntryController), 'DimensionEntryControl1');

            if (dimensionEntryControl)
            {
                dimensionEntryControl.parmControlLabelText("@SYS14926");
                dimensionEntryControl.parmDisplayValues(true);
                dimensionEntryControl.parmCompany(curext());

                dimensionEntryControl.reactivate();
                dimensionEntryControl.loadAttributeValueSet(dimensionCriteria);
            }
        }
        this.design().caption(rLedgerSheetEngine.caption());
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveDown</Name>
				<Source><![CDATA[
    void moveDown()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveUp</Name>
				<Source><![CDATA[
    void moveUp()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    void run()
    {
        boolean findNonContainer(FormBuildControl buildCtrl)
        {
            FormBuildControl    childBuildCtrl;
            Counter             i;

            for (i=1;i<=buildCtrl.controlCount();i++)
            {
                childBuildCtrl = buildCtrl.controlNum(i);
                if (childBuildCtrl.isContainer())
                {
                    if (this.design().control(childBuildCtrl.id()).allowEdit() &&
                        this.design().control(childBuildCtrl.id()).enabled())
                    {
                        if (findNonContainer(childBuildCtrl))
                            return true;
                    }
                }
                else
                {
                    if (this.design().control(childBuildCtrl.id()).allowEdit() &&
                        this.design().control(childBuildCtrl.id()).enabled())
                    {
                        this.design().control(childBuildCtrl.id()).setFocus();
                        return true;
                    }
                }
            }

            return false;
        }

        super();
        mainAccountNum.setFocus();
        findNonContainer(this.form().design().control(fieldTab.name()));

        running = true;

        creditingType.visible(crediting.visible());
        AccountNum.visible(mainAccountNum.visible() || MainAccountNumFrom.visible());
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    Object runBase()
    {
        return dialog.runBase();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addSelected</Name>
				<Source><![CDATA[
    void addSelected(int _y, FormListControl _fromList)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQuery</Name>
				<Source><![CDATA[
    void updateQuery()
    {
        this.runBase().dialogUpdateQuery(dialog);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>Contragent</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                contragentValue = this.value();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PeriodCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean          ret;
            LedgerPeriodCode ledgerPeriodCode;

            ret = super();
            if (ret && this.text())
            {
                ledgerPeriodCode = LedgerPeriodCode::find(this.text());
                if (ledgerPeriodCode)
                {
                    fromDate.dateValue(ledgerPeriodCode.fromDate());
                    toDate.dateValue(ledgerPeriodCode.toDate());
                    element.updateQuery();
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FromDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                element.updateQuery();
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToDate</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret  = super();

            if (ret)
            {
                element.updateQuery();
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MainAccountNum</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                element.updateQuery();
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CurrencyType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                element.currencyTypeModified();
                element.runBase().dialogUpdateQuery(dialog, true);
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CurrencyTypeBrief</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
            if (ret)
            {
                element.currencyTypeModified();
                element.runBase().dialogUpdateQuery(dialog, true);
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CurrencyCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            if (ret)
            {
                element.updateQuery();
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PrintCurrencyType_DEL</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();
            if (ret)
            {
                element.updateQuery();
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Crediting</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            if (ret)
            {
                element.updateQuery();
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustVendDetailBalans</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                custVendDetailBalansValue = this.selection();
                element.runBase().updatePrintCVField(custVendDetailBalans.selection());
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<AlignChild xmlns="">No</AlignChild>
		<AlignChildren xmlns="">No</AlignChildren>
		<Caption xmlns="">@GLS106718</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FieldTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>DimensionEntryControl</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>StaticGroup</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>grContragent</Name>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CustVendAC</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>CustVendAC</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>Contragent</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@GLS103215</Label>
											</AxFormControl>
										</Controls>
										<Caption>@GLS103215</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PeriodCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>DateCode</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>PeriodInterval</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>FromDate</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>FromDate</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>ToDate</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>ToDate</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>AccountNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>MainAccountNumFrom</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>MainAccountNum</ExtendedDataType>
												<Label>@SYS305875</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>MainAccountNumTo</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>MainAccountNum</ExtendedDataType>
												<Label>@SYS335462</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>MainAccountNum</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>MainAccountNum</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<Caption>@GLS103791</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Currency</Name>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>CurrencyType</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<EnumType>CurrencyType_RU</EnumType>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>CurrencyTypeBrief</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<EnumType>CurrencyTypeBrief_RU</EnumType>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CurrencyCode</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>CurrencyCode</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>PrintCurrencyType_DEL</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<EnumType>CurrencyPrintType_RU</EnumType>
												<Items />
											</AxFormControl>
										</Controls>
										<Caption>@SYS7572</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>CreditingType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>Crediting</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@GLS105012</Label>
											</AxFormControl>
										</Controls>
										<Caption>@GLS102080</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DetailBalans</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>CustVendDetailBalans</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<EnumType>CustVendDetailBalans_RU</EnumType>
												<Items />
											</AxFormControl>
										</Controls>
										<Caption>@GLS111892</Caption>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DialogCommit</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DialogStartGrp</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@SYS2952</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>BottomGrp</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Skip>Yes</Skip>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>6</VerticalSpacing>
				<VerticalSpacingMode>Fixed</VerticalSpacingMode>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>Batch</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>MenuFunctionButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<MenuItemName>BatchDialog</MenuItemName>
						<MenuItemType>Action</MenuItemType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>