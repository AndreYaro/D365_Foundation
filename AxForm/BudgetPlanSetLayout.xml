<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BudgetPlanSetLayout</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BudgetPlanSetLayout extends FormRun
{
    BudgetPlanHeader budgetPlanHeader;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (element.args().record()
            && element.args().record() is BudgetPlanHeader)
        {
            budgetPlanHeader = element.args().record() as BudgetPlanHeader;
        }
        else
        {
            throw error("@Budget:BudgetPlan_LayoutSet_Validation_MissingHeader");
        }

        super();

        BudgetPlanLayout_DS.queryBuildDataSource().clearDynalinks();
        BudgetPlanLayout_DS.queryBuildDataSource().addRange(fieldNum(BudgetPlanLayout, RecId)).value(SysQuery::value(budgetPlanHeader.Layout));

        this.setLayoutEditability(budgetPlanHeader.Layout, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLayoutEditability</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines and sets the editability of layout and layout element modifying controls.
    /// </summary>
    /// <param name = "_layoutRecId"> The <c>BudgetPlanLayout</c> record ID to check. </param>
    /// <param name = "_showTemplateExistsWarning"> Flag to show the warning message if a template exists; optional. </param>
    public void setLayoutEditability(BudgetPlanLayoutRecId _layoutRecId, boolean _showTemplateExistsWarning = true)
    {
        boolean canEditLayout = BudgetPlanLayoutHelper::canModifyLayout(_layoutRecId);

        if (!canEditLayout && _showTemplateExistsWarning)
        {
            warning(strFmt("@Budget:BudgetPlan_BudgetPlanSetLayout_TemplateExistsWarning", BudgetPlanLayoutTranslation::findByLayoutLanguage(_layoutRecId, currentUserLanguage()).Name));
        }

        // Layout Action pane buttons.
        ModifyLayout.visible(!canEditLayout);
        BudgetPlanLayoutDescriptionElement.enabled(canEditLayout);
        ExcelGroup.enabled(BudgetPlanLayoutHelper::canGenerateTemplateForLayout(_layoutRecId));

        // Layout fields.
        BudgetPlanLayout planLayout = BudgetPlanLayout::find(_layoutRecId);

        BudgetPlanLayout_Description.enabled(canEditLayout);
        BudgetPlanLayout_DimensionHierarchy.enabled(canEditLayout);
        BudgetPlanLayout_DS.object(fieldNum(BudgetPlanLayout, UseBudgetPlanLineMassUpdate)).allowEdit(!planLayout.UseBudgetPlanLineMassUpdate);

        // Layout element Action pane.
        LayoutElementActionPane.enabled(canEditLayout);

        // Layout element datasource.
        BudgetPlanLayoutElement_DS.allowEdit(canEditLayout);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrdinal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the ordinal value based on the new positions of the <c>BudgetPlanLayoutElement</c> records.
    /// </summary>
    /// <param name = "_elementAtHigherPosition">The <c>BudgetPlanLayoutElement</c> position to move lower. </param>
    /// <param name = "_elementAtLowerPosition"> The <c>BudgetPlanLayoutElement</c> position to move higher. </param>
    public void setOrdinal(int _elementAtHigherPosition, int _elementAtLowerPosition)
    {
        if (_elementAtLowerPosition && _elementAtHigherPosition)
        {
            BudgetPlanLayoutElement higherPositionRecord = BudgetPlanLayoutElement_DS.cursor(_elementAtHigherPosition);
            BudgetPlanLayoutElement lowerPositionRecord  = BudgetPlanLayoutElement_DS.cursor(_elementAtLowerPosition);

            BudgetPlanLayoutHelper::swapElementPosition(higherPositionRecord, lowerPositionRecord);

            BudgetPlanLayoutElement_DS.research(true);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>BudgetPlanLayout</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();

            if (BudgetPlanLayout.UseBudgetPlanLineMassUpdate)
            {
                element.setLayoutEditability(BudgetPlanLayout.RecId, false);
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>BudgetPlanLayoutElement</Name>
				<Methods>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            this.last();
            super(true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            int currentRecordPostion = BudgetPlanLayoutElement_DS.getPosition();

            MoveUp.enabled(currentRecordPostion > 1);
            MoveDown.enabled(BudgetPlanLayoutElement_DS.numberOfRowsLoaded() != currentRecordPostion);

            ExcelGroup.enabled(BudgetPlanLayoutHelper::canGenerateTemplateForLayout(budgetPlanLayout.RecId));

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>deleted</Name>
						<Source><![CDATA[
        public void deleted()
        {
            super();
            ExcelGroup.enabled(BudgetPlanLayoutHelper::canGenerateTemplateForLayout(budgetPlanLayout.RecId));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ElementDefinition</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return BudgetPlanElementDefinition::lookupReferenceElementDefinition(_formReferenceControl, budgetPlanLayout.RecId);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ModifyLayout</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            boolean canModifyLayout = Box::confirm("@Budget:EditingLayoutWhenTemplateExistsWarning");
            if (canModifyLayout)
            {
                BudgetPlanTemplateManager::deleteTemplate(budgetPlanLayout.RecId);
                budgetPlanLayout_ds.reread();
                budgetPlanLayout_ds.refresh();
                element.setLayoutEditability(budgetPlanLayout.RecId);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GenerateTemplate</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            boolean doUpload = Box::confirm("@Budget:TemplateGenerationWillLockLayoutWarning");

            if (doUpload)
            {
                super();
                element.setLayoutEditability(budgetPlanLayout.RecId, false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReapplyLayout</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            BudgetPlanLayoutHelper::refreshLayout(
                BudgetPlanMappingCacheDeleteType::DeleteMappingCacheByLayout,
                budgetPlanLayout.RecId,
                BudgetPlanMappingRefreshType::RefreshByLayout,
                budgetPlanLayout.RecId);

            BudgetPlanLayoutHelper::populateLayoutCache(budgetPlanLayout.RecId);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetPlanLayout_Name</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            BudgetPlanLookupHelper::lookupCurrentAndAlternateLayouts(
                this,
                budgetPlanHeader.BudgetPlanningProcess,
                budgetPlanHeader.BudgetingOrganization,
                budgetPlanHeader.BudgetPlanningStage);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid = super();

            isValid = isValid && budgetPlanHeader.validateLayoutName(this.text());

            return isValid;
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            BudgetPlanFormHelper::jumpRefLookupRecord(BudgetPlanLayout::findByLocalizedName(this.text()), element);
        }

]]></Source>
					</Method>
					<Method>
						<Name>initialize</Name>
						<Source><![CDATA[
        protected void initialize()
        {
            super();
            this.text(BudgetPlanLayoutTranslation::getLocalizedName(budgetPlanHeader.Layout));
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean isModified = super();

            if (isModified)
            {
                element.setLayoutEditability(BudgetPlanLayout::findByLocalizedName(this.text()).RecId, false);

                QueryBuildRange layoutRecIdRange = SysQuery::findOrCreateRange(BudgetPlanLayout_DS.queryBuildDataSource(), fieldNum(BudgetPlanLayout, RecId));
                BudgetPlanLayoutRecId selectedLayoutRecId = BudgetPlanLayout::findByLocalizedName(this.text()).RecId;

                if (layoutRecIdRange)
                {
                    layoutRecIdRange.value(SysQuery::value(selectedLayoutRecId));
                }

                BudgetPlanLayout_DS.executeQuery();
            }

            return isModified;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BudgetPlanLayout_DimensionHierarchy</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            DimensionHierarchyHelper::jumpRefFocus(DimensionHierarchy::find(budgetPlanLayout.DimensionHierarchy), element);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MoveUp</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            int currentPosition = BudgetPlanLayoutElement_DS.getPosition();
            element.setOrdinal(currentPosition - 1, currentPosition);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MoveDown</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            int currentPosition = BudgetPlanLayoutElement_DS.getPosition();
            element.setOrdinal(currentPosition, currentPosition + 1);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OkButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            ttsbegin;
            budgetPlanHeader.selectForUpdate(true);
            budgetPlanHeader.Layout = BudgetPlanLayout::findByLocalizedName(BudgetPlanLayout_Name.text()).RecId;
            budgetPlanHeader.update();
            ttscommit;

            element.args().caller().refreshActiveViewLines();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>BudgetPlanLayout</Name>
			<Table>BudgetPlanLayout</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DimensionHierarchy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DMFDefinitionGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseBudgetPlanLineMassUpdate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>BudgetPlanLayoutElement</Name>
			<Table>BudgetPlanLayoutElement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ElementDefinition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InWorksheet</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsEditable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Layout</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ordinal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>BudgetPlanLayout</JoinSource>
			<Index>LayoutOrdinal</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<WindowType xmlns="">Slider</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>SetLayoutHelpText</Name>
				<AllowEdit>No</AllowEdit>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<Type>StaticText</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@Budget:BudgetPlan_BudgetPlanSetLayout_FormCaption</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>LayoutTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>LayoutTabPage</Name>
						<Pattern>ToolbarFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>LayoutActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>LayoutButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ModifyLayout</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<Text>@Budget:BudgetPlanLayoutModify</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>BudgetPlanLayoutDescriptionElement</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>MenuFunctionButton</Type>
												<FormControlExtension
													i:nil="true" />
												<DataSource>BudgetPlanLayout</DataSource>
												<MenuItemName>BudgetPlanLayoutDescriptionElement</MenuItemName>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuButtonControl">
												<Name>ExcelGroup</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>MenuButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>GenerateTemplate</Name>
														<Type>MenuFunctionButton</Type>
														<FormControlExtension
															i:nil="true" />
														<MenuItemName>BudgetPlanTemplateGenerate</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>ViewTemplate</Name>
														<Type>MenuFunctionButton</Type>
														<FormControlExtension
															i:nil="true" />
														<MenuItemName>BudgetPlanTemplateView</MenuItemName>
														<MenuItemType>Action</MenuItemType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>UploadTemplate</Name>
														<Type>MenuFunctionButton</Type>
														<FormControlExtension
															i:nil="true" />
														<MenuItemName>BudgetPlanTemplateUpload</MenuItemName>
													</AxFormControl>
												</Controls>
												<Text>@Budget:BudgetPlanningTemplateButtonLabel</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>ReapplyLayout</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<Text>@Budget:BudgetPlanning_BudgetPlanningConfiguration_ReapplyLayout</Text>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LayoutFieldGroup</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BudgetPlanLayout_Name</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>BudgetPlanLayoutName</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BudgetPlanLayout_Description</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<NeededPermission>Manual</NeededPermission>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>BudgetPlanLayout</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>BudgetPlanLayout_DimensionHierarchy</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<NeededPermission>Manual</NeededPermission>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>BudgetPlanLayout</DataSource>
										<ReferenceField>DimensionHierarchy</ReferenceField>
										<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>BudgetPlanLayout_UseBudgetPlanLineMassUpdate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<NeededPermission>Manual</NeededPermission>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>UseBudgetPlanLineMassUpdate</DataField>
										<DataSource>BudgetPlanLayout</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@Budget:LayoutDisplayNameSingular</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>LayoutElementTabPage</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>LayoutElementActionPane</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>LayoutElementButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>NewLayoutElement</Name>
												<NeededPermission>Create</NeededPermission>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>New</Command>
												<MultiSelect>No</MultiSelect>
												<Text>@Budget:Add</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>DeleteLayoutElement</Name>
												<NeededPermission>Delete</NeededPermission>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>DeleteRecord</Command>
												<MultiSelect>No</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<Text>@Budget:Remove</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>MoveUp</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<NeededPermission>Delete</NeededPermission>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>No</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>Up</NormalImage>
												<Text>@Budget:BudgetPlanning_Configuration_MoveUp</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>MoveDown</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<NeededPermission>Delete</NeededPermission>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>No</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>Down</NormalImage>
												<Text>@Budget:BudgetPlanning_Configuration_MoveDown</Text>
											</AxFormControl>
										</Controls>
										<DataSource>BudgetPlanLayoutElement</DataSource>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>LayoutElementGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>BudgetPlanLayoutElement_ElementDefinition</Name>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>BudgetPlanLayoutElement</DataSource>
										<ReferenceField>ElementDefinition</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>BudgetPlanLayoutElement_IsEditable</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsEditable</DataField>
										<DataSource>BudgetPlanLayoutElement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>BudgetPlanLayoutElement_InWorksheet</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InWorksheet</DataField>
										<DataSource>BudgetPlanLayoutElement</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>BudgetPlanLayoutElement</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@Budget:LayoutElementDisplayName</Caption>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OkButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>