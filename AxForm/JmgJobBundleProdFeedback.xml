<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>JmgJobBundleProdFeedback</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class JmgJobBundleProdFeedback extends FormRun
{
    JmgJobBundleProdFeedbackForm    prodFeedbackForm;
    boolean                         approveClose;
    FormControl                     fc;
    boolean                         goodQtyChosen;
    private JmgJobTable             jmgJobTable;

}
]]></Source>
			</Method>
			<Method>
				<Name>approveClicked</Name>
				<Source><![CDATA[
    void approveClicked()
    {
        okButton.setFocus();
        try
        {
            using(var activityContext = JmgRegistrationInstrumentationActivities::initFormParms(JmgInstrumentationLogger::createLogger(formStr(JmgJobBundleProdFeedback)).registration().reportFeedback(), formStr(JmgRegistration)))
            {
                jmgTmpJobBundleProdFeedback.write(); // save modified data to the temporary table
                approveClose = prodFeedbackForm.canClose(jmgTmpJobBundleProdFeedback);

                if (approveClose)
                {
                    prodFeedbackForm.onClose(jmgTmpJobBundleProdFeedback);
                    element.close();
                }
            }
        }
        catch (Exception::Error)
        {
            //Something went wrong during posting of consumption
            approveClose = false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bomClicked</Name>
				<Source><![CDATA[
    public void bomClicked()
    {
        prodFeedbackForm.showBOM(jmgTmpJobBundleProdFeedback);
    }

]]></Source>
			</Method>
			<Method>
				<Name>cancelClicked</Name>
				<Source><![CDATA[
    public void cancelClicked()
    {
        approveClose = false;
        element.close();
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        if (approveClose)
        {
            element.args().parmEnum(NoYes::No);
        }
        else
        {
            element.args().parmEnum(NoYes::Yes);
            prodFeedbackForm.cancel();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (!SysDictClass::isEqualOrSuperclass(classidget(element.args().parmObject()), classnum(JmgJobBundle)))
        {
            throw error(strfmt("@SYS22862", formstr(JmgJobBundleProdFeedback)));
        }

        super();
        prodFeedbackForm = new JmgJobBundleProdFeedbackForm(element.args().parmObject(), element.args().parmEnum());

        jmgTmpJobBundleProdFeedback.setTmpData(prodFeedbackForm.getTmpJobBundleProdFeedback());

        approveClose = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inProgressClicked</Name>
				<Source><![CDATA[
    public void inProgressClicked()
    {
        this.setFeedback(JmgFeedbackStatus::InProgress);
    }

]]></Source>
			</Method>
			<Method>
				<Name>noClicked</Name>
				<Source><![CDATA[
    public void noClicked()
    {
        this.setFeedback(JmgFeedbackStatus::Stopped);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFeedback</Name>
				<Source><![CDATA[
    private void setFeedback(JmgFeedbackStatus _feedback)
    {
        JmgTmpJobBundleProdFeedback     jobBundleProdFeedback;
        JmgJobId jobId;
        int position, idx;
        container jobIds;

        jobBundleProdFeedback = jmgTmpJobBundleProdFeedback_DS.getFirst(true);
        if (!jobBundleProdFeedback)
        {
            jmgTmpJobBundleProdFeedback.selectForUpdate(true);
            jmgTmpJobBundleProdFeedback.ReportAsFinished = _feedback;
            jmgTmpJobBundleProdFeedback.update();
        }
        else
        {
            while (jobBundleProdFeedback)
            {
                jobIds += jobBundleProdFeedback.JobId;
                jobBundleProdFeedback = jmgTmpJobBundleProdFeedback_DS.getNext();
            }

            for (idx = 1; idx <= conLen(jobIds); ++idx)
            {
                jobId = conPeek(jobIds, idx);
                update_recordSet jmgTmpJobBundleProdFeedback
                setting ReportAsFinished = _feedback
                where JmgTmpJobBundleProdFeedback.JobId == jobId;
            }
        }

        position = jmgTmpJobBundleProdFeedback_DS.getPosition();
        jmgTmpJobBundleProdFeedback_DS.executeQuery();
        jmgTmpJobBundleProdFeedback_DS.setPosition(position);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFocus</Name>
				<Source><![CDATA[
    public void setFocus()
    {
        if (jmgTmpJobBundleProdFeedback.JobType == RouteJobType::Process    &&
            jmgTmpJobBundleProdFeedback.RouteOprPriority    == RouteOprPriority::Primary)
        {
            errorQuantity.enabled(true);
            errorQuantity.skip(false);
            goodNow.enabled(true);
            goodNow.skip(false);
            goodNow.setFocus();
        }
        else
        {
            errorQuantity.enabled(false);
            errorQuantity.skip(true);
            goodNow.enabled(false);
            goodNow.skip(true);
            reportAsFinished.setFocus();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>yesClicked</Name>
				<Source><![CDATA[
    public void yesClicked()
    {
        this.setFeedback(JmgFeedbackStatus::Completed);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>JmgTmpJobBundleProdFeedback</Name>
				<Methods>
					<Method>
						<Name>totalQuantityCompleted</Name>
						<Source><![CDATA[
        public display ProdReportedGood totalQuantityCompleted()
        {
            return jmgJobTable.goodQuantity();
        }

]]></Source>
					</Method>
					<Method>
						<Name>totalQuantityError</Name>
						<Source><![CDATA[
        public display ProdReportedError totalQuantityError()
        {
            return jmgJobTable.badQuantity();
        }

]]></Source>
					</Method>
					<Method>
						<Name>totalQuantityCompletedCW</Name>
						<Source><![CDATA[
        public display PdsCWBatchGood totalQuantityCompletedCW()
        {
            return jmgJobTable.pdsCWGoodQuantity();
        }

]]></Source>
					</Method>
					<Method>
						<Name>totalQuantityErrorCW</Name>
						<Source><![CDATA[
        public display PdsCWBatchErr totalQuantityErrorCW()
        {
            return jmgJobTable.pdsCWBadQuantity();
        }

]]></Source>
					</Method>
					<Method>
						<Name>enableWHSLicensePlateId</Name>
						<Source><![CDATA[
        public void enableWHSLicensePlateId()
        {
            WHSLicensePlateId.enabled(prodFeedbackForm.whsLicensePlateEnabled(jmgTmpJobBundleProdFeedback));
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWPlannedQty</Name>
						<Source><![CDATA[
        display PdsCWCalcQty pdsCWPlannedQty(JmgTmpJobBundleProdFeedback _in)
        {
            return JmgJobTable::find(_in.JobId).PdsCWCalcQty;
        }

]]></Source>
					</Method>
					<Method>
						<Name>editErrorCause</Name>
						<Source><![CDATA[
        public edit ProdErrorCause editErrorCause(boolean _set, JmgTmpJobBundleProdFeedback _prodFeedback, ProdErrorCause _value)
        {
            Qty     errQty;
            if (_set)
            {
                errQty = JmgErrorSpecificationForm::decodeErrorSpecification(_prodFeedback.ErrorSpecification).QtyError;
                _prodFeedback.ErrorSpecification = JmgErrorSpecificationForm::encodeValue(_value,errQty
                                                                                          , pdsCWErrorQuantity.realValue()
                                                                                          );
            }

            return JmgErrorSpecificationForm::decodeErrorSpecification(_prodFeedback.ErrorSpecification).ErrorCause;
        }

]]></Source>
					</Method>
					<Method>
						<Name>oprNo</Name>
						<Source><![CDATA[
        public display OprNum oprNo(JmgTmpJobBundleProdFeedback _prodFeedback)
        {
            return JmgJobTable::find(_prodFeedback.JobId).OprNum;
        }

]]></Source>
					</Method>
					<Method>
						<Name>plannedQty</Name>
						<Source><![CDATA[
        display RouteOprQtyToOpr plannedQty(JmgTmpJobBundleProdFeedback _in)
        {
            return JmgJobTable::find(_in.JobId).CalcQty;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            boolean isCWItem;

            ret = super();

            element.setFocus();

            contentHeaderGroup.caption(strfmt("@SCM:JmgRegistrationTouch_CaptionProductionOrder", jmgTmpJobBundleProdFeedback.JobRef));

            isCWItem = PdsGlobal::pdsIsCWItem(JmgJobTable::find(jmgTmpJobBundleProdFeedback.JobId).ItemId);
            pdsCWGoodNow.enabled(goodNow.enabled() && isCWItem);
            pdsCWErrorQuantity.enabled(errorQuantity.enabled() && isCWItem);
            this.enableWHSLicensePlateId();

            jmgJobTable = JmgJobTable::find(jmgTmpJobBundleProdFeedback.JobId);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>errorQuantity</Name>
						<Source><![CDATA[
        public edit ProdReportedError errorQuantity(boolean _set, JmgTmpJobBundleProdFeedback _prodFeedback, Qty _value)
        {
            PdsCWBatchErr               pdsCWErrorQty;
            JmgTmpErrorSpecification    jmgTmpErrorSpecification;

                if (_set)
                {
                    jmgTmpErrorSpecification = JmgErrorSpecificationForm::decodeErrorSpecification(_prodFeedback.ErrorSpecification);
                    if (!jmgTmpErrorSpecification.PdsCWQtyError)
                    {
                        jmgTmpErrorSpecification.PdsCWQtyError = PdsCatchWeight::cwQty(JmgJobTable::find(_prodFeedback.JobId).ItemId, _value);
                    }
                    _prodFeedback.ErrorSpecification = JmgErrorSpecificationForm::encodeValue(jmgTmpErrorSpecification.ErrorCause, _value, jmgTmpErrorSpecification.PdsCWQtyError);
                }

            return _prodFeedback.errorNow();
        }

]]></Source>
					</Method>
					<Method>
						<Name>pdsCWErrorQuantity</Name>
						<Source><![CDATA[
        public edit PdsCWBatchErr pdsCWErrorQuantity(boolean _set, JmgTmpJobBundleProdFeedback _prodFeedback, PdsCWBatchErr _value)
        {
            Qty                         errorQty;
            JmgTmpErrorSpecification    jmgTmpErrorSpecification;

                if (_set)
                {
                    jmgTmpErrorSpecification = JmgErrorSpecificationForm::decodeErrorSpecification(_prodFeedback.ErrorSpecification);
                    if (!jmgTmpErrorSpecification.QtyError)
                    {
                        jmgTmpErrorSpecification.QtyError = PdsCatchWeight::inventQty(JmgJobTable::find(_prodFeedback.JobId).ItemId, _value);
                    }
                    _prodFeedback.ErrorSpecification = JmgErrorSpecificationForm::encodeValue(jmgTmpErrorSpecification.ErrorCause, jmgTmpErrorSpecification.QtyError, _value);
                }

            return _prodFeedback.pdsCWErrorNow();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
        
            ret = super();
        
            if (ret && jmgTmpJobBundleProdFeedback.GoodNow > 0 && jmgTmpJobBundleProdFeedback.WHSLicensePlate)
            {
                ret = prodFeedbackForm.checkWHSWorkTableWithSameLicensePlate(jmgTmpJobBundleProdFeedback);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>GoodNow</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (!jmgTmpJobBundleProdFeedback.PdsCWGoodNow)
                {
                    jmgTmpJobBundleProdFeedback.PdsCWGoodNow = PdsCatchWeight::cwQty(JmgJobTable::find(jmgTmpJobBundleProdFeedback.JobId).ItemId, jmgTmpJobBundleProdFeedback.GoodNow);
                }

                prodFeedbackForm.quantityChanged(jmgTmpJobBundleProdFeedback);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventBatch</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(InventDim), _formControl, true);
                sysTableLookup.addLookupfield(fieldNum(InventDim, InventBatchId), true);

                Query query = JmgJobBundleProdFeedbackForm::buildBatchNumberLookupQuery(jmgTmpJobBundleProdFeedback.JobRef, jmgTmpJobBundleProdFeedback.ItemId, jmgTmpJobBundleProdFeedback.InventTransId);

                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = true;
            
                if (jmgTmpJobBundleProdFeedback.InventBatch)
                {
                    Query query = JmgJobBundleProdFeedbackForm::buildBatchNumberLookupQuery(jmgTmpJobBundleProdFeedback.JobRef, jmgTmpJobBundleProdFeedback.ItemId, jmgTmpJobBundleProdFeedback.InventTransId, jmgTmpJobBundleProdFeedback.InventBatch);
                    QueryRun qr = new QueryRun(query);
                    if (!qr.next())
                    {
                        ProdTable prodOrder = ProdTable::find(jmgTmpJobBundleProdFeedback.JobRef);
                        str typeOfOrder = prodOrder.ProdType == ProdType::Process? "@PDS1470" : "@SYS89639";
                        ret = checkFailed(strFmt("@SCM:JmgRegistrationTouchReportProgressNoBatchNumberForOrderError", jmgTmpJobBundleProdFeedback.InventBatch, typeOfOrder, jmgTmpJobBundleProdFeedback.JobRef));
                    }
                }

                return ret && super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventSerial</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(InventDim), _formControl, true);
                sysTableLookup.addLookupfield(fieldNum(InventDim, InventBatchId), true);

                Query query = JmgJobBundleProdFeedbackForm::buildSerialNumberLookupQuery(jmgTmpJobBundleProdFeedback.JobRef, jmgTmpJobBundleProdFeedback.ItemId, jmgTmpJobBundleProdFeedback.InventTransId);

                sysTableLookup.parmQuery(query);
                sysTableLookup.performFormLookup();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret = true;
            
                if (jmgTmpJobBundleProdFeedback.InventSerial)
                {
                    Query query = JmgJobBundleProdFeedbackForm::buildSerialNumberLookupQuery(jmgTmpJobBundleProdFeedback.JobRef, jmgTmpJobBundleProdFeedback.ItemId, jmgTmpJobBundleProdFeedback.InventTransId, jmgTmpJobBundleProdFeedback.InventSerial);
                    QueryRun qr = new QueryRun(query);
                    if (!qr.next())
                    {
                        ProdTable prodOrder = ProdTable::find(jmgTmpJobBundleProdFeedback.JobRef);
                        str typeOfOrder = prodOrder.ProdType == ProdType::Process? "@PDS1470" : "@SYS89639";
                        ret = checkFailed(strFmt("@SCM:JmgRegistrationTouchReportProgressNoSerialNumberForOrderError", jmgTmpJobBundleProdFeedback.InventSerial, typeOfOrder, jmgTmpJobBundleProdFeedback.JobRef));
                    }
                }

                return ret && super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PdsCWGoodNow</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (!jmgTmpJobBundleProdFeedback.GoodNow)
                {
                    jmgTmpJobBundleProdFeedback.GoodNow = PdsCatchWeight::inventQty(JmgJobTable::find(jmgTmpJobBundleProdFeedback.JobId).ItemId, jmgTmpJobBundleProdFeedback.PdsCWGoodNow);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>PickListButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.bomClicked();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ViewErrorCausesButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            var errorSpecificationForm = new JmgErrorSpecificationForm(JmgTmpJobBundleProdFeedback, element, true);
            errorSpecificationForm.parmRegSetup(element.args().record());
            errorSpecificationForm.showErrorSpecificationForm();
            prodFeedbackForm.quantityChanged(JmgTmpJobBundleProdFeedback);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InprogressButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.inProgressClicked();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>StoppedButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.noClicked();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CompletedButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.yesClicked();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>goodNow</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            fc = this;
            goodQtyChosen = true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            JmgTmpJobBundleProdFeedback_ds.enableWHSLicensePlateId();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>errorQuantity</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            fc = this;
            goodQtyChosen = false;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>pdsCWGoodNow</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            fc = this;
            goodQtyChosen = true;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>pdsCWErrorQuantity</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>gotFocus</Name>
						<Source><![CDATA[
        public void gotFocus()
        {
            super();
            fc = this;
            goodQtyChosen = false;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OkButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.approveClicked();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CancelButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.cancelClicked();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>JmgTmpJobBundleProdFeedback</Name>
			<Table>JmgTmpJobBundleProdFeedback</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CalcQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorSpecification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GoodNow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventBatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSerial</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JmgTermRegRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JobType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWCalcQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWGoodNow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQtyError</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQtyGood</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProdJournalIdBOM</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyError</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyGood</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportAsFinished</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteOprPriority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WHSLicensePlate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AlwaysOnTop xmlns="">Yes</AlwaysOnTop>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS309671</Caption>
		<DefaultAction xmlns="">OkButton</DefaultAction>
		<DialogSize xmlns="">Full</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ActionPaneTab</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ActionPaneTab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ButtonGroup</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>PickListButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS106187</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS77792</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>ViewErrorCausesButton</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS39936</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ButtonGroup1</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>InprogressButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS39781</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>StoppedButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS77613</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>CompletedButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS39134</HelpText>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS54623</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<AlignChildren>No</AlignChildren>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentHeaderGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>oprNo</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Border>None</Border>
						<DataMethod>oprNo</DataMethod>
						<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>JmgTmpJobBundleProdFeedback_JobType</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Skip>Yes</Skip>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Border>None</Border>
						<DataField>JobType</DataField>
						<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
						<Label>@SYS39763</Label>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>JmgTmpJobBundleFeedback_QtyGood</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Skip>Yes</Skip>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Border>None</Border>
						<DataMethod>totalQuantityCompleted</DataMethod>
						<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
						<Label>@SYS4638</Label>
						<NoOfDecimals>-1</NoOfDecimals>
						<ShowZero>No</ShowZero>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>JmgTmpJobBundleFeedback_QtyError</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Skip>Yes</Skip>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Border>None</Border>
						<DataMethod>totalQuantityError</DataMethod>
						<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
						<Label>@SYS2083</Label>
						<NoOfDecimals>-1</NoOfDecimals>
						<ShowZero>No</ShowZero>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>JmgTmpJobBundleFeedback_PdsCWQtyGood</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Skip>Yes</Skip>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Border>None</Border>
						<DataMethod>totalQuantityCompletedCW</DataMethod>
						<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
						<Label>@PDS1897</Label>
						<NoOfDecimals>-1</NoOfDecimals>
						<ShowZero>No</ShowZero>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>JmgTmpJobBundleFeedback_PdsCWQtyError</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Skip>Yes</Skip>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Border>None</Border>
						<DataMethod>totalQuantityErrorCW</DataMethod>
						<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
						<Label>@PDS:CwErrorQty</Label>
						<NoOfDecimals>-1</NoOfDecimals>
						<ShowZero>No</ShowZero>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>JmgTmpJobBundleFeedback_JobRef</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Skip>Yes</Skip>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>JobRef</DataField>
								<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
								<Label>@SYS89639</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>JmgTmpJobBundleFeedback_JobId</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Skip>Yes</Skip>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>JobId</DataField>
								<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>JmgTmpJobBundleFeedback_JobDescription</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Skip>Yes</Skip>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>JobDescription</DataField>
								<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>plannedQty</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>plannedQty</DataMethod>
								<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
								<Label>@SYS133392</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>pdsCWPlannedQty</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2046820350</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>pdsCWPlannedQty</DataMethod>
								<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>goodNow</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2069189971</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>50</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<AllowNegative>No</AllowNegative>
								<DataField>GoodNow</DataField>
								<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
								<ShowZero>No</ShowZero>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>errorQuantity</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2091559592</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>50</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<AllowNegative>No</AllowNegative>
								<DataMethod>errorQuantity</DataMethod>
								<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
								<Label>@SYS8500</Label>
								<NoOfDecimals>-1</NoOfDecimals>
								<ShowZero>No</ShowZero>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>pdsCWGoodNow</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2097151998</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>50</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PdsCWGoodNow</DataField>
								<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
								<ShowZero>No</ShowZero>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>editErrorCause</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2110200943</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>editErrorCause</DataMethod>
								<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>pdsCWErrorQuantity</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2122317822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>50</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>pdsCWErrorQuantity</DataMethod>
								<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
								<ShowZero>No</ShowZero>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>ReportAsFinished</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2128842294</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>ReportAsFinished</DataField>
								<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
								<Label>@SYS25532</Label>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>WHSLicensePlateId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2138162970</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>WHSLicensePlate</DataField>
								<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>JmgTmpJobBundleProdFeedback</DataSource>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogCommitButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>OkButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SYS38485</HelpText>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<MultiSelect>Yes</MultiSelect>
						<Text>@SYS5473</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>CancelButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SYS107721</HelpText>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<MultiSelect>Yes</MultiSelect>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS50163</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
