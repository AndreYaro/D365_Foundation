<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>MCRCouponImportDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class MCRCouponImportDialog extends FormRun
{
    MCRCoupon           mcrCoupon;
    MCRCouponImport     mcrCouponImport;
    TableId             callerTableId;
    MCRCouponImportType couponImportType;
    System.IO.Stream    stream;

}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        FormDataSource  callerDataSource;

        if (callerTableId == tableNum(MCRCoupon))
        {
            mcrCoupon = element.args().record();
        }
        if (stream)
        {
            mcrCouponImport.import(stream);
        }
        super();
        //Below code segment is needed in order to refresh the caller form datasource, as otherwise we are not seeing the new records
        //without manual refresh of the form.
        callerDataSource = FormDataUtil::getFormDataSource(element.args().record());
        callerDataSource.research();
        callerDataSource.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        MCRCouponCustomer  mcrCouponCustomer;
        MCRCouponCatalog   mcrCouponCatalog;
        MCRCouponItem      mcrCouponItem;
        callerTableId = element.args().dataset();
        couponImportType = element.args().parmEnum();

        super();

        FileUploadControl.notifyUploadCompleted += eventhandler(this.UploadCompleted);

        // This form can only be called from the MCRCoupon form.
        if (!callerTableId)
        {
            throw error(strfmt("@SYS22678", element.name()));
        }

        switch (couponImportType)
        {
            case(MCRCouponImportType::Customer):
                    mcrCouponCustomer = element.args().record();
                    select firstonly mcrCoupon where mcrCoupon.MCRCouponId == mcrCouponCustomer.MCRCouponId;
                    element.design().caption("@MCR25608");
                    mcrCouponImport = new mcrCouponImport_Customer( callerTableId,
                                                                    mcrCoupon.MCRCouponId);
                break;
            case(MCRCouponImportType::Catalog):
                    mcrCouponCatalog = element.args().record();
                    select firstOnly mcrCoupon where mcrCoupon.MCRCouponId == mcrCouponCatalog.CouponId;
                    element.design().caption("@MCR40348");
                    mcrCouponImport = new mcrCouponImport_Catalog( callerTableId,
                                                                mcrCoupon.MCRCouponId);
                break;
            case(MCRCouponImportType::Item):
                    mcrCouponItem = element.args().record();
                    select firstOnly mcrCoupon where mcrCoupon.MCRCouponId == mcrCouponItem.MCRCouponId;
                    element.design().caption("@MCR25609");
                    mcrCouponImport = new mcrCouponImport_Item( callerTableId,
                                                            mcrCoupon.MCRCouponId);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>UploadCompleted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when the file upload is completed. (Event based).
    /// </summary>
    public void UploadCompleted()
    {
        FileUploadTemporaryStorageResult fileUploadResult = FileUploadControl.getFileUploadResult();

        if (fileUploadResult != null && fileUploadResult.getUploadStatus())
        {
            // OKButton needs to be enabled once the file upload is completed, so that users do not initiate the import before.
            OKButton.enabled(true);
            stream = fileUploadResult.openResult();
        }
        else
        {
            warning("@SYS89176");
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>CheckBoxAppend</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            mcrCouponImport.parmAppend(CheckBoxAppend.value());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SYS54759</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>FileImportGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl>
								<Name>FileUploadControl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<FormControlExtension>
									<Name>FileUpload</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>fileTypesAccepted</Name>
											<Type>String</Type>
											<Value>.csv</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>fileNameLabel</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>browseText</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>style</Name>
											<Type>Enum</Type>
											<TypeName>FileUploadStyle</TypeName>
											<Value>MinimalWithFilename</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>baseFileUploadStrategyClassName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CheckBoxAppend</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS53102</Label>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
