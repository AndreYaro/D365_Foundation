<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>EcoResAttribute</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class EcoResAttribute extends FormRun
{
    RetailAttributeMetadataHandler  metadataHandler;
    EcoResAttributeDefaultValueHelper attributeDefaultValueHelper;

}
]]></Source>
			</Method>
			<Method>
				<Name>validateDefaultValue</Name>
				<Source><![CDATA[
    public boolean validateDefaultValue(EcoResValue _ecoResValue)
    {
        return attributeDefaultValueHelper.validateDefaultValue(_ecoResValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFiltersToEcoResAttributeDS</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add filters to the attribute data source.
    /// </summary>
    /// <param name="_ecoResAttributeDS">
    /// A <c>QueryBuildDataSource</c> instance for attribtues.
    /// </param>
    public void addFiltersToEcoResAttributeDS(QueryBuildDataSource _ecoResAttributeDS)
    {
        #define.EcoResAttributeTypeDSName('HiddenAttributeTypeFilter')
        QueryBuildDataSource typeDS;
        QueryBuildRange qbr;

        if (_ecoResAttributeDS.table() != tableNum(EcoResAttribute))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        qbr = _ecoResAttributeDS.addRange(fieldNum (EcoResAttribute, AttributeModifier));

        str attributeModifierRange;
        attributeModifierRange = queryRangeConcat(attributeModifierRange, EcoResAttributeModifier::Catalog);
        attributeModifierRange = queryRangeConcat(attributeModifierRange, EcoResAttributeModifier::Product);
        qbr.value(attributeModifierRange);
        qbr.status(RangeStatus::Hidden);
        _ecoResAttributeDS.addOrderByField(fieldNum(EcoResAttribute, Name));

        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        {
            typeDS = _ecoResAttributeDS.addDataSource(tableNum(EcoResAttributeType), #EcoResAttributeTypeDSName);
            typeDS.addLink(fieldNum(EcoResAttribute, AttributeType), fieldNum(EcoResAttributeType, RecId));
            typeDS.joinMode(JoinMode::ExistsJoin);
            qbr = typeDS.addRange(fieldNum(EcoResAttributeType, IsHidden));
            qbr.value(queryValue(NoYes::No));
            qbr.status(RangeStatus::Hidden);
        }

        _ecoResAttributeDS.addRange(fieldNum (EcoResAttribute, Name));
    }

]]></Source>
			</Method>
			<Method>
				<Name>attributeChanged</Name>
				<Source><![CDATA[
    public void attributeChanged()
    {
        if (ecoResAttribute.AttributeType == 0)
        {
            element.defaultValueSetInvisible();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearMetadataGroupControl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clear children controls in the metadata group control
    /// </summary>
    public void clearMetadataGroupControl()
    {
        int controlCount = attributeMetadataGroup.controlCount();
        int i;

        for (i = 1; i <= controlCount; i++)
        {
            this.design().removeControl(attributeMetadataGroup.controlNum(1).id());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();
        EcoResAttributeDefaultValue::deleteEmptyDefaultValues();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAttributeDefaultValue</Name>
				<Source><![CDATA[
    public void createAttributeDefaultValue(EcoResValue newEcoResValue)
    {
        ttsbegin;

        newEcoResValue.insert();

        if (EcoResAttributeDefaultValueUpdateFixFlight::instance().isEnabled())
        {
            // Check if we already have the default value record
            var attributeDefaultValue = EcoResAttributeDefaultValue::findByAttribute(ecoResAttribute.RecId, true);
            if (attributeDefaultValue)
            {
                // Update the current default value record with the new value
                attributeDefaultValue.Attribute = ecoResAttribute.RecId;
                attributeDefaultValue.Value = newEcoResValue.RecId;
                attributeDefaultValue.update();
            }
            else
            {
                // Create a new default value record and assign the value record to it
                EcoResAttributeDefaultValue::createEcoResValueAndDefaultValue(newEcoResValue, ecoResAttribute);
            }
        }
        else
        {
            EcoResAttributeDefaultValue::createEcoResValueAndDefaultValue(newEcoResValue, ecoResAttribute);
        }

        ttscommit;

        ecoResAttributeDefaultValue_ds.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultValueSetInvisible</Name>
				<Source><![CDATA[
    public void defaultValueSetInvisible()
    {
        if (    defaultValueStringGroup.visible() &&
                (
                    !(ecoResValue_Default is EcoResTextValue) ||
                    ecoResAttributeType.IsEnumeration == NoYes::Yes
                )
           )
        {
            defaultValueStringGroup.visible(false);
        }

        if (defaultValueIntEdit.visible() &&
            !(ecoResValue_Default is EcoResIntValue))
        {
            defaultValueIntEdit.visible(false);
        }
        if (defaultValueUtcDateTimeEdit.visible() &&
            !(ecoResValue_Default is EcoResDateTimeValue))
        {
            defaultValueUtcDateTimeEdit.visible(false);
        }
        if (defaultValueRealEdit.visible() &&
            !(ecoResValue_Default is EcoResFloatValue))
        {
            defaultValueRealEdit.visible(false);
        }
        if (defaultCurrencyValueRealEdit.visible() &&
            !(ecoResValue_Default is EcoResCurrencyValue))
        {
            defaultCurrencyValueRealEdit.visible(false);
        }
        if (defaultValueBooleanEdit.visible() &&
            !(ecoResValue_Default is EcoResBooleanValue))
        {
            defaultValueBooleanEdit.visible(false);
        }
        if (enumerationComboBox.visible())
        {
            enumerationComboBox.visible(false);
        }
        if (floatUnitOfMeasure.visible())
        {
            floatUnitOfMeasure.visible(false);
        }
        if (intUnitOfMeasure.visible())
        {
            intUnitOfMeasure.visible(false);
        }
        if (currencyCode.visible() &&
            !(ecoResValue_Default is EcoResCurrencyValue))
        {
            currencyCode.visible(false);
        }
        if (integerDecimalGroup.visible() &&
            !(ecoResValue_Default is EcoResIntValue) &&
            !(ecoResValue_Default is EcoResFloatValue))
        {
            integerDecimalGroup.visible(false);
        }
        if (currencyGroup.visible() &&
            !(ecoResValue_Default is EcoResCurrencyValue))
        {
            currencyGroup.visible(false);
        }

        if (referenceValue.visible() &&
            !(ecoResValue_Default is EcoResReferenceValue))
        {
            referenceValue.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultValueSetVisible</Name>
				<Source><![CDATA[
    public void defaultValueSetVisible()
    {
        EcoResAttributeType attributeType;
        RetailRichMediaType richMediaType;
        str richMediaEditFormMenuItemName;

        if (ecoResAttribute.AttributeType &&
            !ecoResAttributeType)
        {
            attributeType = EcoResAttributeType::find(ecoResAttribute.AttributeType);
        }
        else
        {
            attributeType = ecoResAttributeType;
        }

        if (ecoResValue_Default)
        {
            switch (ecoResValue_Default.getInstanceRelationType())
            {
                case tableStr(EcoResReferenceValue):
                    referenceValue.allowEdit((select firstOnly RecId from EcoResAttributeValue where EcoResAttributeValue.Attribute == ecoResAttribute.RecId).RecId==0);
                    element.makeVisible(referenceValue);
                    break;
                case tableStr(EcoResBooleanValue):
                    element.makeVisible(defaultValueBooleanEdit);
                    break;
                case tableStr(EcoResDateTimeValue):
                    element.makeVisible(defaultValueUtcDateTimeEdit);
                    break;
                case tableStr(EcoResFloatValue):
                    element.makeVisible(defaultValueRealEdit);
                    element.makeVisible(integerDecimalGroup);
                    if (EcoResAttributeTypeUnitOfMeasure::findByAttributeType(attributeType).RecId)
                    {
                        element.makeVisible(floatUnitOfMeasure);
                    }
                    break;
                case tableStr(EcoResCurrencyValue):
                    element.makeVisible(defaultCurrencyValueRealEdit);
                    element.makeVisible(currencyCode);
                    element.makeVisible(currencyGroup);
                    break;
                case tableStr(EcoResIntValue):
                    element.makeVisible(defaultValueIntEdit);
                    element.makeVisible(integerDecimalGroup);
                    if (EcoResAttributeTypeUnitOfMeasure::findByAttributeType(attributeType).RecId)
                    {
                        element.makeVisible(intUnitOfMeasure);
                    }
                    break;
                case tableStr(EcoResTextValue):
                    if (ecoResAttributeType.IsEnumeration == NoYes::Yes)
                    {
                        element.makeVisible(enumerationComboBox);
                    }
                    else
                    {
                        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
                        {
                            richMediaType = RetailAttributeHelper::getRichMediaType(ecoResAttributeType.RecId);
                            richMediaEditFormMenuItemName = RetailRichMediaHelper::getRichMediaEditFormMenuItemName(richMediaType);
                            if (richMediaEditFormMenuItemName)
                            {
                                defaultValueStringEdit.visible(false);

                                defaultValueRichEdit.multiLine(richMediaType == RetailRichMediaType::Html);
                                element.makeVisible(defaultValueRichEdit);

                                defaultValueRichEditButton.menuItemName(richMediaEditFormMenuItemName);
                                element.makeVisible(defaultValueRichEditButton);
                            }
                            else
                            {
                                defaultValueRichEdit.visible(false);
                                defaultValueRichEditButton.visible(false);

                                element.makeVisible(defaultValueStringEdit);
                            }
                        }
                        element.makeVisible(defaultValueStringGroup);
                    }
                    break;
                default:
                // Unsupported
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>domainChanged</Name>
				<Source><![CDATA[
    public void domainChanged()
    {
        EcoResIntValue newEcoResIntValue;
        EcoResFloatValue newEcoResFloatValue;
        EcoResCurrencyValue newEcoResCurrencyValue;
        EcoResDateTimeValue newEcoResDateTimeValue;
        EcoResTextValue newEcoResTextValue;
        EcoResBooleanValue newEcoResBooleanValue;
        EcoResReferenceValue newEcoResReferenceValue;
        EcoResTextValue enumerationValue;
        EcoResEnumerationAttributeTypeValue enumerationAttributeTypeValue;
        EcoResAttributeType attributeType;
        EcoResBoundedAttributeTypeValue attributeBound;
        EcoResValue valueLower;
        EcoResFloatValue floatValueLower;
        EcoResIntValue intValueLower;
        EcoResDateTimeValue dateTimeValueLower;
        EcoResCurrencyValue currencyValueLower;
        EcoResAttributeTypeUnitOfMeasure domainUnitOfMeasure;
        UnitOfMeasure unitOfMeasure;
        EcoResAttributeType enumerationDomain;

        if (!ecoResAttribute && general_EcoResAttribute_Name.text() != '')
        {
            if (ecoResAttribute_ds.validateWrite())
            {
                this.newAttribute();
            }
        }

        if (ecoResAttribute.AttributeType &&
            !ecoResAttributeType)
        {
            attributeType = EcoResAttributeType::find(ecoResAttribute.AttributeType);
            attributeBound = EcoResBoundedAttributeTypeValue::findByAttributeType(attributeType);
            valueLower = EcoResValue::find(attributeBound.LowerBound);
        }
        else
        {
            attributeType = ecoResAttributeType;
            attributeBound = ecoResBoundedAttributeTypeValue;
            valueLower = ecoResValueLower;
        }

        attributeDefaultValueHelper = new EcoResAttributeDefaultValueHelper(attributeType);

        if (attributeType)
        {
            ecoResValue_Default_ds.executeQuery();

            switch (attributeType.DataType)
            {
                case AttributeDataType::Currency:

                    if (ecoResValue_Default.RecId)
                    {
                        if (!(ecoResValue_Default is EcoResCurrencyValue))
                        {
                            // AttributeType has changed
                            element.updateAttributeDefaultValue(newEcoResCurrencyValue);
                        }
                    }
                    else if (ecoResAttribute.RecId)
                    {
                        // For new attributes
                        newEcoResCurrencyValue = attributeDefaultValueHelper.getDefaultCurrencyValue();
                        element.createAttributeDefaultValue(newEcoResCurrencyValue);
                    }

                    break;

                case AttributeDataType::DateTime:

                    if (ecoResValue_Default.RecId)
                    {
                        if (!(ecoResValue_Default is EcoResDateTimeValue))
                        {
                            // AttributeType has changed
                            element.updateAttributeDefaultValue(newEcoResDateTimeValue);
                        }
                    }
                    else if (ecoResAttribute.RecId)
                    {
                        // For new attributes
                        newEcoResDateTimeValue = attributeDefaultValueHelper.getDefaultDateTimeValue();
                        element.createAttributeDefaultValue(newEcoResDateTimeValue);
                    }

                    break;

                case AttributeDataType::Decimal:

                    domainUnitOfMeasure = EcoResAttributeTypeUnitOfMeasure::findByAttributeType(attributeType);

                    if (ecoResValue_Default.RecId)
                    {
                        if (!(ecoResValue_Default is EcoResFloatValue))
                        {
                            // AttributeType has changed
                            element.updateAttributeDefaultValue(newEcoResFloatValue);
                            if (domainUnitOfMeasure.RecId)
                            {
                                // Set the unit of measure selection
                                if (domainUnitOfMeasure.DefaultUnitOfMeasure)
                                {
                                    unitOfMeasure = UnitOfMeasure::find(domainUnitOfMeasure.DefaultUnitOfMeasure);
                                    newEcoResFloatValue.FloatUnitOfMeasure = unitOfMeasure.RecId;
                                    newEcoResFloatValue.update();
                                }
                            }
                        }
                    }
                    else if (ecoResAttribute.RecId)
                    {
                        // For new attributes
                        newEcoResFloatValue = attributeDefaultValueHelper.getDefaultDecimalValue();
                        element.createAttributeDefaultValue(newEcoResFloatValue);
                    }

                    break;

                case AttributeDataType::Integer:

                    domainUnitOfMeasure = EcoResAttributeTypeUnitOfMeasure::findByAttributeType(attributeType);

                    if (ecoResValue_Default.RecId)
                    {
                        if (!(ecoResValue_Default is EcoResIntValue))
                        {
                            // AttributeType has changed
                            element.updateAttributeDefaultValue(newEcoResIntValue);
                            if (domainUnitOfMeasure.RecId)
                            {
                                // Set the unit of measure selection
                                if (domainUnitOfMeasure.DefaultUnitOfMeasure)
                                {
                                    unitOfMeasure = UnitOfMeasure::find(domainUnitOfMeasure.DefaultUnitOfMeasure);
                                    newEcoResIntValue.IntUnitOfMeasure = unitOfMeasure.RecId;
                                    newEcoResIntValue.update();
                                }
                            }
                        }
                    }
                    else if (ecoResAttribute.RecId)
                    {
                        // For new attributes
                        newEcoResIntValue = attributeDefaultValueHelper.getDefaultIntegerValue();
                        element.createAttributeDefaultValue(newEcoResIntValue);
                    }

                    break;

                case AttributeDataType::Text:

                    if (attributeType.IsEnumeration)
                    {
                        // Populate enumeration combox box
                        enumerationComboBox.clear();

                        while select enumerationAttributeTypeValue
                            order by OrdinalNumber
                                where enumerationAttributeTypeValue.AttributeType == attributeType.RecId
                            join enumerationValue
                                where enumerationAttributeTypeValue.Value == enumerationValue.RecId
                        {
                            if (!newEcoResTextValue.RecId && !newEcoResTextValue.TextValue && ecoResAttribute.RecId && !ecoResValue_Default.RecId)
                            {
                                newEcoResTextValue.TextValue = enumerationValue.TextValue;
                            }

                            enumerationComboBox.add(enumerationValue.TextValue);
                        }
                    }

                    if (ecoResValue_Default.RecId)
                    {
                        if (!(ecoResValue_Default is EcoResTextValue))
                        {
                            // AttributeType has changed
                            element.updateAttributeDefaultValue(newEcoResTextValue);
                        }
                    }
                    else if (ecoResAttribute.RecId)
                    {
                        // For new attributes
                        element.createAttributeDefaultValue(newEcoResTextValue);
                    }

                    if (attributeType.IsEnumeration)
                    {
                        enumerationComboBox.selectText(ecoResValue_Default_EcoResTextValue.TextValue);
                    }

                    break;

                case AttributeDataType::TrueFalse:
                    if (ecoResValue_Default.RecId)
                    {
                        if (!(ecoResValue_Default is EcoResBooleanValue))
                        {
                            // AttributeType has changed
                            element.updateAttributeDefaultValue(newEcoResBooleanValue);
                        }
                    }
                    else if (ecoResAttribute.RecId)
                    {
                        // For new attributes
                        element.createAttributeDefaultValue(newEcoResBooleanValue);
                    }

                    break;

                case AttributeDataType::Reference:
                    if (ecoResValue_Default.RecId)
                    {
                        if (!(ecoResValue_Default is EcoResReferenceValue))
                        {
                            // AttributeType has changed
                            element.updateAttributeDefaultValue(newEcoResReferenceValue);
                        }
                    }
                    else if (ecoResAttribute.RecId)
                    {
                        newEcoResReferenceValue.RefTableId = tableNum(EcoResAttribute);
                        newEcoResReferenceValue.RefRecId = (select firstOnly ecoResAttribute).RecId;
                        element.createAttributeDefaultValue(newEcoResReferenceValue);
                    }
                    break;

                default:
                    this.createOrUpdateAttributeDefaultValueDefault(attributeType);
            }

            // Refresh UI
            ecoResAttributeDefaultValue_ds.research(true);
            ecoResValue_Default_ds.research(true);
        }

        // Set visibility of controls
        element.defaultValueSetInvisible();
        element.defaultValueSetVisible();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdateAttributeDefaultValueDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Default case for creating or updating the default value for the attribute.
    /// </summary>
    /// <param name="_attributeType">The attribute type</param>
    [Replaceable]
    protected void createOrUpdateAttributeDefaultValueDefault(EcoResAttributeType _attributeType)
    {
        // Attribute type not supported
        throw error(Error::wrongUseOfFunction(funcName()));

    }

]]></Source>
			</Method>
			<Method>
				<Name>drawMetadata</Name>
				<Source><![CDATA[
    /// <summary>
    /// Draw attribute metadata.
    /// </summary>
    public void drawMetadata()
    {
        metadataHandler = new RetailAttributeMetadataHandler();

        metadataHandler.parmRetailAttributeMetadata(retailAttributeMetadata);
        metadataHandler.parmCallerObject(element);

        [retailAttributeMetadata.Metadata, retailAttributeMetadata.MetadataVersion] = metadataHandler.getMetadata();

        metadataHandler.drawMetadataGroupCtrl(attributeMetadataGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enumerationChanged</Name>
				<Source><![CDATA[
    public void enumerationChanged()
    {
        // Update default text value
        ecoResValue_Default_EcoResTextValue.TextValue = enumerationComboBox.getText(enumerationComboBox.selection());
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        //to set the default value controls invisible
        element.defaultValueSetInvisible();
    }

]]></Source>
			</Method>
			<Method>
				<Name>makeVisible</Name>
				<Source><![CDATA[
    private void makeVisible(FormControl _theControl)
    {
        // must call control.update() after making control visible to redraw new values
        // - data for the control may have changed while it was invisible
        //   (which hadn't triggered update/redraw)
        _theControl.visible(true);
        _theControl.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAttribute</Name>
				<Source><![CDATA[
    public void newAttribute()
    {
        EcoResAttribute newEcoResAttribute;
        EcoResAttributeTranslation newEcoResAttributeTranslation;

        ttsbegin;

        // Create attribute
        newEcoResAttribute = ecoResAttribute_ds.cursor();
        newEcoResAttribute.insert();

        // Create attribute translation;
        newEcoResAttributeTranslation = ecoResAttributeTranslation_ds.cursor();
        newEcoResAttributeTranslation.Attribute = newEcoResAttribute.RecId;
        newEcoResAttributeTranslation.Language = LanguageTable::defaultLanguage();
        // iff user didn't set FriendlyName, just make it same as Attribute.Name:
        if (!newEcoResAttributeTranslation.FriendlyName)
        {
            newEcoResAttributeTranslation.FriendlyName = newEcoResAttribute.Name;
        }
        newEcoResAttributeTranslation.insert();

        ttscommit;

        // must refreshes the Translation
        // - since it's OuterJoined to Attribute;
        //      otherwise, user selects a different row in grid, then back to this row
        //      - Translation fields would be blank.)
        // must refresh the attribute and the translation
        ecoResAttribute_ds.research(true);
        ecoResAttributeTranslation_ds.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshRetailAttributeMetadata</Name>
				<Source><![CDATA[
    public void refreshRetailAttributeMetadata()
    {
        retailAttributeMetadata_ds.reread();
        retailAttributeMetadata_ds.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAttributeDefaultValue</Name>
				<Source><![CDATA[
    public void updateAttributeDefaultValue(EcoResValue newEcoResValue)
    {
        ttsbegin;

        // Delete existing ecoResValue record
        ecoResValue_Default.delete();

        // Create new EcoResValue record
        newEcoResValue.clear();
        newEcoResValue.insert();

        // Update EcoResAttributeDefaultValue record
        ecoResAttributeDefaultValue.Value = newEcoResValue.RecId;
        ecoResAttributeDefaultValue.update();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _taskId)
    {
        #Task
        int ret;

        switch (_taskId )
        {
            case #taskDeleteRecord:
                this.DeleteTask();
                break;
            default:
                ret = super(_taskId);
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DeleteTask</Name>
				<Source><![CDATA[
    private void DeleteTask()
    {
        EcoResAttribute     ecoResAttributeSelected;
        int                 nSelectedForDelete = 0;
        int                 nDeleted=0;
        str                 attributesNames;

        // if user tries to delete any unsaved record
        if (!ecoResAttribute.RecId)
        {
            ecoResAttribute_ds.delete();
        }
        else if (Box::yesNo("@SYS303265", DialogButton::No) == DialogButton::Yes)
        {
            ttsbegin;
            // to find is there any marked records
            for (ecoResAttributeSelected = getFirstSelection(ecoResAttribute_ds);
            ecoResAttributeSelected;
            ecoResAttributeSelected = ecoResAttribute_ds.getNext())
            {
                nSelectedForDelete++;
                if ( ecoResAttributeSelected.validateDelete())
                {
                    ecoResAttributeSelected.delete();
                    nDeleted++;
                }
                else // concat all the attribute names which are cannot be deleted, this is to display user friendly error message.
                {
                    attributesNames += ecoResAttributeSelected.Name + ', ';
                }
            }

            ttscommit;

            // to retain the record selection in the grid
            if (nDeleted > 0)
            {
                ecoResAttribute_ds.research(true);
            }

            if (nSelectedForDelete > nDeleted)
            {
                // to delete the last ', '
                attributesNames = subStr(attributesNames, 1, strLen(attributesNames)-2);
                info (strFmt("@SYS343781", nSelectedForDelete-nDeleted, nSelectedForDelete, attributesNames));
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>EcoResAttribute</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            element.clearMetadataGroupControl();
            ret = super();

            element.drawMetadata();

            attributeMetadataGroup.allowEdit(ecoResAttribute.RecId);
            retailAttributeFilterMenuItemButton.enabled(EcoResAttribute::find(ecoResAttribute.RecId).getActualDataType() != AttributeDataType::DateTime);
            ecoResAttribute.setPrecisionOnRealValueControl(DefaultValueRealEdit);
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>writing</Name>
						<Source><![CDATA[
        public void writing()
        {
            element.domainChanged();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        /// Because there is no unique index on this table,
        /// For Catalog related records we need to check the duplicates before performing insert/update and show warning message if duplicate(s) <c>EcoResAttribute</c> found.
        /// For Component related we want to allow the duplicates.
        /// </summary>
        /// <returns>
        /// returns true if there are no catalog related duplicate records, otherwise shows warning message
        /// </returns>
        public boolean validateWrite()
        {
            EcoResAttribute     ecoResAttributeDuplicate;
            boolean ret;

            ret = super();

            if (!ecoresAttribute.allowDuplicates())
            {
                select ecoResAttributeDuplicate
                    where ecoResAttributeDuplicate.Name == general_EcoResAttribute_Name.text()
                        && ecoResAttributeDuplicate.AttributeType == ecoresAttribute.AttributeType
                        && ecoResAttributeDuplicate.RecId != ecoresAttribute.RecId
                        && ecoResAttributeDuplicate.AttributeModifier == ecoresAttribute.AttributeModifier ;
                // As part of client framework calls, this method will be called when we just launch the EcoResAttribute form as well(non-update scenarios),
                // to avoid failing in these kind of scenarios this ecoResAttributeDuplicate.RecId != this.RecId condition is required.

                if (ecoResAttributeDuplicate)
                {
                    ret = false;
                    if (ecoresAttribute.RecId !=0) // show record update error
                    {
                        throw error(strFmt("@SYS339392", tablePName(EcoResAttribute), tableStr(EcoResAttribute),  fieldPName(EcoResAttribute, Name),
                                            general_EcoResAttribute_Name.text() , ecoResAttributeType.Name ));
                    }
                    else // show record add error
                    {
                        throw error(strFmt("@SYS339391", tablePName(EcoResAttribute), tableStr(EcoResAttribute),  fieldPName(EcoResAttribute, Name),
                                            general_EcoResAttribute_Name.text() , ecoResAttributeType.Name ));
                    }
                }
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            //the purpose of the below default assignment is to restrict the users to create attributes of type Catalog
            // and later can be consumed by Categories and Products.
            ecoResAttribute.AttributeModifier = EcoResAttributeModifier::Catalog;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            element.attributeChanged();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            element.addFiltersToEcoResAttributeDS(ecoResAttribute_ds.query().dataSourceTable(tableNum(EcoResAttribute)));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResAttributeType</Name>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            super();

            if (ecoResAttribute.RecId !=0 )
            {
                element.domainChanged();
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResAttributeTranslation</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
            ecoResAttributeTranslation.Language = SystemParameters::getSystemLanguageId();
            ecoResAttributeTranslation.Attribute = ecoResAttribute.RecId;
            ret = super();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            SysTranslationHelper::filterTranslationTable(ecoResAttributeTranslation_ds, fieldNum(EcoResAttributeTranslation, Language));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>EcoResValueLower</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource qbds;

            if (ecoResBoundedAttributeTypeValue)
            {
                qbds = ecoResValueLower_ds.query().dataSourceTable(tableNum(EcoResValue));
                qbds.clearDynalinks();
                qbds.clearRanges();
                qbds.addRange(fieldNum(EcoResValue, RecId)).value(queryValue(ecoResBoundedAttributeTypeValue.LowerBound));
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>AttributeTranslateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            SysTranslationHelper sysTranslationHelper;

            sysTranslationHelper = new SysTranslationHelper(
                                             tableNum(EcoResAttribute),
                                             tableNum(EcoResAttributeTranslation)
                                          );

            // this is to show EcoResAttribute.Name, which is not a/part of NaturalKey, in the SysTranslation grid form.
            // due to no unique index on EcoResAttribute table below line is required.
            // Please note that “setMainTableNaturalKeyFieldId” is a misnomer – it basically allows any (one) given field to be specified to appear in TranslationList form instead of the NaturalKey field
            sysTranslationHelper.setMainTableNaturalKeyFieldId(fieldNum(EcoResAttribute, Name));
            element.addFiltersToEcoResAttributeDS(sysTranslationHelper.parmSystemLanguageBaseTableQuery().dataSourceTable(tableNum(EcoResAttribute)));
            sysTranslationHelper.launchTranslationDetailForm(EcoResAttribute.RecId);

            super();
            ecoResAttribute_DS.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>General_EcoResAttribute_Name</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            if (ecoResAttribute.RecId!=0 && general_EcoResAttribute_Name.text() != ecoResAttribute.Name)
            {
                ecoResAttribute_ds.validateWrite();
            }

            ret = super();

            // if friendly name is empty assign the attribute name value to friendly name
            if ( ecoResAttributeTranslation_FriendlyName.valueStr() == "")
            {
                ecoResAttributeTranslation.FriendlyName = this.text();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EcoResAttribute_Domain</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            return EcoResAttributeType::lookupVisibleAttributes(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
         public boolean modified()
        {
            boolean ret = super();

            if (ret)
            {
                EcoResAttribute_DS.forceWrite(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EnumerationComboBox</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.enumerationChanged();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DefaultValueUtcDateTimeEdit</Name>
				<Type>DateTime</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid = super();

            if (isValid)
            {
                EcoResDateTimeValue ecoResDateTimeValue;
                ecoResDateTimeValue.DateTimeValue  = this.dateTimeValue();

                isValid = element.validateDefaultValue(ecoResDateTimeValue);

                if (!isValid)
                {
                    warning(strFmt("@SYS310456", this.dateTimeValue(), ecoResBoundedAttributeTypeValue.toString(), ecoResAttributeType.Name));
                }
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReferenceValue</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(EcoResAttribute), this);
            Query lookupQuery = new Query();
            QueryBuildDataSource qbds;

            qbds = lookupQuery.addDataSource(tableNum(EcoResAttribute)).addDataSource(tableNum(EcoResAttributeType));
            qbds.addLink(fieldNum(EcoResAttribute, AttributeType), fieldNum(EcoResAttributeType, RecId));
            qbds.addRange(fieldNum(EcoResAttributeType, DataType)).value(SysQuery::valueNot(AttributeDataType::Reference));

            sysTableLookup.parmQuery(lookupQuery);
            sysTableLookup.addLookupfield(fieldNum(EcoResAttribute, Name));
            sysTableLookup.addLookupfield(fieldNum(EcoResAttribute, AttributeType));

            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CategoryAttributeValueTranslateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            SysTranslationHelper translationHelper;

            translationHelper = new SysTranslationHelper( tablenum(EcoResTextValue),
                                                          tablenum(EcoResTextValueTranslation)
                                                         );

            ecoResValue_Default_EcoResTextValue.createDefaultTranslation();
            translationHelper.launchTranslationDetailForm(ecoResValue_Default_EcoResTextValue.RecId);
            super();

            element.dataSource().research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DefaultValueIntEdit</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid = super();

            if (isValid)
            {
                EcoResIntValue ecoResIntValue;
                ecoResIntValue.IntValue = this.value();

                isValid = element.validateDefaultValue(ecoResIntValue);

                if (!isValid)
                {
                    warning(strFmt("@SYS310456", this.value(), ecoResBoundedAttributeTypeValue.toString(), ecoResAttributeType.Name));
                }
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DefaultValueRealEdit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {            
            boolean isValid = super();

            if (isValid)
            {
                EcoResFloatValue ecoResFloatValue;                

                ecoResFloatValue.FloatValue = this.realValue();
                isValid = element.validateDefaultValue(ecoResFloatValue);

                if (!isValid)
                {
                    warning(strFmt("@SYS310456", this.realValue(), ecoResBoundedAttributeTypeValue.toString(), ecoResAttributeType.Name));
                }
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DefaultCurrencyValueRealEdit</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid = super();

            if (isValid)
            {
                EcoResCurrencyValue ecoResCurrencyValue;
                ecoResCurrencyValue.CurrencyValue = defaultCurrencyValueRealEdit.realValue();
                ecoResCurrencyValue.CurrencyCode = currencyCode.text();

                isValid = element.validateDefaultValue(ecoResCurrencyValue);

                if (!isValid)
                {
                    warning(strFmt("@SYS310456", ecoResCurrencyValue.value(), ecoResBoundedAttributeTypeValue.toString(), ecoResAttributeType.Name));
                }
            }

            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSourceChangeGroupMode>ImplicitInnerOuter</DataSourceChangeGroupMode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>EcoResAttribute</Name>
			<Table>EcoResAttribute</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AttributeModifier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttributeType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResAttributeType</Name>
			<Table>EcoResAttributeType</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsEnumeration</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsHidden</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResAttribute</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResAttributeTranslation</Name>
			<Table>EcoResAttributeTranslation</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Attribute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FriendlyName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HelpText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Language</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResAttribute</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResAttributeDefaultValue</Name>
			<Table>EcoResAttributeDefaultValue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Attribute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Value</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResAttribute</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResValue_Default</Name>
			<Table>EcoResValue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Origin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResAttributeDefaultValue</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_Default_EcoResBooleanValue</Name>
					<Table>EcoResBooleanValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>BooleanValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_Default_EcoResDateTimeValue</Name>
					<Table>EcoResDateTimeValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>DateTimeValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_Default_EcoResFloatValue</Name>
					<Table>EcoResFloatValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<AllowEdit>No</AllowEdit>
							<DataField>FloatUnitOfMeasure</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>FloatValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_Default_EcoResIntValue</Name>
					<Table>EcoResIntValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<AllowEdit>No</AllowEdit>
							<DataField>IntUnitOfMeasure</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IntValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_Default_EcoResTextValue</Name>
					<Table>EcoResTextValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TextValue</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_Default_EcoResCurrencyValue</Name>
					<Table>EcoResCurrencyValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>CurrencyCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CurrencyValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValue_Default_EcoResReferenceValue</Name>
					<Table>EcoResReferenceValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RefFieldId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RefRecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RefTableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
			</DerivedDataSources>
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResBoundedAttributeTypeValue</Name>
			<Table>EcoResBoundedAttributeTypeValue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AttributeType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LowerBound</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UpperBound</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResAttributeType</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>EcoResValueLower</Name>
			<Table>EcoResValue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Origin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>relationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResBoundedAttributeTypeValue</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources>
				<AxFormDataSourceDerived>
					<Name>EcoResValueLower_EcoResTextValue</Name>
					<Table>EcoResTextValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TextValue</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValueLower_EcoResIntValue</Name>
					<Table>EcoResIntValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>IntUnitOfMeasure</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IntValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValueLower_EcoResDateTimeValue</Name>
					<Table>EcoResDateTimeValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>DateTimeValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValueLower_EcoResFloatValue</Name>
					<Table>EcoResFloatValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>FloatUnitOfMeasure</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>FloatValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValueLower_EcoResBooleanValue</Name>
					<Table>EcoResBooleanValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>BooleanValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValueLower_EcoResCurrencyValue</Name>
					<Table>EcoResCurrencyValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>CurrencyCode</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CurrencyValue</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
				<AxFormDataSourceDerived>
					<Name>EcoResValueLower_EcoResReferenceValue</Name>
					<Table>EcoResReferenceValue</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RefFieldId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RefRecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RefTableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<DerivedDataSources />
				</AxFormDataSourceDerived>
			</DerivedDataSources>
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailAttributeMetadata</Name>
			<Table>RetailAttributeMetadata</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Attribute</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Metadata</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MetadataVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EcoResAttribute</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS300535</Caption>
		<DataSource xmlns="">EcoResAttribute</DataSource>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">SimpleListDetails</Style>
		<TitleDataSource xmlns="">EcoResAttribute</TitleDataSource>
		<WindowResize xmlns="">Dynamic</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>AttributeTranslateButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>AttributeTranslateButton</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS312022</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@SYS312030</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>RetailAttributeFilterButtonGroup</Name>
						<ConfigurationKey>Retail</ConfigurationKey>
						<ElementPosition>1879048189</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>RetailAttributeFilterMenuItemButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<DataSource>EcoResAttribute</DataSource>
								<MenuItemName>RetailAttributeFilter</MenuItemName>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<DataSource>EcoResAttribute</DataSource>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>AttributeListGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>AttributeQuickFilter</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>AttributeGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>EcoResAttribute_Name</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>AttributeGrid</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EcoResAttribute_Name</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Name</DataField>
								<DataSource>EcoResAttribute</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>AttributeGrid_EcoResAttribute_Domain</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AttributeGrid_EcoResAttribute_Domain_Name</Name>
										<DataRelationPath>AttributeType</DataRelationPath>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<DataSource>EcoResAttribute</DataSource>
								<ReferenceField>AttributeType</ReferenceField>
								<ReplacementFieldGroup>Name</ReplacementFieldGroup>
							</AxFormControl>
						</Controls>
						<DataSource>EcoResAttribute</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderGroup</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>General_EcoResAttribute_Name</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>EcoResAttribute</DataSource>
						<FastTabSummary>Yes</FastTabSummary>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>EcoResAttribute_Domain</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS343292</HelpText>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EcoResAttribute_Domain_Name</Name>
								<DataRelationPath>AttributeType</DataRelationPath>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<DataSource>EcoResAttribute</DataSource>
						<Label>@SYS333319</Label>
						<ReferenceField>AttributeType</ReferenceField>
						<ReplacementFieldGroup>Name</ReplacementFieldGroup>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>EcoResAttribute_AttributeModifier</Name>
						<AllowEdit>No</AllowEdit>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>AttributeModifier</DataField>
						<DataSource>EcoResAttribute</DataSource>
						<Items />
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>AttributeTab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612734</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GeneralTabPage</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GeneralGroup</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EcoResAttributeTranslation_FriendlyName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FriendlyName</DataField>
										<DataSource>EcoResAttributeTranslation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EcoResAttributeTranslation_Description</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>EcoResAttributeTranslation</DataSource>
										<DisplayHeight>5</DisplayHeight>
										<DisplayHeightMode>Fixed</DisplayHeightMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EcoResAttributeTranslation_HelpText</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_ProductInformationManagement:EcoResAttribute_EcoResAttributeTranslation_HelpText</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>HelpText</DataField>
										<DataSource>EcoResAttributeTranslation</DataSource>
										<DisplayHeight>5</DisplayHeight>
										<DisplayHeightMode>Fixed</DisplayHeightMode>
									</AxFormControl>
								</Controls>
								<DataSource>EcoResAttribute</DataSource>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AttributeDefaultValueMetadataSetup</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DefaultValueGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>EnumerationComboBox</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>536870910</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SYS131191</HelpText>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<AppendNew>Yes</AppendNew>
												<ComboType>List</ComboType>
												<Label>@SYS310150</Label>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateTimeControl">
												<Name>DefaultValueUtcDateTimeEdit</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612730</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>DateTime</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>DateTimeValue</DataField>
												<DataSource>EcoResValue_Default_EcoResDateTimeValue</DataSource>
												<Label>@SYS310150</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>DefaultValueBooleanEdit</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1879048185</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>BooleanValue</DataField>
												<DataSource>EcoResValue_Default_EcoResBooleanValue</DataSource>
												<Label>@SYS310150</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>ReferenceValue</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>2013265915</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ReferenceGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ReferenceValue_Name</Name>
														<DataRelationPath>EcoResAttribute</DataRelationPath>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
													</AxFormControl>
												</Controls>
												<DataSource>EcoResValue_Default_EcoResReferenceValue</DataSource>
												<Label>@RET4040322</Label>
												<ReferenceField>RefRecId</ReferenceField>
											</AxFormControl>
										</Controls>
										<HideIfEmpty>No</HideIfEmpty>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>AttributeMetadataGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ConfigurationKey>Retail</ConfigurationKey>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DefaultValueStringGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>357913940</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DefaultValueStringEdit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TextValue</DataField>
										<DataSource>EcoResValue_Default_EcoResTextValue</DataSource>
										<FastTabSummary>Yes</FastTabSummary>
										<Label>@SYS310150</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DefaultValueRichEdit</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TextValue</DataField>
										<DataSource>EcoResValue_Default_EcoResTextValue</DataSource>
										<DisplayHeight>5</DisplayHeight>
										<DisplayHeightMode>Fixed</DisplayHeightMode>
										<Label>@SYS310150</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DefaultValueRichEditButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>ImageOnly</ButtonDisplay>
										<DataSource>EcoResValue_Default_EcoResTextValue</DataSource>
										<MenuItemName>RetailRichTextAttributeValue</MenuItemName>
										<NormalImage>Editing</NormalImage>
										<Text>@RET490093</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>CategoryAttributeValueTranslateButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
										<NormalImage>Translate</NormalImage>
										<Text>@SYS312030</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>IntegerDecimalGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>805306365</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>DefaultValueIntEdit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IntValue</DataField>
										<DataSource>EcoResValue_Default_EcoResIntValue</DataSource>
										<Label>@SYS310150</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>DefaultValueRealEdit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FloatValue</DataField>
										<DataSource>EcoResValue_Default_EcoResFloatValue</DataSource>
										<Label>@SYS310150</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>FloatUnitOfMeasure</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS131189</HelpText>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>FloatUnitOfMeasure_Symbol</Name>
												<DataRelationPath>UnitOfMeasure_Float</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>EcoResValue_Default_EcoResFloatValue</DataSource>
										<ReferenceField>FloatUnitOfMeasure</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>IntUnitOfMeasure</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SYS131190</HelpText>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>IntUnitOfMeasure_Symbol</Name>
												<DataRelationPath>UnitOfMeasure_Int</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>EcoResValue_Default_EcoResIntValue</DataSource>
										<ReferenceField>IntUnitOfMeasure</ReferenceField>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CurrencyGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>DefaultCurrencyValueRealEdit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyValue</DataField>
										<DataSource>EcoResValue_Default_EcoResCurrencyValue</DataSource>
										<Label>@SYS310150</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CurrencyCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>EcoResValue_Default_EcoResCurrencyValue</DataSource>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Columns>4</Columns>
						<Caption>@SYS2952</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>