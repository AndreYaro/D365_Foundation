<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>VendSupplyRiskListPageCard</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class VendSupplyRiskListPageCard extends FormRun implements VendSupplyRiskIListPage
{
    private UnknownNoYes dateFilterFeatureState;
    private VendSupplyRiskSelectPeriodState periodState;
    private MenuItemName listPageMenuItemName;
    private Caption listPageCaptionText;
    private QueryName listPageQueryName;
    private FieldId listPageQueryDateField;


}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Args args = element.args();

        if (args.menuItemType() == MenuItemType::Display)
        {
            switch (args.menuItemName())
            {
                case menuItemDisplayStr(VendSupplyRiskPurchaseOrderSingleSourcedCard):
                    MenuFunction menuFuction = new MenuFunction(menuItemDisplayStr(VendSupplyRiskPurchaseOrderSingleSourced), MenuItemType::Display);

                    listPageQueryName = menuFuction.query();
                    listPageCaptionText = menuFuction.label();
                    listPageMenuItemName = menuFuction.name();

                    switch (listPageQueryName)
                    {
                        case queryStr(VendSupplyRiskPurchaseOrderSingleSourcedQuery):
                            listPageQueryDateField = fieldNum(VendSupplyRiskPurchaseOrderSingleSourcedView, DeliveryDate);
                            break;
                    }
                    break;
            }
        }

        if (!listPageMenuItemName
            && !listPageQueryDateField)
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        super();

        this.setPeriod(periodState);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPeriod</Name>
				<Source><![CDATA[
    public void setPeriod(VendSupplyRiskSelectPeriodState _periodState)
    {
        periodState = _periodState;

        if (this.hasExecutedInit())
        {
            ListPageCaption.text(listPageCaptionText);

            Query query = new Query(listPageQueryName);

            QueryBuildDataSource queryDatasource = query.dataSourceNo(1);

            queryDatasource.addSelectionField(fieldNum(VendSupplyRiskPurchaseOrderLineAggregatedReceiptView, RecId), SelectionField::Count);

            if (element.dateFilterEnabled()
                && periodState)
            {
                QueryBuildRange requestedDeliveryDateRange = SysQuery::findOrCreateRange(queryDatasource, listPageQueryDateField);

                requestedDeliveryDateRange.value(SysQueryRangeUtil::dateRange(periodState.parmFromDate(), periodState.parmToDate()));
            }

            QueryRun queryRun = new QueryRun(Query);

            Common record;

            if (queryRun.next())
            {
                record = queryRun.getNo(1);
            }

            ListPageCount.text(int642Str(record.RecId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateFilterEnabled</Name>
				<Source><![CDATA[
    private boolean dateFilterEnabled()
    {
        if (dateFilterFeatureState == UnknownNoYes::Unknown)
        {
            if (VendSupplyRiskDateFilterFeature::instance().isEnabled())
            {
                dateFilterFeatureState = UnknownNoYes::Yes;
            }
            else
            {
                dateFilterFeatureState = UnknownNoYes::No;
            }
        }

        return dateFilterFeatureState == UnknownNoYes::Yes;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>OpenListPage</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
    
            Args args = new Args();
            args.parmObject(periodState);
            args.caller(element);
    
            new MenuFunction(listPageMenuItemName, MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Pattern xmlns="">Custom</Pattern>
		<Style xmlns="">FormPart</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ListPageCountCard</Name>
				<ExtendedStyle>BusinessCard</ExtendedStyle>
				<Pattern>BusinessCardThreeFields</Pattern>
				<PatternVersion>1.0</PatternVersion>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ListPageCount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ExtendedStyle>Heading</ExtendedStyle>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ChangeCase>UpperCase</ChangeCase>
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Empty</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ChangeCase>UpperCase</ChangeCase>
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ListPageCaption</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ChangeCase>UpperCase</ChangeCase>
						<ShowLabel>No</ShowLabel>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>ActionPane</Name>
						<Type>ActionPane</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ActiionPaneButtonGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>OpenListPage</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<NeededPermission>Read</NeededPermission>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<NormalImage>Details</NormalImage>
										<Text>@Client:ShowList</Text>
									</AxFormControl>
								</Controls>
								<HideIfEmpty>No</HideIfEmpty>
							</AxFormControl>
						</Controls>
						<Style>Strip</Style>
					</AxFormControl>
				</Controls>
				<AllowUserSetup>Restricted</AllowUserSetup>
				<ArrangeMethod>None</ArrangeMethod>
				<Style>Card</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>