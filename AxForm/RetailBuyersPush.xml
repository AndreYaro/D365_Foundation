<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RetailBuyersPush</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class RetailBuyersPush extends FormRun
{
    boolean                     categoryModified, crossDocking;
    str                         filter;

    InventAvailabilityFormCache inventAvailabilityFormCache;
    NumberSeqFormHandler        numberSeqBuyersPushId;
    Qty                         selectedQty, rTotalQty, latestModifiedDistributeQty;
    QueryBuildRange             categoryFilterRetail;
    RetailBuyersPushFormHelper  helper;
    RetailBuyersPushId          m_sBuyersPushId;
    RetailInventDimCtrl_Frm_BP  inventDimFormSetup;
    RetailReplenishment         m_oReplenishment;
	[SysObsolete('', false, 31\03\2019)]
    UnitOfMeasureConverter      inventItemUnitConvert;

}
]]></Source>
			</Method>
			<Method>
				<Name>getQueryForQuantityCalculation</Name>
				<Source><![CDATA[
    public Query getQueryForQuantityCalculation()
    {
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;

        // remove dynalinks to be able to pack and send to server. adding range manually.
        query                   = new Query(RetailBuyersPushLine_ds.query());
        queryBuildDataSource    = query.dataSourceTable(tableNum(RetailBuyersPushLine));
        query.dataSourceTable(tableNum(InventDim)).enabled(false);
        queryBuildDataSource.clearLinks();
        queryBuildDataSource.clearDynalinks();
        queryBuildDataSource.addRange(fieldNum(RetailBuyersPushLine, BuyersPushId)).value(SysQuery::value(RetailBuyersPushTable.BuyersPushId));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearReplenishmentFilter</Name>
				<Source><![CDATA[
    public void clearReplenishmentFilter()
    {
        if (filter)
        {
            // Clear filter to display everything.
            categoryFilterRetail.value('');
            RetailBuyersPushLine_ds.executeQuery();
            RetailGroupMemberLine.Category = 0;
            filter = "";
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        ;

        if (numberSeqBuyersPushId)
        {
            numberSeqBuyersPushId.formMethodClose();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrFindPush</Name>
				<Source><![CDATA[
    RetailBuyersPushId createOrFindPush(InventTable    _tInventTable)
    {
        RetailBuyersPushTable      tRetailBuyersPushTable;
        RetailBuyersPushId         ret;

        select firstonly * from tRetailBuyersPushTable
            where tRetailBuyersPushTable.ItemId == _tInventTable.ItemId    &&
                 !tRetailBuyersPushTable.TransferOrderCreated;

        if (tRetailBuyersPushTable.RecId)
        {   // Return the found record...
            ret = tRetailBuyersPushTable.BuyersPushId;
        }
        else
        {   // None found - create a record...
            retailBuyersPushTable_ds.create();
            retailBuyersPushTable.InventLocationId = _tInventTable.purchInventLocationId();

            retailBuyersPushTable.Description      = strFmt("%1 -%2", _tInventTable.ItemId, _tInventTable.defaultProductName());
            retailBuyersPushTable.ItemId           = _tInventTable.ItemId;
            retailBuyersPushTable_ds.write();

            RetailBuyersPushLine::createBuyersPushLines(retailBuyersPushTable.BuyersPushId, _tInventTable.ItemId, retailBuyersPushTable.InventLocationId, retailBuyersPushTable.InventSiteId);

            ret = retailBuyersPushTable.BuyersPushId;

            RetailTracer::Info('Replenishment', funcName(), 'New buyers\'s push has been created.');
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doReread</Name>
				<Source><![CDATA[
    void doReread(Object _caller = null)
    {
        // Re-read the Data Source (ds) for the associated tables...
        retailBuyersPushTable_ds.reread();
        retailBuyersPushLine_ds.reread();
        retailBuyersPushLineQty_ds.reread();

        retailBuyersPushTable_ds.refresh();
        retailBuyersPushTable_ds.active();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFieldsForCrossDock</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables distribution fields in buyers push datasource, when doing cross docking.
    /// </summary>
    /// <remarks>
    /// We should allow user to modify distribution fields, when doing cross docking.
    /// All others should be read only.
    /// </remarks>
    public void enableFieldsForCrossDock()
    {
        DictTable   buyersPushTable = new DictTable(tableNum(RetailBuyersPushTable));
        int         i, currentFieldNumber;

        for (i = 0; i <= buyersPushTable.fieldCnt(); i++)
        {
            currentFieldNumber = buyersPushTable.fieldCnt2Id(i);
            if (RetailBuyersPushTable_ds.object(currentFieldNumber))
            {
                switch (currentFieldNumber)
                {
                    case fieldNum(RetailBuyersPushTable, distributionType):
                    case fieldNum(RetailBuyersPushTable, ReplenishmentHierarchyNode):
                    case fieldNum(RetailBuyersPushTable, LocationRecId):
                    case fieldNum(RetailBuyersPushTable, RespectAssortments):
                        RetailBuyersPushTable_ds.object(currentFieldNumber).allowEdit(true);
                        break;
                    default:
                        RetailBuyersPushTable_ds.object(currentFieldNumber).allowEdit(false);
                        break;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedLineQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get quantity for selected line
    /// </summary>
    /// <param name="_selectedLine">
    /// Selected buyer's push or purch line
    /// </param>
    /// <returns>
    /// Available quantity for the selected line.
    /// </returns>
    /// <remarks>
    /// Determine the quantity for the line given (depending on where we are,
    /// in buyers push or cross dock)
    /// </remarks>
    [SysObsolete('', false, 30\06\2018)]
    public Qty getSelectedLineQty(RetailBuyersPushLine _selectedLine)
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        InventTable                     tInventTable;
        PurchTable                      purchTable;
        UnitOfMeasureDecimalPrecision   unitDecimals = 2;

        UnitOfMeasureDecimalPrecision getUnitDecimals(ItemId _itemId)
        {
            UnitOfMeasureSymbol unitId = InventTableModule::find(_itemId, ModuleInventPurchSales::Invent).UnitId;
            return UnitOfMeasure ::find(UnitOfMeasure::unitOfMeasureIdBySymbol(unitId)).DecimalPrecision;
        }

        inventItemUnitConvert = UnitOfMeasureConverter::construct();

        super();

        inventAvailabilityFormCache = InventAvailabilityFormCache::construct();

        helper = RetailBuyersPushFormHelper::construct();

        //Initialize splitter

        if (element.args().dataset() == tableNum(InventTable))
        {
            tInventTable    =   element.args().record();
            m_sBuyersPushId = element.createOrFindPush(tInventTable);

            retailBuyersPushTable_ds.query().dataSourceTable(tableNum(RetailBuyersPushTable)).addRange(fieldNum(RetailBuyersPushTable, BuyersPushId)).value(m_sBuyersPushId);

            retailBuyersPushTable_ds.allowCreate(false);
            retailBuyersPushTable_ds.allowDelete(false);

            retailBuyersPushLine_ds.allowCreate(false);
            retailBuyersPushLine_ds.allowDelete(false);
            retailBuyersPushLine_ds.allowEdit(false);

            RetailTracer::Info('Replenishment', funcName(), 'RetailBuyersPush form is being opened from inventory table.');
        }
        else if (element.args().dataset() == tableNum(PurchTable))
        {   // Cross Dock
            purchTable = element.args().record();
            m_sBuyersPushId = RetailReplenishmentCrossDocking::createOrFindPushFromPurch(purchTable).BuyersPushId;

            retailBuyersPushTable_ds.query().dataSourceTable(tableNum(RetailBuyersPushTable)).addRange(fieldNum(RetailBuyersPushTable, BuyersPushId)).value(m_sBuyersPushId);

            retailBuyersPushTable_ds.allowCreate(false);
            element.enableFieldsForCrossDock();
            retailBuyersPushTable_ds.allowDelete(false);

            retailBuyersPushLine_ds.allowCreate(false);
            retailBuyersPushLine_ds.allowDelete(false);
            retailBuyersPushLine_ds.allowEdit(false);

            // Cross Dock - Modify default UI
            element.design().caption("@RET800");
            fshBuyersPushTable_BuyersPushId.label("@RET992");
            fshBuyersPushTable_InventSiteId.visible(false);
            fshBuyersPushTable_InventLocationId.visible(false);
            totalQty.label("@RET992");
            fshReplenishmentLineQty_Qty.label("@RET809");

            // Crock docking - modify default UI
            QtySelectedlines.label("@RET818");
            DistributeQty.label("@REX4040060");
            SpecifiedQtyDistribute.label("@REX1340");
            RemainingAvailableQty.label("@REX4040061");
            QtyDistribute.label("@REX1337");
            // Disable multi-select in product line grid
            Grid.multiSelect(false);
            // Hide the checkbox column
            Grid.showRowLabels(false);

            // Show category filter
            retailGroupMemberLine_Category.visible(true);
            RetailGroupMemberLine_q.dataSourceNo(1).addRange(fieldNum(RetailGroupMemberLine, Category)).value('0');

            RetailTracer::Info('Replenishment', funcName(), 'RetailBuyersPush form is being opened from purchase order.');
        }
        else
        {
            retailBuyersPushLine_ds.allowCreate(true);
            retailBuyersPushLine_ds.allowDelete(true);

            if (element.args().menuItemName() == menuitemDisplayStr(RetailBuyersPush))
            {   // Opened to show BuyersPush only...

                // Limit to where PurchId = NULL (BuyersPush)
                retailBuyersPushTable_ds.query().dataSourceTable(tableNum(RetailBuyersPushTable)).addRange(fieldNum(RetailBuyersPushTable, PurchId)).value(SysQuery::valueEmptyString());

                FSHBuyersPushTable_BuyersPushId1.visible(true);
            }
            else if (element.args().menuItemName() == menuitemDisplayStr(RetailCrossDock))
            {   // Opened to show CrossDock only ...
                retailBuyersPushTable_ds.object(fieldNum(RetailBuyersPushTable, PurchId)).enabled(false);
                // Show PurchId when viewing cross dock
                retailBuyersPushTable_ds.object(fieldNum(RetailBuyersPushTable, PurchId)).visible(true);

                retailBuyersPushTable_ds.allowCreate(false);

                retailBuyersPushLine_ds.allowCreate(false);
                retailBuyersPushLine_ds.allowDelete(false);
                retailBuyersPushLine_ds.allowEdit(false);

                // Limit to where PurchId <> NULL (CrossDock)
                retailBuyersPushTable_ds.query().dataSourceTable(tableNum(RetailBuyersPushTable)).addRange(fieldNum(RetailBuyersPushTable, PurchId)).value(SysQuery::valueNotEmptyString());

                // Cross Dock - Modify default UI
                element.design().caption("@RET800");
                fshBuyersPushTable_BuyersPushId.label("@RET992");
                fshBuyersPushTable_InventSiteId.visible(false);
                fshBuyersPushTable_InventLocationId.visible(false);
                totalQty.label("@RET992");
                fshReplenishmentLineQty_Qty.label("@RET809");

                // Crock docking - modify default UI
                QtySelectedlines.label("@RET818");
                DistributeQty.label("@REX4040060");
                SpecifiedQtyDistribute.label("@REX1340");
                RemainingAvailableQty.label("@REX4040061");
                QtyDistribute.label("@REX1337");
                // Disable multi-select in product line grid
                Grid.multiSelect(false);
                // Hide the checkbox column
                Grid.showRowLabels(false);

                retailGroupMemberLine_Category.visible(true);
                // as reference control is bound to the Category field, apply this range in order not to show the first value from the table on startup
                RetailGroupMemberLine_q.dataSourceNo(1).addRange(fieldNum(RetailGroupMemberLine, Category)).value('0');
            }
        }

        QuickFilter.parmTargetControlName("NavigationListGrid");
        categoryFilterRetail  = RetailBuyersPushLine_ds.query().dataSourceTable(tablenum(RetailBuyersPushLine)).addRange(fieldnum(RetailBuyersPushLine, ItemId));

        qtySelectedLines.noOfDecimals(unitDecimals);
        qtyDistribute.noOfDecimals(unitDecimals);

        SpecifiedQtyDistribute.noOfDecimals(unitDecimals);

        element.updateDesign(InventDimFormDesignUpdate::Init);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReplenishmentValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills form controls with calculated values, based on distribution parameters specified.
    /// </summary>
    /// <param name = "_replenishment">
    /// Replenishment object related to the current buyers push/cross docking.
    /// </param>
    /// <param name = "_totalRemainingAvailableQty">
    /// The total remaining available quantity.
    /// </param>
    public void setReplenishmentValues(RetailReplenishment _replenishment, Qty _totalRemainingAvailableQty)
    {
        if (_replenishment)
        {
            _replenishment.parmQtyInSelectedLines(_totalRemainingAvailableQty);
            _replenishment.parmQtyToDistribute(qtyDistribute.realValue());
            _replenishment.calcPercentageToDistribute();

            _replenishment.parmBuyersPushLineFilter(filter);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the object containing information for Dimension display form.
    /// </summary>
    /// <returns>
    /// The object containing information for Dimension display form.
    /// </returns>
    Object inventDimSetupObject()
    {
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isQuantitySpecifiedForAllLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether all product lines have quantity manually specified to distribute.
    /// </summary>
    /// <returns>
    /// True if all product lines have quantity manually specified to distribute. Otherwise, false.
    /// </returns>
    public boolean isQuantitySpecifiedForAllLines()
    {
        RetailBuyersPushLine unspecifiedLine;

        select firstOnly RecId from unspecifiedLine
            where unspecifiedLine.BuyersPushId == RetailBuyersPushTable.BuyersPushId
               && unspecifiedLine.UserSpecified == NoYes::No;

        return unspecifiedLine.RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqBuyersPushId</Name>
				<Source><![CDATA[
    NumberSeqFormHandler numberSeqBuyersPushId()
    {
        if (!numberSeqBuyersPushId)
        {   // We don't have one so create a new numberSequenceBuyersPushId...
            numberSeqBuyersPushId = NumberSeqFormHandler::newForm(RetailParametersEx1::numRefBuyersPushId().NumberSequenceId,
                                                                  element,
                                                                  retailBuyersPushTable_ds,
                                                                  fieldNum(RetailBuyersPushTable, BuyersPushId));
        }

        return numberSeqBuyersPushId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWidthHeight</Name>
				<Source><![CDATA[
    void setWidthHeight()
    {
        ;

        element.design(1).width(element.design(1).widthValue());
        element.design(1).height(element.design(1).heightValue());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCreateOrderState</Name>
				<Source><![CDATA[
    public void updateCreateOrderState()
    {
        boolean @readOnly;
        RetailParameters           parameters = RetailParameters::find();
        RetailReplenishmentRespectAssortments respectAssortments;

        // Make read-only after Orders have been created
        @readOnly = retailBuyersPushTable.TransferOrderCreated;

        // Update the "Create Orders" (or "Confirm" button) etc.
        createTransferOrders.enabled(!@readOnly);
        calculate.enabled(!@readOnly);
        Clear.enabled(!@readOnly);
        retailBuyersPushLineQty_ds.allowEdit(!@readOnly);
        DetailsHeader.enabled(!@readOnly);
        RetailBuyersPushLine_ds.allowEdit(!@readOnly);
        ActionPaneTab1.enabled(!@readOnly);
        QtyDistribute.enabled(!@readOnly);

        // Button is only enabled AFTER orders have been created...
        ButtonLineQty.enabled(@readOnly);

        // Show/Hide controls based upon crossDocking
        FSHBuyersPushTable_InventLocationId2.visible(!crossDocking);
        FSHBuyersPushTable_InventSiteId1.visible(!crossDocking);

        // Show check-box only for manual assortment option
        respectAssortments = crossDocking ? parameters.CrossDockingRespectAssortments : parameters.BuyersPushRespectAssortments;

        if (respectAssortments == RetailReplenishmentRespectAssortments::Always)
        {
            RespectAssortmentsCheckBox.checked(true);
            RespectAssortmentsCheckBox.enabled(false);
        }
        else if (respectAssortments == RetailReplenishmentRespectAssortments::Never)
        {
            RespectAssortmentsCheckBox.checked(false);
            RespectAssortmentsCheckBox.enabled(false);
        }
        else
        {
            // Don't change checked state
            RespectAssortmentsCheckBox.enabled(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates inventory dimensions fields in the buyers push lines grid.
    /// </summary>
    /// <param name="mode">
    /// The mode of update.
    /// </param>
    /// <exception cref="Exception::Error">
    /// Exception is thrown, if unknow update mode is being passed.
    /// </exception>
    void updateDesign(InventDimFormDesignUpdate mode)
    {
        switch (mode)
        {
            case InventDimFormDesignUpdate::Init:
                if (!inventDimFormSetup)
                {
                    inventDimFormSetup = RetailInventDimCtrl_Frm_BP::newFromForm(element);
                }
                inventDimFormSetup.formActiveSetup(InventDimGroupSetup::newInventTable(InventTable::find(RetailBuyersPushLine.ItemId)));
                inventDimFormSetup.formSetControls(true);
                break;

            case InventDimFormDesignUpdate::Active:
                inventDimFormSetup.formActiveSetup(InventDimGroupSetup::newInventTable(InventTable::find(RetailBuyersPushLine.ItemId)));
                inventDimFormSetup.formSetControls(true);
                break;

            case InventDimFormDesignUpdate::FieldChange:
                inventDimFormSetup.formActiveSetup(InventDimGroupSetup::newInventTable(InventTable::find(RetailBuyersPushLine.ItemId)));
                inventDimFormSetup.formSetControls(false);
                break;

            default:
                throw error(strfmt("@SYS54195",funcname()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEnabledFields</Name>
				<Source><![CDATA[
    void updateEnabledFields()
    {
        // if transfer order created for BP/CD, then skip this method
        if (retailBuyersPushTable.TransferOrderCreated)
        {
            return;
        }

        switch (retailBuyersPushTable.DistributionType)
        {
            case RetailDistributionTypeEx1::ReplenishmentRule :
                // Clear and disable hierarchy fliter
                hierarchyFilter.enabled(false);

                // Disable location filter
                locationFilter.enabled(false);
                break;

            case RetailDistributionTypeEx1::LocationWeight    :
                hierarchyFilter.enabled(true);

                // Disable location filter
                locationFilter.enabled(false);
                break;

            case RetailDistributionTypeEx1::FixedQty          :
                hierarchyFilter.enabled(true);
                locationFilter.enabled(true);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLocationsGrid</Name>
				<Source><![CDATA[
    public void updateLocationsGrid()
    {
        RetailTmpInventLocation locations;
        PurchTable              purchTable;
        PurchLine               purchLine;
        InventLocation          selectedLocation;
        RetailReplenishmentType currentReplenishmentType = crossDocking ? RetailReplenishmentType::CrossDocking : RetailReplenishmentType::BuyersPush;

        RetailBuyersPushLineQty_q.dataSourceNo(1).clearRanges();

        switch (retailBuyersPushTable.DistributionType)
        {
            case RetailDistributionTypeEx1::ReplenishmentRule:
                // filter by replenishment rule
                if (crossDocking)
                {
                    // get PO from cross docking
                    purchTable = PurchTable::find(RetailBuyersPushTable.PurchId);
                }
                else
                {
                    // get purch line from buyers push line
                    purchLine = PurchLine::findRecId(RetailBuyersPushLine.RefRecId);
                    if (purchLine)
                    {
                        //get purch table
                        purchTable = PurchTable::find(purchLine.PurchId);
                    }
                }
                RetailReplenishmentHierarchy::getLocationsListByRule(RetailReplenishment::findReplenishmentRule(currentReplenishmentType, RetailBuyersPushLine.ItemId, purchTable), locations);
                break;
            case RetailDistributionTypeEx1::LocationWeight,
                    RetailDistributionTypeEx1::FixedQty:
                // filter by the selected hierarchy
                if (retailBuyersPushTable.ReplenishmentHierarchyNode > 0)
                {
                    RetailReplenishmentHierarchy::getWarehousesList(retailBuyersPushTable.ReplenishmentHierarchyNode, locations);
                }
                //filter by the selected location
                else if (retailBuyersPushTable.LocationRecId > 0)
                {
                    select firstonly crossCompany InventLocationId, dataAreaId, InventSiteId, RetailWeightEx1 from selectedLocation
                        where selectedLocation.RecId == retailBuyersPushTable.LocationRecId;
                    locations.clear();
                    locations.InventLocationId = selectedLocation.InventLocationId;
                    locations.InventLocationDataAreaId = selectedLocation.dataAreaId;
                    locations.InventSiteId = selectedLocation.InventSiteId;
                    locations.RetailWeightEx1 = selectedLocation.RetailWeightEx1;
                    locations.insert();
                }
                break;
            default:
                break;
        }

        RetailBuyersPushLineQty_ds.applyLocationsFilter(locations);

        RetailBuyersPushLineQty_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSelectedLinesComputed</Name>
				<Source><![CDATA[
    public void updateSelectedLinesComputed()
    {
        Qty     totalQtyByCategory, totalRemainingAvailableQty, totalSpecifiedQty;
        Qty     qtyToDistribute = qtyDistribute.realValue();
        Percent percentage;

        [totalQtyByCategory, totalRemainingAvailableQty, totalSpecifiedQty] = RetailBuyersPushFormHelper::getQuantities(element.getQueryForQuantityCalculation(), RetailBuyersPushTable, inventAvailabilityFormCache);

        // Update total quantity and % displayed
        if (totalQtyByCategory == 0)
        {
            RetailTracer::Error('Replenishment', funcName(), 'Quantity in the selected lines is 0.');
        }

        // Quantity to distribute can be specified on level line or on total.
        // The distribute percentage equals to the sum of the two divided by the total quantity.
        if (totalSpecifiedQty && totalQtyByCategory)
        {
            percentage = (totalSpecifiedQty / totalQtyByCategory) * 100;
        }
        else
        {
            percentage = 0;
        }

        SpecifiedQtyDistribute.realValue(totalSpecifiedQty);
        RemainingAvailableQty.realValue(totalRemainingAvailableQty);

        percentToDistribute.realValue(percentage);
        qtySelectedLines.realValue(totalQtyByCategory);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshAvailableQty</Name>
				<Source><![CDATA[
    private void refreshAvailableQty()
    {
        inventAvailabilityFormCache = InventAvailabilityFormCache::construct();

        RetailBuyersPushLine_ds.research(true);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>RetailBuyersPushTable</Name>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            boolean enableControls;

            super();

            m_oReplenishment = null;

            // fields with distribution information should be enabled only if transfer order has not been created yet
            enableControls = !retailBuyersPushTable.TransferOrderCreated;

            this.object(fieldNum(RetailBuyersPushTable, distributionType)).enabled(enableControls);
            this.object(fieldNum(RetailBuyersPushTable, respectAssortments)).enabled(enableControls);
            hierarchyFilter.enabled(enableControls);
            locationFilter.enabled(enableControls);
        }

]]></Source>
					</Method>
					<Method>
						<Name>locationString</Name>
						<Source><![CDATA[
        /// <summary>
        /// Edit method to read and write the current value of location filter.
        /// </summary>
        /// <param name="set">
        /// True, if the value should be written to db; false, if the value should be read from db.
        /// </param>
        /// <param name="_retailBuyersPushTable">
        /// The curret retail buyers push datasource.
        /// </param>
        /// <param name="_locationInput">
        /// Rec id of the new location filter.
        /// </param>
        /// <returns>
        /// The rec id of the new location filter, if the value is being updated in the record;
        /// the id of invent location, if the value is being read from the record.
        /// </returns>
        edit Name locationString(boolean set, RetailBuyersPushTable _retailBuyersPushTable, Name _locationInput)
        {
            InventLocation  inventLocation;
            RecId           selectedLocationRecId;

            if (set)
            {
                if (!_locationInput)
                {
                    // set selectd location rec id to 0, if no input is provided
                    selectedLocationRecId = 0;
                }
                else
                {
                    if (Global::isInteger(_locationInput))
                    {
                        // parse the input as Int64
                        selectedLocationRecId = str2int64(_locationInput);
                    }
                    else
                    {
                        // in case user manually enters invent location id to the control
                        // try to find it in InventLoaction table (through all LEs)
                        select firstonly crossCompany inventLocation
                            where inventLocation.InventLocationId == _locationInput
                                     && inventLocation.FSHStore;

                        if (inventLocation.RecId > 0)
                        {
                            selectedLocationRecId = inventLocation.RecId;
                        }
                    }
                }

                // update location rec id in the appropriate table field
                RetailBuyersPushTable.LocationRecId = selectedLocationRecId;

                // call modifiedField() method on table to update hierarchy filter
                // hierarchy and location filter should be mutually exclusive
                RetailBuyersPushTable.modifiedField(fieldNum(RetailBuyersPushTable, LocationRecId));

                return _locationInput;
            }
            else
            {
                if (_retailBuyersPushTable.LocationRecId > 0)
                {
                    // show the location name and company of the selected location
                    select firstonly crossCompany RecId, InventLocationId, DataAreaId from inventLocation
                        where inventLocation.RecId == _retailBuyersPushTable.LocationRecId;

                    return inventLocation.InventLocationId;
                }
                else
                {
                    return '';
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            boolean     purchReceived;
            PurchTable  purchTable;

            ret = super();

            helper.parmRetailBuyersPushId(retailBuyersPushTable.BuyersPushId);

            retailBuyersPushTable_ds.allowDelete(!retailBuyersPushTable.TransferOrderCreated);

            crossDocking = (retailBuyersPushTable.PurchId) ? true : false;

            availPhysical.visible(!crossDocking);
            onHand.visible(!crossDocking);
            retailAddItems.enabled(!crossDocking);
            purchQty.visible(crossDocking);

            if (crossDocking)
            {
                purchTable = PurchTable::find(retailBuyersPushTable.PurchId);

                purchReceived = (purchTable.isReceived() || purchTable.isInvoiced());
            }

            element.updateCreateOrderState();

            element.updateSelectedLinesComputed();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);

            element.numberSeqBuyersPushId().formMethodDataSourceCreate();
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            ttsbegin;

            element.numberSeqBuyersPushId().formMethodDataSourceDelete();

            super();

            ttscommit;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
            ;

            ret = super();

            if (ret && !element.numberSeqBuyersPushId().formMethodDataSourceValidateWrite())
            {
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            ttsbegin;

            element.numberSeqBuyersPushId().formMethodDataSourceWrite();

            super();

            ttscommit;
        }

]]></Source>
					</Method>
					<Method>
						<Name>hierarchyString</Name>
						<Source><![CDATA[
        /// <summary>
        /// Edit method to read and write the current value of hierarchy filter.
        /// </summary>
        /// <param name="set">
        /// True, if the value should be written to db; false, if the value should be read from db.
        /// </param>
        /// <param name="_retailBuyersPushTable">
        /// The curret retail buyers push datasource.
        /// </param>
        /// <param name="_relationId">
        /// Rec id of the new hierarchy filter.
        /// </param>
        /// <returns>
        /// The rec id of the new hierarchy filter, if the value is being updated in the record;
        /// the name of the selected hierarchy node, if the value is being read from the record.
        /// </returns>
        edit Name hierarchyString(boolean set, RetailBuyersPushTable _retailBuyersPushTable, Name _relationId)
        {
            OMHierarchyRelationship     relationship;
            OMInternalOrganization      org;
            RecId                       selectedHierarchyId;

            if (set)
            {
                selectedHierarchyId = str2int64(_relationId);

                // update hierarchy filter in the table field
                RetailBuyersPushTable.ReplenishmentHierarchyNode = selectedHierarchyId;

                // call modifiedField() method on table to update hierarchy filter
                // hierarchy and location filter should be mutually exclusive
                RetailBuyersPushTable.modifiedField(fieldNum(RetailBuyersPushTable, ReplenishmentHierarchyNode));

                if (selectedHierarchyId > 0)
                {
                    locationFilter.text('');
                }

                return _relationId;
            }
            else
            {
                if (_retailBuyersPushTable.ReplenishmentHierarchyNode > 0)
                {
                    // show the organization name of the selected relationship
                    select firstonly RecId, ChildOrganization from relationship
                        join org
                        where relationship.RecId == _retailBuyersPushTable.ReplenishmentHierarchyNode &&
                              org.RecId == relationship.ChildOrganization;

                    return org.Name;
                }
                else
                {
                    return '';
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>InventLocationId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                retailBuyersPushTable.updateInventDimId();

                retailBuyersPushTable_ds.write();

                retailBuyersPushLineQty_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>RetailBuyersPushLine</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.updateDesign(InventDimFormDesignUpdate::Active);
            this.setDecimalPrecisionForPushedQuantity();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        public void selectionChanged()
        {
            boolean                         isLinesExist;

            super();

            isLinesExist = retailBuyersPushLine.RecId > 0;

            filterGroup.enabled(isLinesExist);
            if (isLinesExist)
            {
                distributionType.selectionChange();
            }

            // filter locations grid depending on selected distribution type
            element.updateLocationsGrid();
        }

]]></Source>
					</Method>
					<Method>
						<Name>setDecimalPrecisionForPushedQuantity</Name>
						<Source><![CDATA[
        private void setDecimalPrecisionForPushedQuantity()
        {
            int decimals;

            if (RetailBuyersPushLine.UnitID)
            {
                decimals = UnitOfMeasure::find(UnitOfMeasure::unitOfMeasureIdBySymbol(RetailBuyersPushLine.UnitID)).DecimalPrecision;
                fshReplenishmentLineQty_Qty.noOfDecimals(decimals);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>PurchQty</Name>
						<Source><![CDATA[
        display Qty PurchQty(RetailBuyersPushLine _buyersPushLine)
        {
            Qty ret;

            if (_buyersPushLine.RefRecId)
            {
                PurchLine purchLine = PurchLine::findRecId(_buyersPushLine.RefRecId);

                ret = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(_buyersPushLine.ItemId,
																							_buyersPushLine.InventDimId,
                                                                                            purchLine.PurchQty,
                                                                                            purchLine.PurchUnit,
																						    _buyersPushLine.UnitID,
																						    NoYes::No);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>availableQty</Name>
						<Source><![CDATA[
        display public Qty availableQty(RetailBuyersPushLine _retailBuyersPushLine)
        {
            InventDim       tInventDim;
            Qty             availableQty;

            tInventDim      = InventDim::find(_retailBuyersPushLine.InventDimId);
            availableQty    = _retailBuyersPushLine.onHandQtyByItem(_retailBuyersPushLine.ItemId, tInventDim, inventAvailabilityFormCache);
            
            return EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(_retailBuyersPushLine.ItemId,
																						 _retailBuyersPushLine.InventDimId,
																						  availableQty,
																					     _retailBuyersPushLine.inventTable().inventUnitId(),
																					     _retailBuyersPushLine.UnitID,
																					     NoYes::No);
        }

]]></Source>
					</Method>
					<Method>
						<Name>availablePhysicalQty</Name>
						<Source><![CDATA[
        display public Qty availablePhysicalQty(RetailBuyersPushLine _retailBuyersPushLine)
        {
            InventDim       tInventDim;
            Qty             availableQty;

            tInventDim      = InventDim::find(_retailBuyersPushLine.InventDimId);
            availableQty    = _retailBuyersPushLine.availablePhysicalByItem(_retailBuyersPushLine.ItemId, tInventDim, inventAvailabilityFormCache);
            
            return EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(_retailBuyersPushLine.ItemId,
																						 _retailBuyersPushLine.InventDimId,
																						 availableQty,
																					     _retailBuyersPushLine.inventTable().inventUnitId(),
																					     _retailBuyersPushLine.UnitID,
																					     NoYes::No);
        }

]]></Source>
					</Method>
					<Method>
						<Name>distrPercentage</Name>
						<Source><![CDATA[
        display public Percent distrPercentage(RetailBuyersPushLine _retailBuyersPushLine)
        {
            Qty distributeLimit;
            Percent distributePercentage;

            // Find the distribution limit
            if (_retailBuyersPushLine.RefRecId)
            {
                // Cross docking
                distributeLimit = _retailBuyersPushLine.availCrossDocking();
            }
            else
            {
                // Buyer's push
                distributeLimit = this.availableQty(_retailBuyersPushLine);
            }

            // Calculate the distribute percentage
            if (distributeLimit > 0 && (_retailBuyersPushLine.UserSpecified == NoYes::Yes))
            {
                distributePercentage = (_retailBuyersPushLine.UserSpecifiedQty / distributeLimit) * 100;
            }
            else
            {
                distributePercentage = 0;
            }

            return distributePercentage;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ItemId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                RetailBuyersPushLine tRetailBuyersPushLine = RetailBuyersPushLine::createAndReturnBuyersPushLines(retailBuyersPushLine.BuyersPushId,retailBuyersPushLine.ItemId,retailBuyersPushTable.InventLocationId,retailBuyersPushTable.InventSiteId);

                retailBuyersPushLine_ds.delete();

                retailBuyersPushLine_ds.research();

                // Move the focus on the newly created RetailBuyersPushLine
                if (tRetailBuyersPushLine.RecId)
                {
                    retailBuyersPushLine_ds.positionToRecord(tRetailBuyersPushLine);
                }

                element.updateDesign(InventDimFormDesignUpdate::FieldChange);

                inventDim.data(InventDim::find(RetailBuyersPushLine.InventDimId));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>UnitID</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                // Force the execute query which results in the values (including computed)
                // being refreshed via the selectionChanged
                retailBuyersPushLine_ds.research(true);
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                Qty     distributeLimit;
                boolean ret;
            
                ret = super();

                // Find the distribution limit
                if (RetailBuyersPushLine.RefRecId)
                {
                    // Cross docking
                    distributeLimit = RetailBuyersPushLine.availCrossDocking();
                }
                else
                {
                    // Buyer's push
                    distributeLimit = RetailBuyersPushLine_ds.availableQty(RetailBuyersPushLine);
                }

                if (RetailBuyersPushLine.UserSpecifiedQty > distributeLimit)
                {
                    ret = checkFailed(strFmt("@REX4520148", RetailBuyersPushLine.ItemId));
                }
            
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>UserSpecifiedQty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>RetailBuyersPushLineQty</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>UnitOfMeasure</Name>
						<Source><![CDATA[
        display UnitOfMeasureSymbol UnitOfMeasure()
        {
            return RetailBuyersPushLine.UnitID;
        }

]]></Source>
					</Method>
					<Method>
						<Name>applyLocationsFilter</Name>
						<Source><![CDATA[
        public void applyLocationsFilter(RetailTmpInventLocation _locations)
        {
            RetailBuyersPushLineQty_ds.query().dataSourceNo(1).clearRanges();

            // we have an empty list of warehouses
            if (_locations.recId == 0)
            {
                if (retailBuyersPushTable.ReplenishmentHierarchyNode > 0)
                {
                    // we have selected hierarchy, but there are no warehouses in it, so show an empty grid
                    RetailBuyersPushLineQty_ds.query().dataSourceNo(1)
                    .addRange(fieldNum(RetailBuyersPushLineQty, InventLocationId))
                    .value(strFmt('(InventLocationId == "%1")', ''));
                }
                else
                {
                    // there are no filter by hierarchy, so show the full list of available warehouses
                    return;
                }
            }
            else
            {
                // the list of warehouses is not empty, so apply ranges
                while select _locations
                {
                    RetailBuyersPushLineQty_ds.query().dataSourceNo(1)
                        .addRange(fieldNum(RetailBuyersPushLineQty, InventLocationId))
                        .value(strFmt('((InventLocationId == "%1") && (WarehouseDataAreaId == "%2"))',
                                        _locations.InventLocationId,
                                        _locations.InventLocationDataAreaId));
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.updateCreateOrderState();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>availableQty</Name>
						<Source><![CDATA[
        public display Qty availableQty(RetailBuyersPushLineQty _retailBuyersPushLineQty)
        {
            InventDim       tInventDim;
            InventTable     inventTable;
            Qty             availableQty;

            inventTable = InventTable::find(RetailBuyersPushLine.ItemId);

            changecompany(_retailBuyersPushLineQty.WarehouseDataAreaId)
            {
                tInventDim.copyProductDimensions(InventDim, RetailBuyersPushLine.ItemId);
                tInventDim.InventLocationId = _retailBuyersPushLineQty.InventLocationId;
                tInventDim.InventSiteId     = InventLocation::find(_retailBuyersPushLineQty.InventLocationId).InventSiteId;
                tInventDim                  = InventDim::findDim(tInventDim);

                inventTable     = InventTable::findByProduct(inventTable.Product);
                availableQty    = RetailBuyersPushLine.onHandQtyByItem(inventTable.ItemId, tInventDim, inventAvailabilityFormCache);
            }
            
            return EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(RetailBuyersPushLine.ItemId,
																						 RetailBuyersPushLine.InventDimId,
																						 availableQty,
																					     RetailBuyersPushLine.inventTable().inventUnitId(),
																					     RetailBuyersPushLine.UnitID,
																					     NoYes::No);
        }

]]></Source>
					</Method>
					<Method>
						<Name>netOnHand</Name>
						<Source><![CDATA[
        public display Qty netOnHand(RetailBuyersPushLineQty _retailBuyersPushLineQty)
        {
            return this.availableQty(_retailBuyersPushLineQty) + _retailBuyersPushLineQty.Qty;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Rereads the data from the <c>RetailBuyersPushLine</c> datasource.
        /// </summary>
        public void write()
        {
            super();

            retailBuyersPushLine_ds.reread();
            retailBuyersPushLine_ds.refresh();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Qty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
            
                ret = super();

                //Checks whether relevant buyers push line references a purchase order line or not.
                if (ret)
                {
                    if (!RetailBuyersPushLineQty.isCrossdocking())
                    {
                        ret = RetailBuyersPushLineQty.validateFieldQtyWithCache(inventAvailabilityFormCache);
                    }
                }
                        
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>RetailGroupMemberLine</Name>
				<Methods />
				<Fields>
					<Field>
						<DataField>Category</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return RetailGroupMemberLine::categoryLookup(_formReferenceControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Product</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return RetailGroupMemberLine::productLookupByLE(_formReferenceControl, retailGroupMemberLine);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Variant</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                return RetailGroupMemberLine::variantLookupByLE(_formReferenceControl, retailGroupMemberLine);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Calculate</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Qty                                     totalQtyByCategory, totalRemainingAvailableQty, totalSpecifiedQty;
            RetailParameters                        parameters = RetailParameters::find();
            RetailReplenishmentRespectAssortments   respectAssortments;
            boolean                                 isAssortmentsRespected;

            [totalQtyByCategory, totalRemainingAvailableQty, totalSpecifiedQty] = RetailBuyersPushFormHelper::getQuantities(element.getQueryForQuantityCalculation(), RetailBuyersPushTable, inventAvailabilityFormCache);

            respectAssortments = crossDocking ? parameters.CrossDockingRespectAssortments : parameters.BuyersPushRespectAssortments;

            if (!m_oReplenishment)
            {
                if (crossDocking)
                { // Cross docking
                    m_oReplenishment = RetailReplenishment::construct(RetailReplenishmentType::CrossDocking,
                                                                      QtyDistribute.realValue(),
                                                                      retailBuyersPushTable,
                                                                      PurchLine::findRecId(retailBuyersPushLine.RefRecId));
                }
                else
                { // Buyers push
                    m_oReplenishment = RetailReplenishment::construct(RetailReplenishmentType::BuyersPush,
                                                                      QtyDistribute.realValue(),
                                                                      retailBuyersPushTable,
                                                                      retailBuyersPushLine);
                }
            }

            element.setReplenishmentValues(m_oReplenishment, totalRemainingAvailableQty);

            if (!QtyDistribute.realValue())
            {
                if (element.isQuantitySpecifiedForAllLines())
                {
                    m_oReplenishment.parmQtyToDistribute(0);
                }
                else
                {
                    if (Box::yesno("@REX4040063",DialogButton::Yes,"@RET832",""))
                    {
                        m_oReplenishment.parmQtyToDistribute(0);
                    }
                    else
                    {
                        return;
                    }
                }
            }
            else
            {
                // if we try to distribute the quantity greater than total in all lines that have not specified the quantity to distribute,
                // throw a warning
                if (element.isQuantitySpecifiedForAllLines())
                {
                    warning("@REX1339");
                    return;
                }
                else if (qtyDistribute.realValue() > totalRemainingAvailableQty)
                {
                    warning("@RET915");
                    return;
                }
            }

            isAssortmentsRespected = (respectAssortments == RetailReplenishmentRespectAssortments::Always) ||
                                        ((respectAssortments == RetailReplenishmentRespectAssortments::Manual) &&
                                            RespectAssortmentsCheckBox.checked());

            m_oReplenishment.replenish(isAssortmentsRespected);

            this.refreshCaller();

            [totalQtyByCategory, totalRemainingAvailableQty, totalSpecifiedQty] = RetailBuyersPushFormHelper::getQuantities(element.getQueryForQuantityCalculation(), RetailBuyersPushTable, inventAvailabilityFormCache);

            // After calculation, clear the quantity in the "additional quantity to push".
            if (totalRemainingAvailableQty == 0)
            {
                QtyDistribute.realValue(0);
            }

            element.clearReplenishmentFilter();

            RetailTracer::Info('Replenishment', funcName(), 'Distribution quantities have been calculated.');
        }

]]></Source>
					</Method>
					<Method>
						<Name>refreshCaller</Name>
						<Source><![CDATA[
        void refreshCaller()
        {
            element.doReread();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Clear</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            helper.clearQuantities();
            RetailBuyersPushLine_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CreateTransferOrders</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if (helper.createTransferOrdersPreCheck())
            {
                element.clearReplenishmentFilter();
                helper.createTransferOrders(RetailBuyersPushTable.RespectAssortments);
                //  Refresh UI
                element.doReread();

                element.refreshAvailableQty();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RetailGroupMemberLine_Category</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            InventTable             inventTable;
            EcoResProduct           product;
            EcoResProductCategory   categoryProduct;
            EcoResCategory          ecoresCategory, selectedCategory;
            Qty                     total, totalQtyByCategory, totalRemainingAvailableQty, totalSpecifiedQty;

            filter = "";

            super();
            
            [totalQtyByCategory, totalRemainingAvailableQty, totalSpecifiedQty] = RetailBuyersPushFormHelper::getQuantities(element.getQueryForQuantityCalculation(), RetailBuyersPushTable, inventAvailabilityFormCache);
            
            selectedCategory = EcoResCategory::find(RetailGroupMemberLine.Category);
            
            if (selectedCategory.RecId > 0)
            {
                while select ecoResCategory
                    join CategoryHierarchy, Category, Product from categoryProduct
                        where categoryProduct.CategoryHierarchy == ecoresCategory.CategoryHierarchy && categoryProduct.Category == ecoresCategory.RecId
                    join RecId from product
                        where product.RecId == categoryProduct.Product
                    join product, ItemId from InventTable
                        where InventTable.Product == product.RecId &&
                              ecoresCategory.CategoryHierarchy == selectedCategory.CategoryHierarchy &&
                              ecoresCategory.NestedSetLeft >=  selectedCategory.NestedSetLeft && ecoresCategory.NestedSetLeft <= selectedCategory.NestedSetRight &&
                              ecoresCategory.NestedSetRight >= selectedCategory.NestedSetLeft && ecoresCategory.NestedSetRight <= selectedCategory.NestedSetRight
                {
                    filter += strFmt('%1,', inventTable.ItemId);
                }
                filter = subStr(filter, 1, strLen(filter) - 1);
                if (filter == "")
                {   // Filter to display nothing...
                    categoryFilterRetail.value(SysQuery::valueEmptyString());  // '""' is the filter

                    qtyDistribute.realValue(latestModifiedDistributeQty);
                }
                else
                {   // Filter to use the results returned...
                    categoryFilterRetail.value(filter);

                    total = RetailBuyersPushFormHelper::getTotalQuantity(RetailBuyersPushTable, inventAvailabilityFormCache);

                    if (total && QtyDistribute.realValue())
                    {
                        qtyDistribute.realValue(roundZeroDec((totalQtyByCategory * latestModifiedDistributeQty / total), 2));
                    }
                }
            }
            else
            {
                // Filter to display everything...
                categoryFilterRetail.value(''); // NOTE - No filter (NOT the same as valueEmptyString).

                qtyDistribute.realValue(latestModifiedDistributeQty);
            }

            RetailBuyersPushLine_ds.executeQuery();

            return true;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>inventOnHand</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args                    cArgs;
            MenuFunction            cMenuFun;
            FormRun                 cFormRun;
            ;

            cArgs = new Args();

            inventDimCombination_q.dataSourceName(tableStr(InventDimCombination)).clearRanges();
            inventDimCombination_q.dataSourceName(tableStr(InventDimCombination)).addRange(fieldNum(InventDimCombination, ItemId)).value(retailBuyersPushLine.ItemId);
            inventDimCombination_q.dataSourceName(tableStr(InventDimCombination)).addRange(fieldNum(InventDimCombination, InventDimId)).value(InventDim::find(retailBuyersPushLine.InventDimId).InventDimId);
            InventDimCombination_ds.executeQuery();

            if (inventDimCombination.RecId > 0)
            {
                cArgs.record(inventDimCombination);
            }
            else
            {
                cArgs.record(InventTable::find(retailBuyersPushLine.ItemId));
            }

            cMenuFun = new MenuFunction(identifierStr(InventOnHandItem), MenuItemType::Display);
            cFormRun = cMenuFun.create(cArgs);
            cFormRun.run();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RecalculateTotals</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.updateSelectedLinesComputed();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RefreshAvailable</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.refreshAvailableQty();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DistributeQty</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean                 ret;
            int                     decimals;
            Qty                     distributeLimit;
            RetailUserSpecifiedQty  qty;
        
            ret = super();
        
            if (ret)
            {
                decimals = UnitOfMeasure::find(UnitOfMeasure::unitOfMeasureIdBySymbol(InventTable::find(RetailBuyersPushLine.ItemId).inventUnitId())).DecimalPrecision;

                qty = str2num(this.text());
                qty = roundZeroDec(qty, decimals);

                // Find the distribution limit
                if (RetailBuyersPushLine.RefRecId)
                {
                    // Cross docking
                    distributeLimit = RetailBuyersPushLine.availCrossDocking();
                }
                else
                {
                    // Buyer's push
                    distributeLimit = RetailBuyersPushLine_ds.availableQty(RetailBuyersPushLine);
                }

                // The quantity to distribute must be less than or equal to distribution limit
                if (qty > 0 && qty > distributeLimit)
                {
                    ret = checkFailed("@REX1343");
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>QtyDistribute</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            latestModifiedDistributeQty = QtyDistribute.realValue();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DistributionType</Name>
				<Type>RadioButton</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret;

            ret = super();

            element.updateEnabledFields();

            // filter locations grid depending on selected distribution type
            element.updateLocationsGrid();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HierarchyFilter</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            RetailReplenishmentTreeLookup::lookup(this, retailBuyersPushTable.ReplenishmentHierarchyNode);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                // filter locations grid to show only locations for the selected hierarchy
                element.updateLocationsGrid();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LocationFilter</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Shows custom lookup form for location filter selection.
        /// </summary>
        public void lookup()
        {
            Args    args = new Args();
            FormRun formRun;

            args.name(formStr(RetailLocationTableLookup)); // set the name of the form to be called
            args.lookupValue(this.text()); // set the currently selected value in the control
            formRun = classfactory.formRunClass(args);
            formRun.init();
            if (this)
            {
                this.performFormLookup(formRun);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                // filter locations grid to show only the selected location
                element.updateLocationsGrid();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TransferOrder</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            MenuFunction    menuFunction;
            Args            args = new Args();
            InventDim       currentInventDim = InventDim::find(retailBuyersPushLine.InventDimId);

            if (retailBuyersPushLineQty.SalesTable)
            {
                args.record(retailBuyersPushLineQty);
                menuFunction = new MenuFunction(menuitemDisplayStr(SalesTable), MenuItemType::Display);
            }
            else
            {
                args.record(RetailReplenishmentTransferOrder::findTransferOrder(tableNum(RetailBuyersPushTable),
                                                                                RetailBuyersPushTable::find(retailBuyersPushLineQty.BuyersPushId).RecId,
                                                                                currentInventDim.InventLocationId,
                                                                                retailBuyersPushLineQty.InventLocationId));
                menuFunction = new MenuFunction(menuitemDisplayStr(InventTransferOrder), MenuItemType::Display);
            }

            menuFunction.formViewOption(FormViewOption::Details);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>RetailBuyersPushTable</Name>
			<Table>RetailBuyersPushTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BuyersPushId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DistributionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LocationRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchId</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReplenishmentHierarchyNode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RespectAssortments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferOrderCreated</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailBuyersPushLine</Name>
			<Table>RetailBuyersPushLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BuyersPushId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserSpecified</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserSpecifiedQty</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RetailBuyersPushTable</JoinSource>
			<CounterField>LineNum</CounterField>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailBuyersPushLineQty</Name>
			<Table>RetailBuyersPushLineQty</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BuyersPushId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WarehouseDataAreaId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<JoinSource>RetailBuyersPushLine</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>RetailBuyersPushLine</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<Index>DimIdIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>RetailGroupMemberLine</Name>
			<Table>RetailGroupMemberLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Category</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Product</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Variant</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDimForCombination</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>InventDimCombination</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDimCombination</Name>
			<Table>InventDimCombination</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DistinctProductVariant</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailVariantId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RET801</Caption>
		<DataSource xmlns="">RetailBuyersPushTable</DataSource>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">SimpleListDetails-Grid</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonTable</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Calculate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>805306366</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@REX4040058</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Clear</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1207959549</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@REX4040059</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>CreateTransferOrders</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@RET5632</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationListGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>300</Width>
				<WidthMode>Manual</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>NavigationListGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>NavigationListGrid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FSHBuyersPushTable_PurchId</Name>
								<ElementPosition>429496728</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PurchId</DataField>
								<DataSource>RetailBuyersPushTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FSHBuyersPushTable_BuyersPushId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>644245092</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>BuyersPushId</DataField>
								<DataSource>RetailBuyersPushTable</DataSource>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FSHBuyersPushTable_Description</Name>
								<ElementPosition>858993456</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>RetailBuyersPushTable</DataSource>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FSHBuyersPushTable_InventSiteId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventSiteId</DataField>
								<DataSource>RetailBuyersPushTable</DataSource>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FSHBuyersPushTable_InventLocationId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1342177275</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventLocationId</DataField>
								<DataSource>RetailBuyersPushTable</DataSource>
								<Label>@SYS6437</Label>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>FSHBuyersPushTable_createdDate</Name>
								<ElementPosition>1610612730</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>createdDateTime</DataField>
								<DataSource>RetailBuyersPushTable</DataSource>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>DateEdit</Name>
								<ElementPosition>1879048185</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@RET890</Label>
								<LabelAlignment>Right</LabelAlignment>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>RetailBuyersPushTable</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>Tabular</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>VSplitter</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<Style>SplitterVerticalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>FSHBuyersPushTable_BuyersPushId1</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>447392424</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<DataField>BuyersPushId</DataField>
						<DataSource>RetailBuyersPushTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>HeaderFSHBuyersPushTable_PurchId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>671088637</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>PurchId</DataField>
						<DataSource>RetailBuyersPushTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>FSHBuyersPushTable_Description1</Name>
						<ElementPosition>805306365</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>RetailBuyersPushTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>FSHBuyersPushTable_InventSiteId1</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1342177275</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>InventSiteId</DataField>
						<DataSource>RetailBuyersPushTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>FSHBuyersPushTable_InventLocationId2</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1476395002</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>InventLocationId</DataField>
						<DataSource>RetailBuyersPushTable</DataSource>
						<Label>@SYS6437</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>RetailGroupMemberLine_Category</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612730</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>RetailGroupMemberLine_Category_Name</Name>
								<DataRelationPath>EcoResCategory</DataRelationPath>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<DataSource>RetailGroupMemberLine</DataSource>
						<ReferenceField>Category</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>FSHBuyersPushTable_JournalCreated</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1879048185</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>JournalCreated</DataField>
						<DataSource>RetailBuyersPushTable</DataSource>
						<LabelAlignment>Right</LabelAlignment>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>DetailsTab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>LinesPage</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane1</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab1</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>AddRemoveGroup</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>AddLineButton</Name>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
														<NormalImage>New</NormalImage>
														<Text>@SYS124603</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>RetailAddItems</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1288490187</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataSource>RetailBuyersPushTable</DataSource>
														<MenuItemName>RetailAddItems</MenuItemName>
														<Text>@SYS306863</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>RemoveLineButton</Name>
														<ElementPosition>1717986916</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<MultiSelect>Yes</MultiSelect>
														<NeedsRecord>Yes</NeedsRecord>
														<NormalImage>Delete</NormalImage>
														<SaveRecord>No</SaveRecord>
														<Text>@SYS309739</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ButtonLine</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>InventDimParmFixed</Name>
														<ElementPosition>954437176</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<MenuItemName>InventDimParmFixed</MenuItemName>
														<MultiSelect>Yes</MultiSelect>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>inventOnHand</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>100</Width>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextOnly</ButtonDisplay>
														<Text>@RET825</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>RecalculateTotals</Name>
														<HelpText>@RET_HF_3941024:RecalculateTotalsHelpText</HelpText>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@RET_HF_3941024:RecalculateTotals</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>RefreshAvailable</Name>
														<HelpText>@RET_HF_3941024:RefreshAvailableHelpText</HelpText>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@RET_HF_3941024:RefreshAvailable</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>RetailBuyersPushLine</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FSHReplenishmentLine_ItemId</Name>
										<ElementPosition>390451572</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ItemId</DataField>
										<DataSource>RetailBuyersPushLine</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FSHReplenishmentLine_UnitID</Name>
										<ElementPosition>585677358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>UnitID</DataField>
										<DataSource>RetailBuyersPushLine</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>InventoryDimensions</Name>
										<ElementPosition>1098145046</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_configId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>configId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventSizeId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSizeId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventColorId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventColorId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventStyleId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStyleId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventVersionId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventVersionId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventSiteId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventSiteId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_inventBatchId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventBatchId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_wMSLocationId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>wMSLocationId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_inventSerialId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>inventSerialId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventStatusId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventStatusId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_LicensePlateId</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>LicensePlateId</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventOwnerId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventOwnerId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventProfileId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventProfileId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventoryDimensions_InventGtdId_RU</Name>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>InventGtdId_RU</DataField>
												<DataSource>InventDim</DataSource>
											</AxFormControl>
										</Controls>
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataGroup>InventoryDimensions</DataGroup>
										<DataSource>InventDim</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>availPhysical</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>availablePhysicalQty</DataMethod>
										<DataSource>RetailBuyersPushLine</DataSource>
										<Label>@SYS22389</Label>
										<ShowZero>No</ShowZero>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>onHand</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>availableQty</DataMethod>
										<DataSource>RetailBuyersPushLine</DataSource>
										<Label>@RET_HF_3941024:TotalAvailable</Label>
										<LabelAlignment>Right</LabelAlignment>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowZero>No</ShowZero>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PurchQty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1757032074</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PurchQty</DataMethod>
										<DataSource>RetailBuyersPushLine</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DistributeQty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1854644967</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Alignment>Right</Alignment>
										<DataMethod>specifiedQty</DataMethod>
										<DataSource>RetailBuyersPushLine</DataSource>
										<Label>@RET1144</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>totalQty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1952257860</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>totalQty</DataMethod>
										<DataSource>RetailBuyersPushLine</DataSource>
										<Label>@RET1143</Label>
										<LabelAlignment>Right</LabelAlignment>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowZero>No</ShowZero>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>DistributePercentage</Name>
										<ElementPosition>2049870753</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@FieldDescriptions_RetailMain:RetailBuyersPush_DistributePercentage</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>distrPercentage</DataMethod>
										<DataSource>RetailBuyersPushLine</DataSource>
										<Label>@REX1338</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>RetailBuyersPushLine</DataSource>
								<VisibleRows>8</VisibleRows>
								<VisibleRowsMode>Fixed</VisibleRowsMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LinesTotalGroup</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Line</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>QtySelectedLines</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@REX4040064</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>SpecifiedQtyDistribute</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@REX4040065</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>PercentToDistribute</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1717986916</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_RetailMain:RetailBuyersPush_PercentToDistribute</HelpText>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@RET4160589</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>LineAdditinal</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>RemainingAvailableQty</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@REX4040062</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>QtyDistribute</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Label>@REX4040057</Label>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
										</Controls>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>FilterGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRadioButtonControl">
												<Name>DistributionType</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>RadioButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Caption>Distribution</Caption>
												<DataField>DistributionType</DataField>
												<DataSource>RetailBuyersPushTable</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>HierarchyFilter</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<Enabled>No</Enabled>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>hierarchyString</DataMethod>
												<DataSource>RetailBuyersPushTable</DataSource>
												<Label>@RET1329</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LocationFilter</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<Enabled>No</Enabled>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>LocationString</DataMethod>
												<DataSource>RetailBuyersPushTable</DataSource>
												<Label>@SYS6437</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>RespectAssortmentsCheckBox</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>RespectAssortments</DataField>
												<DataSource>RetailBuyersPushTable</DataSource>
												<Label>@RET5934</Label>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS15451</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabLineQty</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane2</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab2</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ButtonLineQty</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Left>0</Left>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>TransferOrder</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Text>@RET1354</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>LocationGrid</Name>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InventLocation_Name</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>InventLocationName</DataMethod>
										<DataSource>RetailBuyersPushLineQty</DataSource>
										<LabelAlignment>Right</LabelAlignment>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>RetailBuyersPushLineQty_WarehouseDataAreaId</Name>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>WarehouseDataAreaId</DataField>
										<DataSource>RetailBuyersPushLineQty</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>QtyonHand</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>availableQty</DataMethod>
										<DataSource>RetailBuyersPushLineQty</DataSource>
										<Label>@SYS24243</Label>
										<LabelAlignment>Right</LabelAlignment>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowZero>No</ShowZero>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>FSHReplenishmentLineQty_Qty</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Qty</DataField>
										<DataSource>RetailBuyersPushLineQty</DataSource>
										<Label>@RET1144</Label>
										<LabelAlignment>Right</LabelAlignment>
										<NoOfDecimals>-1</NoOfDecimals>
										<ShowZero>No</ShowZero>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>UnitOfMeasure</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>1968526675</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>UnitOfMeasure</DataMethod>
										<DataSource>RetailBuyersPushLineQty</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>NetOnHand</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>netOnHand</DataMethod>
										<DataSource>RetailBuyersPushLineQty</DataSource>
										<Label>@RET_HF_3941024:NetOnHand</Label>
										<ShowZero>No</ShowZero>
									</AxFormControl>
								</Controls>
								<DataSource>RetailBuyersPushLineQty</DataSource>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
								<VisibleRows>8</VisibleRows>
								<VisibleRowsMode>Fixed</VisibleRowsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS6437</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>