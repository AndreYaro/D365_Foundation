<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RPaySumModule</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class RPaySumModule extends FormRun
    {
        QueryBuildRange criteriaPeriod;
        QueryBuildRange criteriaModule;
        QueryBuildRange criteriaEmplId;
        QueryBuildRange criteriaCounter;
        QueryBuildRange criteriaSourceTableId;
        QueryBuildRange criteriaSourceRecId;
        QueryBuildRange criteriaDeductionType;
        QueryBuildRange criteriaRPayTblJournalNum;
        QueryBuildRange criteriaRPayCivilContractId;

        #RpayModuleName
}
]]></Source>
			</Method>
			<Method>
				<Name>lookupLedgerDimension</Name>
				<Source><![CDATA[
    public boolean lookupLedgerDimension(LedgerJournalACType _acType, FormControl _control)
    {
        switch (_acType)
        {
            case LedgerJournalACType::Bank:
                BankAccountTable::lookupBankAccount(_control);
                break;
            case LedgerJournalACType::Cust:
                CustTable::lookupCustomer(_control);
                break;
            case LedgerJournalACType::FixedAssets:
                AssetTable::lookupAccountNum(_control);
                break;
            case LedgerJournalACType::Project:
                ProjTable::lookupProjId(_control, payTrans);
                break;
            case LedgerJournalACType::Vend:
                VendTable::lookupVendor(_control);
                break;
            case LedgerJournalACType::RDeferrals:
                RDeferralsTable::lookupDeferrals(_control, dateMax());
                break;
            case LedgerJournalACType::FixedAssets_RU:
                RAssetTable::lookupAccountNum(_control);
                break;
            case LedgerJournalACType::RCash:
                RCashTable::lookupAccountNum(_control);
                break;
            case LedgerJournalACType::Employee_RU:
                EmployeeTable_RU::lookupAdvHolder(_control);
                break;
            default:
                return false;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useCustomlookupLedgerDimension</Name>
				<Source><![CDATA[
    public boolean useCustomlookupLedgerDimension(int _accountTypeEnumValue)
    {
        boolean returnValue;

        LedgerJournalACType accountType = any2Enum(_accountTypeEnumValue);
        switch (accountType)
        {
            case LedgerJournalACType::Bank:
            case LedgerJournalACType::Cust:
            case LedgerJournalACType::FixedAssets:
            case LedgerJournalACType::Project:
            case LedgerJournalACType::Vend:
            case LedgerJournalACType::RDeferrals:
            case LedgerJournalACType::FixedAssets_RU:
            case LedgerJournalACType::RCash:
            case LedgerJournalACType::Employee_RU:
                returnValue = true;
                break;
            default:
                returnValue = false;
                break;
        }

        return returnValue;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PayTrans</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int                                 ret;
            RPayEmplStandardDeductionTable      rPayEmplStandardDeductionTable;
            RPayStandardDeductionSumModuleType  rPayStandardDeductionSumModuleType;
            RPayStandardDeductionType           rPayStandardDeductionType;
            Common                              common;
            ret = super();
            common = element.args().record();

            if (ret && common)
            {
                if (common.TableId == tableNum(RPayEmplStandardDeductionTable))
                {
                    select firstonly rPayEmplStandardDeductionTable
                        where rPayEmplStandardDeductionTable.TableId     == payTrans.SourceTableId &&
                              rPayEmplStandardDeductionTable.RecId       == payTrans.SourceRecId;

                    rPayStandardDeductionSumModuleType = element.args().parmEnum();
                    rPayStandardDeductionType = rPayEmplStandardDeductionTable.deductionType();
                    element.design().caption(strFmt("@GLS106090",
                                                     enum2str(rPayStandardDeductionType),
                                                     rPayEmplStandardDeductionTable.DocumentNum,
                                                     rPayEmplStandardDeductionTable.DeductionCode));
                }
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        void executeQuery()
        {
            RPayAverageEarnEmplPeriodTable      rPayAverageEarnEmplPeriodTable;
            RPayJournalTable                    payJournalTable;
            RPayEmplStandardDeductionTable      rPayEmplStandardDeductionTable;

            RPayTblTrans                        payTblTrans;
            RPayTblJournal                      payTblJournal;

            RPayCivilContract                   payCivilContract;
            RPayCivilContractAct                payCivilContractAct;
            RPayStandardDeductionSumModuleType  rPayStandardDeductionSumModuleType;
            Common                              common = element.args().record();
            RPayAverageEarnValue                avgEarnValue;
            container                           srcTableRecIdsCon;
            str                                 srcTableRecIdsStr;

            switch (common.TableId)
            {
                case tableNum(RPayAverageEarnEmplPeriodTable):
                    rPayAverageEarnEmplPeriodTable = common;
                    criteriaEmplId.value(queryValue(rPayAverageEarnEmplPeriodTable.EmplId));

                    criteriaSourceTableId.value(con2Str([avgEarnValue.TableId, rPayAverageEarnEmplPeriodTable.TableId]));
                    srcTableRecIdsCon += rPayAverageEarnEmplPeriodTable.RecId;

                    while select RecId from avgEarnValue
                        where avgEarnValue.AverageEarnEmplPeriodRecid == rPayAverageEarnEmplPeriodTable.RecId
                    {
                        srcTableRecIdsCon += avgEarnValue.RecId;
                    }

                    srcTableRecIdsStr = con2StrUnlimited(srcTableRecIdsCon);
                    criteriaSourceRecId.value(srcTableRecIdsStr);

                    switch (rPayAverageEarnEmplPeriodTable.AverageEarnCodeType)
                    {
                        case RPayAverageEarnCodeType::Vacation :
                            criteriaModule.value(#ModuleNameVacation);
                            element.design().caption("@GLS105839");
                            break;
                        case RPayAverageEarnCodeType::SickList :
                            criteriaModule.value(#ModuleNameSickList);
                            element.design().caption("@RUP6343");
                            break;
                        case RPayAverageEarnCodeType::BusinessTrip :
                            criteriaModule.value(#ModuleNameBusinessTrip);
                            element.design().caption("@RUP2226");
                            break;
                        default :
                            break;
                    }
                    break;

                case tableNum(RPayJournalTable):
                    payJournalTable = common;
                    criteriaModule.value(queryValue(payJournalTable.JournalNameId));
                    criteriaCounter.value(queryValue(payJournalTable.JournalId));
                    break;

                case tableNum(RPayEmplStandardDeductionTable):
                    rPayEmplStandardDeductionTable     = common;
                    rPayStandardDeductionSumModuleType = element.args().parmEnum();

                    criteriaPeriod.value(queryValue(RPayParameters::payPeriod()));

                    if (rPayStandardDeductionSumModuleType == RPayStandardDeductionSumModuleType::OneType)
                    {
                        criteriaDeductionType.value(queryValue(rPayEmplStandardDeductionTable.deductionType()));
                    }
                    else
                    {
                        criteriaSourceRecId.value(queryValue(rPayEmplStandardDeductionTable.RecId));
                    }
                    break;

                case tableNum(RPayTblTrans):
                    payTblTrans = common;
                    criteriaSourceTableId.value(queryValue(payTblTrans.TableId));
                    criteriaSourceRecId.value(queryValue(payTblTrans.RecId));
                    criteriaEmplId.value(queryValue(payTblTrans.EmplId));
                    break;

                case tableNum(RPayTblJournal):
                    payTblJournal = common;

                    criteriaRPayTblJournalNum.value(queryValue(payTblJournal.TblNum));
                    break;
                case tableNum(RPayCivilContract):
                    payCivilContract = common;

                    criteriaRPayCivilContractId.value(queryValue(payCivilContract.ContractId));
                    break;

                case tableNum(RPayCivilContractAct):
                    payCivilContractAct = common;
                    criteriaSourceTableId.value(queryValue(payCivilContractAct.TableId));
                    criteriaSourceRecId.value(queryValue(payCivilContractAct.RecId));
                    element.design().caption("@RUP2576");
                    payTrans_EmplId.allowEdit(false);
                    break;
                default:
                    criteriaPeriod.value(queryValue(RPayParameters::payPeriod()));
                    break;
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        void init()
        {
            Common                              common = element.args().record();
            QueryBuildDataSource                emplQBDS;
            QueryBuildDataSource                payTransQBDS;
            QueryBuildDataSource                emplStdDeductQBDS;
            QueryBuildDataSource                stdDeductQBDS;
            QueryBuildDataSource                tblTranQBDS;
            QueryBuildDataSource                civilContractActQBDS;
            RPayStandardDeductionSumModuleType  rPayStandardDeductionSumModuleType;

            super();

            this.cacheAddMethod(tableMethodStr(RPayTrans, payEmplName));
            this.cacheAddMethod(tableMethodStr(RPayTrans, costTypeName));

            payTransQBDS = this.query().dataSourceNo(1);

            criteriaPeriod        = payTransQBDS.addRange(fieldNum(RPayTrans,PayPeriod));
            criteriaModule        = payTransQBDS.addRange(fieldNum(RPayTrans,PayModuleCode));
            criteriaEmplId        = payTransQBDS.addRange(fieldNum(RPayTrans,Emplid));
            criteriaCounter       = payTransQBDS.addRange(fieldNum(RPayTrans,CounterUnit));
            criteriaSourceTableId = payTransQBDS.addRange(fieldNum(RPayTrans,SourceTableId));
            criteriaSourceRecId   = payTransQBDS.addRange(fieldNum(RPayTrans,SourceRecId));

            switch (common.TableId)
            {
                case tableNum(RPayAverageEarnEmplPeriodTable):
                    payTrans_EmplId.allowEdit(false);
                    break;

                case tableNum(RPayTblJournal):
                    emplQBDS = payTransQBDS.addDataSource(tableNum(RHRMEmplTable));
                    emplQBDS.addLink(fieldNum(RPayTrans, Emplid), fieldNum(RHRMEmplTable, EmployeeId));
                    criteriaSourceTableId.value(queryValue(tableNum(RPayTblTrans)));

                    tblTranQBDS = payTransQBDS.addDataSource(tableNum(RPayTblTrans));
                    tblTranQBDS.addLink(fieldNum(RPayTrans, SourceRecId), fieldNum(RPayTblTrans, RecId));
                    tblTranQBDS.joinMode(JoinMode::ExistsJoin);

                    criteriaRPayTblJournalNum = tblTranQBDS.addRange(fieldNum(RPayTblTrans, PayTblNum));

                    element.design().caption("@SYS716");
                    break;

                case tableNum(RPayEmplStandardDeductionTable):
                    rPayStandardDeductionSumModuleType = element.args().parmEnum();

                    criteriaSourceTableId.value(queryValue(tableNum(RPayEmplStandardDeductionTable)));

                    if (rPayStandardDeductionSumModuleType == RPayStandardDeductionSumModuleType::OneType)
                    {
                        emplStdDeductQBDS = payTransQBDS.addDataSource(tableNum(RPayEmplStandardDeductionTable));
                        emplStdDeductQBDS.addLink(fieldNum(RPayTrans, SourceRecId), fieldNum(RPayEmplStandardDeductionTable, RecId));
                        emplStdDeductQBDS.joinMode(JoinMode::ExistsJoin);

                        stdDeductQBDS = emplStdDeductQBDS.addDataSource(tableNum(RPayStandardDeductionTable));
                        stdDeductQBDS.relations(true);
                        stdDeductQBDS.joinMode(JoinMode::ExistsJoin);

                        criteriaDeductionType = stdDeductQBDS.addRange(fieldNum(RPayStandardDeductionTable, DeductionType));

                        criteriaModule.value(#ModuleNameStandardDeduction);
                    }
                    break;

                case tableNum(RPayTblTrans):
                    element.design().caption("@SYS716");
                    payTrans_EmplId.allowEdit(false);
                    break;

                case tableNum(RPayCivilContract):
                    civilContractActQBDS = payTransQBDS.addDataSource(tableNum(RPayCivilContractAct));
                    civilContractActQBDS.addLink(fieldNum(RPayTrans, SourceRecId), fieldNum(RPayCivilContractAct, RecId));
                    civilContractActQBDS.joinMode(JoinMode::ExistsJoin);

                    criteriaRPayCivilContractId = civilContractActQBDS.addRange(fieldNum(RPayCivilContractAct, ContractId));

                    criteriaSourceTableId.value(queryValue(tableNum(RPayCivilContractAct)));
                    element.design().caption("@RUP2556");
                    payTrans_EmplId.allowEdit(false);
                    break;

                case tableNum(RPayCivilContractAct):
                    element.design().caption("@RUP2576");
                    payTrans_EmplId.allowEdit(false);
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Emplid</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            void modified()
            {
                payTrans.initFromEmplTable(RHRMEmplTable::find(payTrans.Emplid));
                super();

                payTrans_ds.cacheCalculateMethod(tableMethodStr(RPayTrans, payEmplName));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PayCtype</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                payTrans_ds.cacheCalculateMethod(tableMethodStr(RPayTrans, costTypeName));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>FinancialDimension</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            accountDimension.enabled(payTrans.AccountType != LedgerJournalACType::Ledger);
            offsetAccountDimension.enabled(payTrans.OffsetAccountType != LedgerJournalACType::Ledger);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AccountDimension</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            FormRun formRun;
            MenuFunction menuFunction;
            Args args;

            // Launch the Dimension form modally, this form will change the default dimension field on the record
            menuFunction = new MenuFunction(this.menuItemName(), this.menuItemType());
            args = new Args();
            args.record(payTrans);
            formRun = menuFunction.create(args);
            formRun.run();
            formRun.wait(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OffsetAccountDimension</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            FormRun formRun;
            MenuFunction menuFunction;
            Args args;

            // Launch the Dimension form modally, this form will change the default dimension field on the record
            menuFunction = new MenuFunction(this.menuItemName(), this.menuItemType());
            args = new Args();
            args.record(payTrans);
            formRun = menuFunction.create(args);
            formRun.run();
            formRun.wait(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabPage2</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerAccount_LedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if ( !element.lookupLedgerDimension(payTrans.AccountType, this))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return element.useCustomlookupLedgerDimension(_accountTypeEnumValue);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OffsetAccount_OffsetLedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            if ( !element.lookupLedgerDimension(payTrans.OffsetAccountType, this))
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            return element.useCustomlookupLedgerDimension(_accountTypeEnumValue);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PayTrans</Name>
			<Table>RPayTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BranchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CalcTransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CounterUnit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Emplid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FamilyRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HrmOrganisationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayCtype</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayModuleCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyDay</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QtyHour</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefSheetTransRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Scanning</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxIncomeGroupCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxRedemption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>PeriodEmplIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@RUP383</Caption>
		<DataSource xmlns="">PayTrans</DataSource>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>NewDeleteGroup</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>NewButton</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CommandButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Command>New</Command>
								<Primary>Yes</Primary>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>DeleteButton</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CommandButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Command>DeleteRecord</Command>
								<Primary>Yes</Primary>
								<SaveRecord>No</SaveRecord>
								<Text>@sys14425</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<DataSource>PayTrans</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>FinancialDimension</Name>
								<ElementPosition>122713348</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>AccountDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>PayTrans</DataSource>
										<MenuItemName>LedgerJourTransDimLedgerJourTransDaily</MenuItemName>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>OffsetAccountDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>MenuFunctionButton</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<DataSource>PayTrans</DataSource>
										<MenuItemName>LedgerJourTrOffDimLedgerJourTransDay</MenuItemName>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS138491</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab1</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPage</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid3</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PayTrans_Emplid</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Emplid</DataField>
										<DataSource>PayTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EmplName</Name>
										<AllowEdit>No</AllowEdit>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>PayEmplName</DataMethod>
										<DataSource>PayTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PayTrans_PayCtype</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayCtype</DataField>
										<DataSource>PayTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CostTypeName</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>costtypename</DataMethod>
										<DataSource>PayTrans</DataSource>
										<DisplayLength>30</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PayTrans_Amount</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Amount</DataField>
										<DataSource>PayTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>PayTrans</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS50012</Caption>
						<DataSource>PayTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPage1</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Organization</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>HrmOrganisationId</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>HrmOrganisationId</DataField>
										<DataSource>PayTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Department</DataGroup>
								<DataSource>PayTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Period</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>SourceDate</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SourceDate</DataField>
										<DataSource>PayTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>TransDate</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransDate</DataField>
										<DataSource>PayTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>PayPeriod</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayPeriod</DataField>
										<DataSource>PayTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>Period_CorrectedPeriod</Name>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CorrectedPeriod</DataField>
										<DataSource>PayTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Periods</DataGroup>
								<DataSource>PayTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Value</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>QtyHour</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>QtyHour</DataField>
										<DataSource>PayTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>QtyDay</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>QtyDay</DataField>
										<DataSource>PayTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Value_Amount</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Amount</DataField>
										<DataSource>PayTrans</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataGroup>LineValue</DataGroup>
								<DataSource>PayTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Calculate</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PayModuleCode</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayModuleCode</DataField>
										<DataSource>PayTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>Scanning</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>Scanning</DataField>
										<DataSource>PayTrans</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CounterUnit</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CounterUnit</DataField>
										<DataSource>PayTrans</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>Calculation</DataGroup>
								<DataSource>PayTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS19924</Caption>
						<DataSource>PayTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPage2</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupAcc</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>LedgerAccount</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>LedgerAccount_AccountType</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>AccountType</DataField>
												<DataSource>PayTrans</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormSegmentedEntryControl">
												<Name>LedgerAccount_LedgerDimension</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>SegmentedEntry</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension>
													<Name>SegmentedEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>String</Type>
															<Value>DimensionDynamicAccountController</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmAccountTypeEnumName</Name>
															<Type>String</Type>
															<Value>AccountType</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIsDefaultAccount</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValidateBlockedForManualEntry</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmLockMainAccountSegment</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmPostingType</Name>
															<Type>Enum</Type>
															<TypeName>LedgerPostingType</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeTotalAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeFinancialAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<DataSource>PayTrans</DataSource>
												<ReferenceField>LedgerDimension</ReferenceField>
											</AxFormControl>
										</Controls>
										<DataSource>PayTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<Caption>@SYS24500</Caption>
								<DataSource>PayTrans</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupOffAcc</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>OffsetAccount</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>OffsetAccount_OffsetAccountType</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>OffsetAccountType</DataField>
												<DataSource>PayTrans</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormSegmentedEntryControl">
												<Name>OffsetAccount_OffsetLedgerDimension</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>SegmentedEntry</Type>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension>
													<Name>SegmentedEntryControl</Name>
													<ExtensionComponents />
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>parmControllerClassName</Name>
															<Type>String</Type>
															<Value>DimensionDynamicAccountController</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmAccountTypeEnumName</Name>
															<Type>String</Type>
															<Value>OffsetAccountType</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIsDefaultAccount</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmValidateBlockedForManualEntry</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmLockMainAccountSegment</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmPostingType</Name>
															<Type>Enum</Type>
															<TypeName>LedgerPostingType</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeTotalAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>parmIncludeFinancialAccounts</Name>
															<Type>Enum</Type>
															<TypeName>NoYes</TypeName>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</FormControlExtension>
												<DataSource>PayTrans</DataSource>
												<ReferenceField>OffsetLedgerDimension</ReferenceField>
											</AxFormControl>
										</Controls>
										<DataSource>PayTrans</DataSource>
									</AxFormControl>
								</Controls>
								<Columns>2</Columns>
								<Caption>@GLS100952</Caption>
								<DataSource>PayTrans</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS21530</Caption>
						<DataSource>PayTrans</DataSource>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>PayTrans</DataSource>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>