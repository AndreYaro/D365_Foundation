<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>BudgetLedgerDimensionLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class BudgetLedgerDimensionLookup extends FormRun
{
    [FormObservable]
    str               segmentSeparator;
    FormStringControl callerControl;

    BudgetCycle budgetCycle;

}
]]></Source>
			</Method>
			<Method>
				<Name>closeSelect</Name>
				<Source><![CDATA[
    public void closeSelect(str _selectString)
    {
        if (dimensionAttributeValueCombination.RecId != 0)
        {
            element.args().record(dimensionAttributeValueCombination);
        }

        super(_selectString);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        callerControl = SysTableLookup::getCallerStringControl(element.args());
        segmentSeparator = ' ' + DimensionParameters::getDimensionSegmentDelimiter() + ' ';

        if (element.args().dataset() == tableNum(BudgetCycle))
        {
            budgetCycle = element.args().record();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        QueryBuildDataSource dimensionAttributeValueComb_Qbds;
        QueryBuildDataSource budgetSourceTrackingDetail_Qbds;

        boolean filterLookup = false;

        // Sort the grid by DAVC display value.
        dimensionAttributeValueComb_Qbds = dimensionAttributeValueCombination_ds.query().dataSourceTable(tablenum(DimensionAttributeValueCombination));
        dimensionAttributeValueComb_Qbds.addSortField(fieldnum(DimensionAttributeValueCombination, DisplayValue), SortOrder::Ascending);

        // Group by display value to eliminate duplicates from adding the join to BudgetSourceTrackingDetail to filter by primary ledger.
        dimensionAttributeValueComb_Qbds.addGroupByField(fieldnum(DimensionAttributeValueCombination, DisplayValue));

        // Group by recId to support display method for displaying the dimension attribute names in description
        dimensionAttributeValueComb_Qbds.addGroupByField(fieldnum(DimensionAttributeValueCombination, RecId));

        // Filter by primary ledger.
        budgetSourceTrackingDetail_Qbds = budgetSourceTrackingDetail_ds.query().dataSourceTable(tablenum(BudgetSourceTrackingDetail));
        budgetSourceTrackingDetail_Qbds.addRange(fieldnum(BudgetSourceTrackingDetail, PrimaryLedger)).value(SysQuery::value(Ledger::current()));

        if (budgetCycle)
        {
            // Restrict the query to the active configuration rules and budget cycle dates.
            BudgetControlRuleLedgerDimension::addActiveRuleBudgetCycleRangesToQuery(
                dimensionAttributeValueCombination_ds.query(),
                budgetCycle);
        }

        // The value to be bound when the user selects a ledger dimension on the grid.
        element.selectMode(dimensionAttributeValueCombination_DisplayValue);

        filterLookup = SysTableLookup::filterLookupPreRun(callerControl, dimensionAttributeValueCombination_DisplayValue, dimensionAttributeValueCombination_ds);

        super();

        SysTableLookup::filterLookupPostRun(filterLookup, callerControl.text(), dimensionAttributeValueCombination_DisplayValue, dimensionAttributeValueCombination_ds);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>DimensionAttributeValueCombination</Name>
				<Methods>
					<Method>
						<Name>displayLedgerDimValueDescription</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns a string that contains the dimension value description for each value in the ledger dimension.
        /// </summary>
        /// <param name="_dimensionAttributeValueCombination">
        /// The <c>DimensionAttributeValueCombination</c> record for which to get a description.
        /// </param>
        /// <returns>
        /// A string that contains the dimension value description for each value in the ledger dimension.
        /// </returns>
        public display Description255 displayLedgerDimValueDescription(DimensionAttributeValueCombination _dimensionAttributeValueCombination)
        {
            Description255                      ledgerDimensionValueDescription;
            DimensionAttributeValue             dimensionAttributeValue;
            DimensionAttributeLevelValueAllView valueView;

            if (hasTableAccess(tablenum(DimensionAttributeLevelValueView)) &&
                hasTableAccess(tablenum(DimensionAttributeValue)))
            {
                while select AttributeValueRecId
                    from valueView
                    order by GroupOrdinal asc, ValueOrdinal asc
                        where valueView.ValueCombinationRecId == _dimensionAttributeValueCombination.RecId
                    join dimensionAttributeValue
                        where valueView.AttributeValueRecId == dimensionAttributeValue.RecId
                {
                    if (ledgerDimensionValueDescription)
                    {
                        ledgerDimensionValueDescription += segmentSeparator;
                    }

                    ledgerDimensionValueDescription += dimensionAttributeValue.getName();
                }
            }

            return ledgerDimensionValueDescription;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayLedgerDimensionDescription</Name>
						<Source><![CDATA[
        /// <summary>
        /// Returns a string that contains the dimension names for each value in the ledger dimension.
        /// </summary>
        /// <param name="_dimensionAttributeValueCombination">
        /// The <c>DimensionAttributeValueCombination</c> record for which to get a description.
        /// </param>
        /// <returns>
        /// A string that contains the dimension names for each value in the ledger dimension.
        /// </returns>
        public display Description255 displayLedgerDimensionDescription(DimensionAttributeValueCombination _dimensionAttributeValueCombination)
        {
            Description255                      ledgerDimensionDescription;
            DimensionAttribute                  dimensionAttribute;
            DimensionAttributeLevelValueAllView valueView;

            if (hasTableAccess(tablenum(DimensionAttributeLevelValueView)) &&
                hasTableAccess(tablenum(DimensionAttribute)))
            {
                while select RecId
                    from valueView
                    order by GroupOrdinal asc, ValueOrdinal asc
                        where valueView.ValueCombinationRecId == _dimensionAttributeValueCombination.RecId
                    join dimensionAttribute
                        where valueView.DimensionAttribute == dimensionAttribute.RecId
                {
                    if (ledgerDimensionDescription)
                    {
                        ledgerDimensionDescription += segmentSeparator;
                    }

                    ledgerDimensionDescription += dimensionAttribute.localizedName();
                }
            }

            return ledgerDimensionDescription;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DimensionAttributeValueCombination</Name>
			<Table>DimensionAttributeValueCombination</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountStructure</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DisplayValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimensionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>BudgetSourceTrackingDetail</Name>
			<Table>BudgetSourceTrackingDetail</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetControlLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetControlRule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetGroupMember</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetSourceLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetSourceTracking</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsCarryForward</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDeletePending</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsReturnOfBudgetFunds</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSummarized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimaryLedger</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<JoinSource>DimensionAttributeValueCombination</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<AlwaysOnTop xmlns="">Yes</AlwaysOnTop>
		<BottomMargin xmlns="">0</BottomMargin>
		<BottomMarginMode xmlns="">Fixed</BottomMarginMode>
		<Frame xmlns="">Border</Frame>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Left xmlns="">15</Left>
		<LeftMargin xmlns="">0</LeftMargin>
		<LeftMarginMode xmlns="">Fixed</LeftMarginMode>
		<LeftMode xmlns="">Manual</LeftMode>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<RightMargin xmlns="">0</RightMargin>
		<RightMarginMode xmlns="">Fixed</RightMarginMode>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">Lookup</Style>
		<Top xmlns="">15</Top>
		<TopMargin xmlns="">2</TopMargin>
		<TopMarginMode xmlns="">Fixed</TopMarginMode>
		<TopMode xmlns="">Manual</TopMode>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AllowEdit>No</AllowEdit>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToContent</HeightMode>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DimensionAttributeValueCombination_DisplayValue</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>DisplayValue</DataField>
						<DataSource>DimensionAttributeValueCombination</DataSource>
						<Label>@SYS152256</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Description</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayLedgerDimensionDescription</DataMethod>
						<DataSource>DimensionAttributeValueCombination</DataSource>
						<Label>@SYS6303</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ValueDescription</Name>
						<ElementPosition>1879048189</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayLedgerDimValueDescription</DataMethod>
						<DataSource>DimensionAttributeValueCombination</DataSource>
						<Label>@SYS342933</Label>
					</AxFormControl>
				</Controls>
				<DataSource>DimensionAttributeValueCombination</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>