<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>RPayGroupTable</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/* TODO: (Code Upgrade) Group control Period had TopMode property set to BottomEdge. This property is no longer respected. Make any necessary adjustments to correct the position of the group control. */
    [Form]
    public class RPayGroupTable extends FormRun
    {
        Query                     m_qListSelectMembers;
        Query                     m_qListOtherMembers;
        ImageListAppl_PayGroup_RU m_imageList;
        date                      m_dateFrom;
        date                      m_dateTo;
        RPayGroupMember           m_payGroupMember;
}
]]></Source>
			</Method>
			<Method>
				<Name>createQueryForOtherMembers</Name>
				<Source><![CDATA[
    private Query createQueryForOtherMembers()
    {
        Query                   query;
        QueryBuildDataSource    qDS_EmplTable;
        QueryBuildDataSource    qDS_PayGroupMember;
        ;
        query = new Query();

        switch (PayGroupTable.Type)
        {
            case RPayGroupType::Employee:
                qDS_EmplTable = query.addDataSource(tablenum(RHRMEmplTable));
                qDS_EmplTable.addSelectionField(fieldnum(RHRMEmplTable, EmployeeId));

                qDS_PayGroupMember = qDS_EmplTable.addDataSource(tablenum(RPayGroupMember));
                qDS_PayGroupMember.addRange(fieldnum(RPayGroupMember, PayGroup));

                qDS_PayGroupMember.joinMode(JoinMode::NoExistsJoin);
                qDS_PayGroupMember.addLink(fieldnum(RHRMEmplTable, EmployeeId), fieldnum(RPayGroupMember, PersonEmplId));
                break;

            case RPayGroupType::Person:
                qDS_EmplTable = query.addDataSource(tablenum(RHRMPersonTable));
                qDS_EmplTable.addSelectionField(fieldnum(RHRMPersonTable, PersonnelNumber));

                qDS_PayGroupMember = qDS_EmplTable.addDataSource(tablenum(RPayGroupMember));
                qDS_PayGroupMember.addRange(fieldnum(RPayGroupMember, PayGroup));

                qDS_PayGroupMember.joinMode(JoinMode::NoExistsJoin);
                qDS_PayGroupMember.addLink(fieldnum(RHRMPersonTable, PersonnelNumber), fieldnum(RPayGroupMember, PersonEmplId));
                break;
        }
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createQueryForSelectMembers</Name>
				<Source><![CDATA[
    private Query createQueryForSelectMembers()
    {
        Query                query;
        QueryBuildDataSource qDS_PayGroupMember,
                             qDS_EmplTable;
        ;

        query = new Query();

        qDS_PayGroupMember = query.addDataSource(tablenum(RPayGroupMember));
        qDS_PayGroupMember.addSelectionField(fieldnum(RPayGroupMember, PersonEmplId));
        qDS_PayGroupMember.addSelectionField(fieldnum(RPayGroupMember, FromDate));
        qDS_PayGroupMember.addSelectionField(fieldnum(RPayGroupMember, ToDate));
        qDS_PayGroupMember.addRange(fieldnum(RPayGroupMember, PayGroup));

        switch (PayGroupTable.Type)
        {
            case RPayGroupType::Employee:
                qDS_EmplTable = qDS_PayGroupMember.addDataSource(tablenum(RHRMEmplTable));
                qDS_EmplTable.joinMode(JoinMode::InnerJoin);
                qDS_EmplTable.addLink(fieldnum(RHRMEmplTable, EmployeeId), fieldnum(RPayGroupMember, PersonEmplId));
                break;

            case RPayGroupType::Person:
                qDS_EmplTable = qDS_PayGroupMember.addDataSource(tablenum(RHRMPersonTable));
                qDS_EmplTable.joinMode(JoinMode::InnerJoin);
                qDS_EmplTable.addLink(fieldnum(RHRMPersonTable, PersonnelNumber), fieldnum(RPayGroupMember, PersonEmplId));
                break;
        }
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enblOrDis_ButtonsMembers</Name>
				<Source><![CDATA[
    public void enblOrDis_ButtonsMembers()
    {
        boolean hasQuery = payGroupTable.hasQuery();
        if ( hasQuery )
        {
            btAllMembersInListSelectMembers.enabled(false);
            btAllMembersInListOtherMembers.enabled(false);
            btSelectMembersInListOtherMembers.enabled(false);
            btSelectMembersInListSelectMembers.enabled(false);
        }
        else
        {
            btAllMembersInListSelectMembers.enabled(ListOtherMembers.getCount());
            btAllMembersInListOtherMembers.enabled(ListSelectMembers.getCount());
            btSelectMembersInListOtherMembers.enabled(ListSelectMembers.getSelectedCount());
            btSelectMembersInListSelectMembers.enabled(ListOtherMembers.getSelectedCount());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enblOrDis_ControlOnMembersTab</Name>
				<Source><![CDATA[
    public void enblOrDis_ControlOnMembersTab()
    {
        this.enblOrDis_ButtonsMembers();
        this.enblOrDis_Period();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enblOrDis_Period</Name>
				<Source><![CDATA[
    public boolean enblOrDis_Period()
    {
        boolean bEnabl;
        bEnabl = ! payGroupTable.hasQuery() && (ListSelectMembers.getSelectedCount() == 1);
        DateEditFrom.enabled(bEnabl);
        DateEditTo.enabled(bEnabl);

        if (!bEnabl)
        {
            DateEditFrom.dateValue(dateNull());
            DateEditTo.dateValue(dateNull());
        }

        return bEnabl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPeriod</Name>
				<Source><![CDATA[
    private boolean getPeriod()
    {
        RPayGroupMemberInsertPeriod dialog;
        boolean                     bRet = false;
        ;
        dialog = new  RPayGroupMemberInsertPeriod();

        if (dialog.prompt() && (!dialog.getBaseDateTo() || dialog.getBaseDateFrom() <= dialog.getBaseDateTo()))
        {
            m_dateFrom = dialog.getBaseDateFrom();
            m_dateTo   = dialog.getBaseDateTo();
            bRet = true;
        }
        else
        {
            m_dateFrom = dateNull();
            m_dateTo   = dateNull();
        }

        return bRet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        #resappl

        super();

        m_imageList = new ImageListAppl_PayGroup_RU();

        ListSelectMembers.addColumn(1,new FormListColumn("@SYS13864",1));
        ListSelectMembers.addColumn(2,new FormListColumn("@SYS7399",2, 150));
        ListSelectMembers.width(220);

        ListOtherMembers.addColumn(1,new FormListColumn("@SYS13864",1));
        ListOtherMembers.addColumn(2,new FormListColumn("@SYS7399",2, 150));
        ListOtherMembers.width(230);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initListOtherMembers</Name>
				<Source><![CDATA[
    private void initListOtherMembers()
    {
        int             iIdx;
        QueryRun        qr;
        RHRMEmplTable   emplTable;
        RHRMPersonTable personTable;
        FormListItem    formListItem;
        #resappl

        m_qListOtherMembers = this.createQueryForOtherMembers();
        this.setWhereForListOtherMembers(payGroupTable.PayGroup);
        qr = new QueryRun(m_qListOtherMembers);
        ListOtherMembers.deleteAll();

        switch (PayGroupTable.Type)
        {
        case RPayGroupType::Employee:
            while (qr.next())
            {
                emplTable = qr.get(tablenum(RHRMEmplTable));
                formListItem = new FormListItem(emplTable.EmployeeId, m_imageList.image(#ImageUser));
                formListItem.data(emplTable.EmployeeId);
                iIdx = ListOtherMembers.addItem(formListItem);
                formListItem = new FormListItem(emplTable.name());
                formListItem.subItem(1);
                formListItem.idx(iIdx);
                ListOtherMembers.setItem(formListItem);
            }
            break;

        case RPayGroupType::Person:
            while (qr.next())
            {
                personTable = qr.get(tablenum(RHRMPersonTable));
                formListItem = new FormListItem(personTable.PersonnelNumber, m_imageList.image(#ImageUser));
                formListItem.data(personTable.PersonnelNumber);
                iIdx = ListOtherMembers.addItem(formListItem);
                formListItem = new FormListItem(personTable.name());
                formListItem.subItem(1);
                formListItem.idx(iIdx);
                ListOtherMembers.setItem(formListItem);
            }

            break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initListSelectMembers</Name>
				<Source><![CDATA[
    private void initListSelectMembers()
    {
        int             iIdx;
        QueryRun        qr;
        RPayGroupMember payGroupMember;
        RHRMEmplTable   emplTable;
        RHRMPersonTable personTable;
        FormListItem    formListItem;
        #resappl

        m_qListSelectMembers = this.createQueryForSelectMembers();
        this.setWhereForListSelectMembers(payGroupTable.PayGroup);
        qr = new QueryRun(m_qListSelectMembers);
        ListSelectMembers.deleteAll();

        switch (PayGroupTable.Type)
        {
        case RPayGroupType::Employee:
            while (qr.next())
            {
                payGroupMember = qr.get(tablenum(RPayGroupMember));
                emplTable = qr.get(tablenum(RHRMEmplTable));
                formListItem = new FormListItem(payGroupMember.PersonEmplId,m_imageList.image(#ImageUser));
                formListItem.data(payGroupMember.PersonEmplId);
                iIdx = ListSelectMembers.addItem(formListItem);
                formListItem = new FormListItem(emplTable.name());
                formListItem.subItem(1);
                formListItem.idx(iIdx);
                ListSelectMembers.setItem(formListItem);
            }
            break;

        case RPayGroupType::Person:
            while (qr.next())
            {
                payGroupMember = qr.get(tablenum(RPayGroupMember));
                personTable = qr.get(tablenum(RHRMPersonTable));
                formListItem = new FormListItem(payGroupMember.PersonEmplId, m_imageList.image(#ImageUser));
                formListItem.data(payGroupMember.PersonEmplId);
                iIdx = ListSelectMembers.addItem(formListItem);
                formListItem = new FormListItem(personTable.name());
                formListItem.subItem(1);
                formListItem.idx(iIdx);
                ListSelectMembers.setItem(formListItem);
            }
            break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMembersLists</Name>
				<Source><![CDATA[
    public void initMembersLists()
    {
        this.initListOtherMembers();
        this.initListSelectMembers();
    }

]]></Source>
			</Method>
			<Method>
				<Name>membersInOtherList</Name>
				<Source><![CDATA[
    public void membersInOtherList(FormListNext _formListNext)
    {
        FormListItem        formListItem;
        int                 iIndx;
        RPayPersonEmplId    refId;

        try
        {
            ttsbegin;
            iIndx = ListSelectMembers.getNextItem(_formListNext);
            while (iIndx != -1)
            {
                formListItem = ListSelectMembers.getItem(iIndx);
                refId = formListItem.data();
                RPayGroupMember::deleteMember(payGroupTable.PayGroup, refId);
                iIndx = ListSelectMembers.getNextItem(_formListNext,iIndx);
            }
            ttscommit;
            element.initMembersLists();
        }
        catch(Exception::Error)
        {
            ttsabort;
        }
        catch(Exception::Warning)
        {
            ttsabort;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>membersInSelectList</Name>
				<Source><![CDATA[
    void membersInSelectList(FormListNext _formListNext)
    {
        FormListItem     formListItem;
        int              iIndx;
        RPayPersonEmplId           refId;
        boolean          bOk = false;

        bOk = element.getPeriod();

        if (!bOk)
        {
            return;
        }

        try
        {
            ttsbegin;
            iIndx = ListOtherMembers.getNextItem(_formListNext);
            while (iIndx != -1)
            {
                formListItem = ListOtherMembers.getItem(iIndx);
                refId = formListItem.data();
                RPayGroupMember::addMember(payGroupTable.PayGroup, refId, m_dateFrom, m_dateTo);
                iIndx = ListOtherMembers.getNextItem(_formListNext,iIndx);
            }
            ttscommit;
            element.initMembersLists();
        }
        catch(Exception::Error)
        {
            ttsabort;
        }
        catch(Exception::Warning)
        {
            ttsabort;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWhereForListOtherMembers</Name>
				<Source><![CDATA[
    private void setWhereForListOtherMembers(RPayGroup _payGroup)
    {
        QueryBuildDataSource    qDS;
        QueryBuildRange         qRange;
        ;
        qDS = m_qListOtherMembers.dataSourceTable(tablenum(RPayGroupMember));
        qRange = qDS.rangeField(fieldnum(RPayGroupMember, PayGroup));
        qRange.value(_payGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWhereForListSelectMembers</Name>
				<Source><![CDATA[
    private void setWhereForListSelectMembers(RPayGroup _payGroup)
    {
        QueryBuildDataSource    qDS;
        QueryBuildRange         qRange;
        ;
        qDS = m_qListSelectMembers.dataSourceTable(tablenum(RPayGroupMember));
        qRange = qDS.rangeField(fieldnum(RPayGroupMember, PayGroup));
        qRange.value(_payGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign()
    {
        deleteQuery.enabled(payGroupTable.hasQuery());
        refreshCurrent.enabled(payGroupTable.hasQuery());
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PayGroupTable</Name>
				<Methods>
					<Method>
						<Name>rereadAndRecalcCache</Name>
						<Source><![CDATA[
        public void rereadAndRecalcCache()
        {
            this.reread();
            this.cacheCalculateMethod(tablemethodstr(RPayGroupTable, countMembers));
            this.cacheCalculateMethod(tablemethodstr(RPayGroupTable, hasQuery));
            this.refresh();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            this.cacheAddMethod(tablemethodstr(RPayGroupTable, countMembers));
            this.cacheAddMethod(tablemethodstr(RPayGroupTable, hasQuery));
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            if (ret)
            {
                element.updateDesign();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CreateQuery</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            RPayGroupMemberEngine::createQuery(payGroupTable);
            PayGroupTable_ds.rereadAndRecalcCache();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeleteQuery</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            payGroupTable.Query = connull();
            payGroupTable_ds.write();
            payGroupTable_ds.rereadAndRecalcCache();
            element.updateDesign();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RefreshCurrent</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            RPayGroupMemberEngine::refreshGroup(payGroupTable);
            PayGroupTable_ds.rereadAndRecalcCache();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RefreshAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            RPayGroupMemberEngine::refreshAllGroups();
            PayGroupTable_ds.rereadAndRecalcCache();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Tab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChange</Name>
						<Source><![CDATA[
        boolean tabChange(int fromTab)
        {
            boolean ret = true;
            ;

            if (fromTab == 1)
            {
                ret = payGroupTable.validateWrite();
            }

            if (fromTab != 1)
            {
                PayGroupTable_ds.rereadAndRecalcCache();
            }

            ret = ret && super(fromTab);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        #define.Value2(2)
        void tabChanged(int fromTab, int toTab)
        {
            if (toTab == #Value2)
            {
                element.initMembersLists();
                element.enblOrDis_ControlOnMembersTab();
            }

            super(fromTab, toTab);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ListSelectMembers</Name>
				<Type>ListView</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        void selectionChanged(int _idx, anytype _data)
        {
            ;
            super(_idx, _data);

            if (element.enblOrDis_Period())
            {
                m_payGroupMember =  RPayGroupMember::find( payGroupTable.PayGroup, _data, true);
                DateEditFrom.dateValue(m_payGroupMember.FromDate);
                DateEditTo.dateValue(m_payGroupMember.ToDate);
            }

            element.enblOrDis_ButtonsMembers();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DateEditFrom</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean ret;
            ;
            ret = super();

            try
            {
                if (m_payGroupMember)
                {
                    if (m_payGroupMember.ToDate && (this.dateValue() > m_payGroupMember.ToDate))
                    {
                        checkFailed("@SYS30562");
                    }
                    else
                    {
                        ttsbegin;
                        m_payGroupMember.FromDate = this.dateValue();
                        m_payGroupMember.update();
                        ttscommit;
                    }
                }
            }
            catch(Exception::Deadlock)
            {
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DateEditTo</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean ret;
            ;
            ret = super();

            try
            {
                if (m_payGroupMember)
                {
                    if (m_payGroupMember.ToDate && (this.dateValue() < m_payGroupMember.FromDate))
                    {
                        checkFailed("@SYS30562");
                    }
                    else
                    {
                        ttsbegin;
                        m_payGroupMember.ToDate = this.dateValue();
                        m_payGroupMember.update();
                        ttscommit;
                    }
                }
            }
            catch(Exception::Deadlock)
            {
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btAllMembersInListSelectMembers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ;
            element.membersInSelectList(FormListNext::All);
            element.enblOrDis_ControlOnMembersTab();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btSelectMembersInListSelectMembers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ;
            element.membersInSelectList(FormListNext::Selected);
            element.enblOrDis_ControlOnMembersTab();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btSelectMembersInListOtherMembers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ;
            element.membersInOtherList(FormListNext::Selected);
            element.enblOrDis_ControlOnMembersTab();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btAllMembersInListOtherMembers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            ;
            element.membersInOtherList(FormListNext::All);
            element.enblOrDis_ControlOnMembersTab();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ListOtherMembers</Name>
				<Type>ListView</Type>
				<Methods>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        void selectionChanged(int _idx, anytype _data)
        {
            ;
            super(_idx, _data);

            element.enblOrDis_ButtonsMembers();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PayGroupTable</Name>
			<Table>RPayGroupTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Blocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Query</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>IndxPayGroup</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@GLS105278</Caption>
		<DataSource xmlns="">PayGroupTable</DataSource>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<TitleDataSource xmlns="">PayGroupTable</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Rates</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>RPayRateTrans</MenuItemName>
								<Text>@GLS105157</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>MenuButton</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>CreateQuery</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Delete</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS53103</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>DeleteQuery</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Delete</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS18510</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS13579</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>Refresh</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>RefreshCurrent</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Delete</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@RUP1200</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>RefreshAll</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<NeededPermission>Delete</NeededPermission>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS25428</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@SYS29018</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
						<DataSource>PayGroupTable</DataSource>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Overview</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PayGroupTable_Type</Name>
										<ElementPosition>409044504</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Type</DataField>
										<DataSource>PayGroupTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PayGroup</Name>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayGroup</DataField>
										<DataSource>PayGroupTable</DataSource>
										<LookupButton>Never</LookupButton>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Name</Name>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>PayGroupTable</DataSource>
										<DisplayLength>40</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>CountMembers</Name>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>countMembers</DataMethod>
										<DataSource>PayGroupTable</DataSource>
										<Label>@RUP261</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>Blocked</Name>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>Blocked</DataField>
										<DataSource>PayGroupTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>hasQuery</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataMethod>hasQuery</DataMethod>
										<DataSource>PayGroupTable</DataSource>
										<Label>@SYS13579</Label>
									</AxFormControl>
								</Controls>
								<DataSource>PayGroupTable</DataSource>
								<MultiSelect>No</MultiSelect>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>PgMembers</Name>
						<AlignControl>Yes</AlignControl>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SelectedEmployee</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormListViewControl">
										<Name>ListSelectMembers</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>ListView</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ColumnHeaderButton>Yes</ColumnHeaderButton>
										<RowSelect>Yes</RowSelect>
										<SingleSelection>No</SingleSelection>
										<Sort>Ascending</Sort>
										<ViewType>Report</ViewType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Period</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Top>0</Top>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>DateEditFrom</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>FromDate</ExtendedDataType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>DateEditTo</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>ToDate</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalRight</ArrangeMethod>
										<Caption>@SYS14598</Caption>
									</AxFormControl>
								</Controls>
								<Caption>@RUP262</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ButtonGroup1</Name>
								<AlignControl>Yes</AlignControl>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<LeftMode>AutoLeft</LeftMode>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>btAllMembersInListSelectMembers</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>35</Height>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<LeftMode>Center</LeftMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>35</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<ShowShortCut>No</ShowShortCut>
										<Text>&lt;&lt;</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>btSelectMembersInListSelectMembers</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>35</Height>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<LeftMode>Center</LeftMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>35</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<ShowShortCut>No</ShowShortCut>
										<Text>&lt;</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>btSelectMembersInListOtherMembers</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>35</Height>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<LeftMode>Center</LeftMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>35</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<ShowShortCut>No</ShowShortCut>
										<Text>&gt;</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>btAllMembersInListOtherMembers</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>35</Height>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<LeftMode>Center</LeftMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>35</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<ShowShortCut>No</ShowShortCut>
										<Text>&gt;&gt;</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<HideIfEmpty>No</HideIfEmpty>
								<TopMargin>60</TopMargin>
								<TopMarginMode>Fixed</TopMarginMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OtherEmployee</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormListViewControl">
										<Name>ListOtherMembers</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>ListView</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ColumnHeaderButton>Yes</ColumnHeaderButton>
										<RowSelect>Yes</RowSelect>
										<SingleSelection>No</SingleSelection>
										<Sort>Ascending</Sort>
										<ViewType>Report</ViewType>
									</AxFormControl>
								</Controls>
								<Caption>@RUP263</Caption>
							</AxFormControl>
						</Controls>
						<Columns>3</Columns>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@RUP261</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>