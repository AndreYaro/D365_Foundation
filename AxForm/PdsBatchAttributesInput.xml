<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PdsBatchAttributesInput</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PdsBatchAttributesInput extends FormRun
{
    QueryBuildRange     qbrBatchId;
    QueryBuildRange     qbrRefRecId;
    QueryBuildRange     qbrRefTableId;
    QueryBuildRange     qbrItemId;

    InventBatch         inventBatch;
    InventTransOrigin   inventTransOrigin;

    JournalId           journalId;
    ItemId              itemId;
    LineNum             lineNum;

    RefRecId            refRecId;
    RefTableId          refTableId;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (!element.args().caller())
        {
            throw error("@SYS85790");
        }

        switch (element.args().dataset())
        {
            case tableNum(PurchParmLine) :
                PurchParmLine purchParmLine = element.args().record();
                inventBatch     = InventBatch::find(purchParmLine.inventDim().InventBatchId, purchParmLine.ItemId);

                if (!inventBatch.RecId)
                {
                    inventTransOrigin   = InventTransOrigin::findByInventTransId(purchParmLine.InventTransId);
                    itemId              = purchParmLine.ItemId;
                    refRecId            = purchParmLine.RecId;
                    refTableId          = purchParmLine.TableId;
                }
                break;

            case tableNum(ProdJournalProd) :
                ProdJournalProd prodJournalProd = element.args().record();

                inventTransOrigin   = InventTransOrigin::findByInventTransId(prodJournalProd.InventTransId);
                itemId              = inventTransOrigin.ItemId;
                inventBatch         = InventBatch::find(InventDim::find(prodJournalProd.InventDimId).InventBatchId, itemId);

                if (!inventBatch.RecId)
                {
                    journalId   = prodJournalProd.JournalId;
                    refRecId    = prodJournalProd.RecId;
                    refTableId  = prodJournalProd.TableId;
                }
                break;

            case tableNum(ConsignmentDraftReplenishmentOrderJournalLine) :
                ConsignmentDraftReplenishmentOrderJournalLine consignmentDraftReplenishmentOrderJournalLine = element.args().record();
                inventBatch     = InventBatch::find(consignmentDraftReplenishmentOrderJournalLine.inventDim().InventBatchId, consignmentDraftReplenishmentOrderJournalLine.ItemId);

                if (!inventBatch.RecId)
                {
                    inventTransOrigin   = InventTransOrigin::findByInventTransId(consignmentDraftReplenishmentOrderJournalLine.InventTransId);
                    itemId              = consignmentDraftReplenishmentOrderJournalLine.ItemId;
                    refRecId            = consignmentDraftReplenishmentOrderJournalLine.RecId;
                    refTableId          = consignmentDraftReplenishmentOrderJournalLine.TableId;
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PdsBatchAttributesInput</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (inventBatch.RecId)
            {
                qbrBatchId.value(inventBatch.InventBatchId);
                qbrItemId.value(inventBatch.ItemId);
            }

            qbrRefRecId.value(queryValue(refrecid));
            qbrRefTableId.value(queryValue(refTableId));

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            qbrBatchId    = this.query().dataSourceTable(tablenum(PdsBatchAttributesInput))
                                .addRange(fieldnum(PdsBatchAttributesInput,PdsBatchAttribReference));
            qbrItemId     = this.query().dataSourceTable(tablenum(PdsBatchAttributesInput))
                                .addRange(fieldnum(PdsBatchAttributesInput,ItemId));
            qbrRefRecId   = this.query().dataSourceTable(tablenum(PdsBatchAttributesInput))
                                .addRange(fieldnum(PdsBatchAttributesInput,RefRecId));
            qbrRefTableId = this.query().dataSourceTable(tablenum(PdsBatchAttributesInput))
                                .addRange(fieldnum(PdsBatchAttributesInput,RefTableId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            if (PdsBatchAttrib::find( pdsBatchAttributesInput.PdsBatchAttribId).PdsBatchAttribType == PdsBatchAttribType::Enumerate)
            {
                pdsBatchAttributesInput_PdsBatchAttribValue.lookupButton(0);
            }
            else
            {
                pdsBatchAttributesInput_PdsBatchAttribValue.lookupButton(1);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            if (inventBatch.RecId)
            {
                pdsBatchAttributesInput.PdsBatchAttribReference = inventBatch.InventBatchId;
                pdsBatchAttributesInput.ItemId                  = inventBatch.ItemId;
            }
            else if (inventTransOrigin.RecId)
            {
                pdsBatchAttributesInput.ItemId                  = inventTransOrigin.ItemId;
                pdsBatchAttributesInput.PdsBatchAttribReference = inventTransOrigin.InventTransId;
            }
            else
            {
                pdsBatchAttributesInput.ItemId = itemId;
                pdsBatchAttributesInput.PdsBatchAttribReference = journalId;
            }

            pdsBatchAttributesInput.RefRecId    = refRecid;
            pdsBatchAttributesInput.RefTableId  = refTableId;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>PdsBatchAttribId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (PdsBatchAttrib::find(pdsBatchAttributesInput.PdsBatchAttribId).PdsBatchAttribType == PdsBatchAttribType::Enumerate)
                {
                    pdsBatchAttributesInput_PDSBatchAttribValue.lookupButton(0);
                }
                else
                {
                    pdsBatchAttributesInput_PDSBatchAttribValue.lookupButton(1);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(
                FormControl _formControl,
                str         _filterStr)
            {
                PdsBatchAttrib::lookupPdsBatchAttributes(_formControl,pdsBatchAttributesInput.ItemId);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PdsBatchAttribValue</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(
                FormControl _formControl,
                str         _filterStr)
            {
                if (PdsBatchAttrib::find(pdsBatchAttributesInput.PdsBatchAttribId).PdsBatchAttribType == PdsBatchAttribType::Enumerate)
                {
                    PdsBatchAttribEnumValues::lookupPdsBatchAttribEnumValues(_formControl,pdsBatchAttributesInput.PdsBatchAttribId);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>LoadAttributes</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            PdsBatchAttribByItem        byItem;
            PdsBatchAttribByAttribGroup byGroup;
            PdsBatchAttrib              byAll;
            boolean                     found;

            super();

            found = false;

            while select PdsBatchAttribRelation
                from   byItem
                where  byItem.PdsBatchAttribCode   == TableGroupAll::Table
                    && byItem.PdsBatchAttribItemId  == itemId
            {
                if (!PdsBatchAttributesInput::exist(refRecId, refTableId, byItem.PdsBatchAttribRelation))
                {
                    pdsBatchAttributesInput_ds.create(true);
                    pdsBatchAttributesInput.ItemId              = itemId;
                    pdsBatchAttributesInput.RefTableId          = refTableId;
                    pdsBatchAttributesInput.PdsBatchAttribId    = byItem.PdsBatchAttribRelation;
                    pdsBatchAttributesInput.write();
                }
                found = true;
            }
            while select PdsBatchAttribRelation
                from   byItem
                where  byItem.PdsBatchAttribCode    == TableGroupAll::GroupId
                    && byItem.PdsBatchAttribItemId  == itemId
            {
                while select PdsBatchAttribAttribId
                    from  byGroup
                    where byGroup.PdsBatchAttribGroupId == byItem.PdsBatchAttribRelation
                {
                    if (!PdsBatchAttributesInput::exist(refRecId, refTableId, byGroup.PdsBatchAttribAttribId))
                    {
                        pdsBatchAttributesInput_ds.create(true);
                        pdsBatchAttributesInput.ItemId              = itemId;
                        pdsBatchAttributesInput.RefTableId          = refTableId;
                        pdsBatchAttributesInput.PdsBatchAttribId    = byGroup.PdsBatchAttribAttribId;
                        pdsBatchAttributesInput.write();
                    }
                }
                found = true;
            }

            if (!found)
            {
                while select PdsBatchAttribId
                    from byAll
                {
                    if (!PdsBatchAttributesInput::exist(refRecId, refTableId, byAll.PdsBatchAttribId))
                    {
                        pdsBatchAttributesInput_ds.create(true);
                        pdsBatchAttributesInput.ItemId              = itemId;
                        pdsBatchAttributesInput.RefTableId          = refTableId;
                        pdsBatchAttributesInput.PdsBatchAttribId    = byAll.PdsBatchAttribId;
                        pdsBatchAttributesInput.write();
                    }
                }
            }
            pdsBatchAttributesInput_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PdsBatchAttributesInput_PdsBatchAttribValue</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean         ret;
            PdsBatchAttrib  attrib;

            ret = super();

            if (ret && this.text())
            {
                attrib = PdsBatchAttrib::find(PdsBatchAttributesInput.PdsBatchAttribId);
                ret = attrib.isValidAttribValueType(this.text(),true);

                ret = ret && attrib.checkAttribCriteria(
                                attrib.locale2Storage(this.text()),
                                PdsBatchAttributesInput.ItemId);
            }

            if (!ret)
            {
                pdsBatchAttributesInput_ds.refresh();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PdsBatchAttributesInput</Name>
			<Table>PdsBatchAttributesInput</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribAssignedToBatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@PRO1607</Caption>
		<DataSource xmlns="">PdsBatchAttributesInput</DataSource>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>LoadAttributes</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@PRO1682</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@PRO1608</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FormGroupControl1</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl1</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PdsBatchAttributesInput_PdsBatchAttribId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>PdsBatchAttribId</DataField>
						<DataSource>PdsBatchAttributesInput</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PdsBatchAttributesInput_PdsBatchAttribValue</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>PdsBatchAttribValue</DataField>
						<DataSource>PdsBatchAttributesInput</DataSource>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>PdsBatchAttributesInput</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
