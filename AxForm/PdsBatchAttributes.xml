<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PdsBatchAttributes</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PdsBatchAttributes extends FormRun
{
    QueryBuildRange             qbrBatchId;
    QueryBuildRange             qbrItemId;

    InventDim                   inventDim;
    InventBatch                 inventBatch;
    [FormObservable]
    ItemId                      itemId;
    [FormObservable]
    EcoResProductName           productName;

    InventBatchMergeSelection   batchMergeSelection;

}
]]></Source>
			</Method>
			<Method>
				<Name>batchNumberDisplay</Name>
				<Source><![CDATA[
    public display InventBatchId batchNumberDisplay()
    {
        return inventBatch.inventBatchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the datasource to be editable according to caller.
    /// </summary>
    public void init()
    {
        void allowEdit(boolean _allowEdit = false)
        {
            pdsBatchAttributes_ds.allowCreate(_allowEdit);
            pdsBatchAttributes_ds.allowEdit(_allowEdit);
            pdsBatchAttributes_ds.allowDelete(_allowEdit);
            loadAttributes.enabled(_allowEdit);
        }

        super();

        if (!element.args().caller() || !element.args().record())
        {
            throw error(Error::missingParameter(element.args().caller()));
        }

        switch (element.args().caller().name())
        {
            case formstr(InventTransItem),
                formstr(PdsBatchAttribReserve),
                formstr(PdsBatchAttribInventOnhand),
                formStr(InventTransArchiveForm),
                formStr(InventTransArchivedDetails):
                allowEdit(false);
                break;

            case formstr(InventTrans),
                formstr(PurchEditLines),
                formstr(ProdJournalTransProd),
                formstr(ConsignmentDraftReplenishmentOrderJournal) :
                allowEdit(true);
                break;
        }

        if (element.args().dataset() == tablenum(TmpPdsBatchSelect))
        {
            allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemIdDisplay</Name>
				<Source><![CDATA[
    public display ItemId itemIdDisplay()
    {
        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>productNameDisplay</Name>
				<Source><![CDATA[
    public display EcoResProductName productNameDisplay()
    {
        return productName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Activates and deactivates lookups based on batch attribute type
    /// </summary>
    public void updateDesign()
    {
        switch (pdsBatchAttributes.pdsBatchAttrib().PdsBatchAttribType)
        {
            case PdsBatchAttribType::Enumerate,
                PdsBatchAttribType::Date :
                pdsBatchAttributes_M_editPdsBatchAttribValue.lookupButton(2);
                break;

            default :
                pdsBatchAttributes_M_editPdsBatchAttribValue.lookupButton(1);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCallerRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the new local <c>ItemId</c>, <c>InventDim</c>, and/or <c>InventBatch</c> from a parent record.
    /// </summary>
    /// <param name = "_callerRecord">
    /// The caller record.
    /// </param>
    /// <returns>
    /// true, if the initialization was successful; otherwise, false.
    /// </returns>
    protected boolean initFromCallerRecord(Common _callerRecord)
    {
        switch (_callerRecord.TableId)
        {
            case tablenum(InventBatch) :
                inventBatch = _callerRecord;
                itemId = inventBatch.ItemId;
                return true;

            case tablenum(TmpPdsBatchSelect) :
                TmpPdsBatchSelect tmpPdsBatchSelect = _callerRecord;
                itemId = tmpPdsBatchSelect.ItemId;
                inventDim = Global::getJoinChildFormDataSource(
                        FormDataUtil::getFormDataSource(tmpPdsBatchSelect),
                        tableNum(InventDim)).cursor() as InventDim;
                inventBatch = InventBatch::find(tmpPdsBatchSelect.InventBatchId, itemId);
                return true;

            case tablenum(InventSum) :
                InventSum inventSum = _callerRecord as InventSum;
                itemId = inventSum.ItemId;
                inventDim = Global::getJoinChildFormDataSource(
                        FormDataUtil::getFormDataSource(inventSum),
                        tableNum(InventDim)).cursor() as InventDim;
                inventBatch = InventBatch::find(inventDim.InventBatchId, itemId);
                return true;

            case tablenum(InventTrans) :
                InventTrans inventTrans = _callerRecord;
                itemId = inventTrans.ItemId;
                inventDim = inventTrans.inventDim();
                inventBatch = InventBatch::find(inventDim.InventBatchId, itemId);
                return true;    
            
            case tableNum(WHSInventTransAndWarehouseTransactionView):
                WHSInventTransAndWarehouseTransactionView inventTransAndWarehouseTransaction = _callerRecord;
                itemId = inventTransAndWarehouseTransaction.ItemId;
                inventBatch = InventBatch::find(inventTransAndWarehouseTransaction.InventBatchId, itemId);
                return true;

            case tablenum(InventTransArchive) :
                InventTransArchive inventTransArchive = _callerRecord;
                itemId = inventTransArchive.ItemId;
                inventDim = InventDim::find(inventTransArchive.InventDimId);
                inventBatch = InventBatch::find(inventDim.InventBatchId, itemId);
                return true;

            case tablenum(PurchParmLine) :
                PurchParmLine purchParmLine = _callerRecord;
                itemId = purchParmLine.ItemId;
                inventDim = purchParmLine.inventDim();
                inventBatch = InventBatch::find(inventDim.InventBatchId, itemId);
                return true;

            case tablenum(ProdJournalProd) :
                ProdJournalProd prodJournalProd = _callerRecord;
                itemId = prodJournalProd.ItemId;
                inventDim = InventDim::find(prodJournalProd.InventDimId);
                inventBatch = InventBatch::find(inventDim.InventBatchId, itemId);
                return true;

            case tablenum(InventBatchJournalResult):
                InventBatchJournalResult inventBatchJournalResult = _callerRecord;
                itemId = inventBatchJournalResult.inventBatchJournal().ItemId;
                inventDim = inventBatchJournalResult.inventDim();
                inventBatch = InventBatch::find(inventDim.InventBatchId, itemId);
                return true;

            case tablenum(ConsignmentDraftReplenishmentOrderJournalLine) :
                ConsignmentDraftReplenishmentOrderJournalLine consignmentDraftReplenishmentOrderJournalLine = _callerRecord;
                itemId = consignmentDraftReplenishmentOrderJournalLine.ItemId;
                inventDim = consignmentDraftReplenishmentOrderJournalLine.inventDim();
                inventBatch = InventBatch::find(inventDim.InventBatchId, itemId);
                return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        PdsBatchAttributes localBatchAttributes;
        
        boolean ret = super();
        
        if (ret)        
        {
            while select localBatchAttributes
                where localBatchAttributes.InventBatchId == pdsBatchAttributes.InventBatchId &&
                      localBatchAttributes.ItemId        == pdsBatchAttributes.ItemId            
            {
                ret = localBatchAttributes.validateWrite();
                if (!ret)                
                {
                    break;                    
                }
            }
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PdsBatchAttributes</Name>
				<Methods>
					<Method>
						<Name>getBaseValue</Name>
						<Source><![CDATA[
        public display PDSBaseValue getBaseValue(PdsBatchAttributes _attrib)
        {
            PDSBaseValue value = '';

            if (hasFieldAccess(tableNum(PdsBatchAttribByItem), fieldNum(PdsBatchAttribByItem, PDSBaseValue), AccessType::View))
            {
                value = PdsBatchAttribByItem::findItemId(_attrib.ItemId,_attrib.PdsBatchAttribId,TableGroupAll::Table).PDSBaseValue;
            }

            return value;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            if (!element.args().record() || !element.initFromCallerRecord(element.args().record()))
            {
                throw error(Error::missingParameter(element.args().caller()));
            }

            productName = InventTable::find(itemId).itemName();
            batchMergeSelection = InventBatchMergeSelection::newItemDim(itemId, inventDim);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            if (inventBatch)
            {
                qbrBatchId.value(inventBatch.InventBatchId);
                qbrItemId.value(inventBatch.ItemId);
            }
            else
            {
                qbrItemId.value(itemId);
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            qbrBatchId = this.query().dataSourceTable(
                tablenum(PdsBatchAttributes)).addRange(
                    fieldnum(PdsBatchAttributes,InventBatchId));
            qbrItemId = this.query().dataSourceTable(
                tablenum(PdsBatchAttributes)).addRange(
                    fieldnum(PdsBatchAttributes,ItemId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.updateDesign();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            pdsBatchAttributes.InventBatchId = inventBatch.InventBatchId;
            pdsBatchAttributes.ItemId        = inventBatch.ItemId;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>PdsBatchAttribId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                PdsBatchAttributes_ds.cacheCalculateMethod(tableMethodStr(PdsBatchAttributes, pdsBatchAttribMax));
                PdsBatchAttributes_ds.cacheCalculateMethod(tableMethodStr(PdsBatchAttributes, pdsBatchAttribMin));
                PdsBatchAttributes_ds.cacheCalculateMethod(tableMethodStr(PdsBatchAttributes, getAttributeDefinedOrOverrideTargetValue));

                element.updateDesign();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                PdsBatchAttrib::lookupPdsBatchAttributes(
                    _formControl,pdsBatchAttributes.ItemId);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>LoadAttributes</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Clicked of the load attributes form button: refresh data source if attributes relation found.
        /// </summary>
        public void clicked()
        {
            super();

            InventBatch::pdsLoadAttributes(inventBatch);

            pdsBatchAttributes_ds.research();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventBatchJournalMerge</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args = new Args();

            args.caller(element);
            args.parmObject(batchMergeSelection);
            this.menufunction().run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PdsBatchAttributes_M_editPdsBatchAttribValue</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            pdsBatchAttributes.lookupPdsBatchAttribValue(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean         ret;
            PdsBatchAttrib  attrib;

            ret = super();

            if (ret && this.text())
            {
                attrib = pdsBatchAttributes.pdsBatchAttrib();
                ret = attrib.isValidAttribValueType(this.text(),true);
            }

            if (!ret)
            {
                pdsBatchAttributes_ds.refresh();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSourceChangeGroupMode>ImplicitInnerOuter</DataSourceChangeGroupMode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PdsBatchAttributes</Name>
			<Table>PdsBatchAttributes</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>InventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribQualityOrderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsBatchAttribValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PDSInherited</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<OptionalRecordMode>None</OptionalRecordMode>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@PRO1607</Caption>
		<DataSource xmlns="">PdsBatchAttributes</DataSource>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<TitleDataSource xmlns="">PdsBatchAttributes</TitleDataSource>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>LoadAttributes</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@PRO1682</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<Text>@PRO1608</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>InventBatchJournalMerge</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MenuItemName>InventBatchJournalMergeCreate</MenuItemName>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FormBody</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilter</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid1</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid1</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PdsBatchAttributes_PdsBatchAttribId1</Name>
						<ElementPosition>536870910</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_CostManagement:PdsBatchAttributes_PdsBatchAttributes_PdsBatchAttribId1</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>PdsBatchAttribId</DataField>
						<DataSource>PdsBatchAttributes</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>PdsBatchAttrib_PdsBatchAttribMin</Name>
						<ElementPosition>805306365</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_CostManagement:PdsBatchAttributes_PdsBatchAttrib_PdsBatchAttribMin</HelpText>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>pdsBatchAttribMin</DataMethod>
						<DataSource>PdsBatchAttributes</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>PdsBatchAttrib_PdsBatchAttribMax</Name>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_CostManagement:PdsBatchAttributes_PdsBatchAttrib_PdsBatchAttribMax</HelpText>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>pdsBatchAttribMax</DataMethod>
						<DataSource>PdsBatchAttributes</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PdsBatchAttrib_PdsBatchAttribTarget</Name>
						<ElementPosition>1342177275</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_CostManagement:PdsBatchAttributes_PdsBatchAttrib_PdsBatchAttribTarget</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>getAttributeDefinedOrOverrideTargetValue</DataMethod>
						<DataSource>PdsBatchAttributes</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PdsBatchAttributes_M_editPdsBatchAttribValue</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612730</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_CostManagement:PdsBatchAttributes_PdsBatchAttributes_M_editPdsBatchAttribValue</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>batchAttribValue</DataMethod>
						<DataSource>PdsBatchAttributes</DataSource>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PdsBatchAttributes_PdsBatchAttribQualityOrderId</Name>
						<ElementPosition>1879048185</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@FieldDescriptions_CostManagement:PdsBatchAttributes_PdsBatchAttributes_PdsBatchAttribQualityOrderId</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>PdsBatchAttribQualityOrderId</DataField>
						<DataSource>PdsBatchAttributes</DataSource>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>PdsBatchAttributes</DataSource>
				<GridLinesStyle>Vertical</GridLinesStyle>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
