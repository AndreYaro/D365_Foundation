<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PlanActivityServiceWizard</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PlanActivityServiceWizard extends FormRun implements PlanIPlanActivityServiceForm
{
    #define.PageSubcontractingService(1)
    #define.PageOutputProducts(2)
    #define.PageServiceTerms(3)
    #define.PageCompleted(4)

    #define.defaultQuantity(1.0)

    PlanActivityServiceWizard   sysWizard;
    PlanActivity                callerPlanActivity;
    RefRecId                    processQuantityUnitOfMeasure;

    boolean                     ignoreValidation;

    InventDimCtrl_Frm           inventDimForm_Ctrl;

    InventDimId                 serviceItemInventDimId;
    AgreementLine               agreementLine;
    UnitOfMeasure               serviceUnitOfMeasure;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        this.createServiceActivity();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createServiceInventDim</Name>
				<Source><![CDATA[
    protected InventDim createServiceInventDim()
    {
        #InventDimDevelop
        InventDim serviceInventDim;

        serviceInventDim.ConfigId       = useOutputConfiguration.checked() ? '' : productDimensions_ConfigId.text();
        serviceInventDim.InventColorId  = useOutputColor.checked() ? '' : productDimensions_InventColorId.text();
        serviceInventDim.InventStyleId  = useOutputStyle.checked() ? '' : productDimensions_InventStyleId.text();
        serviceInventDim.InventVersionId  = useOutputVersion.checked() ? '' : productDimensions_InventVersionId.text();
        serviceInventDim.InventSizeId   = useOutputSize.checked() ? '' : productDimensions_InventSizeId.text();

        return serviceInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createServiceInventDimParm</Name>
				<Source><![CDATA[
    protected InventDimParm createServiceInventDimParm()
    {
        #InventDimDevelop
        InventDimParm serviceInventDimParm;

        serviceInventDimParm.ConfigIdFlag       = useOutputConfiguration.checked();
        serviceInventDimParm.InventColorIdFlag  = useOutputColor.checked();
        serviceInventDimParm.InventStyleIdFlag  = useOutputStyle.checked();
        serviceInventDimParm.InventVersionIdFlag  = useOutputVersion.checked();
        serviceInventDimParm.InventSizeIdFlag   = useOutputSize.checked();

        return serviceInventDimParm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createServiceActivity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Triggers the activity creation process.
    /// </summary>
    /// <remarks>
    /// The method will create all entities related and required for a complete
    /// <c>LeanProductionFlowActivity</c> representation.
    /// </remarks>
    public void createServiceActivity()
    {
        InventDim serviceInventDim = this.createServiceInventDim();
        InventDimParm serviceInventDimParm = this.createServiceInventDimParm();

        PlanActivityService::createPlanActivityService(
            callerPlanActivity.RecId,
            serviceItem.text(),
            getCompany(tableNum(InventTable), curext()),
            InventDim::findOrCreate(serviceInventDim).InventDimId,
            getCompany(tableNum(InventDim), curext()),
            UnitOfMeasure::findBySymbol(serviceUnit.text()).RecId,
            serviceRatio.realValue(),
            serviceQuantityBase.selection(),
            defaultService.checked(),
            PurchAgreementHeader::findAgreementId(purchaseAgreement.text()).RecId,
            this.tempTable2Con(planActivityTmpServiceOutputProducts),
            carrierCode.text(),
            getCompany(tableNum(TMSCarrier), curext()),
            serviceInventDimParm);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Object caller;

        super();

        caller = element.args().caller();

        if (caller
            && SysDictClass::isEqualOrSuperclass(classIdGet(caller),classNum(PlanActivityServiceWizard)))
        {
            sysWizard = caller;
            callerPlanActivity.data(sysWizard.parmPlanActivity());
        }
        else
        {
            PlanActivityServiceWizard::main(new Args());
            element.closeCancel();
        }

        this.updateDesign(InventDimFormDesignUpdate::Init);

        if (callerPlanActivity.PlanActivityType == PlanActivityType::Transfer)
        {
            carrierCode.enabled(callerPlanActivity.FreightedBy == WMSFreightedBy::Carrier);
            freightedBy.selection(callerPlanActivity.FreightedBy);

            if (carrierCode.enabled())
            {
                serviceItem.allowEdit(false);
            }
        }
        else
        {
            groupShipping.visible(false);
            serviceItem.allowEdit(true);
        }

        serviceVendor.text(callerPlanActivity.vendor());
        serviceQuantityBase.selection(PlanActivityServiceQuantityBase::Jobs);

        // Add service to activity %1
        element.design().caption(strFmt("@SYS332406", callerPlanActivity.Name));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    public InventDimCtrl_Frm inventDimSetupObject()
    {
        return inventDimForm_Ctrl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>plan</Name>
				<Source><![CDATA[
    public Plan plan()
    {
        return sysWizard.parmPlan();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshMandatoryControl</Name>
				<Source><![CDATA[
    public void refreshMandatoryControl(FormStringControl _formStringControl)
    {
        if (!_formStringControl.mandatory())
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        if (   _formStringControl.text()
            && !sysWizard.nextEnabled())
        {
            element.setNext();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        if (!callerPlanActivity.areServicesAssociated())
        {
            defaultService.checked(true);
            defaultService.clicked();

            sysWizard.setTabsToSkip(true, #PageOutputProducts);
        }

        freightedBy.selection(callerPlanActivity.FreightedBy);

        defaultService.allowEdit(false);

        element.setNext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>serviceFormulaPreview</Name>
				<Source><![CDATA[
    public void serviceFormulaPreview()
    {
        serviceQuantityCalculationFormulaPreview.text(PlanActivityService::serviceFormulaPreview(serviceQuantityBase.selection(),
                                                      serviceUnit.text(),
                                                      serviceRatio.realValue()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAgreement</Name>
				<Source><![CDATA[
    public void setAgreement(PurchAgreementId _purchAgreementId)
    {
        purchaseAgreement.text(_purchAgreementId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAgreementLine</Name>
				<Source><![CDATA[
    public void setAgreementLine(AgreementLine _agreementLine)
    {
        UnitOfMeasureSymbol unitOfMeasureItem;

        agreementLine = _agreementLine;

        // Get unit of measure from the agreement line
        unitOfMeasureItem = AgreementLineQuantityCommitment::find(agreementLine.RecId).ProductUnitOfMeasure;

        // If no unit of measure is specified on the agreement line get the unit from the item
        if (!unitOfMeasureItem)
        {
            unitOfMeasureItem = InventTableModule::find(agreementLine.ItemId, ModuleInventPurchSales::Purch).UnitId;
        }

        // Use the found unit as the default service unit
        serviceUnit.text(unitOfMeasureItem);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNext</Name>
				<Source><![CDATA[
    public void setNext()
    {
        boolean ok = true;

        switch (sysWizard.curTab())
        {
            case #PageSubcontractingService:
                ok =    serviceVendor.text() != ''
                     && (carrierCode.text() != '' || !groupShipping.visible() || !carrierCode.enabled())
                     && serviceItem.text() != ''
                     && purchaseAgreement.text() != ''
                     && (PlanActivityService::validateCarrierCode(carrierCode.text()) || !groupShipping.visible() || !carrierCode.enabled());
                break;

            case #PageServiceTerms:
                ok =    serviceRatio.realValue() > 0
                     && serviceUnit.text() != '';
                break;
        }

        sysWizard.nextEnabled(ok, sysWizard.curTab(), false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setServiceItemInventDimId</Name>
				<Source><![CDATA[
    public void setServiceItemInventDimId(InventDimId _inventDimId)
    {
        serviceItemInventDimId = _inventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tab</Name>
				<Source><![CDATA[
    public FormTabControl tab()
    {
        return tab;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tempTable2Con</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serializes the contents of a temporary table to a <c>Container</c>.
    /// </summary>
    /// <param name="_tempTable">
    /// The temporary table buffer.
    /// </param>
    /// <returns>
    /// A <c>Container</c> holding the serialized contents of the temporary table.
    /// </returns>
    private container tempTable2Con(Common _tempTable)
    {
        container result = conNull();

        while select _tempTable
        {
            result += [buf2Con(_tempTable)];
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Triggers design updates to create or update the <c>InventDimForm</c> helpers.
    /// </summary>
    /// <param name="_mode">
    ///    An <c>InventDimFormDesignUpdate</c> value specifying what type of action this is; for example,
    ///    initialize, or update.
    /// </param>
    /// <exception cref="Exception::Error">
    ///    An invalid parameter was passed.
    /// </exception>
    public void updateDesign(InventDimFormDesignUpdate _mode = InventDimFormDesignUpdate::Active)
    {
        switch (_mode)
        {
            case InventDimFormDesignUpdate::Init:
                if (!inventDimForm_Ctrl)
                {
                    inventDimForm_Ctrl = InventDimCtrl::newFromFormValidDataSource(element, inventDimOutputProducts_ds.name());
                    inventDimForm_Ctrl.parmDimParmVisibleGrid(PlanActivityForm::inventDimParmShowServiceOutput());
                    inventDimForm_Ctrl.parmDimParmLockedRightClick(PlanActivityForm::inventDimParmLockedServiceOutput());
                }
            // fall through
            case InventDimFormDesignUpdate::Active,
                 InventDimFormDesignUpdate::FieldChange:
                inventDimForm_Ctrl.parmDimParmEnabled(PlanActivityForm::inventDimParmEnabled(planActivityTmpServiceOutputProducts.ItemId));
                inventDimForm_Ctrl.formSetControls(true);
                break;

            default:
                throw error(strFmt("@SYS54195", funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTab</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the presence of the mandatory fields in the temp tables.
    /// </summary>
    /// <param name="_tabPage">
    /// The tab page to be validated.
    /// </param>
    /// <returns>
    /// true if the page is valid; false otherwise.
    /// </returns>
    public boolean validateTab(int _tabPage)
    {
        boolean ok = true;

        switch (_tabPage)
        {
            case #PageSubcontractingService:
                ok = true;
                break;

            case #PageOutputProducts:
                boolean recordAddedToOutputProduct = false;
                // go over all locations and validate fields
                while select planActivityTmpServiceOutputProducts
                {
                    ok = ok && planActivityTmpServiceOutputProducts.validateWrite();
                    recordAddedToOutputProduct = true;

                    if (!ok)
                    {
                        break;
                    }
                }

                if (ok && recordAddedToOutputProduct == false)
                {
                    ok = checkFailed("@SCM:MissingOutputProduct");
                }
                break;
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendorAccount</Name>
				<Source><![CDATA[
    public VendAccount vendorAccount()
    {
        return serviceVendor.text();
    }

]]></Source>
			</Method>
			<Method>
				<Name>wizard</Name>
				<Source><![CDATA[
    public SysWizard wizard()
    {
        return sysWizard;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PlanActivityTmpServiceOutputProducts</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            planActivityTmpServiceOutputProducts.InventDimId = InventDim::findOrCreate(inventDimOutputProducts).InventDimId;

            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            InventDim   inventDim;

            inventDim = InventDim::findOrCreate(inventDimOutputProducts);

            planActivityTmpServiceOutputProducts.InventDimId = inventDim.InventDimId;

            if (planActivityTmpServiceOutputProducts.InventDimId != inventDimOutputProducts.InventDimId)
            {
                inventDimOutputProducts.data(inventDim);
                inventDimOutputProducts_ds.setCurrent();
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int result = super();

            element.updateDesign();

            return result;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventDimOutputProducts</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // Do not call super()
            //super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>InventDimServiceProductDimensions</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            // Do not call super()
            //super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Tab</Name>
				<Type>Tab</Type>
				<Methods>
					<Method>
						<Name>tabChange</Name>
						<Source><![CDATA[
        public boolean tabChange(int _fromTab)
        {
            boolean ret = false;

            if (!ignoreValidation)
            {
                if (   sysWizard.curTab() < _fromTab
                    || element.validateTab(_fromTab))
                {
                    ret = super(_fromTab);
                }
                else
                {
                    ignoreValidation = true;
                    sysWizard.back();
                    ignoreValidation = false;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>tabChanged</Name>
						<Source><![CDATA[
        public void tabChanged(
            int _fromTab,
            int _toTab)
        {
            super(_fromTab, _toTab);

            element.setNext();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CarrierCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            // Clear item selection as it might not be valid anymore
            serviceItem.text('');

            if (PlanActivityService::validateCarrierCode(this.text()))
            {
                serviceVendor.text(PlanActivityService::vendorAccountCarrierCompany(this.text()));

                if (serviceVendor.text() == '')
                {
                    // Only carriers from companies with a vendor account can be used for the service activity
                    ret = checkFailed("@SYS332097");
                }
            }
            else
            {
                // "Invalid carrier id specified
                ret = checkFailed("@SYS332134");
            }

            serviceItem.allowEdit(serviceVendor.text() != '');

            element.setNext();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args args = new Args(formStr(TmsCarrierCodeLookup));
            args.caller(this);

            FormRun lookupFormRun = new FormRun(Args);
            lookupFormRun.init();
            lookupFormRun.showCarrierWithVendor();

            this.performFormLookup(lookupFormRun);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ServiceItem</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args   args = new Args();
            Object formRun;

            args.name(formStr(PlanActivityServiceItemLookup));
            args.caller(element);

            formRun = classfactory.formRunClass(args);

            formRun.init();

            this.performFormLookup(formRun);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            AgreementLine   selectedAgreementLine;
            boolean         ret;

            ret = super();

            // Was item not selected through the lookup
            if (this.text() != agreementLine.ItemId)
            {
                selectedAgreementLine = PlanActivityService::findMatchingAgreementLine(element.vendorAccount(),
                                                                                       this.text(),
                                                                                       curext(),
                                                                                       element.plan());

                if (selectedAgreementLine)
                {
                    element.setAgreement(PurchAgreementHeader::find(selectedAgreementLine.Agreement).PurchNumberSequence);
                }
                else
                {
                    // Item %1 is not found in any active purchase agreement for vendor %2
                    error(strFmt("@SYS339395", this.text(), element.vendorAccount()));
                    this.text('');
                    element.setAgreement('');
                }

                element.setAgreementLine(selectedAgreementLine);
                element.setServiceItemInventDimId(selectedAgreementLine.InventDimId);
            }

            planActivityTmpServiceWizardItemSelect.ItemId       = this.text();
            planActivityTmpServiceWizardItemSelect.InventDimId  = serviceItemInventDimId;
            planActivityTmpServiceWizardItemSelect_ds.refresh();

            inventDimServiceProductDimensions.data(InventDim::find(serviceItemInventDimId));
            inventDimServiceProductDimensions_ds.refresh();

            element.setNext();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if (!InventTable::find(this.text()))
            {
                // Item %1 is not found in any active purchase agreement for vendor %2
                ret = checkFailed(strFmt("@SYS339395", this.text(), element.vendorAccount()));
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OutputProducts_ItemId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean result = super();

            element.updateDesign(InventDimFormDesignUpdate::FieldChange);

            return result;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TabServiceTerms</Name>
				<Type>TabPage</Type>
				<Methods>
					<Method>
						<Name>pageActivated</Name>
						<Source><![CDATA[
        public void pageActivated()
        {
            super();

            element.serviceFormulaPreview();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UseOutputConfiguration</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (this.checked())
            {
                productDimensions_configId.allowEdit(false);
            }
            else
            {
                productDimensions_configId.allowEdit(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UseOutputSize</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (this.checked())
            {
                productDimensions_InventSizeId.allowEdit(false);
            }
            else
            {
                productDimensions_InventSizeId.allowEdit(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UseOutputColor</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (this.checked())
            {
                productDimensions_InventColorId.allowEdit(false);
            }
            else
            {
                productDimensions_InventColorId.allowEdit(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UseOutputStyle</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (this.checked())
            {
                productDimensions_InventStyleId.allowEdit(false);
            }
            else
            {
                productDimensions_InventStyleId.allowEdit(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UseOutputVersion</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (this.checked())
            {
                productDimensions_InventVersionId.allowEdit(false);
            }
            else
            {
                productDimensions_InventVersionId.allowEdit(true);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ServiceRatio</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean ret;

            ret = super();

            element.serviceFormulaPreview();

            element.setNext();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.serviceFormulaPreview();

            element.setNext();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ServiceUnit</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            FormRun         formRun;
            Args            args;
            AgreementLine   agreementLineUnit;

            args = new Args(formStr(UnitOfMeasureLookup));

            args.caller(this);
            if (agreementLine.RecId)
            {
                agreementLineUnit = AgreementLine::find(agreementLine.RecId);
                args.record(agreementLineUnit);
            }

            formRun = classfactory.formRunClass(args);

            this.performFormLookup(formRun);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            serviceUnitOfMeasure = UnitOfMeasure::findBySymbol(this.text());

            if (!serviceUnitOfMeasure)
            {
                // The specified unit of measure (%1) is incorrect
                error(strFmt("@SYS332400", this.text()));

                this.text('');
            }
            else
            if (serviceQuantityBase.selection() == PlanActivityServiceQuantityBase::ActivityTime && !serviceUnitOfMeasure.belongsToUnitOfMeasureClass(UnitOfMeasureClass::Time))
            {
                this.text('');
            }

            element.serviceFormulaPreview();

            element.setNext();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ServiceQuantityBase</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.serviceFormulaPreview();

            element.setNext();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if (this.selection() == PlanActivityServiceQuantityBase::ActivityTime && !serviceUnitOfMeasure.belongsToUnitOfMeasureClass(UnitOfMeasureClass::Time, true))
            {
                // The option, Activity time, can only be used with the service unit class Time. Select the service unit class, Time, to use with Activity time, or select a different service quantity base.
                ret = checkFailed("@SYS332401");
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PlanActivityTmpServiceOutputProducts</Name>
			<Table>PlanActivityTmpServiceOutputProducts</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDimOutputProducts</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension10</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension5</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension6</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension7</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension8</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension9</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1HashHex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PlanActivityTmpServiceOutputProducts</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDimServiceProductDimensions</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension10</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension5</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension6</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension7</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension8</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimension9</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1HashHex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PlanActivityTmpServiceWizardItemSelect</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PlanActivityTmpServiceWizardItemSelect</Name>
			<Table>PlanActivityTmpServiceWizardItemSelect</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS331794</Caption>
		<Pattern xmlns="">Wizard</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Wizard</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Width xmlns="">700</Width>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabSubcontractingService</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1070945620</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstructionSubcontractingService</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@SYS331790</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BodySubcontractingService</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ServiceVendor</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>VendAccount</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>GroupShipping</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>FreightedBy</Name>
												<AllowEdit>No</AllowEdit>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<NeededPermission>Update</NeededPermission>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<EnumType>WMSFreightedBy</EnumType>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CarrierCode</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>TMSCarrierCode</ExtendedDataType>
											</AxFormControl>
										</Controls>
										<Breakable>No</Breakable>
										<Caption>@SYS88262</Caption>
										<FrameType>None</FrameType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ServiceItem</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>ItemId</ExtendedDataType>
										<Label>@SYS25500</Label>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PurchaseAgreement</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>PurchAgreementId</ExtendedDataType>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>DefaultService</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:PlanActivityServiceWizard_DefaultService</HelpText>
										<NeededPermission>Update</NeededPermission>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS27587</Label>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS331795</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabOutputProducts</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1606418430</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstructionOutputProducts</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@SYS332106</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BodyOutputProducts</Name>
								<Pattern>ToolbarList</Pattern>
								<PatternVersion>1.2</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneControl">
										<Name>ActionPane</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ActionPane</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneTabControl">
												<Name>ActionPaneTab</Name>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>ActionPaneTab</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>ButtonGroup</Name>
														<ElementPosition>1073741823</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>buttonAdd</Name>
																<ElementPosition>858993458</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>New</Command>
																<NormalImage>Add</NormalImage>
																<Text>@SYS301705</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>buttonRemove</Name>
																<ElementPosition>1288490187</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>DeleteRecord</Command>
																<MultiSelect>Yes</MultiSelect>
																<NeedsRecord>Yes</NeedsRecord>
																<NormalImage>Delete</NormalImage>
																<Text>@SYS301706</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>ShowDimensions</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1717986916</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<HelpText>@SYS309569</HelpText>
																<Type>MenuFunctionButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<MenuItemName>InventDimParmFixedAction</MenuItemName>
																<SaveRecord>No</SaveRecord>
																<ShowShortCut>No</ShowShortCut>
																<Text>@SYS5951</Text>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>PlanActivityTmpServiceOutputProducts</DataSource>
										<Style>Strip</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGridControl">
										<Name>GridOutputProducts</Name>
										<ElementPosition>1610612734</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Grid</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>OutputProducts_ItemId</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<DataField>ItemId</DataField>
												<DataSource>PlanActivityTmpServiceOutputProducts</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>OutputProductsInventoryDimensions</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>OutputProductsInventoryDimensions_configId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>configId</DataField>
														<DataSource>InventDimOutputProducts</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>OutputProductsInventoryDimensions_InventSizeId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventSizeId</DataField>
														<DataSource>InventDimOutputProducts</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>OutputProductsInventoryDimensions_InventColorId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventColorId</DataField>
														<DataSource>InventDimOutputProducts</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>OutputProductsInventoryDimensions_InventStyleId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventStyleId</DataField>
														<DataSource>InventDimOutputProducts</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>OutputProductsInventoryDimensions_InventVersionId</Name>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>String</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventVersionId</DataField>
														<DataSource>InventDimOutputProducts</DataSource>
													</AxFormControl>
												</Controls>
												<BackgroundColor>WindowBackground</BackgroundColor>
												<DataGroup>ProductDimensions</DataGroup>
												<DataSource>InventDimOutputProducts</DataSource>
											</AxFormControl>
										</Controls>
										<DataSource>PlanActivityTmpServiceOutputProducts</DataSource>
										<Style>Tabular</Style>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@SYS331792</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabServiceTerms</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1872756734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstructionServiceTerms</Name>
								<Type>StaticText</Type>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text>@SYS332105</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BodyServiceTerms</Name>
								<Pattern>Custom</Pattern>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ServiceProductDimensions</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ProductDimensions</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProductDimensions_configId</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>configId</DataField>
														<DataSource>InventDimServiceProductDimensions</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProductDimensions_InventSizeId</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventSizeId</DataField>
														<DataSource>InventDimServiceProductDimensions</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProductDimensions_InventColorId</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventColorId</DataField>
														<DataSource>InventDimServiceProductDimensions</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProductDimensions_InventStyleId</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventStyleId</DataField>
														<DataSource>InventDimServiceProductDimensions</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>ProductDimensions_InventVersionId</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>InventVersionId</DataField>
														<DataSource>InventDimServiceProductDimensions</DataSource>
													</AxFormControl>
												</Controls>
												<DataGroup>ProductDimensions</DataGroup>
												<DataSource>InventDimServiceProductDimensions</DataSource>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>UseOutputProductDimensions</Name>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Group</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>UseOutputConfiguration</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>858993458</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<NeededPermission>Update</NeededPermission>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Label>@SYS331788</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>UseOutputSize</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1288490187</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<NeededPermission>Update</NeededPermission>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Label>@SYS331787</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>UseOutputColor</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1717986916</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<NeededPermission>Update</NeededPermission>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Label>@SYS331789</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>UseOutputStyle</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1932735281</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<NeededPermission>Update</NeededPermission>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Label>@FPK270021</Label>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>UseOutputVersion</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1932735281</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<NeededPermission>Update</NeededPermission>
														<Type>CheckBox</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Label>@SCM:UseOutputProductVersion</Label>
													</AxFormControl>
												</Controls>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<Columns>2</Columns>
										<Caption>@SYS70071</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ServiceQuantityCalculation</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>ServiceRatio</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>Real</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<AllowNegative>No</AllowNegative>
												<Label>@SYS331574</Label>
												<Mandatory>Yes</Mandatory>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ServiceUnit</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741823</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
												<Label>@SYS331571</Label>
												<Mandatory>Yes</Mandatory>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>ServiceQuantityBase</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Update</NeededPermission>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<EnumType>PlanActivityServiceQuantityBase</EnumType>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStaticTextControl">
												<Name>ServiceQuantityCalculationFormulaPreview</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1789569705</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>StaticText</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Text></Text>
											</AxFormControl>
										</Controls>
										<Caption>@SYS331569</Caption>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@SYS331793</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabCompleteWizard</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>2139095038</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<HelpText>@SYS300904</HelpText>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>MainInstructionCompleteWizard</Name>
								<Type>StaticText</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Style>MainInstruction</Style>
								<Text></Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BodyCompleteWizard</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<ColumnsMode>Fill</ColumnsMode>
							</AxFormControl>
						</Controls>
						<Caption>@SYS102606</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>
