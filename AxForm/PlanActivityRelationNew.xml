<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PlanActivityRelationNew</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PlanActivityRelationNew extends FormRun
{
    LeanProdFlowPlanActivityRelation    leanProdFlowPlanActivityRelation;
    PlanActivityRelationFormMode        formMode;

    PlanPlanActivity                    callerPlanPlanActivity;
    PlanActivityId                      callerActivityId;
    Plan                                callerPlan;

}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        PlanActivityRelationship    planActivityRelationship;
        Object                      caller = this.args().caller();

        if (!groupConstraint.optionValue()
            || unitOfMeasure.validate())
        {
            switch (formMode)
            {
                case PlanActivityRelationFormMode::Edit:
                    leanProdFlowPlanActivityRelation.editRelation(
                                                                                !groupConstraint.optionValue(),
                                                                                constraintValue.realValue(),
                                                                                UnitOfMeasure::unitOfMeasureIdBySymbol(unitOfMeasure.text()),
                                                                                cycleTime.realValue()
                                                                                );
                    break;

                case PlanActivityRelationFormMode::Create:
                    planActivityRelationship = LeanProdFlowPlanActivityRelation::createRelation(callerPlanPlanActivity.Plan,
                                                                                predecessorActivityId.text(),
                                                                                sucessorActivityId.text(),
                                                                                constraintValue.realValue(),
                                                                                UnitOfMeasure::unitOfMeasureIdBySymbol(unitOfMeasure.text()),
                                                                                cycleTime.realValue()
                                                                                );
                    break;
            }

            if (caller && formHasMethod(element.args().caller(), identifierStr(refreshRelations)))
            {
                // Refresh the relations
                this.args().caller().refreshRelations();
            }

            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Common argsRecord;

        if (!element.args()
            || !element.args().record()
            || !element.args().caller())
        {
            throw error(Error::missingFormActiveBuffer(this.name()));
        }

        super();

        argsRecord = element.args().record();

        switch (argsRecord.TableId)
        {
            case tableNum(LeanProdFlowPlanActivityRelation):
                formMode = PlanActivityRelationFormMode::Edit;
                this.initForEdit(argsRecord);
                break;

            case tableNum(PlanPlanActivity):
                formMode = PlanActivityRelationFormMode::Create;
                this.initForCreate(argsRecord);
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initForCreate</Name>
				<Source><![CDATA[
    public void initForCreate(Common _buffer)
    {
        RecId           productionFlowDefaultTimeUnit;
        UnitOfMeasure   unit;

        callerPlanPlanActivity = _buffer;
        callerActivityId = PlanActivity::find(callerPlanPlanActivity.PlanActivity).PlanActivityId;
        callerPlan = Plan::find(callerPlanPlanActivity.Plan);

        if (element.args().parmEnum() == PlanActivityCreateRelationType::Predecessor)
        {
            sucessorActivityId.text(callerActivityId);
            sucessorActivityId.enabled(false);
            element.setSuccessorDisplays();
        }
        else
        {
            predecessorActivityId.text(callerActivityId);
            predecessorActivityId.enabled(false);
            element.setPredecessorDisplays();
        }

        productionFlowDefaultTimeUnit = ProdParameters::find().ProductionFlowDefaultTimeUnit;

        select firstonly Symbol from unit where unit.RecId == productionFlowDefaultTimeUnit;

        if (unit)
        {
            unitOfMeasure.text(unit.Symbol);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initForEdit</Name>
				<Source><![CDATA[
    public void initForEdit(Common _buffer)
    {
        PlanActivityRelationship    planActivityRelation;
        PlanActivity                independentActivity, dependentActivity;
        LeanProductionFlow          flow;

        element.design().caption("@SYS4004602");

        leanProdFlowPlanActivityRelation = _buffer;
        planActivityRelation = PlanActivityRelationship::find(leanProdFlowPlanActivityRelation.PlanActivityRelationship);

        if (!planActivityRelation.RecId)
        {
            throw error("@SYS4004603");
        }

        independentActivity = planActivityRelation.independentActivity();
        dependentActivity = planActivityRelation.dependentActivity();

        flow = LeanProductionFlow::find(leanProdFlowPlanActivityRelation.ProductionFlow);
        callerPlan = flow.plan();

        sucessorActivityId.text(dependentActivity.PlanActivityId);
        sucessorActivityId.enabled(false);
        element.setSuccessorDisplays();

        predecessorActivityId.text(independentActivity.PlanActivityId);
        predecessorActivityId.enabled(false);
        element.setPredecessorDisplays();

        element.setGroupConstraintState();
        element.setOKButtonState();

        cycleTime.realValue(leanProdFlowPlanActivityRelation.CycleTimeRatio);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setGroupConstraintState</Name>
				<Source><![CDATA[
    public void setGroupConstraintState()
    {
        PlanActivity                planActivitySuccessor;
        PlanActivity                planActivityPredecessor;
        PlanActivityId              planActivityIdSuccessor;
        PlanActivityId              planActivityIdPredecessor;
        PlanActivityRelationship    planActivityRelationship;
        PlanSequenceConstraintValue planSequenceConstraintValue;

        planActivityIdSuccessor = sucessorActivityId.text();
        planActivityIdPredecessor = predecessorActivityId.text();

        if (!planActivityIdSuccessor || !planActivityIdPredecessor)
        {
            return;
        }

        planActivitySuccessor = PlanActivity::findPlanActivityId(planActivityIdSuccessor);
        planActivityPredecessor = PlanActivity::findPlanActivityId(planActivityIdPredecessor);

        planActivityRelationship = PlanActivityRelationship::findPlanActivity(planActivityPredecessor.RecId, planActivitySuccessor.RecId);

        if (planActivityRelationship &&
            planActivityRelationship.Constraint)
        {
            planSequenceConstraintValue = PlanSequenceConstraintValue::findConstraintRoleType(planActivityRelationship.Constraint, ConstraintRoleTypes::Minimum);
        }

        if (planSequenceConstraintValue.RecId)
        {
            groupConstraint.optionValue(1);
            constraintValue.realValue(planSequenceConstraintValue.Value);
            unitOfMeasure.text(UnitOfMeasure::find(planSequenceConstraintValue.UnitOfMeasure).Symbol);
        }
        else
        {
            groupConstraint.optionValue(0);
            constraintValue.realValue(0.0);
            unitOfMeasure.text('');
        }

        groupConstraint.enabled(formMode == PlanActivityRelationFormMode::Edit ?
                                    planActivityRelationship.RecId :
                                    !planActivityRelationship.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOKButtonState</Name>
				<Source><![CDATA[
    public void setOKButtonState()
    {
        buttonOK.enabled(predecessorActivityId.text() != '' && sucessorActivityId.text() != '' &&
                        (groupConstraint.optionValue() == 0 || unitOfMeasure.text() != ''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPredecessorDisplays</Name>
				<Source><![CDATA[
    public void setPredecessorDisplays()
    {
        PlanActivity    planActivity;
        PlanReference   planReference;

        planActivity = PlanActivity::findPlanActivityId(predecessorActivityId.text());

        if (planActivity)
        {
            predecessorActivityName.text(planActivity.Name);

            planReference = PlanReference::find(planActivity.PlanReference);

            predecessorProductionFlow.text(planReference.PlanName);

            predecessorProductionFlowVersion.value(callerPlan.VersionNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSuccessorDisplays</Name>
				<Source><![CDATA[
    public void setSuccessorDisplays()
    {
        PlanActivity    planActivity;
        PlanReference   planReference;

        planActivity = PlanActivity::findPlanActivityId(sucessorActivityId.text());

        if (planActivity)
        {
            sucessorActivityName.text(planActivity.Name);

            planReference = PlanReference::find(planActivity.PlanReference);

            sucessorProductionFlow.text(planReference.PlanName);

            sucessorProductionFlowVersion.value(callerPlan.VersionNum);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>PredecessorActivityId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args                args = new Args();
            Object              formRun;

            args.name(formStr(PlanActivityLookup));
            args.caller(element);

            args.record(Plan::find(callerPlanPlanActivity.Plan));

            formRun = classfactory.formRunClass(args);
            formRun.init();

            this.performFormLookup(formRun);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setPredecessorDisplays();

            element.setOKButtonState();

            element.setGroupConstraintState();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SucessorActivityId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Args                args = new Args();
            Object              formRun;
            PlanActivity        callerPlanActivity = callerPlanPlanActivity.planActivity();

            args.name(formStr(PlanActivityLookup));
            args.caller(element);

            args.record(Plan::find(callerPlanPlanActivity.Plan));

            formRun = classfactory.formRunClass(args);

            // feeders are only allowed to be added on the consumer's side (i.e. as a predecessor activity)
            formRun.parmHideFeederTab(true);
            formRun.init();

            this.performFormLookup(formRun);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.setSuccessorDisplays();

            element.setOKButtonState();

            element.setGroupConstraintState();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>GroupConstraint</Name>
				<Type>Group</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            boolean disabled;

            super();

            disabled = !groupConstraint.optionValue();

            unitOfMeasure.mandatory(!disabled);

            if (disabled)
            {
                constraintValue.realValue(0.0);
                unitOfMeasure.text('');
            }

            element.setOKButtonState();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UnitOfMeasure</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            UnitOfMeasureLookup::lookupForUnitOfMeasureClass(this, this.text(), UnitOfMeasureClass::Time);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            ret = ret && this.validate();

            element.setOKButtonState();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean             ret;
            UnitOfMeasureSymbol currUnitOfMeasureSymbol = unitOfMeasure.text();

            ret = super();

            return  ret &&
                    (!currUnitOfMeasureSymbol
                     || UnitOfMeasure::findBySymbol(currUnitOfMeasureSymbol).belongsToUnitOfMeasureClass(UnitOfMeasureClass::Time));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS300864</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<Height xmlns="">0</Height>
		<HeightMode xmlns="">Column</HeightMode>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Width xmlns="">0</Width>
		<WidthMode xmlns="">Column</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupPredecessor</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PredecessorActivityId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PlanActivityId</ExtendedDataType>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PredecessorActivityName</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PlanActivityName</ExtendedDataType>
								<Label>@SYS300863</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PredecessorProductionFlow</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PlanName</ExtendedDataType>
								<Label>@SYS131941</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>PredecessorProductionFlowVersion</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PlanVersionNum</ExtendedDataType>
							</AxFormControl>
						</Controls>
						<Breakable>No</Breakable>
						<Caption>@SYS300861</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupSucessor</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SucessorActivityId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PlanActivityId</ExtendedDataType>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SucessorActivityName</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PlanActivityName</ExtendedDataType>
								<Label>@SYS300863</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SucessorProductionFlow</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048190</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PlanName</ExtendedDataType>
								<Label>@SYS131941</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>SucessorProductionFlowVersion</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>2013265918</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PlanVersionNum</ExtendedDataType>
							</AxFormControl>
						</Controls>
						<Breakable>No</Breakable>
						<Caption>@SYS300862</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupConstraint</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>ConstraintValue</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>ConstraintValue</ExtendedDataType>
								<Mandatory>Yes</Mandatory>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>UnitOfMeasure</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS7867</Label>
							</AxFormControl>
						</Controls>
						<Breakable>No</Breakable>
						<Caption>@SYS40707</Caption>
						<FrameOptionButton>Check</FrameOptionButton>
						<OptionValue>0</OptionValue>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupProductionFlow</Name>
						<ElementPosition>1789569705</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>CycleTime</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HelpText>@FieldDescriptions_CostManagement:PlanActivityRelationNew_CycleTime</HelpText>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>PlanCycleTimeRatio</ExtendedDataType>
								<Label>@SYS152627</Label>
								<Mandatory>Yes</Mandatory>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<Caption>@SYS131941</Caption>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Breakable>No</Breakable>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>ButtonOK</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>ButtonCancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<TopMargin>10</TopMargin>
				<TopMarginMode>Fixed</TopMarginMode>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>