<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TaxArchiveTransFormPart</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TaxArchiveTransFormPart extends FormRun
    implements ArchiveServiceIArchiveWorkspaceFormPart, ArchiveServiceIOpenArchiveJobsDialog,
    ArchiveServiceIOpenArchiveReversalDialog, ArchiveServiceIHandleReversalJobCreation
{

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void init()
    {
        super();

        ArchiveServiceWorkspaceFormPartBuilder::initializeWorkspaceFormPart(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArchiveTypeName</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ArchiveServiceTypeName getArchiveTypeName()
    {
        return TaxArchiveAutomationConstants::RegisteredTypeName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArchiveSourceLinkDataSource</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FormDataSource getArchiveSourceLinkDataSource()
    {
        return TaxArchiveTrans_ds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArchiveSourceLinkActionPane</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FormActionPaneControl getArchiveSourceLinkActionPane()
    {
        return TaxArchiveFormActionPaneControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArchiveSourceLinkGrid</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FormGridControl getArchiveSourceLinkGrid()
    {
        return TaxArchiveTransGrid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getArchiveJobDetailsDataSource</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FormDataSource getArchiveJobDetailsDataSource()
    {
        return ArchiveServiceJobDetailsView_ds;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refresh</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void refresh()
    {
        TaxArchiveTrans_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterToCalendar</Name>
				<Source><![CDATA[
    private void filterToCalendar(FiscalCalendarRecId _fiscalCalendar, boolean _requery)
    {
        QueryBuildRange qbr = SysQuery::findOrCreateRange(TaxArchiveTrans_ds.queryBuildDataSource(), fieldNum(TaxArchiveTrans, FiscalCalendar));
        qbr.value(SysQuery::value(_fiscalCalendar));

        if (_requery)
        {
            TaxArchiveTrans_ds.executeQuery();
            element.addGridGrouping();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addGridGrouping</Name>
				<Source><![CDATA[
    private void addGridGrouping()
    {
        var columnGroupings = ColumnGroupingContexts::construct();
        columnGroupings.addGrouping(ColumnGroupingContext::construct(formControlStr(TaxArchiveTransFormPart, FiscalCalendarYear_Name)));
        TaxArchiveTransGrid.columnGrouping(columnGroupings.serialize());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJobsDialogContract</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ArchiveServiceJobsDialogContract getJobsDialogContract()
    {
        // Created a jobs dialog contract for the currently selected TaxArchiveTrans
        ArchiveServiceJobsDialogContract jobsDialogContract = ArchiveServiceJobsDialogContract::newForArchiveSourceLink(TaxArchiveTrans);

        // Customize the caption and the context on the jobs dialog to show details for the currently selected TaxArchiveTrans
        jobsDialogContract.parmDialogCaption("@Tax:TaxArchiveJobsDialogCaption");

        jobsDialogContract.parmDialogContext(strFmt(
            "@SYS76785",
            TaxArchiveTrans.LedgerDataAreaId,
            FiscalCalendarYear.Name));

        return jobsDialogContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProgressTimelineDialogConfiguration</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public TimelineDialogConfiguration getProgressTimelineDialogConfiguration(ArchiveServiceJobSourceLink _sourceLink)
    {
        // Use the given source link record to find the corresponding TaxArchiveTrans
        TaxArchiveTrans selectedArchiveTrans = TaxArchiveTrans_DS.cursor();

        // If no TaxArchiveTrans could be found, progress cannot be displayed and an error should be thrown
        if (!selectedArchiveTrans)
        {
            throw error("@Tax:TaxArchiveCannotFindProgressWarning");
        }

        // Use the corresponding TaxArchiveTrans to customize the timeline progress dialog with details pertaining to the tax archival
        FiscalCalendarYear taxArchiveFiscalYear = FiscalCalendarYear::find(selectedArchiveTrans.FiscalCalendarYear);

        TimelineDialogConfiguration timelineDialogConfiguration = TimelineDialogConfiguration::construct();
        timelineDialogConfiguration.parmFormCaption("@Tax:TaxArchiveProgressFormCaption");

        Args archiveMessageLogMenuItemArgs = new Args();
        archiveMessageLogMenuItemArgs.caller(this);

        timelineDialogConfiguration.getDialogFormContext()
            .addText(selectedArchiveTrans.LedgerDataAreaId)
            .addText(taxArchiveFiscalYear.Name);

        return timelineDialogConfiguration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReversalDialogContract</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ArchiveServiceReversalDialogContract getReversalDialogContract()
    {
        ArchiveServiceReversalDialogContract reversalDialogContract = ArchiveServiceReversalDialogContract::newForArchiveSourceLink(TaxArchiveTrans);
        reversalDialogContract.parmReversalHandler(this);

        // Configure the caption and context on the reversal dialog to indicate which TaxArchiveTrans record will be reversed
        reversalDialogContract.parmDialogCaption(strFmt(
            "@Tax:TaxArchiveReversalDialogCaption",
            TaxArchiveTrans.LedgerDataAreaId,
            FiscalCalendarYear.Name));

        return reversalDialogContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>handleCreationOfReversalJobForSourceLink</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void handleCreationOfReversalJobForSourceLink(RefRecId _archiveSourceLinkRecId, RefTableId _archiveSourceLinkTableId)
    {
        if (_archiveSourceLinkTableId == tableNum(TaxArchiveTrans))
        {
            TaxArchiveTrans archiveTransToBeReversed = TaxArchiveTrans::findByRecId(_archiveSourceLinkRecId, NoYes::Yes);

            if (archiveTransToBeReversed)
            {
                FiscalCalendarYear taxArchiveFiscalYear = FiscalCalendarYear::find(TaxArchiveTrans.FiscalCalendarYear);

                info(strFmt(
                    "@Tax:TaxArchiveReversalConfirmationMessage",
                    archiveTransToBeReversed.LedgerDataAreaId,
                    taxArchiveFiscalYear.Name));
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>FiscalCalendarYear</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            FiscalCalendarYear_ds.queryBuildDataSource().addOrderByField(fieldNum(FiscalCalendarYear, Name));
            TaxArchiveTrans_ds.queryBuildDataSource().addOrderByField(fieldNum(TaxArchiveTrans, LedgerDataAreaId));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ArchiveServiceJobDetailsView</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            ViewHistoryData.enabled(
                ArchiveServiceJobDetailsView.ArchiveServiceJobId
                && ArchiveServiceJobDetailsView.Type == ArchiveServiceArchiveType::MoveToHistory
                && ArchiveServiceJobDetailsView.Status == ArchiveServiceJobStatus::Archived);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>FiscalCalendarLookup</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            FiscalCalendar::lookupFiscalCalendar(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            element.filterToCalendar(FiscalCalendar::findByCalendarId(this.valueStr()).RecId, true);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initialize</Name>
						<Source><![CDATA[
        protected void initialize()
        {
            super();

            FiscalCalendarRecId fiscalCalendar = Ledger::fiscalCalendar();
            this.text(FiscalCalendar::find(fiscalCalendar).CalendarId);
            element.filterToCalendar(fiscalCalendar, false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Refresh</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            TaxArchiveTransHelper::createOrUpdateData();
            TaxArchiveTrans_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ViewHistoryData</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            changecompany (TaxArchiveTrans.LedgerDataAreaId)
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxArchiveTransGrid</Name>
				<Type>Grid</Type>
				<Methods>
					<Method>
						<Name>initialize</Name>
						<Source><![CDATA[
        protected void initialize()
        {
            super();

            element.addGridGrouping();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TaxArchiveTrans</Name>
			<Table>TaxArchiveTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>FiscalCalendar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalCalendarYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>FiscalCalendarYear</Name>
			<Table>FiscalCalendarYear</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>EndDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalCalendar</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TaxArchiveTrans</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ArchiveServiceJobDetailsView</Name>
			<Table>ArchiveServiceJobDetailsView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ArchiveServiceJobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PercentageComplete</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceLinkRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceLinkTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalRecordsProcessed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalRecordsStaged</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TotalRecordsToProcess</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>TaxArchiveTrans</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<MaxAccessRight>View</MaxAccessRight>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Tax:TaxTransactionsArchive</Caption>
		<Pattern xmlns="">FormPartSectionList</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">FormPart</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderGroup</Name>
				<ExtendedStyle>hubPartGrid_header</ExtendedStyle>
				<Pattern>FiltersAndToolbarInline</Pattern>
				<PatternVersion>1.0</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>FilterGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FiscalCalendarLookup</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>FiscalCalendarName</ExtendedDataType>
								<Label>@SYS105687</Label>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
						<FrameType>None</FrameType>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>TaxArchiveFormActionPaneControl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>ActionPane</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroupControl1</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Refresh</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SYS113222</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>ViewHistoryData</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Enabled>No</Enabled>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>TaxArchiveTrans</DataSource>
										<MenuItemName>TaxTransHistory</MenuItemName>
										<NormalImage>View</NormalImage>
										<Text>@Tax:ViewHistoryData</Text>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Style>Strip</Style>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<Breakable>No</Breakable>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>TaxArchiveTransGrid</Name>
				<AllowEdit>No</AllowEdit>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Grid</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>FiscalCalendarYear_Name</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>FiscalCalendarYear</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>TaxArchiveTrans_LedgerDataAreaId</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>LedgerDataAreaId</DataField>
						<DataSource>TaxArchiveTrans</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>TaxArchiveTrans_Status</Name>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Status</DataField>
						<DataSource>TaxArchiveTrans</DataSource>
						<Items />
					</AxFormControl>
				</Controls>
				<DataSource>TaxArchiveTrans</DataSource>
				<MultiSelect>No</MultiSelect>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>