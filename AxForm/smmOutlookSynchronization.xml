<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>smmOutlookSynchronization</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class smmOutlookSynchronization extends FormRun
{
    HcmWorker                   hcmWorker;
    OutlookUserSetup            outlookUserSetup;
    TransDate                   synchronizeFromDate;
    TransDate                   synchronizeToDate;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        synchronizeFromDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        synchronizeToDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());

        super();

        if (smmOutlookSyncDeprecationHandler::isOutlookSyncDisabled())
        {
            smmOutlookSyncDeprecationHandler::logSyncSkipMessageToTelemetry();
            throw error(strFmt("@SYS19306",funcName()));
        }

        smmOutlookSyncDeprecationHandler::showDeprecationMessage();

        if (!smmAxaptaOutlookMapping::isOutlookMappingSetupCompleted())
        {
            smmAxaptaOutlookMapping::createDefaultSetup();
        }

        // Find worker connected to the current logged ion
        hcmWorker = HcmWorker::find(HcmWorker::userId2Worker(curuserid()));

        if (hcmWorker)
        {
            outlookUserSetup = OutlookUserSetup::findByWorker(hcmWorker.RecId);
            // Calculate synchronization period based on the employee setup parameters
            activityFromDate.dateValue(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) - outlookUserSetup.SmmSynchronizeDaysBack);
            activityToDate.dateValue(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) + outlookUserSetup.SmmSynchronizeDaysForward);
        }
        else
        {
            // No employee is mapped to the current user. Set mapping in Employee option form.
            error("@SYS80637");
            element.close();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>SynchronizeAppointments</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            syncPeriod.enabled(this.value());

            if (!this.value())
            {
                activityFromDate.dateValue(dateNull());
                activityToDate.dateValue(dateNull());
            }
            else
            {
                activityFromDate.dateValue(synchronizeFromDate);
                activityToDate.dateValue(synchronizeToDate);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OK</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // Get synchronization from date from dialog
            if (activityFromDate.dateValue())
            {
                synchronizeFromDate = activityFromDate.dateValue();
            }

            // Getsynchronization to date from dialog
            if (activityToDate.dateValue())
            {
                synchronizeToDate = activityToDate.dateValue();
            }

            // Check that to date is not earlier than from date
            if (synchronizeToDate < synchronizeFromDate)
            {
                // To date is earlier than From date.
                throw error("@SYS22806");
            }

            // Are contacts selected for syncrhonization
            if (synchronizeContacts.value())
            {
                try
                {
                    smmOutlookSync::synchronizeObjects(smmOutlookMappingTypes::Contacts,forceSyncrhonize.value());
                }
                catch (Exception::Error)
                {
                    infolog.yield();
                }
            }

            // Are tasks selected for syncrhonization
            if (synchronizeTasks.value())
            {
                try
                {
                    smmOutlookSync::synchronizeObjects(smmOutlookMappingTypes::Tasks,forceSyncrhonize.value());
                }
                catch (Exception::Error)
                {
                    infolog.yield();
                }
            }

            // Are appointments selected for syncrhonization
            if (synchronizeAppointments.value())
            {
                try
                {
                    smmOutlookSync::synchronizeObjects(smmOutlookMappingTypes::Appointments,forceSyncrhonize.value(),DateTimeUtil::newDateTime(synchronizeFromDate,str2time('00:00'),DateTimeUtil::getUserPreferredTimeZone()),
                        DateTimeUtil::newDateTime(synchronizeToDate,str2time('23:59'),DateTimeUtil::getUserPreferredTimeZone()));
                }
                catch (Exception::Error)
                {
                    infolog.yield();
                }
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS80075</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>MainInstruction</Name>
				<ElementPosition>1073741822</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<ForegroundColor>DynBackgroundWhite</ForegroundColor>
				<Text>@SalesAndMarketing:SelectItemsToSyncOutlook</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>SynchronizeContacts</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS71419</Label>
						<Value>1</Value>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>SynchronizeTasks</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS70449</Label>
						<Value>1</Value>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>SynchronizeAppointments</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS75300</Label>
						<Value>1</Value>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>SyncPeriod</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ActivityFromDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
								<Label>@SYS24050</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>ActivityToDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>TransDate</ExtendedDataType>
								<Label>@SYS80934</Label>
							</AxFormControl>
						</Controls>
						<LeftMargin>30</LeftMargin>
						<LeftMarginMode>Fixed</LeftMarginMode>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>ForceSyncrhonize</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS90207</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS90206</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>