<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TradeDisplayCalculatedColumns</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class TradeDisplayCalculatedColumns extends FormRun
{
    
    private TradeDisplayCalculatedColumnControlsForm    displayCalculatedColumnControlsFormSetupObject;
    private boolean                                     allowCreate;

}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    boolean canClose()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    void closeOk()
    {
        TradeDisplayCalculatedColumnParm tmpTradeDisplayCalculatedColumnParm = displayCalculatedColumnControlsFormSetupObject.parmCallerDisplayCalculatedColumnParmVisible();
        tmpTradeDisplayCalculatedColumnParm.initFromCallerDisplayCalculatedColumnParm(tradeDisplayCalculatedColumnParm);
         
        if (!saveSetup.value())
        {
            if (displayCalculatedColumnControlsFormSetupObject.sysLastValueExist())
            {
                displayCalculatedColumnControlsFormSetupObject.delLast();
            }
        }
        else
        {
            displayCalculatedColumnControlsFormSetupObject.saveLast();
        }

        displayCalculatedColumnControlsFormSetupObject.setSourceFormControls();

        if (element.args() && element.args().caller() && formHasMethod(element.args().caller(), identifierStr(refreshDisplay)))
        {
            element.args().caller().refreshDisplay();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        allowCreate = true;

        super();

        if (!element.args() || !element.args().caller())
        {
            element.close();
            return;
        }

        Object callerForm = element.args().caller();

        if (!callerForm)
        {
            element.close();
            return;
        }

        Object implementationObject = callerForm;

        if (!TradeDisplayCalculatedColumnControlsForm::hasMethodDisplayCalculatedColumnControlsFormSetupObjectMethod(implementationObject))
        {
            element.close();
            return;
        }

        displayCalculatedColumnControlsFormSetupObject = implementationObject.displayCalculatedColumnControlsFormSetupObject();

        if (!displayCalculatedColumnControlsFormSetupObject)
        {
            element.close();
            return;
        }

        tradeDisplayCalculatedColumnParm_DS.create();

        tradeDisplayCalculatedColumnParm.initFromCallerDisplayCalculatedColumnParm(displayCalculatedColumnControlsFormSetupObject.parmCallerDisplayCalculatedColumnParmVisible());
        tradeDisplayCalculatedColumnParm.write();
        
        element.setDesign();
        element.setSaveSettings();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDesign</Name>
				<Source><![CDATA[
    private void setDesign()
    {
        if (displayCalculatedColumnControlsFormSetupObject.hasDisplayCalculatedColumnControls())
        {
            Map callerDisplayCalculatedColumnControls = displayCalculatedColumnControlsFormSetupObject.parmCallerDisplayCalculatedColumnControls();
            MapEnumerator displayCalculatedColumnControlsEnumerator = callerDisplayCalculatedColumnControls.getEnumerator();
            while (displayCalculatedColumnControlsEnumerator.moveNext())
            {
                FieldId fieldNumber = displayCalculatedColumnControlsEnumerator.currentKey();

                switch (fieldNumber)
                {
                    case fieldNum(TradeDisplayCalculatedColumnParm, ShowBackOrder):
                        TradeDisplayCalculatedColumn_ShowBackOrder.visible(true);
                        break;

                    case fieldNum(TradeDisplayCalculatedColumnParm, ShowQualityOrderStatus):
                        TradeDisplayCalculatedColumn_ShowQualityOrderStatus.visible(true);
                        break;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSaveSettings</Name>
				<Source><![CDATA[
    private void setSaveSettings()
    {
        saveSetup.value(displayCalculatedColumnControlsFormSetupObject.sysLastValueExist());
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TradeDisplayCalculatedColumnParm</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        void write()
        {
            // InMemory table, not need form write
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        void create(boolean _append = false)
        {
            if (allowCreate)
            {
                super(_append);
                allowCreate = false;
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TradeDisplayCalculatedColumnParm</Name>
			<Table>TradeDisplayCalculatedColumnParm</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShowBackOrder</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShowQualityOrderStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AutoQuery>No</AutoQuery>
			<AutoSearch>No</AutoSearch>
			<LinkType>Passive</LinkType>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SCM:TradeDisplayCalculatedColumnParm_CalculatedColumns</Caption>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ColumnsGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>TradeDisplayCalculatedColumn_ShowBackOrder</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CheckBox</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<DataField>ShowBackOrder</DataField>
						<DataSource>TradeDisplayCalculatedColumnParm</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>TradeDisplayCalculatedColumn_ShowQualityOrderStatus</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CheckBox</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<DataField>ShowQualityOrderStatus</DataField>
						<DataSource>TradeDisplayCalculatedColumnParm</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>SaveSettings</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>SaveSetup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HelpText>@SYS62208</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS62209</Label>
						<Style>Toggle</Style>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Ok</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>