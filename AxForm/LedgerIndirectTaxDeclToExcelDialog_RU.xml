<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>LedgerIndirectTaxDeclToExcelDialog_RU</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class LedgerIndirectTaxDeclToExcelDialog_RU extends FormRun
{
    LedgerIndirectTaxDeclJournalTable_RU journalTable;
    Object caller;
}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean ret = super();

        if (ret && element.closedOk())
        {
            boolean checkedSelect;
            Set taxAuthoritySet = new Set(Types::String);

            int idx = lstDeclarations.getNextItem(FormListNext::Selected);

            while  (idx != -1)
            {
                FormListItem item = lstDeclarations.getItem(idx);

                checkedSelect = true;

                if (TaxDeclarationLocation.selection() == LedgerIndirectTaxDeclLocation_RU::TaxAuthority)
                {
                    FormListItem subItem = lstDeclarations.getItem(idx, 1);

                    if (taxAuthoritySet.in(subItem.text()))
                    {
                        ret = checkFailed(strfmt("@SYP4860054", subItem.text()));
                        break;
                    }
                    else
                    {
                        taxAuthoritySet.add(subItem.text());
                    }
                }
                else
                    break;

                idx = lstDeclarations.getNextItem(FormListNext::Selected, idx);
            }

            if (checkedSelect == false)
            {
                ret = checkFailed("@GLS114715");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        super();

        caller.parmEmployeeId(responsibleId.valueStr());
        caller.parmTaxDeclarationLocation(TaxDeclarationLocation.selection());
        caller.parmTaxDeclarationLocationCode(TaxDeclarationLocationCode.valueStr());
        caller.parmCorrectionNumber(correctionNumber.value());
        caller.parmDetailedAppendix(DetailedAppendix.value());

        Set declarationSet = new Set(Types::Container);
        
        int idx = lstDeclarations.getNextItem(FormListNext::Selected);

        while (idx != -1)
        {
            FormListItem itemTax;
            FormListItem item = lstDeclarations.getItem(idx);

            if (TaxDeclarationLocation.selection() == LedgerIndirectTaxDeclLocation_RU::TaxAuthority)
            {
                itemTax = lstDeclarations.getItem(idx, 1);
            }

            declarationSet.add([item.text(), itemTax ? itemTax.text() : '']);
            idx = lstDeclarations.getNextItem(FormListNext::Selected, idx);
        }

        caller.parmDeclarationSet(declarationSet);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        caller = element.args().caller();

        if (!caller)
        {
            throw error(Error::missingParameter(this));
        }

        super();

        journalTable = this.args().record();

        CorrectionNumber.value(caller.parmCorrectionNumber());
        TaxDeclarationLocation.selection(caller.parmTaxDeclarationLocation());
        TaxDeclarationLocationCode.text(caller.parmTaxDeclarationLocationCode());
        this.locationModified();
        OK.enabled(TaxDeclarationLocation.selection());
        ResponsibleId.text(element.args().caller().parmEmployeeId());
        element.design().caption(caller.caption());
    }

]]></Source>
			</Method>
			<Method>
				<Name>locationModified</Name>
				<Source><![CDATA[
    void locationModified()
    {
        int idx;
        LedgerIndirectTaxDeclJournalTrans_RU journalTrans;
        Branches_RU branches;
        Set declarationSet = new Set(Types::Container);

        void addItem(str _valueId, str _valueName)
        {
            if (_valueId)
            {
                FormListItem item = new FormListItem(_valueId);
                item.idx(idx + 1);
                idx = lstDeclarations.addItem(item);

                item = new FormListItem(_valueName);
                item.subItem(1);
                item.idx(idx);
                lstDeclarations.setItem(item);
            }
        }

        lstDeclarations.deleteAll();
        lstDeclarations.deleteColumn(0);
        lstDeclarations.deleteColumn(0);

        switch (TaxDeclarationLocation.selection())
        {
            case LedgerIndirectTaxDeclLocation_RU::RussianOrganization:
                lstDeclarations.addColumn(1, new FormListColumn("@SYS850", 1, 100));
                lstDeclarations.addColumn(2, new FormListColumn("@SYS80991", 2, 190));

                select firstonly journalTrans
                    where journalTrans.JournalId == journalTable.JournalId
                       && journalTrans.Approved  == NoYes::Yes
                exists join branches
                    where branches.BranchId == journalTrans.BranchId
                       && !branches.VendAccount;

                if (journalTrans)
                {
                    declarationSet.add([journalTrans.BranchId, CompanyInfo::find().Name]);
                }

                break;

            case LedgerIndirectTaxDeclLocation_RU::SeparateSubdivision:
                lstDeclarations.addColumn(1, new FormListColumn("@SYS850", 1, 100));
                lstDeclarations.addColumn(2, new FormListColumn("@SYS80991", 2, 190));

                while select BranchId from journalTrans
                    where journalTrans.JournalId == journalTable.JournalId
                       && journalTrans.Approved  == NoYes::Yes
                join branches
                    where branches.BranchId == journalTrans.BranchId
                {
                    declarationSet.add([journalTrans.BranchId, branches.VendAccount ? branches.vendTableName() : CompanyInfo::find().Name]);
                }

                break;

            case LedgerIndirectTaxDeclLocation_RU::TaxAuthority:
                lstDeclarations.addColumn(1, new FormListColumn("@GLS112871", 1, 100));
                lstDeclarations.addColumn(2, new FormListColumn("@SYS21937", 2, 100));

                while select BranchId from journalTrans
                    where journalTrans.JournalId == journalTable.JournalId
                       && journalTrans.Approved  == NoYes::Yes
                join branches
                    where branches.BranchId == journalTrans.BranchId
                {
                    OKATO_RU okato = branches.VendAccount ? branches.vendTable().partyOKATOasOfDate_RU(journalTable.fromDate()) :
                        CompanyInfoHelper::partyOKATOasOfDate_RU(CompanyInfo::find(), journalTable.fromDate());

                    TaxAuthorityAddress taxAuthority = TaxAuthorityAddress::findByOKATO_RU(okato);

                    if (taxAuthority)
                    {
                        declarationSet.add([journalTrans.BranchId, taxAuthority.TaxAuthority]);
                    }
                    else
                    {
                        warning(strfmt("@SYP4860053", okato));
                    }
                }

                break;

            default:
                break;
        }

        SetEnumerator se = declarationSet.getEnumerator();
        while (se.moveNext())
        {
            str id;
            str name;
            [id, name] = se.current();
            addItem(id, name);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selecting</Name>
				<Source><![CDATA[
    void selecting(boolean _select)
    {
        for (int i = lstDeclarations.getCount() - 1; i >= 0; i--)
        {
            FormListItem item = lstDeclarations.getItem(i);
            item.stateSelected(_select);
            lstDeclarations.setItem(item);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>TaxDeclarationLocation</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            OK.enabled(TaxDeclarationLocation.selection());

            element.locationModified();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.selecting(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeselectAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.selecting(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYP4860052</Caption>
		<DialogSize xmlns="">Full</DialogSize>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<StatusBarStyle xmlns="">None</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>MainInstruction</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741822</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<FontSize>13</FontSize>
				<ForegroundColor>ScrollBar</ForegroundColor>
				<Text>@SYP4860052</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupPrintInformation</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>CorrectionNumber</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@GLS117056</Label>
						<LimitText>3</LimitText>
						<LimitTextMode>Fixed</LimitTextMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupLocation</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>TaxDeclarationLocation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<EnumType>LedgerIndirectTaxDeclLocation_RU</EnumType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>TaxDeclarationLocationCode</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>LedgerIndirectTaxDeclLocationCode_RU</ExtendedDataType>
							</AxFormControl>
						</Controls>
						<FrameType>None</FrameType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ResponsibleId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>EmployeeId_RU</ExtendedDataType>
						<Label>@GLS101976</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>DetailedAppendix</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1932735281</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYP4860990</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Caption>@SYS25818</Caption>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GroupDeclarationTarget</Name>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>FormActionPane</Name>
						<Type>ActionPane</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ButtonGroupSelectDeselect</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SelectAll</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@GLS116919</HelpText>
										<Skip>Yes</Skip>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS63238</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>DeselectAll</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SYS68024</HelpText>
										<Skip>Yes</Skip>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<Text>@SYS57284</Text>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Style>Strip</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormListViewControl">
						<Name>lstDeclarations</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>ListView</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<CheckBox>Yes</CheckBox>
						<ColorScheme>WindowsPalette</ColorScheme>
						<ColumnHeaderButton>Yes</ColumnHeaderButton>
						<GridLines>Yes</GridLines>
						<RowSelect>Yes</RowSelect>
						<SingleSelection>No</SingleSelection>
						<ViewType>Report</ViewType>
					</AxFormControl>
				</Controls>
				<Caption>@GLS114712</Caption>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroupOkCancel</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>