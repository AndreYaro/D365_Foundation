<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PdsComdPricingMarginDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class PdsComdPricingMarginDialog extends FormRun
    {
        PdsComdPricingMarginUpdate  pricingMarginUpdate;

}
]]></Source>
			</Method>
			<Method>
				<Name>checkPreviousRunHasMargin</Name>
				<Source><![CDATA[
    private boolean checkPreviousRunHasMargin()
    {
        PdsComdPricingRun       pdsComdPricingRun;
        CostProfitSet           profitSet;
        boolean                 ret = true;

        pdsComdPricingRun = PdsComdPricingRun::find(ctrlPricingRunId.text());
        if (pdsComdPricingRun.PreviousRunId && !PdsComdPricingMargin::exist(
            pdsComdPricingRun.PreviousRunId, ctrlPricingTemplateId.text(),
            ctrlProfitSet.selectionAsCostProfitSet()))
        {
            profitSet = ctrlProfitSet.selectionAsCostProfitSet();
            if (Box::yesNo(strfmt("@PDS485", pdsComdPricingRun.PreviousRunId,
                ctrlPricingTemplateId.text(), profitSet),
                DialogButton::No, "@PDS486") == DialogButton::No)
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkSiteDefined</Name>
				<Source><![CDATA[
    public boolean checkSiteDefined()
    {
        PdsComdPricingRun       pdsComdPricingRun;
        boolean                 ret = true;

        pdsComdPricingRun = PdsComdPricingRun::find(ctrlPricingRunId.text());
        if (pdsComdPricingRun.InventSiteId)
        {
            if (Box::yesNo("@PDS635", DialogButton::No, "@PDS636") ==
                    DialogButton::No)
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        if (!this.checkPreviousRunHasMargin())
        {
            return;
        }

        if (!this.checkSiteDefined())
        {
            return;
        }

        pricingMarginUpdate.parmComdPricingRunId(ctrlPricingRunId.text());
        pricingMarginUpdate.parmPricingTemplateId(ctrlPricingTemplateId.text());
        pricingMarginUpdate.parmCostProfitSet(ctrlProfitSet.selectionAsCostProfitSet());
        pricingMarginUpdate.parmCalcDate(ctrlRunEffective.dateValue());

        if (pricingMarginUpdate.checkCloseDialog())
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (!this.args() || !this.args().caller())
        {
            throw error(strfmt("@SYS22862", element.name()));
        }

        pricingMarginUpdate = this.args().caller().runbase();

        super();

        this.initSelectionControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSelectionControls</Name>
				<Source><![CDATA[
    private void initSelectionControls()
    {
        if (pricingMarginUpdate.isInBatch())
        {
            ctrlPricingRunId.text(pricingMarginUpdate.parmComdPricingRunId());
            ctrlProfitSet.selection(enum2int(pricingMarginUpdate.parmCostProfitSet()));
        }
        ctrlPricingTemplateId.text(pricingMarginUpdate.parmPricingTemplateId());

        this.updatePricingRun();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupCostBasisType</Name>
				<Source><![CDATA[
    public void lookupCostBasisType(FormControl _control)
    {
        SysTableLookup          sysTableLookup;
        Query                   query = new Query();
        QueryBuildDataSource    ds;
        QueryBuildDataSource    runds;

        sysTableLookup = SysTableLookup::newParameters(tablenum(PdsCostBasis),
            _control);
        sysTableLookup.addLookupfield(fieldnum(PdsCostBasis, CostBasisType));
        sysTableLookup.addLookupfield(fieldnum(PdsCostBasis, Description));

        ds = query.addDataSource(tablenum(PdsCostBasis));

        runds = ds.addDataSource(tablenum(PdsComdPricingRun));
        runds.joinMode(JoinMode::ExistsJoin);
        runds.addLink(fieldnum(PdsCostBasis, CostBasisType),
            fieldnum(PdsComdPricingRun, CostBasisType));

        if (ctrlRunEffective.dateValue())
        {
            runds.addRange(fieldnum(PdsComdPricingRun, RunEffective))
                .value(queryRange("", ctrlRunEffective.dateValue()));
            runds.addRange(fieldnum(PdsComdPricingRun, RunExpiry))
                .value(queryRange(ctrlRunEffective.dateValue(), ""));
        }

        runds.addRange(fieldnum(PdsComdPricingRun, InventSiteId))
            .value(queryValue(ctrlInventSiteId.text()));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupPricingRunId</Name>
				<Source><![CDATA[
    public void lookupPricingRunId(FormControl _control)
    {
        SysTableLookup          sysTableLookup;

        sysTableLookup = SysTableLookup::newParameters(tablenum(PdsComdPricingRun),
            _control);
        sysTableLookup.addLookupfield(fieldnum(PdsComdPricingRun, PricingRunId));
        sysTableLookup.addLookupfield(fieldnum(PdsComdPricingRun, CostBasisType));
        sysTableLookup.addLookupfield(fieldnum(PdsComdPricingRun, InventSiteId));
        sysTableLookup.addLookupfield(fieldnum(PdsComdPricingRun, RunEffective));
        sysTableLookup.addLookupfield(fieldnum(PdsComdPricingRun, RunExpiry));
        sysTableLookup.parmQuery(this.makeRunIdQuery());
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupSiteId</Name>
				<Source><![CDATA[
    public void lookupSiteId(FormControl _control)
    {
        SysTableLookup          sysTableLookup;
        Query                   query = new Query();
        QueryBuildDataSource    ds;
        QueryBuildDataSource    runds;

        sysTableLookup = SysTableLookup::newParameters(tablenum(InventSite),
            _control);
        sysTableLookup.addLookupfield(fieldnum(InventSite, SiteId));
        sysTableLookup.addLookupfield(fieldnum(InventSite, Name));

        ds = query.addDataSource(tablenum(InventSite));

        runds = ds.addDataSource(tablenum(PdsComdPricingRun));
        runds.joinMode(JoinMode::ExistsJoin);
        runds.addLink(fieldnum(InventSite, SiteId),
            fieldnum(PdsComdPricingRun, InventSiteId));

        if (ctrlRunEffective.dateValue())
        {
            runds.addRange(fieldnum(PdsComdPricingRun, RunEffective))
                .value(queryRange("", ctrlRunEffective.dateValue()));
            runds.addRange(fieldnum(PdsComdPricingRun, RunExpiry))
                .value(queryRange(ctrlRunEffective.dateValue(), ""));
        }

        if (ctrlCostBasisType.text())
        {
            runds.addRange(fieldnum(PdsComdPricingRun, CostBasisType))
                .value(queryValue(ctrlCostBasisType.text()));
        }

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>makeRunIdQuery</Name>
				<Source><![CDATA[
    public Query makeRunIdQuery()
    {
        Query                   query = new Query();
        QueryBuildDataSource    ds;

        ds = query.addDataSource(tablenum(PdsComdPricingRun));

        if (ctrlRunEffective.dateValue())
        {
            ds.addRange(fieldnum(PdsComdPricingRun, RunEffective))
                .value(queryRange("", ctrlRunEffective.dateValue()));
            ds.addRange(fieldnum(PdsComdPricingRun, RunExpiry))
                .value(queryRange(ctrlRunEffective.dateValue(), ""));
        }

        if (ctrlCostBasisType.text())
        {
            ds.addRange(fieldnum(PdsComdPricingRun, CostBasisType))
                .value(queryValue(ctrlCostBasisType.text()));
        }

        if (ctrlInventSiteId.text())
        {
            ds.addRange(fieldnum(PdsComdPricingRun, InventSiteId))
                .value(queryValue(ctrlInventSiteId.text()));
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        ctrlPricingTemplateId.text(
            PdsParameters::find().PricingTemplateId);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    public RunBase runBase()
    {
        return pricingMarginUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign(boolean _forceClear = false)
    {
        ctrlCostBasisType.allowEdit(_forceClear || !ctrlPricingRunId.text());
        ctrlInventSiteId.allowEdit(_forceClear || !ctrlPricingRunId.text());
        ctrlRunEffective.allowEdit(_forceClear || !ctrlPricingRunId.text());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePricingRun</Name>
				<Source><![CDATA[
    public void updatePricingRun(boolean _forceClear = false)
    {
        PdsComdPricingRun       pdsComdPricingRun;

        if (ctrlPricingRunId.text())
        {
            pdsComdPricingRun = PdsComdPricingRun::find(ctrlPricingRunId.text());

            ctrlCostBasisType.text(pdsComdPricingRun.CostBasisType);
            ctrlRunEffective.dateValue(pdsComdPricingRun.RunEffective);
            ctrlInventSiteId.text(pdsComdPricingRun.InventSiteId);

            this.updateDesign();
        }
        else if (_forceClear)
        {
            this.updateDesign(_forceClear);
        }
        else if (ctrlCostBasisType.text() && ctrlRunEffective.dateValue())
        {
            pdsComdPricingRun = PdsComdPricingRun::findEffective(
                ctrlRunEffective.dateValue(),
                ctrlCostBasisType.text(), ctrlInventSiteId.text());

            if (pdsComdPricingRun.RecId)
            {
                ctrlPricingRunId.text(pdsComdPricingRun.PricingRunId);
            }

            this.updateDesign();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ctrlPricingRunId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            element.lookupPricingRunId(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                element.updatePricingRun(!ctrlPricingRunId.text());
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlCostBasisType</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            element.lookupCostBasisType(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                element.updatePricingRun();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlInventSiteId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            element.lookupSiteId(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                element.updatePricingRun();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlRunEffective</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                ret = this.validate();
            }

            if (ret)
            {
                element.updatePricingRun();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                if (ctrlRunEffective.dateValue()
                        && !PdsComdPricingRun::findEffective(
                                ctrlRunEffective.dateValue(),
                                ctrlCostBasisType.text()))
                {
                    ret = checkFailed("@PDS430");
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlPricingTemplateId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                ret = this.validate();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                if (!PdsComdPricingTemplateLine::hasDataForTemplate(this.text()))
                {
                    ret = checkFailed("@PDS452");
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlProfitSet</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionAsCostProfitSet</Name>
						<Source><![CDATA[
        public CostProfitSet selectionAsCostProfitSet()
        {
            return any2Enum(this.selection());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@PDS449</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabGeneral</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>General</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ctrlPricingRunId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>PdsComdPricingRunId</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ctrlCostBasisType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>PdsCostBasisType</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ctrlInventSiteId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>InventSiteId</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ctrlRunEffective</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1342177275</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>PdsRunEffective</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ctrlPricingTemplateId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>PdsComdPricingTemplateId</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ctrlProfitSet</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1879048185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<EnumType>CostProfitSet</EnumType>
										<Items />
									</AxFormControl>
								</Controls>
								<Caption>@PRO1482</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@PRO1482</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabDialogStartGroup</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>dialogStartGrp</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls />
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS3008</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabDialogButtonGroup</Name>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>RightButtonGrp</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Left>0</Left>
								<Type>ButtonGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<ArrangeMethod>Vertical</ArrangeMethod>
							</AxFormControl>
						</Controls>
						<Caption>@SYS74939</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>