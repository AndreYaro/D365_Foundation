<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>TaxWithholdDesignerTable_IN</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class TaxWithholdDesignerTable_IN extends FormRun
    {
        RecordSortedList            tmpTaxWithholdList;
        TmpTaxWithhold              tmpTaxWithhold;
        int                         idValue;
        TmpTaxWithholdWorkTrans_IN  tmpTaxWithholdWorkTrans;

        boolean                     handelDelete,
                                    createRecord;
        #Operator_IN
}
]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        boolean ret;

        if (!this.checkCalculationExpression())
        {
           ret = checkFailed("@GLS5284");
        }
        else
        {
            ret = super();
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCalculationExpression</Name>
				<Source><![CDATA[
    public boolean checkCalculationExpression()
    {
        str         finalExpression;
        boolean     incorrectExpression;

        finalExpression = substr(taxWithholdDesigner.Expression, strlen(taxWithholdDesigner.Expression), 1);

        if (finalExpression ==  num2char(#fourTwo)      ||
            finalExpression ==  num2char(#fourThree)    ||
            finalExpression ==  num2char(#fourFive)     ||
            finalExpression ==  num2char(#fourSeven))
        {
            incorrectExpression = false;
        }
        else
        {
            incorrectExpression = true;
        }
        return incorrectExpression;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteLine</Name>
				<Source><![CDATA[
    public void deleteLine(TaxWithholdCode _taxWithholdCode)
    {
        boolean                         ret = true;
        TaxWithholdDesignerTable_IN     taxWithholdDesignerLoc;

        if (this.isCodeNotDependent(_taxWithholdCode))
        {
            taxWithholdDesignerLoc = TaxWithholdDesignerTable_IN::findByTaxWithholdGroup(taxWithholdDesigner.TaxWithholdGroup, _taxWithholdCode, true);
            if (taxWithholdDesignerLoc)
            {
                ttsbegin;
                delete_from taxWithholdDesigner
                    where taxWithholdDesigner.id                == taxWithholdDesignerLoc.id
                       && taxWithholdDesigner.TaxWithholdGroup  == taxWithholdDesignerLoc.TaxWithholdGroup;
                ttscommit;
                element.setID(taxWithholdDesignerLoc.TaxWithholdGroup);
                taxWithholdDesigner_ds.executeQuery();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteRecord</Name>
				<Source><![CDATA[
    public void deleteRecord()
    {
        TaxWithholdDesignerTable_IN taxWithholdDesignerTable;
        TaxWithholdDesignerTable_IN taxWithholdDesignerTableLocal;

        ttsbegin;
        select firstonly TaxWithholdCode, TaxWithholdGroup from taxWithholdDesignerTableLocal
            where taxWithholdDesignerTableLocal.TaxWithholdGroup == taxWithholdDesigner.TaxWithholdGroup;
        if (!taxWithholdDesigner.TaxWithholdCode)
        {
            delete_from taxWithholdDesigner
                where taxWithholdDesigner.id                == taxWithholdDesigner_ID.value()
                   && taxWithholdDesigner.TaxWithholdGroup  == taxWithholdDesignerTableLocal.TaxWithholdGroup;
            taxWithholdDesigner_ds.executeQuery();
            taxWithholdDesigner_ds.refresh();
        }
        else
        {
            select count(id) from taxWithholdDesignerTable
                where taxWithholdDesignerTable.TaxWithholdGroup == taxWithholdDesigner.TaxWithholdGroup
                   && taxWithholdDesignerTable.TaxWithholdCode  == taxWithholdDesigner.TaxWithholdCode
                   && taxWithholdDesignerTable.id               == taxWithholdDesigner.id;

            if (taxWithholdDesignerTable.id == 1)
            {
                element.deleteLine(taxWithholdDesigner.TaxWithholdCode);
                taxWithholdDesigner_ds.allowEdit(true);
                taxWithholdDesigner_ds.allowCreate(true);
            }
            else
            {
                delete_from taxWithholdDesigner
                    where taxWithholdDesigner.id                == taxWithholdDesigner_ID.value()
                       && taxWithholdDesigner.TaxWithholdGroup  == taxWithholdDesignerTable.TaxWithholdGroup;
                taxWithholdDesigner_ds.executeQuery();
                taxWithholdDesigner_ds.refresh();
            }
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtons</Name>
				<Source><![CDATA[
    public void enableButtons(boolean _status)
    {
        addButton.enabled(_status);
        subButton.enabled(_status);
        multiButton.enabled(_status);
        divButton.enabled(_status);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDataSource</Name>
				<Source><![CDATA[
    public void enableDataSource(boolean _status)
    {
        taxWithholdDesigner_ds.allowEdit(_status);
        taxWithholdDesigner_ds.allowCreate(_status);
    }

]]></Source>
			</Method>
			<Method>
				<Name>finalString</Name>
				<Source><![CDATA[
    public str finalString(str _par)
    {
        str finalString;

        if (_par == num2char(#fourTwo) || _par == num2char(#fourthree) || _par == num2char(#fourfive) || _par == num2char(#fourseven))
        {
            finalString = TaxWithholdDesigner.Expression + _par;
        }
        else
        {
            finalString = TaxWithholdDesigner.Expression + num2char(#nintyOne) + _par + num2char(#nintyThree) ;
        }
        return finalString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        QueryBuildDataSource    queryBuildDataSourceDesigner,
                                queryBuildDataSourceTaxCode;
        QueryBuildRange         queryBuildRangeDesigner,
                                queryBuildRangeTaxCode;
        TaxWithholdGroup        taxWithholdGroup;

        super();

        if (element.args().dataset() == tablenum(TmpTaxWithholdWorkTrans_IN) )
        {
            tmpTaxWithholdWorkTrans = element.args().record();
            taxWithholdGroup        = tmpTaxWithholdWorkTrans.TaxWithholdGroup;

            if (TaxWithholdParameters_IN::find().CrossCompanyPayment && tmpTaxWithholdWorkTrans)
            {
                taxWithholdDesigner_ds.query().allowCrossCompany(true);
                taxWithholdDesigner_ds.query().addCompanyRange(tmpTaxWithholdWorkTrans.CompanyAccount);
            }

            if (taxWithholdGroup)
            {
                queryBuildDataSourceDesigner = taxWithholdDesigner_ds.query().dataSourceTable(tablenum(TaxWithholdDesignerTable_IN));
                queryBuildRangeDesigner      = queryBuildDataSourceDesigner.addRange(fieldnum(TaxWithholdDesignerTable_IN, TaxWithholdGroup));
                queryBuildDataSourceDesigner.addSortField(fieldnum(TaxWithholdDesignerTable_IN, id),SortOrder::Ascending);
                queryBuildRangeDesigner.value(taxWithholdGroup);

                queryBuildDataSourceTaxCode =   taxWithholdGroupData_ds.query().dataSourceTable(tablenum(TaxWithholdGroupData));
                queryBuildRangeTaxCode      =   queryBuildDataSourceTaxCode.addRange(fieldnum(TaxWithholdGroupData, TaxWithholdGroup));
                queryBuildRangeTaxCode.value(taxWithholdGroup);
            }
            element.design().titleDatasource(identifierstr(TaxWithholdDesigner));
            element.enableDataSource(false);
            clearButton.enabled(false);
            deleteButton.enabled(false);
        }

        element.enableButtons(false);
        tmpTaxWithholdList  = new RecordSortedList(tablenum(TmpTaxWithhold));
        tmpTaxWithholdList.sortOrder(fieldnum(TmpTaxWithhold, TaxWithholdCode));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCodeNotDependent</Name>
				<Source><![CDATA[
    public boolean isCodeNotDependent(TaxWithholdCode _taxWithholdCode)
    {
        boolean                         ret = true;
        TaxWithholdDesignerTable_IN     taxWithholdDesignerLoc;

        while select Expression from taxWithholdDesignerLoc
            where taxWithholdDesignerLoc.TaxWithholdGroup == taxWithholdDesigner.TaxWithholdGroup
        {
            if (strscan(taxWithholdDesignerLoc.Expression,
                        num2char(#nintyOne) + _taxWithholdCode + num2char(#nintyThree),
                        0,
                        strlen(taxWithholdDesignerLoc.Expression)))
            {
                ret = checkFailed(strfmt("@GLS5292", _taxWithholdCode));
                return ret;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxCodeAvailable</Name>
				<Source><![CDATA[
    public boolean isTaxCodeAvailable(TaxWithholdCode _taxWithholdCode)
    {
        boolean ret;

        if (TaxWithholdDesignerTable_IN::findByTaxWithholdGroup(taxWithholdDesigner.TaxWithholdGroup, _taxWithholdCode).id < taxWithholdDesigner.id &&
            TaxWithholdDesignerTable_IN::findByTaxWithholdGroup(taxWithholdDesigner.TaxWithholdGroup, _taxWithholdCode).id > 0)
        {
            ret = true;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isVaild</Name>
				<Source><![CDATA[
    public boolean isVaild(str             _operator = '',
                           TaxWithholdCode _taxWithholdCode ='')
    {
        boolean ret = true;

        if (_operator &&
           (substr(taxWithholdDesigner.Expression, strlen(taxWithholdDesigner.Expression), strlen(taxWithholdDesigner.Expression)) == num2char(#fourTwo)  ||
            substr(taxWithholdDesigner.Expression, strlen(taxWithholdDesigner.Expression), strlen(taxWithholdDesigner.Expression)) == num2char(#fourThree)||
            substr(taxWithholdDesigner.Expression, strlen(taxWithholdDesigner.Expression), strlen(taxWithholdDesigner.Expression)) == num2char(#fourFive) ||
            substr(taxWithholdDesigner.Expression, strlen(taxWithholdDesigner.Expression), strlen(taxWithholdDesigner.Expression)) == num2char(#fourSeven)))
        {
            ret = checkFailed("@GLS5284");
        }
        if (_taxWithholdCode && substr(taxWithholdDesigner.Expression, strlen(taxWithholdDesigner.Expression), strlen(taxWithholdDesigner.Expression)) == num2char(#nintyThree))
        {
            ret = checkFailed("@GLS5284");
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExpression</Name>
				<Source><![CDATA[
    public void setExpression(str              _operator = '',
                              TaxWithholdCode  _taxWithholdCode ='')
    {
        if (taxWithholdDesigner.id > 1)
        {
            if (this.isVaild(_operator, _taxWithholdCode))
            {
                if (!taxWithholdDesigner.Expression && _operator ||
                    substr(taxWithholdDesigner.Expression, strlen(taxWithholdDesigner.Expression), strlen(taxWithholdDesigner.Expression)) == num2char(#nintyThree))
                {
                    taxWithholdDesigner.Expression += _operator;
                }
                if (taxWithholdDesigner.Expression && _taxWithholdCode &&
                    substr(taxWithholdDesigner.Expression, strlen(taxWithholdDesigner.Expression), strlen(taxWithholdDesigner.Expression)) != num2char(#nintyThree))
                {
                    taxWithholdDesigner.Expression += num2char(#nintyOne) + _taxWithholdCode + num2char(#nintyThree);
                }
                taxWithholdDesigner_ds.refresh();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setID</Name>
				<Source><![CDATA[
    public void setID(TaxWithholdGroup _taxWithholdGroup)
    {
        TaxWithholdDesignerTable_IN     taxWithholdDesignerLoc;
        int                             adjustID;

        ttsbegin;
        while select forupdate taxWithholdDesignerLoc
            order by id asc
            where taxWithholdDesignerLoc.TaxWithholdGroup == _taxWithholdGroup
        {
            if (taxWithholdDesignerLoc.id > adjustID)
            {
                taxWithholdDesignerLoc.id = adjustID + 1;
                adjustID                  = taxWithholdDesignerLoc.id ;
                if (adjustID == 1 && taxWithholdDesignerLoc.Basis == TaxWithholdBasis_IN::ExclGrossAmount)
                {
                    taxWithholdDesignerLoc.Basis = TaxWithholdBasis_IN::GrossAmount;
                    info ("@GLS5448");
                }
                taxWithholdDesignerLoc.doUpdate();
            }
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAndSetTaxWithholdCode</Name>
				<Source><![CDATA[
    public void validateAndSetTaxWithholdCode()
    {
        if (element.validateSyntax(TaxWithholdGroupData.TaxWithholdCode))
        {
            throw error("@GLS5284");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSyntax</Name>
				<Source><![CDATA[
    public int validateSyntax(str _par)
    {
        int checkStatus = 1;
        str intLastChar;
        str finalString;
        str finalLastChar;

        intLastChar     = substr(taxWithholdDesigner.Expression,strlen(taxWithholdDesigner.Expression),strlen(taxWithholdDesigner.Expression));
        finalString     = element.finalString(_par);
        finalLastChar   = substr(finalString,strlen(finalString),strlen(finalString));
        if (intLastChar != finalLastChar && strlen(taxWithholdDesigner.Expression))
        {
            checkStatus = 0;
        }
        return checkStatus;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TaxWithholdDesigner</Name>
				<Methods>
					<Method>
						<Name>leave</Name>
						<Source><![CDATA[
        public boolean leave()
        {
            boolean ret;

            ret = super();
            if (!element.checkCalculationExpression())
            {
                ret = false;
                return ret;
            }
            if (createRecord)
            {
                element.enableButtons(true);
                createRecord = false;
            }
            else
            {
                element.enableButtons(false);
            }
            idValue = taxWithholdDesigner.id;
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (!element.checkCalculationExpression())
            {
                element.enableDataSource(false);
            }
            else
            {
                element.enableDataSource(true);
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            createRecord            = true;
            super(_append);
            taxWithholdDesigner.id  = taxWithholdDesigner.lastId(taxWithholdDesigner.TaxWithholdGroup);
            element.enableButtons(true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            if (taxWithholdDesigner.id == 1)
            {
                element.enableButtons(false);
            }
            if (!element.checkCalculationExpression())
            {
                ret = false;
            }
            ret = super();

            if (ret)
            {
                if ( element.args().dataset() == tablenum(TmpTaxWithholdWorkTrans_IN))
                {
                    clearButton.enabled(false);
                }
                if (taxWithholdDesigner.id == 0)
                {
                    taxWithholdDesigner.id = idValue;
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>TaxWithholdCode</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                TaxWithholdGroupData::lookupTaxCode_IN(_formControl, taxWithholdDesigner.TaxWithholdGroup);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>TaxWithholdGroupData</Name>
				<Methods>
					<Method>
						<Name>findTmpTaxWithhold</Name>
						<Source><![CDATA[
        public void findTmpTaxWithhold(TaxWithholdCode _taxWithholdCode)
        {
            tmpTaxWithhold.TaxWithholdCode = _taxWithholdCode;
            if ((!tmpTaxWithholdList.find(tmpTaxWithhold)))
            {
                tmpTaxWithhold.TaxWithholdCode    = _taxWithholdCode;
                tmpTaxWithhold.TaxWithholdName    = TaxWithholdTable::find(_taxWithholdCode).TaxWithholdName;
                tmpTaxWithholdList.ins(tmpTaxWithhold);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            this.findTmpTaxWithhold(taxWithholdGroupData.TaxWithholdCode);
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>taxWithholdName</Name>
						<Source><![CDATA[
        display TaxWithholdName taxWithholdName(TaxWithholdGroupData _taxWithholdGroupData)
        {
            this.findTmpTaxWithhold(_taxWithholdGroupData.TaxWithholdCode);
            return tmpTaxWithhold.TaxWithholdName;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>AddButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            if (TaxWithholdDesignerTable_IN::exist(taxWithholdDesigner.TaxWithholdGroup, taxWithholdDesigner.TaxWithholdCode))
            {
                taxWithholdDesigner_Expression.setFocus();
                element.enableDataSource(false);
                element.setExpression(num2char(#fourThree));
                clearButton.enabled(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SubButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (TaxWithholdDesignerTable_IN::exist(taxWithholdDesigner.TaxWithholdGroup, taxWithholdDesigner.TaxWithholdCode))
            {
                taxWithholdDesigner_Expression.setFocus();
                element.enableDataSource(false);
                element.setExpression(num2char(#fourfive));
                clearButton.enabled(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MultiButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (TaxWithholdDesignerTable_IN::exist(taxWithholdDesigner.TaxWithholdGroup, taxWithholdDesigner.TaxWithholdCode))
            {
                taxWithholdDesigner_Expression.setFocus();
                element.enableDataSource(false);
                element.setExpression(num2char(#fourTwo));
                clearButton.enabled(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DivButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (TaxWithholdDesignerTable_IN::exist(taxWithholdDesigner.TaxWithholdGroup, taxWithholdDesigner.TaxWithholdCode))
            {
                taxWithholdDesigner_Expression.setFocus();
                element.enableDataSource(false);
                element.setExpression(num2char(#fourSeven));
                clearButton.enabled(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ClearButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (TaxWithholdDesignerTable_IN::exist(taxWithholdDesigner.TaxWithholdGroup, taxWithholdDesigner.TaxWithholdCode))
            {
                taxWithholdDesigner.Expression  = '';
                taxWithholdDesigner_ds.refresh();
                element.enableButtons(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeleteButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (!handelDelete)
            {
                element.deleteRecord();
            }
            handelDelete = false;

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>TaxAddButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (element.isTaxCodeAvailable(taxWithholdGroupData.TaxWithholdCode))
            {
                element.setExpression('', taxWithholdGroupData.TaxWithholdCode);
                element.enableDataSource(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TaxWithholdDesigner</Name>
			<Table>TaxWithholdDesignerTable_IN</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Basis</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Expression</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowDelete>No</AllowDelete>
			<Index>RecId</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<StartPosition>Last</StartPosition>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>TaxWithholdGroupData</Name>
			<Table>TaxWithholdGroupData</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Exempt_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverlookTax_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<Index>TaxWithholdGroupIdx</Index>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS67084</Caption>
		<Pattern xmlns="">Custom</Pattern>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Height>0</Height>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Designer</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>0</Height>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>0</Width>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Calculation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabControl">
										<Name>CalculationTab</Name>
										<AlignControl>No</AlignControl>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<Type>Tab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTabPageControl">
												<Name>CalculationTabPage</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>0</Height>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>TabPage</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormActionPaneControl">
														<Name>ButtonGroupActionPane</Name>
														<Type>ActionPane</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonGroupControl">
																<Name>ButtonGroup</Name>
																<Type>ButtonGroup</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>AddButton</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>536870910</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<ShowShortCut>No</ShowShortCut>
																		<Text>+</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>SubButton</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>805306365</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<ShowShortCut>No</ShowShortCut>
																		<Text>-</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>MultiButton</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1073741820</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<ShowShortCut>No</ShowShortCut>
																		<Text>*</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>DivButton</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1342177275</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<ShowShortCut>No</ShowShortCut>
																		<Text>/</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>ClearButton</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1610612730</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<ShowShortCut>No</ShowShortCut>
																		<Text>@SYS36039</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>DeleteButton</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1879048185</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<Height>24</Height>
																		<HeightMode>Auto</HeightMode>
																		<Left>0</Left>
																		<LeftMode>Center</LeftMode>
																		<NeededPermission>Delete</NeededPermission>
																		<Type>Button</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<Width>65</Width>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<DisabledImage>3145</DisabledImage>
																		<DisabledImageLocation>EmbeddedResource</DisabledImageLocation>
																		<Text>@GLS360100</Text>
																	</AxFormControl>
																</Controls>
															</AxFormControl>
														</Controls>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>Group_Group</Name>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Height>0</Height>
														<HeightMode>SizeToAvailable</HeightMode>
														<Type>Group</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>0</Width>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormGridControl">
																<Name>CalcGrid</Name>
																<DragDrop>Manual</DragDrop>
																<ElementPosition>1431655764</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<Height>0</Height>
																<Type>Grid</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<Width>0</Width>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormIntegerControl">
																		<Name>TaxWithholdDesigner_ID</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>715827882</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>Integer</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>ID</DataField>
																		<DataSource>TaxWithholdDesigner</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>TaxWithholdDesigner_TaxWithholdCode</Name>
																		<ElementPosition>1073741823</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>TaxWithholdCode</DataField>
																		<DataSource>TaxWithholdDesigner</DataSource>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormComboBoxControl">
																		<Name>TaxWithholdDesigner_Basis</Name>
																		<ElementPosition>1431655764</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>ComboBox</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Basis</DataField>
																		<DataSource>TaxWithholdDesigner</DataSource>
																		<Items />
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormStringControl">
																		<Name>TaxWithholdDesigner_Expression</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<ElementPosition>1789569705</ElementPosition>
																		<FilterExpression>%1</FilterExpression>
																		<HeightMode>Auto</HeightMode>
																		<Type>String</Type>
																		<VerticalSpacing>-1</VerticalSpacing>
																		<WidthMode>Auto</WidthMode>
																		<FormControlExtension
																			i:nil="true" />
																		<DataField>Expression</DataField>
																		<DataSource>TaxWithholdDesigner</DataSource>
																	</AxFormControl>
																</Controls>
																<DataSource>TaxWithholdDesigner</DataSource>
															</AxFormControl>
														</Controls>
														<Caption>@SYS84660</Caption>
														<DataSource>TaxWithholdDesigner</DataSource>
													</AxFormControl>
												</Controls>
												<Caption>@SYS31242</Caption>
												<DataSource>TaxWithholdDesigner</DataSource>
												<Scrollbars>Auto</Scrollbars>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>TaxWithholdDesigner</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>TaxWithholdDesigner</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Splitter_X</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>1</Width>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<AlignChild>No</AlignChild>
								<BottomMargin>0</BottomMargin>
								<BottomMarginMode>Fixed</BottomMarginMode>
								<HideIfEmpty>No</HideIfEmpty>
								<TopMargin>0</TopMargin>
								<TopMarginMode>Fixed</TopMarginMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Taxes</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Height>0</Height>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Width>0</Width>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabControl">
										<Name>TaxesTab</Name>
										<AlignControl>No</AlignControl>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<Type>Tab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>0</Width>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormTabPageControl">
												<Name>TaxesTabPage</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Height>0</Height>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>TabPage</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<Width>0</Width>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormActionPaneControl">
														<Name>TaxesButtonActionPane</Name>
														<Type>ActionPane</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonGroupControl">
																<Name>TaxButtonGroup</Name>
																<Type>ButtonGroup</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>TaxAddButton</Name>
																		<Type>Button</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<Text>@TaxLocalization:AddToExpression</Text>
																	</AxFormControl>
																</Controls>
															</AxFormControl>
														</Controls>
														<DataSource>TaxWithholdGroupData</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormGridControl">
														<Name>TaxesGrid</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<DragDrop>Manual</DragDrop>
														<ElementPosition>1431655764</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Height>0</Height>
														<Type>Grid</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<Width>0</Width>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>TaxWithholdGroupData_TaxWithholdCode</Name>
																<ElementPosition>1073741822</ElementPosition>
																<EnableFormRef>No</EnableFormRef>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataField>TaxWithholdCode</DataField>
																<DataSource>TaxWithholdGroupData</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>TaxWithholdGroupData_TaxWithholdName</Name>
																<ElementPosition>1610612733</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<Type>String</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>taxWithholdname</DataMethod>
																<DataSource>TaxWithholdGroupData</DataSource>
																<Label>@SYS41042</Label>
															</AxFormControl>
														</Controls>
														<DataSource>TaxWithholdGroupData</DataSource>
													</AxFormControl>
												</Controls>
												<Caption>@GLS5290</Caption>
												<DataSource>TaxWithholdGroupData</DataSource>
												<Scrollbars>Auto</Scrollbars>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>TaxWithholdGroupData</DataSource>
									</AxFormControl>
								</Controls>
								<Columns>3</Columns>
								<DataSource>TaxWithholdGroupData</DataSource>
								<OptionValue>0</OptionValue>
							</AxFormControl>
						</Controls>
						<Columns>4</Columns>
						<Caption>@SYS67084</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>