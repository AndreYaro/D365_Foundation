<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>CreditCardLookup</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
using Microsoft.Dynamics.Commerce.Headquarters.Instrumentation;

[Form]
public class CreditCardLookup extends FormRun
{
    CustAccount custAccount;
    RefRecId creditCardCustRecId;
    RefRecId salesTableRecId;

}
]]></Source>
			</Method>
			<Method>
				<Name>closeSelect</Name>
				<Source><![CDATA[
    public void closeSelect(str p1)
    {
        super(int642str(custCreditCard.RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>custAccount</Name>
				<Source><![CDATA[
    public void custAccount(CustAccount _custAccount)
    {
        custAccount = _custAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTable</Name>
				<Source><![CDATA[
    public void salesTable(RefRecId _salesTable)
    {
        salesTableRecId = _salesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        QueryBuildDataSource ds;
        QueryBuildRange qbr;

        super();
        creditCardCustRecId = str2int64(element.args().lookupValue());

        ds = custCreditCard_ds.query().dataSourceTable(tableNum(CreditCardCust));
        ds.addRange(fieldNum(CreditCardCust, CustAccount)).value(queryValue(custAccount));
        CommerceHQEventSource eventSource = CommerceHQEventSource::Log;

        if (FeatureStateProvider::isFeatureEnabled(RetailRestrictCreditCardUsageFeature::instance()))
        {
            boolean isDefaultCustomer = CustTable::isCustomerDefaultForRetail(custAccount);

            if (isDefaultCustomer)
            {
                if (creditCardCustRecId)
                {
                    ds.addRange(fieldNum(CreditCardCust, RecId)).value(queryValue(creditCardCustRecId));
                }

                eventSource.EventWritePaymentsRetailRestrictCreditCardLookupDefaultCustomerFilter();
            }
            else
            {
                if (creditCardCustRecId)
                {
                    qbr = ds.addRange(fieldNum(CreditCardCust, TokenScope));
                    qbr.value(strFmt("((%1 != %2) && (%3 != %4)) || (%5 = %6)",
                        fieldStr(CreditCardCust, TokenScope),
                        queryValue(enum2int(RetailTokenScope::SalesOrder)),
                        fieldStr(CreditCardCust, TokenScope),
                        queryValue(enum2int(RetailTokenScope::NonRecurring)),
                        fieldStr(CreditCardCust, RecId),
                        queryValue(creditCardCustRecId)));
                    eventSource.EventWritePaymentsRetailRestrictCreditCardLookupPlusRecIdFilter();
                }
                else
                {
                    var tokenScopeRange = ds.addRange(fieldNum(CreditCardCust, TokenScope));
                    tokenScopeRange.value(strFmt("(%1 != %2) && (%3 != %4)",
                        fieldStr(CreditCardCust, TokenScope),
                        queryValue(enum2int(RetailTokenScope::SalesOrder)),
                        fieldStr(CreditCardCust, TokenScope),
                        queryValue(enum2int(RetailTokenScope::NonRecurring))));
                    eventSource.EventWritePaymentsRetailRestrictCreditCardLookupSalesOrderFilter();
                }

                if (salesTableRecId)
                {
                    // Get any sales order token just created for this sales order.
                    custCreditCard_ds.query().queryType(UnionType::Union);
                    QueryBuildDataSource ds2 = custCreditCard_ds.query().addDataSource(tableNum(CreditCardCust), 'cc2', UnionType::Union);
                    ds2.addRange(fieldNum(CreditCardCust, CustAccount)).value(queryValue(custAccount));
                    ds2.addRange(fieldNum(CreditCardCust, TokenScope)).value(queryValue(RetailTokenScope::SalesOrder));
                    QueryBuildDataSource ds3 = ds2.addDataSource(tableNum(MCRCustPaymTable));
                    ds3.relations(false);
                    ds3.addLink(fieldNum(CreditCardCust, RecId), fieldNum(MCRCustPaymTable, PaymInfoRecId), 'cc2');
                    ds3.joinMode(JoinMode::ExistsJoin);
                    ds3.addRange(fieldNum(MCRCustPaymTable, PaymInfoTableId)).value(queryValue(tableNum(CreditCardCust)));
                    ds3.addRange(fieldNum(MCRCustPaymTable, RefTableId)).value(queryValue(tableNum(SalesTable)));
                    ds3.addRange(fieldNum(MCRCustPaymTable, RefRecId)).value(queryValue(salesTableRecId));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        FormStringControl callingControl = SysTableLookup::getCallerStringControl(element.args());
        boolean filterLookup = SysTableLookup::filterLookupPreRun(callingControl, custCreditCard_Name, custCreditCard_ds);

        super();

        SysTableLookup::filterLookupPostRun(filterLookup, callingControl.text(), custCreditCard_Name, custCreditCard_ds);

        element.args().lookupRecord(CreditCardCust::find(creditCardCustRecId));
        custCreditCard_ds.research();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>CustCreditCard</Name>
			<Table>CreditCardCust</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CardNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CardToken</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardProcessors</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardTypeName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpiryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UniqueCardId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoNotify>No</AutoNotify>
			<AllowCheck>No</AllowCheck>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<DataSource xmlns="">CustCreditCard</DataSource>
		<Frame xmlns="">Border</Frame>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">LookupGridOnly</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">Lookup</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AllowEdit>No</AllowEdit>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToContent</HeightMode>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustCreditCard_Name</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>CustCreditCard</DataSource>
						<LabelAlignment>Right</LabelAlignment>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Grid_CreditCardTypeName</Name>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CreditCardTypeName</DataField>
						<DataSource>CustCreditCard</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Grid_CardNumber</Name>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CardNumber</DataField>
						<DataSource>CustCreditCard</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustCreditCard_ExpiryDate</Name>
						<ElementPosition>1879048190</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ExpiryDate</DataField>
						<DataSource>CustCreditCard</DataSource>
						<LabelAlignment>Right</LabelAlignment>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Grid_M_displayProcessorsName</Name>
						<AllowEdit>No</AllowEdit>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayProcessorsName</DataMethod>
						<DataSource>CustCreditCard</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustCreditCard_Notes</Name>
						<ElementPosition>2080374782</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>500</Width>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Notes</DataField>
						<DataSource>CustCreditCard</DataSource>
						<LabelAlignment>Right</LabelAlignment>
					</AxFormControl>
				</Controls>
				<DataGroup>Overview</DataGroup>
				<DataSource>CustCreditCard</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>