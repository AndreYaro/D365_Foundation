<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PayrollWorkerTaxCode</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PayrollWorkerTaxCode extends FormRun implements IDateEffectivenessPaneCaller
{
    RefRecId                            selectedDataAreaRecId;
    QueryBuildRange                     rangeLegalEntity;

    HcmWorker                           hcmWorker;
    PayrollPositionDetails              positionDetails;
    HcmPositionWorkerAssignment         positionWorkerAssignment;

    DateEffectivenessPaneController     dateEffectivenessPaneController;
    utcdatetime                         minValidFromDateTime;
    utcdatetime                         maxValidFromDateTime;

}
]]></Source>
			</Method>
			<Method>
				<Name>addLERangeOnWorkerTaxCodeParamValue</Name>
				<Source><![CDATA[
    public void addLERangeOnWorkerTaxCodeParamValue()
    {
        QueryBuildRange             rangeOnWorkerTaxCodeParamValueLE;

        rangeOnWorkerTaxCodeParamValueLE =  SysQuery::findOrCreateRange(payrollWorkerTaxCodeParameterValue_ds.query().dataSourceTable(tableNum(PayrollWorkerTaxCodeParameterValue)), fieldNum(PayrollWorkerTaxCodeParameterValue, LegalEntity));
        rangeOnWorkerTaxCodeParamValueLE.value(queryValue(selectedDataAreaRecId));

        payrollWorkerTaxCodeParameterValue_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAndAddLeadingZero</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks the string value for leading zero and add leading zero if it does not exits.
    /// </summary>
    /// <param name="_realNumberString">
    ///    A real number string to check and add for leading zero.
    /// </param>
    /// <returns>
    /// A string with leading zero if string start with the decimal.
    /// </returns>
    public str checkAndAddLeadingZero(str _realNumberString)
    {
        str firstCharacter =  subStr(_realNumberString, 1, 1);

        if (firstCharacter == '.' || firstCharacter == ',')
        {
            _realNumberString = '0' + _realNumberString;
        }

        return _realNumberString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>datePaneController_ApplyClicked</Name>
				<Source><![CDATA[
    public void datePaneController_ApplyClicked()
    {
        date asOfDate;

        if (dateEffectivenessPaneController.parmShowAsOfDate() == DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()))
        {
            payrollWorkerTaxCodeParameterValue_ds.validTimeStateAutoQuery(ValidTimeStateAutoQuery::AsOfDate);
            payrollWorkerTaxCodeParameterValue_ds.query().resetValidTimeStateQueryType();
        }
        else
        {
            asOfDate = dateEffectivenessPaneController.parmShowAsOfDate();
            payrollWorkerTaxCodeParameterValue_ds.validTimeStateAutoQuery(ValidTimeStateAutoQuery::AsOfDate);
            payrollWorkerTaxCodeParameterValue_ds.query().validTimeStateAsOfDate(asOfDate);
        }

        payrollWorkerTaxCodeParameterValue_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>datePaneController_CurrentClicked</Name>
				<Source><![CDATA[
    public void datePaneController_CurrentClicked()
    {
        payrollWorkerTaxCodeParameterValue_ds.validTimeStateAutoQuery(ValidTimeStateAutoQuery::AsOfDate);
        payrollWorkerTaxCodeParameterValue_ds.query().resetValidTimeStateQueryType();

        payrollWorkerTaxCodeParameterValue_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDateEffectivenessController</Name>
				<Source><![CDATA[
    public DateEffectivenessPaneController getDateEffectivenessController()
    {
        return dateEffectivenessPaneController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkerRecId</Name>
				<Source><![CDATA[
    public HcmWorkerRecId getWorkerRecId()
    {
        return hcmWorker.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        if (!element.args().caller() || element.args().dataset() != tableNum(HcmWorker))
        {
            throw error("@SYS22539");
        }
        else
        {
            hcmWorker = element.args().record();
        }

        minValidFromDateTime = DateTimeUtil::minValue();
        maxValidFromDateTime = DateTimeUtil::maxValue();

        super();

        //Initialize splitter
        selectedDataAreaRecId = CompanyInfo::findDataArea(LegalEntityComboBox.text()).RecId;

        dateEffectivenessPaneController = DateEffectivenessPaneController::constructWithForm(element, payrollWorkerTaxCode_ds, true, false, false);
        dateEffectivenessPaneController.onApplyClicked += eventhandler(this.datePaneController_ApplyClicked);
        dateEffectivenessPaneController.onShowCurrentClicked += eventhandler(this.datePaneController_CurrentClicked);

        // Set the LE picker to the currently logged in company if the company is an option for
        // the worker based on the paidbyLEs on the worker's positions.
        select firstonly ValidTimeState(minValidFromDateTime, maxValidFromDateTime) RecId from positionDetails
            group by PaidByLegalEntity
                where positionDetails.PaidByLegalEntity == CompanyInfo::current()
            exists join positionWorkerAssignment
                where positionWorkerAssignment.Position == positionDetails.Position
                    && positionWorkerAssignment.Worker == hcmWorker.RecId;

        if (positionDetails)
        {
            LegalEntityComboBox.text(curext());
            selectedDataAreaRecId = CompanyInfo::findDataArea(LegalEntityComboBox.text()).RecId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>openMaintainTaxCodeParamValueVersions</Name>
				<Source><![CDATA[
    public void openMaintainTaxCodeParamValueVersions()
    {
        Args                args;
        MenuFunction        menuFunction;
        FormRun             formRun;

        menuFunction =  new MenuFunction(menuitemDisplayStr(PayrollWorkerTaxCodeParamValDateManager), MenuItemType::Display);

        args = new Args(menuFunction.object());
        args.caller(element);
        args.openMode(OpenMode::View);
        args.lookupTable(tableNum(PayrollWorkerTaxCodeParameterValue));
        args.lookupField(fieldNum(PayrollWorkerTaxCodeParameterValue, RecId));
        args.lookupValue(int642str(PayrollWorkerTaxCodeParameterValue.RecId));

        formRun = ClassFactory::formRunClassOnClient(args);
        formRun.init();
        formRun.run();
        formRun.wait(true);

        payrollWorkerTaxCodeParameterValue_ds.research(true);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>PayrollWorkerTaxCodeParameterValue</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            rangeLegalEntity.value(queryValue(selectedDataAreaRecId));
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            PayrollTaxCodeParameter taxCodeParam;

            int ret;

            ret = super();

            select firstOnly ControlType from taxCodeParam where taxCodeParam.RecId == PayrollWorkerTaxCodeParameterValue.TaxCodeParameter;

            if (taxCodeParam.ControlType == PayrollControlType::Freetext)
            {
                ret = DetailsGrid_Value.lookupButton(FormLookupButton::Never);
            }
            else
            {
                ret = DetailsGrid_Value.lookupButton(FormLookupButton::Always);
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            rangeLegalEntity = this.query().dataSourceName(this.name()).addRange(fieldNum(PayrollWorkerTaxCodeParameterValue, LegalEntity));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>TaxCodeParameter</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                // Suppressing super() call to remove the jumpref functionality as the
                // there is no form corresponding to TaxCodeParameter table
                // super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Value</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                PayrollTaxCodeParameter         taxCodeParam;
                PayrollTaxCodeParameterDuration taxCodeParamDuration;
                PayrollTaxCodeParameterValue    taxCodeParamValue;

                ret = super();

                if (ret && this.getValue())
                {
                    select firstOnly ControlType from taxCodeParam where taxCodeParam.RecId == payrollWorkerTaxCodeParameterValue.TaxCodeParameter;
                    select firstOnly RecId from taxCodeParamDuration where taxCodeParam.RecId == taxCodeParamDuration.TaxCodeParameter;
                    select firstOnly Value, RecId from taxCodeParamValue where taxCodeParamValue.TaxCodeParameterDuration == taxCodeParamDuration.RecId
                        && taxCodeParamValue.Value == this.getValue();

                    if (!taxCodeParamValue.RecId && taxCodeParam.ControlType == PayrollControlType::List)
                    {
                        ret = ret && checkFailed("@Payroll:TheValueEnteredIsNotValidForTheCurrentVersionOfThisWorkerTax");
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                PayrollTaxCodeParameterDuration    taxCodeParamDuration;

                select firstOnly RecId from taxCodeParamDuration where taxCodeParamDuration.TaxCodeParameter == PayrollWorkerTaxCodeParameterValue.TaxCodeParameter;
                PayrollWorkerTaxCodeParameterValue::lookupTaxCodeParameterValues(_formControl, taxCodeParamDuration.RecId, false);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>PayrollWorkerTaxCodeParameterDateManager</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            element.openMaintainTaxCodeParamValueVersions();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LegalEntityComboBox</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                selectedDataAreaRecId = CompanyInfo::findDataArea(LegalEntityComboBox.text()).RecId;
                element.addLERangeOnWorkerTaxCodeParamValue();
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret = true;

            select ValidTimeState(minValidFromDateTime, maxValidFromDateTime) PaidByLegalEntity from positionDetails
                group by PaidByLegalEntity
                    join Position, Worker from positionWorkerAssignment
                    where positionWorkerAssignment.Position == positionDetails.Position
                    && positionWorkerAssignment.Worker == hcmWorker.RecId
                    && positionDetails.PaidByLegalEntity == CompanyInfo::findDataArea(LegalEntityComboBox.text()).RecId;

            if (!positionDetails.PaidByLegalEntity)
            {
                ret = checkFailed(strFmt("@SYS342222", LegalEntityComboBox.text()));
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DetailsGrid_Value</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            #PayrollConstants

            boolean ret = super();

            if (this.lookupButton() == 1) // No lookup, free-text field
            {
                //
                // If the first character is a decimal separator, the str2numOk() will fail, so add the
                // necessary leading zero character so that it can convert to a real.
                //
                str realValueWithleadingZero = element.checkAndAddLeadingZero(this.text());

                boolean isValidNumber = str2numOK(realValueWithleadingZero);
                boolean isLessThanZero = str2num(realValueWithleadingZero) < 0;
                boolean isAdditionalWithholding = element.PayrollTaxCodeParameter.Name == #ADDITIONALWITHHOLDING;
                boolean isNewValue = payrollWorkerTaxCodeParameterValue.orig().Value != realValueWithleadingZero;

                // Only allow negative values for additional withholding parameter values
                if (!isValidNumber || (isLessThanZero && !isAdditionalWithholding))
                {          
                    str warningMessage = isAdditionalWithholding ? strFmt("@Payroll:PayrollNegativeParamaterInvalidValue", element.PayrollTaxCodeParameter.Name)
                                                                 : "@Payroll:ValidValuesForTheSelectedParameterMustBeZeroOrGreaterEnterAV";
                    ret = ret && checkFailed(warningMessage);
                }
                else if (isNewValue)
                {
                    payrollWorkerTaxCodeParameterValue.Value = realValueWithleadingZero;
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>PayrollWorkerTaxCode</Name>
			<Table>PayrollWorkerTaxCode</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayrollTaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Worker</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources>
				<AxFormReferencedDataSource>
					<Name>PayrollTaxCode</Name>
					<Table>PayrollTaxCode</Table>
					<Fields>
						<AxFormDataSourceField>
							<DataField>Code</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>CountryRegionId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>createdBy</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>createdDateTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>dataAreaId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Description</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IsEmployerTax</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>IsPayStatementLineLocked</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>modifiedBy</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>modifiedDateTime</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>RecId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>TableId</DataField>
						</AxFormDataSourceField>
						<AxFormDataSourceField>
							<DataField>Type</DataField>
						</AxFormDataSourceField>
					</Fields>
					<ReferencedDataSources />
					<JoinSource>PayrollWorkerTaxCode</JoinSource>
					<LinkType>OuterJoin</LinkType>
					<JoinRelation>TaxCode_FK</JoinRelation>
				</AxFormReferencedDataSource>
			</ReferencedDataSources>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<Index>WorkerTaxCode_AK1</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PayrollWorkerTaxCodeParameterValue</Name>
			<Table>PayrollWorkerTaxCodeParameterValue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCodeParameter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Value</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkerTaxCode</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PayrollWorkerTaxCode</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<Index>WorkerTaxCodeParameterValue_AK1</Index>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PayrollTaxCodeParameterDuration</Name>
			<Table>PayrollTaxCodeParameterDuration</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCodeParameter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidTo</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PayrollTaxCodeParameter</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>PayrollTaxCodeParameter</Name>
			<Table>PayrollTaxCodeParameter</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ControlType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxEngineTaxCode</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>PayrollWorkerTaxCodeParameterValue</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Payroll:WorkerTaxCodes</Caption>
		<DataSource xmlns="">PayrollWorkerTaxCode</DataSource>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane1</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>Grid_PayrollTaxCode_Code</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>VersionFilter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<AlignChild>No</AlignChild>
						<FrameType>None</FrameType>
						<Style>CustomFilter</Style>
						<ViewEditMode>Edit</ViewEditMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PayrollTaxCode_Code</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>Code</DataField>
								<DataSource>PayrollTaxCode</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PayrollTaxCode_CountryRegionId</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>CountryRegionId</DataField>
								<DataSource>PayrollTaxCode</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PayrollTaxCode_Description</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>PayrollTaxCode</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>PayrollWorkerTaxCode</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>PayrollTaxCodeDetails</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>PayrollTaxCodeDetails_PayrollTaxCode</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PayrollTaxCodeDetails_PayrollTaxCode_Code</Name>
										<DataRelationPath>TaxCode_FK</DataRelationPath>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PayrollTaxCodeDetails_PayrollTaxCode_CountryRegionId</Name>
										<DataRelationPath>TaxCode_FK</DataRelationPath>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
									</AxFormControl>
								</Controls>
								<DataSource>PayrollWorkerTaxCode</DataSource>
								<ReferenceField>PayrollTaxCode</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PayrollTaxCode_Description1</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>PayrollTaxCode</DataSource>
							</AxFormControl>
						</Controls>
						<BottomMargin>5</BottomMargin>
						<BottomMarginMode>Fixed</BottomMarginMode>
						<DataSource>PayrollWorkerTaxCode</DataSource>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<RightMargin>5</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<TopMargin>5</TopMargin>
				<TopMarginMode>Fixed</TopMarginMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>FastTabs</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TaxCodeParameters</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>10</VerticalSpacing>
								<VerticalSpacingMode>Fixed</VerticalSpacingMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>MaintainVersions</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>PayrollWorkerTaxCodeParameterDateManager</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>PayrollWorkerTaxCodeParamValDateManager</MenuItemName>
												<NeedsRecord>Yes</NeedsRecord>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>Vertical</ArrangeMethod>
										<DataSource>PayrollWorkerTaxCodeParameterValue</DataSource>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<DataSource>PayrollWorkerTaxCodeParameterValue</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CustomFilterGroup</Name>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>LegalEntity</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>LegalEntityComboBox</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<ExtendedDataType>PayrollPositionWorkerAssignmentLE</ExtendedDataType>
												<Label>@Payroll:LegalEntity</Label>
											</AxFormControl>
										</Controls>
										<FrameType>None</FrameType>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>DetailsGrid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>DetailsGrid_TaxCodeParameter</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>DetailsGrid_TaxCodeParameter_Name</Name>
												<DataRelationPath>TaxCodeParameter_FK</DataRelationPath>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
											</AxFormControl>
										</Controls>
										<DataSource>PayrollWorkerTaxCodeParameterValue</DataSource>
										<ReferenceField>TaxCodeParameter</ReferenceField>
										<ReplacementFieldGroup>Overview</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaxCodeParameterDescription</Name>
										<ElementPosition>1342177277</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>PayrollTaxCodeParameter</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DetailsGrid_Value</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1744830461</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Value</DataField>
										<DataSource>PayrollWorkerTaxCodeParameterValue</DataSource>
									</AxFormControl>
								</Controls>
								<AlternateRowShading>No</AlternateRowShading>
								<DataSource>PayrollWorkerTaxCodeParameterValue</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@Payroll:TaxCodeParameters</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>