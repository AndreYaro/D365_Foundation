<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ProjControlPeriod_Create</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class ProjControlPeriod_Create extends FormRun
    {
        ProjControlPeriod  projControlPeriod;
}
]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    void closeOk()
    {
        DialogRunbase dialog = element.args().caller();

        dialog.updateServer();

        if (projControlPeriod.checkCloseDialog(this))
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editAllowCont</Name>
				<Source><![CDATA[
    edit NoYes editAllowCont(boolean set, NoYes _noYes)
    {
        if (set)
        {
            projControlPeriod.parmContinuesPeriodes(_noYes);
        }

        return projControlPeriod.parmContinuesPeriodes();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editBeginningBalance</Name>
				<Source><![CDATA[
    edit ProjBeginningBalance editBeginningBalance(boolean set, ProjBeginningBalance _beginningBalance)
    {
        if (set)
        {
            projControlPeriod.parmBeginningBalance(_beginningBalance);
        }

        return projControlPeriod.parmBeginningBalance();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editForecastModelId</Name>
				<Source><![CDATA[
    edit ProjForecastModelId editForecastModelId(boolean set,ForecastModelId _newModel)
    {
        if (set)
        {
            projControlPeriod.parmForecastModelId(_newModel);
        }

        return projControlPeriod.parmForecastModelId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editForecastModelIdold</Name>
				<Source><![CDATA[
    edit ForecastModelId editForecastModelIdold(boolean set, ForecastModelId _oldModel)
    {
        if (set)
        {
            projControlPeriod.parmForcastModelold(_oldModel);
        }

        return projControlPeriod.parmForcastModelold();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editOutputResult</Name>
				<Source><![CDATA[
    edit ProjControlTypeOutput editOutputResult(boolean set, ProjControlTypeOutput _projControlTypeOutput)
    {
        if (set)
        {
            projControlPeriod.parmProjControlTypeOutput(_projControlTypeOutput);
        }

        return projControlPeriod.parmProjControlTypeOutput();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPeriodFrom</Name>
				<Source><![CDATA[
    edit ProjPeriodFrom editPeriodFrom(boolean set,ProjPeriodFrom _periodFrom)
    {
        if (set)
        {
            projControlPeriod.parmProjPeriodFrom(_periodFrom);
        }

        return projControlPeriod.parmProjPeriodFrom();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPeriodId</Name>
				<Source><![CDATA[
    edit ProjPeriodId editPeriodId(boolean set,ProjPeriodId _projPeriodId)
    {
        if (set)
        {
            projControlPeriod.parmProjPeriodId(_projPeriodId);
        }

        return projControlPeriod.parmProjPeriodId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPeriodTo</Name>
				<Source><![CDATA[
    edit ProjPeriodTo editPeriodTo(boolean set,ProjPeriodTo _periodTo)
    {
        if (set)
        {
            projControlPeriod.parmProjPeriodTo(_periodTo);
        }

        return projControlPeriod.parmProjPeriodTo();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editProjCompletionMethod</Name>
				<Source><![CDATA[
    edit ProjControlCompletionMethod editProjCompletionMethod(
        boolean                     set,
        ProjControlCompletionMethod _projCompletionMethod)
    {
        if (set)
        {
            projControlPeriod.parmProjCompletionMethod(_projCompletionMethod);
        }

        return projControlPeriod.parmProjCompletionMethod();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editProjEstimateMethod</Name>
				<Source><![CDATA[
    edit ProjEstimateMethod editProjEstimateMethod(boolean set, ProjEstimateMethod _projEstimateMethod)
    {
        if (set)
        {
            projControlPeriod.parmProjEstimateMethod(_projEstimateMethod);
        }

        return projControlPeriod.parmProjEstimateMethod();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editShowinfoLog</Name>
				<Source><![CDATA[
    edit NoYes editShowinfoLog(boolean set, NoYes _noYes)
    {
        if (set)
        {
            projControlPeriod.parmShowInfoLog(_noYes);
        }

        return projControlPeriod.parmShowInfoLog();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    void init()
    {
        ProjPeriodTo            periodTo;
        ProjPeriodFrom          periodFrom;
        ForecastModelId         modelIdNew;
        ForecastModelId         forecastModelId;

        if (!element.args() || !element.args().caller() || !element.args().caller().runbase())
        {
            // Incorrect parameter for the function '%1'
            throw error(strfmt("@SYS54195", funcname()));
        }

        projControlPeriod = element.args().caller().runbase();

        super();

        if (!projControlPeriod.parmPeriodic())
        {
            periodTo    = projControlPeriod.parmProjPeriodTo()
                        ? ProjPeriodLine::findNextFromPeriodTo(projControlPeriod.parmProjPeriodId(),projControlPeriod.parmProjPeriodTo()).PeriodTo
                        : ProjPeriodLine::findPrevFromDate(projControlPeriod.parmProjPeriodId(),DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())).PeriodTo;
        }
        else
        {
            periodTo    = projControlPeriod.parmProjPeriodTo() ? projControlPeriod.parmProjPeriodTo() : ProjPeriodLine::findPrevFromDate(projControlPeriod.parmProjPeriodId(),DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())).PeriodTo;
        }

        periodFrom  = ProjPeriodLine::findFromPeriodTo(projControlPeriod.parmProjPeriodId(),periodTo).PeriodFrom;

        ctrlPeriodTo.dateValue(periodTo);

        // Check to see if there are something posted...

        projControlPeriod.parmProjPeriodTo(periodTo);
        projControlPeriod.parmProjPeriodFrom(periodFrom);
        projControlPeriod.parmForcastModelold('');

        forecastModelId = ProjPeriodLine::findForecastModelId(projControlPeriod.parmProjPeriodId(), projControlPeriod.parmProjPeriodFrom());
        element.editForecastModelId(true, forecastModelId);
        ctrlOldModel.enabled(forecastModelId ? true : false);

        modelIdNew  = ProjPeriodLine::find(ProjWIPTable::find(projControlPeriod.parmProjWIPProjId()).PeriodId,periodTo).ModelId;

        if (!modelIdNew && !projControlPeriod.parmPeriodic())
        {
            if (!projControlPeriod.parmProjWIPTable().PeriodId)
            {
                // Missing period code for WIP project
                throw error ("@SYS75772");
            }
            else
            {
                modelIdNew = projControlPeriod.parmProjWIPTable().PeriodId;
            }
        }

        if (!projControlPeriod.parmPeriodic())
        {
            projControlPeriod.parmProjPeriodId(ProjWIPTable::find(projControlPeriod.parmProjWIPProjId()).PeriodId);
            ctrlPeriodId.allowEdit(false);
            ctrlPeriodId.skip(true);

            //Set Cost to complete method as Budget to actual for revenue recognition method StraightLine and completion method to automatic
            if (ProjControl::isStraightLine(projControlPeriod.parmProjWIPProjId()))
            {
                ctrlCopyEstimate.text(enum2str(projControlPeriod.parmProjEstimateMethod(ProjEstimateMethod::CostTemplate)));
                ctrlContinuous.value(projControlPeriod.parmContinuesPeriodes(true));
                ctrlContinuous.modified();
                ctrlContinuous.allowEdit(false);
                ctrlProjCompletionMethod.text(enum2str(projControlPeriod.parmProjCompletionMethod(ProjControlCompletionMethod::Automatic)));
                ctrlProjCompletionMethod.allowEdit(false);
            }
            else
            {
                ctrlCopyEstimate.text(enum2str(projControlPeriod.parmProjEstimateMethod(ProjEstimateMethod::CostTemplate)));
                ctrlContinuous.value(projControlPeriod.parmContinuesPeriodes(true));
                ctrlContinuous.modified();
            }
        }
        else
        {
            ctrlContinuous.value(projControlPeriod.parmContinuesPeriodes());
            ctrlContinuous.modified();
            ctrlCopyEstimate.text(enum2str(projControlPeriod.parmProjEstimateMethod(ProjEstimateMethod::CostTemplate)));
            ctrlProjCompletionMethod.text(enum2str(projControlPeriod.parmProjCompletionMethod()));
            ctrlOutputResult.text(enum2str(projControlPeriod.parmProjControlTypeOutput()));
            ctrlShowinfoLog.value(projControlPeriod.parmShowInfoLog());

            // Always set beginning balance to 'No' periodic jobs
            ctrlBeginningBalance.value(NoYes::No);
            ctrlBeginningBalance.enabled(true);
        }
        if (FeatureStateProvider::isFeatureEnabled(ProjEstimatesToRevRecRenameFeature::instance()))
        {
            element.design().caption("@Proj:CreateRevRec");
            CtrlPeriodTo.label("@Proj:RevRecDate");
            CtrlOutputResult.label("@Proj:PrintRevRecList");
            Period.caption("@Proj:RevRecSelection");
            ctrlBeginningBalance.helpText("@Proj:ProjRevRecBegBalCheckboxHelpTextV2");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        //Always disable on init of form (Do not use sysLastValue of field)
        element.editBeginningBalance(true, NoYes::No);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>runbase</Name>
				<Source><![CDATA[
    RunBase runbase()
    {
        return projControlPeriod;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ctrlPeriodId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (!projControlPeriod.parmProjPeriodId())
            {
                ctrlPeriodTo.dateValue(dateNull());
                ctrlPeriodTo.enabled(false);
            }
            else
            {
                ctrlPeriodTo.enabled(true);
            }

            element.editPeriodTo(true,ctrlPeriodTo.dateValue());

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CtrlPeriodTo</Name>
				<Type>Date</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        void lookup()
        {
            ProjPeriodId    projPeriodId = projControlPeriod.parmProjPeriodId();
            ProjPeriodTo    projPeriodTo;

            if (!projControlPeriod.parmPeriodic())
            {
                if (this.dateValue())
                {
                    projPeriodTo = this.dateValue();
                }
                else
                {
                    projPeriodTo = ProjPeriodLine::findPrevFromDate(projPeriodId, (projControlPeriod.parmProjPeriodTo() ? projControlPeriod.parmProjPeriodTo() : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))).PeriodTo;
                }
            }
            else
            {
                if (this.dateValue())
                {
                    projPeriodTo = this.dateValue();
                }
                else
                {
                    projPeriodTo = ProjPeriodLine::findPrevFromDate(projPeriodId, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())).PeriodTo;
                }
            }

            ProjPeriodLine::lookupPeriodTo(this, projPeriodId, projPeriodTo);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        boolean modified()
        {
            boolean ret;
            ForecastModelId forecastModelId;

            ret = super();

            element.editPeriodFrom(true, ProjPeriodLine::findFromPeriodTo(projControlPeriod.parmProjPeriodId(),this.dateValue()).PeriodFrom);

            forecastModelId = ProjPeriodLine::findForecastModelId(projControlPeriod.parmProjPeriodId(),projControlPeriod.parmProjPeriodFrom());
            projControlPeriod.parmForecastModelId(forecastModelId);
            ctrlNewModel.text(forecastModelId);

            element.editForecastModelId(true, forecastModelId);
            ctrlOldModel.enabled(forecastModelId ? true : false);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ctrlBeginningBalance</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret = super();

            if (!projControlPeriod.parmPeriodic())
            {
                ProjSalesPriceMatchingPrincip salesPriceMatchingPrincip = ProjRevRecHelper::getSalesPriceMatchingPrincipleForProject(ProjWIPTable::find(projControlPeriod.parmProjWIPProjId()).ProjId);
                if (salesPriceMatchingPrincip != ProjSalesPriceMatchingPrincip::None)
                {
                    ret = checkFailed("@SYS302044");
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CtrlNewModel</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (!ForecastModel::checkModel(ctrlNewModel.valueStr()))
            {
               element.editForecastModelId(true,'');
            }

            if (this.text())
            {
                ctrlOldModel.enabled(true);
            }
            else
            {
                ctrlOldModel.text('');
                ctrlOldModel.enabled(false);

                element.editForecastModelIdold(true,'');
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Filters out all nonbudget models.
        /// </summary>
        public void lookup()
        {
            ForecastModel::lookupOpenModels(ctrlNewModel);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SYS73682</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>Custom</Pattern>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabControl">
						<Name>Tab</Name>
						<AlignControl>No</AlignControl>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Tab</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormTabPageControl">
								<Name>TabPage</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>TabPage</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>RightButtonGrp</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Left>0</Left>
										<Type>ButtonGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Period</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ctrlPeriodId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>477218588</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>EditPeriodId</DataMethod>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateControl">
												<Name>CtrlPeriodTo</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>715827882</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>Date</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editPeriodTo</DataMethod>
												<Label>@SYS74643</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>CtrlContinuous</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>954437176</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editAllowCont</DataMethod>
												<Label>@SYS25024</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>CtrlCopyEstimate</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1193046470</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editProjEstimateMethod</DataMethod>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>ctrlProjCompletionMethod</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editProjCompletionMethod</DataMethod>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>ctrlBeginningBalance</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1670265058</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@Proj:ProjRevRecBegBalCheckboxHelpText</HelpText>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editBeginningBalance</DataMethod>
												<Label>@Proj:ProjRevRecBeginningBalanceLabel</Label>
											</AxFormControl>
										</Controls>
										<Caption>@SYS90861</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Forecast</Name>
										<ElementPosition>1908874352</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CtrlNewModel</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editForecastModelId</DataMethod>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>CtrlOldModel</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editForecastModelIdold</DataMethod>
												<Label>@SYS90863</Label>
											</AxFormControl>
										</Controls>
										<Caption>@SYS13699</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>OutputGrp</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>CtrlOutputResult</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ComboBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editOutputResult</DataMethod>
												<Label>@SYS90751</Label>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>CtrlShowInfoLog</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1610612733</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@FieldDescriptions_ProjectManagementAndAccounting:ProjControlPeriod_Create_CtrlShowInfoLog</HelpText>
												<Type>CheckBox</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editShowinfoLog</DataMethod>
												<Label>@SYS74132</Label>
											</AxFormControl>
										</Controls>
										<Caption>@SYS4742</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>dialogStartGrp</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<FrameType>None</FrameType>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<Caption>@SYS19924</Caption>
								<Scrollbars>Auto</Scrollbars>
							</AxFormControl>
						</Controls>
						<AlignChild>No</AlignChild>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>BottomGrp</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>