<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>ResWBSResourceAssignment</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class ResWBSResourceAssignment extends FormRun
{
    #timeconstants
    private ResCharacteristicsController resourceCharacteristics;
    private ResAvailabilityViewSearchController searchController;
    private ResourceCategoryId resourceCategoryId;
    private PSARSEntityType activityType;
    private ActivityRecId activity;
    private ResAvailabilityViewContext context;
    private ResEngagementIDName engagementIDName;
    private AvailabilityViewSelections previousSelections;
    private boolean requestWorkflowEnabled;
    private Map selectedRequestLinesMap;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize task assignments form.
    /// </summary>
    public void init()
    {
        super();

        ResUtil::validateResPerfDataUpgradeStatus();

        context = element.args().parmObject();

        requestWorkflowEnabled = ResRequestHelper::isWorkflowEnabled();
        RequestLineWorkflowDropDialog.visible(requestWorkflowEnabled);
        Confirm.visible(!requestWorkflowEnabled);

        boolean insufficientCalendarRecords;

        if (context)
        {
            activity = context.activity();
            smmActivities task = smmActivities::findWithRecId(activity);
            PSAActivitySetup taskSetup = PSAActivitySetup::findActivityNumber(task.ActivityNumber);

            str activityContext = context.description();
            engagementIDName = activityContext;
            str caption;

            if (activityContext == '')
            {
                caption = strfmt("@Res:ResourceAssignmentCaption", task.Purpose);
            }
            else
            {
                caption = strfmt("@Res:ResourceAssignmentCaptionContext", activityContext, task.Purpose);
            }

            this.design().caption(caption);

            // initialize task context
            str taskDisplay = strFmt("%1 - %2", task.ActivityNumber, task.Purpose);
            TaskId.text(taskDisplay);

            // Close this form if ResRollupCalendarShared does not have sufficient TimeFrame range.
            if (ResUtil::validateRollupCalendarTimeFrameRange(context.startDateTime(), context.endDateTime(), false, element))
            {
                StartDateTime.dateTimeValue(context.startDateTime());
                EndDateTime.dateTimeValue(context.endDateTime());
                Effort.realValue(taskSetup.Effort);

                ResourceCount.realValue(taskSetup.NumberOfResources);
                ResSearchCriteria searchCriteria = ResSearchCriteria::createCriteria(context.searchString());
                ClassId resourceCategoryClassId = classNum(ResResourceCategorySearchCriteria);
                ResISearchCriteriaItem searchCriteriaItem = searchCriteria.getCriteriaItem(resourceCategoryClassId);

                if (searchCriteriaItem)
                {
                    resourceCategoryId = searchCriteriaItem.getValues();
                }

                ResourceCategoryRecId defaultCategory = ResourceCategoryFacade::defaultResourceCategory();
                ResourceCategoryId categoryId = ResourceCategoryFacade::getId(defaultCategory);

                if (resourceCategoryId == categoryId || resourceCategoryId == "")
                {
                    RoleCriteriaRequired.enabled(false);
                    RoleCriteriaRequired.value(0);
                }
                else
                {
                    categoryId = resourceCategoryId;
                }

                if (resourceCategoryId == "")
                {
                    searchCriteria.removeCriteriaItem(resourceCategoryClassId);
                    context.searchString(searchCriteria.getCriteriaString());
                    categoryId = resourceCategoryId;
                }

                ResourceCategory.text(categoryId);

                activityType = context.activityType();
                if (activityType == PSARSEntityType::Quotation)
                {
                    Confirm.visible(false);
                    HardAssignMenu.visible(false);
                    StaffedResourceAssignmentDetails.visible(false);
                    PlannedResourceAssignmentDetails.visible(false);
                    TotalHardAssignedHours.visible(false);
                    TotalAssignmentDetails.caption("@Res:AssignmentDetails");
                }

                element.refreshAssignedHoursAndStaffingStatus(null);

                // initialize availability view
                ResourceAssignmentView.startDateTime(StartDateTime.dateTimeValue());
                ResourceAssignmentView.endDateTime(EndDateTime.dateTimeValue());
                AVTimeframeType timescale = ResUtil::getRecommendedTimeframeType(
                ResourceAssignmentView.startDateTime(),
                ResourceAssignmentView.endDateTime());
                ResourceAssignmentView.timescale(timescale);

                ResAvailabilityViewSetting viewSetting = ResAvailabilityViewSetting::construct();
                viewSetting.coverage(ResUserSettingCoverage::ResourceAssignmentView);
                viewSetting.find();

                context.timescale(timescale);
                context.showRemainingCapacity(viewSetting.showScheduleCapacity());
                context.showScheduleDescription(viewSetting.showScheduleDescription());
                context.capacityAggregation(viewSetting.capacityAggregation());
                context.resReservationType(ResReservationType::Assignment);

                ResourceAssignmentView.controlContext(context);
            }
            else
            {
                insufficientCalendarRecords = true;
            }

        }

        if (!insufficientCalendarRecords)
        {
            searchController = ResAvailabilityViewSearchController::newFromAvailabilityViewControl(ResourceAssignmentView);
            resourceCharacteristics = ResCharacteristicsController::createCharacteristics(searchController.searchCriteria());
            resourceCharacteristics.searchCriteriaReady += eventhandler(element.applyAdvancedSearchCriteria);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>viewSettingsReady</Name>
				<Source><![CDATA[
    /// <summary>
    /// Apply selected view settings.
    /// </summary>
    /// <param name = "_viewSetting">View settings instance.</param>
    void viewSettingsReady(ResAvailabilityViewSetting _viewSetting)
    {
        context = ResourceAssignmentView.controlContext();
        boolean hasChanged;
        boolean needsRefresh;

        utcdatetime dateTime;
        dateTime = _viewSetting.startDateTime();
        if (context.StartDateTime() != dateTime)
        {
            context.StartDateTime(dateTime);
            ResourceAssignmentView.startDateTime(dateTime);
            hasChanged = true;
            needsRefresh = true;
        }

        dateTime = _viewSetting.endDateTime();
        if (context.EndDateTime() != dateTime)
        {
            context.EndDateTime(dateTime);
            ResourceAssignmentView.endDateTime(dateTime);
            hasChanged = true;
            needsRefresh = true;
        }

        AVTimeframeType timescale = _viewSetting.timescale();
        if (context.Timescale() != timescale)
        {
            context.Timescale(timescale);
            ResourceAssignmentView.timescale(timescale);
            hasChanged = true;
            needsRefresh = true;
        }

        boolean showContent;
        showContent = _viewSetting.showScheduleDescription();
        if (context.ShowScheduleDescription() != showContent)
        {
            context.ShowScheduleDescription(showContent);
            hasChanged = true;
        }

        showContent = _viewSetting.showScheduleCapacity();
        if (context.ShowRemainingCapacity() != showContent)
        {
            context.ShowRemainingCapacity(showContent);
            hasChanged = true;
        }

        ResCapacityAggregation aggregation = _viewSetting.capacityAggregation();
        if (context.CapacityAggregation() != aggregation)
        {
            context.CapacityAggregation(aggregation);
            hasChanged = true;
            needsRefresh = true;
        }

        if (hasChanged)
        {
            ResourceAssignmentView.controlContext(context);
        }

        if (needsRefresh)
        {
            ResourceAssignmentView.clearSelections();
            ResourceAssignmentView.refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyAdvancedSearchCriteria</Name>
				<Source><![CDATA[
    /// <summary>
    /// Apply selected search criteria.
    /// </summary>
    void applyAdvancedSearchCriteria()
    {
        ResSearchCriteria searchCriteria = resourceCharacteristics.searchCriteria();
        ResResourceCategorySearchCriteria criteriaItem = searchCriteria.getCriteriaItem(classNum(ResResourceCategorySearchCriteria));
        boolean requiredRoleExists = false;
        str resourceCategoryCriteria;

        if (criteriaItem)
        {
            resourceCategoryCriteria = criteriaItem.getValues();
            Enumerator enumerator = criteriaItem.getCriteriaItemValuesEnumerator();
            while (enumerator.moveNext())
            {
                if (resourceCategoryId == enumerator.current())
                {
                    requiredRoleExists = true;
                    break;
                }
            }
        }

        RoleCriteriaRequired.checked(requiredRoleExists);

        searchController.searchCriteria(resourceCharacteristics.searchCriteria());
        searchController.searchByAnyCriteria(SearchString.text());
        searchController.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshAssignedHoursAndStaffingStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refresh assigned hours and staffing status.
    /// </summary>
    /// <param name = "_eventData">Action completed event data.</param>
    void refreshAssignedHoursAndStaffingStatus(AVActionCompletedEventData _eventData)
    {
        // get task staffing status and set it
        ProjPlanVersion planVersion = ProjPlanVersion::findByActivityRecId(activity);

        if (planVersion)
        {
            TaskStaffingStatus.text(enum2str(planVersion.TaskSchedulingStatus));
        }

        // get task total hard and soft assigned hours and planned hard and soft assigned hours
        real totalSoftAssigned = ActivityFacade::getAssignedCapacity(activity,
            ResCommitType::SoftBook, true) / #secondsPerHour;
        TotalSoftAssignedHours.realValue(totalSoftAssigned);

        if (activityType == PSARSEntityType::Project)
        {
            real totalHardAssigned = ActivityFacade::getAssignedCapacityInHours(activity, ResCommitType::HardBook, true);
            TotalHardAssignedHours.realValue(totalHardAssigned);

            real staffedResourceHardAssigned = ActivityFacade::getAssignedCapacityInHours(activity, ResCommitType::HardBook, false);
            NamedResourceHardAssignedHours.realValue(staffedResourceHardAssigned);

            real staffedResourceSoftAssigned = ActivityFacade::getAssignedCapacityInHours(activity, ResCommitType::SoftBook, false);
            NamedResourceSoftAssignedHours.realValue(staffedResourceSoftAssigned);

            PlannedResourceHardAssignedHours.realValue(totalHardAssigned - staffedResourceHardAssigned);
            PlannedResourceSoftAssignedHours.realValue(totalSoftAssigned - staffedResourceSoftAssigned);
        }

        if (_eventData)
        {
            boolean controlRefreshNeeded = false;
            Enumerator enumerator;

            if (!controlRefreshNeeded)
            {
                // determine if control refresh is needed from selected collection items
                // due to change in resource affiliation: company resource to project resource
                CollectionItemDataContract collectionItem;
                enumerator = _eventData.SelectedCollectionItems().getEnumerator();

                while (enumerator.moveNext())
                {
                    // if a company resource is reserved, the collection key should be changed
                    collectionItem = enumerator.current();
                    if (ResUtil::isCompanyResourceFromActivityResourceId(collectionItem.collectionKey()))
                    {
                        controlRefreshNeeded = true;
                        break;
                    }
                    // in case of cancel reservation, resource could be removed from PSAProjSchedRole table for quotation
                    ActivityResourceRecId resourceActivityResource = ResUtil::getActivityResourceRecId(collectionItem.collectionKey());
                    if (resourceActivityResource && !PSAProjSchedRole::findByRecId(resourceActivityResource))
                    {
                        controlRefreshNeeded = true;
                        break;
                    }
                }
            }

            if (!controlRefreshNeeded)
            {
                // determine if control refresh is needed from selected chart items
                // due to change in resource affiliation: company resource to project resource
                ChartItemDataContract chartItem;
                enumerator = _eventData.SelectedChartItems().getEnumerator();

                while (enumerator.moveNext())
                {
                    chartItem = enumerator.current();
                    chartItem.getKeyFactors();

                    // if a company resource is reserved, the collection key should be changed
                    if (ResUtil::isCompanyResourceFromActivityResourceId(chartItem.collectionKey()))
                    {
                        controlRefreshNeeded = true;
                        break;
                    }
                    // in case of cancel reservation, resource could be removed from PSAProjSchedRole table for quotation
                    ActivityResourceRecId resourceActivityResource = ResUtil::getActivityResourceRecId(chartItem.collectionKey());
                    if (resourceActivityResource && !PSAProjSchedRole::findByRecId(resourceActivityResource))
                    {
                        controlRefreshNeeded = true;
                        break;
                    }
                }
            }

            if (controlRefreshNeeded)
            {
                ResourceAssignmentView.refresh();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWorkflowButton</Name>
				<Source><![CDATA[
    private void setWorkflowButton()
    {
        if (requestWorkflowEnabled)
        {
            RequestLineWorkflowDropDialog.enabled(!ResResourceReservationDetails::areMultipleRecordsSelected(ReservationDetails_ds));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getUserSelectedRequestLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get or set user selected <c>ResRequestLine</c> map with ResRequestLine.Hour as key,
    /// and container as value which has [ResRequestLine.RecId, resource rec ID, activity resource rec ID].
    /// </summary>
    /// <param name = "_selectedRequestLineMap">User selected <c>ResRequestLine</c> map.</param>
    /// <returns>User selected <c>ResRequestLine</c> map.</returns>
    public Map getUserSelectedRequestLines(Map _selectedRequestLinesMap = selectedRequestLinesMap)
    {
        selectedRequestLinesMap = _selectedRequestLinesMap;
        return selectedRequestLinesMap;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>ReservationDetails</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// To Enable/Disable confirm and cancel buttons for selected record.
        /// </summary>
        /// <returns></returns>
        public int active()
        {
            int ret;

            ret = super();

            boolean currentEngagementSelected = ResResourceReservationDetails::isOnlyCurrentEngagementSelected(ReservationDetails_ds, engagementIDName);

            Confirm.enabled(currentEngagementSelected);

            if (!requestWorkflowEnabled)
            {
                Cancel.enabled(currentEngagementSelected);
            }
            else
            {
                Cancel.enabled(currentEngagementSelected && !ResResourceReservationDetails::isWorkflowRecordSelected(ReservationDetails_ds));
                ResRequestLine_DS.executeQuery();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>ResRequestLine</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes query for resource request lines.
        /// </summary>
        public void executeQuery()
        {
            Map userRequestLinesSelectionMap = new Map(Types::UtcDateTime, Types::Class);
            RefRecId earliestResRequestLineRecId = ResResourceReservationDetails::getEarliestRequestLine(ReservationDetails, userRequestLinesSelectionMap);
            element.getUserSelectedRequestLines(userRequestLinesSelectionMap);

            QueryBuildDataSource dataSource = this.query().dataSourceTable(tableNum(ResRequestLine));
            dataSource.clearRanges();
            SysQuery::findOrCreateRange(dataSource, fieldnum(ResRequestLine, RecId)).value(queryValue(earliestResRequestLineRecId));

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Override data source ResReqestLine active method to update workflow buttons setting.
        /// </summary>
        /// <returns></returns>
        public int active()
        {
            int ret;

            ret = super();
            element.setWorkflowButton();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SoftAssignRemainingCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Soft assign remaining capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResWBSUsageDataController dataController = ResWBSUsageDataController::construct(ResourceAssignmentView);
            dataController.actionCompleted += eventhandler(element.refreshAssignedHoursAndStaffingStatus);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(SBRemainingCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SoftAssignFullCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Soft assign full capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResWBSUsageDataController dataController = ResWBSUsageDataController::construct(ResourceAssignmentView);
            dataController.actionCompleted += eventhandler(element.refreshAssignedHoursAndStaffingStatus);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(SBFullCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SoftAssignPartialCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Soft assign partial capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResWBSUsageDataController dataController = ResWBSUsageDataController::construct(ResourceAssignmentView);
            dataController.actionCompleted += eventhandler(element.refreshAssignedHoursAndStaffingStatus);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(SBPartialCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SoftAssignHours</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Soft assign hour capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResWBSUsageDataController dataController = ResWBSUsageDataController::construct(ResourceAssignmentView);
            dataController.actionCompleted += eventhandler(element.refreshAssignedHoursAndStaffingStatus);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(SBHours));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HardAssignRemainingCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Hard assign remaining capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResWBSUsageDataController dataController = ResWBSUsageDataController::construct(ResourceAssignmentView);
            dataController.actionCompleted += eventhandler(element.refreshAssignedHoursAndStaffingStatus);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(HBRemainingCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HardAssignFullCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Hard assign full capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResWBSUsageDataController dataController = ResWBSUsageDataController::construct(ResourceAssignmentView);
            dataController.actionCompleted += eventhandler(element.refreshAssignedHoursAndStaffingStatus);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(HBFullCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HardAssignPartialCapacity</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Hard assign partial capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResWBSUsageDataController dataController = ResWBSUsageDataController::construct(ResourceAssignmentView);
            dataController.actionCompleted += eventhandler(element.refreshAssignedHoursAndStaffingStatus);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(HBPartialCapacity));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>HardAssignHours</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Hard assign hour capacity of selected schedules.
        /// </summary>
        public void clicked()
        {
            super();
            ResWBSUsageDataController dataController = ResWBSUsageDataController::construct(ResourceAssignmentView);
            dataController.actionCompleted += eventhandler(element.refreshAssignedHoursAndStaffingStatus);
            dataController.parmResourceReservationDetails(ReservationDetails);
            dataController.parmFormDataSource(ReservationDetails_ds);
            dataController.executeAction(identifierStr(HBHours));
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ClearSelections</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Clear all control selections.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAssignmentView.clearSelections();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Synchronize</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Synchronizes project resource availability view.
        /// </summary>
        public void clicked()
        {
            super();
            if (previousSelections)
            {
                int selectedRecord = ReservationDetails_ds.getPosition();
                ResourceAssignmentView.selections(previousSelections);
                ReservationDetails_ds.setPosition(selectedRecord);
            }
            ResourceAssignmentView.clearSelections();
            ResourceAssignmentView.refreshAll();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OpenViewSettings</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Open resource assignment view settings.
        /// </summary>
        public void clicked()
        {
            super();

            ResAvailabilityViewSetting viewSetting = ResAvailabilityViewSetting::construct();
            viewSetting.startDateTime(ResourceAssignmentView.startDateTime());
            viewSetting.endDateTime(ResourceAssignmentView.endDateTime());
            viewSetting.timescale(ResourceAssignmentView.timescale());

            context = ResourceAssignmentView.controlContext();
            viewSetting.capacityToggleDescription("@SYS4008832");
            viewSetting.showScheduleCapacity(context.ShowRemainingCapacity());
            viewSetting.showScheduleDescription(context.ShowScheduleDescription());
            viewSetting.capacityAggregation(context.CapacityAggregation());

            viewSetting.coverage(ResUserSettingCoverage::ResourceAssignmentView);
            viewSetting.selectionsReady += eventhandler(element.viewSettingsReady);
            viewSetting.showForm();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SearchString</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Automatically search for matching resource names when user leaves search field.
        /// </summary>
        /// <returns>Passes on the return of super.</returns>
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                ResourceAssignmentView.clearSelections();
                searchController.searchByName(SearchString.text());
                searchController.refresh();
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Search</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Finds resources that qualifies the search criteria.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAssignmentView.clearSelections();
            searchController.searchByName(SearchString.text());
            searchController.refresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AdvancedSearch</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Open advanced search criteria form.
        /// </summary>
        public void clicked()
        {
            super();
            ResourceAssignmentView.clearSelections();
            resourceCharacteristics.showForm();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>RoleCriteriaRequired</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Toggle resource category requirement in resource search.
        /// </summary>
        public void clicked()
        {
            super();

            ResSearchCriteria searchCriteria = resourceCharacteristics.searchCriteria();
            ResSearchCriteriaItem criteriaItem = searchCriteria.getCriteriaItem(classNum(ResResourceCategorySearchCriteria));
            str criteriaValues;
            boolean isChecked = this.checked();

            if (criteriaItem)
            {
                if (isChecked)
                {
                    criteriaItem.addValue(resourceCategoryId);
                }
                else
                {
                    criteriaItem.removeValue(resourceCategoryId);
                }

                criteriaValues = criteriaItem.getValues();
            }
            else
            {
                if (isChecked)
                {
                    criteriaValues = resourceCategoryId;
                }
            }

            ResourceAssignmentView.clearSelections();
            searchController.searchByResourceCategory(criteriaValues);
            searchController.refresh();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ResourceAssignmentView</Name>
				<Type>Custom</Type>
				<Methods>
					<Method>
						<Name>startDateTimeStr</Name>
						<Source><![CDATA[
        /// <summary>
        /// Adjust start date/time with AvailableResources control.
        /// </summary>
        /// <param name = "_value">Start date/time string.</param>
        /// <returns>Start date/time value string.</returns>
        public str startDateTimeStr(str _value = AVUtil::getDateTimeStr(StartDateTime.dateTimeValue()))
        {
            str ret = super(_value);
            StartDateTime.dateTimeValue(AVUtil::getDateTime(ret));
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>endDateTimeStr</Name>
						<Source><![CDATA[
        /// <summary>
        /// Adjust end date/time with AvailableResources control.
        /// </summary>
        /// <param name = "_value">End date/time string.</param>
        /// <returns>End date/time value string.</returns>
        public str endDateTimeStr(str _value = AVUtil::getDateTimeStr(EndDateTime.dateTimeValue()))
        {
            str ret = super(_value);
            EndDateTime.dateTimeValue(AVUtil::getDateTime(ret));
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selections</Name>
						<Source><![CDATA[
        /// <summary>
        /// Update resource reservation details grid upon user updating chart item selection.
        /// </summary>
        /// <param name = "_selections">Chart item selections.</param>
        /// <returns>Chart item selections.</returns>
        public AvailabilityViewSelections selections(AvailabilityViewSelections _selections)
        {
            AvailabilityViewSelections avSelections = super (_selections);
            boolean isStaffedResourceSelected;
            boolean isPlannedResourceSelected;
            [isStaffedResourceSelected, isPlannedResourceSelected] = ResResourceReservationDetails::updateReservationDetailsTable(
                _selections, context.timescale(), ReservationDetails, ReservationDetails_ds);

            SoftAssignMenu.enabled(isStaffedResourceSelected && !isPlannedResourceSelected);
            previousSelections = _selections;
            return avSelections;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Cancel</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Cancel resource reservation according to user selections.
        /// </summary>
        public void clicked()
        {
            super();
            ResResourceReservationDetails resourceReservation = new ResResourceReservationDetails(ResourceAssignmentView);
            resourceReservation.cancelOperationV2(ReservationDetails, ReservationDetails_ds, context.timescale());
            element.refreshAssignedHoursAndStaffingStatus(null);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Confirm</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Confirm resource soft reservation according to user selections.
        /// </summary>
        public void clicked()
        {
            super();

            ResResourceReservationDetails resourceReservation = new ResResourceReservationDetails(ResourceAssignmentView);
            resourceReservation.confirmOperationV2(ReservationDetails, ReservationDetails_ds, context.timescale());
            element.refreshAssignedHoursAndStaffingStatus(null);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>ReservationDetails</Name>
			<Table>ResTmpResourceReservationDetails</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Activity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActivityResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommitType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EngagementIDName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EngagementType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservedHours</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Resource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceLegalEntity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResourceName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StartTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaskName</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>ResRequestLine</Name>
			<Table>ResRequestLine</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Activity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActivityResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApprovalStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssignedResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Day</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>End</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HalfYear</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Hour</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Month</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalRequestedResource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Quarter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Request</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReservationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Start</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Week</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>ReservationDetails</JoinSource>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@Res:ResourceAssignmentCaption</Caption>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>Execute</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>SoftAssignMenu</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612731</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SoftAssignRemainingCapacity</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4008936</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SoftAssignFullCapacity</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009012</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SoftAssignPartialCapacity</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009013</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>SoftAssignHours</Name>
										<ElementPosition>1932735281</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009865</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<Text>@Res:SoftAssignment</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>HardAssignMenu</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HardAssignRemainingCapacity</Name>
										<ElementPosition>858993458</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4008936</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HardAssignFullCapacity</Name>
										<ElementPosition>1288490187</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009012</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HardAssignPartialCapacity</Name>
										<ElementPosition>1717986916</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009013</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>HardAssignHours</Name>
										<ElementPosition>1932735281</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<Text>@SYS4009865</Text>
									</AxFormControl>
								</Controls>
								<ButtonDisplay>TextOnly</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<Text>@Res:HardAssignment</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ClearSelections</Name>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>ClearSelection</NormalImage>
								<Text>@Res:ClearSelections</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>View</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Synchronize</Name>
								<HelpText>@Res:SynchronizeProjectResourceAvailability</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>Sync</NormalImage>
								<Text>@Res:ResourceGridRefresh</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>OpenViewSettings</Name>
								<HelpText>@Res:ViewSettingsHelpText</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>View</NormalImage>
								<Text>@Res:ViewSettings</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderControls</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<ColumnsMode>Fill</ColumnsMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Assignment</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FieldsTab</Name>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TaskDetails</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaskId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@ProjPlan:HierarchyTaskId</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TaskStaffingStatus</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:StaffingStatus</Label>
									</AxFormControl>
								</Controls>
								<Caption>@Res:TaskDetails</Caption>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DurationDetails</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>StartDateTime</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Proj:StartDate</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>EndDateTime</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Proj:EndDate</Label>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@Res:Duration</Caption>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ResourceDetails</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ResourceCount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:NumberOfResources</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ResourceCategory</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:ResourceRole</Label>
									</AxFormControl>
								</Controls>
								<Caption>@Res:ResourceDetails</Caption>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>EffortDetails</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Effort</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Proj:ExpectedEffort</Label>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@Res:Effort</Caption>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PlannedResourceAssignmentDetails</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PlannedResourceHardAssignedHours</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:HardAssignedHours</Label>
										<NoOfDecimals>2</NoOfDecimals>
										<NoOfDecimalsMode>Fixed</NoOfDecimalsMode>
										<ShowZero>Yes</ShowZero>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PlannedResourceSoftAssignedHours</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:SoftAssignedHours</Label>
										<NoOfDecimals>2</NoOfDecimals>
										<NoOfDecimalsMode>Fixed</NoOfDecimalsMode>
										<ShowZero>Yes</ShowZero>
									</AxFormControl>
								</Controls>
								<Caption>@Res:PlannedResourceAssignment</Caption>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>StaffedResourceAssignmentDetails</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>NamedResourceHardAssignedHours</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:HardAssignedHours</Label>
										<NoOfDecimals>2</NoOfDecimals>
										<NoOfDecimalsMode>Fixed</NoOfDecimalsMode>
										<ShowZero>Yes</ShowZero>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>NamedResourceSoftAssignedHours</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:SoftAssignedHours</Label>
										<NoOfDecimals>2</NoOfDecimals>
										<NoOfDecimalsMode>Fixed</NoOfDecimalsMode>
										<ShowZero>Yes</ShowZero>
									</AxFormControl>
								</Controls>
								<Caption>@Res:StaffedResourceAssignment</Caption>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TotalAssignmentDetails</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TotalHardAssignedHours</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:HardAssignedHours</Label>
										<NoOfDecimals>2</NoOfDecimals>
										<NoOfDecimalsMode>Fixed</NoOfDecimalsMode>
										<ShowZero>Yes</ShowZero>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TotalSoftAssignedHours</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:SoftAssignedHours</Label>
										<NoOfDecimals>2</NoOfDecimals>
										<NoOfDecimalsMode>Fixed</NoOfDecimalsMode>
										<ShowZero>Yes</ShowZero>
									</AxFormControl>
								</Controls>
								<Caption>@Res:TotalAssignment</Caption>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
						</Controls>
						<Columns>7</Columns>
						<Caption>@Res:TaskDetails</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AssignmentChart</Name>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SearchControls</Name>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SearchString</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>Name</Label>
										<ViewEditMode>Edit</ViewEditMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>Search</Name>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>ImageOnly</ButtonDisplay>
										<NormalImage>Find</NormalImage>
										<Text>@SYS3340</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>AdvancedSearch</Name>
										<Type>Button</Type>
										<Width>64</Width>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>ImageOnly</ButtonDisplay>
										<NormalImage>More</NormalImage>
										<Text>@Res:AdvancedSearch</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>RoleCriteriaRequired</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:RoleCriteraiRequired</Label>
										<Value>1</Value>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Legend</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>AvailableIcon</Name>
										<ExtendedStyle>image_Available</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendAvailable</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>AvailableLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendAvailable</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>PartiallyAvailableIcon</Name>
										<ExtendedStyle>image_PartiallyAvailable</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendPartiallyAvailable</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>PartiallyAvailableLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendPartiallyAvailable</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>BookedIcon</Name>
										<ExtendedStyle>image_Booked</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendBooked</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>BookedLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendBooked</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>OverbookedIcon</Name>
										<ExtendedStyle>image_Overbooked</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendOverbooked</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>OverbookedLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendOverbooked</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>UnavailableIcon</Name>
										<ExtendedStyle>image_Unavailable</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:LegendUnavailable</Label>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>UnavailableLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:LegendUnavailable</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>SoftbookedIcon</Name>
										<ExtendedStyle>image_gridIcon</ExtendedStyle>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@Res:SoftReservedOrRequested</Label>
										<NormalImage>Tag</NormalImage>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>SoftbookedLabel</Name>
										<Skip>Yes</Skip>
										<Type>StaticText</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@Res:SoftReservedOrRequested</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalRight</ArrangeMethod>
							</AxFormControl>
							<AxFormControl>
								<Name>ResourceAssignmentView</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>SizeToAvailable</HeightMode>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>AvailabilityView</Name>
									<ExtensionComponents>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>Collection</Name>
											<ComponentType>AvailabilityViewBuildCollection</ComponentType>
											<IsSystem>true</IsSystem>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>CollectionKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TemplateId</Name>
													<Type>Enum</Type>
													<TypeName>CollectionTemplates</TypeName>
													<Value>FlatList</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>Title</Name>
													<Type>String</Type>
													<Value>@Res:Resources</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>WidthValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>WidthMode</Name>
													<Type>Enum</Type>
													<TypeName>FormWidth</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>DataSource</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>TableName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>ItemLayout</Name>
													<Type>String</Type>
													<Value>ResourceCard</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>SelectionType</Name>
													<Type>Enum</Type>
													<TypeName>AVSelectionType</TypeName>
													<Value>Multiple</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>addMoreContent</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>True</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>rows</Name>
													<Type>Int32</Type>
													<Value>20</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>topBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>topBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>bottomBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>bottomBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>CollectionFields</Name>
											<ExtensionComponents>
												<AxFormControlExtensionComponent xmlns=""
													i:type="AxFormControlExtensionComponentLeaf">
													<Name>Name</Name>
													<ComponentType>AvailabilityViewField</ComponentType>
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>DataField</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>FieldName</TypeName>
															<Value>Name</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>IsGroup</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</AxFormControlExtensionComponent>
												<AxFormControlExtensionComponent xmlns=""
													i:type="AxFormControlExtensionComponentLeaf">
													<Name>Role</Name>
													<ComponentType>AvailabilityViewField</ComponentType>
													<ExtensionProperties>
														<AxFormControlExtensionProperty>
															<Name>DataField</Name>
															<Type>ExtendedDataType</Type>
															<TypeName>FieldName</TypeName>
															<Value>Company</Value>
														</AxFormControlExtensionProperty>
														<AxFormControlExtensionProperty>
															<Name>IsGroup</Name>
															<Type>Enum</Type>
															<TypeName>boolean</TypeName>
															<Value>False</Value>
														</AxFormControlExtensionProperty>
													</ExtensionProperties>
												</AxFormControlExtensionComponent>
											</ExtensionComponents>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>Timeline</Name>
											<ComponentType>AvailabilityViewBuildTimeline</ComponentType>
											<IsSystem>true</IsSystem>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>TimelineKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TemplateId</Name>
													<Type>Enum</Type>
													<TypeName>TimelineTemplates</TypeName>
													<Value>PointInTime</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>HeightValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>HeightMode</Name>
													<Type>Enum</Type>
													<TypeName>FormHeight</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>DataSource</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>TableName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>ItemLayout</Name>
													<Type>String</Type>
													<Value>TimeframeHTM</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>SelectionType</Name>
													<Type>Enum</Type>
													<TypeName>AVSelectionType</TypeName>
													<Value>None</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>addMoreContent</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>columns</Name>
													<Type>Int32</Type>
													<Value>5</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>leftBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>leftBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>rightBoundaryValue</Name>
													<Type>Int32</Type>
													<Value>0</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>rightBoundaryType</Name>
													<Type>Enum</Type>
													<TypeName>AVBoundaryType</TypeName>
													<Value>Auto</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>TimelineFields</Name>
											<ExtensionComponents />
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentLeaf">
											<Name>Chart</Name>
											<ComponentType>AvailabilityViewBuildChart</ComponentType>
											<IsSystem>true</IsSystem>
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>CollectionKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TimelineKey</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>FieldName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>TemplateId</Name>
													<Type>Enum</Type>
													<TypeName>ChartTemplates</TypeName>
													<Value>Buckets</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>DataSource</Name>
													<Type>ExtendedDataType</Type>
													<TypeName>TableName</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>ItemLayout</Name>
													<Type>String</Type>
													<Value>ReservationCardHTM</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>SelectionType</Name>
													<Type>Enum</Type>
													<TypeName>AVSelectionType</TypeName>
													<Value>Multiple</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</AxFormControlExtensionComponent>
										<AxFormControlExtensionComponent xmlns=""
											i:type="AxFormControlExtensionComponentComposite">
											<Name>ChartFields</Name>
											<ExtensionComponents />
										</AxFormControlExtensionComponent>
									</ExtensionComponents>
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>DataController</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
											<Value>ResWBSUsageDataController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>Timescale</Name>
											<Type>Enum</Type>
											<TypeName>AVTimeframeType</TypeName>
											<Value>Day</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@Res:ResourceAssignments</Caption>
						<FastTabExpanded>Always</FastTabExpanded>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ReservationDetailsTabPageControl</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>Toolbar</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>ToolbarButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>Cancel</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>Release</NormalImage>
												<Text>@Res:CancelReservations</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>Confirm</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
												<NormalImage>OK</NormalImage>
												<Text>@SYS4001382</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDropDialogButtonControl">
												<Name>RequestLineWorkflowDropDialog</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>DropDialogButton</Type>
												<FormControlExtension
													i:nil="true" />
												<DataSource>ResRequestLine</DataSource>
												<MenuItemName>ResWorkflowLineDropDialogDisplayMenu</MenuItemName>
												<MultiSelect>No</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>ReservationGrid</Name>
								<AllowEdit>No</AllowEdit>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_ResourceName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ResourceName</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_EngagementIDName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EngagementIDName</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ReservationDetails_EngagementType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EngagementType</DataField>
										<DataSource>ReservationDetails</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_TaskName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TaskName</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ReservationDetails_StartTime</Name>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>StartTime</DataField>
										<DataSource>ReservationDetails</DataSource>
										<TimeSeconds>No</TimeSeconds>
										<TimeZoneIndicator>Never</TimeZoneIndicator>
										<TimezonePreference>NoConversion</TimezonePreference>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>ReservationDetails_EndTime</Name>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndTime</DataField>
										<DataSource>ReservationDetails</DataSource>
										<TimeSeconds>No</TimeSeconds>
										<TimeZoneIndicator>Never</TimeZoneIndicator>
										<TimezonePreference>NoConversion</TimezonePreference>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReservationDetails_ReservationType</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReservationType</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>ReservationDetails_ReservedHours</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReservedHours</DataField>
										<DataSource>ReservationDetails</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>ReservationDetails</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@Res:ReservationDetails</Caption>
					</AxFormControl>
				</Controls>
				<ShowTabs>No</ShowTabs>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>