<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>InventQualityOrderTableCreate</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
    [Form]
    public class InventQualityOrderTableCreate extends FormRun
    {
        NumberSeqFormHandler               numberSeqFormHandler;
        InventDimCtrl_Frm_Mov_QualityOrder inventDimFormSetup;

        Common                             callerRecord;

        PdsCWFormCtrl                      cwFormCtrl;
        PmfTableLookupExtended             coProdProdOrdersLookup;
}
]]></Source>
			</Method>
			<Method>
				<Name>allowEdit</Name>
				<Source><![CDATA[
    void allowEdit()
    {
        Common  callerRecordActual  = element.args() ? element.args().record() : null;
        boolean isInventoryType     = inventQualityOrderTable.ReferenceType == InventTestReferenceType::Inventory;
        boolean isRouteOprType      = inventQualityOrderTable.ReferenceType == InventTestReferenceType::RouteOpr;
        boolean isCoProdType        = inventQualityOrderTable.ReferenceType == InventTestReferenceType::PmfProdCoBy;
        boolean accountEditable     = inventQualityOrderTable.mayAccountRelationBeEditable();
        boolean allowEditReferenceType = true;
        boolean accountVisible      = accountEditable;
        boolean shouldUseInventRefTransId = this.shouldUseInventRefTransId();

        void updateControl(FormDataObject _control, boolean _allowEdit, boolean _visible = _allowEdit)
        {
            _control.visible(_visible);
            _control.allowEdit(_allowEdit);
            _control.skip(!_allowEdit);
        }

        if (callerRecordActual.RecId && callerRecordActual.TableId == tableNum(InventQualityOrderTable))
        {
            callerRecordActual = null;
        }
        updateControl(inventQualityOrderTable_ds.object(fieldNum(InventQualityOrderTable, ItemId)), isInventoryType, true);

         // Reference type
        if (this.isReferenceTypeNotEditable(callerRecordActual))
        { // Called with a reference, so don't allow changing the reference type
            allowEditReferenceType = false;
        }
        updateControl(inventQualityOrderTable_ds.object(fieldNum(InventQualityOrderTable, ReferenceType)), allowEditReferenceType, true);

        // Account relation
        if (!allowEditReferenceType                 // Called with a reference, so don't allow changing the account
         || inventQualityOrderTable.InventRefId)    // Account is given by the reference
        {
            accountEditable = false;
            accountVisible = true;
        }
        updateControl(inventQualityOrderTable_ds.object(fieldNum(InventQualityOrderTable, AccountRelation)), accountEditable, accountVisible);

        updateControl(inventQualityOrderTable_ds.object(fieldNum(InventQualityOrderTable, RouteId)), false, isRouteOprType);
        updateControl(inventQualityOrderTable_ds.object(fieldNum(InventQualityOrderTable, OprNum)), isRouteOprType);
        updateControl(inventQualityOrderTable_ds.object(fieldNum(InventQualityOrderTable, RouteOprId)), isRouteOprType);
        updateControl(inventQualityOrderTable_ds.object(fieldNum(InventQualityOrderTable, WrkCtrId)), isRouteOprType);

        updateControl(inventQualityOrderTable_ds.object(fieldNum(InventQualityOrderTable, InventRefId)), !isInventoryType);
        updateControl(inventQualityOrderTable_ds.object(fieldNum(InventQualityOrderTable, InventRefTransId)), shouldUseInventRefTransId
            && !isCoProdType
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldUseInventRefTransId</Name>
				<Source><![CDATA[
    [Wrappable(true)]
    internal boolean shouldUseInventRefTransId()
    {
        return inventQualityOrderTable.ReferenceType == InventTestReferenceType::Purch
            || inventQualityOrderTable.ReferenceType == InventTestReferenceType::Sales;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReferenceTypeNotEditable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the reference type is not editable.
    /// </summary>
    /// <param name = "_callerRecordActual">
    /// The caller record.
    /// </param>
    /// <returns>
    /// true, if it is not allowed to edit the reference type; otherwise, false.
    /// </returns>
    protected boolean isReferenceTypeNotEditable(Common _callerRecordActual)
    {
        return _callerRecordActual.RecId && _callerRecordActual.TableId != tableNum(InventQualityOrderTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    boolean canClose()
    {
        element.disposeCoProdLookupNotifier();

        if (!element.closedOk())
        {
            numberSeqFormHandler.formMethodClose();
        }

        if (!element.closedOk())
        {
            return true;
        }

        if (!this.validateWHSDimensions())
        {
            return false;
        }

        if (!inventQualityOrderTable_ds.validateWrite())
        {
            return false;
        }

        inventQualityOrderTable.InventDimId = InventDim::findOrCreate(inventDim).InventDimId;

        inventQualityOrderTable_ds.write();

        if (inventQualityOrderTable.RecId == 0)
        {
            return false;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearReferenceFields</Name>
				<Source><![CDATA[
    void clearReferenceFields()
    {
        inventQualityOrderTable.clearReferenceFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>disposeCoProdLookupNotifier</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Disposes the lookup notifier for co-product production orders.
    /// </summary>
    public void disposeCoProdLookupNotifier()
    {
        if (#PMFEnabled && coProdProdOrdersLookup != null)
        {
            //dispose the previous lookup
            coProdProdOrdersLookup.disposeNotifier();
            coProdProdOrdersLookup = null;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initReferenceLookup</Name>
				<Source><![CDATA[
    [Wrappable(true)]
    internal boolean initReferenceLookup(FormControl _formControl)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        cwFormCtrl = PdsCWFormCtrl_Min::construct();
        cwFormCtrl.parmFormRun(this);
        cwFormCtrl.parmFieldIds(PdsCWValidation::fieldMapFromContainers(
            [[  fieldNum(InventQualityOrderTable, Qty),
                fieldNum(InventQualityOrderTable, PdsCWQty),
                false ]]));
        cwFormCtrl.parmItemFieldId(fieldNum(InventQualityOrderTable, ItemId));
        cwFormCtrl.initPre();
        super();

        if (element.args() && element.args().caller() && formHasMethod(element.args().caller(), identifierStr(getCallerBuffer)))
        {
            callerRecord = element.args().caller().getCallerBuffer();
        }

        if (!callerRecord.RecId)
        {
            callerRecord = element.args() ? element.args().record() : null;
        }

        element.updateDesign(InventDimFormDesignUpdate::Init);

        cwFormCtrl.initPost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimSetupObject</Name>
				<Source><![CDATA[
    Object inventDimSetupObject()
    {
        return inventDimFormSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the item ID.
    /// </summary>
    /// <returns>
    ///     The item ID identifying a record in the <c>InventTable</c> table.
    /// </returns>
    /// <remarks>
    ///     The method is used by the <c>InventDimCtrl_Frm_Lookup</c> class to obtain the item ID
    ///     which then is used to filter lookups by the selected item.
    /// </remarks>
    public ItemId itemId()
    {
        return inventQualityOrderTable.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqFormHandler</Name>
				<Source><![CDATA[
    NumberSeqFormHandler numberSeqFormHandler()
    {
        if (!numberSeqFormHandler)
        {
            numberSeqFormHandler = NumberSeqFormHandler::newForm(InventParameters::numRefQualityOrderId().NumberSequenceId,
                                                                 element,
                                                                 inventQualityOrderTable_DS,
                                                                 fieldNum(InventQualityOrderTable,QualityOrderId)
                                                                );
        }
        return numberSeqFormHandler;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldRefreshCaller</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the caller should be refreshed or not.
    /// </summary>
    /// <returns>
    /// true, if the caller should be refreshed; otherwise, false.
    /// </returns>
    protected boolean shouldRefreshCaller()
    {
        return element.args()
               && (element.args().dataset() == tableNum(SalesLine) 
                   || element.args().dataset() == tableNum(PurchLine)
                   || element.args().dataset() == tableNum(ProdTable)
                   || element.args().dataset() == tableNum(PmfProdCoBy)
                   || element.args().dataset() == tableNum(InventQuarantineOrder)
                   || element.args().dataset() == tableNum(InventNonConformanceTable)
                   || element.args().dataset() == tableNum(ProdRoute));
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCaller</Name>
				<Source><![CDATA[
    void refreshCaller()
    {
        Common         common;
        Common         commonDim;
        FormDataSource common_ds;
        FormDataSource commonDim_ds;

        if (this.shouldRefreshCaller())
        {
            common      = element.args().record();
            common_ds   = FormDataUtil::getFormDataSource(common);

            common_ds.reread();
            common_ds.refresh();

            commonDim       = common.joinChild();

            if (commonDim.TableId == tableNum(InventDim))
            {
                commonDim_ds = FormDataUtil::getFormDataSource(commonDim);

                commonDim.data(InventDim::find(inventQualityOrderTable.InventDimId));
                commonDim_ds.setCurrent();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveInventRefTransIdFromCoProdLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the reference ID from the lookup.
    /// </summary>
    /// <returns>
    ///     The referenced ID of the transaction that uniquely identifies the co-product production.
    /// </returns>
    public InventRefTransId retrieveInventRefTransIdFromCoProdLookup()
    {
        TmpPmfItemTransProdLookup   tmpPmfItemTransProdLookup;

        if (#PMFEnabled && coProdProdOrdersLookup != null)
        {
            tmpPmfItemTransProdLookup = coProdProdOrdersLookup.parmSelectionRecord();
            coProdProdOrdersLookup.disposeNotifier();
        }

        return tmpPmfItemTransProdLookup.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        inventQualityOrderTable_ds.create(true);
        inventDim_DS.create(true);
        this.allowEdit();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDataFromInventDimModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes quality order dimension specific data.
    /// </summary>
    /// <param name = "_isProductDimModified">A parameter indicating whether a product dimension was modified.</param>
    public void initDataFromInventDimModified(boolean _isProductDimModified = true)
    {
        var origInventSiteId     = inventDim.InventSiteId;
        var origInventLocationId = inventDim.InventLocationId;
        var origInventStatusId   = inventDim.InventStatusId;
        var origLocationId       = inventDim.wMSLocationId;
        var origLicensePlateId   = inventDim.LicensePlateId;

        InventDim inventDimToModify;
        inventDimToModify.data(inventDim);

        if (_isProductDimModified)
        {
            inventDimToModify.clearStorageDimensions();
        }

        inventQualityOrderTable.InventDimId = InventDim::findOrCreate(inventDimToModify).inventDimId;

        inventQualityOrderTable.inventDimModified();

        inventDimToModify.data(inventQualityOrderTable.inventDim());

        inventDimToModify.restoreStorageDimensionFieldsIfEmpty(origInventSiteId, origInventLocationId, origInventStatusId, origLocationId, origLicensePlateId);

        InventQualityOrderTable.InventDimId = InventDim::findOrCreate(inventDimToModify).inventDimId;

        this.setInventDimId();

        // Change of any inventDim fields would trigger a recalculation of PdsCWQty and Qty
        InventCreateQualityOrderFromInventBatchContext context = InventCreateQualityOrderFromInventBatchContext::current();
        if (context
            && context.parmCreateQualityOrderFromInventBatch())
        {
            InventQualityMgmtOrderInitializer::initializeQtyByFindingAssociation(inventQualityOrderTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    void setInventDimId()
    {
        inventDim.data(InventDim::find(inventQualityOrderTable.InventDimId));

        inventDim_ds.refresh();

        element.updateDesign(InventDimFormDesignUpdate::FieldChange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    void updateDesign(InventDimFormDesignUpdate _mode)
    {
        InventMovement movement = InventMovement::construct(inventQualityOrderTable);

        if (!inventDimFormSetup)
        {
            inventDimFormSetup  = InventDimCtrl_Frm_Mov_QualityOrder::newFromFormMovement(element, movement);
            inventDimFormSetup.parmDontShowDisabled(false);
        }

        switch (_mode)
        {
            case InventDimFormDesignUpdate::Init          :
                inventDimFormSetup.formSetControls(true);
                break;

            case InventDimFormDesignUpdate::Active        :
                inventDimFormSetup.formActiveSetup(movement.inventDimGroupSetup(), movement);
                inventDimFormSetup.formSetControls(true);
                break;

            case InventDimFormDesignUpdate::FieldChange   :
                inventDimFormSetup.formActiveSetup(movement.inventDimGroupSetup(), movement);
                inventDimFormSetup.formSetControls(true);
                break;

            case InventDimFormDesignUpdate::SetupChange   :
                inventDimFormSetup.formActiveSetup(movement.inventDimGroupSetup(), movement);
                inventDimFormSetup.formSetControls(true);
                break;

            default : throw error(strFmt("@SYS54195",funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWHSDimensions</Name>
				<Source><![CDATA[
    private boolean validateWHSDimensions()
    {
        boolean ret = true;

        // The user can only manually select inventory dimensions for Inventory quality orders. Skip the check otherwise.
        if (inventQualityOrderTable.ReferenceType != InventTestReferenceType::Inventory)
        {
            return ret;
        }

        if (!WHSInventEnabled::exist(element.itemId()))
        {
            return ret;
        }

        ret = WHSReservationHierarchyInventDimUtil::checkDimHierarchyForBlanks(
                InventTable::find(element.itemId()),
                inventDim)
              && ret;

        if (inventDim.InventStatusId == '')
        {
            ret = checkFailed(strFmt("@SYS136411",
                                     fieldId2pname(tableNum(InventDim), fieldNum(InventDim, InventStatusId))));
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>InventQualityOrderTable</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            //Skip super(). Don't need to fetch an existing buffer when creating a new quality order.
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            cwFormCtrl.dataSourceInitPost(inventQualityOrderTable);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            cwFormCtrl.dataSourceActivePost();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        void create(boolean append = false)
        {
            InventQualityOrderId tmpInventQualityOrderId;

            if (!inventQualityOrderTable.RecId)
            {
                element.numberSeqFormHandler().formMethodDataSourceCreatePre();

                element.numberSeqFormHandler().formMethodDataSourceCreate();
                tmpInventQualityOrderId = inventQualityOrderTable.QualityOrderId;
                super(append);
                inventQualityOrderTable.QualityOrderId = tmpInventQualityOrderId;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        void write()
        {
            Object                          formInventQualityOrderTable;
            int                             retryCount;
            InventQualityOrderTableOrigin   inventQualityOrderTableOrigin;

            void errorEnd(InventQualityOrderTable _inventQualityOrderTable)
            {
                _inventQualityOrderTable.RecId = 0;
            }

            if (inventQualityOrderTable.RecId)
            {
                return;
            }

            if (!element.closedOk())
            {
                return;
            }

            try
            {
                ttsbegin;

                if (inventDim)
                {
                    inventQualityOrderTable.InventDimId = inventQualityOrderTable.insertFromForm(inventDim);
                }
                else
                {
                    inventQualityOrderTable.InventDimId = inventQualityOrderTable.insertFromForm(InventDim::find(inventQualityOrderTable.InventDimId));
                }

                inventQualityOrderTable.update();

                if (callerRecord.RecId && callerRecord.TableId == tableNum(InventNonConformanceTable))
                {
                    inventQualityOrderTableOrigin.InventQualityOrderId     = inventQualityOrderTable.QualityOrderId;
                    inventQualityOrderTableOrigin.InventNonConformanceID   = callerRecord.(fieldNum(InventNonConformanceTable, InventNonConformanceID));
                    inventQualityOrderTableOrigin.insert();
                }

                element.numberSeqFormHandler().formMethodDataSourceWrite();
                element.refreshCaller();

                ttscommit;
            }

            catch (Exception::Error)
            {
                errorEnd(inventQualityOrderTable);
                return;
            }
            catch (Exception::Deadlock)
            {
                if (retryCount < 5)
                {
                    retryCount++;
                    retry;
                }
                else
                {
                    errorEnd(inventQualityOrderTable);
                    return;
                }
            }
            catch (Exception::DuplicateKeyException)
            {
                errorEnd(inventQualityOrderTable);
                return;
            }

            if (element.args()
                && element.args().caller()
                && element.args().caller().name() == formStr(InventQualityOrderTable))
            {
                formInventQualityOrderTable = element.args().caller();

                formInventQualityOrderTable.createOrderId(inventQualityOrderTable.QualityOrderId);
                formInventQualityOrderTable.setCreateTable(inventQualityOrderTable, InventDim::find(inventQualityOrderTable.InventDimId));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean     ret = true;

            if (element.closedOk())
            {
                if (!inventDim.checkDimFieldsValid(inventQualityOrderTable.ItemId, inventDim.RecId ? inventDim.orig() : null))
                {
                    return false;
                }

                inventDim.clearNotActiveDim(InventDimGroupSetup::newItemId(inventQualityOrderTable.ItemId));

                ret = super() && ret;
            }

            ret = element.numberSeqFormHandler().formMethodDataSourceValidateWrite(ret) && ret;

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            inventQualityOrderTable.initFromBuffer(callerRecord);
            element.allowEdit();

            element.updateDesign(InventDimFormDesignUpdate::FieldChange);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>InventRefId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                switch (inventQualityOrderTable.ReferenceType)
                {
                    case InventTestReferenceType::Purch:
                        inventQualityOrderTable.lookupPurchaseOrderId(_formControl);
                        break;
                    case InventTestReferenceType::Sales:
                        inventQualityOrderTable.lookupSalesOrderId(_formControl);
                        break;
                    case InventTestReferenceType::RouteOpr:
                        InventQualityOrderTable::lookupProductionforRouteOperation(_formControl);
                        break;
                    case InventTestReferenceType::PmfProdCoBy:
                        element.disposeCoProdLookupNotifier();
                        coProdProdOrdersLookup = PmfProdCoBy::lookupBatchOrderCoDetails(_formControl);
                        break;
                    default:
                        if (element.initReferenceLookup(_formControl))
                        {
                            break;
                        }
                        super(_formControl, _filterStr);
                        break;
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                if ((inventQualityOrderTable.ReferenceType == InventTestReferenceType::PmfProdCoBy)
                    && coProdProdOrdersLookup)
                {
                    inventQualityOrderTable.InventRefTransId = element.retrieveInventRefTransIdFromCoProdLookup();
                }

                super();

                element.allowEdit();
                element.setInventDimId();
                inventQualityOrderTable_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InventRefTransId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.allowEdit();
                element.setInventDimId();
                cwFormCtrl.fieldModified(fieldNum(InventQualityOrderTable, ItemId));
                inventQualityOrderTable_ds.refresh();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                if (inventQualityOrderTable.ReferenceType == InventTestReferenceType::Purch
                 && inventQualityOrderTable.InventRefId)
                {
                    inventQualityOrderTable.lookupPurchaseOrderTransId(_formControl);
                }
                else
                {
                    super(_formControl, _filterStr);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ItemId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.setInventDimId();
                cwFormCtrl.fieldModified(fieldNum(InventQualityOrderTable, ItemId));
                inventQualityOrderTable_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OprNum</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.allowEdit();
                element.setInventDimId();
                inventQualityOrderTable_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PdsCWQty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                cwFormCtrl.fieldModified(fieldNum(InventQualityOrderTable, PdsCWQty));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Qty</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                cwFormCtrl.fieldModified(fieldNum(InventQualityOrderTable, Qty));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ReferenceType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.allowEdit();
                element.setInventDimId();
                inventQualityOrderTable_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RouteOprId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.allowEdit();
                element.setInventDimId();
                inventQualityOrderTable_ds.refresh();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                ProdRoute::lookupOprId(_formControl, inventQualityOrderTableReferences_InventRefId.valueStr(), inventQualityOrderTableReferences_OprNum.value());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>WrkCtrId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.allowEdit();
                inventQualityOrderTable_ds.refresh();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>InventDim</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            inventDim.checkDimFieldsValid(inventQualityOrderTable.ItemId, inventDim.RecId ? inventDim.orig() : null) ;

            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        void initValue()
        {
            inventDim.data(InventDim::find(inventQualityOrderTable.InventDimId));

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>InventoryDimensions_InventSiteId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.initDataFromInventDimModified(false);

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensions_inventBatchId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            InventCreateQualityOrderFromInventBatchContext context = InventCreateQualityOrderFromInventBatchContext::current();
            if (context
                && context.parmCreateQualityOrderFromInventBatch())
            {
                element.initDataFromInventDimModified(false);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensions_configId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.initDataFromInventDimModified();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensions_InventSizeId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.initDataFromInventDimModified();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensions_InventColorId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.initDataFromInventDimModified();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensions_InventStyleId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.initDataFromInventDimModified();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>InventoryDimensions_InventVersionId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.initDataFromInventDimModified();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>InventQualityOrderTable</Name>
			<Table>InventQualityOrderTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AcceptableQualityLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountRelation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApplyIndiaTaxes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BlockingQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompleteBlocking</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FailedInventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventRefTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ItemName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemSamplingId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OprNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PassedInventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWBlockingQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWQty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsFailedQualityDispositionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsPassQualityDispositionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsUpdateBatchDisp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsUpdateInvBatchAttributes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QualityOrderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QuarantineOnFailure</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReferenceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RouteOprId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TestDestructive</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TestGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UpdateInventStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidateDate_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidatedByWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WrkCtrId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>InventDim</Name>
			<Table>InventDim</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>configId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventBatchId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventColorId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventVersionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventGtdId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventOwnerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>inventSerialId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSizeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventStyleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LicensePlateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SHA1Hash</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSLocationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>wMSPalletId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AutoSearch>No</AutoSearch>
			<LinkType>Passive</LinkType>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS113839</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<TitleDataSource xmlns="">InventQualityOrderTable</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContents</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>InventQualityOrderTableReferences</Name>
						<ElementPosition>429496729</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>InventQualityOrderTableReferences_ReferenceType</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ReferenceType</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventQualityOrderTable_AccountRelation</Name>
								<ElementPosition>1275068414</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>AccountRelation</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventQualityOrderTableReferences_InventRefId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1476395006</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventRefId</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventQualityOrderTableReferences_InventRefTransId</Name>
								<ElementPosition>1879048190</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventRefTransId</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>InventQualityOrderTableReferences_OprNum</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>805306366</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>OprNum</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventQualityOrderTableReferences_RouteOprId</Name>
								<ElementPosition>1207959549</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>RouteOprId</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventQualityOrderTableReferences_WrkCtrId</Name>
								<ElementPosition>1610612732</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>WrkCtrId</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventQualityOrderTableReferences_RouteId</Name>
								<ElementPosition>2013265918</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>RouteId</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
							</AxFormControl>
						</Controls>
						<Breakable>No</Breakable>
						<Caption>@SYS14018</Caption>
						<DataSource>InventQualityOrderTable</DataSource>
						<Style>DialogContent</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupInventQualityOrderTable</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GroupInventQualityOrderTable_QualityOrderId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>QualityOrderId</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GroupInventQualityOrderTable_ItemId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ItemId</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GroupInventQualityOrderTable_ItemName</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ItemName</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GroupInventQualityOrderTable_TestGroupId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TestGroupId</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>GroupInventQualityOrderTable_PdsCWQty</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PdsCWQty</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>GroupInventQualityOrderTable_Qty</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Qty</DataField>
								<DataSource>InventQualityOrderTable</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<DataGroup>IdentificationCreate</DataGroup>
						<DataSource>InventQualityOrderTable</DataSource>
						<Style>DialogContent</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>InventoryDimensions</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_InventSiteId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventSiteId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_InventLocationId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventLocationId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_wMSLocationId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>wMSLocationId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_LicensePlateId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>LicensePlateId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_InventStatusId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventStatusId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_inventBatchId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>inventBatchId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_inventSerialId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>inventSerialId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_configId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>configId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_InventSizeId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventSizeId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_InventColorId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventColorId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_InventStyleId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventStyleId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_InventVersionId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventVersionId</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_InventOwnerId_RU</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventOwnerId_RU</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_InventProfileId_RU</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventProfileId_RU</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InventoryDimensions_InventGtdId_RU</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InventGtdId_RU</DataField>
								<DataSource>InventDim</DataSource>
							</AxFormControl>
						</Controls>
						<Breakable>No</Breakable>
						<DataGroup>InventoryDimensions</DataGroup>
						<DataSource>InventDim</DataSource>
						<Style>DialogContent</Style>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1717986916</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Top>0</Top>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Ok</Name>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>