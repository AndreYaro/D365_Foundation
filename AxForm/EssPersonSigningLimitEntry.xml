<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>EssPersonSigningLimitEntry</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class EssPersonSigningLimitEntry extends FormRun
{
    HcmWorker currentWorker;
    HcmPositionLookup positionLookup;
    HcmPositionWorkerAssignment selectedPositionAssignment;
    HcmPosition selectedPosition;
    NumberSeqFormHandler numberSeqFormHandler;
    boolean isRequestRequiredtoGetDefaultLimit;
    HRPSigningLimitHelper signingLimitHelper;
    boolean isAttestationDone;
    boolean saveLimitRequest;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        signingLimitHelper = HRPSigningLimitHelper::construct(element.args());
        currentWorker = HcmWorker::find(HcmWorkerLookup::currentWorker());

        super();

        isRequestRequiredtoGetDefaultLimit = HRPLimitParameters::find().IsRequestRequiredToGetDefaultLimit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        if (numberSeqFormHandler)
        {
            numberSeqFormHandler.formMethodClose();
        }

       super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqFormHandler</Name>
				<Source><![CDATA[
    NumberSeqFormHandler numberSeqFormHandler()
    {
        if (!numberSeqFormHandler)
        {
            numberSeqFormHandler = NumberSeqFormHandler::newForm(HRPLimitParameters::numRefSigningLimitRequestNumber().NumberSequenceId,
                                                                 element,
                                                                 HRPLimitRequest_DS,
                                                                 fieldNum(HRPLimitRequest, NumberSequence)
                                                                );
        }
        return numberSeqFormHandler;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAmountandCurrencyControls</Name>
				<Source><![CDATA[
    private void updateAmountandCurrencyControls()
    {
        HRPLimitRequest.PositionWorkerAssignment = selectedPositionAssignment.RecId;
        HRPLimitRequest_DS.cacheCalculateMethod(tableMethodStr(HRPLimitRequest, getLimitAmount));
        HRPLimitRequest_DS.cacheCalculateMethod(tableMethodStr(HRPLimitRequest, getLimitAmountCurrency));
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableIndividualLimitControls</Name>
				<Source><![CDATA[
    private void enableIndividualLimitControls()
    {
        //Enable overriden amount and currency controls
        EssPersonSigningLimit_LimitOverride.checked(true);
        NewAmount.enabled(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>disableIndividualLimitControls</Name>
				<Source><![CDATA[
    private void disableIndividualLimitControls()
    {
        //Disable overriden amount and currency controls
        EssPersonSigningLimit_LimitOverride.enabled(true);
        EssPersonSigningLimit_LimitOverride.checked(false);
        NewAmount.enabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLimitControlsVisibility</Name>
				<Source><![CDATA[
    private void updateLimitControlsVisibility()
    {
        HRPLimitRequest_ds.refresh();

		//
		// If there is no default amount but default currency exists,
		// assign currency to new currency control and enable individual request limit controls
		//
        if (defaultAmount.realValue() == 0 && defaultCur.valueStr() != '')
        {
            element.enableIndividualLimitControls();
            NewCurrency.text(DefaultCur.valueStr());
        }
		
		//
		// If there is no default amount and currency, get the company currency code,
		// assign company curency to new currency control and enable individual request limit controls
		//
        else if (defaultAmount.realValue() == 0 && defaultCur.valueStr() == '')
        {
            CurrencyCode companyCurrencyCode = Ledger::accountingCurrency(CompanyInfo::current());

            if (companyCurrencyCode)
            {
                element.enableIndividualLimitControls();
                NewCurrency.text(companyCurrencyCode);
            }
            else
            {
                error('@SYS311173');
            }
        }
		
		//
		// If default amount exists and request to get default limit is not set in parameters form
		//assign default limit values to individual request limit controls and enable these controls
		//
        else if (defaultAmount.realValue() != 0 && !isRequestRequiredtoGetDefaultLimit)
        {
            element.enableIndividualLimitControls();
            EssPersonSigningLimit_LimitOverride.enabled(true);
            NewAmount.realValue(DefaultAmount.realValue());
            NewCurrency.text(DefaultCur.valueStr());
        }

		//
        // If request to get default limit is set in parameters form
		// disable the individual request limit controls.
		//
        else
        {
            element.disableIndividualLimitControls();
            NewCurrency.text(DefaultCur.valueStr());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeLimitControlsState</Name>
				<Source><![CDATA[
    private void initializeLimitControlsState()
    {
        if (!signingLimitHelper.isEditMode())
        {
            if (currentWorker.isEmployee())
            {
                if (isRequestRequiredtoGetDefaultLimit)
                {
                    element.disableIndividualLimitControls();
                }
                else
                {
                    element.enableIndividualLimitControls();
                }
            }
            else
            {
                if (this.shouldIndividualLimitControlsBeEnabled())
                {
                    element.enableIndividualLimitControls();
                }
                else
                {
                    element.disableIndividualLimitControls();
                }
            }
        }
        else
        {
            element.updateLimitControlsVisibility();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldIndividualLimitControlsBeEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the authority base in <c>HRPLimitParameters</c> is associated to compensation enumeration value.
    /// </summary>
    [Wrappable(true)]
    protected final boolean shouldIndividualLimitControlsBeEnabled()
    {
        return HRPLimitRequest::getLimitBasis() == HRPAuthorityBasis::Compensation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshEssPersonSigningLimits</Name>
				<Source><![CDATA[
    private void refreshEssPersonSigningLimits()
    {
        EssCommonHelper::refreshCallerForm(formStr(EssPersonSigningLimits), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAgreementData</Name>
				<Source><![CDATA[
    public void setAgreementData(HcmPositionWorkerAssignmentRecId _positionWorkerAssignmentRecId, HRPLimitDocumentRecId _limitDocumentRecId)
    {
        HRPLimitTmpAgreement.setTmpData(signingLimitHelper.populateAgreementTmpTable(_positionWorkerAssignmentRecId, _limitDocumentRecId));
        HRPLimitTmpAgreement_DS.research();
        AgrementTabPage.visible(HRPLimitTmpAgreement_DS.numberOfRowsLoaded());
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        super();

        if (!HRPLimitRequest.SigningLimitDocument)
        {
            HRPLimitRequest.SigningLimitDocument = HRPLimitDocument::getLimitDocumentRecId(int642int(EssPersonSigningLimit_DocumentType.value()));
        }

        element.initializeLimitControlsState();

        if (signingLimitHelper.isEditMode())
        {
            element.design().caption("@SYS301363");
            this.setAgreementData(HRPLimitRequest.PositionWorkerAssignment, HRPLimitRequest.SigningLimitDocument);
            selectedPositionAssignment = HcmPositionWorkerAssignment::find(HRPLimitRequest.PositionWorkerAssignment);
            position_Control.value(selectedPositionAssignment.Position);
        }

        positionLookup = HcmPositionLookup::newAllPositions();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>HRPLimitRequest</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
         public void init()
        {
            super();

            this.cacheAddMethod(tableMethodStr(HrpLimitRequest, getLimitAmount));
            this.cacheAddMethod(tableMethodStr(HrpLimitRequest, getLimitAmountCurrency));
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            if (saveLimitRequest)
            {
                element.numberSeqFormHandler().formMethodDataSourceWrite();
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            element.numberSeqFormHandler().formMethodDataSourceLinkActive();
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;

            if (saveLimitRequest)
            {
                ret = super();

                HRPLimitRequest.PositionWorkerAssignment = selectedPositionAssignment.RecId;

                if (ret && !element.numberSeqFormHandler().formMethodDataSourceValidateWrite())
                {
                    ret = false;
                }

                if (ret && EssPersonSigningLimit_LimitOverride.checked() && NewAmount.realValue() <= 0.0)
                {
                    ret = checkFailed('@SYS309423');
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            element.numberSeqFormHandler().formMethodDataSourceDelete();
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            // perform error checking before using Number Sequence Framework to create RequestNumber.
            element.numberSeqFormHandler().formMethodDataSourceCreatePre();

			super(_append);

			//
			// use Number Sequence Framework to create and assign RequestNumber to newly created Limit request record:
			//
			// if a Number Sequence has NOT been created for Signing Limit Request Number Sequence Reference,
			// NO Request Number will be created and assigned to the Limit Request record, and Request Number field will be editable.
            //
            // if a Number Sequence has been created for Request Number Sequence Reference,
            // the creation/assignment of RequestNumber and ability to edit RequestNumber field will be based upon
            // the current setup of Request Number Sequence.
            //
            element.numberSeqFormHandler().formMethodDataSourceCreate();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>Position_Control</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            Common ret;
            boolean includeFuturePositionsForWorker = true;

            ret = positionLookup.lookupPosition(this, currentWorker.RecId, 0, 0, includeFuturePositionsForWorker);

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            HRPLimitDocumentRecId documentRecId;
            ret = super();

            if (ret)
            {
                selectedPositionAssignment = HcmPositionWorkerAssignment::findByPosition(position_Control.value());
                selectedPosition = HcmPosition::find(selectedPositionAssignment.Position);

                element.updateAmountandCurrencyControls();
                element.updateLimitControlsVisibility();

                if (!HRPLimitRequest.SigningLimitDocument)
                {
                    documentRecId = HRPLimitDocument::getLimitDocumentRecId(int642int(EssPersonSigningLimit_DocumentType.value()));
                }
                else
                {
                    documentRecId = HRPLimitRequest.SigningLimitDocument;
                }
                element.setAgreementData(selectedPositionAssignment.RecId, documentRecId);

                if (HRPLimitTmpAgreement_DS.numberOfRowsLoaded())
                {
                    OKButton.enabled(isAttestationDone);
                }
                else
                {
                    OKButton.enabled(true);
                }
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>resolveReference</Name>
						<Source><![CDATA[
        public Common resolveReference()
        {
            HcmPosition ret;

            ret = super();

            if (ret != null && !positionLookup.validatePosition(ret.RecId, currentWorker.RecId , 0, 0, true))
            {
                ret = null;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EssPersonSigningLimit_LimitType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

			if (ret && Position_Control.value())
            {
                element.updateAmountandCurrencyControls();
                element.updateLimitControlsVisibility();
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EssPersonSigningLimit_DocumentType</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret && Position_Control.value())
            {
                element.updateAmountandCurrencyControls();
                element.updateLimitControlsVisibility();

                element.setAgreementData(selectedPositionAssignment.RecId, HRPLimitRequest.SigningLimitDocument);

                if (HRPLimitTmpAgreement_DS.numberOfRowsLoaded())
                {
                    OKButton.enabled(isAttestationDone);
                }
                else
                {
                    OKButton.enabled(true);
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EssPersonSigningLimit_LimitOverride</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (EssPersonSigningLimit_LimitOverride.checked())
            {
                NewAmount.enabled(true);
            }
            else
            {
                NewAmount.realValue(0);
                NewAmount.enabled(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CheckAttestation</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if (ret)
            {
                HRPLimitTmpAgreement.write();
                isAttestationDone = signingLimitHelper.isLimitAgreementAttested(HRPLimitTmpAgreement);
                OKButton.enabled(isAttestationDone);
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            saveLimitRequest = true;
            HRPLimitRequest_DS.write();
            HRPLimitRequestSubmitToWorkflow limitRequestSubmit = HRPLimitRequestSubmitToWorkflow::construct();

            signingLimitHelper.parmLimitRequest(HRPLimitRequest);
            signingLimitHelper.insertRequestAmount(NewAmount.realValue(), NewCurrency.valueStr());
            signingLimitHelper.createLimitAgreementAttestation(HRPLimitRequest, HRPLimitTmpAgreement);

            //Submit the document to workflow
            limitRequestSubmit.init(HRPLimitRequest, menuItemActionStr(EssSigningLimitWorkflowSubmit));
            limitRequestSubmit.submit();

            super();

            element.refreshEssPersonSigningLimits();
            element.close();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>HRPLimitRequest</Name>
			<Table>HRPLimitRequest</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EffectiveDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpirationDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Justification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequence</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PositionWorkerAssignment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RequestState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SigningLimitDocument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SigningLimitType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SigningLimitWorkflowStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>HRPLimitTmpAgreement</Name>
			<Table>HRPLimitTmpAgreement</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AgreementDetailRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AttestationPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAttested</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>URL</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS302000</Caption>
		<DialogSize xmlns="">Large</DialogSize>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Header</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>Position_Control</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>805306365</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>ReferenceGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>Position_Control_PositionId</Name>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
						</Controls>
						<ExtendedDataType>HcmPositionRecId</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>EssPersonSigningLimit_LimitType</Name>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>SigningLimitType</DataField>
						<DataSource>HRPLimitRequest</DataSource>
						<Label>@SYS317775</Label>
						<LabelPosition>Above</LabelPosition>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormReferenceGroupControl">
						<Name>EssPersonSigningLimit_DocumentType</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<FilterExpression>%1</FilterExpression>
						<Type>ReferenceGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls />
						<DataSource>HRPLimitRequest</DataSource>
						<Label>@SYS317773</Label>
						<LabelPosition>Above</LabelPosition>
						<ReferenceField>SigningLimitDocument</ReferenceField>
						<ReplacementFieldGroup>Identification</ReplacementFieldGroup>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Breakable>No</Breakable>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>General</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DefaultAmountCur</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>DefaultAmount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>getLimitAmount</DataMethod>
										<DataSource>HRPLimitRequest</DataSource>
										<Label>@HCM:DefaultAmount</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DefaultCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>getLimitAmountCurrency</DataMethod>
										<DataSource>HRPLimitRequest</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>RequestedAmountCur</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>EssPersonSigningLimit_LimitOverride</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Enabled>No</Enabled>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS327925</Label>
										<Style>Checkbox</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>NewAmount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Enabled>No</Enabled>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@HCM:RequestedAmount</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>NewCurrency</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Enabled>No</Enabled>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS7572</Label>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DateAndJustificationGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>EssPersonSigningLimit_EffectiveDate</Name>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EffectiveDateTime</DataField>
										<DataSource>HRPLimitRequest</DataSource>
										<DisplayOption>Date</DisplayOption>
										<Label>@SYS50168</Label>
										<LabelPosition>Above</LabelPosition>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateTimeControl">
										<Name>EssPersonSigningLimit_ExpirationDate</Name>
										<Type>DateTime</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ExpirationDateTime</DataField>
										<DataSource>HRPLimitRequest</DataSource>
										<DisplayOption>Date</DisplayOption>
										<Label>@SYS102701</Label>
										<LabelPosition>Above</LabelPosition>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EssPersonSigningLimit_Justification</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Justification</DataField>
										<DataSource>HRPLimitRequest</DataSource>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS55776</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AgrementTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<Visible>No</Visible>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>AgreementGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AgreementName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AgreementName</DataField>
										<DataSource>HRPLimitTmpAgreement</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AgreementURL</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>URL</DataField>
										<DataSource>HRPLimitTmpAgreement</DataSource>
										<Label>@SYS191664</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>CheckAttestation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsAttested</DataField>
										<DataSource>HRPLimitTmpAgreement</DataSource>
										<Label>@SYS191663</Label>
									</AxFormControl>
								</Controls>
								<DataSource>HRPLimitTmpAgreement</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS302123</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>OKButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Button</Type>
						<FormControlExtension
							i:nil="true" />
						<Text>@SYS72169</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<DataSource>HRPLimitTmpAgreement</DataSource>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>