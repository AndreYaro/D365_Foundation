<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>WHSCatchWeightLinkWorkLineTagDropDownDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class WHSCatchWeightLinkWorkLineTagDropDownDialog extends FormRun
{
    FormRun                     callerForm;
    WHSCatchWeightTag           catchWeightTag;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        this.initializeForm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeForm</Name>
				<Source><![CDATA[
    private void initializeForm()
    {
        if (!element.args().record() || !element.args().caller())
        {
            throw error(strFmt("@SYS19096", this.name(), tableStr(WHSCatchWeightTag)));
        }

        catchWeightTag.data(element.args().record());
        callerForm = element.args().caller();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        super();

        if (catchWeightTag && CaptureWorkId.text() && CaptureWorkLineNum.realValue())
        {
            WHSWorkLine workLine = WHSWorkLine::find(CaptureWorkId.text(), CaptureWorkLineNum.realValue());

            if (workLine.RecId)
            {
                InventTransId inventTransId = this.selectedInventTransId(workLine);

                WHSCatchWeightTagEventRegistration tagRegistration;
                if (inventTransId)
                {
                    tagRegistration = WHSCatchWeightTagEventRegistration::instantiateFromInventTransId(workLine.InventTransId, catchWeightTag.ItemId);
                }
                else
                {
                    tagRegistration = WHSCatchWeightTagEventRegistration::instantiateFromTagRegistration(WHSCatchWeightTagRegistrationEvent::TagUpdated);
                }

                tagRegistration.parmWorkLineRecId(workLine.RecId);
                // Retain the storage dimensions the tag already has
                tagRegistration.parmStorageInventDim(InventDim::find(catchWeightTag.InventDimId));
                tagRegistration.registerEvent(catchWeightTag);

                callerForm.dataSource().reread();
                callerForm.dataSource().research();

                callerForm.dataSource().positionToRecord(catchWeightTag);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedInventTransId</Name>
				<Source><![CDATA[
    private InventTransId selectedInventTransId(WHSWorkLine _workLine)
    {
        InventTransId ret = _workLine.InventTransId;

        if (!ret)
        {
            WHSCatchWeightTagLastRegistration lastRegistration = WHSCatchWeightTagLastRegistration::find(catchWeightTag.TagNumber);
            if (lastRegistration.InventTransId && WHSWorkInventTrans::findbyWorkIdLineNumItemIdTransIdParent(_workLine.WorkId, _workLine.LineNum, catchWeightTag.ItemId, lastRegistration.InventTransId).RecId)
            {
                ret = lastRegistration.InventTransId;
            }
        }
         
        return ret;   
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupWork</Name>
				<Source><![CDATA[
    public void lookupWork(FormControl _control)
    {
        Query query = new Query();

        QueryBuildDataSource dsWorkTable = query.addDataSource(tableNum(WHSWorkTable));

        QueryBuildDataSource dsWorkInventTrans = dsWorkTable.addDataSource(tableNum(WHSWorkInventTrans));
        dsWorkInventTrans.joinMode(JoinMode::ExistsJoin);
        dsWorkInventTrans.addLink(fieldNum(WHSWorkTable, WorkId), fieldNum(WHSWorkInventTrans, WorkId));
        dsWorkInventTrans.addRange(fieldNum(WHSWorkInventTrans, ItemId)).value(queryValue(catchWeightTag.ItemId));
        
        SysTableLookup lookup = SysTableLookup::newParameters(tableNum(WHSWorkTable), _control);
        lookup.parmQuery(query);
        lookup.addLookupfield(fieldNum(WHSWorkTable, WorkId));
        lookup.addLookupfield(fieldNum(WHSWorkTable, WorkStatus));

        lookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupWorkLine</Name>
				<Source><![CDATA[
    public void lookupWorkLine(FormControl _control, WHSWorkId _workId)
    {
        Query query = new Query();

        QueryBuildDataSource dsWorkLine = query.addDataSource(tableNum(WHSWorkLine));
        dsWorkLine.addRange(fieldNum(WHSWorkLine, WorkId)).value(queryValue(_workId));
        dsWorkLine.addRange(fieldNum(WHSWorkLine, WorkType)).value(queryValue(WHSWorkType::Pick));

        QueryBuildDataSource dsWorkInventTrans = dsWorkLine.addDataSource(tableNum(WHSWorkInventTrans));
        dsWorkInventTrans.joinMode(JoinMode::ExistsJoin);
        dsWorkInventTrans.relations(true);
        dsWorkInventTrans.addRange(fieldNum(WHSWorkInventTrans, ItemId)).value(queryValue(catchWeightTag.ItemId));
        
        SysTableLookup lookup = SysTableLookup::newParameters(tableNum(WHSWorkLine), _control);
        lookup.parmQuery(query);
        lookup.addLookupfield(fieldNum(WHSWorkLine, LineNum));
        lookup.addLookupfield(fieldNum(WHSWorkLine, WorkStatus));
        lookup.addLookupfield(fieldNum(WHSWorkLine, WorkId));

        lookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>CaptureWorkId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            CaptureWorkLineNum.realValue(0);
    
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            element.lookupWork(this);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CaptureWorkLineNum</Name>
				<Type>Real</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            element.lookupWorkLine(this, CaptureWorkId.text());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@WAX:WHSCatchWeightLinkWorkLineTag</Caption>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Register</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CaptureWorkId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>WHSWorkId</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>CaptureWorkLineNum</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Real</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>LineNum</ExtendedDataType>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>DialogCommit</Name>
				<ConfigurationKey>WHSCatchWeight</ConfigurationKey>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<ButtonDisplay>TextOnly</ButtonDisplay>
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS301992</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>