<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PlSADTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PlSADTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dutyTotalAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates total duty amount for SAD
    /// </summary>
    /// <returns>
    /// Total duty amount for SAD
    /// </returns>
    public AmountMST dutyTotalAmount()
    {
        PlSADTrans sadTrans;

        select sum(SADDutyAmount1), sum(SADDutyAmount2), sum(TaxAmount) from sadTrans
            where sadTrans.SADNumberCode == this.SADNumberCode;

        return sadTrans.SADDutyAmount1 + sadTrans.SADDutyAmount2 + sadTrans.TaxAmount + this.SADMiscCharg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editExchRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display or edit SAD exchange rate
    /// </summary>
    /// <param name="_set">
    /// true if exchange rate to be edited
    /// </param>
    /// <param name="_exchRate">
    /// New exchange rate as entered by user
    /// </param>
    /// <returns>
    /// Exchange rate as it should be displayed
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    public edit ExchRate editExchRate(boolean _set, ExchRate _exchRate)
    {
        ExchRate            exchRate = _exchRate;
        ExchangeRateHelper  exchangeRateHelper = ExchangeRateHelper::newCurrency(Ledger::primaryLedger(CompanyInfo::current()), this.CurrencyCode);
        if (_set)
        {
            this.ExchRate = exchangeRateHelper.prepareExchangeRateForStorage(exchRate);
        }
        else
        {
            exchRate = exchangeRateHelper.displayStoredExchangeRate(this.ExchRate);
        }

        return exchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInvoiced</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays status of SAD
    /// </summary>
    /// <returns>
    /// true if SAD is posted
    /// </returns>
    display NoYes isInvoiced()
    {
        return this.Voucher ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        PlSADPurchTable sadPurchTable;

        super();

        if (this.Posted)
        {
            delete_from sadPurchTable where sadPurchTable.SADNumberCode == this.SADNumberCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkIfSADCanBePosted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if SAD can be posted
    /// </summary>
    /// <param name="_sadTable">
    /// SAD table to be validated
    /// </param>
    /// <returns>
    /// true if all linked purchase order lines have no tax setup; otherwise returns false
    /// </returns>
    /// <remarks>
    /// returns false even if there is no effective tax combination for tax group and tax item group on the purchase order line
    /// </remarks>
    public static boolean checkIfSADCanBePosted(PlSADTable _sadTable)
    {
        boolean         ret = true;
        PurchLine       purchLine;
        PlSADPurchLine  sadPurchLine;

        select firstonly RecId from purchLine
            where purchLine.TaxGroup                                     &&
                  purchLine.TaxItemGroup
        exists join sadPurchLine
            where sadPurchLine.SADNumberCode  == _sadTable.SADNumberCode &&
                  sadPurchLine.PurchLineRefId == purchLine.RecId;

        if (purchLine.RecId)
        {
            ret = checkFailed("@GLS109537");
        }

        ret = ret && _sadTable.checkSADPurchTables();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkSADPurchTables</Name>
				<Source><![CDATA[
    private boolean checkSADPurchTables()
    {
        boolean ret = true;

        if (FeatureStateProvider::isFeatureEnabled(PlSADMultiInvoicePerPurchOrderFeature::instance()))
        {
            PlSADPurchTable sadPurchTable;

            while select sadPurchTable
                where sadPurchTable.SADNumberCode == this.SADNumberCode
            {
                ret = sadPurchTable.checkPurchLinesQty() && ret;
            }
        }
        return ret;
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds <c>PlSADTable</c> record by AK
    /// </summary>
    /// <param name="_sadNumberCode">
    /// SAD number
    /// </param>
    /// <param name="_forUpdate">
    /// pass ture to select forupdate
    /// </param>
    /// <returns>
    /// <c>PlSADTable</c> record found
    /// </returns>
    public static PlSADTable find(
        PlSADNumberCode _sadNumberCode,
        boolean         _forUpdate = false)
    {
        PlSADTable sadTable;

        sadTable.selectForUpdate(_forUpdate);
        select firstonly sadTable
            where sadTable.SADNumberCode == _sadNumberCode;

        return sadTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds <c>PlSADTable</c> record by PK
    /// </summary>
    /// <param name="_recId">
    /// Record ID
    /// </param>
    /// <param name="_forUpdate">
    /// pass ture to select forupdate
    /// </param>
    /// <returns>
    /// <c>PlSADTable</c> record found
    /// </returns>
    public static PlSADTable findRecId(
        RecId   _recId,
        boolean _forUpdate = false)
    {
        PlSADTable sadTable;

        sadTable.selectForUpdate(_forUpdate);
        select firstonly sadTable
            where sadTable.RecId == _recId;

        return sadTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupPurchase</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows lookup for non-invoiced purchase orders in given currency and for given vendor.
    /// </summary>
    /// <param name="_formControl">
    /// Control to lookup value for. Assumption is that the control is based on PurchId data type.
    /// </param>
    /// <param name="_currency">
    /// Currency to filter purchase orders.
    /// </param>
    /// <param name="_sadNumberCode">
    /// SAD number to filter out only SAD-related vendors if vendor account <paramref name="_orderAccount"/> is not specified
    /// </param>
    /// <param name="_orderAccount">
    /// Vendor account to filter purchase orders.
    /// </param>
    /// <remarks>
    /// SAD document disallows to link to purchase orders in currency, different from SAD currency.
    /// Also no sense is to link to invoiced purchase order - it cannot be invoiced once more.
    /// </remarks>
    public static void lookupPurchase(
        FormControl     _formControl,
        CurrencyCode    _currency,
        PlSADNumberCode _sadNumberCode,
        VendAccount     _orderAccount = '')
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    qbds;

        sysTableLookup = SysTableLookup::newParameters(tableNum(PurchTable), _formControl);
        sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchId));
        sysTableLookup.addLookupfield(fieldNum(PurchTable, PurchName));
        sysTableLookup.addLookupfield(fieldNum(PurchTable, OrderAccount));
        sysTableLookup.addLookupfield(fieldNum(PurchTable, InvoiceAccount));

        query = new Query();
        qbds = query.addDataSource(tableNum(PurchTable));
        findOrCreateRange_W(qbds, fieldNum(PurchTable, CurrencyCode), _currency);
        qbds.addRange(fieldNum(PurchTable, PurchStatus)).value(SysQuery::value(PurchStatus::None));
        qbds.addRange(fieldNum(PurchTable, PurchStatus)).value(SysQuery::value(PurchStatus::Backorder));
        qbds.addRange(fieldNum(PurchTable, PurchStatus)).value(SysQuery::value(PurchStatus::Received));
        if (prmisDefault(_orderAccount))
        {
            qbds = qbds.addDataSource(tableNum(PlSADInvoice));
            qbds.addLink(fieldNum(PurchTable, OrderAccount), fieldNum(PlSADInvoice, SADDutyVend));
            qbds.joinMode(JoinMode::ExistsJoin);
            findOrCreateRange_W(qbds, fieldNum(PlSADInvoice, SADNumberCode), _sadNumberCode);
        }
        else
        {
            findOrCreateRange_W(qbds, fieldNum(PurchTable, OrderAccount),  _orderAccount);
        }

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postButtonActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if posting button should be active for the SAD
    /// </summary>
    /// <param name="_sadNumberCode">
    /// SAD number code
    /// </param>
    /// <returns>
    /// true if corresponding SAD exists
    /// </returns>
    public static boolean postButtonActive(PlSADNumberCode _sadNumberCode)
    {
        PlSADPurchTable sadPurchTable;

        select firstonly sadPurchTable
            where sadPurchTable.SADNumberCode == _sadNumberCode;

        if (sadPurchTable)
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>PL</CountryRegionCodes>
	<DeveloperDocumentation>@GLS223969</DeveloperDocumentation>
	<FormRef>PlSadTable</FormRef>
	<Label>@GLS109330</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>SADNumber</TitleField1>
	<TitleField2>SADDate</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>SadCodeIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>SadCodeIdx</PrimaryIndex>
	<ReplacementKey>SadCodeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SADNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SADDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Posted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SADNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SADDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SADNumberCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Currency</Name>
			<Label>@SYS7572</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CurrencyShow</Name>
			<Label>@SYS7572</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editExchRate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dates</Name>
			<Label>@GLS109242</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VATDueDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MischCharges</Name>
			<Label>@GLS109195</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SADMiscCharg</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS5943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Posted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SADDocument</Name>
			<Label>@GLS109193</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SADNumberCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SADNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SADDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SADDutyVend</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transport</Name>
			<Label>@SYS50385</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SADTransAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExchRate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Posted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS1711</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SADDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlSADDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SADDutyVend</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlSADDutyVend</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SADMiscCharg</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlSADMiscCharg</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SADNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlSADNumber</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SADNumberCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlSADNumberCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SADTransAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlSADTransAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>VATDueDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VatDueDate_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SadCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SADNumberCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InvoicedIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SADPostedIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Posted</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SADNumberCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VoucherDateDutyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SADDutyVend</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SADDutyVend</Name>
					<SourceEDT>PlSADDutyVend</SourceEDT>
					<Field>SADDutyVend</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>