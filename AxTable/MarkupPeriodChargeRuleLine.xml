<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MarkupPeriodChargeRuleLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MarkupPeriodChargeRuleLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static MarkupPeriodChargeRuleLine find(
        MarkupPeriodChargeRuleRecId _periodChargeRuleId,
        LineNum                     _lineNum,
        boolean                     _selectForUpdate = false)
    {
        MarkupPeriodChargeRuleLine periodChargeRuleLine;

        if (_periodChargeRuleId)
        {
            if (_selectForUpdate)
            {
                periodChargeRuleLine.selectForUpdate(_selectForUpdate);
            }
            
            select firstonly periodChargeRuleLine
                index hint RuleLineIdx
                where periodChargeRuleLine.PeriodChargeRule == _periodChargeRuleId
                &&    periodChargeRuleLine.LineNum == _lineNum;
        }

        return periodChargeRuleLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existMonetaryThresholdRuleLineByChargeCodeAndCurrencyCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean existMonetaryThresholdRuleLineByChargeCodeAndCurrencyCode(
            MarkupPeriodChargeRuleRecId         _periodChargeRuleId,
            MarkupPeriodChargeRuleChargeCode    _chargeCode,
            MarkupPeriodChargeRuleCurrencyCode  _currencyCode)
    {
        MarkupPeriodChargeRuleLine periodChargeRuleLine;

        select firstonly periodChargeRuleLine
            where periodChargeRuleLine.RuleLineType     == MarkupPeriodChargeRuleLineType::MonetaryThreshold
            &&    periodChargeRuleLine.PeriodChargeRule == _periodChargeRuleId
            &&    periodChargeRuleLine.ChargeCode       == _chargeCode
            &&    periodChargeRuleLine.CurrencyCode     == _currencyCode
            &&    periodChargeRuleLine.RecId            != this.RecId;

        return periodChargeRuleLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existQuantityThresholdMinAmountRuleLineByChargeCodeAndCurrencyCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean existQuantityThresholdMinAmountRuleLineByChargeCodeAndCurrencyCode(
            MarkupPeriodChargeRuleRecId                 _periodChargeRuleId,
            MarkupPeriodChargeRuleChargeCode            _chargeCode,
            MarkupPeriodChargeRuleCurrencyCode          _currencyCode)
    {
        MarkupPeriodChargeRuleLine periodChargeRuleLine;

        select firstonly periodChargeRuleLine
            where periodChargeRuleLine.RuleLineType         == MarkupPeriodChargeRuleLineType::QuantityThresholdMinAmount
            &&    periodChargeRuleLine.PeriodChargeRule     == _periodChargeRuleId
            &&    periodChargeRuleLine.ChargeCode           == _chargeCode
            &&    periodChargeRuleLine.CurrencyCode         == _currencyCode
            &&    periodChargeRuleLine.RecId                != this.RecId;

        return periodChargeRuleLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existRuleLineByChargeRuleAndLineType</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean existRuleLineByChargeRuleAndLineType(
            MarkupPeriodChargeRuleRecId         _periodChargeRuleId,
            MarkupPeriodChargeRuleLineTypeId    _type)
    {
        MarkupPeriodChargeRuleLine periodChargeRuleLine;

        select firstonly periodChargeRuleLine
            where periodChargeRuleLine.PeriodChargeRule == _periodChargeRuleId
            &&    periodChargeRuleLine.RuleLineType     == _type
            &&    periodChargeRuleLine.RecId            != this.RecId;

        return periodChargeRuleLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearAllFields</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void clearAllFields()
    {
        this.LineNum                = 0.0;
        this.MonetaryThreshold      = 0.0;
        this.CurrencyCode           = '';
        this.ChargeCode             = '';
        this.DebitChargeAmountOnly  = NoYes::No;
        this.QuantityThreshold      = 0.0;
        this.UnitSymbol             = '';
        this.DebitQuantityOnly      = NoYes::No;
        this.ChargeAmount           = 0.0;
        this.AmountCurrencyCode     = '';
        this.DefaultRevenueAccount  = 0;
        this.Description            = '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static boolean exist(MarkupPeriodChargeRuleRecId _periodChargeRuleId,
                                  LineNum                     _lineNum)
    {
        if (!_periodChargeRuleId)
        {
            return false;
        }

        if (_lineNum == naReal())
        {
            return (select firstonly RecId from MarkupPeriodChargeRuleLine
                        index hint RuleLineIdx
                        where MarkupPeriodChargeRuleLine.PeriodChargeRule == _periodChargeRuleId).RecId != 0;
        }

        return (select firstonly RecId from MarkupPeriodChargeRuleLine
                    index hint RuleLineIdx
                    where MarkupPeriodChargeRuleLine.PeriodChargeRule == _periodChargeRuleId
                    &&    MarkupPeriodChargeRuleLine.LineNum == _lineNum).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodChargeRule</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal MarkupPeriodChargeRule periodChargeRule(boolean _selectForUpdate = false)
    {
        return MarkupPeriodChargeRule::findRecId(this.PeriodChargeRule, _selectForUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastLineNum</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static LineNum  lastLineNum(MarkupPeriodChargeRuleRecId _periodChargeRuleId)
    {
        return (select maxof(LineNum) from MarkupPeriodChargeRuleLine
                    index hint RuleLineIdx
                    where MarkupPeriodChargeRuleLine.PeriodChargeRule == _periodChargeRuleId).LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (!this.LineNum)
        {
            this.LineNum = MarkupPeriodChargeRuleLine::lastLineNum(this.PeriodChargeRule) + 1.0;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch(_fieldId)
        {
            case fieldnum(MarkupPeriodChargeRuleLine, RuleLineType) :
                this.clearAllFields();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        switch (this.RuleLineType)
        {
            case MarkupPeriodChargeRuleLineType::MonetaryThreshold :
                if (!this.CurrencyCode)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldPName(MarkupPeriodChargeRuleLine, CurrencyCode)));
                }

                if (!this.ChargeCode)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldPName(MarkupPeriodChargeRuleLine, ChargeCode)));
                }

                if (this.existMonetaryThresholdRuleLineByChargeCodeAndCurrencyCode(this.PeriodChargeRule, this.ChargeCode, this.CurrencyCode))
                {
                    ret = checkFailed(strfmt("@SCM:MarkupPeriodChargeCodeRuleLineExistsMsg", this.RuleLineType, this.ChargeCode));
                }
                break;

            case MarkupPeriodChargeRuleLineType::QuantityThreshold :
                if (!this.UnitSymbol)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldPName(MarkupPeriodChargeRuleLine, UnitSymbol)));
                }

                if (!this.AmountCurrencyCode)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldPName(MarkupPeriodChargeRuleLine, AmountCurrencyCode)));
                }

                if (this.existRuleLineByChargeRuleAndLineType(this.PeriodChargeRule, this.RuleLineType))
                {
                    ret = checkFailed(strfmt("@SCM:MarkupPeriodChargeQtyThresholdRuleLineExistsMsg", this.RuleLineType));
                }
                break;

            case MarkupPeriodChargeRuleLineType::QuantityThresholdMinAmount :
                if (!this.CurrencyCode)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldPName(MarkupPeriodChargeRuleLine, CurrencyCode)));
                }

                if (!this.ChargeCode)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldPName(MarkupPeriodChargeRuleLine, ChargeCode)));
                }

                if (!this.UnitSymbol)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldPName(MarkupPeriodChargeRuleLine, UnitSymbol)));
                }

                if (this.existQuantityThresholdMinAmountRuleLineByChargeCodeAndCurrencyCode(this.PeriodChargeRule, this.ChargeCode, this.CurrencyCode))
                {
                    ret = checkFailed(strfmt("@SCM:MarkupPeriodChargeCodeRuleLineExistsMsg", this.RuleLineType, this.ChargeCode));
                }
                break;
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Markup</ConfigurationKey>
	<DeveloperDocumentation>@SCM:MarkupPeriodChargeRuleLineDevDoc</DeveloperDocumentation>
	<Label>@SCM:MarkupPeriodChargeRuleLine</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>Description</TitleField1>
	<TitleField2>LineNum</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RuleLineIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<ModifiedBy>Yes</ModifiedBy>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>RuleLineIdx</PrimaryIndex>
	<ReplacementKey>RuleLineIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PeriodChargeRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RuleLineType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MonetaryThreshold</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChargeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DebitChargeAmountOnly</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityThreshold</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitSymbol</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DebitQuantityOnly</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChargeAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RuleLineType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleLineTypeId</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
			<Mandatory>Yes</Mandatory>
			<EnumType>MarkupPeriodChargeRuleLineType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MonetaryThreshold</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleMonetaryThreshold</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleCurrencyCode</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ChargeCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleChargeCode</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DebitChargeAmountOnly</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleDebitChargeAmountOnly</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityThreshold</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleQuantityThreshold</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitSymbol</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleUnitSymbol</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DebitQuantityOnly</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleDebitQuantityOnly</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ChargeAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleChargeAmount</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AmountCurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleAmountCurrencyCode</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultRevenueAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleDefaultRevenueAccount</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
			<Mandatory>Yes</Mandatory>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleLineDescription</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PeriodChargeRule</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>MarkupPeriodChargeRuleRecId</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<FeatureClass>MarkupPeriodChargeFeature</FeatureClass>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RuleLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PeriodChargeRule</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustomerMarkupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MarkupTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ChargeCode</Name>
					<Field>ChargeCode</Field>
					<RelatedField>MarkupCode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>ModuleType</Name>
					<RelatedField>ModuleType</RelatedField>
					<ValueStr>MarkupModuleType::Cust</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PeriodChargeRule</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MarkupPeriodChargeRule</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PeriodChargeRule</Name>
					<Field>PeriodChargeRule</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultRevenueAccount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultRevenueAccount</Name>
					<Field>DefaultRevenueAccount</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CurrencyCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesUnit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitSymbol</Name>
					<Field>UnitSymbol</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AmountCurrencyCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AmountCurrencyCode</Name>
					<Field>AmountCurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>