<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjActivityAssignment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjActivityAssignment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addDefaultAssignment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the default assignment according to the maximum allowable capacity of the resource.
    /// </summary>
    /// <param name="_resource">
    /// The resource that defines the impacted row.
    /// </param>
    /// <param name="_activityNumber">
    /// The activity that defines the impacted row.
    /// </param>
    public void addDefaultAssignment(WrkCtrId _resource,
                                 smmActivityNumber _activityNumber)
    {
        ProjActivityAssignment activityAssignment;
        ProjResource           projResource;
        ProjId                 projId;

        projId =smmActivities::find(_activityNumber).projId();
        if (!projId)
        {
            return;
        }

        ttsbegin;
        if (!ProjActivityAssignment::exist(_activityNumber,_resource))
        {
            activityAssignment.WrkCtrId = _resource;
            activityAssignment.ActivityNumber =_activityNumber;
            activityAssignment.CapLimited = NoYes::No;
            activityAssignment.LoadPct   =100.0;
            activityAssignment.insert();
        }

        //Add to project team
        if (!ProjResource::exist(projId,_resource))
        {
            projResource.ProjId = projId;
            projResource.WrkCtrId = _resource;
            projResource.insert();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resourceName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the resource name
    /// </summary>
    /// <returns>
    ///    The resource name specified by the resource ID.
    /// </returns>
    display ResResourceName resourceName()
    {
        return WrkCtrTable::find(this.WrkCtrId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the assignment exists for the activity and resource.
    /// </summary>
    /// <param name="_activityNumber">
    /// The activity that defines the impacted row.
    /// </param>
    /// <param name="_resourceId">
    /// The resource that defines the impacted row.
    /// </param>
    /// <returns>
    /// true if the assignment exists; otherwise, false.
    /// </returns>
    public static boolean exist(smmActivityNumber _activityNumber, WrkCtrId _resourceId)
    {
        return (select firstonly RecId from projActivityAssignment
            where   projActivityAssignment.ActivityNumber == _activityNumber &&
                    projActivityAssignment.WrkCtrId ==_resourceId).RecId!=0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existInProject</Name>
				<Source><![CDATA[
    /// <summary>
    /// A Boolean value that indicates whether the assignment, softbooking, and hardbooking exists for the
    /// project and resource.
    /// </summary>
    /// <param name="_projId">
    /// The project to check.
    /// </param>
    /// <returns>
    /// true if this project has an activity; otherwise, false.
    /// </returns>
    public static boolean existInProject(ProjId _projId)
    {
        smmActivities   smmActivities;
        HierarchyTreeTable hierarchyTreeTable;
        HierarchyLinkTable hierarchyLinkTable;
        ProjActivityAssignment projActivityAssignment;
        WrkCtrCapRes           wrkCtrCapRes;
        boolean                ret;

        select firstonly RecId from projActivityAssignment
        join RecId from smmActivities
        where smmActivities.ActivityNumber == projActivityAssignment.ActivityNumber
        exists join hierarchyTreeTable
        where  hierarchyTreeTable.RefRecId == smmActivities.RecId
        exists join hierarchyLinkTable
        where hierarchyLinkTable.HierarchyId == hierarchyTreeTable.HierarchyId
        &&    hierarchyLinkTable.RefTableId == tableNum(ProjTable)
        &&    hierarchyLinkTable.RefRecId   == ProjTable::find(_projId).RecId;

        ret =  (projActivityAssignment.RecId!=0);

        if (!ret)
        {
            select firstonly RecId from wrkCtrCapRes
            where wrkCtrCapRes.RefId == _projId
            &&    wrkCtrCapRes.RefType == WrkCtrCapRefType::ProjectActivity;

            ret = wrkCtrCapRes.RecId!=0;
        }

        return  ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>ProjActivityAssignment</c> table
    /// </summary>
    /// <param name="_activityNumber">
    ///    The activity number of the record to find.
    /// </param>
    /// <param name="_resourceId">
    ///    The resource ID of the record to find.
    /// </param>
    /// <param name="_selectForUpdate">
    ///    A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>ProjActivityAssignment</c> table; otherwise, an empty record.
    /// </returns>
    public static ProjActivityAssignment find(smmActivityNumber _activityNumber, WrkCtrId _resourceId, boolean _selectForUpdate=false)
    {
        ProjActivityAssignment projActivityAssignment;

        projActivityAssignment.selectForUpdate(_selectForUpdate);
        select firstonly RecId from projActivityAssignment
        where   projActivityAssignment.ActivityNumber == _activityNumber &&
                projActivityAssignment.WrkCtrId ==_resourceId;

        return projActivityAssignment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateResourceList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the resource list, such as A, B, C, from the <c>projActivityAssignment</c> records.
    /// </summary>
    /// <param name="_activityNumber">
    /// The activity number.
    /// </param>
    /// <returns>
    /// The resource list.
    /// </returns>
    public static ProjResourceList generateResourceList(smmActivityNumber _activityNumber)
    {
        ProjResourceList retList;
        ProjActivityAssignment assignment;
        boolean isFirst=true;
        while select WrkCtrId from assignment where assignment.ActivityNumber == _activityNumber
        {
            if (isFirst)
            {
                retList += assignment.WrkCtrId;
                isFirst = false;
            }
            else
            {
                retList += (','+ assignment.WrkCtrId);
            }
        }
        return retList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEarliestActivityStartDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the earliest activity start date and time.
    /// </summary>
    /// <param name="_projId">
    ///    The project ID of the earliest activity.
    /// </param>
    /// <returns>
    ///    The earliest activity start date and time.
    /// </returns>
    public static smmActivityStartDateTime getEarliestActivityStartDateTime(ProjId _projId)
    {
        smmActivities   smmActivities;
        HierarchyTreeTable hierarchyTreeTable;
        HierarchyLinkTable hierarchyLinkTable;
        select firstonly StartDateTime from smmActivities order by StartDateTime
        exists join hierarchyTreeTable
        where smmActivities.RecId == hierarchyTreeTable.RefRecId
        exists join hierarchyLinkTable
        where hierarchyLinkTable.HierarchyId == hierarchyTreeTable.HierarchyId
        &&    hierarchyLinkTable.RefTableId == tableNum(ProjTable)
        &&    hierarchyLinkTable.RefRecId   == ProjTable::find(_projId).RecId;

        return DateTimeUtil::applyTimeZoneOffset(smmActivities.StartDateTime,DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLatestActivityEndDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the latest activity start date and time.
    /// </summary>
    /// <param name="_projId">
    ///    The project ID of the latest activity.
    /// </param>
    /// <returns>
    ///    The earliest activity start date and time.
    /// </returns>
    public static smmActivityEndDateTime getLatestActivityEndDateTime(ProjId _projId)
    {
        smmActivities   smmActivities;
        HierarchyTreeTable hierarchyTreeTable;
        HierarchyLinkTable hierarchyLinkTable;
        select firstonly EndDateTime from smmActivities order by EndDateTime desc
        exists join hierarchyTreeTable
        where smmActivities.RecId == hierarchyTreeTable.RefRecId
        exists join hierarchyLinkTable
        where hierarchyLinkTable.HierarchyId == hierarchyTreeTable.HierarchyId
        &&    hierarchyLinkTable.RefTableId == tableNum(ProjTable)
        &&    hierarchyLinkTable.RefRecId   == ProjTable::find(_projId).RecId;

        return DateTimeUtil::applyTimeZoneOffset(smmActivities.EndDateTime,DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS317709</DeveloperDocumentation>
	<Label>@SYS183737</Label>
	<TableGroup>TransactionLine</TableGroup>
	<TitleField1>WrkCtrId</TitleField1>
	<TitleField2>ActivityNumber</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>ProjectManagementAndAccounting</Modules>
	<ReplacementKey>AssignmentIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActivityNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadPct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CapLimited</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WrkCtrId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActivityNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActivityNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WrkCtrId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AllGroup</Name>
			<Label>@SYS14437</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WrkCtrId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CapLimited</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadPct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActivityNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ActivityNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmActivityNumber</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CapLimited</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SchedLimitCap</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LoadPct</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WrkCtrLoadPct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WrkCtrId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmPersonnelNumberId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WrkCtrTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WrkCtrId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AssignmentIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ActivityNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WrkCtrId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmActivities</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>smmActivities</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>smmActivities</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ProjActivityAssignment</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ActivityNumber</Name>
					<SourceEDT>smmActivityNumber</SourceEDT>
					<Field>ActivityNumber</Field>
					<RelatedField>ActivityNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ActivityNumberIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WrkCtrTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WrkCtrTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>WrkCtrTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>WrkCtrTable_ProjActivityAssignment</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WrkCtrId</Name>
					<Field>WrkCtrId</Field>
					<RelatedField>WrkCtrId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>WrkCtrIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>