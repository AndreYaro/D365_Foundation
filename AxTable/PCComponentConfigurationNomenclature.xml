<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCComponentConfigurationNomenclature</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PCComponentConfigurationNomenclature extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByPCClass</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a nomenclature association based on a <c>PCClass</c>.
    /// </summary>
    /// <param name = "_pcClass">The RecId of the <c>PCClass</c> record to find.</param>
    /// <param name = "_role">The role to filter on.</param>
    /// <returns>The nomenclature association.</returns>
    public static PCComponentConfigurationNomenclature findByPCClass(RefRecId _pcClass, EcoResNomenclatureRole _role)
    {
        PCComponentConfigurationNomenclature nomenclature;

        select firstonly nomenclature
            where nomenclature.PCClass == _pcClass
               && nomenclature.NomenclatureRole == _role;

        return nomenclature;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accept</Name>
				<Source><![CDATA[
    /// <summary>
    /// Accepts a product configuration model visitor.
    /// </summary>
    /// <param name="_visitor">
    ///  A product configuration model visitor.
    /// </param>
    public void accept(PCModelVisitor _visitor)
    {
        _visitor.visitStart(this);

        PCConfigurationNomenclature::find(this.PCConfigurationNomenclature).accept(_visitor);

        _visitor.visitEnd(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PC</ConfigurationKey>
	<DeveloperDocumentation>@SCM:EcoResPCComponentConfigurationNomenclatureDevDoc</DeveloperDocumentation>
	<Label>@SCM:EcoResPCComponentConfigurationNomenclature</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>PCClass</TitleField1>
	<TitleField2>NomenclatureRole</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>ClassAndRole</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PCClass</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NomenclatureRole</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PCConfigurationNomenclature</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PCConfigurationNomenclatureRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NomenclatureRole</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>EcoResNomenclatureRole</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PCClass</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PCClassRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsActive</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SCM:UseConfigurationNomenclature</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ClassAndRole</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PCClass</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>NomenclatureRole</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PCConfigurationNomenclature</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PCConfigurationNomenclature</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PCConfigurationNomenclature</Name>
					<Field>PCConfigurationNomenclature</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PCClass</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PCClass</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PCClass</Name>
					<Field>PCClass</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>