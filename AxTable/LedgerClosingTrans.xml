<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerClosingTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerClosingTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete(NoYes _updateTable = NoYes::Yes)
    {
        ttsbegin;

        if (_updateTable && this.OffsetAccountRecId)
        {
            LedgerClosingTrans offsetTrans = LedgerClosingTrans::find(this.OffsetAccountRecId, true);

            if (offsetTrans)
            {
                offsetTrans.delete(NoYes::No);
            }
        }

        MainAccount mainAccount = LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.LedgerDimension);

        LedgerClosingTable ledgerClosingTable = LedgerClosingTable::find(this.Sheet, mainAccount.RecId, true);

        if (ledgerClosingTable)
        {
            ledgerClosingTable.Transfer -= this.Amount;
            ledgerClosingTable.autoEnd();
            ledgerClosingTable.update(true);
        }

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editAmountCredit_CN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edit method for field AmountCredit.
    /// </summary>
    /// <param name="_set">
    /// whether the amount is set or read.
    /// </param>
    /// <param name="_amount">
    /// Amount credit to set.
    /// </param>
    /// <returns>
    /// Amount credit.
    /// </returns>
    public edit LedgerAmountMSTCredit_CN editAmountCredit_CN(boolean _set, AmountMST _amount)
    {
        if (_set)
        {
            this.Amount = _amount * (-1);
        }

        return LedgerShowDebCredController_CN::getAmountCurCreditBySign(this.Amount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>editAmountDebit_CN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edit method for the Amount Debit.
    /// </summary>
    /// <param name="_set">
    /// Wether the amount is set or read.
    /// </param>
    /// <param name="_amount">
    /// the amount credit to set.
    /// </param>
    /// <returns>
    /// amount debit.
    /// </returns>
    public edit LedgerAmountMSTDebit_CN editAmountDebit_CN(boolean _set, AmountMST _amount)
    {
        if (_set)
        {
            this.Amount = _amount;
        }

        return LedgerShowDebCredController_CN::getAmountCurDebitBySign(this.Amount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromClosingSheet</Name>
				<Source><![CDATA[
    public void initFromClosingSheet(LedgerClosingSheet _ledgerClosingSheet)
    {
        this.OperationsTax = _ledgerClosingSheet.CurrentOperationsTax;
        this.Sheet         = _ledgerClosingSheet.Sheet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert(NoYes testForOffsetAccount = NoYes::Yes)
    {
        ttsbegin;

        super();

        LedgerClosingTable ledgerClosingTable = LedgerClosingTable::find(this.Sheet, this.MainAccount, true);

        if (ledgerClosingTable)
        {
            ledgerClosingTable.Transfer += this.Amount;

            ledgerClosingTable.autoEnd();
            ledgerClosingTable.update(true);
        }

        if (testForOffsetAccount)
        {
            if (this.OffsetLedgerDimension)
            {
                LedgerClosingTrans  offsetTrans;
                offsetTrans                       = this.data();
                offsetTrans.Amount                = -this.Amount;
                offsetTrans.OffsetLedgerDimension = this.LedgerDimension;
                offsetTrans.LedgerDimension       = this.OffsetLedgerDimension;
                offsetTrans.OffsetAccountRecId =  this.RecId;
                offsetTrans.MainAccount = DimensionAttributeValueCombination::find(offsetTrans.LedgerDimension).MainAccount;
                offsetTrans.insert(NoYes::No);

                this.OffsetAccountRecId = offsetTrans.RecId;
                this.update(NoYes::No);
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(LedgerClosingTrans, LedgerDimension):
                this.MainAccount = DimensionAttributeValueCombination::find(this.LedgerDimension).MainAccount;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update(NoYes testForOffsetAccount = NoYes::Yes)
    {
        LedgerClosingTrans this_Orig = this.orig();

        ttsbegin;

        if (this_Orig.Amount != this.Amount)
        {
            LedgerClosingTable ledgerClosingTable = LedgerClosingTable::find(this.Sheet, this.MainAccount, true);

            if (ledgerClosingTable)
            {
                ledgerClosingTable.Transfer += (this.Amount - this_Orig.Amount);
                ledgerClosingTable.autoEnd();
                ledgerClosingTable.update(true);
            }
        }

        if (testForOffsetAccount)
        {
            if ((this.OffsetLedgerDimension != this_Orig.OffsetLedgerDimension) || (this.LedgerDimension != this_Orig.LedgerDimension))
            {
                LedgerClosingTrans offsetTrans;

                if (this_Orig.OffsetLedgerDimension)
                {
                    offsetTrans = LedgerClosingTrans::find(this_Orig.OffsetAccountRecId, true);
                    offsetTrans.delete(NoYes::No);
                }

                offsetTrans                         = this.data();
                offsetTrans.Amount                  = -this.Amount;
                offsetTrans.OffsetLedgerDimension   =  this.LedgerDimension;
                offsetTrans.LedgerDimension         =  this.OffsetLedgerDimension;
                offsetTrans.OffsetAccountRecId      =  this.RecId;
                offsetTrans.MainAccount = DimensionAttributeValueCombination::find(offsetTrans.LedgerDimension).MainAccount;
                offsetTrans.insert(NoYes::No);

                this.OffsetAccountRecId = offsetTrans.RecId;
            }
            else
            {
                if (this_Orig.OffsetAccountRecId &&
                   (this_Orig.Amount != this.Amount))
                {
                    LedgerClosingTrans offsetTrans = LedgerClosingTrans::find(this_Orig.OffsetAccountRecId, true);
                    offsetTrans.Amount = -this.Amount;
                    offsetTrans.update(NoYes::No);
                }
            }
        }

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (LedgerClosingSheet::find(this.Sheet).Voucher)
            {
                ret = checkFailed("@SYS28059");
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId p1)
    {
        boolean ok;

        ok = super(p1);

        if (ok)
        {
            switch (p1)
            {
                case fieldnum(LedgerClosingTrans, LedgerDimension):
                    ok = MainAccount::checkTransactionAccount(this.LedgerDimension);
                    break;

                case fieldnum(LedgerClosingTrans, OffsetLedgerDimension):
                    ok = MainAccount::checkTransactionAccount(this.OffsetLedgerDimension);
                    break;

                default:
            }
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (LedgerClosingSheet::find(this.Sheet).Voucher)
            {
                ret = checkFailed("@SYS28059");
            }
        }

        if (ret)
        {
            ret = MainAccount::checkTransactionAccount(this.LedgerDimension);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(RecId _recId )
    {
        boolean ret = true;

        if (!LedgerClosingTrans::exist(_recId))
        {
            ret = checkFailed(strfmt(LedgerClosingTrans::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(RecId _recId )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     ledgerClosingTrans
                 where
                     ledgerClosingTrans.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static LedgerClosingTrans find(
        LedgerClosingTransRecId _ledgerClosingTransRecId,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        LedgerClosingTrans ledgerClosingTrans;

        ledgerClosingTrans.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            ledgerClosingTrans.concurrencyModel(_concurrencyModel);
        }

        select firstonly ledgerClosingTrans
            where ledgerClosingTrans.RecId == _ledgerClosingTransRecId;

        return ledgerClosingTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateOperationsTaxFromSheet</Name>
				<Source><![CDATA[
    public static void updateOperationsTaxFromSheet(LedgerClosingSheet _ledgerClosingSheet)
    {
        LedgerClosingTrans  ledgerClosingTrans;

        ttsbegin;

        update_recordset ledgerClosingTrans
            setting OperationsTax = _ledgerClosingSheet.CurrentOperationsTax
            where ledgerClosingTrans.Sheet == _ledgerClosingSheet.Sheet;

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS125907</DeveloperDocumentation>
	<Label>@SYS14844</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>Sheet</TitleField1>
	<TitleField2>Amount</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Sheet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OperationsTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Sheet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OffsetAccount</Name>
			<Label>@SYS11162</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetAccountRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS12896</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OperationsTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MainAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MainAccountRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetAccountRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LedgerClosingTransRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Label>@SYS11162</Label>
			<Mandatory>Yes</Mandatory>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OperationsTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CurrentOperationsTax</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Sheet</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ClosingSheet</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<ExtendedDataType>TransTxt</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FK_DimensionAttributeValueCombination_Le</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FK_DimensionAttributeValueCombination1</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SheetMainAccountIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Sheet</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MainAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerClosingSheet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LedgerClosingSheet</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Sheet</Name>
					<SourceEDT>ClosingSheet</SourceEDT>
					<Field>Sheet</Field>
					<RelatedField>Sheet</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SheetIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LedgerClosingTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS125908</EntityRelationshipRole>
			<RelatedTable>LedgerClosingTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerClosingTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>LedgerClosingTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MainAccount</Name>
					<Field>MainAccount</Field>
					<RelatedField>MainAccount</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Sheet</Name>
					<Field>Sheet</Field>
					<RelatedField>Sheet</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerClosingTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LedgerClosingTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetAccountRecId</Name>
					<SourceEDT>LedgerClosingTransRecId</SourceEDT>
					<Field>OffsetAccountRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerClosingTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>OffsetLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerClosingTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>