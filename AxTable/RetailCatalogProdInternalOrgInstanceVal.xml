<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCatalogProdInternalOrgInstanceVal</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailCatalogProdInternalOrgInstanceVal extends EcoResInstanceValue
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>clean</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the records related to the given catalog ID.
    /// </summary>
    /// <param name="_catalogRecId">
    /// Value of <c>CatalogRefRecId</c>.
    /// </param>
    public static void clean(CatalogRefRecId _catalogRecId)
    {
        RetailCatalogProdInternalOrgInstanceVal     catalogProdInternalOrgInstanceVal;
        EcoResInstanceValue                         ecoResInstanceValue;
        EcoResAttributeValue                        ecoResAttributeValue;
        EcoResValue                                 ecoResValue;
        CatalogProduct                              catalogProduct;

        ttsBegin;

        // delete from EcoResValue
        ecoResValue.skipDatabaseLog(true);
        ecoResValue.skipDataMethods(true);
        ecoResValue.skipEvents(true);
        ecoResValue.skipDeleteActions(true);
        ecoResValue.skipDeleteMethod(true);

        delete_from ecoResValue
            exists join ecoResAttributeValue
            where ecoResValue.RecId == ecoResAttributeValue.Value
            exists join catalogProdInternalOrgInstanceVal
            where ecoResAttributeValue.InstanceValue == catalogProdInternalOrgInstanceVal.RecId
            exists join catalogProduct
            where catalogProdInternalOrgInstanceVal.CatalogProd == catalogProduct.RecId
            && catalogProduct.Catalog == _catalogRecId;

        // delete from EcoResAttributeValue
        ecoResAttributeValue.skipDeleteActions(true);
        ecoResAttributeValue.skipDeleteMethod(true);
        ecoResAttributeValue.skipDatabaseLog(true);
        ecoResAttributeValue.skipDataMethods(true);
        ecoResAttributeValue.skipEvents(true);

        delete_from ecoResAttributeValue
            exists join catalogProdInternalOrgInstanceVal
            where ecoResAttributeValue.InstanceValue == catalogProdInternalOrgInstanceVal.RecId
            exists join catalogProduct
            where catalogProdInternalOrgInstanceVal.CatalogProd == catalogProduct.RecId
            && catalogProduct.Catalog == _catalogRecId;

        // delete records from RetailCatalogProdInternalOrgInstanceVal & EcoResInstanceValue
        ecoResInstanceValue.skipDeleteActions(true);
        ecoResInstanceValue.skipDeleteMethod(true);
        ecoResInstanceValue.skipDatabaseLog(true);
        ecoResInstanceValue.skipDataMethods(true);
        ecoResInstanceValue.skipEvents(true);

        catalogProdInternalOrgInstanceVal.skipDeleteActions(true);
        catalogProdInternalOrgInstanceVal.skipDeleteMethod(true);
        catalogProdInternalOrgInstanceVal.skipDatabaseLog(true);
        catalogProdInternalOrgInstanceVal.skipDataMethods(true);
        catalogProdInternalOrgInstanceVal.skipEvents(true);

        delete_from catalogProdInternalOrgInstanceVal
            exists join catalogProduct
            where catalogProdInternalOrgInstanceVal.CatalogProd == catalogProduct.RecId
            && catalogProduct.Catalog == _catalogRecId;

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCatalogProductInternalOrg</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the <c>RetailCatalogProdInternalOrgInstanceVal</c> table record with the supplied <c>CatalogProduct</c>
    ///    record ID and <c>RetailInternalOrganization</c> record ID.
    /// </summary>
    /// <param name="_catalogProductRecId">
    ///    The <c>CatalogProduct</c> record ID to use for the search.
    /// </param>
    /// <param name="_retailInternalOrganization">
    ///    The <c>RetailInternalOrganization</c> record ID to use for the search.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether the record must be selected for update; optional.
    /// </param>
    /// <returns>
    ///    A <c>RetailCatalogProdInternalOrgInstanceVal</c> table record, or an empty buffer.
    /// </returns>
    public static RetailCatalogProdInternalOrgInstanceVal findByCatalogProductInternalOrg(
        RefRecId _catalogProductRecId,
        RetailInternalOrgRefRecId _retailInternalOrganization,
        boolean _forupdate = false)
    {
        RetailCatalogProdInternalOrgInstanceVal retailCatalogProductChannelInstanceValue;

        if (_catalogProductRecId)
        {
            retailCatalogProductChannelInstanceValue.selectForUpdate(_forupdate);
            select firstonly retailCatalogProductChannelInstanceValue
                where retailCatalogProductChannelInstanceValue.CatalogProd == _catalogProductRecId
                   && retailCatalogProductChannelInstanceValue.InternalOrganization == _retailInternalOrganization;
        }

        return retailCatalogProductChannelInstanceValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateByCatalogProductInternalOrg</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a table record in <c>RetailCatalogProdInternalOrgInstanceVal</c>, if not exists
    /// </summary>
    /// <param name="_catalogProductRecId">
    /// The <c>CatalogProduct</c> record ID to use for the search.
    /// </param>
    /// <param name="_retailInternalOrganization">
    ///  The <c>RetailInternalOrganization</c> record ID to use for the search.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether the record must be selected for update; optional.
    /// </param>
    /// <returns>
    /// A <c>RetailCatalogProdInternalOrgInstanceVal</c> table record.
    /// </returns>
    /// <remarks>
    /// If exists returns the current or create otherwise.
    /// </remarks>
    public static RetailCatalogProdInternalOrgInstanceVal findOrCreateByCatalogProductInternalOrg(RefRecId _catalogProductRecId,
        RetailInternalOrgRefRecId _retailInternalOrganization,
        boolean _forupdate = false)
    {
        RetailCatalogProdInternalOrgInstanceVal retailCatalogProductChannelInstanceValue;

        retailCatalogProductChannelInstanceValue =
            RetailCatalogProdInternalOrgInstanceVal::findByCatalogProductInternalOrg(_catalogProductRecId, _retailInternalOrganization, _forupdate);

        if (!retailCatalogProductChannelInstanceValue)
        {
            retailCatalogProductChannelInstanceValue.InternalOrganization = _retailInternalOrganization;
            retailCatalogProductChannelInstanceValue.CatalogProd = _catalogProductRecId;
            retailCatalogProductChannelInstanceValue.insert();
        }

        return retailCatalogProductChannelInstanceValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@REX1015</DeveloperDocumentation>
	<Label>@REX1014</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>CatalogProd</TitleField1>
	<TitleField2>InternalOrganization</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Extends>EcoResInstanceValue</Extends>
	<Modules>Merchandising</Modules>
	<ReplacementKey>CatalogProdInternalOrgIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InternalOrganization</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CatalogProd</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InternalOrganization</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CatalogProd</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InternalOrganization</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInternalOrgRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CatalogProdInternalOrgIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CatalogProd</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InternalOrganization</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CatalogProd</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CatalogProduct</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InternalOrgCatalogProduct</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CatalogProd</Name>
					<Field>CatalogProd</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResInstanceValCatalogProdInternalOrg</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>EcoResInstanceValue</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailInternalOrganization</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailInternalOrganization</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InternalOrganization</Name>
					<Field>InternalOrganization</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>