<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailBarcodeMaskCharacter</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailBarcodeMaskCharacter extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isLetter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches a string for the first occurrence of one of the specified characters.
    /// </summary>
    /// <param name="_letter">
    /// The string value to be searched.
    /// </param>
    /// <returns>
    /// true if the string to be searched is found; otherwise, false.
    /// </returns>
    boolean isLetter(str _letter)
    {
        int j = 0;

        j = strFind(strupr(_letter), "@RET3927", 1, strLen(_letter));

        if (j == 0)
            return false;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </summary>
    /// <remarks>
    /// An error is thrown when you rename the record if the distribution type is other than
    /// <c>NoDistribution</c>.
    /// </remarks>
    public void renamePrimaryKey()
    {
        ;
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (fieldExt2Id(_fieldIdToCheck) == fieldnum(RetailBarcodeMaskCharacter, character))
        {
            if (!this.isLetter(this.Character))
            {
                error("@RET3926");
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailBarcodeMaskCharacter</c> table.
    /// </summary>
    /// <param name="_charType">
    /// The bar code mask character type.
    /// </param>
    /// <param name="update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailBarcodeMaskCharacter</c> table; otherwise, an empty record.
    /// </returns>
    static RetailBarcodeMaskCharacter find(RetailBarcodeMaskCharacterType   _charType, boolean update = false)
    {
        RetailBarcodeMaskCharacter  rboBarcodeMaskCharacter;
        ;

        rboBarcodeMaskCharacter.selectForUpdate(update);

        select firstonly rboBarcodeMaskCharacter
            where rboBarcodeMaskCharacter.CharacterType == _charType;

        return rboBarcodeMaskCharacter;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4040202</DeveloperDocumentation>
	<FormRef>RetailBarcodeMaskCharacter</FormRef>
	<Label>@RET3037</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>CharacterType</TitleField1>
	<TitleField2>Character</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>characterTypeIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>CommerceMiscellaneous</Modules>
	<PrimaryIndex>characterTypeIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CharacterType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Character</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Character</Name>
			<Label>@RET3038</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Character</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@RET3039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Comment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@RET3040</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CharacterType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Character</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailBarcodeMaskChar</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CharacterType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailBarcodeMaskCharacterType</ExtendedDataType>
			<EnumType>RetailBarcodeMaskCharacterTypeBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Comment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDescription</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>characterTypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CharacterType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>characterIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>Character</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>