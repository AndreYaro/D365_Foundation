<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetResLineAgreementLine_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetResLineAgreementLine_PSN extends common
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if a record exists for the passed in record id.
    /// </summary>
    /// <param name="_budgetResLineAgreementLineRecId">
    /// The record ID to be matched.
    /// </param>
    /// <returns>
    /// true if there is a matching record; otherwise, false.
    /// </returns>
    public static boolean checkExist(RefRecId _budgetResLineAgreementLineRecId)
    {
        boolean budgetResLineAgreementLineRecIdExists = true;
    
        if (!BudgetResLineAgreementLine_PSN::exist(_budgetResLineAgreementLineRecId))
        {
            budgetResLineAgreementLineRecIdExists = checkFailed(strFmt(BudgetResLineAgreementLine_PSN::txtNotExist(), _budgetResLineAgreementLineRecId));
        }
    
        return budgetResLineAgreementLineRecIdExists;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doesAgreementLineRefNoOrSpecificBdgtRes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified agreement line has one or more budget reservation lines
    /// associated with it and if so whether the specified budget reservation line is one of the
    /// associated budget reservation lines.
    /// </summary>
    /// <param name="_budgetReservationLineRecId">
    /// The record ID of a budget reservation line.
    /// </param>
    /// <param name="_agreementLineRecId">
    /// The record ID of an agreement line.
    /// </param>
    /// <returns>
    /// true if the agreement line does not have any budget reservation line associated to it or
    /// the budget reservation line is associated to the agreement line; otherwise, false.
    /// </returns>
    public static boolean doesAgreementLineRefNoOrSpecificBdgtRes(BudgetReservationLineRecId_PSN _budgetReservationLineRecId, AgreementLineRecId _agreementLineRecId)
    {
        BudgetResLineAgreementLine_PSN anyBudgetResLineForAgreementLine;
        BudgetResLineAgreementLine_PSN agreementLineMatchBudgetResLine;
    
        if (_budgetReservationLineRecId != 0 && _agreementLineRecId != 0)
        {
            select firstOnly RecId from anyBudgetResLineForAgreementLine
                where anyBudgetResLineForAgreementLine.AgreementLine == _agreementLineRecId
            outer join RecId from agreementLineMatchBudgetResLine
                where agreementLineMatchBudgetResLine.AgreementLine == anyBudgetResLineForAgreementLine.AgreementLine
                    && agreementLineMatchBudgetResLine.BudgetReservationLine == _budgetReservationLineRecId;
        }
    
        return (anyBudgetResLineForAgreementLine.RecId == 0 || agreementLineMatchBudgetResLine.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if a record exists for the passed in record id.
    /// </summary>
    /// <param name="_budgetResLineAgreementLineRecId">
    /// The record ID to be matched.
    /// </param>
    /// <returns>
    /// true if there is a matching record; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _budgetResLineAgreementLineRecId)
    {
        BudgetResLineAgreementLine_PSN budgetResLineAgreementLine;
    
        if (_budgetResLineAgreementLineRecId != 0)
        {
            select firstOnly RecId from budgetResLineAgreementLine
                where budgetResLineAgreementLine.RecId == _budgetResLineAgreementLineRecId;
        }
    
        return budgetResLineAgreementLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsBudgetResLineForAgreementLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether there are any budget reservations related to the passed in purchase agreement line table record ID.
    /// </summary>
    /// <param name="_agreementLine">
    /// The agreement line for which to find budget reservations.
    /// </param>
    /// <returns>
    /// true if there is at least one matching record; otherwise, false.
    /// </returns>
    public static boolean existsBudgetResLineForAgreementLine(AgreementLineRecId _agreementLine)
    {
        BudgetResLineAgreementLine_PSN budgetResLineAgreementLine;
    
        if (_agreementLine != 0)
        {
            select firstOnly RecId from budgetResLineAgreementLine
                where budgetResLineAgreementLine.AgreementLine == _agreementLine;
        }
    
        return budgetResLineAgreementLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsByBudgetResLineAgreementLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if a record exists for the passed in budget reservation line record ID and agreement line record ID.
    /// </summary>
    /// <param name="_budgetReservationLineRecId">
    /// The record ID of a budget reservation line.
    /// </param>
    /// <param name="_agreementLineRecId">
    /// The record ID of an agreement line.
    /// </param>
    /// <returns>
    /// true if there is a matching record; otherwise, false.
    /// </returns>
    public static boolean existsByBudgetResLineAgreementLine(BudgetReservationLineRecId_PSN _budgetReservationLineRecId, AgreementLineRecId _agreementLineRecId)
    {
        BudgetResLineAgreementLine_PSN budgetResLineAgreementLine;
    
        if (_budgetReservationLineRecId != 0 && _agreementLineRecId != 0)
        {
            select firstOnly RecId from budgetResLineAgreementLine
                where budgetResLineAgreementLine.BudgetReservationLine == _budgetReservationLineRecId
                    && budgetResLineAgreementLine.AgreementLine == _agreementLineRecId;
        }
    
        return budgetResLineAgreementLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record having the passed in record ID.
    /// </summary>
    /// <param name="_budgetResLineAgreementLineRecId">
    /// The record ID to be matched.
    /// </param>
    /// <returns>
    /// The record matching the passed in record ID.
    /// </returns>
    public static BudgetResLineAgreementLine_PSN find(RefRecId _budgetResLineAgreementLineRecId)
    {
        BudgetResLineAgreementLine_PSN budgetResLineAgreementLine;
    
        if (_budgetResLineAgreementLineRecId != 0)
        {
            select firstOnly budgetResLineAgreementLine
                where budgetResLineAgreementLine.RecId == _budgetResLineAgreementLineRecId;
        }
    
        return budgetResLineAgreementLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
	<DeveloperDocumentation>@Budgeting_BudgetReservationPS:BudgetResLineAgreementLineTable</DeveloperDocumentation>
	<Label>@Budgeting_BudgetReservationPS:BudgetReservationLineReferences</Label>
	<SingularLabel>@Budgeting_BudgetReservationPS:BudgetReservationLineReferences</SingularLabel>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>AgreementLine</TitleField1>
	<TitleField2>BudgetReservationLine</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>Budget</Modules>
	<ReplacementKey>BudgetResLineAgreementLineIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetReservationLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetReservationLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetReservationLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BudgetResLineAgreementLine_PSN</Name>
			<Label>@Budgeting_BudgetReservationPS:BudgetReservationLineReferences</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetReservationLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AgreementLine</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AgreementLineRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetReservationLine</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetReservationLineRecId_PSN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BudgetResLineAgreementLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AgreementLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetReservationLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AgreementLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>AgreementLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AgreementLine</Name>
					<Field>AgreementLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetReservationLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BudgetReservationLine_PSN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetReservationLine</Name>
					<Field>BudgetReservationLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>