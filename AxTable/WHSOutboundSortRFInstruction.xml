<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSOutboundSortRFInstruction</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSOutboundSortRFInstruction extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createNewInstructionsFromContainer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create the sort RF Instructions by container.
    /// </summary>
    /// <param name="_containerId">
    /// The container Id for the container.
    /// </param>
    /// <param name="_shipmentId">
    /// The shipment Id the container is tied.
    /// </param>
    [Hookable(false)]
    internal static void createNewInstructionsFromContainer(
        WHSContainerId _containerId,
        WHSShipmentId  _shipmentId)
    {
        WHSContainerLine                containerLine;
        WHSOutboundSortRFInstruction    sortRFInstruction;
    
        ttsbegin;
    
        insert_recordset sortRFInstruction (SortIdentifier, LoadLineRecId, ItemId, InventDimId, ProductQuantity, UnitSymbol)
            select ContainerId, LoadLine, ItemId, InventDimId, Qty, UnitId from containerLine
                where containerLine.ContainerId == _containerId
                &&    containerLine.ShipmentId  == _shipmentId;
    
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNewFromWork</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create new sort rf instructions based on the work ID provided.
    /// </summary>
    /// <param name="_workId">
    /// The work ID used to create the instructions.
    /// </param>
    [Hookable(false)]
    internal static void createNewFromWork(WHSWorkId _workId)
    {
        ttsbegin;

        WHSOutboundSortRFInstruction sortRFInstruction;
        WHSWorkLine                  workLine;
    
        insert_recordset sortRFInstruction (SortIdentifier, LoadLineRecId, ItemId, InventDimId, ProductQuantity, UnitSymbol)
            select ContainerId, LoadLineRefRecId, ItemId, InventDimId, QtyWork, UnitId from workLine
                where workLine.WorkId       == _workId
                &&    workLine.WorkType     == WHSWorkType::Pick
                &&    workLine.QtyWork      != 0
                &&    workLine.ContainerId  != '';
    
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWaveDemandSortRFInstructionForItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the first sort instruction record for a given item.
    /// </summary>
    /// <param name = "_sortIdentifier">The sort position identifier.</param>
    /// <param name = "_itemId">The item being sorted.</param>
    /// <param name = "_inventDimId">The inventory dimensions being sorted.</param>
    /// <returns>A sort instruction record.</returns>
    [Hookable(false)]
    public static WHSOutboundSortRFInstruction getWaveDemandSortRFInstructionForItem(
        WHSOutboundSortIdentifier   _sortIdentifier,
        ItemId                      _itemId,
        InventDimId                 _inventDimId)
    {
        InventDim inventDim = InventDim::find(_inventDimId);

        inventDim.wMSLocationId = '';
        inventDim.LicensePlateId = '';
        inventDim = InventDim::findOrCreate(inventDim);

        WHSOutboundSortRFInstruction sortRFInstruction;

        select firstOnly sortRFInstruction
            where sortRFInstruction.SortIdentifier  == _sortIdentifier
            &&    sortRFInstruction.ItemId          == _itemId
            &&    sortRFInstruction.InventDimId     == inventDim.inventDimId;

        return sortRFInstruction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWaveDemandSortRFInstructionForPositionAndItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the first sort instruction record for a given position and item.
    /// </summary>
    /// <param name = "_sortIdentifier">The sort transaction identifier.</param>
    /// <param name = "_sortPositionId">The sort position.</param>
    /// <param name = "_itemId">The item being sorted.</param>
    /// <param name = "_inventDimId">The inventory dimensions being sorted.</param>
    /// <returns>The sort instruction record.</returns>
    [Hookable(false)]
    public static WHSOutboundSortRFInstruction getWaveDemandSortRFInstructionForPositionAndItem(
        WHSOutboundSortIdentifier       _sortIdentifier,
        WHSOutboundSortPositionId       _sortPositionId,
        ItemId                          _itemId,
        InventDimId                     _inventDimId)
    {
        InventDim                       inventDim = InventDim::find(_inventDimId);

        inventDim.wMSLocationId = '';
        inventDim.LicensePlateId = '';
        inventDim = InventDim::findOrCreate(inventDim);

        WHSOutboundSortRFInstruction    sortRFInstruction;
        WHSOutboundSortPosition         sortPosition;

        select firstOnly sortRFInstruction
            where sortRFInstruction.SortIdentifier  == _sortIdentifier
            &&    sortRFInstruction.ItemId          == _itemId
            &&    sortRFInstruction.InventDimId     == inventDim.inventDimId
            exists join sortPosition
                where sortPosition.RecId                == sortRFInstruction.OutboundSortPositionRecId
                &&    sortPosition.SortPositionStatus   == WHSOutboundSortPositionStatus::Assigned
                &&    sortPosition.SortPositionId       == _sortPositionId;

        return sortRFInstruction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    public static WHSOutboundSortRFInstruction findByRecId(
        RecId   _recId,
        boolean _forupdate = false)
    {
        WHSOutboundSortRFInstruction sortRFInstruction;
    
        if (_recId)
        {
            sortRFInstruction.selectForUpdate(_forUpdate);
    
            select firstOnly sortRFInstruction
                where sortRFInstruction.RecId == _recId;
        }
    
        return sortRFInstruction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WHSOutboundSortRFInstructionDevDocumentation</DeveloperDocumentation>
	<Label>@WAX:WHSOutboundSortRFInstructionLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>InventDimId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>SortPositionDimItemIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OutboundSortPositionRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkLineRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadLineRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitSymbol</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductQuantity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OutboundSortPositionRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSOutboundSortPositionRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkLineRecId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkLineRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LoadLineRecId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLoadLineRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitSymbol</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSUOM</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ProductQuantity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProductQuantity</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SortIdentifier</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLicensePlateId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SortPositionDimItemIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OutboundSortPositionRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SortIdentifierDimItemIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SortIdentifier</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LoadLineRecIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LoadLineRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WorkLineRecIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkLineRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWorkLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSWorkLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkLineRecId</Name>
					<Field>WorkLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSLoadLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>CascadeRestricted</OnDelete>
			<RelatedTable>WHSLoadLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoadLineRecId</Name>
					<Field>LoadLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SortPosition</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSOutboundSortPosition</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OutboundSortPositionRecId</Name>
					<Field>OutboundSortPositionRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSLicensePlate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSLicensePlate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortIdentifier</Name>
					<Field>SortIdentifier</Field>
					<RelatedField>LicensePlateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>