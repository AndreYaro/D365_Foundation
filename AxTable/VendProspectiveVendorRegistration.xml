<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendProspectiveVendorRegistration</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendProspectiveVendorRegistration extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record of <c>VendProspectiveVendorRegistration</c> table for the given record ID.
    /// </summary>
    /// <param name="_prospectiveVendorRegistrationRecId">
    ///    The <c>RecId</c> of the <c>VendProspectiveVendorRegistration</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update.
    /// </param>
    /// <returns>
    ///    A <c>VendProspectiveVendorRegistration</c> table buffer.
    /// </returns>
    public static VendProspectiveVendorRegistration find(VendProspectiveVendorRegistrationRecId   _prospectiveVendorRegistrationRecId,
                                                         boolean _forUpdate = false)
    { 
        VendProspectiveVendorRegistration prospectiveVendorRegistration;

        if (_prospectiveVendorRegistrationRecId)
        {
            prospectiveVendorRegistration.selectForUpdate(_forUpdate);

            select firstOnly prospectiveVendorRegistration
                where prospectiveVendorRegistration.RecId  == _prospectiveVendorRegistrationRecId;
        }

        return prospectiveVendorRegistration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRegistrationRequest</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record of <c>VendProspectiveVendorRegistration</c> table for the given record ID.
    /// </summary>
    /// <param name="_prospectiveVendorRegistrationRequestRecId">
    ///    The <c>VendProspectiveVendorRegistrationRequestRecId</c> of the associated <c>VendProspectiveVendorRegistrationRequest</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update.
    /// </param>
    /// <returns>
    ///    A <c>VendProspectiveVendorRegistration</c> table buffer.
    /// </returns>
    public static VendProspectiveVendorRegistration findByRegistrationRequest(VendProspectiveVendorRegistrationRequestRecId  _prospectiveVendorRegistrationRequestRecId,
                                                                              boolean _forUpdate = false)
    {
        if (!_prospectiveVendorRegistrationRequestRecId)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        VendProspectiveVendorRegistration prospectiveVendorRegistration;

        prospectiveVendorRegistration.selectForUpdate(_forUpdate);

        select firstOnly prospectiveVendorRegistration
            where prospectiveVendorRegistration.RegistrationRequest  == _prospectiveVendorRegistrationRequestRecId;

        return prospectiveVendorRegistration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAssociatedParties</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the related party records for the Vendor and the Contact along with the relationships needed.
    /// Also creates the addressbook association if needed.
    /// </summary>
    /// <param name = "_request">The registration request record to be used</param>
    public void initAssociatedParties(VendProspectiveVendorRegistrationRequest _request)
    {
        if (!_request)
        {
            return;
        }

        if (!this.VendorParty)
        {
            // Vendor party generation
            DirPartyType partyType;
            if (this.OrganizationType == DirPartyBaseType::Person)
            {
                partyType = DirPartyType::Person;
            }
            else
            {
                partyType = DirPartyType::Organization;
            }
            
            this.VendorParty = DirPartyTable::createNew(partyType, _request.CompanyName).RecId;
        }

        if (!this.ContactParty)
        {            
            this.ContactParty = this.createPartyTable(DirPartyType::Person,
                strFmt('%1 %2 %3', _request.FirstName, _request.MiddleName, _request.LastName),_request).RecId;
            this.associateDirPersonUserWithContactParty(this.ContactParty);  
        }

        this.createDirPartyRelationship(this.VendorParty, this.ContactParty);
        this.associateAddressBookToParties(this.VendorParty, this.ContactParty);        
    }

]]></Source>
			</Method>
			<Method>
				<Name>associateDirPersonUserWithContactParty</Name>
				<Source><![CDATA[
    private void associateDirPersonUserWithContactParty(DirPersonRecId _contactPartyRecId)
    {
        DirPersonUser::createDirPersonUser(curUserId(), _contactPartyRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>associateAddressBookToParties</Name>
				<Source><![CDATA[
    private void associateAddressBookToParties(DirPartyRecId _vendorPartyRecId, DirPersonRecId _contactPartyRecId)
    {
        var prospectiveVendorAddressBook = VendRequestManagementParameters::find().ProspectiveVendorAddressBook;

        if (prospectiveVendorAddressBook != 0)
        {
            ttsbegin;
            DirAddressBookParty dirAddressBookParty = DirAddressBookParty::find(prospectiveVendorAddressBook, _contactPartyRecId);
            if (!dirAddressBookParty)
            {                
                dirAddressBookParty.AddressBook = prospectiveVendorAddressBook;
                dirAddressBookParty.Party = _contactPartyRecId;
                dirAddressBookParty.insert();                
            }

            dirAddressBookParty = DirAddressBookParty::find(prospectiveVendorAddressBook, _vendorPartyRecId);
            if (!dirAddressBookParty)
            {
                dirAddressBookParty.AddressBook = prospectiveVendorAddressBook;
                dirAddressBookParty.Party = _vendorPartyRecId;
                dirAddressBookParty.insert();
            }
            ttscommit;
        }       
    }

]]></Source>
			</Method>
			<Method>
				<Name>createDirPartyRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Associates a contact person to the vendor for a request.
    /// </summary>
    /// <param name = "_vendorParty">The vendor party record id to be used</param>
    /// <param name = "_contactParty">The contact party record id to be used</param>
    private void createDirPartyRelationship(DirPartyRecId _vendorParty, DirPartyRecId _contactParty)
    {        
        DirRelationshipTypeTable typeTable = DirRelationshipTypeTable::findBySystemType(DirSystemRelationshipType::ProspectiveVendorContact);
        if(typeTable.RecId == 0)
        {
            ttsbegin;
            typeTable.clear();
            typeTable.RelationshipTypeId    = enum2str(DirSystemRelationshipType::ProspectiveVendorContact);
            typeTable.SystemType            = DirSystemRelationshipType::ProspectiveVendorContact;
            typeTable.Description           = typeTable.RelationshipTypeId;
            typeTable.ChildPartyType        = DirPartyType::Person;
            typeTable.ParentPartyType       = DirPartyType::Organization;
            typeTable.insert();
            ttscommit;
        }

        if(!DirPartyRelationship::exist(typeTable.RelationshipTypeId, _vendorParty, _contactParty))
        {
            DirPartyRelationship relation;
            ttsbegin;
            relation.ParentParty        = _vendorParty;
            relation.ChildParty         = _contactParty;
            relation.RelationshipTypeId = typeTable.RelationshipTypeId;
            relation.ValidFrom          = DateTimeUtil::utcNow();
            relation.ValidTo            = DateTimeUtil::maxValue();
            relation.insert();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearConfigurableFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears all of the configurable fields for the record.
    /// </summary>
    public void clearConfigurableFields()
    {
        VendProspectiveVendorRegistration vendProspectiveVendorRegistration;

        ttsbegin;
        update_recordset vendProspectiveVendorRegistration
            setting ContactPhone = '',
                    Email = '',
                    Phone = '',
                    Telefax = '',
                    Website = '',
                    AcceptChecked = 0,
                    CompanyIdSiret = '',
                    CompanyNAFCode = 0,
                    Currency = '',
                    DBA = '',
                    DoingBusinessCountryRegion = '',
                    Federal1099Number = '',
                    Federal1099NumberType = 0,
                    FemaleOwned = 0,
                    FiscalCode = '',
                    ForeignOwnership = 0,
                    LineOfBusinessId = '',
                    LocallyOwned = 0,
                    MinorityOwned = 0,
                    NumberOfEmployees = 0,
                    OrganizationIdentifier = '',
                    OrganizationNumber = '',
                    PaymTerm = '',
                    SmallBusiness = 0,
                    Tax1099Fields = 0,
                    Tax1099NameChoice = 0,
                    TaxState = '',
                    TaxStateIdentifier = '',
                    TaxStateIdentifierType = 0,
                    VatNumber = ''
                where vendProspectiveVendorRegistration.RecId == this.RecId;
        this.reread();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createContactInfoElectronicAddressRecords</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the electronic address's for the contact information.
    /// </summary>
    /// <param name = "_contactEmail">The email address for the contact person, passed as it is not saved.</param>
    public void createContactInfoElectronicAddressRecords(Email _contactEmail)
    {
        this.createElectronicAddressRecord(this.VendorParty, LogisticsElectronicAddressMethodType::Email, this.Email);
        this.createElectronicAddressRecord(this.VendorParty, LogisticsElectronicAddressMethodType::Phone, this.Phone);
        this.createElectronicAddressRecord(this.VendorParty, LogisticsElectronicAddressMethodType::Fax, this.Telefax);
        this.createElectronicAddressRecord(this.VendorParty, LogisticsElectronicAddressMethodType::URL, this.Website);
        this.createElectronicAddressRecord(this.Contactparty, LogisticsElectronicAddressMethodType::Phone, this.ContactPhone);
        this.createElectronicAddressRecord(this.ContactParty, LogisticsElectronicAddressMethodType::Email, _contactEmail);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createElectronicAddressRecord</Name>
				<Source><![CDATA[
    private void createElectronicAddressRecord(
        DirPartyRecId                         _dirPartyRecId,
        LogisticsElectronicAddressMethodType  _type,
        LogisticsElectronicAddressLocator     _locator)
    {
        if (_locator)
        {
            LogisticsElectronicAddress::createElectronicAddressFromUnsolicited(_dirPartyRecId, _type, _locator, NoYes::Yes);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProspectiveVendorRegistrationIsCompleteStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the IsCompleted property on the <c>VendProspectiveVendorRegistration</c> record.
    /// </summary>
    /// <param name = "_isComplete">
    ///    A Boolean value that indicates whether to set the registration as complete or incomplete.
    /// </param>
    public void setProspectiveVendorRegistrationIsCompleteStatus(boolean _isComplete)
    {
        VendProspectiveVendorRegistration prospectiveVendorRegistration;

        ttsbegin;

        update_recordset prospectiveVendorRegistration
            setting IsCompleted = _isComplete
                where prospectiveVendorRegistration.RecId == this.RecId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the Name property on the <c>VendProspectiveVendorRegistration</c> record.
    /// </summary>
    /// <param name = "_name">
    ///    The <c>str</c> name to be set.
    /// </param>
    public void setName(DirPartyName _name)
    {
        VendProspectiveVendorRegistration prospectiveVendorRegistration;

        ttsbegin;

        update_recordset prospectiveVendorRegistration
            setting Name = _name
                where prospectiveVendorRegistration.RecId == this.RecId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDoingBusinessCountryRegion</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the DoingBusinessCountryRegion property on the <c>VendProspectiveVendorRegistration</c> record.
    /// </summary>
    public void setDoingBusinessCountryRegion(LogisticsAddressCountryRegionId _countryRegion)
    {
        VendProspectiveVendorRegistration prospectiveVendorRegistration;

        ttsbegin;

        update_recordset prospectiveVendorRegistration
            setting DoingBusinessCountryRegion = _countryRegion
                where prospectiveVendorRegistration.RecId == this.RecId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFrom</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the <c>VendProspectiveVendorRegistration</c> record from a related record.
    /// </summary>
    /// <param name="_relatedRecord">
    ///    The related record to initialize the prospective vendor registration from.
    /// </param>
    public void initFrom(Common _relatedRecord)
    {
        VendProspectiveVendorRegistrationRequest prospectiveVendorRegistrationRequest = _relatedRecord as VendProspectiveVendorRegistrationRequest;

        if (!prospectiveVendorRegistrationRequest.RecId)
        {
            throw error(Error::missingRecord(tableStr(VendProspectiveVendorRegistrationRequest)));
        }

        this.initValue();
        this.RegistrationRequest = prospectiveVendorRegistrationRequest.RecId;
        this.OrganizationType = prospectiveVendorRegistrationRequest.OrganizationType;
        this.OrganizationNumber = prospectiveVendorRegistrationRequest.OrganizationNumber;
        this.initAssociatedParties(prospectiveVendorRegistrationRequest);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prospectiveVendorRegistrationRequest</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the related <c>VendProspectiveVendorRegistrationRequest</c> table record.
    /// </summary>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update.
    /// </param>
    /// <returns>
    ///    A record in the <c>VendProspectiveVendorRegistrationRequest</c> table; otherwise, throw error.
    /// </returns>
    public VendProspectiveVendorRegistrationRequest prospectiveVendorRegistrationRequest(boolean _forUpdate = false)
    {
        VendProspectiveVendorRegistrationRequest prospectiveVendorRegistrationRequest;

        if (this.RegistrationRequest)
        {
            prospectiveVendorRegistrationRequest = VendProspectiveVendorRegistrationRequest::find(this.RegistrationRequest, _forUpdate);
        }

        if (!prospectiveVendorRegistrationRequest.RecId)
        {
            throw error(Error::missingRecord(tableStr(VendProspectiveVendorRegistrationRequest)));
        }
    
        return prospectiveVendorRegistrationRequest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
       return super() && this.isValidProspectiveVendorRegistration();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidProspectiveVendorRegistration</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates if the prospective vendor registration is valid. 
    /// </summary>
    /// <returns> 
    ///    true if the registration is valid, otherwise false.
    /// </returns>
    /// <remarks>
    ///    If the prospective vendor registration record is created internally, there can be multiple requests with no associated
    //     registration requests refence (RefRecId = 0). In the case the registration request is initiated externally
    //     it should not be possible to have the same reference on multiple records.
    /// </remarks>
    private boolean isValidProspectiveVendorRegistration()
    {
        return (this.RegistrationRequest
                   && this.RegistrationRequest != this.orig().RegistrationRequest
                   && VendProspectiveVendorRegistration::findByRegistrationRequest(this.RegistrationRequest)) ? checkFailed("@SCM:DuplicateRegistrationRequestValueProvided") : true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRegistrationIsCompleteStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the IsCompleted property on the <c>VendProspectiveVendorRegistration</c> record.
    /// </summary>
    /// <param name = "_isComplete"></param>
    ///    A Boolean value that indicates whether to set the status to true or false.
    /// </param>
    public void setRegistrationIsCompleteStatus(boolean _isComplete)
    {
        VendProspectiveVendorRegistration prospectiveVendorRegistration;

        ttsbegin;

        update_recordset prospectiveVendorRegistration
            setting IsCompleted = _isComplete
                where prospectiveVendorRegistration.RecId == this.RecId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret = super();

        if (ret && this.IsCompleted)
        {
            VendVendorRequestNewVendor vendVendorRequestNewVendor = VendVendorRequestNewVendor::findByProspectiveVendorRegistration(this.RecId);
            
            if (vendVendorRequestNewVendor)
            {
                if (!VendVendorRequestNewVendorManager::construct().allowDelete(vendVendorRequestNewVendor))
                {
                    return checkFailed(strFmt("@SCM:ExternalVendorRegistrationRequestDeleteWarning", vendVendorRequestNewVendor.VendorName, strLwr(enum2Str(vendVendorRequestNewVendor.RequestStatus))));
                }
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkForCompleteness</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Check completeness of the <c>VendProspectiveVendorRegistration</c> record.
    /// </summary>
    /// <returns>
    ///   true if registration pass completeness check; otherwise, false
    /// </returns>
    public boolean checkForCompleteness()
    {
        VendRequestProfile vendRequestProfile = VendRequestProfileHelper::findVendRequestProfile(VendFieldMetadataGroupType::VendProspectiveVendorRegistration, this.DoingBusinessCountryRegion);

        VendProspectiveVendorQuestionnaire::updateQuestionnairesForProspectiveVendorRegistration(this.RecId, vendRequestProfile.RecId);

        return VendProspectiveVendorQuestionnaire::checkAllQuestionnairesCompletedForProspectiveVendorRegistration(this.RecId) 
            && VendRequestProfileHelper::checkMandatoryFields(vendRequestProfile.MetadataGroup, this, !this.IsCompleted);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        // Delete the ContactParty and VendParty unless a vendor has been created.
        if (this.ContactParty || this.VendorParty)
        {
            VendVendorRequestNewVendor vendVendorRequestNewVendor = VendVendorRequestNewVendor::findByProspectiveVendorRegistration(this.RecId);

            if (!vendVendorRequestNewVendor || vendVendorRequestNewVendor.RequestStatus != VendVendorRequestStatus::Approved)
            {
                if (this.ContactParty)
                {
                    this.deleteLogisticsLocation(this.ContactParty);
                    DirPerson dirPerson = DirPerson::find(this.ContactParty, true);
                    dirPerson.delete();
                }

                if (this.VendorParty)
                {
                    this.deleteLogisticsLocation(this.VendorParty);
                    DirPartyTable dirPartyTable = DirPartyTable::findRec(this.VendorParty, true);
                    dirPartyTable.delete();
                }
            }
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteLogisticsLocation</Name>
				<Source><![CDATA[
    private void deleteLogisticsLocation(DirPartyRecId _recId)
    {
        if (_recId)
        {
            LogisticsLocation logisticsLocation;
            DirPartyLocation dirPartyLocation;
            delete_from logisticsLocation
                exists join dirPartyLocation
                    where logisticsLocation.RecId == dirPartyLocation.Location
                        && dirPartyLocation.Party == _recId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPartyTable</Name>
				<Source><![CDATA[
    private DirPartyTable createPartyTable(DirPartyType _partyType, DirPartyName _name, VendProspectiveVendorRegistrationRequest _request)
    {
        DirPartyTable   partyTable;
        DirPerson       person;
        DirPersonName   personName;
        DirOrganization organization;
        CompanyInfo     companyInfo;

       person.initValue();
       partyTable = person as DirPartyTable;

        partyTable.initValue();
        partyTable.PartyNumber = "";
        partyTable.Name = _name;
        partyTable.insert();

        if (_partyType == DirPartyType::Person)
        {
            personName.initValue();
            personName.FirstName  = _request.FirstName;
            personName.MiddleName = _request.MiddleName;
            personName.LastName   = _request.LastName;
            personName.Person = person.RecId;
            personName.ValidFrom = DateTimeUtil::utcNow();
            personName.ValidTo = DateTimeUtil::maxValue();

            if (personName.validateWrite())
            {
                personName.insert();
            }
        }

        return partyTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VendorPortal</ConfigurationKey>
	<Label>@SCM:ProspectiveVendorRegistration</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>OrganizationNumber</TitleField1>
	<TitleField2>OrganizationType</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BusinessProfile</Name>
			<Label>@SYS133422</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrganizationNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VatNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Tax1099Fields</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberOfEmployees</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrganizationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Country</Name>
			<Label>@SYS120586</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DoingBusinessCountryRegion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS35583</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Information</Name>
			<Label>@SYS131313</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DBA</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Website</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Phone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Telefax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Email</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrganizationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OwnershipProfile</Name>
			<Label>@SYS133402</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MinorityOwned</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FemaleOwned</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SmallBusiness</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocallyOwned</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TermsAndConditions</Name>
			<Label>@SYS133403</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AcceptChecked</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VendorInformation</Name>
			<Label>@SYS137195</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendorParty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymTerm</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ContactInformation</Name>
			<Label>@SYS304354</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContactParty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AcceptChecked</Name>
			<Label>@SYS133417</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DBA</Name>
			<ExtendedDataType>DBA</ExtendedDataType>
			<Label>@SYS133420</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DoingBusinessCountryRegion</Name>
			<ExtendedDataType>LogisticsAddressCountryRegionId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Email</Name>
			<ExtendedDataType>Email</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FemaleOwned</Name>
			<ExtendedDataType>FemaleOwner</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LocallyOwned</Name>
			<ExtendedDataType>VendLocallyOwned</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MinorityOwned</Name>
			<ExtendedDataType>MinorityOwner</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumberOfEmployees</Name>
			<ExtendedDataType>DirOrganizationNumberOfEmployees</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrganizationNumber</Name>
			<ExtendedDataType>DirOrganizationNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OrganizationType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@SYS134133</Label>
			<Mandatory>Yes</Mandatory>
			<EnumType>DirPartyBaseType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Phone</Name>
			<ExtendedDataType>Phone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SmallBusiness</Name>
			<ExtendedDataType>VendSmallBusiness</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Tax1099Fields</Name>
			<ExtendedDataType>Tax1099FieldsRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Telefax</Name>
			<ExtendedDataType>TeleFax</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VatNumber</Name>
			<ExtendedDataType>VATNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Website</Name>
			<ExtendedDataType>WebSiteURL</ExtendedDataType>
			<Label>@SYS103067</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyIdSiret</Name>
			<ExtendedDataType>CompanyIdSiret</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CompanyNAFCode</Name>
			<ExtendedDataType>CompanyNAFRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Currency</Name>
			<ExtendedDataType>VendCurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Federal1099Number</Name>
			<AosAuthorization>Yes</AosAuthorization>
			<ExtendedDataType>Tax1099RegNum</ExtendedDataType>
			<Label>@SCM:ExternalVendorRegistrationFederalTaxID</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Federal1099NumberType</Name>
			<Label>@SCM:ExternalVendorRegistrationFederalTaxIDType</Label>
			<EnumType>TaxIDType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FiscalCode</Name>
			<ExtendedDataType>FiscalCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ForeignOwnership</Name>
			<ExtendedDataType>Tax1099ForeignEntityIndicator</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LineOfBusinessId</Name>
			<ExtendedDataType>LineOfBusinessId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrganizationIdentifier</Name>
			<ExtendedDataType>OrgId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymTerm</Name>
			<ExtendedDataType>VendPaymTermId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Tax1099NameChoice</Name>
			<EnumType>Tax1099NameChoice</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxState</Name>
			<ExtendedDataType>LogisticsAddressStateId</ExtendedDataType>
			<Label>@SCM:ExternalVendorRegistrationTaxState</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxStateIdentifier</Name>
			<AosAuthorization>Yes</AosAuthorization>
			<ExtendedDataType>Tax1099StateTaxID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxStateIdentifierType</Name>
			<Label>@SCM:ExternalVendorRegistrationStateTaxIDType</Label>
			<EnumType>TaxIDType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SameAsCompany</Name>
			<Label>@SYS133433</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCompleted</Name>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RegistrationRequest</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>VendProspectiveVendorRegistrationRequestRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendorParty</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>VendProspectiveVendorPartyRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorGroup</Name>
			<ExtendedDataType>VendGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ContactParty</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>VendProspectiveVendorContactPartyRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPhone</Name>
			<ExtendedDataType>Phone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<ExtendedDataType>DirPartyName</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RegistrationRequestIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RegistrationRequest</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Tax1099Fields</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Tax1099Fields</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Tax1099Fields</Name>
					<Field>Tax1099Fields</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CompanyNAFCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CompanyNAFCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CompanyNAFCode</Name>
					<Field>CompanyNAFCode</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Currency</Name>
					<SourceEDT>VendCurrencyCode</SourceEDT>
					<Field>Currency</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LineOfBusiness</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LineOfBusiness</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LineOfBusinessId</Name>
					<SourceEDT>LineOfBusinessId</SourceEDT>
					<Field>LineOfBusinessId</Field>
					<RelatedField>LineOfBusinessId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PaymTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymTerm</Name>
					<SourceEDT>VendPaymTermId</SourceEDT>
					<Field>PaymTerm</Field>
					<RelatedField>PaymTermId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TermIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProspectiveVendorRegistrationRequest</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>VendProspectiveVendorRegistrationRequest</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RegistrationRequest</Name>
					<Field>RegistrationRequest</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DoingBusinessCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DoingBusinessCountryRegion</Name>
					<Field>DoingBusinessCountryRegion</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ContactParty</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>DirPerson</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContactParty</Name>
					<Field>ContactParty</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendParty</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorParty</Name>
					<Field>VendorParty</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>