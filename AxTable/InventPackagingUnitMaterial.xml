<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventPackagingUnitMaterial</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventPackagingUnitMaterial extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkDuplicate_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method checks for duplicates in the <c>InventPackagingUnitMaterial</c> table on fields Packing material code and Packing class.
    /// </summary>
    /// <returns>
    /// True if no duplicates are found; otherwise, false.
    /// </returns>
    public boolean checkDuplicate_W()
    {
        boolean ret = true;
        InventPackagingUnitMaterial packagingUnitMaterial;

        select firstonly RecId from packagingUnitMaterial
            where packagingUnitMaterial.RecId               != this.RecId
                && packagingUnitMaterial.PackingUnitRecID   == this.PackingUnitRecID
                && packagingUnitMaterial.PackMaterialCode   == this.PackMaterialCode
                && packagingUnitMaterial.PackagingClassId_W == this.PackagingClassId_W;

        if (packagingUnitMaterial.RecId)
        {
            ret = checkFailed(strFmt("@PackingMaterial:InventPackingMaterialExist", this.PackMaterialCode, this.PackagingClassId_W));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (InventParameters::isPackingMaterialTariffCatEnabled_W())
        {
            if (! this.PackagingClassId_W)
            {
                ret = checkFailed(strFmt("@SYS84378", "@PackingMaterial:InventPackingClass"));
            }

            ret = this.checkDuplicate_W() && ret;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static public InventPackagingUnitMaterial find(
        RefRecId                     _packingUnitRecID,
        InventPackingMaterialCode    _packMaterialCode,
        boolean                     _forUpdate = false)
    {
        InventPackagingUnitMaterial inventPackagingUnitMaterial;

        if (_packingUnitRecID && _packMaterialCode)
        {
            inventPackagingUnitMaterial.selectForUpdate(_forUpdate);

            select firstonly inventPackagingUnitMaterial
                   where inventPackagingUnitMaterial.PackingUnitRecID == _packingUnitRecID &&
                         inventPackagingUnitMaterial.PackMaterialCode == _packMaterialCode;
        }
        return inventPackagingUnitMaterial;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findClass_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>InventPackagingUnitMaterial</c> table
    /// </summary>
    /// <param name="_packingUnitRecID">
    /// The record identifier of the master <c>InventPackagingUnit</c> table
    /// </param>
    /// <param name="_packMaterialCode">
    /// The packing material code.
    /// </param>
    /// <param name="_packagingClassId">
    /// The packing class identifier.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>InventPackagingUnitMaterial</c> table; otherwise, an empty record.
    /// </returns>
    public static InventPackagingUnitMaterial findClass_W(
        RefRecId                    _packingUnitRecID,
        InventPackingMaterialCode   _packMaterialCode,
        ItemPackagingClassId_W      _packagingClassId,
        boolean                     _forUpdate = false)
    {
        InventPackagingUnitMaterial inventPackagingUnitMaterial;

        inventPackagingUnitMaterial.selectForUpdate(_forUpdate);

        if (_packingUnitRecID && _packMaterialCode)
        {
            if (_packagingClassId)
            {
                select firstonly inventPackagingUnitMaterial
                    where inventPackagingUnitMaterial.PackingUnitRecID   == _packingUnitRecID &&
                          inventPackagingUnitMaterial.PackMaterialCode   == _packMaterialCode &&
                          inventPackagingUnitMaterial.PackagingClassId_W == _packagingClassId;
            }
            else
            {
                if (_forUpdate)
                {
                    select firstonly inventPackagingUnitMaterial
                        where inventPackagingUnitMaterial.PackingUnitRecID   == _packingUnitRecID &&
                              inventPackagingUnitMaterial.PackMaterialCode   == _packMaterialCode;
                }
                else
                {
                    select sum(PackingUnitWeight) from inventPackagingUnitMaterial
                        group by PackingUnitRecID, PackMaterialCode
                        where inventPackagingUnitMaterial.PackingUnitRecID   == _packingUnitRecID &&
                              inventPackagingUnitMaterial.PackMaterialCode   == _packMaterialCode;
                }
            }
        }

        return inventPackagingUnitMaterial;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventPackaging</ConfigurationKey>
	<DeveloperDocumentation>@SYS123992</DeveloperDocumentation>
	<Label>@SYS72995</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>PackMaterialCode</TitleField1>
	<TitleField2>PackingUnitWeight</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>PackingUnitRecIdIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>PackingUnitRecIdIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PackingUnitRecID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackMaterialCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingUnitWeight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Misc</Name>
			<Label>@SYS73543</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PackingUnitRecID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackMaterialCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingUnitWeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackagingClassId_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PackingUnitRecID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventPackagingUnitRefRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PackingUnitWeight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPackingUnitWeight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackMaterialCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPackingMaterialCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackagingClassId_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemPackagingClassId_W</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PackingUnitRecIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PackingUnitRecID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PackMaterialCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PackagingClassId_W</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventPackagingMaterialCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventPackagingMaterialCode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackMaterialCode</Name>
					<Field>PackMaterialCode</Field>
					<RelatedField>PackMaterialCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PackagingMaterialCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventPackagingUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventPackagingUnit</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackingUnitRecID</Name>
					<Field>PackingUnitRecID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventPackagingClass_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventPackagingClass_W</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackagingClassId_W</Name>
					<Field>PackagingClassId_W</Field>
					<RelatedField>PackagingClassId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>