<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchComplementaryInvoiceHeader</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchComplementaryInvoiceHeader extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcCashDiscDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the cash discount date for this invoice and update its field.
    /// </summary>
    public void calcCashDiscDate()
    {
        if (this.CashDisc)
        {
            if (!this.CashDiscDate)
            {
                this.CashDiscDate   = this.DocumentDate;
                this.CashDiscDate   = CashDisc::cashDiscDate(this.CashDisc, this.CashDiscDate);
            }
        }
        else
        {
            this.CashDiscDate   = dateNull();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcPaymentDueDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the due date for a complementary invoice header.
    /// </summary>
    public void calcPaymentDueDate()
    {
        DueDate                         dueDate;
        TransDate                       transDate;
        PaymTerm                        paymTerm;
        PaymCalendarProcessor           paymCalendarProcessor;
        PaymCalendarIDerivationSource   calendarDerivSource;

        paymTerm = PaymTerm::find(this.Payment);
        if (this.CashDiscDate)
        {
            transDate = this.CashDiscDate;
        }
        else
        {
            transDate = this.DocumentDate ? this.DocumentDate : this.TransDate;
        }

        dueDate = paymTerm.due(transDate, this.paymDayId());

        // Adjust date per payment calendar
        if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar))
            && paymTerm.VendorUpdateDueDate != PaymentDueDateUpdatePolicy::NoUpdate)
        {
            paymCalendarProcessor   = PaymCalendarProcessor::construct();
            calendarDerivSource     = new PaymCalendarSourcePurchComplInvoice(this);
            dueDate = paymCalendarProcessor.adjustDate(dueDate, paymTerm.VendorUpdateDueDate, calendarDerivSource);
        }

        this.FixedDueDate = dueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canFiscalDocTextBeRegistered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if Fiscal document texts can be registered to the complementary invoice header.
    /// </summary>
    /// <returns>
    /// True if the Fiscal document text can be registered; false otherwise.
    /// </returns>
    public boolean canFiscalDocTextBeRegistered()
    {
        return  this.RecId &&
                this.Status == ComplementaryInvoiceStatus::Open &&
                !this.CanceledInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPaymentSched</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the payment schedule for this invoice.
    /// </summary>
    void createPaymentSched()
    {
        CustVendPaymSched           custVendPaymSched;

        custVendPaymSched = CustVendPaymSched::construct(SysModule::Vend, this);
        custVendPaymSched.createPaymSched(PaymSched::find(this.PaymSched));
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the record from the DB and performs related cleanup.
    /// </summary>
    public void delete()
    {
        PurchComplementaryInvoiceHeader invoiceToCancel;

        ttsbegin;

        super();
        TaxUncommitted::deleteForDocumentHeader(tableNum(PurchComplementaryInvoiceHeader), this.RecId);

        if (this.CanceledInvoice)
        {
            select forUpdate invoiceToCancel
                where invoiceToCancel.RecId == this.CanceledInvoice;

            invoiceToCancel.Status = ComplementaryInvoiceStatus::Posted;
            invoiceToCancel.update();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>distributeAmounts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Distribute tax amounts to be complemented by this invoice between its lines.
    /// </summary>
    /// <param name="_IPIAmountToDistribute">
    /// Total IPI amount to be complemented by this invoice.
    /// </param>
    /// <param name="_ICMSAmountToDistribute">
    /// Total ICMS amount to be complemented by this invoice.
    /// </param>
    /// <param name="_povertyFundAmountToDistribute">
    /// Total poverty fund amount to be complemented by this invoice.
    /// </param>
    /// <remarks>
    /// Current IPI, ICMS and poverty fund (FCP) additional amounts are lost.
    /// </remarks>
    public void distributeAmounts(TaxAmount _IPIAmountToDistribute, TaxAmount _ICMSAmountToDistribute, TaxAmount _povertyFundAmountToDistribute = 0)
    {
        PurchComplementaryInvoiceLine complementaryLine;
        Amount totalAmount;
        TaxAmount remainingIPI, remainingICMS, remainingPovertyFund;

        select sum(OriginalLineAmount) from complementaryLine
            where complementaryLine.PurchComplementaryInvoiceHeader == this.RecId;

        totalAmount = complementaryLine.OriginalLineAmount;

        remainingIPI = _IPIAmountToDistribute;
        remainingICMS = _ICMSAmountToDistribute;
        remainingPovertyFund = _povertyFundAmountToDistribute;

        ttsBegin;

        while select forUpdate complementaryLine
            where complementaryLine.PurchComplementaryInvoiceHeader == this.RecId
        {
            complementaryLine.AdditionalICMSAmount = CurrencyExchangeHelper::amount(_ICMSAmountToDistribute * complementaryLine.OriginalLineAmount / totalAmount, this.Currency);
            remainingICMS -= complementaryLine.AdditionalICMSAmount;

            complementaryLine.AdditionalPovertyFundAmount = CurrencyExchangeHelper::amount(_povertyFundAmountToDistribute * (complementaryLine.OriginalLineAmount / totalAmount),
                                                                             this.Currency);
            remainingPovertyFund -= complementaryLine.AdditionalPovertyFundAmount;

            complementaryLine.AdditionalIPIAmount = CurrencyExchangeHelper::amount(_IPIAmountToDistribute * complementaryLine.OriginalLineAmount / totalAmount, this.Currency);
            remainingIPI -= complementaryLine.AdditionalIPIAmount;

            complementaryLine.update();
        }

        // Fix rounding errors
        if (remainingICMS != 0 || remainingIPI != 0 || remainingPovertyFund != 0)
        {
            select firstOnly forUpdate complementaryLine
                where complementaryLine.PurchComplementaryInvoiceHeader == this.RecId;

            complementaryLine.AdditionalICMSAmount += remainingICMS;
            complementaryLine.AdditionalIPIAmount += remainingIPI;
            complementaryLine.AdditionalPovertyFundAmount += remainingPovertyFund;
            complementaryLine.update();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFiscalDocumentSeries</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edit method for the Fiscal Document Series column
    /// </summary>
    /// <param name="_set">
    /// Indicates wether the current value is being set or not
    /// </param>
    /// <param name="_fiscalDocumentSeries">
    /// The current Fiscal Document Series value
    /// </param>
    /// <returns>
    /// The fiscal document series depending on the issuer of the Purchase Complementary Invoice
    /// </returns>
    /// <remarks>
    /// This method was created because the series field required some intelligence when the Fiscal Establishment is in SCAN contingency
    /// </remarks>
    edit public FiscalDocumentSeries_BR editFiscalDocumentSeries(boolean _set, FiscalDocumentSeries_BR _fiscalDocumentSeries)
    {
        if (_set)
        {
            this.Series = _fiscalDocumentSeries;
        }

        return this.fiscalDocumentSeries();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReasonCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets the reason code.
    /// </summary>
    /// <param name="set">
    /// A Boolean value that indicates whether the reason code is set.
    /// </param>
    /// <param name="_reasonCode">
    /// The new reason code when the <paramref name="set" /> value is true.
    /// </param>
    /// <returns>
    /// The reason code of the record in the <c>ReasonTableRef</c> table.
    /// </returns>
    public edit ReasonCode editReasonCode(boolean set, ReasonCode _reasonCode)
    {
        ReasonCode      reasonCode = strLRTrim(_reasonCode);
        RefRecId        originalReasonRefRecID;
        FormDataSource  formPurchComplInvHeader;

        if (set)
        {
            // If the ReasonRefRecID is 0, then create a new ReasonTableRef record
            // otherwise, update the existing record.
            if (this.ReasonTableRef_BR == 0)
            {
                this.ReasonTableRef_BR = ReasonTableRef::createFromCode(reasonCode);
            }
            else
            {
                if (reasonCode)
                {
                    //The reasonCode value is not blank.
                    // Save the current ReasonRefRecID for comparision.
                    originalReasonRefRecID = this.ReasonTableRef_BR;
                    this.ReasonTableRef_BR = ReasonTableRef::updateCode(reasonCode, this.ReasonTableRef_BR);

                    if (this.ReasonTableRef_BR == originalReasonRefRecID)
                    {
                        // The reason code has changed but the referenced record ID has not.
                        // Get the current FormDataSource and set forceWrite() to true so that
                        // data validation (validateWrite()) is performed on the updated reason code.
                        formPurchComplInvHeader = FormDataUtil::getFormDataSource(this);
                        if (formPurchComplInvHeader)
                        {
                            formPurchComplInvHeader.forceWrite(true);
                        }
                    }
                }
                else
                {
                    // The reasonCode is blank.
                    this.ReasonTableRef_BR = ReasonTableRef::updateCode(reasonCode, this.ReasonTableRef_BR);
                }
            }

            // Update the reason comment with the default comment value for the updated reason code.
            // A blank reasonCode will result in a blank comment because a blank reasonCode
            // will return an empty reasonTable buffer.

            this.editReasonComment(true, ReasonTable::find(_reasonCode).Description);
        }
        else
        {
            reasonCode = ReasonTableRef::find(this.ReasonTableRef_BR).Reason;
        }

        return reasonCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReasonComment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets the reason comment.
    /// </summary>
    /// <param name="set">
    /// A Boolean value that indicates whether the reason code is set.
    /// </param>
    /// <param name="_reasonComment">
    /// The new reason comment when the <paramref name="set" /> value is true.
    /// </param>
    /// <returns>
    /// The reason comment of the record in the <c>ReasonTableRef</c> table.
    /// </returns>
    public edit ReasonComment editReasonComment(boolean set, ReasonComment _reasonComment)
    {
        ReasonComment   reasonComment = _reasonComment;

        if (set)
        {
            // If the ReasonRefRecID is 0, then create a new ReasonTableRef record
            // otherwise, update the existing record.
            if (this.ReasonTableRef_BR == 0)
            {
                this.ReasonTableRef_BR = ReasonTableRef::createFromComment(reasonComment);
            }
            else
            {
                this.ReasonTableRef_BR = ReasonTableRef::updateComment(reasonComment, this.ReasonTableRef_BR);
            }
        }
        else
        {
            reasonComment = ReasonTableRef::find(this.ReasonTableRef_BR).ReasonComment;
        }

        return reasonComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the exchange rate for this invoice.
    /// </summary>
    /// <param name="_date">
    /// The date for which to calculate the rate. Default is the transaction date.
    /// </param>
    /// <returns>
    /// <c>CustExchRate</c> for the given date.
    /// </returns>
    /// <remarks>
    /// Used by the accounting framework.
    /// </remarks>
    display CustExchRate exchRate(date _date = this.TransDate)
    {
        if (this.Currency)
                return ExchangeRateHelper::exchRate(this.Currency, _date);
        else
            return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRateSecondary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the secondary exchange rate for this invoice.
    /// </summary>
    /// <param name="_date">
    /// The date for which to calculate the rate. Default is the transaction date.
    /// </param>
    /// <returns>
    /// <c>ExchrateSecondary</c> for the given date.
    /// </returns>
    /// <remarks>
    /// Used by the accounting framework.
    /// </remarks>
    display ExchrateSecondary exchRateSecondary(date _date = this.TransDate)
    {
        if (this.Currency)
            return ExchangeRateHelper::exchRateSecond(this.Currency, _date);
        else
            return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalDocumentSeries</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the correct series for the fiscal document, depending on the contingency mode of issuing fiscal establishment
    /// </summary>
    /// <returns>
    /// The fiscal document series for the Purchase Complementary Invoice which is the same of the Fiscal Document, since it's persisted upon posting it
    /// </returns>
    display public FiscalDocumentSeries_BR fiscalDocumentSeries()
    {
        if (this.Issuer == FiscalDocumentIssuer_BR::OwnEstablishment && this.Status == ComplementaryInvoiceStatus::Open)
        {
            return FiscalDocumentType_BR::getFiscalDocumentSeries(this.FiscalDocumentType);
        }

        return this.Series;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalEstablishment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>FiscalEstablishment_BR</c> record related to this invoice.
    /// </summary>
    /// <returns>
    /// <c>FiscalEstablishment_BR</c> record related to this invoice.
    /// </returns>
    public FiscalEstablishment_BR fiscalEstablishment()
    {
        return FiscalEstablishment_BR::find(this.FiscalEstablishment_BR);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCancelPurchComplInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrives the <c>PurchComplementaryInvoiceHeader</c> record that reverses this document
    /// </summary>
    /// <param name="_forUpdate">
    /// The boolean value that defines if the record will be selected for update or not
    /// </param>
    /// <returns>
    /// Record from <c>PurchComplementaryInvoiceHeader</c> that reverses this document, if any.
    /// </returns>
    public PurchComplementaryInvoiceHeader getCancelPurchComplInvoice(boolean _forUpdate = false)
    {
        PurchComplementaryInvoiceHeader PurchComplementaryInvoiceHeader;

        PurchComplementaryInvoiceHeader.selectForUpdate(_forUpdate);

        select PurchComplementaryInvoiceHeader
            where PurchComplementaryInvoiceHeader.CanceledInvoice == this.RecId;

        return PurchComplementaryInvoiceHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFiscalDocumentNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the formatted fiscal document number for this complementary invoice.
    /// </summary>
    /// <returns>
    /// Formatted fiscal document number.
    /// </returns>
    public Num getFiscalDocumentNumber()
    {
        if (this.Issuer == FiscalDocumentIssuer_BR::OwnEstablishment && strStartsWith(this.Number, this.Series))
        {
            return strDel(this.Number, 1, strLen(this.Series));
        }
        return this.Number;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the record into the DB and resolves its depedencies.
    /// </summary>
    public void insert()
    {
        SourceDocumentProcessorFacade::submitSourceDocumentImplementation(this);
        super();

        this.updateFiscalDocumentText(FiscalDocumentTextType_BR::CustVend);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs adjustments in the invoice when a given field is modified.
    /// </summary>
    /// <param name="_fieldId">
    /// <c>FieldId</c> of the field being modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        PurchComplementaryInvoiceLine complementaryLine;
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PurchComplementaryInvoiceHeader, AccountingDistributionTemplate):
                ttsBegin;
                while select forUpdate complementaryLine
                    where complementaryLine.PurchComplementaryInvoiceHeader == this.RecId
                {
                    complementaryLine.AccountingDistributionTemplate = this.AccountingDistributionTemplate;
                    complementaryLine.update();
                }
                ttsCommit;
                break;

            case fieldNum(PurchComplementaryInvoiceHeader, DefaultDimension):
                ttsBegin;
                while select forUpdate complementaryLine
                    where complementaryLine.PurchComplementaryInvoiceHeader == this.RecId
                {
                    complementaryLine.DefaultDimension = this.DefaultDimension;
                    complementaryLine.update();
                }
                ttsCommit;
                break;

            case fieldNum(PurchComplementaryInvoiceHeader, PaymSched):
                VendPaymSched::deleteVendPaymSched(this.TableId, this.RecId);
                break;

            case fieldNum(PurchComplementaryInvoiceHeader, Payment):
                this.calcPaymentDueDate();
                break;

            case fieldNum(PurchComplementaryInvoiceHeader, AccessKey_BR):
                this.AccessKey_BR = strKeep(this.AccessKey_BR, '0123456789');
                this.Number = EFDocAccessKeyBase_BR::getInvoiceNumber(this.AccessKey_BR);
                this.Series = EFDocAccessKeyBase_BR::getInvoiceSeries(this.AccessKey_BR);
                break;

            case fieldNum(PurchComplementaryInvoiceHeader, Model):
                this.Number = "";
                this.Series = "";
                this.AccessKey_BR = "";
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>nfePaymentMethod_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets payment method for NF-e
    /// </summary>
    /// <returns>
    /// The payment method for NF-e
    /// </returns>
    public EFDocPaymentMethod_BR nfePaymentMethod_BR()
    {
        return VendPaymModeTable::find(this.VendPaymModeTable).PaymentMethod_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExchangeRateDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the date being used to calculate the exchange rate of this invoice.
    /// </summary>
    /// <returns>
    /// The date being used to calculate the exchange rate of this invoice.
    /// </returns>
    /// <remarks>
    /// Used by the accounting framework.
    /// </remarks>
    public AccountingDate parmExchangeRateDate()
    {
        return this.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocHeaderTypeEnumName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the enum type associated with this source document.
    /// </summary>
    /// <returns>
    /// <c>enumName</c> of the associated enum type.
    /// </returns>
    /// <remarks>
    /// Used by the accounting framework.
    /// </remarks>
    public enumName parmSourceDocHeaderTypeEnumName()
    {
        return enumStr(SourceDocument_PurchComplementaryInv);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocHeaderTypeEnumValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the enum value associated with this source document.
    /// </summary>
    /// <returns>
    /// The enum value associated with this source document.
    /// </returns>
    /// <remarks>
    /// Used by the accounting framework.
    /// </remarks>
    public SourceDocumentTypeEnumValue parmSourceDocHeaderTypeEnumValue()
    {
        return SourceDocument_PurchComplementaryInv::PurchComplementaryInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymDayId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the payment day ID of this invoice.
    /// </summary>
    /// <returns>
    /// <c>VendPaymDayId</c> of this invoice.
    /// </returns>
    VendPaymDayId paymDayId()
    {
        VendPaymDayId    paymDayId;

        paymDayId = VendTable::find(this.VendTable).PaymDayId;

        if (!paymDayId)
            paymDayId = this.payment().PaymDayId;

        return paymDayId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>payment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the payment term used by this invoice.
    /// </summary>
    /// <param name="_update">
    /// Indicates whether the record will be updated.
    /// </param>
    /// <returns>
    /// <c>PaymTerm</c> record associated to this invoice.
    /// </returns>
    PaymTerm payment(boolean _update = false)
    {
        return PaymTerm::find(this.Payment, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFiscalDocumentText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the Fiscal document texts of a specific type on the complementary document header.
    /// </summary>
    /// <param name="_type">
    /// A <c>FiscalDocumentTextType_BR</c> value indicating the type.
    /// </param>
    /// <remarks>
    /// This method does nothing if the tax fiscal document header has not been inserted yet.
    /// </remarks>
    public void updateFiscalDocumentText(FiscalDocumentTextType_BR _type)
    {
        if (this.canFiscalDocTextBeRegistered())
        {
            FiscalDocumentTextUpdate_BR::newFromRecord(this).updateTexts(_type);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (this.Status != ComplementaryInvoiceStatus::Open)
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the given field is valid or not
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field ID of the field to validate
    /// </param>
    /// <returns>
    /// True if the field is valid, otherwise false
    /// </returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(PurchComplementaryInvoiceHeader, AccessKey_BR):
                if (FiscalDocModel_BR::find(this.Model).IsForNFeFederal)
                {
                    if (!EFDocAccessKeyBase_BR::validate(this.AccessKey_BR))
                    {
                        ret = checkFailed("@SYS4110579");
                    }
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        // <GBR>
        if (FiscalDocModel_BR::find(this.Model).IsForNFeFederal
            && this.Issuer == FiscalDocumentIssuer_BR::ThirdParty
            && !this.AccessKey_BR)
        {
            ret = checkFailed("@SYS4110579");
        }
        // </GBR>

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <c>PurchComplementaryInvoice</c> with a given recID.
    /// </summary>
    /// <param name="_recID">
    /// RecID for the complementary invoice to be retrieved.
    /// </param>
    /// <param name="_forUpdate">
    /// Whether the record is for update.
    /// </param>
    /// <returns>
    /// Record with the given RecID.
    /// </returns>
    public static PurchComplementaryInvoiceHeader find(RefRecId _recID, boolean _forUpdate = false)
    {
        PurchComplementaryInvoiceHeader purchComplementaryInvoice;

        purchComplementaryInvoice.selectForUpdate(_forUpdate);

        select purchComplementaryInvoice
            where purchComplementaryInvoice.RecId == _recID;

        return purchComplementaryInvoice;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@GLS221202</DeveloperDocumentation>
	<Label>@GLS132</Label>
	<SingularLabel>@GLS132</SingularLabel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>VendTable</TitleField1>
	<TitleField2>Status</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>AccountsPayable</Modules>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DocuRef</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>DocuRef</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>SourceDocumentHeader</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>SourceDocumentHeader</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Number</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Model</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Series</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Specie</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CancelReason</Name>
			<Label>@SYS114149</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonTableRef_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ComplementaryInvoice</Name>
			<Label>@GLS131</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ComplementaryType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Currency</Name>
			<Label>@SYS7572</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Delivery</Name>
			<Label>@SYS4508</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS342338</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountingDistributionTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FiscalEstablishment</Name>
			<Label>@GLS220103</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FiscalInformation</Name>
			<Label>@GLS56</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FiscalDocumentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendFinalUser</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Invoice</Name>
			<Label>@SYS12128</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Model</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccessKey_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Number</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Series</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Specie</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Issuer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InvoiceDates</Name>
			<Label>@SYS315666</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedDueDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Ledger</Name>
			<Label>@SYS13356</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerVoucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostLedgerVoucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDiscDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDiscAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedDueDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDiscPercent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaymentInvoice</Name>
			<Label>@SYS128429</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Payment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymSched</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedDueDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendPaymModeTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendPaymModeSpec</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendBankAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS5943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettleVoucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProcessReference</Name>
			<Label>@GLS60587</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SourceDocument</Name>
			<Label>@sys127863</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceDocumentHeader</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Vendor</Name>
			<Label>@SYS9455</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyPostalAddress</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccessKey_BR</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>EFDocAccessKey_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AccountingDistributionTemplate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AccountingDistributionTemplateRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CanceledInvoice</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CashDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCashDiscCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CashDiscAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCashDiscAmount</ExtendedDataType>
			<Label>@SYS4376</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CashDiscDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCashDiscDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CashDiscPercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscPct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ComplementaryType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InvoiceComplementaryType_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ComplementedFiscalDocument</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CostLedgerVoucher</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<Label>@SYS22878</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Currency</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DeliveryPostalAddress</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DocumentDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DocumentDate</ExtendedDataType>
			<Label>@SYS57610</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FiscalDocumentType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FiscalDocumentTypeRecID_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FiscalEstablishment_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FiscalEstablishmentRecId_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FixedDueDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchFixedDueDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Issuer</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>FiscalDocumentIssuer_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerVoucher</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Model</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FiscalDocumentModel_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Number</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<GroupPrompt>@SYS13864</GroupPrompt>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Payment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPaymTermId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymSched</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymSchedId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostingProfile</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPostingProfile</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReasonTableRef_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReasonTableRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Series</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FiscalDocumentSeries_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SettleVoucher</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchSettlementType</ExtendedDataType>
			<EnumType>SettlementType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceDocumentHeader</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Specie</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>FiscalDocumentSpecie_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ComplementaryInvoiceStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ThirdPartyPostalAddress</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<GroupPrompt>@SYS7402</GroupPrompt>
			<Label>@SYS14475</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendBankAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBankAccountId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VendFinalUser</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustVendFinalUser_BR</ExtendedDataType>
			<Label>@GLS933</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendPaymModeSpec</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymSpec</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendPaymModeTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPaymMode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendTable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendInvoiceAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<RelationContext>VendTable</RelationContext>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SourceDocumentHeaderIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceDocumentHeader</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>dataAreaId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CurrencyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Currency</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FiscalDocument_BRIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ComplementedFiscalDocument</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AccountingDistributionTemplateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AccountingDistributionTemplate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DimensionAttributeValueSetIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefaultDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CashDiscIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CashDisc</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendLedgerIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PostingProfile</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendPaymModeTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendPaymModeTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PaymSchedIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PaymSched</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PaymTermIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Payment</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FiscalDocumentType_BRIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FiscalDocumentType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LogisticsPostalAddressIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ThirdPartyPostalAddress</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchComplementaryInvoiceHeaderIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CanceledInvoice</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FiscalEstablishment_BRIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VoucherAndDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerVoucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>FiscalDocumentTextUpdateTableMap_BR</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>OrderAccount</MapField>
					<MapFieldTo>VendTable</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SourceDocumentHeaderImplementation</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>SourceDocumentHeader</MapField>
					<MapFieldTo>SourceDocumentHeader</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AccountingDistributionTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AccountingDistributionTemplate</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountingDistributionTemplate</Name>
					<Field>AccountingDistributionTemplate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CanceledComplementaryInvoice</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>PurchComplementaryInvoiceHeader</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CanceledInvoice</Name>
					<Field>CanceledInvoice</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CashDisc</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CashDisc</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CashDisc</Name>
					<Field>CashDisc</Field>
					<RelatedField>CashDiscCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Currency</Name>
					<Field>Currency</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DeliveryPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DeliveryPostalAddress</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeliveryPostalAddress</Name>
					<Field>DeliveryPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FiscalDocModel_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FiscalDocModel_BR</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Model</Name>
					<Field>Model</Field>
					<RelatedField>Model</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DocumentModelIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FiscalDocumentType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FiscalDocumentType_BR</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalDocumentType</Name>
					<Field>FiscalDocumentType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FiscalEstablishment</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FiscalEstablishment_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalEstablishment_BR</Name>
					<Field>FiscalEstablishment_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OriginalFiscalDocument</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>FiscalDocument_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ComplementedFiscalDocument</Name>
					<Field>ComplementedFiscalDocument</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymSched</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PaymSched</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymSched</Name>
					<Field>PaymSched</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NameIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PaymTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Payment</Name>
					<Field>Payment</Field>
					<RelatedField>PaymTermId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TermIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReasonTableRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ReasonTableRef</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReasonTableRef_BR</Name>
					<Field>ReasonTableRef_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SourceDocumentHeader</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>SourceDocumentHeader</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceDocumentHeader</Name>
					<Field>SourceDocumentHeader</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ThirdPartyPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ThirdPartyPostalAddress</Name>
					<Field>ThirdPartyPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendBankAccount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendBankAccount</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendBankAccount</Name>
					<Field>VendBankAccount</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendTable</Name>
					<Field>VendTable</Field>
					<RelatedField>VendAccount</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendLedger</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendLedger</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostingProfile</Name>
					<Field>PostingProfile</Field>
					<RelatedField>PostingProfile</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProfileIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendPaymModeSpec</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendPaymModeSpec</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendPaymModeTable</Name>
					<Field>VendPaymModeTable</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendPaymModeSpec</Name>
					<Field>VendPaymModeSpec</Field>
					<RelatedField>Specification</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PaymSpecIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendPaymModeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendPaymModeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendPaymModeTable</Name>
					<Field>VendPaymModeTable</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PaymModeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendTable</Name>
					<SourceEDT>VendInvoiceAccount</SourceEDT>
					<Field>VendTable</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>