<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankDocumentFacilityAgreementLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankDocumentFacilityAgreementLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getBalanceAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the balance amount.
    /// </summary>
    /// <returns>
    ///    The balance amount.
    /// </returns>
    public BankDocumentFacilityAgreementAmountCur getBalanceAmount()
    {
        return this.Limit - this.AmountUsed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankDocumentFacilityAgreement</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>BankDocumentFacilityAgreement</c> record of this line record.
    /// </summary>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    The related <c>BankDocumentFacilityAgreement</c> record.
    /// </returns>
    public BankDocumentFacilityAgreement getBankDocumentFacilityAgreement(
        boolean _forUpdate = false)
    {
        return BankDocumentFacilityAgreement::find(this.BankDocumentFacilityAgreement, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankDocumentFacilityType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>BankDocumentFacilityType</c> record of the line record.
    /// </summary>
    /// <returns>
    ///    The facility type record that is related to this line record.
    /// </returns>
    public BankDocumentFacilityType getBankDocumentFacilityType()
    {
        return BankDocumentFacilityType::find(this.BankDocumentFacilityType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts a <c>BankDocumentFacilityAgreementLine</c> record to the database.
    /// </summary>
    /// <param name="_copyLGAgreementLineFrom">
    ///    The <c>BankLGFacilityAgreementLine</c> table buffer from which to copy data from; optional.
    /// </param>
    /// <remarks>
    ///    If the <c>BankLGFacilityAgreementLine</c> record is for a letter of guarantee, this method will
    ///    also create a corresponding record in the <c>BankLGFacilityAgreementLine</c> table.
    /// </remarks>
    public void insert(BankLGFacilityAgreementLine _copyLGAgreementLineFrom = null)
    {
        ttsbegin;
        super();

        if (this.isForLetterOfGuarantee())
        {
            BankLGFacilityAgreementLine::create(this.RecId, _copyLGAgreementLineFrom);
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isForLetterOfGuarantee</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the current agreement line is for a letter of guarantee.
    /// </summary>
    /// <returns>
    ///    <c>true</c> if the agreement line is for a letter of guarantee; otherwise, false.
    /// </returns>
    public boolean isForLetterOfGuarantee()
    {
        return this.getBankDocumentFacilityType().BankDocumentType == BankDocumentType::LetterOfGuarantee;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
        public boolean validateFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldstr(BankDocumentFacilityAgreementLine, Limit) :
                    if (this.Limit < this.AmountUsed)
                    {
                        // The used amount is greater than the limit amount of the agreement.
                        ret = checkFailed("@SYS313658");
                    }
                    break;
                case fieldstr(BankDocumentFacilityAgreementLine, BankDocumentFacilityType) :
                    if (this.isForLetterOfGuarantee()
                        && !BankLGFeatureChecker::checkBankLGEnabled())
                    {
                        // It is not allowed to select a facility type with facility nature 'Letter of Guarantee' because the Letter of Guarantee feature is not enabled.
                        ret = checkFailed("@SYS314706");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByAgreementAndType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>BankDocumentFacilityGroup</c> table exists based
    ///    on the facility argreement table and faclity type.
    /// </summary>
    /// <param name="_bankDocumentAgreementTableRefRecId">
    ///    The reference record ID of the facility argreement table.
    /// </param>
    /// <param name="_bankDocumentFacilityTypeRefRecId">
    ///    The reference record ID of the facility type table.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean existByAgreementAndType(
        BankDocumentAgreementTableRefRecId _bankDocumentAgreementTableRefRecId,
        BankDocumentFacilityTypeRefRecId   _bankDocumentFacilityTypeRefRecId)
    {
        BankDocumentFacilityAgreementLine bankDocumentFacilityAgreementLine;

        if (_bankDocumentAgreementTableRefRecId  != 0
            && _bankDocumentFacilityTypeRefRecId != 0)
        {
            select firstonly RecId from bankDocumentFacilityAgreementLine
                where bankDocumentFacilityAgreementLine.BankDocumentFacilityAgreement == _bankDocumentAgreementTableRefRecId
                    && bankDocumentFacilityAgreementLine.BankDocumentFacilityType     == _bankDocumentFacilityTypeRefRecId;
        }
        return bankDocumentFacilityAgreementLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByFacilityType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>BankDocumentacilityGroup</c> table exists based on
    ///    the faclity type.
    /// </summary>
    /// <param name="_bankDocumentFacilityTypeRefRecId">
    ///    The reference record ID of the facility type table.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean existByFacilityType(BankDocumentFacilityTypeRefRecId _bankDocumentFacilityTypeRefRecId)
    {
        BankDocumentFacilityAgreementLine bankDocumentFacilityAgreementLine;

        if (_bankDocumentFacilityTypeRefRecId != 0)
        {
            select firstonly RecId from bankDocumentFacilityAgreementLine
                where bankDocumentFacilityAgreementLine.BankDocumentFacilityType == _bankDocumentFacilityTypeRefRecId;
        }
        return bankDocumentFacilityAgreementLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified <c>BankDocumentFacilityAgreementLine</c> record.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>BankDocumentFacilityAgreementLine</c> record.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>BankDocumentFacilityAgreementLine</c> table; otherwise, an empty record.
    /// </returns>
    public static BankDocumentFacilityAgreementLine find(
        RecId   _recId,
        boolean _forUpdate = false)
    {
        BankDocumentFacilityAgreementLine bankDocumentFacilityAgreementLine;

        if (_recId)
        {
            bankDocumentFacilityAgreementLine.selectForUpdate(_forUpdate);

            select firstonly bankDocumentFacilityAgreementLine
                where bankDocumentFacilityAgreementLine.RecId == _recId;
        }

        return bankDocumentFacilityAgreementLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByAgreementAndType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified <c>BankDocumentFacilityAgreementLine</c> record by using a facility argreement
    ///    table and facility type.
    /// </summary>
    /// <param name="_bankDocumentAgreementTableRefRecId">
    ///    The reference record ID of the facility argreement table.
    /// </param>
    /// <param name="_bankDocumentFacilityTypeRefRecId">
    ///    The reference record ID of a facility type table.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>BankDocumentFacilityAgreementLine</c> table; otherwise, an empty record.
    /// </returns>
    public static BankDocumentFacilityAgreementLine findByAgreementAndType(
        BankDocumentAgreementTableRefRecId _bankDocumentAgreementTableRefRecId,
        BankDocumentFacilityTypeRefRecId   _bankDocumentFacilityTypeRefRecId,
        boolean                            _forUpdate = false)
    {
        BankDocumentFacilityAgreementLine bankDocumentFacilityAgreementLine;

        if (_bankDocumentAgreementTableRefRecId  != 0
            && _bankDocumentFacilityTypeRefRecId != 0)
        {
            bankDocumentFacilityAgreementLine.selectForUpdate(_forUpdate);

            select firstonly bankDocumentFacilityAgreementLine
                where bankDocumentFacilityAgreementLine.BankDocumentFacilityAgreement == _bankDocumentAgreementTableRefRecId
                    && bankDocumentFacilityAgreementLine.BankDocumentFacilityType     == _bankDocumentFacilityTypeRefRecId;
        }

        return bankDocumentFacilityAgreementLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BankDocument</ConfigurationKey>
	<DeveloperDocumentation>@SYS313665</DeveloperDocumentation>
	<FormRef>BankDocumentFacilityAgreement</FormRef>
	<Label>@SYS313712</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>BankDocumentFacilityAgreement</TitleField1>
	<TitleField2>BankDocumentFacilityType</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>Bank</Modules>
	<ReplacementKey>AgreementLinesIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>BankLCImport</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>BankLCImport</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>BankLCImportHistory</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>BankLCImportHistory</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>BankLGFacilityAgreementLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>BankLGFacilityAgreementLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankDocumentFacilityAgreement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankDocumentFacilityType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Limit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountUsed</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankDocumentFacilityAgreement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankDocumentFacilityType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FacilityAgreement</Name>
			<Label>@SYS313667</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankDocumentFacilityAgreement</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FacilityType</Name>
			<Label>@SYS313647</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankDocumentFacilityType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankDocumentFacilityAgreement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankDocumentFacilityType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Limit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountUsed</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankDocumentFacilityAgreement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankDocumentFacilityType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountUsed</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankDocumentFacilityAgreementAmountCur</ExtendedDataType>
			<Label>@SYS313714</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BankDocumentFacilityAgreement</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankDocumentAgreementTableRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BankDocumentFacilityType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankDocumentFacilityTypeRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Limit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankDocumentFacilityAgreementAmountCur</ExtendedDataType>
			<Label>@SYS39453</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AgreementLinesIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BankDocumentFacilityAgreement</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BankDocumentFacilityType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BankDocumentFacilityTypeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BankDocumentFacilityType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankDocumentFacilityAgreement</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankDocumentFacilityAgreement</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BankDocumentFacilityAgreement</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BankDocumentFacilityAgreement_BankDocumentFacilityAgreementLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankDocumentFacilityAgreement</Name>
					<Field>BankDocumentFacilityAgreement</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankDocumentFacilityType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankDocumentFacilityType</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BankDocumentFacilityType</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BankDocumentFacilityType_BankDocumentFacilityAgreementLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankDocumentFacilityType</Name>
					<Field>BankDocumentFacilityType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>