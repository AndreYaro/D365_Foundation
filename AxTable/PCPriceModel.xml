<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCPriceModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PCPriceModel extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accept</Name>
				<Source><![CDATA[
    /// <summary>
    /// Accepts a product configuration model visitor.
    /// </summary>
    /// <param name="_visitor">
    ///  A product configuration model visitor.
    /// </param>
    public void accept(PCModelVisitor _visitor)
    {
        PCClassPriceCalculation componentPriceCalculation;

        _visitor.visitStart(this);

        while select componentPriceCalculation
            where componentPriceCalculation.PriceModel == this.RecId
        {
            componentPriceCalculation.accept(_visitor);
        }

        _visitor.visitEnd(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record.
    /// </summary>
    /// <param name="_createDefaultCurrency">
    /// Specifies, if a default currency should be created for the price model.
    /// </param>
    public void insert(boolean _createDefaultCurrency = true)
    {
        ttsBegin;

        super();

        if (_createDefaultCurrency)
        {
            PCPriceModelCurrency::findOrCreateCurrency(this.RecId, EcoResProductParameters::getDefaultCurrency());
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteAllPriceCalculationInCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all price model calculations in a specified price model currency.
    /// </summary>
    /// <param name="_priceModel">
    /// A reference to the price model
    /// </param>
    /// <param name="_currency">
    /// A <c>CurrencyCode</c> value.
    /// </param>
    public static void deleteAllPriceCalculationInCurrency(RefRecId _priceModel, CurrencyCode _currency)
    {
        PCPriceModelCurrency    priceModelCurrency;
        PCPriceExpressionValue  priceValue;

        ttsBegin;

        priceModelCurrency = PCPriceModelCurrency::findByPriceModelAndCurrency(_priceModel, _currency, true);

        delete_from priceValue
            where priceValue.PriceModelCurrency == priceModelCurrency.RecId;

        priceModelCurrency.delete();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the specified record is in the <c>PCPriceModel</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _recId)
    {
        return (PCPriceModel::find(_recId).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>PCPriceModel</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>PCPriceModel</c> table; otherwise, an empty record.
    /// </returns>
    public static PCPriceModel find(RefRecId _recId, boolean _forupdate = false)
    {
        PCPriceModel record;

        if (!_recId)
        {
            return record;
        }
        record.selectForUpdate(_forupdate);

        select firstonly record
            where record.RecId == _recId;

        return record;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>PCPriceModel</c> table.
    /// </summary>
    /// <param name="_priceModelName">
    /// The price model name.
    /// </param>
    /// <param name="_productConfigurationModel">
    /// A product configuration model.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>PCPriceModel</c> table; otherwise, an empty record.
    /// </returns>
    public static PCPriceModel findByName(PCPriceModelName _priceModelName, RefRecId _productConfigurationModel, boolean _forupdate = false)
    {
        PCPriceModel record;

        record.selectForUpdate(_forupdate);

        select firstonly record
            where record.Name == _priceModelName
            &&  record.ProductConfigurationModel == _productConfigurationModel;

        return record;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PC</ConfigurationKey>
	<DeveloperDocumentation>@SYS4001966</DeveloperDocumentation>
	<Label>@SYS4001957</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>ProductConfigurationModel</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>PriceModelName</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductConfigurationModel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductConfigurationModel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductConfigurationModel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PCDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PCPriceModelName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProductConfigurationModel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PriceModelName</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProductConfigurationModel</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PCProductConfigurationModel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PCProductConfigurationModel</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductConfigurationModel</Name>
					<Field>ProductConfigurationModel</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>