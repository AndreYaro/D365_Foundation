<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGEDSendRecvLog_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerRRGEDSendRecvLog_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>identifier</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds related electronic document identifier record by the current electronic document Id.
    /// </summary>
    /// <returns>
    /// <c>LedgerRRGEDIdentifiers_W</c> record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEDIdentifiers_W identifier()
    {
        return LedgerRRGEDIdentifiers_W::find(this.DocumentId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inits current record by the electronic document send status.
    /// </summary>
    /// <param name="_status">
    /// The <c>LedgerRRGEDSendStatuses_W</c> record.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromStatus(LedgerRRGEDSendStatuses_W _status)
    {
        this.StatusId       = _status.RecId;
        this.Type           = _status.Type;
        this.Description    = _status.Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceDocumentStr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays related electronic document description.
    /// </summary>
    /// <returns>
    /// Related electronic document description.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display LedgerRRGEDSourceDocumentStr_W sourceDocumentStr()
    {
        return this.identifier().sourceDocumentStr();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inits electronic document send journal record by the electronic document Id , status and date and writes it into the database.
    /// </summary>
    /// <param name="_documentId">
    /// The electronic document Id.
    /// </param>
    /// <param name="_statusId">
    /// The electronic document status Id.
    /// </param>
    /// <param name="_statusDateTime">
    /// The electronic document status date.
    /// </param>
    /// <param name="_description">
    /// The description.
    /// </param>
    /// <returns>
    /// The written <c>LedgerRRGEDSendRecvLog_W</c> record.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// Throws exception if _documentId parameter is empty.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGEDSendRecvLog_W addStatus(LedgerRRGEDRefRecId_W _documentId, LedgerRRGEDStatusRefRecId_W _statusId, LedgerRRGEDStatusDateTime_W _statusDateTime = DateTimeUtil::getSystemDateTime(), Description _description = '')
    {
        LedgerRRGEDSendRecvLog_W sendRecvLog;

        if (!_documentId)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        ttsbegin;
        sendRecvLog = LedgerRRGEDSendRecvLog_W::findCurrentStatus(_documentId, true);
        if (sendRecvLog.StatusId != _statusId || (_description && sendRecvLog.Description != _description))
        {
            sendRecvLog.clear();
            if (_statusId)
            {
                sendRecvLog.initFromStatus(LedgerRRGEDSendStatuses_W::find(_statusId));
            }
        }

        sendRecvLog.DocumentId      = _documentId;
        sendRecvLog.StatusDateTime  = _statusDateTime;

        if (_description)
        {
            sendRecvLog.Description = _description;
        }

        if (sendRecvLog.RecId)
        {
            sendRecvLog.update();
        }
        else
        {
            sendRecvLog.insert();
        }

        ttscommit;

        return sendRecvLog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCurrentStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds electronic document send journal record by the by the electronic document Id.
    /// </summary>
    /// <param name="_documentId">
    /// The electronic document Id.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The <c>LedgerRRGEDSendRecvLog_W</c> record if found; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGEDSendRecvLog_W findCurrentStatus(LedgerRRGEDRefRecId_W _documentId, boolean _forupdate = false)
    {
        LedgerRRGEDSendRecvLog_W sendRecvLog;

        sendRecvLog.selectForUpdate(_forupdate);

        if (_documentId)
        {
            select firstonly sendRecvLog order by StatusDateTime desc
                where sendRecvLog.DocumentId == _documentId;
        }

        return sendRecvLog;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4081598</DeveloperDocumentation>
	<Label>@SYS4081593</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>Type</TitleField1>
	<TitleField2>Description</TitleField2>
	<ClusteredIndex>documentIdx</ClusteredIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StatusDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>sourceDocumentStr</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>sourceDocumentStr</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DocumentId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>LedgerRRGEDRefRecId_W</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>StatusDateTime</Name>
			<ExtendedDataType>LedgerRRGEDStatusDateTime_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>StatusId</Name>
			<ExtendedDataType>LedgerRRGEDStatusRefRecId_W</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<EnumType>LedgerRRGEDSendStatusType_W</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>documentIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>StatusDateTime</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DocumentId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerRRGEDIdentifiers_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LedgerRRGEDIdentifiers_W</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocumentId</Name>
					<SourceEDT>LedgerRRGEDRefRecId_W</SourceEDT>
					<Field>DocumentId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerRRGEDSendStatuses_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LedgerRRGEDSendStatuses_W</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StatusId</Name>
					<SourceEDT>LedgerRRGEDStatusRefRecId_W</SourceEDT>
					<Field>StatusId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>