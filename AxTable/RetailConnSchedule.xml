<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailConnSchedule</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailConnSchedule extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.Active = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailConnSchedule</c> table by using the specified <c>parameter</c> values.
    /// </summary>
    /// <param name="_name">
    /// Name of the distribution schedule record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailConnSchedule</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailConnSchedule find(Name _name, boolean _forUpdate = false)
    {
        RetailConnSchedule schedule;

        if (_name)
        {
            schedule.selectForUpdate(_forUpdate);

            select firstonly schedule
                where schedule.Name == _name;
        }

        return schedule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailConnSchedule</c> table by using the specified <c>parameter</c> values.
    /// </summary>
    /// <param name="_scheduleRecId">
    /// Record Id of the distribution schedule record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record id in the <c>RetailConnSchedule</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailConnSchedule findByRecId(RefRecId _scheduleRecId, boolean _forUpdate = false)
    {
        RetailConnSchedule schedule;

        if (_scheduleRecId)
        {
            schedule.selectForUpdate(_forUpdate);

            select firstonly schedule
                where schedule.recid == _scheduleRecId;
        }

        return schedule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>CurrentBatchStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Current batch status.
    /// </summary>
    /// <returns>Batch status.</returns>
    display str CurrentBatchStatus()
    {
        BatchJob bj;

        if (!this.BatchJobId)
        {
            return "@Retail:CdxBatchJobStatusNotAvailable";
        }

        select firstonly Status from bj where bj.RecId == this.BatchJobId;

        if (bj)
        {
            SysDictEnum dictEnum = new SysDictEnum(enumNum(BatchStatus));
            return dictEnum.index2Label(bj.Status);
        }
        else
        {
            return "@Retail:CdxBatchJobStatusNotAvailable";
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Stops deleting 9999 job
    /// </summary>
    /// <returns>False if the job is 9999, else True</returns>
    public boolean validateDelete()
    {
        #define.AllJobs('9999')
        BatchJob batchJob;
        boolean ret;
    
        ret = super();

        if (ret && this.Name == #AllJobs)
        {
            ret = checkFailed(strFmt("@Retail:ScheduleJobCannotBeModified", this.Name));
        }

        select firstOnly Status from batchJob
                where batchJob.RecId == this.BatchJobId;

        // Distribution schedule cannot be deleted while the related batch job is in one of the followings states: 'Waiting', 'Executing' or 'Canceling'.
        if (ret && (batchJob.Status == BatchStatus::Waiting || batchJob.Status == BatchStatus::Executing || batchJob.Status == BatchStatus::Cancelling))
        {
            error(strFmt("@Retail:RetailCdxDistributionScheduleCannotDeleteWithActiveBatchJob",
                    this.Name,
                    this.BatchJobId,
                    BatchStatus::Waiting,
                    BatchStatus::Executing,
                    BatchStatus::Cancelling));

            ret = false;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Stops renaming 9999 job
    /// </summary>
    /// <param name = "_fieldIdToCheck"></param>
    /// <returns>False if the job is 9999, else True</returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        #define.AllJobs('9999')
        boolean ret;
    
        ret = super(_fieldIdToCheck);

        if (ret && fieldNum(RetailConnSchedule, Name) == _fieldIdToCheck
            && this.orig().Name == #AllJobs
            && this.orig().Name != this.Name)
        {
            ret = checkFailed(strFmt("@Retail:ScheduleJobCannotBeModified", this.orig().Name));
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        BatchJob batchJob;

        ttsbegin;

        if (this.BatchJobId)
        {
            select forupdate firstonly batchJob
                where batchJob.recid == this.BatchJobId;

            batchJob.Caption = strFmt('%1 [%2]', batchJob.Caption, "@Retail:RetailCdxBatchJobWithNoMappedDistributionSchedule");
            batchJob.update();
        }

        ttscommit;

        super();

    }

]]></Source>
			</Method>
			<Method>
				<Name>getJobsSwitchingToFullSync</Name>
				<Source><![CDATA[
    internal static container getJobsSwitchingToFullSync(RefRecId _scheduleRecId)
    {
        Set jobsSwitchingToFullSync = new Set(Types::String);

        RetailCDXDataGroup dataGroup;
        RetailCDXScheduleDataGroup scheduleDataGroup;
        RetailConnScheduleJobMapping scheduleJob;
        RetailConnSchedulerJobTable job;
        RetailConnDatabaseProfile connDatabaseProfile;

        while select RecId from dataGroup
            join RecId from scheduleDataGroup
                where dataGroup.RecId == scheduleDataGroup.DataGroup
                    && scheduleDataGroup.Schedule == _scheduleRecId
            join RecId from scheduleJob
                where scheduleJob.ScheduleRecId == _scheduleRecId
            join JobId from job
                where job.IsUpload == NoYes::No
                    && scheduleJob.SchedulerJobId == job.JobId
                    && dataGroup.ChannelSchema == job.RetailConnChannelSchema
            exists join connDatabaseProfile
                where connDatabaseProfile.DataGroup == dataGroup.RecId
        {
            if (RetailCDXDataGroup::checkIfAnyChannelExists(dataGroup.RecId))
            {
                RetailCDXRowVersion lastSyncVer = RetailCDXDataSyncRowVersion::getRowVersion(dataGroup.RecId, job.jobId);

                boolean shouldSwitchToFullSync = RetailConnSchedulerJobTable::shouldSwitchToFullSync(job.jobId, dataGroup.RecId, lastSyncVer);

                if (shouldSwitchToFullSync)
                {
                    jobsSwitchingToFullSync.add(job.jobId);
                }
            }
        }

        container jobs;

        SetEnumerator jobsEnumerator = jobsSwitchingToFullSync.getEnumerator();

        while (jobsEnumerator.moveNext())
        {
            jobs += jobsEnumerator.current();
        }

        return jobs;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260718</DeveloperDocumentation>
	<Label>@RET260549</Label>
	<TitleField1>Name</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>ChannelManagement</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailConnAOSProfile</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailConnAOSProfile</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Active</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailConnAOSProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ScheduleType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Active</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCDXScheduleIsActive</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RetailConnAOSProfile</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ScheduleType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailCDXDownloadUpload</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BatchJobId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RetailConnAOSProfileIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RetailConnAOSProfile</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailConnAOSProfile</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>RetailConnAOSProfile</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailConnAOSProfile</Name>
					<Field>RetailConnAOSProfile</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BatchJob</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>BatchJob</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BatchJobId</Name>
					<Field>BatchJobId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>