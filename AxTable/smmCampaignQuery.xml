<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmCampaignQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class smmCampaignQuery extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>queryClassName</Name>
				<Source><![CDATA[
    edit ClassDescription queryClassName(boolean _set, className _className = '')
    {
        #define.campaignSelection('smmCampaignQueries_CampaignSelection')
        #define.contactPerson('smmCampaignQueries_ContactPerson')
        #define.contactPersonInterest('smmCampaignQueries_ContactPersonInterest')
        #define.mailings('smmCampaignQueries_Mailings')
        #define.questionnaire('smmCampaignQueries_Questionnaire')
        #define.quotationTable('smmCampaignQueries_QuotationTable')
        #define.salesTable('smmCampaignQueries_SalesTable')
        #define.smmBusRelTable('smmCampaignQueries_SmmBusRelTable')
        #define.DirPartyTable('smmCampaignQueries_DirPartyTable')
        #define.tMCallListTable('smmCampaignQueries_TMCallListTable')

        #define.CustTable('smmCampaignQueries_CustTable')
        #define.VendTable('smmCampaignQueries_VendTable')
        #define.LeadTable('smmCampaignQueries_LeadTable')
        #define.OpportunityTable('smmCampaignQueries_OpportunityTable')
        #define.QuotationCompetitor('smmCampaignQueries_Competitor')

        classId id;

        if (_set)
        {
            switch (_className)
            {
                // Campaign selections
                case "@SYS80298" : id = className2Id(#campaignSelection); break;
                // Contact person
                case "@SYS80299" : id = className2Id(#contactPerson); break;
                // Contact person Interest
                case "@SYS80300" : id = className2Id(#contactPersonInterest); break;
                // Mailings
                case "@SYS80301" : id = className2Id(#mailings); break;
                // Questionnaire
                case "@SYS80302" : id = className2Id(#questionnaire); break;
                // Quotations
                case "@SYS80163" : id = className2Id(#quotationTable); break;
                // Sales order table
                case "@SYS12847" : id = className2Id(#salesTable); break;
                // Business relation
                case "@SYS80138" : id = className2Id(#smmBusRelTable); break;
                // Directories
                case "@SYS105155" : id = className2Id(#DirPartyTable); break;
                // Call list table
                case "@SYS80303" : id = className2Id(#tMCallListTable); break;

                // Customers
                case "@SYS11307" : id = className2Id(#CustTable); break;
                // Vendors
                case "@SYS9449" : id = className2Id(#VendTable); break;
                // Leads
                case "@SYS103010" : id = className2Id(#LeadTable); break;
                // Opportunities
                case "@SYS81484" : id = className2Id(#OpportunityTable); break;
                // Competitors
                case "@SYS79821" : id = className2Id(#QuotationCompetitor); break;
            }

            if (id)
            {
                this.QueryClId = id;
            }
        }

        switch (this.QueryClId)
        {
            // // Campaign selections
            case className2Id(#campaignSelection)     : return "@SYS80298";
            // Contact person
            case className2Id(#contactPerson)         : return "@SYS80299";
            // Contact person Interest
            case className2Id(#contactPersonInterest) : return "@SYS80300";
            // Mailings
            case className2Id(#mailings)              : return "@SYS80301";
            // Questionnaire
            case className2Id(#questionnaire)         : return "@SYS80302";
            // Quotations
            case className2Id(#quotationTable)        : return "@SYS80163";
            // Sales order table
            case className2Id(#salesTable)            : return "@SYS12847";
            // Business relation
            case className2Id(#smmBusRelTable)        : return "@SYS80138";
            // Directories
            case className2Id(#DirPartyTable)        : return "@SYS105155";
            // Call list table
            case className2Id(#tMCallListTable)       : return "@SYS80303";

            // Customers
            case className2Id(#CustTable)            : return "@SYS11307";
            // Vendors
            case className2Id(#VendTable)            : return "@SYS9449";
            // Leads
            case className2Id(#LeadTable)            : return "@SYS103010";
            // Opportunities
            case className2Id(#OpportunityTable)     : return "@SYS81484";
            // Competitors
            case className2Id(#QuotationCompetitor)  : return "@SYS79821";
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        #define.blank(' ')
        #define.and('AND')
        #define.or('OR')

        boolean ret;

        ret = super();

        if (strfind(this.NameId, '+-()_#*', 1, strlen(this.NameId)))
        {
            // Illegal characters in name
            ret = checkFailed("@SYS82309");
        }

        if (strfind(this.NameId, #blank, 1, strlen(this.NameId)))
        {
            // Blanks are not allowed in the name
            ret = checkFailed("@SYS82308");
        }

        if (strscan(strupr(this.NameId), #blank + #or + #blank, 1, strlen(this.NameId)) ||
            substr(strupr(this.NameId), 1, 3) == #or + #blank ||
            substr(strupr(this.NameId), strlen(this.NameId) - 2, 3) == #blank + #or)
        {
            // The keyword OR must not be used in the query expression
            ret = checkFailed("@SYS81940");
        }

        if (strscan(strupr(this.NameId), #blank + #and + #blank, 1, strlen(this.NameId)) ||
            substr(strupr(this.NameId), 1, 4) == #and + #blank ||
            substr(strupr(this.NameId), strlen(this.NameId) - 3, 4) == #blank + #and)
        {
            // The keyword AND must not be used in the query expression
            ret = checkFailed("@SYS81941");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildClassLookup</Name>
				<Source><![CDATA[
        public static container buildClassLookup()
    {
        #define.campaignSelection('smmCampaignQueries_CampaignSelection')
        #define.contactPerson('smmCampaignQueries_ContactPerson')
        #define.contactPersonInterest('smmCampaignQueries_ContactPersonInterest')
        #define.mailings('smmCampaignQueries_Mailings')
        #define.questionnaire('smmCampaignQueries_Questionnaire')
        #define.quotationTable('smmCampaignQueries_QuotationTable')
        #define.salesTable('smmCampaignQueries_SalesTable')
        #define.smmBusRelTable('smmCampaignQueries_SmmBusRelTable')
        #define.DirPartyTable('smmCampaignQueries_DirPartyTable')
        #define.tMCallListTable('smmCampaignQueries_TMCallListTable')
        #define.CustTable('smmCampaignQueries_CustTable')
        #define.VendTable('smmCampaignQueries_VendTable')
        #define.LeadTable('smmCampaignQueries_LeadTable')
        #define.OpportunityTable('smmCampaignQueries_OpportunityTable')
        #define.QuotationCompetitor('smmCampaignQueries_Competitor')

        container classes;

        classes = smmCampaignQuery::insertClassInContainer(classes, #campaignSelection, "@SYS80298"); //Campaign selections
        classes = smmCampaignQuery::insertClassInContainer(classes, #contactPerson, "@SYS80299"); // Contact person
        classes = smmCampaignQuery::insertClassInContainer(classes, #contactPersonInterest, "@SYS80300"); // Contact person Interest
        classes = smmCampaignQuery::insertClassInContainer(classes, #mailings, "@SYS80301"); // Mailings
        classes = smmCampaignQuery::insertClassInContainer(classes, #questionnaire, "@SYS80302"); // Questionnaire
        classes = smmCampaignQuery::insertClassInContainer(classes, #quotationTable, "@SYS80163"); // Quotations
        classes = smmCampaignQuery::insertClassInContainer(classes, #salesTable, "@SYS12847"); // Sales order table
        classes = smmCampaignQuery::insertClassInContainer(classes, #smmBusRelTable, "@SYS80138"); // Business relation

        classes = smmCampaignQuery::insertClassInContainer(classes, #CustTable, "@SYS11307"); // Customers
        classes = smmCampaignQuery::insertClassInContainer(classes, #VendTable, "@SYS9449"); // Vendors
        classes = smmCampaignQuery::insertClassInContainer(classes, #LeadTable, "@SYS103010"); // Leads
        classes = smmCampaignQuery::insertClassInContainer(classes, #OpportunityTable, "@SYS81484"); // Opportunities
        classes = smmCampaignQuery::insertClassInContainer(classes, #QuotationCompetitor, "@SYS79821"); // Competitor

        classes = smmCampaignQuery::insertClassInContainer(classes, #DirPartyTable, "@SYS105155"); // Directories
        classes = smmCampaignQuery::insertClassInContainer(classes, #tMCallListTable, "@SYS80303"); // Call list table
        return classes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
        public static boolean exist(smmCampaignId _campaignId, smmCampaignQueryName _queryName)
    {
        smmCampaignQuery smmCampaignQueries;

        if (_campaignId)
        {
            select firstonly CampaignId, NameId, RecId from smmCampaignQueries
                where smmCampaignQueries.CampaignId == _campaignId &&
                      smmCampaignQueries.NameId     == _queryName;

            if (smmCampaignQueries.RecId)
            {
                return true;
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        public static smmCampaignQuery find(smmCampaignId _queryId, boolean _forUpdate = false)
    {
        smmCampaignQuery campaignQuery = null;

        if (_queryId)
        {
            campaignQuery.selectForUpdate(_forUpdate);

            select firstonly campaignQuery
                index hint CampaignIdNameIdx
                where campaignQuery.CampaignId == _queryId;
        }

        return campaignQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertClassInContainer</Name>
				<Source><![CDATA[
        static private container insertClassInContainer(container _classes, className _className, Description _description)
    {
        return _classes + [_description];
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SmmMA</ConfigurationKey>
	<DeveloperDocumentation>@SYS124801</DeveloperDocumentation>
	<FormRef>smmCampaignTargetContacts</FormRef>
	<Label>@SYS80209</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>CampaignId</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>CampaignIdNameIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>CampaignIdNameIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>smmCampaignTempSelection</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>smmCampaignTempSelection</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CampaignId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NameId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AllFields</Name>
			<Label>@SYS6047</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CampaignId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NameId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QueryClId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS80392</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CampaignId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CampaignId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmCampaignId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmCampaignQueryDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NameId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmCampaignQueryName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>QueryClId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ClassId</ExtendedDataType>
			<Label>@SYS24668</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CampaignIdNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CampaignId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>NameId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmCampaignTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>smmCampaignTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>smmCampaignTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>smmCampaignQuery</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CampaignId</Name>
					<SourceEDT>smmCampaignId</SourceEDT>
					<Field>CampaignId</Field>
					<RelatedField>CampaignId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CampaignIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>