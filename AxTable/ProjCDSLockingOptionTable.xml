<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjCDSLockingOptionTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjCDSLockingOptionTable extends common
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>get</Name>
				<Source><![CDATA[
    public static boolean get(ProjCDSLockingOption _option)
    {
        ProjCDSLockingOptionTable lockingOptionTable;

        select firstonly RecId from lockingOptionTable where lockingOptionTable.LockingOption == _option;

        return lockingOptionTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>set</Name>
				<Source><![CDATA[
    public static void set(ProjCDSLockingOption _option, boolean _set)
    {
        if (_set)
        {
            if (!ProjCDSLockingOptionTable::get(_option))
            {
                ttsbegin;
                ProjCDSLockingOptionTable lockingOptionTable;
                lockingOptionTable.LockingOption = _option;
                lockingOptionTable.insert();
                ttscommit;
            }
        }
        else
        {
            ttsbegin;
            ProjCDSLockingOptionTable lockingOptionTable;
            delete_from lockingOptionTable where lockingOptionTable.LockingOption == _option;
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>LockEditContracts_OnModified</Name>
				<Source><![CDATA[
    [FormControlEventHandler(formControlStr(ProjCDSParameters, LockEditContracts), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockEditProjects), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockCreateSubprojects), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockCollaborationWorkspace), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockProjectQuotations), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockWorkBreakdownStructure), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockForecasts), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockProjectBudget), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockProjectResourcing), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockCreateInvoiceProposals), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockAdjustments), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockOnAccountTransactions), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockTimesheets), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockHourJournals), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockExpenseJournals), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockItemJournals), FormControlEventType::Modified),
    FormControlEventHandler(formControlStr(ProjCDSParameters, LockFeeJournals), FormControlEventType::Modified)]
    public static void LockEditContracts_OnModified(FormControl sender, FormControlEventArgs e)
    {
        ProjCDSLockingOption option;
        FormCheckBoxControl senderCheckbox = sender as FormCheckBoxControl;

        if (senderCheckbox)
        {
            boolean value = senderCheckbox.value();

            switch (senderCheckbox.name())
            {
                // Projects and Contracts Group
                case FormControlStr(ProjCDSParameters, LockEditContracts):
                    option = ProjCDSLockingOption::EditContracts;
                    break;
                case formControlStr(ProjCDSParameters, LockEditProjects):
                    option = ProjCDSLockingOption::EditProjects;
                    break;
                case FormControlStr(ProjCDSParameters, LockCreateSubprojects):
                    option = ProjCDSLockingOption::CreateSubprojects;
                    break;
                case formControlStr(ProjCDSParameters, LockCollaborationWorkspace):
                    option = ProjCDSLockingOption::CollaborationWorkspace;
                    break;

                // Planning Group
                case formControlStr(ProjCDSParameters, LockProjectQuotations):
                    option = ProjCDSLockingOption::ProjectQuotations;
                    break;
                case formControlStr(ProjCDSParameters, LockWorkBreakdownStructure):
                    option = ProjCDSLockingOption::WorkBreakdownStructure;
                    break;
                case formControlStr(ProjCDSParameters, LockForecasts):
                    option = ProjCDSLockingOption::Forecasts;
                    break;
                case formControlStr(ProjCDSParameters, LockProjectBudget):
                    option = ProjCDSLockingOption::ProjectBudget;
                    break;
                case formControlStr(ProjCDSParameters, LockProjectResourcing):
                    option = ProjCDSLockingOption::ProjectResourcing;
                    break;

                // Maintain Group
                case formControlStr(ProjCDSParameters, LockCreateInvoiceProposals):
                    option = ProjCDSLockingOption::CreateInvoiceProposals;
                    break;
                case formControlStr(ProjCDSParameters, LockAdjustments):
                    option = ProjCDSLockingOption::Adjustments;
                    break;
                case formControlStr(ProjCDSParameters, LockOnAccountTransactions):
                    option = ProjCDSLockingOption::OnAccountTransactions;
                    break;

                // Time Group
                case formControlStr(ProjCDSParameters, LockTimesheets):
                    option = ProjCDSLockingOption::Timesheets;
                    break;
                case formControlStr(ProjCDSParameters, LockHourJournals):
                    option = ProjCDSLockingOption::HourJournals;
                    break;

                // Journals Group
                case formControlStr(ProjCDSParameters, LockExpenseJournals):
                    option = ProjCDSLockingOption::ExpenseJournals;
                    break;
                case formControlStr(ProjCDSParameters, LockItemJournals):
                    option = ProjCDSLockingOption::ItemJournals;
                    break;
                case formControlStr(ProjCDSParameters, LockFeeJournals):
                    option = ProjCDSLockingOption::FeeJournals;
                    break;

                // Other
                default:
                    // not a recognized control
                    return;
            }

            ProjCDSLockingOptionTable::set(option, value);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@Proj:ProjCDSLockingOptionTableDeveloperDoc</DeveloperDocumentation>
	<Label>@Proj:ProjCDSLockingOptionTableLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>LockingOption</TitleField1>
	<CacheLookup>Found</CacheLookup>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryIndex>LockingOption</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LockingOption</Name>
			<EnumType>ProjCDSLockingOption</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LockingOption</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>LockingOption</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>