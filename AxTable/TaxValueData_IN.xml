<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxValueData_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxValueData_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets default value for certain fields
    /// </summary>
    public void initValue()
    {
        super();
        this.IsCalculate            = NoYes::Yes;
        this.IsPartOfTurnOver       = NoYes::Yes;
        this.CalcUncalcPostedTrans  = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates fields
    /// </summary>
    /// <param name="_fieldName">
    /// The name of the field to validate.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index of the field; optional.
    /// </param>
    /// <returns>
    /// Returns true if the field passes value validation; otherwise, false.
    /// </returns>
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean                 ret;
        ThresholdSections_IN    thresholdSection;

        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(TaxValueData_IN, validFrom):
                    //When user tries to enter tax value effective from date which is less than effective to date
                    if (this.ValidTo && this.ValidFrom > this.ValidTo)
                    {
                        ret = ret && checkFailed("@SYS4003305");
                    }

                    //Check period overlap between tax data and attached threshold section
                    select firstOnly RecId from thresholdSection
                        where thresholdSection.RecId == this.ThresholdSections
                            && !((thresholdSection.ValidTo && thresholdSection.ValidTo >= this.ValidFrom && thresholdSection.ValidFrom <= this.ValidFrom)
                                ||(!thresholdSection.ValidTo && thresholdSection.ValidFrom <= this.ValidFrom));
                    if (thresholdSection.RecId)
                    {
                        ret = ret && checkFailed("@SYS4003422");
                    }

                    break;

                case fieldStr(TaxValueData_IN, validTo):
                    //When user tries to enter tax value effective to date that is earlier than effective from date
                    if (this.ValidTo && this.ValidFrom > this.ValidTo)
                    {
                        ret = ret && checkFailed("@SYS4003306");
                    }

                    //Check period overlap between tax data and attached threshold section
                    select firstOnly RecId from thresholdSection
                        where thresholdSection.RecId == this.ThresholdSections
                            && !(!thresholdSection.ValidTo || (thresholdSection.ValidTo >= this.ValidTo && this.ValidTo));
                    if (thresholdSection.RecId)
                    {
                        ret = ret && checkFailed("@SYS4003423");
                    }

                    break;

                default:

                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates records before saving
    /// </summary>
    /// <returns>
    /// Boolean
    /// </returns>
    public boolean validateWrite()
    {
        boolean                         ret;
        TaxValueData_IN                 taxValueData;

        ret = super();
        if (ret)
        {
            //When PAN status and overlook is same, there should be no date range conflict for the tax data value for each TaxValuethresholdProfile_IN
            select firstOnly RecId from taxValueData
                where taxValueData.PANTaxStatus_IN  == this.PANTaxStatus_IN
                    && taxValueData.IsOverLook      == this.IsOverLook
                    && taxValueData.SourceReferenceTableId  == this.SourceReferenceTableId
                    && taxValueData.SourceReferenceRecId    == this.SourceReferenceRecId
                    && taxValueData.ThresholdSections       == this.ThresholdSections
                    && taxValueData.RecId                   != this.RecId
                    && !((taxValueData.ValidTo < this.ValidFrom && taxValueData.ValidTo)
                        || (taxValueData.ValidFrom > this.ValidTo && this.ValidTo));
            if (taxValueData.RecId)
            {
                ret = checkFailed("@SYS4003424");
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsByThresholdSection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether there are records of table <c>TaxValueData_IN</c> being attached to specified threshold section or not.
    /// </summary>
    /// <param name="_thresholdSectionRecId">
    /// RecId of threshold section
    /// </param>
    /// <returns>
    /// boolean
    /// </returns>
    public static boolean existsByThresholdSection(ThresholdSectionsRecId_IN _thresholdSectionRecId)
    {
        TaxValueData_IN taxValueData;

        if (_thresholdSectionRecId)
        {
            select firstOnly RecId from taxValueData
                where taxValueData.ThresholdSections == _thresholdSectionRecId;
        }

        return taxValueData.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findThreshholdSection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the <c>TaxValueData_IN</c> table for the specified record id.
    /// </summary>
    /// <param name="_thresholdSection">
    /// The threshold section recid.
    /// </param>
    /// <param name="_sourceReferenceTableId">
    /// The source reference table id.
    /// </param>
    /// <param name="_sourceReferenceRecId">
    /// The source reference recid.
    /// </param>
    /// <returns>
    /// A cursor of <c>TaxValueData_IN</c> table.
    /// </returns>
    public static TaxValueData_IN findThreshholdSection(
    RefRecId                _thresholdSection,
    RefTableID              _sourceReferenceTableId,
    RefRecId                _sourceReferenceRecId
    )
    {
        TaxValueData_IN taxValueData;
    
        select firstOnly taxValueData
           where taxValueData.ThresholdSections == _thresholdSection
           && taxValueData.SourceReferenceTableId == _sourceReferenceTableId
           && taxValueData.SourceReferenceRecId == _sourceReferenceRecId;
    
        return taxValueData;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4003430</DeveloperDocumentation>
	<Label>@SYS4003428</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ValidFrom</TitleField1>
	<TitleField2>ValidTo</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>SourceIdx</ClusteredIndex>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Tax</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsOverLook</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CalcUncalcPostedTrans</Name>
			<Label>@SYS4003416</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalcUncalcPostedTrans</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS4003429</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCalculate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPartOfTurnOver</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxCodeEffectiveness</Name>
			<Label>@SYS4003433</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThresholdSections</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsOverLook</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxValue</Name>
			<Label>@SYS4003407</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PANTaxStatus_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CalcUncalcPostedTrans</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalcUncalcPostedTrans_IN</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TaxValueDataINCalcUncalcPostedTransHelpText</HelpText>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCalculate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IsCalculate_IN</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TaxValueDataINCalculateTaxHelpText</HelpText>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsOverLook</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IsOverLook_IN</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TaxValueDataINOverlookThresholdHelpText</HelpText>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPartOfTurnOver</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IsPartOfTurnOver_IN</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TaxValueDataINIncludeInTurnoverBaseHelpText</HelpText>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PANTaxStatus_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<HelpText>@TaxWithholdParameters:TaxValueDataINPANStatusHelpText</HelpText>
			<EnumType>PANTaxStatus_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReasonCode</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TaxWithholdReasonCode_IN</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TaxValueDataINReasonCodeHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceReferenceRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceReferenceTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxValue_IN</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TaxValueDataINTaxValueHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ThresholdSections</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxValidFrom_IN</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TaxValueDataINTaxEffectiveFromHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxValidTo_IN</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TaxValueDataINTaxEffectiveToHelpText</HelpText>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SourceIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceReferenceTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceReferenceRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ThresholdSections</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidTo</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PANTaxStatus_IN</DataField>
					<Optional>Yes</Optional>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>IsOverLook</DataField>
					<Optional>Yes</Optional>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ThresholdSectionsIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ThresholdSections</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>TaxValueThresholdProfile_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxValueThresholdProfile_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxValueThresholdProfile_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxValueData_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceReferenceTableId</Name>
					<Field>SourceReferenceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceReferenceRecId</Name>
					<Field>SourceReferenceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ThresholdSections_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ThresholdSections_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ThresholdSections</Name>
					<Field>ThresholdSections</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>