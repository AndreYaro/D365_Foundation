<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WMSTransport</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WMSTransport extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Marks the current transport as activated.
    /// </summary>
    /// <param name="_updateShipmentStatus">
    /// true if the shipment status should be updated; otherwise, false.
    /// </param>
    public void activate(boolean _updateShipmentStatus = true)
    {
        WMSShipment         wmsShipment;
        WMSOrderTrans       wmsOrderTrans;

        if (this.ExpeditionStatus != WMSExpeditionStatus::Registered)
        {
            throw(error(strFmt("@SYS50359", this.wmsPalletId, this.TransportId)));
        }

        while select forupdate wmsOrderTrans
            where wmsOrderTrans.ExpeditionStatus  == WMSExpeditionStatus::Registered
            &&    wmsOrderTrans.RouteId           == this.TransportId
            &&    wmsOrderTrans.ShipmentId        == this.ShipmentId
            &&    wmsOrderTrans.FullPallet
        {
            wmsOrderTrans.activate();
        }

        this.ExpeditionStatus   = WMSExpeditionStatus::Activated;
        this.ActivationDateTime  = DateTimeUtil::getSystemDateTime();
        this.update();

        if (_updateShipmentStatus && this.ShipmentId)
        {
            wmsShipment = WMSShipment::find(this.ShipmentId, true);
            wmsShipment.setStatus(NoYes::No, NoYes::Yes);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>activateRefill</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates refills of picking locations if it is required.
    /// </summary>
    public void activateRefill()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>createInTransportLineArrived</Name>
				<Source><![CDATA[
    public void createInTransportLineArrived(
        InventTrans         _inventTrans,
        WMSLocation         _toLocation,
        InventTransOrigin   _inventTransOrigin = _inventTrans.inventTransOrigin())
    {
        WMSOrder                wmsOrder;
        InventDim               inventDimFrom = _inventTrans.inventDim();
        InventDim               inventDimTo;

        inventDimTo.data(inventDimFrom);
        inventDimTo.InventLocationId    = _toLocation.InventLocationId;
        inventDimTo.initFromInventLocation(inventDimTo.inventLocation());
        inventDimTo.wmsLocationId       = _toLocation.wmsLocationId;
        inventDimTo                     = InventDim::findOrCreate(inventDimTo);

        wmsOrder = WMSOrder::createTransportOrder(_inventTrans.ItemId,inventDimFrom.InventDimId, inventDimTo.InventDimId, _inventTrans.Qty, _inventTransOrigin, NoYes::No
            , _inventTrans.PdsCWQty
            );
        _inventTrans.TransChildType   = InventTransChildType::WMSOrder;
        _inventTrans.TransChildRefId  = wmsOrder.OrderId;
        _inventTrans.update(NoYes::Yes);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromLocation</Name>
				<Source><![CDATA[
    public WMSLocation fromLocation(boolean _forUpdate = false)
    {
        return WMSLocation::find(this.FromLocation, this.FromInventLocationId ,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromLocations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the tranport based on the from and to <c>WMSLocation</c> locations.
    /// </summary>
    /// <param name="_fromLocation">
    /// The <c>WMSLocation</c> location that the transport is from.
    /// </param>
    /// <param name="_toLocation">
    /// The <c>WMSLocation</c> location that the transport is to.
    /// </param>
    public void initFromLocations(
        WMSLocation _fromLocation,
        WMSLocation _toLocation)
    {
        this.FromInventLocationId   = _fromLocation.InventLocationId;
        this.FromLocation           = _fromLocation.wmsLocationId;
        this.ToInventLocationId     = _toLocation.InventLocationId;
        this.ToLocation             = _toLocation.wmsLocationId;
        this.InputLocation          = _toLocation.InputLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initHeights</Name>
				<Source><![CDATA[
    public void initHeights()
    {
        this.FromHeight = this.fromLocation().AbsoluteHeight;
        this.ToHeight   = this.toLocation().AbsoluteHeight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPhysicalUpdated</Name>
				<Source><![CDATA[
    public NoYes isPhysicalUpdated()
    {
        return (this.ExpeditionStatus == WMSExpeditionStatus::Picked ||
                this.ExpeditionStatus == WMSExpeditionStatus::Staged ||
                this.ExpeditionStatus == WMSExpeditionStatus::Loaded ||
                this.ExpeditionStatus == WMSExpeditionStatus::Complete);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the item ID of the related record in the <c>WMSOrderTrans</c> table.
    /// </summary>
    /// <returns>
    /// The item ID of the related <c>WMSOrderTrans</c> record.
    /// </returns>
    /// <remarks>
    /// This method will return an empty string if there is more than one related <c>WMSOrderTrans</c>
    /// record.
    /// </remarks>
    display public server ItemId itemId()
    {
        WMSOrderTrans       wmsOrderTrans;
        ItemId              itemId = '';

        while select ItemId from wmsOrderTrans
            group by ItemId
            where wmsOrderTrans.RouteId      == this.TransportId
               && wmsOrderTrans.FullPallet
        {
            if (itemId)
            {
                return '';  // multiple items
            }
            itemId = wmsOrderTrans.ItemId;
        }
        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the quantity on this transport of the specified item and inventory dimensions.
    /// </summary>
    /// <param name="_itemId">
    /// The item for which the quantity is calculated.
    /// </param>
    /// <param name="_inventDim">
    /// An <c>InventDim</c> record that holds the inventory dimension values for which to calculated the
    /// quantity.
    /// </param>
    /// <param name="_inventDimParm">
    /// An <c>InventDimParm</c> record that specifies which inventory dimensions to include when
    /// calculating the quantity.
    /// </param>
    /// <returns>
    /// The quantity of the specified item and dimensions.
    /// </returns>
    public InventQty itemQty(
        ItemId          _itemId,
        InventDim       _inventDim,
        InventDimParm   _inventDimParm)
    {
        WMSOrderTrans       wmsOrderTrans;
        InventDim           inventDim;

        select sum(Qty) from wmsOrderTrans
            where wmsOrderTrans.RouteId      == this.TransportId
               && wmsOrderTrans.FullPallet
               && wmsOrderTrans.ItemId       == _itemId
            #InventDimExistsJoin(WMSOrderTrans.inventDimId, inventDim, _inventDim, _inventDimParm);

        return wmsOrderTrans.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lockOperatorWorker</Name>
				<Source><![CDATA[
    public boolean lockOperatorWorker(HcmWorkerRecId _worker = DirPersonUserEx::findUserWorkerReference())
    {
        if (this.OperatorWorker && this.OperatorWorker != _worker)
        {
            return checkFailed(strFmt("@SYS50547", this.wmsPalletId, this.OperatorWorker, this.TransportId));
        }

        if (this.OperatorWorker == 0)
        {            
            this.OperatorWorker = _worker;
            this.update();
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustActivateRefill</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether refills should be started automatically.
    /// </summary>
    /// <returns>
    /// true if refills should be started automatically; otherwise, false.
    /// </returns>
    public boolean mustActivateRefill()
    {
        WMSLocation wmsLocationTo;

        wmsLocationTo = WMSLocation::find(this.ToLocation,this.ToInventLocationId);

        if (wmsLocationTo.LocationType != WMSLocationType::Pick)
        {
            return false;
        }

        return (WMSStoreArea::find(wmsLocationTo.PickingAreaId).AutomaticRefill);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfLines</Name>
				<Source><![CDATA[
    public Integer numberOfLines()
    {
        WMSOrderTrans   wmsOrderTrans;

        select count(RecId) from wmsOrderTrans
            where wmsOrderTrans.RouteId == this.TransportId;

        return any2int(wmsOrderTrans.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWItemQty</Name>
				<Source><![CDATA[
    public PdsCWInventQty pdsCWItemQty(
        ItemId          _itemId,
        InventDim       _inventDim,
        InventDimParm   _inventDimParm)
    {
        WMSOrderTrans       wmsOrderTrans;
        InventDim           inventDim;

        select sum(PdsCWQty) from wmsOrderTrans
            where wmsOrderTrans.RouteId      == this.TransportId
               && wmsOrderTrans.FullPallet
               && wmsOrderTrans.ItemId       == _itemId
            #InventDimExistsJoin(WMSOrderTrans.inventDimId, inventDim, _inventDim, _inventDimParm);

        return wmsOrderTrans.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPhysicalDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the physical dimensions of the <c>WMSTransport</c> record.
    /// </summary>
    /// <param name="_totalQty">
    /// The total quantity of items assigned to the transport.
    /// </param>
    /// <param name="_totalWeight">
    /// The total weight of the transport.
    /// </param>
    /// <param name="_totalVolume">
    /// The total volume of the transport.
    /// </param>
    /// <param name="_totalCWQty">
    /// The total catch weight quantity of items assigned to the transport.
    /// </param>
    /// <remarks>
    /// This method does not write the record.
    /// </remarks>
    public void setPhysicalDimensions(
        InventQty   _totalQty,
        Weight      _totalWeight,
        Volume      _totalVolume
        , PdsCWInventQty _totalCWQty = 0
        )
    {
        this.TotalQty       = _totalQty;
        this.PdsTotalCWQty  = _totalCWQty;
        this.TotalWeight    = _totalWeight;
        this.TotalVolume    = _totalVolume;
    }

]]></Source>
			</Method>
			<Method>
				<Name>start</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starts the transport.
    /// </summary>
    /// <param name="_worker">
    /// The ID of the worker that operates the transport; optional.
    /// </param>
    /// <param name="_forkLiftId">
    /// The ID of the forklift that is used for transport; optional.
    /// </param>
    /// <param name="_toPalletId">
    /// The ID of the destination pallet.
    /// </param>
    /// <remarks>
    /// By default, the <c>_toPalletId</c> parameter is the pallet ID of the transport; optional.
    /// </remarks>
    [SysObsolete('Functionality related to Warehouse Management II is not supported', false, 05\08\2021)]
    public void start(
        HcmWorkerRecId  _worker     = DirPersonUserEx::findUserWorkerReference(),
        WMSForkLiftId   _forkLiftId = '',
        WMSPalletId     _toPalletId = this.wmsPalletId)
    {
        WMSOrderTrans           wmsOrderTrans;
        WMSOrderTransType       wmsOrderTransType;
        boolean                 mustChangeToPallet = (_toPalletId && _toPalletId != this.wmsPalletId);

        if (this.ExpeditionStatus != WMSExpeditionStatus::Activated)
        {
            throw(error(strFmt("@SYS50357", this.wmsPalletId, this.TransportId)));
        }
                
        ttsbegin;
        this.ExpeditionStatus   = WMSExpeditionStatus::Started;
        this.OperatorWorker     = _worker;
        this.ForkLiftId         = _forkLiftId;
        this.StartDateTime      = DateTimeUtil::getSystemDateTime();
        this.update();

        if (_worker && _forkLiftId)
        {
            WMSForkLift::setOperator(_forkLiftId, _worker);
        }

        if (this.ShipmentId || mustChangeToPallet)
        {
            while select forupdate wmsOrderTrans
                where (wmsOrderTrans.ExpeditionStatus == WMSExpeditionStatus::None
                     || wmsOrderTrans.ExpeditionStatus  == WMSExpeditionStatus::Registered
                     || wmsOrderTrans.ExpeditionStatus  == WMSExpeditionStatus::Activated)
                     && wmsOrderTrans.RouteId           == this.TransportId
                     && wmsOrderTrans.FullPallet
                     && wmsOrderTrans.ShipmentId        == this.ShipmentId
            {
                wmsOrderTransType = wmsOrderTrans.wmsOrderTransType();

                if (mustChangeToPallet)
                {
                    // Folloiwng method is obsoleted, comments this calling
                    //wmsOrderTransType.changeToPallet(_toPalletId);
                }

                if (this.ShipmentId)
                {
                    wmsOrderTransType.start();
                }
            }

            if (this.ShipmentId)
            {
                WMSShipment::find(this.ShipmentId, true).setStatus(NoYes::No, NoYes::Yes);
            }
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumUpLines</Name>
				<Source><![CDATA[
    public void sumUpLines()
    {
        WMSOrderTrans   wmsOrderTrans;
        boolean         cont = true;
        RecId           prevRecId = minInt();

        while (cont)
        {
            select firstonly forupdate wmsOrderTrans
                order by RecId
                where wmsOrderTrans.RouteId     == this.TransportId
                   && wmsOrderTrans.FullPallet
                   && wmsOrderTrans.RecId       > prevRecId;

            if (wmsOrderTrans)
            {
                prevRecId = wmsOrderTrans.RecId;
                wmsOrderTrans.sumUp();
            }
            else
            {
                cont = false;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>toLocation</Name>
				<Source><![CDATA[
    public WMSLocation toLocation(boolean _forUpdate = false)
    {
        return WMSLocation::find(this.ToLocation, this.ToInventLocationId ,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>wmsPallet</Name>
				<Source><![CDATA[
    public WMSPallet wmsPallet(boolean _forUpdate = false)
    {
        return WMSPallet::find(this.wmsPalletId,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>WMSTransport</c> table.
    /// </summary>
    /// <param name="_transportId">
    /// The transport ID of the record to find.
    /// </param>
    /// <param name="_update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The specified record in the <c>WMSTransport</c> table if found.
    /// </returns>
    public static WMSTransport find(
        WMSTransportId  _transportId,
        boolean         _update = false)
    {
        WMSTransport            wmsTransport;

        wmsTransport.selectForUpdate(_update);
        if (_transportId)
        {
            select firstonly wmsTransport
                where wmsTransport.TransportId == _transportId;
        }
        return wmsTransport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPalletTransport</Name>
				<Source><![CDATA[
    public static WMSTransport findPalletTransport(
        WMSPalletId     _wmsPalletId,
        boolean         _update = false)
    {
        WMSTransport            wmsTransport;

        wmsTransport.selectForUpdate(_update);
        if (_wmsPalletId)
        {
            select firstonly wmsTransport
                where wmsTransport.wmsPalletId      == _wmsPalletId
                  && (wmsTransport.ExpeditionStatus == WMSExpeditionStatus::Registered
                  ||  wmsTransport.ExpeditionStatus == WMSExpeditionStatus::Activated
                  ||  wmsTransport.ExpeditionStatus == WMSExpeditionStatus::Started);
        }
        return wmsTransport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupStartable</Name>
				<Source><![CDATA[
    public static void lookupStartable(
        FormStringControl   _ctrl,
        FieldId             _lookupField,
        HcmWorkerRecId      _worker = 0,
        WMSForkLiftId       _wmsForkLiftId = '',
        InventLocationId    _inventLocationId = '')
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(WMSTransport), _ctrl);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource = query.addDataSource(tableNum(WMSTransport));
        QueryBuildDataSource    queryBuildDataSourceWorker = queryBuildDataSource.addDataSource(tableNum(HcmWorker));
        QueryBuildRange         statusRange;
        FieldId                 fieldId;
        WMSForkLift             wmsForkLift = WMSForkLift::find(_wmsForkLiftId);

        queryBuildDataSourceWorker.relations(true);
        queryBuildDataSourceWorker.joinMode(JoinMode::OuterJoin);
        queryBuildDataSourceWorker.fetchMode(QueryFetchMode::One2One);

        sysTableLookup.addLookupfield(_lookupField);
        fieldId = fieldNum(WMSTransport, TransportId);
        if (fieldId != _lookupField)
        {
            sysTableLookup.addLookupfield(fieldId);
        }
        fieldId = fieldNum(WMSTransport, wmsPalletId);
        if (fieldId != _lookupField)
        {
            sysTableLookup.addLookupfield(fieldId);
        }
        fieldId = fieldNum(WMSTransport, FromLocation);
        if (fieldId != _lookupField)
        {
            sysTableLookup.addLookupfield(fieldId);
        }
        fieldId = fieldNum(WMSTransport, InputLocation);
        if (fieldId != _lookupField)
        {
            sysTableLookup.addLookupfield(fieldId);
        }

        if (_worker)
        {
            queryBuildDataSource.addRange(fieldNum(WMSTransport, OperatorWorker)).value(queryValue(_worker));
            queryBuildDataSource.addRange(fieldNum(WMSTransport, OperatorWorker)).value(SysQuery::valueEmptyString());
        }

        statusRange = queryBuildDataSource.addRange(fieldNum(WMSTransport, ExpeditionStatus));
        statusRange.value(strFmt('%1',  enum2Value(WMSExpeditionStatus::Activated)));

        wmsForkLift.initTransportHandlingQuery(queryBuildDataSource);

        if (_inventLocationId)
        {
            queryBuildDataSource.addRange(fieldNum(WMSTransport, FromInventLocationId)).value(queryValue(_inventLocationId));
        }

        queryBuildDataSource.sortClear();
        queryBuildDataSourceWorker.sortClear();

        queryBuildDataSourceWorker.addOrderByField(fieldNum(HcmWorker, PersonnelNumber), SortOrder::Descending);
        queryBuildDataSource.addOrderByField(fieldNum(WMSTransport, ExpeditionStatus), SortOrder::Descending);
        queryBuildDataSource.addOrderByField(fieldNum(WMSTransport, TransportPriority), SortOrder::Descending);
        queryBuildDataSource.addOrderByField(fieldNum(WMSTransport, ActivationDateTime));
        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transportsEnabled</Name>
				<Source><![CDATA[
    public static NoYes transportsEnabled()
    {
        return new DictConfigurationKey(configurationKeyNum(WMSPallet)).enabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
	<DeveloperDocumentation>@SYS123928</DeveloperDocumentation>
	<IsObsolete>Yes</IsObsolete>
	<Label>@SYS50342</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>wMSPalletId</TitleField1>
	<TitleField2>fromLocation</TitleField2>
	<Visible>No</Visible>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>TransportIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<PrimaryIndex>TransportIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>wMSPalletId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>transportType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>fromLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>toLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>expeditionStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Activation</Name>
			<Label>@SYS11887</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>activationDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FromGroup</Name>
			<Label>@SYS4083</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>fromInventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>fromLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>fromHeight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>transportId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>wMSPalletId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>transportType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>expeditionStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>transportPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>shipmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>totalQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>pdsTotalCWQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>totalWeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>totalVolume</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Statistics</Name>
			<Label>@SYS326</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>operatorWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>forkLiftId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>activationDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>startDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>endDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>To</Name>
			<Label>@SYS8828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>toInventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>toLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inputLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>toHeight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>activationDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ActivationDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>endDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>EndDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>expeditionStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<EnumType>WMSExpeditionStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>forkLiftId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WMSForkLiftId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>fromHeight</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>WMSHeight</ExtendedDataType>
			<Label>@SYS57849</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>fromInventLocationId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS25253</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>fromLocation</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>WMSLocationId</ExtendedDataType>
			<Label>@SYS54257</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>inputLocation</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>WMSLocationId</ExtendedDataType>
			<Label>@SYS50250</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>operatorWorker</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>pdsTotalCWQty</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>shipmentId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>WMSShipmentId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>startDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>StartDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>toHeight</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>WMSHeight</ExtendedDataType>
			<Label>@SYS57848</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>toInventLocationId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS8519</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>toLocation</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>WMSLocationId</ExtendedDataType>
			<Label>@SYS50351</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>totalQty</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>totalVolume</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Volume</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>totalWeight</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Weight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>transportId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WMSTransportId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>transportPriority</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WMSTransportPriority</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>transportType</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<EnumType>WMSTransportType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>wMSPalletId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WMSPalletId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PalletIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>wMSPalletId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>expeditionStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LocationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>toLocation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>toInventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>expeditionStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ShipmentIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>shipmentId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OperatorStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>operatorWorker</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>expeditionStatus</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transportType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>fromHeight</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransportIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>transportId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FromInventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>FromInventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSTransport</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>fromInventLocationId</Name>
					<Field>fromInventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>FromLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123929</EntityRelationshipRole>
			<RelatedTable>WMSLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>FromLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSTransport</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>fromInventLocationId</Name>
					<Field>fromInventLocationId</Field>
					<RelatedField>inventLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>fromLocation</Name>
					<Field>fromLocation</Field>
					<RelatedField>wMSLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_WMSTransport</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>operatorWorker</Name>
					<Field>operatorWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InputLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123913</EntityRelationshipRole>
			<RelatedTable>WMSLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InputLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSTransport</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>toInventLocationId</Name>
					<Field>toInventLocationId</Field>
					<RelatedField>inventLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inputLocation</Name>
					<Field>inputLocation</Field>
					<RelatedField>wMSLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ToInventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ToInventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSTransport</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>toInventLocationId</Name>
					<Field>toInventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ToLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123930</EntityRelationshipRole>
			<RelatedTable>WMSLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ToLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WMSTransport</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>toInventLocationId</Name>
					<Field>toInventLocationId</Field>
					<RelatedField>inventLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>toLocation</Name>
					<Field>toLocation</Field>
					<RelatedField>wMSLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WMSForkLift</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WMSForkLift</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>forkLiftId</Name>
					<Field>forkLiftId</Field>
					<RelatedField>forkLiftId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ForkLiftIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WMSPallet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WMSPallet</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>wMSPalletId</Name>
					<Field>wMSPalletId</Field>
					<RelatedField>wMSPalletId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PalletIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WMSShipment</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WMSShipment</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>shipmentId</Name>
					<Field>shipmentId</Field>
					<RelatedField>shipmentId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ShipmentIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>