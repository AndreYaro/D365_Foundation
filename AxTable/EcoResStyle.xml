<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResStyle</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResStyle extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record occurs in the <c>EcoResStyle</c> table.
    /// </summary>
    /// <param name="_style">
    /// The ID of the <c>EcoResStyle</c> record to find.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    static boolean exist(RefRecId _style)
    {
        if (!_style)
        {
            return false;
        }

        return (select firstonly RecId from ecoResStyle
                    where ecoResStyle.RecId == _style).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>EcoResStyle</c> table.
    /// </summary>
    /// <param name="_style">
    ///    The ID of the <c>EcoResStyle</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EcoResStyle</c> table; otherwise, an empty record.
    /// </returns>
    static EcoResStyle find(RefRecId _style, boolean _forUpdate = false)
    {
        EcoResStyle ecoResStyle;

        ecoResStyle.selectForUpdate(_forUpdate);

        if (0 != _style)
        {
            select firstonly ecoResStyle
                where ecoResStyle.RecId == _style;
        }
        return ecoResStyle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>EcoResStyle</c> table.
    /// </summary>
    /// <param name="_name">
    /// A value of the <c>Name</c> field of a <c>EcoResStyle</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>EcoResStyle</c> table; otherwise, an empty record.
    /// </returns>
    static EcoResStyle findByName(EcoResStyleName _name, boolean _forUpdate = false)
    {
        EcoResStyle  ecoResStyle;

        ecoResStyle.selectForUpdate(_forUpdate);

        if (_name)
        {
            select firstonly ecoResStyle
                where ecoResStyle.Name == _name;
        }

        return ecoResStyle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the go to main table form option to name lookup.
    /// </summary>
    /// <param name="_name">
    /// A <c>EcoResStyleName</c> value to look up the same value.
    /// </param>
    /// <remarks>
    /// This method opens the relevant Style form.
    /// </remarks>
    public static void jumpRef(EcoResStyleName _name)
    {
        Args args = new Args();
        args.lookupField(fieldNum(EcoResStyle, Name));
        args.lookupValue(_name);

        new MenuFunction(menuitemDisplayStr(RetailEcoResStyle), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a string with the label of the <c>EcoResStyleName</c> extended data type.
    /// </summary>
    /// <returns>
    /// A string that contains the label.
    /// </returns>
    static FieldLabel label()
    {
        return new SysDictType(extendedTypeNum(EcoResStyleName)).label();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays a lookup form to select a style for a product.
    /// </summary>
    /// <param name="_formControl">
    /// A control for which the lookup is performed.
    /// </param>
    /// <param name="_useLookupValue">
    /// True if filter should be used in the lookup; otherwise false.
    /// </param>
    /// <remarks>
    /// The styles that are displayed are chosen from the styles assigned to the product master.
    /// </remarks>
    public static void lookupName(FormControl _formControl, boolean _useLookupValue = false)
    {
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource  = query.addDataSource(tableNum(EcoResStyle));
        SysTableLookup          tableLookup = SysTableLookup::newParameters(tablenum(EcoResStyle), _formControl);
        tableLookup.addLookupfield(fieldnum(EcoResStyle, Name));
        tableLookup.parmQuery(query);
        tableLookup.parmUseLookupValue(_useLookupValue);
        tableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupProductVariantStyle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays a lookup form to select a style for a product variant.
    /// </summary>
    /// <param name="_formControl">
    /// A control for which the lookup is performed.
    /// </param>
    /// <param name="_productMaster">
    /// A value that specifies a product master to display in the lookup form.
    /// </param>
    /// <param name="_productDimensionAttribute">
    /// The ID of a record in the <c>EcoResProductDimensionAttribute</c> table that specifies the dimension
    /// attribute for which styles are displayed in the lookup form.
    /// </param>
    /// <returns>
    /// A <c>EcoResStyle</c> record.
    /// </returns>
    /// <remarks>
    /// The styles displayed are chosen from the styles assigned to the product master.
    /// </remarks>
    public static EcoResStyle lookupProductVariantStyle(
        FormControl             _formControl,
        RefRecId                _productMaster,
        RefRecId                _productDimensionAttribute)
    {
        SysReferenceTableLookup sysReferenceTableLookup;
        Query                   query;

        sysReferenceTableLookup = SysReferenceTableLookup::newParameters(tableNum(EcoResStyle), _formControl);
        sysReferenceTableLookup.addLookupfield(fieldNum(EcoResStyle, Name));

        query = new Query(queryStr(EcoResProductVariantStyleLookup));
        query.dataSourceTable(tableNum(EcoResProductMasterStyle)).rangeField(fieldNum(EcoResProductMasterStyle, StyleProductMaster)).value(queryValue(_productMaster));
        query.dataSourceTable(tableNum(EcoResProductMasterStyle)).rangeField(fieldNum(EcoResProductMasterStyle, StyleProductDimensionAttribute)).value(queryValue(_productDimensionAttribute));

        sysReferenceTableLookup.parmQuery(query);
        return sysReferenceTableLookup.performFormLookup() as EcoResStyle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrInsertTmpStrByProduct</Name>
				<Source><![CDATA[
    private static TmpMCRStr mcrInsertTmpStrByProduct(RefRecId _productId)
    {
        TmpMCRStr                               tmpMCRStr;
        EcoResStyle                             ecoResStyle;
        EcoResProductMasterStyle                ecoResProductMasterStyle;
        EcoResProductMasterDimValueTranslation  productMasterDimValueTranslation;

        if (_productId)
        {
            insert_recordset tmpMCRStr (String15, Str60, Str1260)
                select Name from  ecoResStyle
                    join ecoResProductMasterStyle
                        where ecoResProductMasterStyle.StyleProductMaster == _productId
                        && ecoResStyle.RecId == ecoResProductMasterStyle.Style
                    outer join Name, Description from productMasterDimValueTranslation
                        where ecoResProductMasterStyle.StyleProductMaster == productMasterDimValueTranslation.RecId
                        && productMasterDimValueTranslation.LanguageId == SystemParameters::getSystemLanguageId();
        }

        select firstonly tmpMCRStr; //needed due to insert_Recordset to set pointer at top.
        return tmpMCRStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrlookupByItemOrProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Looks up Style by item or product (no need for item if product is supplied).
    /// </summary>
    /// <param name="_formControl">
    /// A control for which a lookup is performed.
    /// </param>
    /// <param name="_itemId">
    /// An item for which the sizes are being looked up.
    /// </param>
    /// <param name="_product">
    /// A product for which the sizes are being looked up.
    /// </param>
    /// <remarks>
    /// If a product <c>RefRecId</c> is supplied, the Item will get disregarded.
    /// </remarks>
    public static void mcrlookupByItemOrProduct(
        FormControl             _formControl,
        ItemId                  _itemId,
        RefRecId                _product = 0)
    {
        SysTableLookup                      sysTableLookup = SysTableLookup::newParameters(tableNum(TmpMCRStr), _formControl);
        RefRecId                            productID = _product;
        TmpMCRStr                           tmpMCRStr;

        if (productID == 0 && _itemId)
        {
            productID = EcoResProductMaster::find(InventTable::find(_itemId).Product).RecId;
        }

        tmpMCRStr = EcoResStyle::mcrInsertTmpStrByProduct(productID);

        sysTableLookup.parmTmpBuffer(tmpMCRStr);
        sysTableLookup.addLookupfield(fieldNum(TmpMCRStr, String15));
        sysTableLookup.setLabel("@SYS28127");
        sysTableLookup.addLookupfield(fieldNum(TmpMCRStr, Str60));
        sysTableLookup.setLabel("@SYS25589");
        sysTableLookup.addLookupfield(fieldNum(TmpMCRStr, Str1260));
        sysTableLookup.setLabel("@SYS127587");

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveProductVariantStyle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>EcoResStyle</c> record.
    /// </summary>
    /// <param name="_styleName">
    /// The name of a style to find.
    /// </param>
    /// <param name="_productMaster">
    /// The ID of a <c>EcoResGenericProductMaster</c> record that identifies a product master for which the
    /// style is assigned.
    /// </param>
    /// <param name="_productDimensionAttribute">
    /// The ID of an <c>EcoResProductDimensionAttribute</c> record.
    /// </param>
    /// <returns>
    /// A <c>EcoResStyle</c> record.
    /// </returns>
    /// <remarks>
    /// This function is used to resolve a style name to the ID of a <c>EcoResStyle</c> record. It is
    /// resolved based on the styles assigned to a specified product master.
    /// </remarks>
    static EcoResStyle resolveProductVariantStyle(
        EcoResStyleName     _styleName,
        RefRecId            _productMaster,
        RefRecId            _productDimensionAttribute)
    {
        EcoResStyle              ecoResStyle;
        EcoResProductMasterStyle ecoResProductMasterStyle;

        select firstonly ecoResStyle
            where ecoResStyle.Name == _styleName
        exists join ecoResProductMasterStyle
            where ecoResProductMasterStyle.Style                            == ecoResStyle.RecId
               && ecoResProductMasterStyle.StyleProductMaster               == _productMaster
               && ecoResProductMasterStyle.StyleProductDimensionAttribute   == _productDimensionAttribute;

        if (!ecoResStyle.RecId)
        {
            // Assigning null to selectedRecord does not cause the kernel to receive a true NULL value, but rather
            // just an empty record. Return NULL directly so the kernel knows that the intent is to not clear the
            // selected value.
            return null;
        }

        return ecoResStyle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
        System.Text.RegularExpressions.Match regExMatch;
        str expectedFormat = '^#[a-fA-F0-9]{6}$';

        ret = super(_fieldIdToCheck);
    
        if (this.HexCode)
        {
            regExMatch = System.Text.RegularExpressions.Regex::Match(this.HexCode, expectedFormat);

            ret = regExMatch.get_Success();

            if (!ret)
            {
                ret = checkFailed("@Retail:RetailHexCodeValidationError");
            }

        }

        return ret;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>EcoResProductStyle</ConfigurationKey>
	<DeveloperDocumentation>@FPK270010</DeveloperDocumentation>
	<FormRef>EcoResProductMasterDimensionPerCompany</FormRef>
	<Label>@FPK270006</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Name</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>NameIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailStyleGroupTrans</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RetailStyleGroupTrans</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DisplayOrder</Name>
			<Label>@Retail:RetailGlobalDisplayOrder</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DisplayOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResStyleName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DisplayOrder</Name>
			<ExtendedDataType>RetailGlobalDisplayOrder</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Url</Name>
			<ExtendedDataType>MediaUrl</ExtendedDataType>
			<FeatureClass>RetailColorSwatchFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HexCode</Name>
			<ExtendedDataType>RetailHexCode</ExtendedDataType>
			<FeatureClass>RetailColorSwatchFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RefinerGroup</Name>
			<ExtendedDataType>RetailRefinerGroup</ExtendedDataType>
			<FeatureClass>RetailColorSwatchFeature</FeatureClass>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>