<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxReportTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>declarationNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the declaration number.
    /// </summary>
    /// <returns>
    /// The declaration number.
    /// </returns>
    /// <remarks>
    /// The number is in 340YYYYPPXXXX format, where YYYY - is fiscal year, PP - period code, XXXX -
    /// document number.
    /// </remarks>
    public display PreviousDeclaration_ES declarationNum()
    {
        #define.DocNumLength(4)
        #define.PeriodCodeLength(2)
        #define.DeclarationNumPrefix('340')

        return #DeclarationNumPrefix + int2str(year(this.ToDate)) +
            strRFix(int2str(mthofyr(this.ToDate)), #PeriodCodeLength, '0') + strRFix(this.DocumentNum, #DocNumLength, '0');
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (this.Reported)
        {
            this.updateReported();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOperationCode2012Supported</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the reporting period from date and to date fall within the period where cash payments should be reported.
    /// </summary>
    /// <returns>
    ///     true if the dates fall within the supported period; otherwise, false.
    /// </returns>
    public boolean isOperationCode2012Supported()
    {
        #TaxReport340

        return this.FromDate >= #OperationCodeSupportDate2012
            && this.ToDate >= #OperationCodeSupportDate2012;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidElectronic</Name>
				<Source><![CDATA[
    #define.Length(16)
    public boolean isValidElectronic(str _value)
    {
        if (_value && (strlen(_value) != #Length || strlen(_value) != strlen(strLRTrim(stralpha(_value)))))
        {
            return checkFailed(strfmt("@SYS324793"));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    #TaxReport340
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        if (_fieldId == fieldnum(TaxReportTable, DocumentNum) && this.DocumentNum)
        {
            this.DocumentNum = strRFix(this.DocumentNum, #DocumentNumLength, '0');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxBookName</Name>
				<Source><![CDATA[
    public display Description taxBookName()
    {
        return TaxBookTable::find(this.TaxBookTable).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalAmountAcquisition</Name>
				<Source><![CDATA[
    public Amount totalAmountAcquisition()
    {
        TaxReportLines  taxReportLines;

        select sum(TaxBase), sum(TaxAmount), sum(TaxAmountEq) from taxReportLines
            where  taxReportLines.RefRecId      == this.RecId
                && taxReportLines.Excluded == NoYes::No
                && !taxReportLines.CashInvoiceYear
                && taxReportLines.TaxBookType   == TaxBookType_ES::IncomingTax;

        return taxReportLines.TaxBase + taxReportLines.TaxAmount + taxReportLines.TaxAmountEq;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalAmountCashCollectables</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sums up the cash collected.
    /// </summary>
    /// <returns>
    ///     The total cash collected.
    /// </returns>
    public Amount totalAmountCashCollectables()
    {
        TaxReportLines taxReportLines;

        select sum(CashCollectable) from taxReportLines
            where taxReportLines.RefRecId == this.RecId
                && taxReportLines.Excluded == NoYes::No
                && taxReportLines.CashInvoiceYear;

        return taxReportLines.CashCollectable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalAmountDelivery</Name>
				<Source><![CDATA[
    public Amount totalAmountDelivery()
    {
        TaxReportLines  taxReportLines;

        select sum(TaxBase), sum(TaxAmount), sum(TaxAmountEq) from taxReportLines
            where  taxReportLines.RefRecId      == this.RecId
                && taxReportLines.Excluded == NoYes::No
                && !taxReportLines.CashInvoiceYear
                && taxReportLines.TaxBookType   == TaxBookType_ES::OutgoingTax;

        return taxReportLines.TaxBase + taxReportLines.TaxAmount + taxReportLines.TaxAmountEq;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalBaseAmount</Name>
				<Source><![CDATA[
    display TaxBase totalBaseAmount()
    {
        TaxReportLines  taxReportLines;

        select sum(TaxBase) from taxReportLines
            where taxReportLines.RefRecId == this.RecId
                 && taxReportLines.Excluded == NoYes::No
                 && !taxReportLines.CashInvoiceYear;

        return taxReportLines.TaxBase;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalOperAcquisition</Name>
				<Source><![CDATA[
    public Counter totalOperAcquisition()
    {
        TaxReportLines  taxReportLines;

        select count(RecId) from taxReportLines
            where  taxReportLines.RefRecId      == this.RecId
                && taxReportLines.Excluded      == NoYes::No
                && !taxReportLines.CashInvoiceYear
                && taxReportLines.TaxBookType   == TaxBookType_ES::IncomingTax;

        return any2int(taxReportLines.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalOperCashCollectables</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the number of <c>taxReportlines</c> having cash payment.
    /// </summary>
    /// <returns>
    ///     The number of taxreportlines with cash payment.
    /// </returns>
    public Counter totalOperCashCollectables()
    {
        TaxReportLines taxReportLines;

        select count(RecId) from taxReportLines
            where taxReportLines.RefRecId == this.RecId &&
                    taxReportLines.Excluded == NoYes::No &&
                    taxReportLines.CashInvoiceYear;

        return any2int(taxReportLines.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalOperDelivery</Name>
				<Source><![CDATA[
    public Counter totalOperDelivery()
    {
        TaxReportLines  taxReportLines;

        select count(RecId) from taxReportLines
            where  taxReportLines.RefRecId      == this.RecId
                && taxReportLines.Excluded      == NoYes::No
                && !taxReportLines.CashInvoiceYear
                && taxReportLines.TaxBookType   == TaxBookType_ES::OutgoingTax;

        return any2int(taxReportLines.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalVATAmount</Name>
				<Source><![CDATA[
    display TaxAmount totalVATAmount()
    {
        TaxReportLines  taxReportLines;

        select sum(TaxAmount) from taxReportLines
            where taxReportLines.RefRecId == this.RecId
                && taxReportLines.Excluded == NoYes::No
                && !taxReportLines.CashInvoiceYear;

        return taxReportLines.TaxAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalVATAmountEq</Name>
				<Source><![CDATA[
    display TaxAmount totalVATAmountEq()
    {
        TaxReportLines  taxReportLines;

        select sum(TaxAmountEq) from taxReportLines
            where taxReportLines.RefRecId == this.RecId
                && taxReportLines.Excluded == NoYes::No
                && !taxReportLines.CashInvoiceYear;

        return taxReportLines.TaxAmountEq;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        if (this.Reported)
        {
            this.updateReported();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateReported</Name>
				<Source><![CDATA[
    void updateReported()
    {
        this.ReportedDate   = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        this.ReportedBy     = curuserid();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    #TaxReport340
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldnum(TaxReportTable, Telephone):
                if (!TaxReportTable::isValidPhoneNum(this.Telephone, fieldpname(TaxReportTable, Telephone)))
                {
                    return false;
                }

                break;

            case fieldnum(TaxReportTable, DocumentNum):
                if (!TaxReportTable::isValidDocumentNum(this.DocumentNum, fieldpname(TaxReportTable, DocumentNum), #DocumentNumLength))
                {
                    return false;
                }

                break;

            case fieldnum(TaxReportTable, ElectronicCode):
                if (!this.isValidElectronic(this.ElectronicCode))
                {
                    return false;
                }

                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidDocumentNum</Name>
				<Source><![CDATA[
    #TaxReport340
    public static boolean isValidDocumentNum(str _value, str _propertyName, int _maxDocumentNumberLength)
    {
        if (_value && (strlen(_value) > _maxDocumentNumberLength || strnfind(_value, '1234567890', 1, _maxDocumentNumberLength)))
        {
            return checkFailed(strfmt("@SYS324794", _propertyName, _maxDocumentNumberLength));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidPhoneNum</Name>
				<Source><![CDATA[
    #TaxReport340
    public static boolean isValidPhoneNum(str _value, str _propertyName)
    {
        if (_value && (strlen(_value) != #TelephoneLength || strnfind(_value, '1234567890', 1, #TelephoneLength)))
        {
            return checkFailed(strfmt("@SYS324794", _propertyName, #TelephoneLength));
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>ES</CountryRegionCodes>
	<DeveloperDocumentation>@SYS324802</DeveloperDocumentation>
	<FormRef>TaxReportTable</FormRef>
	<Label>@SYS91781</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>TaxBookTable</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxBookTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Contact</Name>
			<Label>@SYS36902</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContactPerson</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Telephone</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Corrections</Name>
			<Label>@SYS23845</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplacementDeclaration</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PreviousDeclaration</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DeclarationPeriod</Name>
			<Label>@SYS324800</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocumentNum</Name>
			<Label>@SYS8434</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ElectronicCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxBookTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Numerals</Name>
			<Label>@SYS68453</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FirstNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PresentationType</Name>
			<Label>@SYS54931</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PresentationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reported</Name>
			<Label>@SYS17767</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Reported</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportedBy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ThresholdAmount</Name>
			<Label>@GLS3800254</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ThresholdAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransactionsIncluded</Name>
			<Label>@SYS91797</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPerson</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ContactPersonName_ES</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DocumentNum_ES</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ElectronicCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ElectronicCode_ES</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FirstNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS91796</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS24050</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LastNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS78014</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NumMethod</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxReportNumMethod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PresentationType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PresentationType_ES</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PreviousDeclaration</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PreviousDeclaration_ES</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReplacementDeclaration</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReplacementDeclaration_ES</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Reported</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Reported_ES</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReportedBy</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReportedBy_ES</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ReportedDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReportedDate_ES</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxBookTable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBookTableRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxPeriod</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxPeriod</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Telephone</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Telephone_ES</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ThresholdAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@SYS319347</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS14656</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxBookTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxBookTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxBookTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxBookTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>SpanishVATBooks</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>SpanishVATReportTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxBookTable</Name>
					<Field>TaxBookTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxPeriodHead</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxPeriodHead</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxPeriod</Name>
					<SourceEDT>TaxPeriod</SourceEDT>
					<Field>TaxPeriod</Field>
					<RelatedField>TaxPeriod</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxPeriodIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UserInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>UserInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReportedBy</Name>
					<SourceEDT>ReportedBy_ES</SourceEDT>
					<Field>ReportedBy</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>