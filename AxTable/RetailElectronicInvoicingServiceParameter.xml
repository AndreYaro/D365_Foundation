<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailElectronicInvoicingServiceParameter</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailElectronicInvoicingServiceParameter extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in <c>RetailElectronicInvoicingServiceParameter</c> table, creates the record if it does not exist.
    /// </summary>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailElectronicInvoicingServiceParameter</c> table.
    /// </returns>
    public static RetailElectronicInvoicingServiceParameter find(boolean _forUpdate = false)
    {
        RetailElectronicInvoicingServiceParameter parameter;

        if (_forUpdate)
        {
            parameter.selectForUpdate(_forUpdate);
        }

        select firstonly parameter
            where parameter.Key == 0;

        if (!parameter && !parameter.isTmp())
        {
            Company::createParameter(parameter);
        }

        return parameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>keyVaultParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>KeyVaultParameters</c> table record.
    /// </summary>
    /// <returns>The <c>KeyVaultParameters</c> table record.</returns>
    public KeyVaultParameters keyVaultParameters()
    {
        KeyVaultParameters keyVaultParameters;
        KeyVaultCertificateTable keyVaultCertificateTable;

        if (this.AadClientApplicationSecretName)
        {
            select firstonly keyVaultParameters
                exists join keyVaultCertificateTable
                    where keyVaultCertificateTable.Name == this.AadClientApplicationSecretName
                        && keyVaultCertificateTable.KeyVaultRef == keyVaultParameters.RecId;
        }

        return keyVaultParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefToKeyVaultParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Jumps to key vault parameters form.
    /// </summary>
    public void jumpRefToKeyVaultParameters()
    {
        Args args = new args();
        args.record(this.keyVaultParameters());

        new MenuFunction(menuItemDisplayStr(KeyVaultParameters), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates a field value.
    /// </summary>
    /// <param name = "_fieldName">A field name.</param>
    /// <param name = "_arrayIndex">An array index.</param>
    /// <returns>True if field value is valid; otherwise, false.</returns>
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(RetailElectronicInvoicingServiceParameter, IsEnabled):
                    if (this.IsEnabled)
                    {
                        ret = this.validateAadClientApplicationId() && this.validateAadClientApplicationSecretName();
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAadClientApplicationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates <c>AadClientApplicationId</c> field value.
    /// </summary>
    /// <returns>True if field value is valid; otherwise, false.</returns>
    private boolean validateAadClientApplicationId()
    {
        if (!this.AadClientApplicationId || guidFromString(this.AadClientApplicationId) == emptyGuid())
        {
            return checkFailed("@Retail:RetailElectronicInvoicingServiceParameterClientAppIdMsg");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAadClientApplicationSecretName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates <c>AadClientApplicationSecretName</c> field value.
    /// </summary>
    /// <returns>True if field value is valid; otherwise, false.</returns>
    private boolean validateAadClientApplicationSecretName()
    {
        if (!this.AadClientApplicationSecretName)
        {
            return checkFailed("@Retail:RetailElectronicInvoicingServiceParameterClientSecretMsg");
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@Retail:RetailElectronicInvoicingServiceParameterDevDoc</DeveloperDocumentation>
	<Label>@Retail:RetailElectronicInvoicingServiceParameterLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Parameter</TableGroup>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>Key</ClusteredIndex>
	<PrimaryIndex>Key</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsEnabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AadClientApplicationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AadClientApplicationSecretName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsEnabled</Name>
			<ExtendedDataType>RetailElectronicInvoicingServiceIsEnabled</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AadClientApplicationId</Name>
			<ExtendedDataType>RetailElectronicInvoicingServiceAadClientApplicationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AadClientApplicationSecretName</Name>
			<ExtendedDataType>RetailElectronicInvoicingServiceAadClientApplicationSecretName</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Key</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>KeyVaultSecretName</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>KeyVaultCertificateTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AadClientApplicationSecretName</Name>
					<Field>AadClientApplicationSecretName</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>