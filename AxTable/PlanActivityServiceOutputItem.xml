<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PlanActivityServiceOutputItem</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PlanActivityServiceOutputItem extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.InventDimDataAreaId    = curExt2dataareaid(tableNum(InventDim));
        this.ItemDataAreaId         = curExt2dataareaid(tableNum(InventDim));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        PlanActivityServiceOutputItem   planActivityServiceOutputItem;
        PlanActivityService             parentPlanActivityService;
        PlanActivityService             filterPlanActivityService;
        PlanActivity                    planActivity;
        InventDim                       inventDim;
        InventDim                       filterInventDim;
        boolean                         ret;

        ret = super();

        if (ret)
        {
            parentPlanActivityService = PlanActivityService::find(this.PlanActivityService);
            ret = ret && parentPlanActivityService.RecId != 0;

            inventDim = InventDim::findInLegalEntity(this.InventDimId, this.InventDimDataAreaId);
            ret = ret && inventDim.RecId != 0;

            InventDimParm prodDims = InventDimParm::allProductDim();

            // uniqueness must be checked from all of the following:
            //      - item + dimensions
            //      - plan activity
            //      - purch agreement
            select firstonly RecId from planActivityServiceOutputItem
                where planActivityServiceOutputItem.RecId               != this.RecId
                &&    planActivityServiceOutputItem.ItemId              == this.ItemId
                &&    planActivityServiceOutputItem.ItemDataAreaId      == this.ItemDataAreaId
            join TableId from filterPlanActivityService
                where filterPlanActivityService.RecId                   == planActivityServiceOutputItem.PlanActivityService
                &&    filterPlanActivityService.PlanActivity            == parentPlanActivityService.PlanActivity
                &&    filterPlanActivityService.PurchAgreementHeader    == parentPlanActivityService.PurchAgreementHeader
            join Name from planActivity
                where planActivity.RecId                                == filterPlanActivityService.PlanActivity
            #InventDimExistsJoin(planActivityServiceOutputItem.InventDimId, filterInventDim, inventDim, prodDims)
                &&    filterInventDim.DataAreaId                        == this.InventDimDataAreaId;

            if (planActivityServiceOutputItem.RecId != 0)
            {
                // The service output item with the specified inventory dimensions already exists
                ret = checkFailed(strFmt("@FPK270029",
                                         planActivity.Name,
                                         this.ItemId,
                                         inventDim.preFixProductDim(EcoResProductDimGroupSetup::newItemId(this.ItemId))));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createServiceActivityOutputItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new record in the <c>PlanActivityServiceOutputItem</c> table.
    /// </summary>
    /// <param name="_planActivityService">
    /// The record ID of the <c>PlanActivityService</c> record that the output item is associated with.
    /// </param>
    /// <param name="_itemId">
    /// The item ID of the output item.
    /// </param>
    /// <param name="_itemDataAreaId">
    /// The data area ID of the output item.
    /// </param>
    /// <param name="_inventDimId">
    /// The inventory dimension ID of the output item.
    /// </param>
    /// <param name="_inventDimDataAreaId">
    /// The data area ID of the inventory dimension for the output item.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void createServiceActivityOutputItem(
        recId                           _planActivityService,
        ItemId                          _itemId,
        dataAreaId                      _itemDataAreaId,
        InventDimId                     _inventDimId,
        dataAreaId                      _inventDimDataAreaId)
    {
        PlanActivityServiceOutputItem    planServiceServiceOutputItem;

        ttsbegin;

        planServiceServiceOutputItem.PlanActivityService    = _planActivityService;
        planServiceServiceOutputItem.ItemId                 = _itemId;
        planServiceServiceOutputItem.ItemDataAreaId         = _itemDataAreaId;
        planServiceServiceOutputItem.InventDimId            = _inventDimId;
        planServiceServiceOutputItem.InventDimDataAreaId    = _inventDimDataAreaId;

        if (planServiceServiceOutputItem.validateWrite())
        {
            planServiceServiceOutputItem.insert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>PlanActivityServiceOutputItem</c> table exists.
    /// </summary>
    /// <param name="_refRecId">
    ///    The record ID of the <c>PlanActivityServiceOutputItem</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(RefRecId _refRecId)
    {
        return _refRecId &&
               (select firstonly planActivityServiceOutputItem
                    where planActivityServiceOutputItem.RecId == _refRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>PlanActivityServiceOutputItem</c> table.
    /// </summary>
    /// <param name="_refRecId">
    ///    The record ID of the <c>PlanActivityServiceOutputItem</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>PlanActivityServiceOutputItem</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PlanActivityServiceOutputItem find(
        RefRecId _refRecId,
        boolean  _forUpdate = false)
    {
        PlanActivityServiceOutputItem planActivityServiceOutputItem;

        if (_refRecId)
        {
            planActivityServiceOutputItem.selectForUpdate(_forUpdate);

            select firstonly planActivityServiceOutputItem
                where planActivityServiceOutputItem.RecId == _refRecId;
        }

        return planActivityServiceOutputItem;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS331565</DeveloperDocumentation>
	<FormRef>PlanActivityDetails</FormRef>
	<Label>@SYS331563</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>InventDimId</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>MasterPlanning</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Item</Name>
			<Label>@SYS331564</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ItemDimensions</Name>
			<Label>@SYS331562</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimDataAreaId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemDataAreaId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PlanActivityService</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventDimIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventDimDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PlanActivityServiceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PlanActivityService</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimDataAreaId</Name>
					<Field>InventDimDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemDataAreaId</Name>
					<Field>ItemDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PlanActivityService</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PlanActivityService</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PlanActivityService</Name>
					<Field>PlanActivityService</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>