<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailLoyaltyCardRewardPointAdjustment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailLoyaltyCardRewardPointAdjustment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.AdjustmentStatus = RetailLoyaltyAdjustmentStatusBase::Draft;
        this.TransactionDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
    }

]]></Source>
			</Method>
			<Method>
				<Name>postAdjustment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Post loyalty reward points adjustment to <c>RetailLoyaltyCardRewardPointTrans</c> table.
    /// </summary>
    public void postAdjustment()
    {
        boolean showInfolog = false; // Default
        RetailLoyaltyCardRewardPointAdjustmentPostAdjustmentContext loyaltyCardRewardPointAdjustmentPostAdjustmentContext = RetailLoyaltyCardRewardPointAdjustmentPostAdjustmentContext::current();

        if (loyaltyCardRewardPointAdjustmentPostAdjustmentContext != null)
        {
            showInfolog = loyaltyCardRewardPointAdjustmentPostAdjustmentContext.parmShowInfoLog();
        }
        
        this.postAdjustmentExt(showInfolog);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postAdjustmentExt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Post loyalty reward points adjustment to <c>RetailLoyaltyCardRewardPointTrans</c> table (Extended).
    /// </summary>
    /// <param name = "_showInfolog">A Boolean value that indicates whether to print the errors or informational messages in the Infolog; optional.</param>
    private void postAdjustmentExt(boolean _showInfolog = false)
    {
        RetailLoyaltyCardRewardPointTrans trans;
        RetailLoyaltyCard card = RetailLoyaltyCard::find(this.LoyaltyCard);
        utcDateTime now = DateTimeUtil::utcNow();
        utcdatetime nowInUserTimeZone = DateTimeUtil::applyTimeZoneOffset(now, DateTimeUtil::getUserPreferredTimeZone());
        int transDateDiff = DateTimeUtil::date(nowInUserTimeZone) - this.TransactionDate;
        utcdatetime transactionDateInUtc = DateTimeUtil::addDays(now, -1 * transDateDiff);

        ttsBegin;

        // Post adjustment
        trans.LoyaltyTransactionType = RetailLoyaltyTransactionType::LoyaltyAdjustment;
        trans.EntryType = RetailLoyaltyRewardPointEntryType::Adjust;
        trans.AdjustmentId = this.AdjustmentId;
        trans.LoyaltyTransLineNum = 1.0;
        trans.Affiliation = this.Affiliation;
        trans.CardNumber = card.CardNumber;
        trans.CustAccount = CustTable::findByPartyRecId(card.Party).AccountNum;
        trans.CustAccountDataAreaId = CustTable::findByPartyRecId(card.Party).DataAreaId;
        trans.RewardPoint = this.RewardPoint;
        trans.RewardPointAmountQty = this.RewardPointAmountQty;
        trans.EntryDate = DateTimeUtil::date(transactionDateInUtc);
        trans.EntryTime = DateTimeUtil::time(transactionDateInUtc);
        trans.CardTenderType = card.CardTenderType;

        if (this.RewardPointAmountQty > 0)
        {
            trans.ExpirationDate = RetailLoyaltyRewardPoint::find(this.RewardPoint).expirationDate(trans.EntryDate);
        }
        else
        {
            trans.ExpirationDate = maxDate();
        }

        // Modify the extended parameter(s) - as desired - before making the call.
        RetailLoyaltyManager_ExtendedParameters retailLoyaltyManager_ExtendedParameters = RetailLoyaltyManager::extendedParameters;
        retailLoyaltyManager_ExtendedParameters.parmPostLoyaltyCardRewardPointTrans_ShowInfolog(_showInfolog);
        RetailLoyaltyManager::PostLoyaltyCardRewardPointTrans(trans, false);

        // Update adjutment status
        this.AdjustmentStatus = RetailLoyaltyAdjustmentStatusBase::Posted;
        this.update();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;

        if (this.AdjustmentStatus == RetailLoyaltyAdjustmentStatusBase::Posted)
        {
            ret = checkFailed("@REX4520228");
        }
        else
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(RetailLoyaltyCardRewardPointAdjustment, TransactionDate):
                ret = ret && this.validateTransactionDate();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTransactionDate</Name>
				<Source><![CDATA[
    private boolean validateTransactionDate()
    {
        boolean ret = true;

        if (this.TransactionDate > DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
        {
            error(strFmt("@SYS112352", "@SYS7402" ,DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a loyalty Reward Adjustment entry by record ID.
    /// </summary>
    /// <param name="_recId">
    /// The record ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailLoyaltyCardRewardPointAdjustment</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailLoyaltyCardRewardPointAdjustment find(RefRecId _recId, boolean _forUpdate = false)
    {
        RetailLoyaltyCardRewardPointAdjustment  retailLoyaltyCardRewardPointAdjustment;
        retailLoyaltyCardRewardPointAdjustment.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select firstOnly retailLoyaltyCardRewardPointAdjustment
                where retailLoyaltyCardRewardPointAdjustment.RecId == _recId;
        }

        return retailLoyaltyCardRewardPointAdjustment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByAdjustmentId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a loyalty Reward Adjustment entry by Adjustment ID.
    /// </summary>
    /// <param name="_adjustmentId">
    /// The Adjustment ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailLoyaltyCardRewardPointAdjustment</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailLoyaltyCardRewardPointAdjustment findByAdjustmentId(str _adjustmentId, boolean _forUpdate = false)
    {
        RetailLoyaltyCardRewardPointAdjustment  retailLoyaltyCardRewardPointAdjustment;
        retailLoyaltyCardRewardPointAdjustment.selectForUpdate(_forUpdate);

        if (_adjustmentId)
        {
            select firstOnly retailLoyaltyCardRewardPointAdjustment
                where retailLoyaltyCardRewardPointAdjustment.AdjustmentId == _adjustmentId;
        }

        return retailLoyaltyCardRewardPointAdjustment;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@REX4520009</DeveloperDocumentation>
	<Label>@REX4520021</Label>
	<TitleField1>AdjustmentId</TitleField1>
	<TitleField2>LoyaltyCard</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>CommerceCustomers</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AdjustmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Affiliation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RewardPointAmountQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoyaltyCard</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS77406</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AdjustmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Affiliation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RewardPointAmountQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoyaltyCard</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RewardPoint</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AdjustmentStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AdjustmentId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLoyaltyAdjustmentId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AdjustmentStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLoyaltyAdjustmentStatus</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>RetailLoyaltyAdjustmentStatusBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Affiliation</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Comment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLoyaltyRewardPointAdjustComment</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LoyaltyCard</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RewardPoint</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RewardPointAmountQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLoyaltyRewardPointAmountQty</ExtendedDataType>
			<Label>@REX4520016</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransactionDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailAdjustmentTransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AdjustmentIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AdjustmentId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailAffiliation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RetailAffiliation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Affiliation</Name>
					<Field>Affiliation</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailLoyaltyCard</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RetailLoyaltyCard</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoyaltyCard</Name>
					<Field>LoyaltyCard</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailLoyaltyRewardPoint</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RetailLoyaltyRewardPoint</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RewardPoint</Name>
					<Field>RewardPoint</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>