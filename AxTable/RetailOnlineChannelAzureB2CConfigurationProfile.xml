<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailOnlineChannelAzureB2CConfigurationProfile</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.Configuration;
using System.Collections;
using System.Collections.Specialized;
using System.Net;
using System.IO;
using System.Web.Script.Serialization;

public class RetailOnlineChannelAzureB2CConfigurationProfile extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();

        boolean IsValidated = this.ValidateAzureB2CConfiguration();

        if(IsValidated)
        {
        	this.updateIsDefault();
            this.UpdateRetailIdentityProvider();
            Message::Add(MessageSeverity::Informational, "@Retail:RetailOnlineChannelAzureB2CConfigurationAddSuccessMessage");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        super();

        boolean IsValidated = this.ValidateAzureB2CConfiguration();

        if(IsValidated)
        {
        	this.updateIsDefault();
            this.UpdateRetailIdentityProvider();
            Message::Add(MessageSeverity::Informational, "@Retail:RetailOnlineChannelAzureB2CConfigurationUpdateSuccessMessage");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ValidateAzureB2CConfiguration</Name>
				<Source><![CDATA[
    public boolean ValidateAzureB2CConfiguration()
    {
        return RetailOnlineStoreAuthenticationConfigurationHelper::ValidateAzureB2CConfiguration(this.LoginDomainName, this.TenantName, this.SignInSignUpPolicyId, this.PasswordResetPolicyId, this.EditProfilePolicyId, this.SignUpPolicyId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateIsDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating default configuration
    /// </summary>
    private void updateIsDefault()
    {
        RetailOnlineChannelAzureB2CConfigurationProfile retailOnlineChannelAzureB2CConfigurationProfile;

        if (this.IsDefault == NoYes::Yes)
        {
        	ttsbegin;

            while select forupdate retailOnlineChannelAzureB2CConfigurationProfile
                where retailOnlineChannelAzureB2CConfigurationProfile.IsDefault == NoYes::Yes &&
                      retailOnlineChannelAzureB2CConfigurationProfile.RecId != this.RecId
            {
                retailOnlineChannelAzureB2CConfigurationProfile.IsDefault = NoYes::No;
                retailOnlineChannelAzureB2CConfigurationProfile.doUpdate();
            }

			ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>UpdateRetailIdentityProvider</Name>
				<Source><![CDATA[
    /// <summary>
    /// Registers an application and its identity provider to enable authentication in CSU.
    /// </summary>
    private void UpdateRetailIdentityProvider()
    {
        var issuer = RetailOnlineStoreAuthenticationConfigurationHelper::GetAzureB2CIssuer(
            this.TenantName,
            this.LoginDomainName,
            this.SignInSignUpPolicyId);

        if (System.String::IsNullOrWhiteSpace(issuer))
        {
            Message::Add(MessageSeverity::Error, "@Retail:RetailOnlineChannelAzureB2CConfigurationRetailIdentityProviderErrorMessage");
            return;
        }

        ttsbegin;
        RetailRelyingPartyType retailRelyingPartyType = RetailRelyingPartyType::Confidential;

        // Updating Identity Provider.
        RetailIdentityProvider identityProvider = RetailIdentityProvider::findOrCreate(issuer, this.TenantName, RetailIdentityProviderType::AadSocialAccessToken);

        // Updating Relying Party
        RetailRelyingParty relyingParty = RetailRelyingParty::findOrCreate(
                identityProvider.RecId,
                this.ApplicationId,
                retailRelyingPartyType,
                RetailRelyingPartyUserType::Customer);

        if(relyingParty.ClientId == this.ApplicationId)
        {
            relyingParty.selectForUpdate(true);
            relyingParty.Type = retailRelyingPartyType;
            relyingParty.update();
        }
                     
        // Updating Server Resource IDs
        RetailServerResource::findOrCreate(relyingParty.RecId, this.Audience);
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validating the Azure B2C configuration
    /// </summary>
    /// <returns>
	/// true if the data is valid to save.
	/// </returns>
    public boolean validateWrite()
    {
        boolean ret = false;
    
        ret = super();

        RetailOnlineChannelAzureB2CConfigurationProfile retailOnlineChannelAzureB2CConfigurationProfile;

        select firstonly RecId from retailOnlineChannelAzureB2CConfigurationProfile
                where retailOnlineChannelAzureB2CConfigurationProfile.Name == this.Name && retailOnlineChannelAzureB2CConfigurationProfile.RecId != this.RecId;

        if (retailOnlineChannelAzureB2CConfigurationProfile.RecId != 0)
        {
            Message::Add(MessageSeverity::Error, "@Retail:RetailOnlineChannelAzureB2CConfigurationAlreadyExistErrorMessage");
            return false;
        }

        // Validate Azure B2C configuration.
        ret= this.ValidateAzureB2CConfiguration();

        return ret;
       
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4040256</DeveloperDocumentation>
	<FormRef>RetailOnlineChannelAzureB2CConfigurationMenuItem</FormRef>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<Modules>OnlineStore</Modules>
  <ClusteredIndex>RecId</ClusteredIndex>
	<PrimaryIndex>RecId</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<ExtendedDataType>RetailOnlineChannelAzureB2CConfigurationProfileName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>RetailOnlineChannelAzureB2CConfigurationDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TenantName</Name>
			<ExtendedDataType>RetailOnlineChannelAzureB2CConfigurationTenantName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LoginDomainName</Name>
			<ExtendedDataType>RetailOnlineChannelAzureB2CConfigurationLoginDomainName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SignInSignUpPolicyId</Name>
			<ExtendedDataType>RetailOnlineChannelAzureB2CConfigurationSignInSignUpPolicyId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PasswordResetPolicyId</Name>
			<ExtendedDataType>RetailOnlineChannelAzureB2CConfigurationPasswordResetPolicyId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EditProfilePolicyId</Name>
			<ExtendedDataType>RetailOnlineChannelAzureB2CConfigurationEditProfilePolicyId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SignUpPolicyId</Name>
			<ExtendedDataType>RetailOnlineChannelAzureB2CConfigurationSignUpPolicyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Scope</Name>
			<ExtendedDataType>RetailOnlineChannelAzureB2CConfigurationScope</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ApplicationId</Name>
			<ExtendedDataType>RetailOnlineChannelAzureB2CConfigurationApplicationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ApplicationSecret</Name>
			<ExtendedDataType>RetailOnlineChannelAzureB2CConfigurationAadAppSecretName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDefault</Name>
			<ExtendedDataType>RetailOnlineChannelAzureB2CConfigurationIsDefault</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Audience</Name>
			<ExtendedDataType>RetailOnlineChannelAzureB2CConfigurationAudience</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ApplicationSecret</Name>
			<RelatedTable>KeyVaultCertificateTable</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ApplicationSecret</Name>
					<Field>ApplicationSecret</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>