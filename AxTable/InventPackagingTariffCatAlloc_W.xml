<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventPackagingTariffCatAlloc_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventPackagingTariffCatAlloc_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(InventPackagingTariffCatAlloc_W, Category) :
                if (this.Category && EcoResCategory::find(this.Category).Level != 2)
                {
                    ret = checkFailed("@PackingMaterial:InventRootHierarchy");
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>InventPackagingTariffCatAlloc_W</c> table.
    /// </summary>
    /// <param name="_category">
    /// The product group of the packed released product.
    /// </param>
    /// <param name="_packagingClassId">
    /// The packing class of the packing material.
    /// </param>
    /// <param name="_packingMaterialCode">
    /// The packing material code.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>InventPackagingTariffCatAlloc_W</c> table; otherwise, an empty record.
    /// </returns>
    public static InventPackagingTariffCatAlloc_W find(
        EcoResCategoryId            _category,
        ItemPackagingClassId_W      _packagingClassId,
        InventPackingMaterialCode   _packingMaterialCode,
        boolean                     _forupdate = false,
        ConcurrencyModel            _concurrencyModel = ConcurrencyModel::Auto)
    {
        InventPackagingTariffCatAlloc_W inventPackagingTariffCatAlloc;

        inventPackagingTariffCatAlloc.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            inventPackagingTariffCatAlloc.concurrencyModel(_concurrencyModel);
        }

        select firstonly inventPackagingTariffCatAlloc
            where inventPackagingTariffCatAlloc.Category          == _category
                && inventPackagingTariffCatAlloc.PackagingClassId == _packagingClassId
                && inventPackagingTariffCatAlloc.PackMaterialCode == _packingMaterialCode;

        return inventPackagingTariffCatAlloc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>InventPackagingTariffCatAlloc_W</c> table
    /// </summary>
    /// <param name="_refRecId">
    /// The record ID of the <c>InventPackagingTariffCatAlloc_W</c> table to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>InventPackagingTariffCatAlloc_W</c> table; otherwise, an empty record.
    /// </returns>
    public static InventPackagingTariffCatAlloc_W findRecId(
        RefRecId         _refRecId,
        boolean          _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        InventPackagingTariffCatAlloc_W inventPackagingTariffCatAlloc;

        inventPackagingTariffCatAlloc.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            inventPackagingTariffCatAlloc.concurrencyModel(_concurrencyModel);
        }

        select firstonly inventPackagingTariffCatAlloc
            where inventPackagingTariffCatAlloc.RecId == _refRecId;

        return inventPackagingTariffCatAlloc;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventPackaging</ConfigurationKey>
	<CountryRegionCodes>AT</CountryRegionCodes>
	<DeveloperDocumentation>@PackingMaterial:InventPackagingTariffCatAllocDoc</DeveloperDocumentation>
	<Label>@PackingMaterial:InventPackagingTariffCatAlloc</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>PackagingClassId</TitleField1>
	<TitleField2>PackMaterialCode</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>TariffCatAllocIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>InventPackagingTariffCatQuote_W</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation>InventPackagingTariffCatAlloc_W</Relation>
			<Table>InventPackagingTariffCatQuote_W</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackagingClassId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackMaterialCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackagingClassId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackMaterialCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Category</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategoryId</ExtendedDataType>
			<Label>@SYS58238</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackagingClassId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemPackagingClassId_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackMaterialCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPackingMaterialCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TariffCatAllocIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>Category</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PackagingClassId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PackMaterialCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>EcoResCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Category</Name>
					<Field>Category</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventPackagingClass_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventPackagingClass_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackagingClassId</Name>
					<Field>PackagingClassId</Field>
					<RelatedField>PackagingClassId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventPackagingMaterialCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventPackagingMaterialCode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackMaterialCode</Name>
					<Field>PackMaterialCode</Field>
					<RelatedField>PackMaterialCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>