<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanJobSchedule</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class KanbanJobSchedule extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>nextKanbanJobSchedule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the job that comes immediately after the current <c>KanbanJobSchedule</c> record on the same
    ///    cell.
    /// </summary>
    /// <returns>
    ///    A record in the <c>KanbanJobSchedule</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public KanbanJobSchedule nextKanbanJobSchedule()
    {
        KanbanJobSchedule   kanbanJobSchedule;

        select firstonly kanbanJobSchedule
            order by Sequence
            where kanbanJobSchedule.WorkCell      == this.WorkCell
               && kanbanJobSchedule.PlannedPeriod == this.PlannedPeriod
               && kanbanJobSchedule.Sequence      >  this.Sequence;

        return kanbanJobSchedule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>previousKanbanJobSchedule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the job that comes immediately before the current <c>KanbanJobSchedule</c> record on the same
    ///    cell and period.
    /// </summary>
    /// <returns>
    ///    A record in the <c>KanbanJobSchedule</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public KanbanJobSchedule previousKanbanJobSchedule()
    {
        KanbanJobSchedule   kanbanJobSchedule;

        select firstonly kanbanJobSchedule
            order by Sequence desc
            where kanbanJobSchedule.WorkCell      == this.WorkCell
               && kanbanJobSchedule.PlannedPeriod == this.PlannedPeriod
               && kanbanJobSchedule.Sequence      <  this.Sequence;

        return kanbanJobSchedule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>KanbanJobSchedule</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the kanban job schedule table to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(recId _recId)
    {
        return _recId &&
                (select firstonly kanbanJobSchedule
                    where kanbanJobSchedule.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existCellPeriodSequence</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>KanbanJobSchedule</c> table exists.
    /// </summary>
    /// <param name="_wrkCtrResourceGroup">
    ///    The cell to use to check for existence.
    /// </param>
    /// <param name="_plannedPeriod">
    ///    The planned period to use to check for existence.
    /// </param>
    /// <param name="_sequence">
    ///    The sequence to use to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean existCellPeriodSequence(
        WrkCtrResourceGroupRefRecId    _wrkCtrResourceGroup,
        KanbanJobSchedulePlannedPeriod _plannedPeriod,
        LineNum                        _sequence)
    {
        return    _wrkCtrResourceGroup
               && _plannedPeriod != dateNull()
               && (select firstonly kanbanJobSchedule
                        where kanbanJobSchedule.WorkCell      == _wrkCtrResourceGroup
                           && kanbanJobSchedule.PlannedPeriod == _plannedPeriod
                           && kanbanJobSchedule.Sequence      == _sequence).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existJob</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>KanbanJobSchedule</c> table exists.
    /// </summary>
    /// <param name="_job">
    ///    The record ID of the kanban job schedule table to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean existJob(RefRecId _job)
    {
        return _job &&
               (select firstonly kanbanJobSchedule
                    where kanbanJobSchedule.Job == _job).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>KanbanJobSchedule</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the kanban job schedule table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>KanbanJobSchedule</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static KanbanJobSchedule find(
        RefRecId _recId,
        boolean  _forUpdate = false)
    {
        KanbanJobSchedule kanbanJobSchedule;

        if (_recId)
        {
            kanbanJobSchedule.selectForUpdate(_forUpdate);

            select firstonly kanbanJobSchedule
                where kanbanJobSchedule.RecId == _recId;
        }

        return kanbanJobSchedule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findJob</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>KanbanJobSchedule</c> table.
    /// </summary>
    /// <param name="_job">
    ///    The job to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>KanbanJobSchedule</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static KanbanJobSchedule findJob(
        KanbanJobRefRecId _job,
        boolean           _forUpdate = false)
    {
        KanbanJobSchedule kanbanJobSchedule;

        if (_job)
        {
            kanbanJobSchedule.selectForUpdate(_forUpdate);

            select firstonly kanbanJobSchedule
                where kanbanJobSchedule.Job == _job;
        }

        return kanbanJobSchedule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>firstSequenceAvailable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the sequence number for a given cell and the planned period in the
    ///    <c>KanbanJobSchedule</c> table to create a record in the first position of the planning period.
    /// </summary>
    /// <param name="_wrkCtrResourceGroup">
    ///    The cell where the kanban job will be scheduled.
    /// </param>
    /// <param name="_plannedPeriod">
    ///    The planned period during which the kanban job will be scheduled.
    /// </param>
    /// <returns>
    ///    1 if there is no other record in the period; otherwise, one less than the minimum existing sequence.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LineNum firstSequenceAvailable(
        WrkCtrResourceGroupRefRecId    _wrkCtrResourceGroup,
        KanbanJobSchedulePlannedPeriod _plannedPeriod)
    {
        KanbanJobSchedule   kanbanJobSchedule;
        LineNum             firstSequence = 1;

        select minof(Sequence) from kanbanJobSchedule
            where kanbanJobSchedule.WorkCell      == _wrkCtrResourceGroup
               && kanbanJobSchedule.PlannedPeriod == _plannedPeriod;

        if (kanbanJobSchedule.Sequence)
        {
            firstSequence = kanbanJobSchedule.Sequence - 1;
        }
        else
        {
            // We need to differentiate between receiving 0 because there is actually a minimum sequence 0, or
            // because there are no records. If there are no records, we return the default 1. Otherwise 0-1=-1
            if (KanbanJobSchedule::existCellPeriodSequence(_wrkCtrResourceGroup,_plannedPeriod,0))
            {
                firstSequence = -1;
            }
        }

        return firstSequence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastJob</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the last job for the specified cell and planned period in the <c>KanbanJobSchedule</c>
    ///    table.
    /// </summary>
    /// <param name="_wrkCtrResourceGroup">
    ///    The cell to find.
    /// </param>
    /// <param name="_plannedPeriod">
    ///    The planned period to find.
    /// </param>
    /// <returns>
    ///    The latest job for the specified planned period.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RefRecId lastJob(
        WrkCtrResourceGroupRefRecId    _wrkCtrResourceGroup,
        KanbanJobSchedulePlannedPeriod _plannedPeriod)
    {
        return (select firstonly Job from kanbanJobSchedule
                    order by Sequence desc
                    where kanbanJobSchedule.WorkCell      == _wrkCtrResourceGroup
                       && kanbanJobSchedule.PlannedPeriod == _plannedPeriod).Job;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastSequence</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the highest sequence number for a given cell and planned period in the
    ///    <c>KanbanJobSchedule</c> table.
    /// </summary>
    /// <param name="_wrkCtrResourceGroup">
    ///    The record ID of the cell to use.
    /// </param>
    /// <param name="_plannedPeriod">
    ///    A company time zone date that represents the planned period.
    /// </param>
    /// <returns>
    ///    The highest sequence for the specified planning period.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LineNum lastSequence(
        WrkCtrResourceGroupRefRecId    _wrkCtrResourceGroup,
        KanbanJobSchedulePlannedPeriod _plannedPeriod)  //company TZ
    {
        return (select maxof(Sequence) from kanbanJobSchedule
                    where kanbanJobSchedule.WorkCell      == _wrkCtrResourceGroup &&
                          kanbanJobSchedule.PlannedPeriod == _plannedPeriod).Sequence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustUpdateSequenceNumbers</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether sequence numbers must be updated.
    /// </summary>
    /// <param name="_kanbanJobSchedule">
    ///    A <c>KanbanJobSchedule</c> record that is used to determine whether sequence numbers must be
    ///    updated.
    /// </param>
    /// <param name="_nextKanbanJobSchedule">
    ///    A second <c>KanbanJobSchedule</c> record that is used to determine whether sequence numbers must be
    ///    updated.
    /// </param>
    /// <returns>
    ///    true if sequence numbers must be updated; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    Sequence numbers must be updated when the gap between numbers becomes too small.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean mustUpdateSequenceNumbers(
        KanbanJobSchedule   _kanbanJobSchedule,
        KanbanJobSchedule   _nextKanbanJobSchedule = _kanbanJobSchedule.nextKanbanJobSchedule())
    {
        #define.minSequenceGap(0.0001)
        return    _kanbanJobSchedule
               && _nextKanbanJobSchedule
               && _kanbanJobSchedule.WorkCell      == _nextKanbanJobSchedule.WorkCell
               && _kanbanJobSchedule.PlannedPeriod == _nextKanbanJobSchedule.PlannedPeriod
               && abs(_nextKanbanJobSchedule.Sequence - _kanbanJobSchedule.Sequence) <= #minSequenceGap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextSequence</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines the next sequence number for the specified cell, planned period, and sequence in the
    ///    <c>KanbanJobSchedule</c> table.
    /// </summary>
    /// <param name="_wrkCtrResourceGroup">
    ///    The cell for which to find the sequence number.
    /// </param>
    /// <param name="_plannedPeriod">
    ///    The planned period for which to find the sequence number.
    /// </param>
    /// <param name="_afterSequence">
    ///    The sequence for which to find the sequence number; optional.
    /// </param>
    /// <returns>
    ///    The next sequence number.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LineNum nextSequence(
        WrkCtrResourceGroupRefRecId    _wrkCtrResourceGroup,
        KanbanJobSchedulePlannedPeriod _plannedPeriod,
        LineNum                        _afterSequence = KanbanJobSchedule::lastSequence(_wrkCtrResourceGroup,_plannedPeriod))
    {
        KanbanJobSchedule   lowerKanbanJobSchedule;
        KanbanJobSchedule   upperKanbanJobSchedule;
        LineNum             nextSequence;

        select minof(Sequence) from upperKanbanJobSchedule
            where upperKanbanJobSchedule.WorkCell      == _wrkCtrResourceGroup
               && upperKanbanJobSchedule.PlannedPeriod == _plannedPeriod
               && upperKanbanJobSchedule.Sequence      > _afterSequence;

        if (!upperKanbanJobSchedule.Sequence)
        {
            nextSequence = KanbanJobSchedule::lastSequence(_wrkCtrResourceGroup,_plannedPeriod)+1;
        }
        else
        {
            select maxof(Sequence) from lowerKanbanJobSchedule
                where lowerKanbanJobSchedule.WorkCell      == _wrkCtrResourceGroup
                   && lowerKanbanJobSchedule.PlannedPeriod == _plannedPeriod
                   && lowerKanbanJobSchedule.Sequence      <= _afterSequence;

            nextSequence = lowerKanbanJobSchedule.Sequence + (upperKanbanJobSchedule.Sequence - lowerKanbanJobSchedule.Sequence)/2;
        }

        return nextSequence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSequenceNumbers</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Renumbers the sequences in a schedule from the specified starting point.
    /// </summary>
    /// <param name="_kanbanJobSchedule">
    ///    A <c>KanbanJobSchedule</c> record that defines the starting point.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void updateSequenceNumbers(KanbanJobSchedule _kanbanJobSchedule)
    {
        #define.SequenceGap(10)
        KanbanJobSchedule   kanbanJobSchedule;
        LineNum             sequence;

        if (   _kanbanJobSchedule
            && KanbanJobSchedule::mustUpdateSequenceNumbers(_kanbanJobSchedule,_kanbanJobSchedule.nextKanbanJobSchedule()))
        {
            // total planned in period
            select count(RecId) from kanbanJobSchedule
                where kanbanJobSchedule.WorkCell      == _kanbanJobSchedule.WorkCell
                   && kanbanJobSchedule.PlannedPeriod == _kanbanJobSchedule.PlannedPeriod;

            sequence = any2real(kanbanJobSchedule.RecId);

            // highest sequence number
            select maxof(Sequence) from kanbanJobSchedule
                where kanbanJobSchedule.WorkCell      == _kanbanJobSchedule.WorkCell
                   && kanbanJobSchedule.PlannedPeriod == _kanbanJobSchedule.PlannedPeriod;

            sequence = max(sequence,kanbanJobSchedule.Sequence);

            ttsbegin;
            // positive, non-zero sequence numbers
            while select forupdate kanbanJobSchedule
                order by Sequence desc
                where kanbanJobSchedule.WorkCell      == _kanbanJobSchedule.WorkCell
                   && kanbanJobSchedule.PlannedPeriod == _kanbanJobSchedule.PlannedPeriod
            {
                kanbanJobSchedule.Sequence = sequence * #SequenceGap;
                kanbanJobSchedule.update();
                sequence--;
            }
            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS131664</DeveloperDocumentation>
	<Label>@SYS131663</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>Job</TitleField1>
	<TitleField2>PlannedPeriod</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>MasterPlanning</Modules>
	<ReplacementKey>CellPlannedPeriodIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkCell</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Job</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Sequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpectedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpectedStartDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkCell</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlannedPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Sequence</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS81755</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Job</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Schedule</Name>
			<Label>@SYS6793</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkCell</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlannedPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Sequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpectedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpectedStartDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TODO_Remove</Name>
			<Label>@SYS26394</Label>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ExpectedDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanJobScheduleExpectedDateTime</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Job</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanJobRefRecId</ExtendedDataType>
			<Label>@SYS131642</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PlannedPeriod</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanJobSchedulePlannedPeriod</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Sequence</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Label>@SYS131666</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkCell</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WrkCtrResourceGroupRefRecId</ExtendedDataType>
			<Label>@SYS131859</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ExpectedStartDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanJobScheduleExpectedStartDateTime</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CellPlannedPeriodIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkCell</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PlannedPeriod</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Sequence</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>JobIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Job</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CellJobPlannedPeriodIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkCell</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Job</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PlannedPeriod</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Sequence</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>KanbanJob</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>KanbanJob</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>KanbanJob</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>KanbanJobSchedule</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Job</Name>
					<Field>Job</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WrkCtrResourceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WrkCtrResourceGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>WorkCell</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>KanbanJobSchedule</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkCell</Name>
					<Field>WorkCell</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>