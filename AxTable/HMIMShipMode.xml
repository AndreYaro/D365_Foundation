<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMIMShipMode</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMIMShipMode extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>HMIMShipMode</c> record with given parameters.
    /// </summary>
    /// <param name = "_dlvModeId">Delivery mode</param>
    /// <param name = "_dataAreaId">DataAreaId of the company</param>
    /// <param name = "_forupdate">Determines whether the record is selected for update.</param>
    /// <returns>The record that is searched for.</returns>
    public static HMIMShipMode find(DlvModeId _dlvModeId,
                                    DataAreaId  _dataAreaId,
                                    boolean _forupdate = false)
    {
        HMIMShipMode shipMode;

        if (_dlvModeId && _dataAreaId)
        {
            shipMode.selectForUpdate(_forupdate);
            select firstonly shipMode
                where shipMode.DlvModeId == _dlvModeId
                    && shipMode.DlvModeDataAreaId == _dataAreaId;
        }

        return shipMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRegCodeMode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>HMIMShipMode</c> record with given parameters.
    /// </summary>
    /// <param name = "_regCode">Regulation Code</param>
    /// <param name = "_dlvModeId">Delivery Mode</param>
    /// <param name = "_dataAreaId">DataAreaId of the company</param>
    /// <param name = "_forupdate">Determines whether the record is selected for update.</param>
    /// <returns>The record that is searched for.</returns>
    public static HMIMShipMode findByRegCodeMode(HMIMRegCode _regCode,
                                                 DlvModeId   _dlvModeId,
                                                 DataAreaId  _dataAreaId,
                                                 boolean     _forupdate = false)
    {
        HMIMShipMode shipMode;

        if (_regCode && _dlvModeId && _dataAreaId)
        {
            shipMode.selectForUpdate(_forupdate);
            select firstonly shipMode
                where shipMode.RegCode == _regCode
                    && shipMode.DlvModeId == _dlvModeId
                    && shipMode.DlvModeDataAreaId == _dataAreaId;
        }

        return shipMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a specific <c>HMIMShipMode</c> record exists.
    /// </summary>
    /// <param name = "_regCode">Regulation Code</param>
    /// <param name = "_dlvModeId">Delivery Mode</param>
    /// <param name = "_dataAreaId">DataAreaId of the company</param>
    /// <returns>
    /// True if the record exists.
    /// </returns>
    public static boolean exist(HMIMRegCode _regCode,
                                DlvModeId   _dlvModeId,
                                DataAreaId  _dataAreaId)
    {
        return _regCode && _dlvModeId && _dataAreaId && HMIMShipMode::findByRegCodeMode(_regCode, _dlvModeId, _dataAreaId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines where the current record is valid and ready to be written to database
    /// </summary>
    /// <returns>true or false based on validation</returns>
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();

        changecompany(this.DlvModeDataAreaId)
        {
            if (!DlvMode::exist(this.DlvModeId))
            {
                ret = checkFailed(strFmt("@SYS31594", this.DlvModeId, "@SYS76373"));
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>HMIMManagement</ConfigurationKey>
	<DeveloperDocumentation>@SCM:ShipModeDevDoc</DeveloperDocumentation>
	<Label>@SCM:ShipMode</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>DlvModeId</TitleField1>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>SalesAndMarketing</Modules>
	<ReplacementKey>DlvModeIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RegCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvModeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DlvModeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvModeDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RegCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HMIMRegCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvModeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DlvModeId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvModeDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DlvModeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DlvModeId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DlvModeDataAreaId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HMIMRegulation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HMIMRegulation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RegCode</Name>
					<Field>RegCode</Field>
					<RelatedField>RegCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvModeDataAreaId</Name>
					<Field>DlvModeDataAreaId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>