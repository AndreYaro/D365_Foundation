<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DemoDataPostRun</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DemoDataPostRun extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.RunStatus = DemoDataPostRunStatus::Open;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret = super();

        switch (this.RunStatus)
        {
            case DemoDataPostRunStatus::InProgress:
                ret = checkFailed(strFmt("@DemoDataPost:PostRunCannotDeleteStatusError", this.RunId));
                break;

            case DemoDataPostRunStatus::Scheduled:
                Batch batch;

                select firstonly batch where batch.BatchJobId == this.BatchId;

                if (batch)
                {
                    ret = checkFailed(strFmt("@DemoDataPost:RunDeleteBatchError", this.RunId));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (!this.RunId)
        {
            ret = checkFailed("@DemoDataPost:PostNoRunIdError");
        }

        if (this.ExecutionId)
        {
            DMFExecution dmfExecution = DMFExecution::find(this.ExecutionId);

            if (!dmfExecution)
            {
                ret = checkFailed(strFmt("@DemoDataPost:ExecutionIdNotFoundError", this.ExecutionId));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEdit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine whether the run document may be editted.
    /// </summary>
    /// <param name = "_run">The run context.</param>
    /// <returns>True if the run may be editted; otherwise, false.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean canEdit(DemoDataPostRun _run)
    {
        boolean canEdit = true;

        if (_run.RunStatus == DemoDataPostRunStatus::Successful || _run.RunStatus == DemoDataPostRunStatus::Error
            || _run.RunStatus == DemoDataPostRunStatus::InProgress || _run.RunStatus == DemoDataPostRunStatus::Scheduled)
        {
            canEdit = false;
        }

        return canEdit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetch a run record.
    /// </summary>
    /// <param name = "_runId">The run id to search for.</param>
    /// <param name = "_forUpdate">Whether to select for update.</param>
    /// <returns>The run record.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static DemoDataPostRun find(DemoDataPostRunId _runId, boolean _forUpdate = false)
    {
        DemoDataPostRun demoDataPostRun;

        demoDataPostRun.selectForUpdate(_forUpdate);

        select firstonly demoDataPostRun
            where demoDataPostRun.RunId == _runId;

        return demoDataPostRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRunStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the run status for a run record.
    /// </summary>
    /// <param name = "_runId">The run Id.</param>
    /// <param name = "_status">The status to set.</param>
    /// <param name = "_batchId">The batch header to set.</param>
    /// <returns>The updated record.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static DemoDataPostRun setRunStatus(DemoDataPostRunId _runId, DemoDataPostRunStatus _status, RefRecId _batchId = 0)
    {
        DemoDataPostRun demoDataPostRun = DemoDataPostRun::find(_runId, true);

        if (demoDataPostRun)
        {
            ttsbegin;

            demoDataPostRun.RunStatus = _status;

            switch (_status)
            {
                case DemoDataPostRunStatus::Scheduled:
                    demoDataPostRun.BatchId = _batchId;
                    break;

                case DemoDataPostRunStatus::InProgress:
                    demoDataPostRun.StartTime = DateTimeUtil::getSystemDateTime();
                    break;

                case DemoDataPostRunStatus::Error,
                    DemoDataPostRunStatus::Successful:
                    demoDataPostRun.CompletionTime = DateTimeUtil::getSystemDateTime();
                    break;
            }

            demoDataPostRun.update();
            ttscommit;
        }

        return demoDataPostRun;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DemoDataPost:PostRunDeveloperDoc</DeveloperDocumentation>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>AccountsPayable</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RunId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>DemoDataPostRunId</ExtendedDataType>
			<Label>@DemoDataPost:RunId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExecutionId</Name>
			<ExtendedDataType>DMFExecutionId</ExtendedDataType>
			<Label>@DemoDataPost:RunExecutionId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RunStatus</Name>
			<Label>@DemoDataPost:RunStatus</Label>
			<EnumType>DemoDataPostRunStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>StartTime</Name>
			<Label>@DemoDataPost:RunStartTime</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>CompletionTime</Name>
			<Label>@DemoDataPost:RunEndTime</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BatchId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@DemoDataPost:RunBatchJob</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProcessOnImport</Name>
			<Label>@DemoDataPost:ProcessOnImport</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Run</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RunId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ExecutionId</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ExecutionId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>DMFExecution</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>DMFExecution</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ExecutionId</Name>
					<Field>ExecutionId</Field>
					<RelatedField>ExecutionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>BatchId</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>Batch</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BatchId</Name>
					<Field>BatchId</Field>
					<RelatedField>BatchJobId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>