<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductCategoryStaging</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductCategoryStaging extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>orderByFieldListForImportExport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the sorting of staging records when copying to target.
    /// </summary>
    /// <param name = "_operationType">The operation type for which to determine the sorting order.</param>
    /// <returns>Container with a field list and sort order.</returns>
    public static container orderByFieldListForImportExport(DMFOperationType _operationType = DMFOperationType::All)
    {
        container fieldList = conNull();
        SortOrder sortOrder = SortOrder::Ascending;

        switch (_operationType)
        {
            case DMFOperationType::Import :
            case DMFOperationType::Export :
                fieldList += fieldStr(EcoResProductCategoryStaging, ImportSortPath);
                break;
            default:
                fieldList += fieldStr(Common, RecId);
                break;
        }

        return [fieldList, sortOrder];
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateImportSequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the import sequence for copying staging records to target based on the parent/child
    /// relationship. Uses the ImportSequence field to store the import sequence.
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution">
    /// The definition group and execution instance for which staging data should be processed.
    /// </param>
    public static void generateImportSequence(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        RecId minRecId = EcoResProductCategoryStaging::mininumRecId(_dmfDefinitionGroupExecution);

        EcoResProductCategoryStaging::updateCategoryRootLevelAndSequence(_dmfDefinitionGroupExecution, minRecId);

        int maxImportLevel = EcoResProductCategoryStaging::updateCategoryChildLevelsAndSequence(_dmfDefinitionGroupExecution, minRecId);

        if (maxImportLevel <= EcoResProductCategoryStaging::maximumSupportedImportLevel())
        {
            EcoResProductCategoryStaging::updateImportLevelSortPath(_dmfDefinitionGroupExecution, maxImportLevel);
        }
        else
        {
            EcoResProductCategoryStaging::updateTopologicalSortPath(_dmfDefinitionGroupExecution);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mininumRecId</Name>
				<Source><![CDATA[
    private static RecId mininumRecId(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        return (select minof(RecId)
            from EcoResProductCategoryStaging
            where EcoResProductCategoryStaging.DefinitionGroup  == _dmfDefinitionGroupExecution.DefinitionGroup  &&
                  EcoResProductCategoryStaging.ExecutionId      == _dmfDefinitionGroupExecution.ExecutionId).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCategoryRootLevelAndSequence</Name>
				<Source><![CDATA[
    private static void updateCategoryRootLevelAndSequence(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution, RecId _minRecId)
    {
        EcoResProductCategoryStaging            stagingTable;
        EcoResProductCategoryStaging            parentStagingTable;

        ttsbegin;

        update_recordset stagingTable
            setting ImportLevel     = 1,
                    ImportSequence  = stagingTable.RecId - _minRecId
            where stagingTable.ImportLevel      == 0                                             &&
                  stagingTable.DefinitionGroup  == _dmfDefinitionGroupExecution.DefinitionGroup  &&
                  stagingTable.ExecutionId      == _dmfDefinitionGroupExecution.ExecutionId
            notexists join  parentStagingTable
                where parentStagingTable.CategoryName                   == stagingTable.ParentProductCategoryName       &&
                      parentStagingTable.ProductCategoryHierarchyName   == stagingTable.ProductCategoryHierarchyName    &&
                      parentStagingTable.DefinitionGroup                == stagingTable.DefinitionGroup                 &&
                      parentStagingTable.ExecutionId                    == stagingTable.ExecutionId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCategoryChildLevelsAndSequence</Name>
				<Source><![CDATA[
    private static int updateCategoryChildLevelsAndSequence(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution, RecId _minRecId)
    {
        EcoResProductCategoryStaging            stagingTable;
        EcoResProductCategoryStaging            parentStagingTable;

        int importLevel;

        do
        {
            importLevel++;

            ttsbegin;

            update_recordset stagingTable
                setting ImportLevel     = parentStagingTable.ImportLevel + 1,
                        ImportSequence  = stagingTable.RecId - _minRecId
                where stagingTable.ImportLevel      == 0                                             &&
                      stagingTable.DefinitionGroup  == _dmfDefinitionGroupExecution.DefinitionGroup  &&
                      stagingTable.ExecutionId      == _dmfDefinitionGroupExecution.ExecutionId
                join parentStagingTable
                    where parentStagingTable.CategoryName                   == stagingTable.ParentProductCategoryName       &&
                          parentStagingTable.ProductCategoryHierarchyName   == stagingTable.ProductCategoryHierarchyName    &&
                          parentStagingTable.DefinitionGroup                == stagingTable.DefinitionGroup                 &&
                          parentStagingTable.ExecutionId                    == stagingTable.ExecutionId                     &&
                          parentStagingTable.ImportLevel                    == importLevel;

            ttscommit;

        } while (stagingTable.rowCount());

        return importLevel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>maximumSupportedImportLevel</Name>
				<Source><![CDATA[
    private static int maximumSupportedImportLevel()
    {
        int maximum =
            new DictField(tableNum(EcoResProductCategoryStaging), fieldNum(EcoResProductCategoryStaging, ImportSortPath)).stringLen() div
               new DictField(tableNum(EcoResProductCategoryStagingNumbering), fieldNum(EcoResProductCategoryStagingNumbering, HexImportSequence)).stringLen();
        return maximum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateImportLevelSortPath</Name>
				<Source><![CDATA[
    private static void updateImportLevelSortPath(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution, int _maxImportLevel)
    {
        EcoResProductCategoryStaging            stagingTable;
        EcoResProductCategoryStaging            parentStagingTable;
        EcoResProductCategoryStagingNumbering   stagingNumbering;

        for (int importLevel = 2; importLevel <= _maxImportLevel; importLevel++)
        {
            ttsbegin;

            update_recordset stagingTable
                setting ImportSortPath = parentStagingTable.ImportSortPath + stagingNumbering.HexImportSequence
                where stagingTable.ImportLevel      == importLevel                                      &&
                      stagingTable.DefinitionGroup  == _dmfDefinitionGroupExecution.DefinitionGroup     &&
                      stagingTable.ExecutionId      == _dmfDefinitionGroupExecution.ExecutionId
                join parentStagingTable
                    where parentStagingTable.CategoryName                   == stagingTable.ParentProductCategoryName       &&
                          parentStagingTable.ProductCategoryHierarchyName   == stagingTable.ProductCategoryHierarchyName    &&
                          parentStagingTable.DefinitionGroup                == stagingTable.DefinitionGroup                 &&
                          parentStagingTable.ExecutionId                    == stagingTable.ExecutionId
                join stagingNumbering
                    where stagingNumbering.RecId    == stagingTable.RecId;

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTopologicalSortPath</Name>
				<Source><![CDATA[
    private static void updateTopologicalSortPath(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        DMFImportExportSequencer sequencer = new DMFImportExportSequencer();

        container keyFields = [fieldNum(EcoResProductCategoryStaging, CategoryName),
            fieldNum(EcoResProductCategoryStaging, ProductCategoryHierarchyName)];
        container refFields = [fieldNum(EcoResProductCategoryStaging, ParentProductCategoryName),
            fieldNum(EcoResProductCategoryStaging, ProductCategoryHierarchyName)];

        sequencer.addDependencyRelationship(
            tableNum(EcoResProductCategoryStaging),
            keyFields,
            refFields,
            _dmfDefinitionGroupExecution.DefinitionGroup,
            _dmfDefinitionGroupExecution.ExecutionId);

        DMFImportExportSequenceTmp tmp = sequencer.sequence();

        EcoResProductCategoryStaging stagingTable;

        ttsbegin;

        update_recordset stagingTable
            setting ImportSequence = tmp.ImportSequence
            join tmp
                where tmp.RefRecId == stagingTable.RecId;

        update_recordset stagingTable
            setting ImportSequence = 0
            notexists join tmp
                where tmp.RefRecId == stagingTable.RecId;

        ttscommit;

        EcoResProductCategoryStagingNumbering stagingNumbering;

        ttsbegin;

        update_recordset stagingTable
            setting ImportSortPath = stagingNumbering.HexImportSequence
            where stagingTable.DefinitionGroup  == _dmfDefinitionGroupExecution.DefinitionGroup     &&
                  stagingTable.ExecutionId      == _dmfDefinitionGroupExecution.ExecutionId
            join stagingNumbering
                where stagingNumbering.RecId    == stagingTable.RecId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@DMF:StagingDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>EcoResCategoryHierarchyDetails</FormRef>
	<Label>@SCM:ProductCategories</Label>
	<TableGroup>Staging</TableGroup>
	<TitleField1>CategoryName</TitleField1>
	<TitleField2>CategoryCode</TitleField2>
	<PrimaryIndex>StagingIdx</PrimaryIndex>
	<ReplacementKey>StagingIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductCategoryHierarchyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParentProductCategoryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParentProductCategoryCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FriendlyCategoryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsTangibleProduct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryKeywords</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCategoryInheritingParentCategoryAttributes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCategoryInheritingParentProductAttributes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PKWiUCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectCategoryName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefinitionGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExecutionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductCategoryHierarchyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ExtensionList</Name>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Label>@DMF:StagingExtensionGroup</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefinitionGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSelected</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExecutionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ImportSequence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PositiveNumber</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ImportLevel</Name>
			<ExtendedDataType>PositiveNumber</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ImportSortPath</Name>
			<ExtendedDataType>EcoResCategorySortPath</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultProjectGlobalCategoryId</Name>
			<ExtendedDataType>SharedCategoryId</ExtendedDataType>
			<IsManuallyUpdated>Yes</IsManuallyUpdated>
			<IsSystemGenerated>Yes</IsSystemGenerated>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParentProductCategoryHierarchyName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>EcoResCategoryHierarchyName</ExtendedDataType>
			<Label>@SCM:Field_EcoResProductCategoryEntity_ParentProductCategoryHierarchyName</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefinitionGroup</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>DMFDefinitionGroupName</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Mandatory>Yes</Mandatory>
			<StringSize>60</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExecutionId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>DMFExecutionId</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Mandatory>Yes</Mandatory>
			<StringSize>90</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsSelected</Name>
			<ExtendedDataType>DMFIsSelected</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransferStatus</Name>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<EnumType>DMFTransferStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProductCategoryHierarchyName</Name>
			<ExtendedDataType>EcoResCategoryHierarchyName</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Label>@SCM:ProductCategoryHierarchyName</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParentProductCategoryCode</Name>
			<ExtendedDataType>EcoResCategoryCommodityCode</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Label>@SCM:ParentProductCategoryCode</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParentProductCategoryName</Name>
			<ExtendedDataType>EcoResCategoryName</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Label>@SCM:ParentProductCategoryName</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryCode</Name>
			<ExtendedDataType>EcoResCategoryCommodityCode</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Label>@SCM:ProductCategoryCode</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryName</Name>
			<ExtendedDataType>EcoResCategoryName</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Label>@SCM:ProductCategoryName</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FriendlyCategoryName</Name>
			<ExtendedDataType>EcoResCategoryFriendlyName</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryDescription</Name>
			<ExtendedDataType>EcoResCategoryDescription</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsTangibleProduct</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Label>@SYS319083</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryKeywords</Name>
			<ExtendedDataType>EcoResCategorySearchText</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCategoryInheritingParentCategoryAttributes</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Label>@SYS300984</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCategoryInheritingParentProductAttributes</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Label>@SYS300986</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PKWiUCode</Name>
			<CountryRegionCodes>PL</CountryRegionCodes>
			<ExtendedDataType>PlPKWiUCode</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjectCategoryName</Name>
			<ExtendedDataType>CategoryName</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Label>@Proj:ProjectCategoryName</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CategoryRecordId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RecId</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Label>@SCM:Field_EcoResProductCategoryEntity_CategoryRecordId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>ExternalId</Name>
			<ExtendedDataType>EcoResProductCategoryExternalId</ExtendedDataType>
			<IsSystemGenerated>Yes</IsSystemGenerated>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>StagingIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<Fields>
				<AxTableIndexField>
					<DataField>DefinitionGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ExecutionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProductCategoryHierarchyName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CategoryName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ParentIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefinitionGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ExecutionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProductCategoryHierarchyName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ParentProductCategoryName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ImportLevelIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefinitionGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ExecutionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ImportLevel</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>EcoResCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<IsManuallyUpdated>Yes</IsManuallyUpdated>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Name</Name>
					<Field>CategoryName</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>EcoResCategoryHierarchy</Name>
			<Cardinality>ZeroMore</Cardinality>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<RelatedTable>EcoResCategoryHierarchy</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Name</Name>
					<Field>ProductCategoryHierarchyName</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DataEntity</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<EntityRelationshipRole>@DMF:StagingToDataEntityRelationshipRole</EntityRelationshipRole>
			<IsSystemGenerated>Yes</IsSystemGenerated>
			<RelatedTable>EcoResProductCategoryEntity</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductCategoryHierarchyName</Name>
					<Field>ProductCategoryHierarchyName</Field>
					<RelatedField>ProductCategoryHierarchyName</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryName</Name>
					<Field>CategoryName</Field>
					<RelatedField>CategoryName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>