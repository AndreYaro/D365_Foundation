<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayTaxTransOpen</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RPayTaxTransOpen extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>documentInfo</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public container documentInfo()
    {
        RPayTrans                           payTrans;
        RPaySheetTrans                      paySheetTrans;
        RPaySheetTable                      paySheetTable;
        GeneralJournalEntry                 generalJournalEntry;
        SubledgerVoucherGeneralJournalEntry subledgerVoucherGeneralJournalEntry;

        BankPaymentOrderJour_RU paymentOrderJour;

        if (this.TaxSourceType == RPayTaxSourceType::TaxPayment)
        {
            select firstonly PaymentOrderNum, PaymentTransDate from paymentOrderJour
                where paymentOrderJour.RecId == this.RefRecId;

            return [paymentOrderJour.PaymentOrderNum, paymentOrderJour.PaymentTransDate];
        }

        if (this.TaxSourceType == RPayTaxSourceType::TaxRedemption)
        {
            payTrans = RPayTrans::find(this.RefRecId);
            paySheetTrans = RPaySheetTrans::findRecId(payTrans.RefSheetTransRecid);

            if (paySheetTrans.PayVoucherBank)
            {
                select firstonly DocumentNumber, AccountingDate from generalJournalEntry
                exists join subledgerVoucherGeneralJournalEntry
                    where subledgerVoucherGeneralJournalEntry.GeneralJournalEntry   == generalJournalEntry.RecId &&
                        subledgerVoucherGeneralJournalEntry.VoucherDataAreaId       == curext() &&
                        subledgerVoucherGeneralJournalEntry.Voucher                 == paySheetTrans.PayVoucherBank &&
                        subledgerVoucherGeneralJournalEntry.AccountingDate          == paySheetTrans.PayDateBank;
            }
            else
            {
                select firstonly DocumentNumber, AccountingDate from generalJournalEntry
                exists join subledgerVoucherGeneralJournalEntry
                    where subledgerVoucherGeneralJournalEntry.GeneralJournalEntry   == generalJournalEntry.RecId &&
                          subledgerVoucherGeneralJournalEntry.VoucherDataAreaId     == curext()
                exists join paySheetTrans
                    where paySheetTrans.PayVoucherBank  == subledgerVoucherGeneralJournalEntry.Voucher   &&
                          paySheetTrans.PayDateBank     == subledgerVoucherGeneralJournalEntry.AccountingDate &&
                          paySheetTrans.EmplId          == payTrans.EmplId
                exists join paySheetTable
                    where paySheetTable.RecId        == paySheetTrans.sheetTableRecId    &&
                          paySheetTable.PayPeriod    >= dateStartMth(payTrans.PayPeriod) &&
                          paySheetTable.PayPeriod    <= dateEndMth(payTrans.PayPeriod)   &&
                          paySheetTable.PaySheetType == RPaySheetType::Payment;
            }

            return [generalJournalEntry.DocumentNumber, generalJournalEntry.AccountingDate];
        }

        return connull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPaymentOrderJour</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        void initFromPaymentOrderJour(BankPaymentOrderJour_RU _paymentOrderJour)
    {
        this.RefTableId             = _paymentOrderJour.TableId;
        this.RefRecId               = _paymentOrderJour.RecId;
        this.TaxSourceType          = RPayTaxSourceType::TaxPayment;
        this.BudgetReceiptClassCode = _paymentOrderJour.PaymBudgetReceiptClassCode;
        this.TaxVendor              = _paymentOrderJour.AccountNumRecipient;
        this.Amount                 = - _paymentOrderJour.AmountCur;
        this.TransDate              = _paymentOrderJour.PaymentTransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPaySheetTrans</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        void initFromPaySheetTrans(RPaySheetTrans _paySheetTrans)
    {
        this.RefTableId             = _paySheetTrans.TableId;
        this.RefRecId               = _paySheetTrans.RecId;
        this.TaxSourceType          =  RPayTaxSourceType::InterimSheet;
        this.BudgetReceiptClassCode = _paySheetTrans.budgetReceiptClassCode();
        this.BranchId               = _paySheetTrans.BranchId;
        this.Amount                 = _paySheetTrans.TaxAmount;
        this.TransDate              = _paySheetTrans.findRPaySheetTable().TransDate;
        this.EmplId                 = _paySheetTrans.Emplid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPayTrans</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        void initFromPayTrans(RPayTrans _payTrans)
    {
        this.RefTableId             = _payTrans.TableId;
        this.RefRecId               = _payTrans.RecId;
        this.TaxSourceType          = _payTrans.TaxRedemption           ?
                                       RPayTaxSourceType::TaxRedemption :
                                       RPayTaxSourceType::IncomeTax;
        this.BudgetReceiptClassCode = _payTrans.budgetReceiptClassCode();
        this.BranchId               = _payTrans.BranchId;
        this.Amount                 = - _payTrans.Amount;
        this.TransDate              = _payTrans.PayPeriod;
        this.EmplId                 = _payTrans.EmplId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentOrderNum</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display BankPaymentOrderBase_RU paymentOrderNum()
    {
        return conpeek(this.documentInfo(), 1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salaryPaymentDate</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public TransDate salaryPaymentDate()
    {
        RPayTrans       payTrans;
        RPaySheetTrans  paySheetTrans;
        RPaySheetTable  paySheetTable;
        RCashTrans      cashTrans;

        if (this.TaxSourceType == RPayTaxSourceType::InterimSheet)
        {
            paySheetTrans = RPaySheetTrans::findRecId(this.RefRecId);
        }

        if (this.TaxSourceType == RPayTaxSourceType::IncomeTax)
        {
            payTrans = RPayTrans::find(this.RefRecId);

            select firstonly paySheetTrans
                where paySheetTrans.EmplId == payTrans.EmplId
            exists join paySheetTable
                where paySheetTable.RecId        == paySheetTrans.sheetTableRecId    &&
                      paySheetTable.PayPeriod    >= dateStartMth(payTrans.PayPeriod) &&
                      paySheetTable.PayPeriod    <= dateEndMth(payTrans.PayPeriod)   &&
                      paySheetTable.PaySheetType == RPaySheetType::Payment;
        }

        if (! paySheetTrans)
        {
            return datenull();
        }

        if (paySheetTrans.SendToBank)
        {
            if (paySheetTrans.PayVoucherBank &&
                GeneralLedgerExtension::findBySubledgerVoucherAccountingDate(paySheetTrans.PayVoucherBank, paySheetTrans.PayDateBank))
            {
                return paySheetTrans.PayDateBank;
            }
        }
        else
        {
            paySheetTable = RPaySheetTable::find(paySheetTrans.sheetTableRecId);
            cashTrans = RCashTrans::find(paySheetTable.CashAccount,
                                         paySheetTable.CashOrderNum,
                                         RCashDocType::DisbursementSlip,
                                         paySheetTable.CashOrderDate);

            if (GeneralLedgerExtension::findBySubledgerVoucherAccountingDate(cashTrans.Voucher, cashTrans.TransDate))
            {
                return cashTrans.TransDate;
            }
        }

        return datenull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxAccountDeffered</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public LedgerDimensionDefaultAccount taxAccountDeffered()
    {
        RPayTaxIncomeGroupTable rPayTaxIncomeGroupTable;

        select firstonly TaxCode from rPayTaxIncomeGroupTable
            where rPayTaxIncomeGroupTable.PaymBudgetReceiptClassCode == this.BudgetReceiptClassCode;

        return TaxLedgerAccountGroup::taxDeferredLedgerDim_RU(rPayTaxIncomeGroupTable.TaxCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxAccountOutgoing</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public LedgerDimensionDefaultAccount taxAccountOutgoing()
    {
        RPayTaxIncomeGroupTable rPayTaxIncomeGroupTable;

        select firstonly TaxCode from rPayTaxIncomeGroupTable
            where rPayTaxIncomeGroupTable.PaymBudgetReceiptClassCode == this.BudgetReceiptClassCode;

        return TaxLedgerAccountGroup::taxOutgoingLedgerDimension_RU(rPayTaxIncomeGroupTable.TaxCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
        public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (ret && this.SettleAmount != 0)
        {
            ret = checkFailed(strfmt("@RUP3488",
                this.EmplId,
                this.TransDate,
                this.BranchId,
                this.TaxVendor,
                this.Amount,
                this.SettleAmount));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        static RPayTaxTransOpen find(RecId _recId, boolean _forUpdate = false)
    {
        RPayTaxTransOpen rPayTaxTransOpen;

        if (_recId)
        {
            rPayTaxTransOpen.selectForUpdate(_forUpdate);

            select firstonly rPayTaxTransOpen
                index hint recid
                where rPayTaxTransOpen.RecId == _recId;
        }

        return rPayTaxTransOpen;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxPaymForRateStatus</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static RPayAmount taxPaymForRateStatus(
        RHRMEmplId        _emplId,
        RPayRateCode      _payRateCode,
        BranchId_RU       _branchId,
        ReportPeriod_RU   _startDate    = dateStartYr(RPayParameters::payPeriod()),
        ReportPeriod_RU   _endDate      = endmth(RPayParameters::payPeriod()),
        boolean           _taxByBranch  = false)
    {
        RPayTaxTransOpen        payTaxTransOpen;
        RPayTaxTransOpen        payTaxTransOpenPayment;
        RPayTaxTransSettlement  payTaxTransSettlement;
        RPayTaxIncomeGroupTable payTaxIncomeGroupTable;

        select sum(SettleAmount) from payTaxTransSettlement
            where payTaxTransSettlement.CanBeReversed
        exists join payTaxTransOpen
            where payTaxTransOpen.RecId         == payTaxTransSettlement.TransRecId &&
                  payTaxTransOpen.TransDate     >= _startDate                       &&
                  payTaxTransOpen.TransDate     <= _endDate                         &&
                  payTaxTransOpen.EmplId        == _emplId                          &&
                 (payTaxTransOpen.TaxSourceType == RPayTaxSourceType::InterimSheet  ||
                  payTaxTransOpen.TaxSourceType == RPayTaxSourceType::IncomeTax)    &&
                 (payTaxTransOpen.BranchId      == _branchId || !_taxByBranch)
        exists join payTaxIncomeGroupTable
            where payTaxIncomeGroupTable.PaymBudgetReceiptClassCode == payTaxTransOpen.BudgetReceiptClassCode &&
                 (payTaxIncomeGroupTable.RateCode                   == _payRateCode ||
                  payTaxIncomeGroupTable.RateCodeGroup              == _payRateCode)
        exists join payTaxTransOpenPayment
            where payTaxTransOpenPayment.RecId          == payTaxTransSettlement.OffsetRecId &&
                  payTaxTransOpenPayment.TaxSourceType  == RPayTaxSourceType::TaxPayment;

        return payTaxTransSettlement.SettleAmount;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RPayTax</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@RUP6174</DeveloperDocumentation>
	<FormRef>RPayTaxOpenTrans</FormRef>
	<Label>@RUP3223</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>TransDate</TitleField1>
	<TitleField2>TaxSourceType</TitleField2>
	<Modules>Obsolete</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetReceiptClassCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettleAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmplId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SettleAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BudgetPayment</Name>
			<Label>@GLS102609</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetReceiptClassCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmplId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>paymentOrderNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxVendor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS15217</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Source</Name>
			<Label>@SYS11258</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxSourceType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BranchId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BranchId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BudgetReceiptClassCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymentOrderBudgetReceiptClassCode_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Closed</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS67267</Label>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EmplId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RHRMEmplId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SettleAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayAmount</ExtendedDataType>
			<Label>@SYS11660</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxSourceType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RPayTaxSourceType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxVendor</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<Label>@RUP3485</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RefTableRecIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BudgetClassCodeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetReceiptClassCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EmplDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>BankPaymentOrderJour_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankPaymentOrderJour_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>TaxSourceType</Name>
					<Field>TaxSourceType</Field>
					<ValueStr>RPayTaxSourceType::TaxPayment</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Branches_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Branches_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BranchId</Name>
					<SourceEDT>BranchId_RU</SourceEDT>
					<Field>BranchId</Field>
					<RelatedField>BranchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>BranchIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymentOrderBudgetReceiptClassTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PaymentOrderBudgetReceiptClassTable_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetReceiptClassCode</Name>
					<SourceEDT>PaymentOrderBudgetReceiptClassCode_RU</SourceEDT>
					<Field>BudgetReceiptClassCode</Field>
					<RelatedField>PaymentOrderBudgetReceiptClassCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PaymentOrderBudgetReceiptClassCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RHRMEmplTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RHRMEmplTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EmplId</Name>
					<Field>EmplId</Field>
					<RelatedField>EmployeeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>EmployeeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RPaySheetTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RPaySheetTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>TaxSourceType</Name>
					<Field>TaxSourceType</Field>
					<ValueStr>RPayTaxSourceType::InterimSheet</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RPayTrans_Tax</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RPayTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RPayTrans_Tax</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RPayTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>TaxSourceType</Name>
					<Field>TaxSourceType</Field>
					<ValueStr>RPayTaxSourceType::IncomeTax</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>TaxRedemption_Extern</Name>
					<RelatedField>TaxRedemption</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RPayTrans_TaxRefund</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RPayTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RPayTrans_TaxRefund</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RPayTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>TaxSourceType</Name>
					<Field>TaxSourceType</Field>
					<ValueStr>RPayTaxSourceType::TaxRedemption</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>TaxRedemption_Extern</Name>
					<RelatedField>TaxRedemption</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxVendor</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>TaxVendor</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>