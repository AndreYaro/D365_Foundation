<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailInventLinkedItem</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailInventLinkedItem extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the caption of the form.
    /// </summary>
    /// <returns>
    /// The caption of the form.
    /// </returns>
    public str caption()
    {
        str ret;

        ret = super();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record in <c>RetailInventLinkedItem</c> table.
    /// </summary>
    /// <remarks>
    /// If replication of the record is allowed for the table, action is inserted into the <c>RetailConnPreactionTable</c> table.
    /// </remarks>
    /// <exception cref="Exception::Error">
    /// An error is thrown if the Retail parameters is set up.
    /// </exception>
    public void insert()
    {
        if (!RetailParameters::find())
            throw error("@RET3967");

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkedItemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the name of a linked item.
    /// </summary>
    /// <returns>
    /// The name of the linked item.
    /// </returns>
    display ItemName linkedItemName()
    {
        ItemName    ret;

        if (this.LinkedItemId)
        {
            ret = InventTable::find(this.LinkedItemId).itemName();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </summary>
    public void renamePrimaryKey()
    {
        ;
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showItemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the name of an item.
    /// </summary>
    /// <returns>
    /// The name of the item.
    /// </returns>
    display ItemName showItemName()
    {
        ItemName    ret;

        if (this.ItemId)
        {
            ret = InventTable::find(this.ItemId).itemName();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the field is valid.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field Id which is to be validated.
    /// </param>
    /// <returns>
    /// true if the field is valid; otherwise false.
    /// </returns>
    /// <remarks>
    /// Calls method <c>validateLinkedItem</c> to validate field <c>LinkedItemId</c> from table <c>RetailInventLinkedItem</c>.
    /// Calls method <c>validateItem</c> to validate field <c>ItemId</c> from table <c>RetailInventLinkedItem</c>.
    /// </remarks>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (fieldExt2Id(_fieldIdToCheck))
        {
            case fieldNum(RetailInventLinkedItem, LinkedItemId):
                ret = this.validateLinkedItem();
                break;
            case fieldNum(RetailInventLinkedItem, ItemId):
                ret = this.validateItem();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the <c>ItemId</c> field of the <c>RetailInventLinkedItem</c> table is valid.
    /// </summary>
    /// <returns>
    /// true if the field is valid; otherwise, false.
    /// </returns>
    boolean validateItem()
    {
        RetailInventLinkedItem inventLinkedItem;

        if (this.ItemId == this.LinkedItemId)
            return checkFailed(strFmt("@RET3982",this.ItemId));

        select firstonly inventLinkedItem
        where   inventLinkedItem.LinkedItemId == this.ItemId;

        if (inventLinkedItem)
            return checkFailed(strFmt("@RET3983",this.ItemId));

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLinkedItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the <c>LinkedItemId</c> field of the <c>RetailInventLinkedItem</c> table.
    /// </summary>
    /// <returns>
    /// true if the field is valid; otherwise, false.
    /// </returns>
    boolean validateLinkedItem()
    {
        RetailInventLinkedItem inventLinkedItem;

        if (this.ItemId == this.LinkedItemId)
            return checkFailed(strFmt("@RET3982",this.ItemId));

        select firstonly inventLinkedItem
        where   inventLinkedItem.ItemId == this.LinkedItemId;

        if (inventLinkedItem)
            return checkFailed(strFmt("@RET3984",this.LinkedItemId));

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailInventLinkedItem</c> table.
    /// </summary>
    /// <param name="_itemId">
    /// The item ID of the record to find.
    /// </param>
    /// <param name="_unitId">
    /// The unit ID of the record to find.
    /// </param>
    /// <param name="_linkedItemId">
    /// The linked item ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailInventLinkedItem</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailInventLinkedItem find(ItemId               _itemId,
                                           UnitOfMeasureSymbol  _unitId,
                                           ItemId               _linkedItemId,
                                           boolean              _forUpdate = false)
    {
        RetailInventLinkedItem  inventLinkedItem;

        if (_itemId && _unitId && _linkedItemId)
        {
            inventLinkedItem.selectForUpdate(_forUpdate);

            select firstonly inventLinkedItem
                index hint itemUnitLinkedItemIdx
                where   inventLinkedItem.ItemId == _itemId
                &&      inventLinkedItem.Unit == _unitId
                &&      inventLinkedItem.LinkedItemId == _linkedItemId;
        }

        return inventLinkedItem;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4040274</DeveloperDocumentation>
	<FormRef>RetailInventLinkedItem</FormRef>
	<Label>@RET3142</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>itemId</TitleField1>
	<TitleField2>linkedItemId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>itemUnitLinkedItemIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>InventoryAndAdvancedWarehouse</Modules>
	<PrimaryIndex>itemUnitLinkedItemIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>itemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>unit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>qty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>itemInfo</Name>
			<Label>@RET3059</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>itemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showItemName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>linkDetails</Name>
			<Label>@RET3144</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>unit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>blocked</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>linkedItem</Name>
			<Label>@RET3142</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>linkedItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>linkedItemName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>blocked</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Blocked</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>itemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>linkedItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Label>@RET3143</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Qty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>unit</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>itemUnitLinkedItemIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>itemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>unit</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>linkedItemId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ItemInventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ItemInventTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>itemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>itemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LinkedInventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>linkedItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>linkedItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailInventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailInventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RBOInventTableLinked</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>itemId</Name>
					<SourceEDT>RetailItemId</SourceEDT>
					<Field>itemId</Field>
					<RelatedField>itemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>unit</Name>
					<Field>unit</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SymbolIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>