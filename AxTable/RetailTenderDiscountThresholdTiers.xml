<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTenderDiscountThresholdTiers</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailTenderDiscountThresholdTiers extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls appropriate validate methods to modified fields.
    /// </summary>
    /// <param name="_fieldId">
    ///    The ID of the field that is modified.
    /// </param>
    /// <remarks>
    ///    This method executes when any field in the table is modified.
    /// </remarks>
    public void modifiedField(FieldId _fieldId)
    {
        if (_fieldId == fieldNum(RetailTenderDiscountThresholdTiers, DiscountValue))
        {
            this.validateDiscountValue();
        }
        else if (_fieldId == fieldNum(RetailTenderDiscountThresholdTiers, AmountThreshold))
        {
            this.validateAmountThreshold();
        }

        super(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAmountThreshold</Name>
				<Source><![CDATA[
    private boolean validateAmountThreshold()
    {
        return RetailPricingConfigurationValidator::isPositiveAmount(this.AmountThreshold);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDiscountValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the discount value is between 0 to 100 when type is percent
    /// </summary>
    /// <returns>
    /// true if the range is valid; otherwise, false.
    /// </returns>
    private boolean validateDiscountValue()
    {
        return RetailPricingConfigurationValidator::isValidDiscountPercentage(this.DiscountValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super() && this.validateDiscountValue() && this.validateAmountThreshold();
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailTenderThresholdTiers</c> table.
    /// </summary>
    /// <param name="_offerId">
    /// The record ID of the <c>RetailTenderThresholdTiers</c> table.
    /// </param>
    /// <param name="_update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailTenderThresholdTiers</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailTenderDiscountThresholdTiers find(RetailOfferId _offerId, boolean _forUpdate = false)
    {
        RetailTenderDiscountThresholdTiers retailTenderDiscountThresholdTiers;

        retailTenderDiscountThresholdTiers.selectForUpdate(_forUpdate);

        select firstOnly retailTenderDiscountThresholdTiers
            where retailTenderDiscountThresholdTiers.OfferId == _offerId;

        return retailTenderDiscountThresholdTiers;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@Retail:RetailTenderThresholdTiersDevDoc</DeveloperDocumentation>
	<Label>@Retail:RetailTenderThresholdTiers</Label>
	<TitleField1>OfferId</TitleField1>
	<TitleField2>AmountThreshold</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>Merchandising</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountThreshold</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DiscountValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDiscountValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OfferId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOfferId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>OfferIdAmountThreshold</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>OfferId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AmountThreshold</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailTenderDiscount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailTenderDiscount</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OfferId</Name>
					<Field>OfferId</Field>
					<RelatedField>OfferId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RetailOfferIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>