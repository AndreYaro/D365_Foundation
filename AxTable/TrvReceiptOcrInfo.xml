<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvReceiptOcrInfo</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TrvReceiptOcrInfo extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Retrieves the receipt OCR info for a given document reference record identifier.
    /// </summary>
    /// <param name="_docuRefRecId">
    ///   Identifier for the uploaded document.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that determines whether the record should be selected for update; optional.
    /// </param>
    /// <returns>
    ///    Table buffer containing details for the document.
    /// </returns>
    public static TrvReceiptOcrInfo find(RefRecId _docuRefRecId, boolean _forUpdate = false)
    {
        if (_docuRefRecId)
        {
            TrvReceiptOcrInfo trvReceiptOcrInfo;

            trvReceiptOcrInfo.selectForUpdate(_forUpdate);
            select firstonly trvReceiptOcrInfo where trvReceiptOcrInfo.DocuRefRecId == _docuRefRecId;

            return trvReceiptOcrInfo;
        }

        return null;

    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Retrieves the receipt OCR info for a given record identifier for the table.
    /// </summary>
    /// <param name="_recId">
    ///   Identifier for the unique record in the table.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that determines whether the record should be selected for update; optional.
    /// </param>
    /// <returns>
    ///    Table buffer containing details.
    /// </returns>
    public static TrvReceiptOcrInfo findByRecId(RecId _recId, boolean _forUpdate = false)
    {
        if (_recId)
        {
            TrvReceiptOcrInfo trvReceiptOcrInfo;

            trvReceiptOcrInfo.selectForUpdate(_forUpdate);
            select firstonly trvReceiptOcrInfo where trvReceiptOcrInfo.RecId == _recId;

            return trvReceiptOcrInfo;
        }
    
        return null;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Validates if there is record for a given document reference record identifier.
    /// </summary>
    /// <param name="_docuRefRecId">
    ///   Identifier for the uploaded document.
    /// </param>
    /// <returns>
    ///    true if record exists; otherwise false.
    /// </returns>
    public static boolean exist(RefRecId _docuRefRecId)
    {
        boolean ret = false;
        
        if (_docuRefRecId)
        {
            TrvReceiptOcrInfo trvReceiptOcrInfo;
            ret = (select firstonly RecId from trvReceiptOcrInfo 
                        where trvReceiptOcrInfo.DocuRefRecId == _docuRefRecId).RecId != 0;
        }
    
        return ret;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCreditCardReceipt</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Validates if the document is uploaded for a corporate credit card expense transactions.
    /// </summary>
    /// <param name="_docuRefRecId">
    ///   Identifier for the uploaded document.
    /// </param>
    /// <returns>
    /// true if the uploaded document is credit card receipt; otherwise, false.
    /// </returns>
    public static boolean isCreditCardReceipt(RefRecId _docuRefRecId)
    {
        boolean ret = false;
        
        if (_docuRefRecId)
        {
            TrvReceiptOcrInfo trvReceiptOcrInfo;

            ret = (select firstonly IsCreditCardExpense from trvReceiptOcrInfo
                        where trvReceiptOcrInfo.DocuRefRecId == _docuRefRecId).IsCreditCardExpense;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateIfOCRNeeded</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if Receipt needs to be processed for OCR.
    /// </summary>
    /// <param name="_refTableId">
    ///   Table identifier for the table attached to the document
    /// </param>
    /// <param name="_refRecId">
    ///   Record identifier for the record attached to the document
    /// </param>
    /// <returns>
    ///    true if record needs to be processed; otherwise, false.
    /// </returns>
    public static boolean validateIfOCRNeeded(RefTableId _refTableId, RefRecId _refRecId)
    {
        boolean ret = false;
        
        if (_refTableId && _refRecId)
        {
            DocuRef  docuRef;
            TrvReceiptOcrInfo trvReceiptOcrInfo;

            select RecId from docuRef
                    where docuRef.RefTableId == _refTableId
                    && docuRef.RefRecId == _refRecId;
        
            ret = docuRef.RecId != 0;

        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ExpenseTravelRequisition</ConfigurationKey>
	<DeveloperDocumentation>@Expense:TrvReceiptOCRInfoDevDoc</DeveloperDocumentation>
	<Label>@Expense:ExpenseOCRInfoTable</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>DocuRefRecId</TitleField1>
	<TitleField2>Merchant</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>DocuRefRecIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>Expense</Modules>
	<PrimaryIndex>DocuRefRecIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<ExtendedDataType>TrvTransDate</ExtendedDataType>
			<HelpText>@SYS132456</HelpText>
			<Label>@Expense:TransactionDate</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Currency</Name>
			<ExtendedDataType>TrvAmountCurrency</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalAmount</Name>
			<ExtendedDataType>TrvTotalBilledAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SubTotalAmount</Name>
			<ExtendedDataType>TrvTotalExpenseAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>TransTime</Name>
			<ExtendedDataType>TrvExpTime</ExtendedDataType>
			<HelpText>@SYS70280</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Merchant</Name>
			<ExtendedDataType>TrvExpMerchantId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DocuRefRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS22565</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HcmWorker</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CostType</Name>
			<ExtendedDataType>TrvCostTypeEDT</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCreditCardExpense</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@SYS314505</HelpText>
			<Label>@SYS130181</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DocuRefRecIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DocuRefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HcmWorkerIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>HcmWorker</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DocuRef</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>DocuRef</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocuRefRecId</Name>
					<Field>DocuRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HcmWorker</Name>
					<Field>HcmWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>