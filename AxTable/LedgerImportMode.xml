<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerImportMode</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerImportMode extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>actionClassName</Name>
				<Source><![CDATA[
    public edit ImportFormat actionClassName(boolean _set, className _className)
    {
        classId id;
        LedgerInAccountStatement ledgerInAccountStatement;

        if (_set)
        {
            id = Global::className2Id(CustVendOutPaymRecord::interfaceName2ClassName(_className, classNum(LedgerInAccountStatement)));

            if (id)
            {
                if (id == classNum(LedgerInAccountStatementFI_BASIC))
                {
                    warning(strFmt("@LedgerTranslation:ImportModeObsoleteError", this.Name, _className));
                }

                this.ClassId = id;
            }
            else
            {
                this.ClassId = 0;
                return '';
            }
        }

        ledgerInAccountStatement = this.ledgerInAccountStatement();

        if (!ledgerInAccountStatement)
        {
            this.ClassId = 0;
            return '';
        }

        return ledgerInAccountStatement.interfaceName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerInAccountStatement</Name>
				<Source><![CDATA[
    private LedgerInAccountStatement ledgerInAccountStatement()
    {
        return LedgerInAccountStatement::newLedgerInAccountStatement(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean isValid;

        isValid = super(_fieldIdToCheck);

        if (isValid)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(LedgerImportMode, BankAccountId):
                    if (this.BankAccountId)
                    {
                        isValid = BankAccountTable::checkIsActive(this.BankAccountId);
                    }
                    break;
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(ImportMode _importMode)
    {
        boolean ret = true;

        if (!LedgerImportMode::exist(_importMode))
        {
            ret = checkFailed(strFmt(LedgerImportMode::txtNotExist(), _importMode));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(ImportMode _importMode)
    {
        boolean found;

        found = (select firstonly RecId from ledgerImportMode
            where ledgerImportMode.ImportMode == _importMode).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static LedgerImportMode find(
        ImportMode _importMode,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        LedgerImportMode ledgerImportMode;

        ledgerImportMode.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            ledgerImportMode.concurrencyModel(_concurrencyModel);
        }

        select firstonly ledgerImportMode
            where ledgerImportMode.ImportMode == _importMode;

        return ledgerImportMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBankAccountId</Name>
				<Source><![CDATA[
    public static CompanyBankAccountId findBankAccountId(ImportMode _importMode)
    {
        return (select ledgerImportMode
            where ledgerImportMode.ImportMode == _importMode).BankAccountId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInterCoLedgerDimension</Name>
				<Source><![CDATA[
    public static LedgerDimensionDefaultAccount findInterCoLedgerDimension(ImportMode _importMode)
    {
        return (select ledgerImportMode
            where ledgerImportMode.ImportMode == _importMode).InterCompanyLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102227";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS127134</DeveloperDocumentation>
	<FormRef>LedgerImportMode</FormRef>
	<Label>@SYS68782</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>ImportMode</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ImportModeIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Bank</Modules>
	<PrimaryIndex>ImportModeIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ImportMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterCompanyLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ClassID</Name>
			<Label>@SYS24636</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ClassId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Groups</Name>
			<Label>@SYS40804</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ImportMode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS12919</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankAccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterCompanyLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankAccountId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyBankAccountId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ClassId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ClassId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ImportMode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ImportMode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InterCompanyLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS21687</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ImportModeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ImportMode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FK_DimensionAttributeValueCombination_Le</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InterCompanyLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankAccountTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BankAccountTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankAccountId</Name>
					<SourceEDT>CompanyBankAccountId</SourceEDT>
					<Field>BankAccountId</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InterCompanyLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InterCompanyLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerImportMode</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InterCompanyLedgerDimension</Name>
					<Field>InterCompanyLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>