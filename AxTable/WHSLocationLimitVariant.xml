<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLocationLimitVariant</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSLocationLimitVariant extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkInventDimCombination</Name>
				<Source><![CDATA[
    private void checkInventDimCombination()
    {
        if (!InventDimCombination::find(this.ItemId, this.InventDimIDProductDim).RecId)
        {
            throw error("@SYP4980040");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        WHSLocationLimitAccessor::construct().clearCache();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.checkInventDimCombination();

        WHSLocationLimitAccessor::construct().clearCache();

        this.setWarehouseSelection();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.checkInventDimCombination();

        WHSLocationLimitAccessor::construct().clearCache();

        this.setWarehouseSelection();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(WHSLocationLimitVariant, InventLocationId):
                if (this.InventLocationId && this.WarehouseGroupAll == WhsWarehouseGroupAll::Warehouse)
                {
                    InventLocation warehouse = InventLocation::find(this.InventLocationId);

                    if (warehouse)
                    {
                        ret = ret && warehouse.checkIsWHSEnabled();
                    }
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean         ret;

        ret = super();

        if (ret)
        {
            if (this.wmsLocationId && this.LocProfileId)
            {
                ret = checkFailed("@WAX345");
            }
            else if (this.WMSLocationId == '' && this.LocProfileId == '')
            {
                ret = checkFailed("@SYP5070009");
            }
            else if (this.wmsLocationId && this.WarehouseGroupAll == WhsWarehouseGroupAll::Warehouse)
            {
                if (!WMSLocation::find(this.wmsLocationId, this.InventLocationId))
                {
                    ret = checkFailed("@WAX346");
                }
            }
        }

        return ret && this.validateWarehouseGroupAll();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWarehouseGroupAll</Name>
				<Source><![CDATA[
    private boolean validateWarehouseGroupAll()
    {
        switch (this.WarehouseGroupAll)
        {
            case WhsWarehouseGroupAll::Warehouse:
                if (!this.InventLocationId)
                {
                    return checkFailed("@WAX:LocationLimitMissingWarehouse");
                }
                break;

            case WhsWarehouseGroupAll::Group:
                if (!this.WarehouseGroupId)
                {
                    return checkFailed("@WAX:LocationLimitMissingWarehouseGroup");
                }
                break;
                
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///      Determines whether the specified record in the WHSLocationLimitVariant exists..
    /// </summary>
    /// <param name="_recId">
    ///     The RecId of the WHSLocationLimit record.
    /// </param>
    /// <returns>
    ///     true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId   _recId)
    {
        return _recId &&
            (select firstonly RecId from WHSLocationLimitVariant
                where WHSLocationLimitVariant.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the WHSLocationLimitVariant.
    /// </summary>
    /// <param name="_recId">
    ///     The recId of the WHSLocationLimitVariant record.
    /// </param>
    /// <param name="_forupdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the WHSLocationLimitVariant table; otherwise, an empty record.
    /// </returns>
    public static whsLocationLimitVariant find(RecId _recId, boolean _forupdate = false)
    {
        WHSLocationLimitVariant    locationLimitVariant;

        if (_recId)
        {
            locationLimitVariant.selectForUpdate(_forupdate);

            select firstonly locationLimitVariant
                where locationLimitVariant.RecId == _recId;
        }

        return locationLimitVariant;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Find the location stock limit.
    /// </summary>
    /// <param name="_inventLocationId">
    ///    The inventory location ID.
    /// </param>
    /// <param name="_wmsLocationId">
    ///    The warehouse location ID.
    /// </param>
    /// <param name="_itemId">
    ///    The item ID.
    /// </param>
    /// <param name="_inventDimId">
    ///     Item Variant InventDimId information.
    /// </param>
    /// <param name="_unitId">
    ///    The unit ID.
    /// </param>
    /// <param name="_considerNotFoundAsUnlimited">
    ///    A Boolean value that indicates if the fact that no limit record was found must be considered as 'unlimited'.
    /// </param>
    /// <returns>
    ///    A container that holds the limit quantity and unit ID.
    /// </returns>
    public static container retrieveQty(
        InventLocationId    _inventLocationId,
        WMSLocationId       _wmsLocationId,
        ItemId              _itemId,
        InventDimId         _inventDimId,
        UnitOfMeasureSymbol _unitId,
        boolean             _considerNotFoundAsUnlimited)
    {
        WHSLocationLimitAccessor accessor = WHSLocationLimitAccessor::construct();

        return accessor.retrieveQty(_inventLocationId, _wmsLocationId, _itemId, _unitId, _considerNotFoundAsUnlimited, _inventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>existForWarehouse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if location quantity limit for product variants exists by warehouse.
    /// </summary>
    /// <param name = "_warehouseId">The warehouse Id.</param>
    /// <returns>true if <c>WHSLocationLimitVariant</c> record exists; otherwise, false.</returns>
    [Hookable(false)]
    internal static boolean existForWarehouse(InventLocationId _warehouseId)
    {
        return _warehouseId &&
            (WHSLocationLimitVariant::existsForSpecificWarehouseOrAll(_warehouseId)
            || WHSLocationLimitVariant::existsForWarehouseGroup(_warehouseId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsForSpecificWarehouseOrAll</Name>
				<Source><![CDATA[
    private static boolean existsForSpecificWarehouseOrAll(InventLocationId _warehouseId)
    {
        WHSLocationLimitVariant locationLimit;

        select firstonly RecId from locationLimit
            where locationLimit.InventLocationId == _warehouseId
                || locationLimit.WarehouseGroupAll == WhsWarehouseGroupAll::All;

        return locationLimit.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsForWarehouseGroup</Name>
				<Source><![CDATA[
    private static boolean existsForWarehouseGroup(InventLocationId _warehouseId)
    {
        WHSLocationLimitVariant locationLimit;
        WhsWarehouseGroupLink warehouseGroupLink;

        select firstonly RecId from locationLimit
            where locationLimit.WarehouseGroupAll == WhsWarehouseGroupAll::Group
            exists join warehouseGroupLink
                where warehouseGroupLink.WarehouseGroupId == locationLimit.WarehouseGroupId
                    && warehouseGroupLink.InventLocationId == _warehouseId;

        return locationLimit.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWarehouseSelection</Name>
				<Source><![CDATA[
    private void setWarehouseSelection()
    {
        switch (this.WarehouseGroupAll)
        {
            case WhsWarehouseGroupAll::All:
                this.InventLocationId = '';
                this.WMSLocationId = '';
                this.WarehouseGroupId = '';
                break;

            case WhsWarehouseGroupAll::Group:
                this.InventLocationId = '';
                this.WMSLocationId = '';
                break;

            case WhsWarehouseGroupAll::Warehouse:
                this.WarehouseGroupId = '';
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WHSLocationLimitVariant, WarehouseGroupAll):
                this.setWarehouseSelection();
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@SYP4980043</DeveloperDocumentation>
	<FormRef>WHSLocationLimit</FormRef>
	<Label>@SYP4980042</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>InventLocationId</TitleField1>
	<TitleField2>ItemId</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>InventWMSItemUnitIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimIDProductDim</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllowUnlimitedQty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimIDProductDim</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllowUnlimitedQty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowUnlimitedQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSAllowUnlimitedQty</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimIDProductDim</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LocProfileId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLocProfileId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProductQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WMSLocationId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WarehouseGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WhsWarehouseGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WarehouseGroupAll</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WhsWarehouseGroupAll</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventWMSProfItemCategoryIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimIDProductDim</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WMSLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LocProfileId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UnitId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WarehouseGroupAll</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WarehouseGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventWMSItemUnitIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimIDProductDim</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WMSLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UnitId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventProfItemUnitIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimIDProductDim</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LocProfileId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UnitId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WarehouseGroupId</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WarehouseGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WarehouseGroupAll</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WarehouseGroupAll</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimIDProductDim</Name>
					<Field>InventDimIDProductDim</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitId</Name>
					<Field>UnitId</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSLocationProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSLocationProfile</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LocProfileId</Name>
					<SourceEDT>WHSLocProfileId</SourceEDT>
					<Field>LocProfileId</Field>
					<RelatedField>LocProfileId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WMSLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WMSLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WMSLocationId</Name>
					<Field>WMSLocationId</Field>
					<RelatedField>wMSLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WarehouseGroupId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WhsWarehouseGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WarehouseGroupId</Name>
					<Field>WarehouseGroupId</Field>
					<RelatedField>WarehouseGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>