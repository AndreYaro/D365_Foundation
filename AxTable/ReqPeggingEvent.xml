<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqPeggingEvent</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqPeggingEvent extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validate the pegging event.
    /// </summary>
    /// <returns>
    ///    true if the requirement is valid; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean validate()
    {
        ReqPeggingAssignment    reqPeggingAssignment;
        boolean                 result;

        // check event kanban rule
        result =    this.RecId != 0
                 && KanbanRuleEvent::findKanbanRule(this.KanbanRule);

        if (   result
            && this.PeggingRequirement)
        {
            reqPeggingAssignment = ReqPeggingAssignment::find(this.PeggingRequirement);

            // check if the assignment and the the event (if any) exist
            result =    reqPeggingAssignment
                     && (reqPeggingAssignment.SourceDocumentLine == 0
                     ||  reqPeggingAssignment.assignmentOrigin());
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>ReqPeggingEvent</c> table.
    /// </summary>
    /// <param name="_refRecId">
    /// The record ID of the requirement pegging event table to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>ReqPeggingEvent</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ReqPeggingEvent find(
        RefRecId _refRecId,
        boolean  _forUpdate = false)
    {
        ReqPeggingEvent  reqPeggingEvent;

        if (_refRecId)
        {
            reqPeggingEvent.selectForUpdate(_forUpdate);

            select firstonly reqPeggingEvent
                where reqPeggingEvent.RecId == _refRecId;
        }

        return reqPeggingEvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a <c>ReqPeggingEvent</c> record.
    /// </summary>
    /// <param name="_reqPeggingRequirementRefRecId">
    ///    A record ID of the <c>ReqPeggingAssignment</c> table.
    /// </param>
    /// <param name="_eventOriginRefRecId">
    ///    A record ID of the <c>KanbanRule</c> table that originated the event.
    /// </param>
    /// <param name="_originalQuantity">
    ///    The original quantity of the event; optional.
    /// </param>
    /// <param name="_reservedPhysicalQtyDelta">
    ///    The delta of physically reserved quantities of the event; optional.
    /// </param>
    /// <returns>
    ///    A <c>ReqPeggingEvent</c> record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ReqPeggingEvent findOrCreate(
        ReqPeggingAssignmentRefRecId _reqPeggingRequirementRefRecId,
        RefRecId                     _eventOriginRefRecId,
        InventQty                    _originalQuantity         = 0,
        InventQty                    _reservedPhysicalQtyDelta = 0)
    {
        ReqPeggingEvent reqPeggingEvent;

        ttsbegin;
        reqPeggingEvent                    = ReqPeggingEvent::findPeggingRequirement(_reqPeggingRequirementRefRecId,true);
        reqPeggingEvent.PeggingRequirement = _reqPeggingRequirementRefRecId;
        reqPeggingEvent.KanbanRule         = _eventOriginRefRecId;

        if (!reqPeggingEvent.RecId)
        {
            reqPeggingEvent.OriginalQty              = _originalQuantity;
            reqPeggingEvent.ReservedPhysicalQtyDelta = _reservedPhysicalQtyDelta;
        }
        else
        {
            reqPeggingEvent.ReservedPhysicalQtyDelta += _reservedPhysicalQtyDelta;
        }

        reqPeggingEvent.write();
        ttscommit;

        return reqPeggingEvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPeggingRequirement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>ReqPeggingEvent</c> table.
    /// </summary>
    /// <param name="_reqPeggingAssignmentRefRecId">
    /// The record ID of the requirement pegging assignment table to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>ReqPeggingEvent</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ReqPeggingEvent findPeggingRequirement(
        RefRecId _reqPeggingAssignmentRefRecId,
        boolean  _forUpdate = false)
    {
        ReqPeggingEvent  reqPeggingEvent;

        if (_reqPeggingAssignmentRefRecId)
        {
            reqPeggingEvent.selectForUpdate(_forUpdate);

            select firstonly reqPeggingEvent
                where reqPeggingEvent.PeggingRequirement == _reqPeggingAssignmentRefRecId;
        }

        return reqPeggingEvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || ReqEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS319601</DeveloperDocumentation>
	<Label>@SYS312644</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>PeggingRequirement</TitleField1>
	<TitleField2>KanbanRule</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>CreatedDateTimeIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>MasterPlanning</Modules>
	<ReplacementKey>ReqPeggingTransactionIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KanbanRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeggingRequirement</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PeggingRequirement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>KanbanRule</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MaterialSupplyPolicy</Name>
			<Label>@SYS312645</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KanbanRule</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PeggingRequirement</Name>
			<Label>@SYS312646</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PeggingRequirement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservedPhysicalQtyDelta</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginalQty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Session</Name>
			<Label>@SYS7115</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SessionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SessionLoginDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>KanbanRule</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanRuleRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OriginalQty</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PeggingRequirement</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqPeggingAssignmentRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReservedPhysicalQtyDelta</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SessionId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SessionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>SessionLoginDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SessionLoginDateTime</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReqPeggingTransactionIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PeggingRequirement</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>KanbanRule</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CreatedDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>createdDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SessionIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SessionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SessionLoginDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>KanbanRule</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>KanbanRule</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>MaterialSupplyPolicy</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReqPeggingEvent</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>KanbanRule</Name>
					<Field>KanbanRule</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReqPeggingAssignment</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>ReqPeggingAssignment</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ReqPeggingAssignment</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReqPeggingEvent</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PeggingRequirement</Name>
					<Field>PeggingRequirement</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>