<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FEACCInventTable_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FEACCInventTable_RU extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>customName</Name>
				<Source><![CDATA[
    display CustomName_RU customName()
    {
        return VendTable::find(this.VendAccountCustom).name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
    display Name itemName()
    {
        return InventTable::find(this.ItemId).itemName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByNaturalKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a record exists in this table on provided search parameters.
    /// </summary>
    /// <param name = "_searchParameter">A search parameter.</param>
    /// <returns>
    /// True if item id was provided and there exists a record in this table for this item id with the corresponding
    /// activation date and vendor code.
    /// </returns>
    [Hookable(false)]
    public static boolean existByNaturalKey(FEACCInventTable_RU _searchParameter)
    {
        return _searchParameter.itemId
            && (select firstOnly RecId from FEACCInventTable_RU
                where FEACCInventTable_RU.ItemId == _searchParameter.ItemId
                   && FEACCInventTable_RU.ActivationDate == _searchParameter.ActivationDate
                   && FEACCInventTable_RU.VendAccountCustom == _searchParameter.VendAccountCustom
                   && FEACCInventTable_RU.SHA256Hash == _searchParameter.hashValue()).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOnDate</Name>
				<Source><![CDATA[
    [SysObsolete('Use findByNaturalKey() instead.', false, 01\12\2020)]
    public static FEACCInventTable_RU findOnDate(
        ItemId _itemId,
        TransDate _transDate,
        VendAccountCustom_RU _vendAccountCustom = '')
    {
        FEACCInventTable_RU searchParameters;
        searchParameters.ItemId = _itemId;
        searchParameters.ActivationDate = _transDate;
        searchParameters.VendAccountCustom = _vendAccountCustom;

        return FEACCInventTable_RU::findByNaturalKey(searchParameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByNaturalKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>FEACCInventTable_RU</c> record based on provided search parameters.
    /// </summary>
    /// <param name = "_searchParameters">A search parameters.</param>
    /// <param name = "_forUpdate">Whether found record is supposed to be updated.</param>
    /// <returns>A <c>FEACCInventTable_RU</c> record.</returns>
    public static FEACCInventTable_RU findByNaturalKey(FEACCInventTable_RU _searchParameters, boolean _forUpdate = false)
    {
        FEACCInventTable_RU feaccInventTable;
        feaccInventTable.selectForUpdate(_forUpdate);
        str hashValue = _searchParameters.hashValue();

        select firstonly feaccInventTable
            order by ActivationDate desc
            where feaccInventTable.ItemId            == _searchParameters.ItemId &&
                  feaccInventTable.ActivationDate    <= _searchParameters.ActivationDate &&
                  feaccInventTable.VendAccountCustom == _searchParameters.VendAccountCustom &&
                  feaccInventTable.SHA256Hash == hashValue;

        if (!feaccInventTable)
        {
            select firstonly feaccInventTable
                order by ActivationDate desc
                where feaccInventTable.ItemId            == _searchParameters.ItemId &&
                  feaccInventTable.ActivationDate    <= _searchParameters.ActivationDate &&
                  feaccInventTable.VendAccountCustom == '' &&
                  feaccInventTable.SHA256Hash == hashValue;
        }

        return feaccInventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hashValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the hashed value for the number sequence scope.
    /// </summary>
    /// <returns>
    /// A string hash value.
    /// </returns>
    private str hashValue()
    {
        str hashKey = this.hashKey();
        str hashString;

        if (hashKey != '')
        {
            using (System.Security.Cryptography.SHA256 hasher = System.Security.Cryptography.SHA256::Create())
            {
                System.Byte[] hashKeyBytes = System.Text.Encoding::Default.GetBytes(hashKey);
                System.Byte[] hash = hasher.ComputeHash(hashKeyBytes);
                hashString = System.Convert::ToBase64String(hash);
            }
        }

        return hashString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hashKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the string to calculate the hash value from.
    /// </summary>
    /// <returns>A hash key.</returns>
    private str hashKey()
    {
        Set hashFields = this.fieldIdsToHash();

        if (!hashFields.elements())
        {
            return '';
        }

        List hashKeys = new List(Types::String);

        SetEnumerator hashFieldsEnumerator = hashFields.getEnumerator();

        while (hashFieldsEnumerator.moveNext())
        {
            RefFieldId fieldId = hashFieldsEnumerator.current();

            if (fieldId2Name(this.TableId, fieldId) != ''
                && this.(fieldId))
            {
                str fieldValue = any2Str(this.(fieldId));
                str formattedFieldValue = strLwr(strRTrim(fieldValue));

                if (formattedFieldValue)
                {
                    hashKeys.addEnd(int2Str(fieldId) + ':' + formattedFieldValue + '~');
                }
            }
        }

        return hashKeys.toString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldIdsToHash</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the set of field Ids that must define the uniqueness of a record in addition to already used ones.
    /// </summary>
    /// <returns>The set of field Ids.</returns>
    protected Set fieldIdsToHash()
    {
        return new Set(Types::Integer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.SHA256Hash = this.hashValue();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.SHA256Hash = this.hashValue();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFEACCIdByNaturalKeyAndInventGTD</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds FEACCId based on provided search parameters and number of GTD.
    /// </summary>
    /// <param name = "_searchParameters">
    /// A search parameters.
    /// </param>
    /// <param name="_inventGTDId">
    /// Inventory customs declaration number.
    /// </param>
    /// <returns>
    /// The FEACCId found based on provided search parameters and number of GTD.
    /// </returns>
    public static FEACCId_RU findFEACCIdByNaturalKeyAndInventGTD(
        FEACCInventTable_RU _searchParameters,
        InventGTDId_RU _inventGTDId)
    {
        FEACCId_RU feaccId;
        FEACCInventTable_RU feaccInventTable;
        FEACCTable_RU feaccTable;

        if (_inventGTDId)
        {
            QueryRun queryRun = new QueryRun(FEACCInventTable_RU::getCustomJournalTransQuery(_searchParameters, _inventGTDId));
            
            if (queryRun.next())
            {
                CustomJournalTrans_RU customJournalTrans = queryRun.get(tableNum(CustomJournalTrans_RU));
                feaccId = customJournalTrans.FEACCId;
            }

            if (!feaccId)
            {
                CustomPosts_RU customPost;

                select firstonly FEACCId from feaccInventTable
                    order by ActivationDate desc
                    where feaccInventTable.ItemId == _searchParameters.itemId
                          && feaccInventTable.ActivationDate <= _searchParameters.ActivationDate
                          && feaccInventTable.SHA256Hash == _searchParameters.hashValue()
                exists join customPost
                    where customPost.PartnerCode == feaccInventTable.VendAccountCustom
                       && customPost.PostId == subStr(strLRTrim(_inventGTDId), 1, 8)
                exists join feaccTable
                    where feaccTable.FEACCId == feaccInventTable.FEACCId
                       && feaccTable.Blocked == NoYes::No;

                feaccId = feaccInventTable.FEACCId;
            }
        }

        if (!feaccId)
        {
            select firstonly FEACCId from feaccInventTable
                order by ActivationDate desc
                where feaccInventTable.ItemId == _searchParameters.itemId
                    && feaccInventTable.ActivationDate <= _searchParameters.ActivationDate
                    && feaccInventTable.VendAccountCustom == ''
                    && feaccInventTable.SHA256Hash == _searchParameters.hashValue()
            exists join feaccTable
                where feaccTable.FEACCId == feaccInventTable.FEACCId &&
                      feaccTable.Blocked == NoYes::No;

            feaccId = feaccInventTable.FEACCId;
        }

        return feaccId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomJournalTransQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets <c>Query</c> based on <c>CustomJournalTrans</c> with provided search parameters and number of GTD.
    /// </summary>
    /// <param name = "_searchParameters">
    /// A search parameters.
    /// </param>
    /// <param name="_inventGTDId">
    /// Inventory customs declaration number.
    /// </param>
    /// <returns>The <c>Query</c> based on <c>CustomJournalTrans</c> with provided search parameters and number of GTD.</returns>
    protected static Query getCustomJournalTransQuery(FEACCInventTable_RU _searchParameters, InventGTDId_RU _inventGTDId)
    {
        Query query = new Query();

        QueryBuildDataSource qbdsCustomJournalTrans = query.addDataSource(tableNum(CustomJournalTrans_RU));
        qbdsCustomJournalTrans.addSelectionField(fieldNum(CustomJournalTrans_RU, FEACCId));
        qbdsCustomJournalTrans.addOrderByField(fieldNum(CustomJournalTrans_RU, CustomPartition), SortOrder::Ascending);
        qbdsCustomJournalTrans.addRange(fieldNum(CustomJournalTrans_RU, ItemId)).value(queryValue(_searchParameters.ItemId));
        qbdsCustomJournalTrans.firstOnly(true);

        QueryBuildDataSource qbdsCustomJournalTable = qbdsCustomJournalTrans.addDataSource(tableNum(CustomJournalTable_RU));
        qbdsCustomJournalTable.relations(true);
        qbdsCustomJournalTable.joinMode(JoinMode::ExistsJoin);
        qbdsCustomJournalTable.addRange(fieldNum(CustomJournalTable_RU, InventGTDId)).value(queryValue(_inventGTDId));

        QueryBuildDataSource qbdsFeaccTable = qbdsCustomJournalTrans.addDataSource(tableNum(FEACCTable_RU));
        qbdsFeaccTable.relations(true);
        qbdsFeaccTable.joinMode(JoinMode::ExistsJoin);

        return query;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>FEACCInventTable_RU</FormRef>
	<Label>@GLS115058</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>FEACCId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<ClusteredIndex>CustomItemDateIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>CustomItemDateIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendAccountCustom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActivationDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FEACCId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Custom</Name>
			<Label>@GLS114992</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendAccountCustom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>customName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FEACC</Name>
			<Label>@GLS115029</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FEACCId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActivationDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Invent</Name>
			<Label>@SYS14428</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>itemName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ActivationDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS22951</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FEACCId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FEACCIdActive_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccountCustom</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendAccountCustom_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SHA256Hash</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Label>@GLS180550</Label>
			<Visible>No</Visible>
			<StringSize>64</StringSize>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CustomItemDateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>VendAccountCustom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ActivationDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SHA256Hash</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CustomFEACCDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendAccountCustom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ActivationDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FEACCId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustomPartners_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustomPartners_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccountCustom</Name>
					<Field>VendAccountCustom</Field>
					<RelatedField>PartnerCode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>PartnerType_Extern</Name>
					<RelatedField>PartnerType</RelatedField>
					<ValueStr>CustomPartnerType_RU::Custom</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>FEACCTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FEACCTable_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Blocked_Extern</Name>
					<RelatedField>Blocked</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FEACCId</Name>
					<SourceEDT>FEACCId_RU</SourceEDT>
					<Field>FEACCId</Field>
					<RelatedField>FEACCId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccountCustom</Name>
					<SourceEDT>VendAccountCustom_RU</SourceEDT>
					<Field>VendAccountCustom</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>