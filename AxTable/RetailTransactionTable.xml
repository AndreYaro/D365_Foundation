<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTransactionTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailTransactionTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>custTable_CustAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>CustTable</c> table of the current customer account.
    /// </summary>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>CustTable</c> table; otherwise, an empty record.
    /// </returns>
    CustTable custTable_CustAccount(boolean _forUpdate = false)
    {
        return CustTable::find(this.CustAccount, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTable_InvoiceAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>CustTable</c> table of the current invoice account.
    /// </summary>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>CustTable</c> table; otherwise, an empty record.
    /// </returns>
    CustTable  custTable_InvoiceAccount(boolean  _forUpdate = false)
    {
        return CustTable::find(this.custTable_CustAccount().InvoiceAccount, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes a record from <c>RetailTransactionTable</c> table.
    /// </summary>
    /// <remarks>
    /// Also deletes a record from <c>RetailCounterTable</c> table if corresponding tables are present.
    /// </remarks>
    public void delete()
    {
        RetailCounterTable                     posCounter;
        RetailTransactionInfocodeTransVoided   posTransactionInfocodeTransVoided;
        RetailTransactionLineVoided            posTransactionLineVoided;
        ;

        ttsbegin;

        super();

        posCounter = RetailCounterTable::find(this.TableId,this.RecId,0, true);

        if (posCounter)
        {
            posCounter.delete();
        }

        delete_from posTransactionInfocodeTransVoided
        where posTransactionInfocodeTransVoided.ReceiptId == this.ReceiptId;

        delete_from posTransactionLineVoided
        where posTransactionLineVoided.ReceiptId == this.ReceiptId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteAxSalesOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the status of sales transactions and deletes the sales order.
    /// </summary>
    /// <param name="_updateHeader">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    void deleteAxSalesOrder(boolean _updateHeader = true)
    {
        SalesTable                  salesOrder;
        SalesLine                   salesOrderLine;
        RetailTransactionSalesTrans    rboSaleLine;
        ;

        if (this.SalesOrderId)
        {
            // The following set-based operators *will* get downgraded
            // because of overridden delete() methods in SalesTable and SalesLine
            // tables and we don't want to avoid that because we *want* the logic
            // in there to execute. Still prefering delete_from because it is more
            // concise to write.

            delete_from salesOrderLine
                where salesOrderLine.SalesId == this.SalesOrderId;

            delete_from salesOrder
                where salesOrder.SalesId == this.SalesOrderId;

            if (_updateHeader)
            {
                this.selectForUpdate(true);
                this.SalesOrderId = '';
                this.InvoiceId = '';
                this.update();

                while select forupdate rboSaleLine
                    where   rboSaleLine.Store == this.Store
                    &&      rboSaleLine.TerminalId == this.Terminal
                    &&      rboSaleLine.TransactionId == this.TransactionId
                {
                    rboSaleLine.InventTransId = '';
                    rboSaleLine.InventStatusSales = RetailInventStatusSales::None;
                    rboSaleLine.update();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the address of the current customer.
    /// </summary>
    /// <returns>
    /// Postal address of the current customer.
    /// </returns>
    public LogisticsPostalAddress deliveryAddress()
    {
        CustTable   custTable;
        ;
        custTable = this.custTable_CustAccount();

        return custTable.postalAddress();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the location of the delivery address.
    /// </summary>
    /// <returns>
    /// Logistics location of the current delivery address.
    /// </returns>
    public LogisticsLocationRecId deliveryLocation()
    {
        return LogisticsPostalAddress::getLocation(this.deliveryAddress().RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintedCounter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transaction counter.
    /// </summary>
    /// <param name="_counter">
    /// The transaction counter.
    /// </param>
    /// <returns>
    /// The transaction counter based on the specified counter.
    /// </returns>
    RetailCounter getPrintedCounter(RetailCounter _counter)
    {
        RetailCounterTable posCounter;
        ;

        posCounter = RetailCounterTable::find(this.TableId,this.RecId,0);

        if (posCounter)
        {
            switch (_counter)
            {
                case 1 : return posCounter.Counter1;
                case 2 : return posCounter.Counter2;
                case 3 : return posCounter.Counter3;
            }
        }

        return 0;

    }

]]></Source>
			</Method>
			<Method>
				<Name>grossAmountSalesOrderInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of gross amount and sales amount.
    /// </summary>
    /// <returns>
    /// The sales order invoice amount with the total amount.
    /// </returns>
    Amount grossAmountSalesOrderInvoice()
    {
        return this.GrossAmount + this.SalesOrderAmount + this.SalesInvoiceAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>incPrintedCounter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Increments the point of sale counter by 1.
    /// </summary>
    /// <param name="_counter">
    /// Value of the transaction counter.
    /// </param>
    /// <remarks>
    /// Inserts a record in the <c>RetailCounterTable</c> table if not present; otherwise updates the
    /// record.
    /// </remarks>
    void incPrintedCounter(RetailCounter _counter)
    {
        RetailCounterTable posCounter;
        ;

        ttsbegin;

        posCounter = RetailCounterTable::find(this.TableId, this.RecId, 0, true);

        if (posCounter)
        {
            switch (_counter)
            {
                case 1  :   posCounter.Counter1 += 1;
                    break;
                case 2  :   posCounter.Counter2 += 1;
                    break;
                case 3  :   posCounter.Counter3 += 1;
                    break;
            }

            posCounter.update();
        }
        else
        {
            posCounter.RefTableId = this.TableId;
            posCounter.RefRecId = this.RecId;
            posCounter.LineNum = 0;

            switch (_counter)
            {
                case 1  :   posCounter.Counter1 = 1;
                    break;
                case 2  :   posCounter.Counter2 = 1;
                    break;
                case 3  :   posCounter.Counter3 = 1;
                    break;
            }

            posCounter.insert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>netAmountSalesOrderInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of net amount and sales amount.
    /// </summary>
    /// <returns>
    /// The sales order invoice amount with the net amount.
    /// </returns>
    Amount netAmountSalesOrderInvoice()
    {
        return this.NetAmount + this.SalesOrderAmount + this.SalesInvoiceAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymDayId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the payment day of the current invoice account.
    /// </summary>
    /// <returns>
    /// The ID number of the payment days.
    /// </returns>
    CustPaymDayId paymDayId()
    {
        CustPaymDayId    paymDayId;
        ;

        paymDayId = this.custTable_InvoiceAccount().PaymDayId;

        if (!paymDayId)
            paymDayId = this.payment().PaymDayId;

        return paymDayId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>payment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>PaymTerm</c> table.
    /// </summary>
    /// <param name="_update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>PaymTerm</c> table; otherwise, an empty record.
    /// </returns>
    PaymTerm payment(boolean _update = false)
    {
        return PaymTerm::find(this.custTable_CustAccount().PaymTermId, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentAmountSalesOrderInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of payment amount and sales amount.
    /// </summary>
    /// <returns>
    /// The sales order invoice amount with the payment amount.
    /// </returns>
    Amount paymentAmountSalesOrderInvoice()
    {
        return this.PaymentAmount - this.SalesOrderAmount - this.SalesInvoiceAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>posExchRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// This functions returns the RetailEx3 exchange rate used in the transaction.
    /// </summary>
    /// <param name="_date">
    /// Date value for which the Exchange Rate is to be searched
    /// </param>
    /// <returns>
    /// Exchange Rate Amount for a given date
    /// </returns>
    ExchRate posExchRate(date _date = this.TransDate)
    {
        ExchRate                    exchRate = 0;

        ExchangeRate                exchRates;
        ExchangeRateCurrencyPair    currencyPair;
        RefRecId                    exchangeRateType;
        RetailSharedParameters      retailSharedParameters;
        CurrencyCode                currencyCode = !this.Currency ? RetailStoreTable::find(this.Store).Currency : this.Currency;
        ;

        retailSharedParameters = RetailSharedParameters::find(false);

        exchangeRateType = retailSharedParameters.ExchangeRateType;

        if (!this.ExchRate)
        {
            select validtimestate(_date) exchRates
            join RecId, FromCurrencyCode, ToCurrencyCode, ExchangeRateType from currencyPair
            where exchRates.ExchangeRateCurrencyPair == currencyPair.RecId
            && currencyPair.FromCurrencyCode == currencyCode && currencyPair.ToCurrencyCode == this.Currency
            && currencyPair.ExchangeRateType == exchangeRateType;

            exchRate = exchRates.ExchangeRate;
        }
        else
        {
            exchRate = this.ExchRate;
        }

        return exchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>printerCounter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transaction counter.
    /// </summary>
    /// <param name="_counterId">
    /// The value of the transaction counter.
    /// </param>
    /// <returns>
    /// The transaction counter based on the specified counter.
    /// </returns>
    int printerCounter(int _counterId)
    {
        RetailCounterTable  counter;
        ;

        counter = RetailCounterTable::find(this.TableId, this.RecId, 0);

        if (counter)
        {
            switch (_counterId)
            {
                case 1  : return counter.Counter1;
                case 2  : return counter.Counter2;
                case 3  : return counter.Counter3;
            }
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>containsForceVoid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to determine whether transaction contains force void payment line.
    /// </summary>
    /// <returns>
    /// Returns true when transaction contains force void payment line.
    /// </returns>
    display NoYes containsForceVoid()
    {
        RetailTransactionPaymentTrans transactionPaymentTrans;

        select firstonly RecId from transactionPaymentTrans
            where transactionPaymentTrans.transactionId == this.transactionId
                    && transactionPaymentTrans.store    == this.store
                    && transactionPaymentTrans.terminal == this.terminal
                    && (transactionPaymentTrans.VoidStatus == RetailTenderVoidStatus::ForceVoided
                        || transactionPaymentTrans.VoidStatus == RetailTenderVoidStatus::ForceVoidReconciled);

        return transactionPaymentTrans.RecId == 0 ? NoYes::No : NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Renames the record.
    /// </summary>
    /// <remarks>
    /// The prompt for renaming the record.
    /// </remarks>
    public void renamePrimaryKey()
    {
        if (Box::yesNo("@RET4036",DialogButton::No,"@RET3951","@RET4074") == DialogButton::No)
        {
            info("@RET4039");
            return;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>costAmountByTerminal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of transactions with cost amount for the specified terminal.
    /// </summary>
    /// <param name="_terminal">
    /// The Id number of the point of sale terminal.
    /// </param>
    /// <param name="_fromDate">
    /// The starting date of the transaction.
    /// </param>
    /// <param name="_toDate">
    /// The ending date of the transaction.
    /// </param>
    /// <param name="_timeFrom">
    /// The starting time of the transaction.
    /// </param>
    /// <param name="_timeTo">
    /// The ending time of the transaction.
    /// </param>
    /// <returns>
    /// The number of transactions with cost amount.
    /// </returns>
    public static real costAmountByTerminal(RetailTerminalId  _terminal,
                                            FromDate       _fromDate,
                                            ToDate         _toDate,
                                            FromTime       _timeFrom,
                                            ToTime         _timeTo)
    {
        RetailTransactionTable transactionTable;

        select count(CostAmount) from transactionTable
        where   transactionTable.Terminal == _terminal
        &&      transactionTable.Type == RetailTransactionType::Sales
        &&      transactionTable.TransDate >= _fromDate
        &&      transactionTable.TransDate <= _toDate
        &&      transactionTable.TransTime >= _timeFrom
        &&      transactionTable.TransTime <= _timeTo
        &&     ((transactionTable.EntryStatus == RetailEntryStatus::None) || (transactionTable.EntryStatus == RetailEntryStatus::Posted));

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>discAmountByTerminal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of transactions with discount amount for the specified terminal.
    /// </summary>
    /// <param name="_terminal">
    /// The Id number of the point of sale terminal.
    /// </param>
    /// <param name="_fromDate">
    /// The starting date of the transaction.
    /// </param>
    /// <param name="_toDate">
    /// The ending date of the transaction.
    /// </param>
    /// <param name="_timeFrom">
    /// The starting time of the transaction.
    /// </param>
    /// <param name="_timeTo">
    /// The ending time of the transaction.
    /// </param>
    /// <returns>
    /// The number of transactions with discount amount.
    /// </returns>
    public static real discAmountByTerminal(RetailTerminalId  _terminal,
                                            FromDate       _fromDate,
                                            ToDate         _toDate,
                                            FromTime       _timeFrom,
                                            ToTime         _timeTo)
    {
        RetailTransactionTable transactionTable;

        select count(DiscAmount) from transactionTable
        where   transactionTable.Terminal == _terminal
        &&      transactionTable.Type == RetailTransactionType::Sales
        &&      transactionTable.TransDate >= _fromDate
        &&      transactionTable.TransDate <= _toDate
        &&      transactionTable.TransTime >= _timeFrom
        &&      transactionTable.TransTime <= _timeTo
        &&     ((transactionTable.EntryStatus == RetailEntryStatus::None) || (transactionTable.EntryStatus == RetailEntryStatus::Posted));

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>RetailTransactionTable</c> table exists.
    /// </summary>
    /// <param name="_statementId">
    /// The statement number of the transaction.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    static boolean exist(RetailStatementId _statementId)
    {
        return _statementId && (select retailTransactionTable
                                index hint statementIdx
                                where retailTransactionTable.StatementId == _statementId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailTransactionTable</c> table.
    /// </summary>
    /// <param name="_transactionId">
    /// The ID number of the transaction.
    /// </param>
    /// <param name="_storeId">
    /// The ID number of the store.
    /// </param>
    /// <param name="_terminalId">
    /// The Id number of POS terminal
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailTransactionTable</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailTransactionTable find(RetailTransactionId _transactionId,RetailStoreId _storeId,RetailTerminalId _terminalId, boolean _forUpdate = false)
    {
        RetailTransactionTable transactionTable;

        if (_transactionId)
        {
            RecId localChannelRecId = RetailStoreTable::find(_storeId).RecId;

            transactionTable.selectForUpdate(_forUpdate);

            if (localChannelRecId != 0)
            {
                select firstonly transactionTable
                    index hint transactionIdx
                    where transactionTable.Store         == _storeId
                    &&    transactionTable.Channel       == localChannelRecId
                    &&    transactionTable.Terminal      == _terminalId
                    &&    transactionTable.TransactionId == _transactionId;
            }
            else
            {
                select firstonly transactionTable
                    index hint transactionIdx
                    where transactionTable.Store         == _storeId
                    &&    transactionTable.Terminal      == _terminalId
                    &&    transactionTable.TransactionId == _transactionId;
            }
        }

        return transactionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByUniqueKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailTransactionTable</c> table.
    /// </summary>
    /// <param name="_transactionId">
    /// The ID number of the transaction.
    /// </param>
    /// <param name="_channelId">
    /// The ID number of the channel.
    /// </param>
    /// <param name="_storeId">
    /// The ID number of the store.
    /// </param>
    /// <param name="_terminalId">
    /// The Id number of POS terminal
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailTransactionTable</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailTransactionTable findByUniqueKey(RetailTransactionId _transactionId, RefRecId _channelId, RetailStoreId _storeId, RetailTerminalId _terminalId, boolean _forUpdate = false)
    {
        RetailTransactionTable transactionTable;

        if (_transactionId)
        {
            transactionTable.selectForUpdate(_forUpdate);

            select firstonly transactionTable
                index hint transactionIdx
                where transactionTable.Channel       == _channelId
                &&    transactionTable.Store         == _storeId
                &&    transactionTable.Terminal      == _terminalId
                &&    transactionTable.TransactionId == _transactionId;
        }

        return transactionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findReceiptId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailTransactionTable</c> table by using the specified
    /// <c>receiptId</c> value.
    /// </summary>
    /// <param name="_receiptId">
    /// The ID number of the receipt.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailTransactionTable</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailTransactionTable findReceiptId(RetailReceiptId _receiptId, boolean _forUpdate = false)
    {
        RetailTransactionTable transactionTable;

        if (_receiptId)
        {
            transactionTable.selectForUpdate(_forUpdate);

            select firstonly transactionTable
                where transactionTable.ReceiptId == _receiptId;
        }

        return transactionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>netAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of transactions with the specified date and time.
    /// </summary>
    /// <param name="_terminal">
    /// The ID number of the point of sale terminal.
    /// </param>
    /// <param name="_fromDate">
    /// The starting date of the transaction.
    /// </param>
    /// <param name="_toDate">
    /// The ending date of the transaction.
    /// </param>
    /// <param name="_timeFrom">
    /// The starting time of the transaction.
    /// </param>
    /// <param name="_timeTo">
    /// The ending time of the transaction.
    /// </param>
    /// <returns>
    /// The total number of transactions in the specified date and time.
    /// </returns>
    public static real netAmount(RetailTerminalId  _terminal,
                                 FromDate       _fromDate,
                                 ToDate         _toDate,
                                 FromTime       _timeFrom,
                                 ToTime         _timeTo)
    {
        RetailTransactionTable transactionTable;

        select count(RecId) from transactionTable
        where   transactionTable.Terminal == _terminal
        &&      transactionTable.Type == RetailTransactionType::Sales
        &&      transactionTable.TransDate >= _fromDate
        &&      transactionTable.TransDate <= _toDate
        &&      transactionTable.TransTime >= _timeFrom
        &&      transactionTable.TransTime <= _timeTo
        &&     ((transactionTable.EntryStatus == RetailEntryStatus::None) || (transactionTable.EntryStatus == RetailEntryStatus::Posted));

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>netAmountByTerminal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of transactions with net amount for the specified terminal.
    /// </summary>
    /// <param name="_terminal">
    /// The ID number of the point of sale terminal.
    /// </param>
    /// <param name="_fromDate">
    /// The starting date of transaction.
    /// </param>
    /// <param name="_toDate">
    /// The ending date of transaction.
    /// </param>
    /// <param name="_timeFrom">
    /// The starting time of the transaction.
    /// </param>
    /// <param name="_timeTo">
    /// The ending time of the transaction.
    /// </param>
    /// <returns>
    /// The number of transactions for the given terminal with net amount.
    /// </returns>
    public static real netAmountByTerminal(RetailTerminalId  _terminal,
                                           FromDate       _fromDate,
                                           ToDate         _toDate,
                                           FromTime       _timeFrom,
                                           ToTime         _timeTo)
    {
        RetailTransactionTable transactionTable;

        select count(NetAmount) from transactionTable
        where   transactionTable.Terminal == _terminal
        &&      transactionTable.Type == RetailTransactionType::Sales
        &&      transactionTable.TransDate >= _fromDate
        &&      transactionTable.TransDate <= _toDate
        &&      transactionTable.TransTime >= _timeFrom
        &&      transactionTable.TransTime <= _timeTo
        &&     ((transactionTable.EntryStatus == RetailEntryStatus::None) || (transactionTable.EntryStatus == RetailEntryStatus::Posted));

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfItemsSold</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of the number of items for the specified store.
    /// </summary>
    /// <param name="_storeId">
    /// The ID value of the store.
    /// </param>
    /// <param name="_fromDate">
    /// The starting date of the transaction.
    /// </param>
    /// <param name="_toDate">
    /// The ending date of transaction.
    /// </param>
    /// <param name="_timeFrom">
    /// The starting time of the transaction.
    /// </param>
    /// <param name="_timeTo">
    /// The ending time of the transaction.
    /// </param>
    /// <returns>
    /// The sum of the number of items for the given store.
    /// </returns>
    public static int numberOfItemsSold(RetailStoreId  _storeId,
                                        FromDate    _fromDate,
                                        ToDate      _toDate,
                                        FromTime    _timeFrom,
                                        ToTime      _timeTo)
    {
        RetailTransactionTable transactionTable;

        select sum(NumberOfItems) from transactionTable
        where   transactionTable.Store == _storeId
        &&      transactionTable.Type == RetailTransactionType::Sales
        &&      transactionTable.TransDate >= _fromDate
        &&      transactionTable.TransDate <= _toDate
        &&      transactionTable.TransTime >= _timeFrom
        &&      transactionTable.TransTime <= _timeTo
        &&     (transactionTable.EntryStatus == RetailEntryStatus::None ||
                transactionTable.EntryStatus == RetailEntryStatus::Posted);

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfSalesTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of sales transactions with the specified date and time for a store.
    /// </summary>
    /// <param name="_storeId">
    /// The ID value of the store.
    /// </param>
    /// <param name="_fromDate">
    /// The starting date of the transaction.
    /// </param>
    /// <param name="_toDate">
    /// The ending date of transaction.
    /// </param>
    /// <param name="_timeFrom">
    /// The starting time of the transaction.
    /// </param>
    /// <param name="_timeTo">
    /// The ending time of the transaction.
    /// </param>
    /// <returns>
    /// The total number of sales transactions in the specified date and time.
    /// </returns>
    public static int numberOfSalesTransactions(RetailStoreId  _storeId,
                                                FromDate    _fromDate,
                                                ToDate      _toDate,
                                                FromTime    _timeFrom,
                                                ToTime      _timeTo)
    {
        RetailTransactionTable transactionTable;

        select count(RecId) from transactionTable
        where   transactionTable.Store == _storeId
        &&      transactionTable.Type == RetailTransactionType::Sales
        &&      transactionTable.TransDate >= _fromDate
        &&      transactionTable.TransDate <= _toDate
        &&      transactionTable.TransTime >= _timeFrom
        &&      transactionTable.TransTime <= _timeTo
        &&     (transactionTable.EntryStatus == RetailEntryStatus::None ||
                transactionTable.EntryStatus == RetailEntryStatus::Posted);

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfSalesTransactionsByTerminal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of sales transactions with the specified date and time for a terminal.
    /// </summary>
    /// <param name="_terminalId">
    /// The ID number of the point of sale terminal.
    /// </param>
    /// <param name="_fromDate">
    /// The starting date of the transaction.
    /// </param>
    /// <param name="_toDate">
    /// The ending date of transaction.
    /// </param>
    /// <param name="_timeFrom">
    /// The starting time of the transaction.
    /// </param>
    /// <param name="_timeTo">
    /// The ending time of the transaction.
    /// </param>
    /// <returns>
    /// The total number of sales transactions in the specified date and time.
    /// </returns>
    public static int numberOfSalesTransactionsByTerminal(RetailTerminalId _terminalId,
                                                          FromDate      _fromDate,
                                                          ToDate        _toDate,
                                                          FromTime      _timeFrom,
                                                          ToTime        _timeTo)
    {
        RetailTransactionTable transactionTable;

        select count(RecId) from transactionTable
        where   transactionTable.Terminal == _terminalId
        &&      transactionTable.Type == RetailTransactionType::Sales
        &&      transactionTable.TransDate >= _fromDate
        &&      transactionTable.TransDate <= _toDate
        &&      transactionTable.TransTime >= _timeFrom
        &&      transactionTable.TransTime <= _timeTo
        &&     (transactionTable.EntryStatus == RetailEntryStatus::None ||
                transactionTable.EntryStatus == RetailEntryStatus::Posted);

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfTrainingTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of training transactions with the specified date and time for a terminal.
    /// </summary>
    /// <param name="_storeId">
    /// The ID value of the store.
    /// </param>
    /// <param name="_fromDate">
    /// The starting date of the transaction.
    /// </param>
    /// <param name="_toDate">
    /// The ending date of transaction.
    /// </param>
    /// <param name="_timeFrom">
    /// The starting time of the transaction.
    /// </param>
    /// <param name="_timeTo">
    /// The ending time of the transaction.
    /// </param>
    /// <returns>
    /// The total number of transactions in the specified date and time whose status is training.
    /// </returns>
    public static int numberOfTrainingTransactions(RetailStoreId  _storeId,
                                                   FromDate    _fromDate,
                                                   ToDate      _toDate,
                                                   FromTime    _timeFrom,
                                                   ToTime      _timeTo)
    {
        RetailTransactionTable transactionTable;

        select count(RecId) from transactionTable
        where   transactionTable.Store == _storeId
        &&      transactionTable.Type == RetailTransactionType::Sales
        &&      transactionTable.TransDate >= _fromDate
        &&      transactionTable.TransDate <= _toDate
        &&      transactionTable.TransTime >= _timeFrom
        &&      transactionTable.TransTime <= _timeTo
        &&      transactionTable.EntryStatus == RetailEntryStatus::Training;

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfTrainingTransactionsByTerminal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of training transactions with the specified date and time for a terminal.
    /// </summary>
    /// <param name="_terminalId">
    /// The ID number of the point of sale terminal.
    /// </param>
    /// <param name="_fromDate">
    /// The starting date of the transaction.
    /// </param>
    /// <param name="_toDate">
    /// The ending date of transaction.
    /// </param>
    /// <param name="_timeFrom">
    /// The starting time of the transaction.
    /// </param>
    /// <param name="_timeTo">
    /// The ending time of the transaction.
    /// </param>
    /// <returns>
    /// The total number of transactions in the specified date and time whose status is training.
    /// </returns>
    public static int numberOfTrainingTransactionsByTerminal(RetailTerminalId _terminalId,
                                                             FromDate      _fromDate,
                                                             ToDate        _toDate,
                                                             FromTime      _timeFrom,
                                                             ToTime        _timeTo)
    {
        RetailTransactionTable transactionTable;

        select count(RecId) from transactionTable
        where   transactionTable.Terminal == _terminalId
        &&      transactionTable.Type == RetailTransactionType::Sales
        &&      transactionTable.TransDate >= _fromDate
        &&      transactionTable.TransDate <= _toDate
        &&      transactionTable.TransTime >= _timeFrom
        &&      transactionTable.TransTime <= _timeTo
        &&     transactionTable.EntryStatus == RetailEntryStatus::Training;

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfUnpostedInventoryTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of inventory transactions that have not been posted.
    /// </summary>
    /// <param name="_transType">
    /// The transaction type of the inventory transaction.
    /// </param>
    /// <param name="_statementId">
    /// The statement number of the transaction.
    /// </param>
    /// <param name="_entryStatus">
    /// The entry status of the transaction.
    /// </param>
    /// <returns>
    /// The total number of transactions for the given transaction type.
    /// </returns>
    public static int numberOfUnpostedInventoryTransactions(RetailTransactionType  _transType,
                                                            RetailStatementId      _statementId,
                                                            RetailTransEntryStatus _entryStatus)
    {
        RetailTransactionTable  transactionTable;
        RetailStatementTable    retailStatementTable = RetailStatementTable::find(_statementId);

        select count(RecId) from transactionTable
        where   transactionTable.store          == retailStatementTable.storeId
            &&  transactionTable.StatementId    == _statementId
            &&  transactionTable.Type           == _transType
            &&  transactionTable.EntryStatus    == _entryStatus;

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfUnpostedTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of transactions with the specified date and time that have not been posted.
    /// </summary>
    /// <param name="_storeId">
    /// The ID value of the store.
    /// </param>
    /// <param name="_fromDate">
    /// The starting date of the transaction.
    /// </param>
    /// <param name="_toDate">
    /// The ending date of transaction.
    /// </param>
    /// <param name="_timeFrom">
    /// The starting time of the transaction.
    /// </param>
    /// <param name="_timeTo">
    /// The ending time of the transaction.
    /// </param>
    /// <returns>
    /// The total number of transactions in the specified date and time whose status is none.
    /// </returns>
    public static int numberOfUnpostedTransactions(RetailStoreId  _storeId,
                                                   FromDate    _fromDate,
                                                   ToDate      _toDate,
                                                   FromTime    _timeFrom,
                                                   ToTime      _timeTo)
    {
        RetailTransactionTable transactionTable;

        select count(RecId) from transactionTable
        where   transactionTable.Store == _storeId
        &&      transactionTable.Type == RetailTransactionType::Sales
        &&      transactionTable.TransDate >= _fromDate
        &&      transactionTable.TransDate <= _toDate
        &&      transactionTable.TransTime >= _timeFrom
        &&      transactionTable.TransTime <= _timeTo
        &&      transactionTable.EntryStatus == RetailEntryStatus::None;

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfVoidedTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of transactions with the specified date and time which are voided.
    /// </summary>
    /// <param name="_storeId">
    /// The ID value of the store.
    /// </param>
    /// <param name="_fromDate">
    /// The starting date of the transaction.
    /// </param>
    /// <param name="_toDate">
    /// The ending date of transaction.
    /// </param>
    /// <param name="_timeFrom">
    /// The starting time of the transaction.
    /// </param>
    /// <param name="_timeTo">
    /// The ending time of the transaction.
    /// </param>
    /// <returns>
    /// The total number of transactions in the specified date and time whose status is voided.
    /// </returns>
    public static int numberOfVoidedTransactions(RetailStoreId         _storeId,
                                                 FromDate           _fromDate,
                                                 ToDate             _toDate,
                                                 FromTime           _timeFrom,
                                                 ToTime             _timeTo)
    {
        RetailTransactionTable transactionTable;

        select count(RecId) from transactionTable
        where   transactionTable.Store == _storeId
        &&      transactionTable.Type == RetailTransactionType::Sales
        &&      transactionTable.TransDate >= _fromDate
        &&      transactionTable.TransDate <= _toDate
        &&      transactionTable.TransTime >= _timeFrom
        &&      transactionTable.TransTime <= _timeTo
        &&      transactionTable.EntryStatus == RetailEntryStatus::Voided;

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfVoidedTransactionsByTerminal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of transactions with the specified date and time for the type sales.
    /// </summary>
    /// <param name="_terminalId">
    /// The ID number of the point of sale terminal.
    /// </param>
    /// <param name="_fromDate">
    /// The Starting date of the transaction.
    /// </param>
    /// <param name="_toDate">
    /// The ending date of transaction.
    /// </param>
    /// <param name="_timeFrom">
    /// The starting time of the transaction.
    /// </param>
    /// <param name="_timeTo">
    /// The ending time of the transaction.
    /// </param>
    /// <returns>
    /// The total number of transactions in the specified date and time for the type sales.
    /// </returns>
    public static int numberOfVoidedTransactionsByTerminal(RetailTerminalId      _terminalId,
                                                           FromDate           _fromDate,
                                                           ToDate             _toDate,
                                                           FromTime           _timeFrom,
                                                           ToTime             _timeTo)
    {
        RetailTransactionTable transactionTable;

        select count(RecId) from transactionTable
        where   transactionTable.Terminal == _terminalId
        &&      transactionTable.Type == RetailTransactionType::Sales
        &&      transactionTable.TransDate >= _fromDate
        &&      transactionTable.TransDate <= _toDate
        &&      transactionTable.TransTime >= _timeFrom
        &&      transactionTable.TransTime <= _timeTo
        &&      transactionTable.EntryStatus == RetailEntryStatus::Voided;

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transactionOnWrongShift</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total number of transactions on the <c>WrongShift</c> record.
    /// </summary>
    /// <param name="_statementId">
    /// The statement number of the transaction.
    /// </param>
    /// <param name="_wrongShift">
    /// A Boolean value that indicates whether the wrong shift is set.
    /// </param>
    /// <returns>
    /// The total number of transactions on the <c>wrongShift</c> record.
    /// </returns>
    public static int transactionOnWrongShift(RetailStatementId _statementId,
                                              RetailWrongShift  _wrongShift)
    {
        RetailTransactionTable  transactionTable;
        RetailStatementTable    retailStatementTable = RetailStatementTable::find(_statementId);

        select count(RecId) from transactionTable
        where   transactionTable.store          == retailStatementTable.storeId
            &&  transactionTable.StatementId    == retailStatementTable.statementId
            &&  transactionTable.WrongShift     == _wrongShift;

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transactionsPerTransCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of transactions with the given transaction code.
    /// </summary>
    /// <param name="_statementId">
    /// The statement number of the transaction.
    /// </param>
    /// <param name="_transCode">
    /// The transaction code.
    /// </param>
    /// <returns>
    /// The total number of transactions for the given transaction code.
    /// </returns>
    public static int transactionsPerTransCode(RetailStatementId _statementId,
                                               RetailTransCode   _transCode)
    {
        RetailTransactionTable  transactionTable;
        RetailStatementTable    retailStatementTable = RetailStatementTable::find(_statementId);

        select count(RecId) from transactionTable
            where   transactionTable.store          == retailStatementTable.storeId
                &&  transactionTable.StatementId    == retailStatementTable.statementId
                &&  transactionTable.TransCode      == _transCode;

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Perform any required post-load operations.
    /// </summary>
    void postLoad()
    {
        super();

        if (this.isFieldDataRetrieved(fieldStr(RetailTransactionTable, CustAccountAsync)))
        {
            // This shim is only applied when CustAccountAsync included [in the query] and available...

            if (this.CustAccountAsync)
            {
                // The CustAccountAsync field has been loaded and is non-empty...

                if (this.isFieldDataRetrieved(fieldStr(RetailTransactionTable, CustAccount)))
                {
                    // The CustAccount field has been loaded - see if there is a shimmed value to apply...

                    RetailAsyncCustomer asyncCust;

                    // Select the first (only) match.  We must bring in the entire object now as we may create the customer dynamically.
                    select firstonly forupdate asyncCust where asyncCust.CustAccountAsync == this.CustAccountAsync;

                    if (asyncCust)
                    {
                        // There is a mapping value - so set custAccount to that value...
                        RetailTransactionServiceCustomer::createAsyncCustomerWithAddresses(asyncCust);

                        this.custAccount = asyncCust.CustAccount;

                        // Convert the async LogisticsPostalAddress to the online value
                        RetailAsyncAddress asyncAddress;

                        select firstonly asyncAddress
                            where asyncAddress.CustAccountAsync == asyncCust.CustAccountAsync
                               && asyncAddress.ReplicationCounterFromOrigin == this.LogisticsPostalAddress
                               && asyncAddress.OnlineAddressCreated == NoYes::Yes;

                        if (asyncAddress)
                        {
                            this.LogisticsPostalAddress = asyncAddress.LogisticsPostalAddress;
                        }
                        else if (RetailAsyncAddressCreationFeature::isEnabled())
                        {
                            // If the Retail async address creation feature is enabled, then attempt to locate the record in the new location.
                            RetailAsyncAddressV2 asyncAddressV2;

                            select firstonly asyncAddressV2
                                where asyncAddressV2.CustAccountAsync == asyncCust.CustAccountAsync
                                && asyncAddressV2.ReplicationCounterFromOrigin == this.LogisticsPostalAddress
                                && asyncAddressV2.OnlineOperationCompleted == NoYes::Yes;

                            if (asyncAddressV2)
                            {
                                this.LogisticsPostalAddress = asyncAddressV2.LogisticsPostalAddress;
                            }
                        }
                    }
                    else
                    {
                        // Check if the customer has been previously synchronized.
                        str associatedCustAccountNumber = RetailTransactionServiceCustomer::getAccountNumberAssociatedToAsyncCustomer(this.CustAccountAsync);

                        if (!System.String::IsNullOrWhiteSpace(associatedCustAccountNumber))
                        {
                            // Set the customer account number based on pre-exsiting information from RetailCustTable.
                            this.custAccount = associatedCustAccountNumber;
                        }
                        else
                        {
                            // Process the async customer records to ensure all create and update operations are processed orderly.
                            RetailAsyncCustomerCreator customerCreator = new RetailAsyncCustomerCreator();
                            customerCreator.ProcessAllAsyncCustomerV2Records();

                            RetailAsyncCustomerV2 asyncCustV2;
                            select firstonly forupdate asyncCustV2
                                where asyncCustV2.CustAccountAsync == this.CustAccountAsync &&
                                    asyncCustV2.OnlineOperationCompleted == NoYes::Yes;

                            if (asyncCustV2)
                            {
                                // Set the customer account number based on the async customer record information retrieved.
                                this.custAccount = asyncCustV2.CustAccount;
                            }
                        }

                        RetailAsyncAddressV2 asyncAddressV2;

                        select firstonly asyncAddressV2
                            where asyncAddressV2.CustAccountAsync == this.CustAccountAsync &&
                                asyncAddressV2.ReplicationCounterFromOrigin == this.LogisticsPostalAddress;

                        if (asyncAddressV2.OnlineOperationCompleted == NoYes::No)
                        {
                            RetailTransactionServiceCustomer::processAsyncAddressOperation(asyncAddressV2, this.custAccount);
                        }

                        // Update the delivery address to point to the correct LogisticsPostalAddress record.
                        asyncAddressV2.reread();
                        this.LogisticsPostalAddress = asyncAddressV2.LogisticsPostalAddress;
                    }
                }
            }
            else
            {
                // The CustAccountAsync field value was loaded and is empty, so the customer is not an async customer.
                // Check if the "Allow Async Address creation" feature is enabled.
                if (RetailAsyncAddressCreationFeature::isEnabled())
                {
                    if (!LogisticsPostalAddress::findRecId(this.LogisticsPostalAddress) && this.isFieldDataRetrieved(fieldStr(RetailTransactionTable, CustAccount)))
                    {
                        RetailAsyncAddressV2 asyncAddressV2;

                        select firstonly asyncAddressV2
                                    where asyncAddressV2.CustAccount == this.custAccount
                                    && asyncAddressV2.ReplicationCounterFromOrigin == this.LogisticsPostalAddress;

                        if (asyncAddressV2)
                        {
                            if (asyncAddressV2.OnlineOperationCompleted == NoYes::No)
                            {
                                ttsbegin;
                                RetailTransactionServiceCustomer::processAsyncAddressOperation(asyncAddressV2, this.custAccount);
                                ttscommit;
                            }

                            asyncAddressV2.reread();
                            this.LogisticsPostalAddress = asyncAddressV2.LogisticsPostalAddress;
                        }
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInDateTimeInterval</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the <c>RetailTransactionTable</c> record belongs to a given date interval.
    /// </summary>
    /// <param name = "_fromDate">The from date of the interval.</param>
    /// <param name = "_fromTime">The from time of the interva.</param>
    /// <param name = "_toDate">The to date of the interval.</param>
    /// <param name = "_toTime">The to time of the interval.</param>
    /// <returns>True if the record belongs to the interval; otherwise, false.</returns>
    public boolean isInDateTimeInterval(TransDate _fromDate, TimeOfDay _fromTime, TransDate _toDate, TimeOfDay _toTime)
    {
        const int lastTimeOfDayInSeconds = 86399;
        boolean fromDateTimeIsOk, toDateTimeIsOk;
        utcdatetime inputFromDateTime, inputToDateTime, thisDateTime;

        thisDateTime    = DateTimeUtil::newDateTime(this.transDate, this.transTime);

        if (!_toTime && _toDate == this.transDate)
        {
            _toTime = lastTimeOfDayInSeconds;
        }

        if (!_fromDate)
        {
            fromDateTimeIsOk = true;
        }
        else
        {
            inputFromDateTime = DateTimeUtil::newDateTime(_fromDate, _fromTime);

            if (thisDateTime >= inputFromDateTime)
            {
                fromDateTimeIsOk = true;
            }
        }

        if (!_toDate)
        {
            toDateTimeIsOk = true;
        }
        else
        {
            inputToDateTime = DateTimeUtil::newDateTime(_toDate, _toTime);

            if (thisDateTime <= inputToDateTime)
            {
                toDateTimeIsOk = true;
            }
        }

        return fromDateTimeIsOk && toDateTimeIsOk;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfSignedCopies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of the signed copies.
    /// </summary>
    /// <returns>
    /// The number of the signed copies.
    /// </returns>
    public int numberOfSignedCopies()
    {
        RetailLog retailLog;
        RetailLogFiscalTransaction logFiscalTrans;
        RetailLogTransactionReference logTransReference;

        int signedCopiesCounter = 0;

        while select RetailLogId from retailLog
            group by retailLog.ChannelId, retailLog.StoreId, retailLog.terminalId, retailLog.RetailLogId
        where RetailLog.EventType == RetailAuditEventType::PrintReceiptCopy
        exists join logFiscalTrans
            where logFiscalTrans.Store == retailLog.StoreId
                && logFiscalTrans.Terminal == retailLog.terminalId
                && logFiscalTrans.RetailLogId == retailLog.RetailLogId
                && logFiscalTrans.Channel == retailLog.ChannelId
        exists join logTransReference
            where logTransReference.ChannelId == retailLog.ChannelId
                && logTransReference.StoreId == retailLog.StoreId
                && logTransReference.TerminalId == retailLog.terminalId
                && logTransReference.RetailLogId == retailLog.RetailLogId
                && logTransReference.RefChannel == this.Channel
                && logTransReference.RefStore == this.Store
                && logTransReference.RefTerminal == this.Terminal
                && logTransReference.RefTransactionId == this.TransactionId
        {
            signedCopiesCounter++;
        }

        return signedCopiesCounter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfTransactionsWithValidationError</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the number of transactions in a given store and date/time interval with validation error.
    /// </summary>
    /// <param name = "_storeId">Store number.</param>
    /// <param name = "_fromDate">From date value.</param>
    /// <param name = "_toDate">To date value.</param>
    /// <param name = "_timeFrom">From time value</param>
    /// <param name = "_timeTo">To time value.</param>
    /// <returns>Numbers of transactions with error for the given criteria.</returns>
    public static int numberOfTransactionsWithValidationError(  RetailStoreId  _storeId,
                                                                FromDate    _fromDate,
                                                                ToDate      _toDate,
                                                                FromTime    _timeFrom,
                                                                ToTime      _timeTo)
    {
        RetailTransactionTable transactionTable;

        #localmacro.DefaultCondition
            &&  transactionTable.Store == _storeId
            &&  transactionTable.Type == RetailTransactionType::Sales
            &&  transactionTable.EntryStatus == RetailEntryStatus::None
            &&  transactionTable.statementId == ''
            &&  transactionTable.ValidationStatus == RetailTransactionValidationStatus::Failed;
        #endmacro

        // Only "To date" was specified
        if (_fromDate == Global::dateNull() && _toDate != Global::dateNull())
        {
            if (_timeTo)
            {
                select count(RecId) from transactionTable
                    where   (   transactionTable.TransDate < _toDate 
                            || (transactionTable.TransDate == _toDate && transactionTable.TransTime <= _timeTo))
                            #DefaultCondition;
            }        
            else
            {
                select count(RecId) from transactionTable
                    where   transactionTable.TransDate <= _toDate
                            #DefaultCondition;
            }
        }
        // Only "From date" was specified
        else if (_fromDate != Global::dateNull() && _toDate == Global::dateNull())
        {
            if (_timeFrom)
            {
                select count(RecId) from transactionTable
                    where   (   transactionTable.TransDate > _fromDate
                            || (transactionTable.TransDate == _fromDate && transactionTable.TransTime >= _timeFrom))
                            #DefaultCondition;
            }
            else
            {
                select count(RecId) from transactionTable
                    where   transactionTable.TransDate >= _fromDate
                            #DefaultCondition;
            }
        }
        // Both from date and to date were specified
        else
        {
            // Only "To time" was specified
            if (!_timeFrom && _timeTo)
            {
                select count(RecId) from transactionTable
                    where   (   transactionTable.TransDate < _toDate
                            || (transactionTable.TransDate == _toDate && transactionTable.TransTime <= _timeTo))
                        &&  transactionTable.transDate >= _fromDate
                        #DefaultCondition;
            }
            // Only "From time" was specified 
            else if (_timeFrom && !_timeTo)
            {
                select count(RecId) from transactionTable
                    where   (   transactionTable.TransDate > _fromDate
                            || (transactionTable.TransDate == _fromDate && transactionTable.TransTime >= _timeFrom))
                        &&  transactionTable.transDate <= _toDate
                        #DefaultCondition;
            }
            // Both "From time" and "To time" have been specified
            else if (_timeFrom && _timeTo)
            {
                select count(RecId) from transactionTable
                    where   (   transactionTable.TransDate < _toDate
                            || (transactionTable.TransDate == _toDate && transactionTable.TransTime <= _timeTo))
                        &&  (   transactionTable.TransDate > _fromDate
                            || (transactionTable.TransDate == _fromDate && transactionTable.TransTime >= _timeFrom))
                        #DefaultCondition;
            }
            // No time range was specified, only dates
            else
            {
                select count(RecId) from transactionTable
                    where   transactionTable.TransDate >= _fromDate
                        &&  transactionTable.transDate <= _toDate
                        #DefaultCondition;
            }
        }        

        return any2int(transactionTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isGTETransaction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the retail transaction is a GTE transaction in which tax is calculated using GTE.
    /// </summary>
    /// <returns>true if the retail transaction is a GTE transaction; otherwise, false.</returns>
    public boolean isGTETransaction()
    {
        return this.TaxCalculationType == TaxCalculationType::GTE;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transactionDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transaction utc date time.
    /// </summary>
    /// <returns>The transaction utc date time.</returns>
    public utcdatetime transactionDateTime()
    {
        utcdatetime transactionDateTime;
        
        transactionDateTime = DateTimeUtil::newDateTime(this.transDate, this.transTime, RetailChannelTable::findByRecId(this.Channel).ChannelTimeZone);
        
        return transactionDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>toolTipField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Tooltip for retail transaction fields.
    /// </summary>
    /// <param name = "_fieldId">An extended FieldId.</param>
    /// <returns>Toolltip string for the given retail tranaction field.</returns>
    public str toolTipField(FieldId _fieldId)
    {
        str ret = super(_fieldId);
        FieldId fieldId = Global::fieldExt2Id(_fieldId);

        FormDataSource formDataSource = FormDataUtil::getFormDataSource(this);
        if (formDataSource && formDataSource.table() == tableNum(RetailTransactionTable))
        {
            if (fieldId == fieldNum(RetailTransactionTable, BatchId) ||
                fieldId == fieldNum(RetailTransactionTable, store))
            {
                ret = strFmt("@Retail:RetailTransactionTableToolTip", this.store, this.BatchID);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4040289</DeveloperDocumentation>
	<FormRef>RetailTransactionTable</FormRef>
	<Label>@RET3191</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>transactionId</TitleField1>
	<TitleField2>receiptId</TitleField2>
	<AllowArchival>Yes</AllowArchival>
	<AllowRetention>Yes</AllowRetention>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>transactionIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>TransactionsAndOrders</Modules>
	<PrimaryIndex>transactionIdx</PrimaryIndex>
	<ReplacementKey>transactionIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailTransactionMarkupTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailTransactionMarkupTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailTransactionBankedTenderTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailTransactionBankedTenderTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailTransactionIncomeExpenseTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailTransactionIncomeExpenseTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailTransactionInfocodeTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailTransactionInfocodeTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailTransactionLoyaltyRewardPointTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailTransactionLoyaltyRewardPointTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailTransactionOrderInvoiceTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailTransactionOrderInvoiceTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailTransactionPaymentTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailTransactionPaymentTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailTransactionSafeTenderTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailTransactionSafeTenderTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailTransactionSalesTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailTransactionSalesTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailTransactionTaxTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailTransactionTaxTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailTransactionTenderDeclarationTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailTransactionTenderDeclarationTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailLogTransactionReference</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailLogTransactionReference</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>transactionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>receiptId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>store</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>terminal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>transDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Channel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Channel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>store</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>terminal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>transactionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Account</Name>
			<Label>@RET3084</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>toAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>infocodeDiscGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>custDiscAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>numberOfInvoices</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>refundReceiptId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>counter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>transTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>openDrawer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>replicated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>includedInStatistics</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>postAsShipment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>replicationCounterFromOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>exchRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>itemsPosted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>invoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChannelReferenceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShippingDateRequested</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptDateRequested</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogisticsPostalAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Channel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Origin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>businessDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxCalculationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SuspendedTransactionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionOrderType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@RET3221</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>amountToAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>incomeExpenseAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amounts</Name>
			<Label>@RET3050</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>grossAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>netAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>netPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>paymentAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>costAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsTaxIncludedInPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Batch</Name>
			<Label>@RET5068</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BatchTerminalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BatchID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Customer</Name>
			<Label>@RET3318</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>custAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPurchaseOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Difference</Name>
			<Label>@RET3196</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>salesPaymentDifference</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultDimensionStamped</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Discount</Name>
			<Label>@RET3068</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>discAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>discAmountWithoutTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>totalDiscAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>roundedAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoyaltyDiscAmount_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Fiscal</Name>
			<Label>@REX4520006</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FiscalDocumentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalSerialId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Loyalty</Name>
			<Label>@RET4355</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>loyaltyCardId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReceiptEmail</Name>
			<Label>@RET4554</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>receiptEmail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>receiptEmailSent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Sale</Name>
			<Label>@RET3188</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>retrievedFromReceiptId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>saleIsReturnSale</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>comment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesOrderInvoice</Name>
			<Label>@RET4549</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>salesOrderAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>salesInvoiceAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>salesOrderId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Shift</Name>
			<Label>@RET3189</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>shift</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>shiftDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>wrongShift</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Statement</Name>
			<Label>@RET3248</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>statementCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>statementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidationStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidationDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EditAuditDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TimeOfTransaction</Name>
			<Label>@RET3292</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>transDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>transTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Times</Name>
			<Label>@RET3319</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>timeWhenTotalPressed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>timeWhenTransClosed</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Totallines</Name>
			<Label>@RET3320</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>numberOfItems</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>numberOfItemLines</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>numberOfPaymentLines</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transaction</Name>
			<Label>@RET4873</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>transactionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransactionOrigin</Name>
			<Label>@RET3293</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Channel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>store</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdOnPosTerminal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>terminal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>receiptId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>staff</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatedOffline</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransactionStatus</Name>
			<Label>@RET3321</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>entryStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>transCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GiftCard</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GiftCardIdMasked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GiftCardActiveFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GiftCardExpireDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GiftCardIssueAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GiftCardBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GiftCardHistoryDetails</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>terminal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTerminalId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>amountToAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailAmountToAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BatchID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPosBatchID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BatchTerminalId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTerminalId</ExtendedDataType>
			<Label>@RET6078</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>businessDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailBusinessDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Channel</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ChannelReferenceId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOrderChannelReferenceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>comment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCommentEx5</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>costAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCostAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>counter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCounter</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreatedOffline</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@RET260892</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>createdOnPosTerminal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTerminalId</ExtendedDataType>
			<Label>@RET3317</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>currency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>custAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetailAsyncCustAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>custDiscAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCustDiscAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustPurchaseOrder</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustPurchaseOrder</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTransactionTableDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>discAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDiscAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>discAmountWithoutTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscAmountWithoutTax</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustDlvModeId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>entryStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTransEntryStatus</ExtendedDataType>
			<EnumType>RetailEntryStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>exchRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExchRate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FiscalDocumentId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFiscalDocumentId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FiscalSerialId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFiscalSerialId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>grossAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGrossAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>includedInStatistics</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailIncludedInStatistics</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>incomeExpenseAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailIncomeExpenseAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>infocodeDiscGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodeDiscGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesInventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceComment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCommentEx5</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>invoiceId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>itemsPosted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailItemsPosted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LogisticsPostalAddress</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>loyaltyCardId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetailLoyaltyCardNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LoyaltyDiscAmount_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLoyaltyDiscAmount_RU</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>netAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailNetAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>netPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailNetPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>numberOfInvoices</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailNumberOfInvoices</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>numberOfItemLines</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailNumberOfItemLines</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>numberOfItems</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailNumberOfItems</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>numberOfPaymentLines</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailNumberOfPaymentLines</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>openDrawer</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOpenDrawer</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Origin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnDistributionLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>paymentAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPaymentAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>postAsShipment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPostAsShipment</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ReceiptDateRequested</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesReceiptDateRequested</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>receiptEmail</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetailReceiptEmail</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>receiptEmailSent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailReceiptEmailSent</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>receiptId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetailReceiptId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>refundReceiptId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetailReceiptId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>replicated</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailReplicated</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>replicationCounterFromOrigin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailReplicationCounter</ExtendedDataType>
			<Label>@RET3920</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>retrievedFromReceiptId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailReceiptId</ExtendedDataType>
			<Label>@RET3316</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>roundedAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailRoundedAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>saleIsReturnSale</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSaleIsReturnSale</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>salesInvoiceAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSalesInvoiceAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>salesOrderAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSalesOrderAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>salesOrderId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SalesId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>salesPaymentDifference</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSalesPaymentDifference</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>sellToContactId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetailSellToContactId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>shift</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailShiftId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>shiftDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailShiftDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ShippingDateRequested</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesShippingDateRequested</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SkipAggregation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>staff</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetailStaffId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>statementCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStatementCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>statementId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStatementId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>store</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStoreId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>timeWhenTotalPressed</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTimeWhenTotalPressed</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>timeWhenTransClosed</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTimeWhenTransClosed</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>toAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailToAccount</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>totalDiscAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTotalDiscAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalManualDiscountAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTotalManualDiscountAmount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalManualDiscountPercentage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTotalManualDiscountPercentage</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>transactionId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>End User Pseudonymous Identifiers</AssetClassification>
			<ExtendedDataType>RetailTransactionId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>transCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTransCode</ExtendedDataType>
			<EnumType>RetailTransactionCode</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>transDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>transTableId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>transTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTransTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>type</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailTransactionType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>wrongShift</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailWrongShift</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccountAsync</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetailAsyncCustAccount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SourceId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRSourceIdForm</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PriceOverride</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FTCExempt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRFTCExempt</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CatalogUpSellShown</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContinuityOrder</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRContinuityOrder</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContinuityChild</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRContinuityChildOrder</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContinuityLineEval</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRContinuityLineEval</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InstallmentOrderSubmitted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OutOfBalanceReleaseType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCROutOfBalanceReleaseType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PaymOutOfBalanceType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRPaymOutOfBalance</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InstallmentBillingPrompt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRPromptedForInstBillingOption</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllocationPriority</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRSOAllocPriority</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CommissSalesGroup</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxCalculationType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxCalculationType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ValidationStatus</Name>
			<EnumType>RetailTransactionValidationStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ValidationDateTime</Name>
			<Label>@Retail:RetailConsistencyCheckerValidationDateTime</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SaleOnAccount</Name>
			<ExtendedDataType>RetailTransactionSaleOnAccount</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsTaxIncludedInPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailIsTaxIncludedInPrice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SuspendedTransactionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTransactionId</ExtendedDataType>
			<HelpText>@Retail:SuspendedTransactionIdHelpText</HelpText>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>GiftCardActiveFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGiftCardActiveFrom</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>GiftCardExpireDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGiftCardExpireDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>GiftCardIssueAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>GiftCardBalance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GiftCardHistoryDetails</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGiftCardHistoryDetails</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GiftCardIdMasked</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGiftCardIdMasked</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InvoiceRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RetailTransactionAggregationFieldList</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransactionOrderType</Name>
			<ExtendedDataType>RetailTransactionOrderType</ExtendedDataType>
			<EnumType>RetailTransactionOrderTypes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>BeginDateTime</Name>
			<Label>@Retail:RetailBeginDateTime</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DefaultDimensionStamped</Name>
			<ExtendedDataType>RetailTransactionDefaultDimensionStamped</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsTaxExemptedForPriceInclusive</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailIsTaxExemptedForPriceInclusive</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>InternalTransactionId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RetailInternalTransactionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustomerName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DirPartyName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<ExtendedDataType>CustLanguageId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDepositOverridden</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>UnknownNoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>EditAuditDateTime</Name>
			<HelpText>@Retail:TransactionTableEditTimeToolTip</HelpText>
			<Label>@Retail:RetailTransactionEditAuditDateTime</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>QuotationExpiryDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>QuotationExpiryDate</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>transactionIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Channel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>terminal</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transactionId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>statementIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>type</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>StoreDateStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>entryStatus</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>StoreDtTimStatTerm</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transTime</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>entryStatus</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>terminal</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>salesOrderIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>salesOrderId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>transCodeStmtIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>invoiceIdSOIdStmtIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>type</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>entryStatus</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>invoiceId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Validationstatus</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>invoiceIdStmtIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>invoiceId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>lookupTransByStaffIdxForStmtCalc</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>dataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>staff</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>entryStatus</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>lookupTransByTermIdxForStmtCalc</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>dataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>entryStatus</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>terminal</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>lookupTransForDefCustStmtPost</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>dataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>custAccount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>lookupTransByPOSBatch</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BatchTerminalId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BatchID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>invIdStatIdSOIdStmtPostIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>dataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>store</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>invoiceId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>salesOrderId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transactionId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>terminal</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LogisticsPostalAddressIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LogisticsPostalAddress</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LocationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Origin</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>replicationCounterFromOrigin</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>salesIdTypeStmtIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>type</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>salesOrderId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>aggregationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Channel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>businessDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>currency</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>custAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LogisticsPostalAddress</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>type</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>entryStatus</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>IsTaxIncludedInPrice</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RetailTransactionAggregationFieldList</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IdChannelStatus</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TransactionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Channel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>entryStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DimensionGroupIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>statementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>terminal</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>staff</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>custAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DefaultDimension</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DefaultDimensionStamped</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ChannelSalesOrderIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Channel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>salesOrderId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>type</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>entryStatus</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReceiptId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReceiptIdDataareaIDTypeEntryStatusPartitionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ReceiptId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaid</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Type</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EntryStatus</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CreatedDateTime</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CustAccountReceiptIdSalesOrderIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>custAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>businessDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>receiptId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>salesOrderId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>type</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>entryStatus</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CreatedDateTime</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ChannelTransDateTimeSalesOrderTypeStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Channel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transTime</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>salesOrderId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>type</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>entryStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SalesOrderIdIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>salesOrderId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ChannelChannelReferenceIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ChannelReferenceId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Channel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>salesOrderId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>StoreBatchTerminalIdBatchIDIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>store</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BatchTerminalId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BatchID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EntryStatusCreatedDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>entryStatus</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CreatedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>currency</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>currency</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Role>RetailTransactionTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>custAccount</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>custAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DimensionAttributeValueSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<SourceEDT>DimensionDefault</SourceEDT>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsPostalAddress</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LogisticsPostalAddress</Name>
					<SourceEDT>LogisticsPostalAddressRecId</SourceEDT>
					<Field>LogisticsPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailChannelTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailChannelTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Channel</Name>
					<SourceEDT>RefRecId</SourceEDT>
					<Field>Channel</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Retailloyaltycard</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailLoyaltyCard</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>loyaltyCardId</Name>
					<SourceEDT>RetailLoyaltyCardNumber</SourceEDT>
					<Field>loyaltyCardId</Field>
					<RelatedField>CardNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CardNumberIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailPosBatchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailPosBatchTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BatchTerminalId</Name>
					<SourceEDT>RetailTerminalId</SourceEDT>
					<Field>BatchTerminalId</Field>
					<RelatedField>TerminalId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>store</Name>
					<SourceEDT>RetailStoreId</SourceEDT>
					<Field>store</Field>
					<RelatedField>StoreId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BatchID</Name>
					<SourceEDT>RetailPosBatchID</SourceEDT>
					<Field>BatchID</Field>
					<RelatedField>BatchID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailStatementTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailStatementTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>statementId</Name>
					<SourceEDT>RetailStatementId</SourceEDT>
					<Field>statementId</Field>
					<RelatedField>statementId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>statementIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailStoreTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailStoreTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>store</Name>
					<SourceEDT>RetailStoreId</SourceEDT>
					<Field>store</Field>
					<RelatedField>StoreNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StoreNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailStoreWorkShiftTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailStoreWorkShiftTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>shiftDate</Name>
					<SourceEDT>RetailShiftDate</SourceEDT>
					<Field>shiftDate</Field>
					<RelatedField>shiftDate</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailTerminalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailTerminalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CreatedOnPosTerminal</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>createdOnPosTerminal</Name>
					<SourceEDT>RetailTerminalId</SourceEDT>
					<Field>createdOnPosTerminal</Field>
					<RelatedField>terminalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>terminalIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailTerminalTable1</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailTerminalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Terminal</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>terminal</Name>
					<SourceEDT>RetailTerminalId</SourceEDT>
					<Field>terminal</Field>
					<RelatedField>terminalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>terminalIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailTerminalTableBatch</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailTerminalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BatchTerminalId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BatchTerminalId</Name>
					<SourceEDT>RetailTerminalId</SourceEDT>
					<Field>BatchTerminalId</Field>
					<RelatedField>terminalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>salesOrderId</Name>
					<SourceEDT>SalesId</SourceEDT>
					<Field>salesOrderId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SalesIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CommissionSalesGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>CommissionSalesGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesGroup</Name>
					<Field>SalesGroup</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustInvoiceJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceRecId</Name>
					<Field>InvoiceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailTransactionAggregationFieldList</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailTransactionAggregationFieldList</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailTransactionAggregationFieldList</Name>
					<Field>RetailTransactionAggregationFieldList</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>