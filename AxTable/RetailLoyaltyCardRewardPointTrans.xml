<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailLoyaltyCardRewardPointTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailLoyaltyCardRewardPointTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcPoints</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the used, issued, expired, or active points based on the specified table and status type.
    /// </summary>
    /// <param name="_common">
    /// The range of reward point calculation. It can be a <c>RetailAffiliation</c> record or a <c>RetailLoyaltyCard</c> record.
    /// </param>
    /// <param name="_rewardPoint">
    /// The recId value of the reward point.
    /// </param>
    /// <param name="_statusType">
    /// The value of the status type.
    /// </param>
    /// <param name="_calculateDate">
    /// The calculation date which could be the channel local date.
    /// </param>
    /// <returns>
    /// The calculated loyalty points.
    /// </returns>
    /// <remarks>
    /// The function calculates the used, issued, expired, or active points,
    /// and depends on on the table and baseEnum (Used; Issued; Expired; Active; Unvested).
    /// </remarks>
    public static RetailLoyaltyRewardPointAmountQty calcPoints(
        Common _common,
        RefRecId _rewardPoint,
        RetailLoyaltyPointStatusTypeBase _statusType,
        date _calculateDate = DateTimeUtil::date(DateTimeUtil::utcNow()))
    {
        RetailLoyaltyRewardPoint  rewardpoint;
        RetailLoyaltyCard  loyaltyCard;
        RetailLoyaltyCardRewardPointTrans  loyaltyCardRewardPointTrans;
        RetailLoyaltyRewardPointAmountQty        loyaltyPoints;

        switch (_common.TableId)
        {
            case tableNum(RetailLoyaltyRewardPoint):
                rewardpoint  = _common;
                break;

            case tableNum(RetailloyaltyCard):
                loyaltyCard = _common;
                break;
            default :
                return 0;
        }

        switch (_statusType)
        {
            case RetailLoyaltyPointStatusTypeBase::Issued  :
                select sum(RewardPointAmountQty) from loyaltyCardRewardPointTrans
                where ((loyaltyCardRewardPointTrans.RewardPoint == rewardpoint.RecId && rewardpoint.RecId)
                        || (loyaltyCardRewardPointTrans.CardNumber  == loyaltyCard.CardNumber && loyaltyCard.RecId))
                   && loyaltyCardRewardPointTrans.RewardPoint == _rewardPoint
                   && (loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Earn
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::ReturnEarned
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Adjust);

                loyaltyPoints = loyaltyCardRewardPointTrans.RewardPointAmountQty;

                break;

            case RetailLoyaltyPointStatusTypeBase::Used    :
                select sum(RewardPointAmountQty) from loyaltyCardRewardPointTrans
                where ((loyaltyCardRewardPointTrans.RewardPoint == rewardpoint.RecId && rewardpoint.RecId)
                        || (loyaltyCardRewardPointTrans.CardNumber == loyaltyCard.CardNumber && loyaltyCard.RecId))
                   && loyaltyCardRewardPointTrans.RewardPoint == _rewardPoint
                   && (loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Redeem
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Refund);

                loyaltyPoints = loyaltyCardRewardPointTrans.RewardPointAmountQty * -1;

                break;

            case RetailLoyaltyPointStatusTypeBase::Expired :
                select sum(Remaining) from loyaltyCardRewardPointTrans
                where ((loyaltyCardRewardPointTrans.RewardPoint == rewardpoint.RecId && rewardpoint.RecId)
                        || (loyaltyCardRewardPointTrans.CardNumber == loyaltyCard.CardNumber && loyaltyCard.RecId))
                   && loyaltyCardRewardPointTrans.RewardPoint == _rewardPoint
                   && (loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Earn
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Adjust
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Refund)
                   && (loyaltyCardRewardPointTrans.ExpirationDate && loyaltyCardRewardPointTrans.ExpirationDate < _calculateDate)
                   && loyaltyCardRewardPointTrans.Remaining > 0;

                loyaltyPoints = (loyaltyCardRewardPointTrans.Remaining) < 0 ? 0 :loyaltyCardRewardPointTrans.Remaining;

                break;

            case RetailLoyaltyPointStatusTypeBase::Active :
                select sum(Remaining) from loyaltyCardRewardPointTrans
                where ((loyaltyCardRewardPointTrans.RewardPoint == rewardpoint.RecId && rewardpoint.RecId)
                        || (loyaltyCardRewardPointTrans.CardNumber == loyaltyCard.CardNumber && loyaltyCard.RecId))
                   && loyaltyCardRewardPointTrans.RewardPoint == _rewardPoint
                   && (loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Earn
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::ReturnEarned
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Adjust
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Refund)
                   && (!loyaltyCardRewardPointTrans.ExpirationDate
                        || loyaltyCardRewardPointTrans.ExpirationDate >= _calculateDate
                        || (loyaltyCardRewardPointTrans.ExpirationDate < _calculateDate && loyaltyCardRewardPointTrans.Remaining < 0))
                    && loyaltyCardRewardPointTrans.StartDate <= _calculateDate;  // must be vested to be considered active

                loyaltyPoints = loyaltyCardRewardPointTrans.Remaining;

                break;

            case RetailLoyaltyPointStatusTypeBase::Unvested :
                select sum(Remaining) from loyaltyCardRewardPointTrans
                where ((loyaltyCardRewardPointTrans.RewardPoint == rewardpoint.RecId && rewardpoint.RecId)
                        || (loyaltyCardRewardPointTrans.CardNumber == loyaltyCard.CardNumber && loyaltyCard.RecId))
                   && loyaltyCardRewardPointTrans.RewardPoint == _rewardPoint
                   && (loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Earn
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::ReturnEarned
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Adjust
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Refund)
                   && (!loyaltyCardRewardPointTrans.ExpirationDate
                        || loyaltyCardRewardPointTrans.ExpirationDate >= _calculateDate
                        || (loyaltyCardRewardPointTrans.ExpirationDate < _calculateDate && loyaltyCardRewardPointTrans.Remaining < 0))
                    && loyaltyCardRewardPointTrans.StartDate > _calculateDate;  

                loyaltyPoints = loyaltyCardRewardPointTrans.Remaining;

                break;

            default                                     :   loyaltyPoints = 0;
        }

        return loyaltyPoints;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcExpiringPoints</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the expired points based on the specified table and status type.
    /// </summary>
    /// <param name="_common">
    /// The range of reward point calculation. It can be a <c>RetailAffiliation</c> record or a <c>RetailLoyaltyCard</c> record.
    /// </param>
    /// <param name="_rewardPoint">
    /// The recId value of the reward point.
    /// </param>
    /// <param name="_statusType">
    /// The value of the status type.
    /// </param>
    /// <param name="_noOfDaysToExpiry">
    /// The number of days from the calculation date on or before which the points will expire.
    /// </param>
    /// <param name="_calculateDate">
    /// The calculation date which could be the channel local date [optional].
    /// </param>
    /// <returns>
    /// The calculated loyalty points.
    /// </returns>
    /// <remarks>
    /// The function calculates the active points expiring in a given number of days,
    /// e.g. points expiring in 30 days from today.
    /// The function depends on the table and baseEnum (Expiring).
    /// </remarks>
    public static RetailLoyaltyRewardPointAmountQty calcExpiringPoints(
        Common _common,
        RefRecId _rewardPoint,
        int64 _noOfDaysToExpiry,
        date _calculateDate = DateTimeUtil::date(DateTimeUtil::utcNow())
    )
    {
        RetailLoyaltyRewardPoint rewardpoint;
        RetailLoyaltyCard loyaltyCard;
        RetailLoyaltyCardRewardPointTrans loyaltyCardRewardPointTrans;
        RetailLoyaltyRewardPointAmountQty loyaltyPoints = 0;

        switch (_common.TableId)
        {
            case tableNum(RetailLoyaltyRewardPoint):
                rewardpoint  = _common;
                break;

            case tableNum(RetailloyaltyCard):
                loyaltyCard = _common;
                break;
            default :
                return 0;
        }

        // Select the sum of active points that are expiring on or before the expirationDate
        select sum(Remaining) from loyaltyCardRewardPointTrans
                where ((loyaltyCardRewardPointTrans.RewardPoint == _rewardPoint)
                        && (loyaltyCardRewardPointTrans.CardNumber == loyaltyCard.CardNumber))
                   && (loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Earn
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Adjust
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Refund)
                   && (loyaltyCardRewardPointTrans.ExpirationDate
                    && loyaltyCardRewardPointTrans.ExpirationDate >= _calculateDate && loyaltyCardRewardPointTrans.ExpirationDate <= _calculateDate + _noOfDaysToExpiry)
                   && loyaltyCardRewardPointTrans.Remaining > 0;

        loyaltyPoints = loyaltyCardRewardPointTrans.Remaining;

        return loyaltyPoints;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIssuedPoints</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates issued points based on the specified card, reward point and date range.
    /// </summary>
    /// <param name="_cardNumber">
    /// The card nunber for points calculation.
    /// </param>
    /// <param name="_rewardPoint">
    /// The recId value of the reward point.
    /// </param>
    /// <param name="_fromDate">
    /// The from date which is used for calculation.
    /// </param>
    /// <param name="_toDate">
    /// The end date which is used for calculation.
    /// </param>
    /// <returns>
    /// The issued loyalty points.
    /// </returns>
    /// <remarks>
    /// Use the method getIssuedPointsForLoyaltyCard instead, which calculates issued points based on the specified card, reward point and date and time range
    /// </remarks>
    public static RetailLoyaltyRewardPointAmountQty getIssuedPoints(
        RetailLoyaltyCardNumber _cardNumber,
        RefRecId _rewardPoint,
        date _fromDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        date _toDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        RetailLoyaltyCardRewardPointTrans  loyaltyCardRewardPointTrans;
        RetailLoyaltyRewardPointAmountQty        loyaltyPoints;

        select sum(RewardPointAmountQty) from loyaltyCardRewardPointTrans
                where loyaltyCardRewardPointTrans.CardNumber  == _cardNumber
                   && loyaltyCardRewardPointTrans.RewardPoint == _rewardPoint
                   && (loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Earn
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::ReturnEarned
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Adjust)
                   && loyaltyCardRewardPointTrans.EntryDate >= _fromDate
                   && loyaltyCardRewardPointTrans.EntryDate <= _toDate;

        loyaltyPoints = loyaltyCardRewardPointTrans.RewardPointAmountQty;

        return loyaltyPoints;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIssuedPointsForLoyaltyCard</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates issued points based on the specified card, reward point and date range.
    /// </summary>
    /// <param name="_cardNumber">
    /// The card nunber for points calculation.
    /// </param>
    /// <param name="_rewardPoint">
    /// The recId value of the reward point.
    /// </param>
    /// <param name="_fromDate">
    /// The from date which is used for calculation.
    /// </param>
    /// <param name="_toDate">
    /// The end date which is used for calculation.
    /// </param>
    /// <param name="_evaluateFromTime">
    /// The from time which is used for calculation.
    /// </param>
    /// <param name="_fromDateUpdated">
    /// The fromDateUpdated used to check the filter data from RetailLoyaltyCardRewardPointTrans will be on time basis.
    /// </param>
    /// <returns>
    /// The issued loyalty points.
    /// </returns>
    /// <remarks>
    /// The function calculates issued points based on the specified card, reward point and date range.
    /// </remarks>
    public static RetailLoyaltyRewardPointAmountQty getIssuedPointsForLoyaltyCard(
        RetailLoyaltyCardNumber _cardNumber,
        RefRecId _rewardPoint,
        date _fromDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        date _toDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        int _evaluateFromTime = 0,
        boolean _fromDateUpdated = false)
    {
        RetailLoyaltyCardRewardPointTrans  loyaltyCardRewardPointTrans;
        RetailLoyaltyRewardPointAmountQty        loyaltyPoints;

        if (_fromDateUpdated)
        {
            select sum(RewardPointAmountQty) from loyaltyCardRewardPointTrans
                where loyaltyCardRewardPointTrans.CardNumber  == _cardNumber
                   && loyaltyCardRewardPointTrans.RewardPoint == _rewardPoint
                   && (loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Earn
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::ReturnEarned
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Adjust)
                   && ((loyaltyCardRewardPointTrans.EntryDate > _fromDate && loyaltyCardRewardPointTrans.EntryDate <= _toDate)
                       || (loyaltyCardRewardPointTrans.EntryDate == _fromDate && loyaltyCardRewardPointTrans.EntryTime > _evaluateFromTime));
        }
        else
        {
            select sum(RewardPointAmountQty) from loyaltyCardRewardPointTrans
                where loyaltyCardRewardPointTrans.CardNumber  == _cardNumber
                   && loyaltyCardRewardPointTrans.RewardPoint == _rewardPoint
                   && (loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Earn
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::ReturnEarned
                        || loyaltyCardRewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Adjust)
                   && loyaltyCardRewardPointTrans.EntryDate >= _fromDate
                   && loyaltyCardRewardPointTrans.EntryDate <= _toDate;
        }

        loyaltyPoints = loyaltyCardRewardPointTrans.RewardPointAmountQty;

        return loyaltyPoints;
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsSalesOrderPaidByLoyalty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a sales order has a loyalty tender line.
    /// </summary>
    /// <param name="_salesId">
    /// The sales id.
    /// </param>
    /// <param name="_dataAreaId">
    /// The order data area id.
    /// </param>
    /// <returns>
    /// True, if the order has a loyalty tender line; otherwise, false.
    /// </returns>
    public static boolean IsSalesOrderPaidByLoyalty(SalesId _salesId, DataAreaId _dataAreaId)
    {
        RetailLoyaltyCardRewardPointTrans trans;

        select firstOnly RecId
            from trans
            where trans.LoyaltyTransactionType == RetailLoyaltyTransactionType::SalesOrder
                && trans.loyaltyTransDataAreaId == _dataAreaId
                && trans.SalesId == _salesId
                && trans.EntryType == RetailLoyaltyRewardPointEntryType::Redeem;

        return trans.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsTransactionPaidByLoyalty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a transaction has a loyalty tender line.
    /// </summary>
    /// <param name="_transactionId">
    /// The transaction id.
    /// </param>
    /// <param name="_storeId">
    /// The store Id.
    /// </param>
    /// <param name="_terminalId">
    /// The terminal Id.
    /// </param>
    /// <param name="_channel">
    /// The channel recid.
    /// </param>
    /// <param name="_dataAreaId">
    /// The transaction data area id.
    /// </param>
    /// <returns>
    /// True, if the transaction has a loyalty tender line; otherwise, false.
    /// </returns>
    public static boolean IsTransactionPaidByLoyalty(RetailTransactionId _transactionId, RetailStoreId _storeId, RetailTerminalId _terminalId, RefRecId _channel, DataAreaId _dataAreaId)
    {
        RetailLoyaltyCardRewardPointTrans trans;

        select firstOnly RecId
            from trans
            where trans.LoyaltyTransactionType == RetailLoyaltyTransactionType::RetailTransaction
                && trans.loyaltyTransDataAreaId == _dataAreaId
                && trans.transactionId == _transactionId
                && trans.storeId == _storeId
                && trans.terminalId == _terminalId
                && trans.Channel == _channel
                && trans.EntryType == RetailLoyaltyRewardPointEntryType::Redeem;

        return trans.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>UpdateLoyaltyPaymentEntriesWithSalesId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the sales ID of the payment entries of the given transaction in <c>RetailLoyaltyCardRewardPointTrans</c> table.
    /// </summary>
    /// <param name="_originalTransactionId">
    /// The original Retail transaction ID.
    /// </param>
    /// <param name="_salesId">
    /// The new sales ID.
    /// </param>
    /// <param name="_ignoreTerminal">
    /// Whether to ignore terminal identifier or not. Default value is <c>false</c>.
    /// The sales order created from the aggregated retail transaction does not contain terminal id.  For optimal performance, avoid calling with this parameter TRUE.
    /// </param>
    /// <remarks>Use the method UpdateLoyaltyPaymentEntriesWithSalesIdByTransactionKey instead, which makes better use of table indexes for improved performance.  
    /// When the loyalty payment is updated to Sales Order (with sales id) the sales line lineNum is not provided thus some line details may be unavailable.</remarks>
    public static void UpdateLoyaltyPaymentEntriesWithSalesId(RetailTransactionId _originalTransactionId, SalesId _salesId, boolean _ignoreTerminal = false)
    {
        RetailLoyaltyCardRewardPointTrans trans;
        RetailSalesTable retailSalesTable = RetailSalesTable::find(_salesId);

        // Use the legacy implementation if the feature flag is DISABLED or called with Ignore Terminal.
        if (_ignoreTerminal)
        {
            // Call the legacy implementation
            ttsBegin;

            update_recordSet trans
            setting SalesId                 = _salesId,
                    LoyaltyTransactionType  = RetailLoyaltyTransactionType::SalesOrder
            where   trans.transactionId             == _originalTransactionId
                &&  trans.Channel                   == retailSalesTable.RetailChannel
                &&  trans.storeId                   == retailSalesTable.RetailStoreId
                &&  trans.loyaltyTransDataAreaId    == retailSalesTable.dataAreaId
                &&  trans.LoyaltyTransactionType    == RetailLoyaltyTransactionType::RetailTransaction
                &&  (_ignoreTerminal || trans.terminalId == retailSalesTable.RetailTerminalId)
                &&  (trans.EntryType == RetailLoyaltyRewardPointEntryType::Earn
                    || trans.EntryType == RetailLoyaltyRewardPointEntryType::Redeem
                    || trans.EntryType == RetailLoyaltyRewardPointEntryType::Refund
                    || (trans.EntryType == RetailLoyaltyRewardPointEntryType::ReturnEarned && RetailStatementFeatureControl::isLoyaltyPointsForSalesOrderInStatementEnabled()));

            ttsCommit;
        }
        else
        {
            // Redirect to the updated implemenation which makes better use of table indexes
            RetailLoyaltyCardRewardPointTrans::UpdateLoyaltyPaymentEntriesWithSalesIdByTransactionKey(
                retailSalesTable.RetailChannel,
                retailSalesTable.RetailStoreId,
                retailSalesTable.RetailTerminalId,
                _originalTransactionId,
                retailSalesTable.dataAreaId,
                _salesId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>UpdateLoyaltyPaymentEntriesWithSalesIdByTransactionKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the sales ID of the payment entries of the given transaction in <c>RetailLoyaltyCardRewardPointTrans</c> table using the full transaction identifier.
    /// </summary>
    /// <param name="_originalTransactionId">The original Retail transaction ID.</param>
    /// <param name="_channel">The channel of the original sales transaction.</param>
    /// <param name="_storeId">The store ID of the original sales transaction.</param>
    /// <param name="_terminalId">The terminal ID of the original sales transaction.</param>
    /// <param name="_originalTransactionId">The transaction ID of the original sales transaction.</param>
    /// <param name="_dataAreaId">The data area ID for the original sales transaction.</param>
    /// <param name="_salesId">The new sales ID.</param>
    /// <remarks>This method does not set SALESLINELINENUM when it populates the salesId and change the type to sales order, thus some line data may not be available.</remarks>
    public static void UpdateLoyaltyPaymentEntriesWithSalesIdByTransactionKey(
        RefRecId _channel,
        RetailStoreId _storeId,
        RetailTerminalId _terminalId,
        RetailTransactionId _originalTransactionId,
        DataAreaId _dataAreaId,
        SalesId _salesId)
    {
        RetailLoyaltyCardRewardPointTrans trans;

        ttsBegin;

        update_recordSet trans
        setting SalesId                 = _salesId,
                LoyaltyTransactionType  = RetailLoyaltyTransactionType::SalesOrder
        where   trans.Channel                   == _channel
            &&  trans.transactionId             == _originalTransactionId
            &&  trans.storeId                   == _storeId
            &&  trans.LoyaltyTransactionType    == RetailLoyaltyTransactionType::RetailTransaction
            &&  trans.loyaltyTransDataAreaId    == _dataAreaId
            &&  trans.terminalId                == _terminalId
            &&  (trans.EntryType == RetailLoyaltyRewardPointEntryType::Earn
                || trans.EntryType == RetailLoyaltyRewardPointEntryType::Redeem
                || trans.EntryType == RetailLoyaltyRewardPointEntryType::Refund
                || (trans.EntryType == RetailLoyaltyRewardPointEntryType::ReturnEarned && RetailStatementFeatureControl::isLoyaltyPointsForSalesOrderInStatementEnabled()));

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retailLoyaltyOtherActivityTypeName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get other activity type name.
    /// </summary>
    /// <returns>
    /// Return other activity type name.
    /// </returns>
    public display RetailLoyaltyOtherActivityTypeName retailLoyaltyOtherActivityTypeName()
    {
        RetailLoyaltyOtherActivityType retailLoyaltyOtherActivityType;

        select firstonly retailLoyaltyOtherActivityType
                where retailLoyaltyOtherActivityType.recId == this.LoyaltyOtherActivityTypeId;

        return retailLoyaltyOtherActivityType.LoyaltyOtherActivityTypeName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineItemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the ItemId - if available - based upon the current transaction or sales line and the type.
    /// </summary>
    /// <returns>The <c>ItemIdSmall</c>.</returns>
    public display ItemIdSmall lineItemId()
    {
        ItemIdSmall itemIdSmall;
        RetailTransactionSalesTrans retailTransactionSalesTrans;
        SalesLine salesLine;

        switch (this.LoyaltyTransactionType)
        {
            // Get item id for cash and carry transaction.
            case RetailLoyaltyTransactionType::RetailTransaction:
                    select firstOnly itemId
                        from retailTransactionSalesTrans
                        where retailTransactionSalesTrans.DataAreaId == this.loyaltyTransDataAreaId &&
                         retailTransactionSalesTrans.Channel == this.Channel &&
                         retailTransactionSalesTrans.store == this.storeId &&
                         retailTransactionSalesTrans.terminalId == this.terminalId &&
                         retailTransactionSalesTrans.transactionId  == this.transactionId &&
                        retailTransactionSalesTrans.lineNum == this.RetailTransactionSalesTransLineNum;

                itemIdSmall = retailTransactionSalesTrans.itemId;
                break;

            // Get item id for customer order.
            case RetailLoyaltyTransactionType::SalesOrder:
                // Normal processing for type: SalesOrder
                select firstOnly itemId
                            from salesLine
                            where salesLine.DataAreaId == this.loyaltyTransDataAreaId &&
                            salesLine.SalesId == this.SalesId &&
                            salesLine.lineNum == this.SalesLineLineNum;

                itemIdSmall = salesLine.itemId;

                if ((itemIdSmall == '') && 
                    (this.SalesLineLineNum == 0) &&
                    ((this.transactionId != '') && (this.RetailTransactionSalesTransLineNum != 0)))
                {  
                    // Fallback - when posting the required SalesLineLineNum may not be provided, in which case the normal query may not return a result to display; however,
                    // the existing cash and carry transaction data may:
                    select firstOnly itemId
                            from retailTransactionSalesTrans
                            where retailTransactionSalesTrans.DataAreaId == this.loyaltyTransDataAreaId &&
                                retailTransactionSalesTrans.Channel == this.Channel &&
                                retailTransactionSalesTrans.store == this.storeId &&
                                retailTransactionSalesTrans.terminalId == this.terminalId &&
                                retailTransactionSalesTrans.transactionId  == this.transactionId &&
                                retailTransactionSalesTrans.lineNum == this.RetailTransactionSalesTransLineNum;

                    itemIdSmall = retailTransactionSalesTrans.itemId;
                }

                break;

            case RetailLoyaltyTransactionType::LoyaltyAdjustment:
                break;
        }

        return itemIdSmall;
    }

]]></Source>
			</Method>
			<Method>
				<Name>SalesOrderHasLineLevelPointsRecorded</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a sales order has sales line level loyalty points recorded.
    /// </summary>
    /// <param name="_salesId">
    /// The sales id.
    /// </param>
    /// <param name="_dataAreaId">
    /// The order data area id.
    /// </param>
    /// <returns>
    /// True, if the sales order has sales line level loyalty points recorded.; otherwise, false.
    /// </returns>
    public static boolean SalesOrderHasLineLevelPointsRecorded(SalesId _salesId, DataAreaId _dataAreaId)
    {
        RetailLoyaltyCardRewardPointTrans trans;

        select firstOnly RecId
            from trans
            where trans.LoyaltyTransactionType == RetailLoyaltyTransactionType::SalesOrder
                && trans.loyaltyTransDataAreaId == _dataAreaId
                && trans.SalesId == _salesId
                && trans.SalesLineLineNum != 0;

        return trans.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>GetRefundedRewardPoints</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return the total loyalty points already refunded for this sales order line.
    /// </summary>
    /// <param name = "_salesId">
    /// The sales order Id.
    /// </param>
    /// <param name = "_dataAreaId">
    /// The order data area id.
    /// </param>
    /// <param name = "_salesLineNum">
    /// The sales line number.
    /// </param>
    /// <returns>
    /// Returns the sum of total points already refunded for this sales line. If sales line = 0 return the points refunded for header level charges. 
    /// </returns>
    public static real GetRefundedRewardPoints(SalesId _salesId, DataAreaId _dataAreaId, real _salesLineNum)
    {
        RetailLoyaltyCardRewardPointTrans rewardPointTrans;
   
        select sum(RewardPointAmountQty)
            from rewardPointTrans
            where rewardPointTrans.LoyaltyTransactionType == RetailLoyaltyTransactionType::SalesOrder
                && rewardPointTrans.loyaltyTransDataAreaId == _dataAreaId
                && rewardPointTrans.SalesId == _salesId
                && rewardPointTrans.SalesLineLineNum == _salesLineNum
                && rewardPointTrans.EntryType == RetailLoyaltyRewardPointEntryType::Refund;

        return rewardPointTrans.RewardPointAmountQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>SalesLineHasRewardPoints</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if salesline has reward point entry.
    /// </summary>
    /// <param name = "_salesId">
    /// The sales order Id.
    /// </param>
    /// <param name = "_dataAreaId">
    /// The order data area id.
    /// </param>
    /// <param name = "_salesLineNum">
    /// The sales line number.
    /// </param>
    /// <param name = "entryType">
    /// Reward Point Entry Type to check.
    /// </param>
    /// <returns>True if sales line has reward points entries, false otherwise.</returns>
    public static boolean SalesLineHasRewardPoints(SalesId _salesId , DataAreaId _dataAreaId, real _salesLineNum, RetailLoyaltyRewardPointEntryType entryType)
    {
        RetailLoyaltyCardRewardPointTrans rewardPointTrans;
        
        select firstonly RecId from rewardPointTrans
               where rewardPointTrans.loyaltyTransDataAreaId == _dataAreaId
               && rewardPointTrans.SalesId == _salesId
               &&  rewardPointTrans.SalesLineLineNum  == _salesLineNum
               &&  rewardPointTrans.EntryType == entryType;

        return rewardPointTrans.recid > 0;

    }

]]></Source>
			</Method>
			<Method>
				<Name>lastLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the max value of LoyaltyTransLineNum of transaction.
    /// </summary>
    /// <param name = "_retailChannel">Retail channel recid.</param>
    /// <param name = "_storeId">Store id.</param>
    /// <param name = "_terminalId">Register number.</param>
    /// <param name = "_loyaltyTransDataAreaId">Loyalty transaction's data area id.</param>
    /// <param name = "_salesId">Sales order number.</param>
    /// <param name = "_cardnumber">Loyalty card number.</param>
    /// <param name = "_adjustmentId">Loyalty adjustment id.</param>
    /// <param name = "_nonTransactionalActivityId">Loyalty non transaction id.</param>
    /// <param name = "_transactionId">Transaction number.</param>
    /// <returns>The value of LoyaltyTransLineNum.</returns>
    internal static LineNum lastLineNum(RefRecId _retailChannel,
                            RetailStoreId _storeId,
                            RetailTerminalId _terminalId,
                            DataAreaId _loyaltyTransDataAreaId,
                            SalesId _salesId,
                            RetailLoyaltyCardNumber _cardnumber,
                            RetailLoyaltyAdjustmentId _adjustmentId,
                            RetailLoyaltyNonTransactionalActivityId _nonTransactionalActivityId,
                            RetailTransactionId _transactionId)
    {
        RetailLoyaltyCardRewardPointTrans retailLoyaltyCardRewardPointTrans;

        select maxof(LoyaltyTransLineNum) from retailLoyaltyCardRewardPointTrans
            index hint TransactionLineIdx
            where retailLoyaltyCardRewardPointTrans.Channel == _retailChannel
            &&    retailLoyaltyCardRewardPointTrans.storeId == _storeId
            &&    retailLoyaltyCardRewardPointTrans.terminalId == _terminalId
            &&    retailLoyaltyCardRewardPointTrans.transactionId == _transactionId
            &&    retailLoyaltyCardRewardPointTrans.loyaltyTransDataAreaId == _loyaltyTransDataAreaId
            &&    retailLoyaltyCardRewardPointTrans.SalesId == _salesId
            &&    retailLoyaltyCardRewardPointTrans.AdjustmentId == _adjustmentId
            &&    retailLoyaltyCardRewardPointTrans.CardNumber == _cardnumber
            &&    retailLoyaltyCardRewardPointTrans.NonTransactionalActivityId == _nonTransactionalActivityId;

        return retailLoyaltyCardRewardPointTrans.LoyaltyTransLineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the record.
    /// </summary>
    public void insert()
    {
        // Get the last line number and increment it.
        if (!this.LoyaltyTransLineNum)
        {
            this.LoyaltyTransLineNum = RetailLoyaltyCardRewardPointTrans::lastLineNum(this.Channel,this.storeId,this.terminalId,this.loyaltyTransDataAreaId,this.SalesId,
                                                    this.CardNumber,this.AdjustmentId,this.NonTransactionalActivityId,this.transactionId) + 1;
        }

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@REX4160253</DeveloperDocumentation>
	<Label>@REX4160252</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>CardNumber</TitleField1>
	<TitleField2>transactionId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>CommerceCustomers</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Channel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>terminalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>transactionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailTransactionSalesTransLineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EntryType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS14437</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExpirationDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RewardPoint</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoyaltyTier</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Affiliation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StaffId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RewardPointAmountQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoyaltyTransLineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EntryType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CardNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Channel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>storeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>terminalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>transactionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustAccountDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>loyaltyTransDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EntryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EntryTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Remaining</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AdjustmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailTransactionSalesTransLineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesLineLineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AdjustmentId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLoyaltyAdjustmentId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Affiliation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CardNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLoyaltyCardNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Channel</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccountDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EntryDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLoyaltyRewardPointEntryDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>EntryTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLoyaltyRewardPointEntryTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EntryType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailLoyaltyRewardPointEntryType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ExpirationDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLoyaltyRewardPointExpirationDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LoyaltyTier</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LoyaltyTransactionType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
			<EnumType>RetailLoyaltyTransactionType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>loyaltyTransDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LoyaltyTransLineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReceiptId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetailReceiptId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Remaining</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLoyaltyRewardPointRemaining</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RewardPoint</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@REX4160083</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RewardPointAmountQty</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLoyaltyRewardPointAmountQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SalesIdBase</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StaffId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetailStaffId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>storeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStoreId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>terminalId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTerminalId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>transactionId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetailTransactionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RetailTransactionSalesTransLineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNumOptional</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesLineLineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNumOptional</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartDate</Name>
			<ExtendedDataType>RetailLoyaltyRewardPointStartDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CardTenderType</Name>
			<ExtendedDataType>RetailLoyaltyTenderType</ExtendedDataType>
			<EnumType>RetailLoyaltyTenderTypeBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NonTransactionalActivityId</Name>
			<ExtendedDataType>RetailLoyaltyNonTransactionalActivityId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LoyaltyOtherActivityTypeId</Name>
			<ExtendedDataType>RetailLoyaltyOtherActivityTypeRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MCRPaymRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>MCRCustPaymTableRecID</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AffiliationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Affiliation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CardRewardExpirationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CardNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RewardPoint</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ExpirationDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Remaining</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransactionLineIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>Channel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>storeId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>terminalId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transactionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>loyaltyTransDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LoyaltyTransLineNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AdjustmentId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CardNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>NonTransactionalActivityId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EntryDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EntryTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ChannelLoyaltyTransUpdateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Channel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transactionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LoyaltyTransactionType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>loyaltyTransDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>terminalId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EntryType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RetailLoyaltyCardRewardPointTransIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CardNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RewardPoint</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EntryDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EntryType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RewardPointAmountQty</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RetailLoyaltyCardRewardPointIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CardNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RewardPoint</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Remaining</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransactionIdSalesIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TransactionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesLineLineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RewardPointAffiliationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RewardPoint</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Affiliation</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RetailLoyaltyCardRewardPointStartDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CardNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RewardPoint</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>StartDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Remaining</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EntryType</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ExpirationDate</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransactionIdSalesTransLineNumIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>transactionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RetailTransactionSalesTransLineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SalesIdSalesLineLineNumIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesLineLineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RetailLoyaltyCardRewardPointRewardPointIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RewardPoint</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>StartDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EntryType</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ExpirationDate</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Remaining</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MCRPaymRecIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>MCRPaymRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustAccountDataAreaId</Name>
					<Field>CustAccountDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustAccount</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>CustAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailAffiliation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RetailAffiliation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Affiliation</Name>
					<Field>Affiliation</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailChannelTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailChannelTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Channel</Name>
					<Field>Channel</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailLoyaltyCard</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RetailLoyaltyCard</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CardNumber</Name>
					<Field>CardNumber</Field>
					<RelatedField>CardNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CardNumberIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailLoyaltyCardRewardPointAdjustment</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailLoyaltyCardRewardPointAdjustment</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AdjustmentId</Name>
					<Field>AdjustmentId</Field>
					<RelatedField>AdjustmentId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AdjustmentIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailLoyaltyRewardPoint</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RetailLoyaltyRewardPoint</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RewardPoint</Name>
					<Field>RewardPoint</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailLoyaltyTier</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailLoyaltyTier</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoyaltyTier</Name>
					<Field>LoyaltyTier</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailStoreTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailStoreTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>storeId</Name>
					<SourceEDT>RetailStoreId</SourceEDT>
					<Field>storeId</Field>
					<RelatedField>StoreNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StoreNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailTerminalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailTerminalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>terminalId</Name>
					<SourceEDT>RetailTerminalId</SourceEDT>
					<Field>terminalId</Field>
					<RelatedField>terminalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>terminalIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailTransactionLoyaltyRewardPointTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailTransactionLoyaltyRewardPointTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>loyaltyTransDataAreaId</Name>
					<Field>loyaltyTransDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>transactionId</Name>
					<SourceEDT>RetailTransactionId</SourceEDT>
					<Field>transactionId</Field>
					<RelatedField>transactionId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>terminalId</Name>
					<SourceEDT>RetailTerminalId</SourceEDT>
					<Field>terminalId</Field>
					<RelatedField>terminalId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>storeId</Name>
					<SourceEDT>RetailStoreId</SourceEDT>
					<Field>storeId</Field>
					<RelatedField>storeId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoyaltyTransLineNum</Name>
					<Field>LoyaltyTransLineNum</Field>
					<RelatedField>LineNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Channel</Name>
					<Field>Channel</Field>
					<RelatedField>Channel</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransactionLineIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailTransactionTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailTransactionTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>loyaltyTransDataAreaId</Name>
					<Field>loyaltyTransDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Channel</Name>
					<Field>Channel</Field>
					<RelatedField>Channel</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>transactionId</Name>
					<SourceEDT>RetailTransactionId</SourceEDT>
					<Field>transactionId</Field>
					<RelatedField>transactionId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>terminalId</Name>
					<SourceEDT>RetailTerminalId</SourceEDT>
					<Field>terminalId</Field>
					<RelatedField>terminal</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>storeId</Name>
					<SourceEDT>RetailStoreId</SourceEDT>
					<Field>storeId</Field>
					<RelatedField>store</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>transactionIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>loyaltyTransDataAreaId</Name>
					<Field>loyaltyTransDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesId</Name>
					<SourceEDT>SalesIdBase</SourceEDT>
					<Field>SalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SalesIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailTransactionSalesTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailTransactionSalesTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>loyaltyTransDataAreaId</Name>
					<Field>loyaltyTransDataAreaId</Field>
					<RelatedField>DataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Channel</Name>
					<Field>Channel</Field>
					<RelatedField>Channel</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>storeId</Name>
					<Field>storeId</Field>
					<RelatedField>store</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>terminalId</Name>
					<Field>terminalId</Field>
					<RelatedField>terminalId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>transactionId</Name>
					<Field>transactionId</Field>
					<RelatedField>transactionId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailTransactionSalesTransLineNum</Name>
					<Field>RetailTransactionSalesTransLineNum</Field>
					<RelatedField>lineNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>loyaltyTransDataAreaId</Name>
					<Field>loyaltyTransDataAreaId</Field>
					<RelatedField>DataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesId</Name>
					<Field>SalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesLineLineNum</Name>
					<Field>SalesLineLineNum</Field>
					<RelatedField>LineNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailLoyaltyOtherActivityType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailLoyaltyOtherActivityType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoyaltyOtherActivityTypeId</Name>
					<Field>LoyaltyOtherActivityTypeId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>MCRCustPaymTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MCRCustPaymTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MCRPaymRecId</Name>
					<SourceEDT>MCRCust</SourceEDT>
					<Field>MCRPaymRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>