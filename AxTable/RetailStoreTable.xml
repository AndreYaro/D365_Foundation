<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailStoreTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailStoreTable extends RetailChannelTable
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addressState_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the address state of the fiscal establishment related to the store.
    /// </summary>
    /// <returns>
    /// The address state.
    /// </returns>
    /// <remarks>
    /// This method uses the fiscal establishment's default postal address.
    /// </remarks>
    display LogisticsAddressStateId addressState_BR()
    {
        return this.fiscalEstablishment_BR().postalAddress().State;
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>CompanyInfo</c> record associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>CompanyInfo</c> record.
    /// </returns>
    public CompanyInfo companyInfo()
    {
        return CompanyInfo::findDataArea(this.company());
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies a dimension set that can be applied to the <c>defaultDimension</c> field.
    /// </summary>
    /// <param name="_defaultDimension">
    /// A dimension set that can be applied to the <c>defaultDimension</c> field.
    /// </param>
    /// <param name="_dimensionCopy">
    /// A <c>dimensionCopy</c> object that was created by using the current buffer; optional.
    /// </param>
    /// <returns>
    /// A dimension set that can be applied to the <c>defaultDimension</c> field of the <c>SalesLine</c>
    /// table.
    /// </returns>
    /// <remarks>
    /// This method makes sure that potential linked dimensions are not overwritten.
    /// </remarks>

    public DimensionDefault copyDimension(
        DimensionDefault _defaultDimension,
        DimensionCopy    _dimensionCopy = DimensionCopy::newFromTable(this, this.companyInfo().RecId)
        )
    {
        return _dimensionCopy.copy(_defaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyLocationFromWarehouseLocation_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copy the address from the related fiscal establishment
    /// </summary>
    public void copyLocationFromWarehouseLocation_BR()
    {
        DirPartyLocation        dirPartyLocation;
        InventLocation          inventLocation;
        OMOperatingUnit         OMOperatingUnit;
        RecId                   location;
        container               roleIds;

        OMOperatingUnit = OMOperatingUnit::find(this.OMOperatingUnitID, OMOperatingUnitType::RetailChannel);
        inventLocation  = InventLocation::find(this.inventLocation);
        location        = InventSite::find(inventLocation.InventSiteId).fiscalEstablishment().postalAddress().Location;

        delete_from dirPartyLocation
            where dirPartyLocation.Party == OMOperatingUnit.RecId;

        dirPartyLocation.Party              = OMOperatingUnit.RecId;
        dirPartyLocation.Location           = location;
        dirPartyLocation.IsPostalAddress    = NoYes::Yes;
        dirPartyLocation.IsPrimary          = NoYes::Yes;

        roleIds = conPeek(DirPartyLocation::findRec(InventSite::find(inventLocation.InventSiteId).fiscalEstablishment().DirPartyLocation).locationRoles(), 1);

        if (!conFind(roleIds, LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery)))
        {
            roleIds += LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery).RecId;
        }

        dirPartyLocation.addEntityLocation(roleIds);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayFormMenuFunction</Name>
				<Source><![CDATA[
    public MenuFunction displayFormMenuFunction()
    {
        return new MenuFunction(menuitemDisplayStr(RetailStoreTable), MenuItemType::Display);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalEstablishment_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>FiscalEstablishment_BR</c> associated with the store.
    /// </summary>
    /// <returns>
    /// A record in the <c>FiscalEstablishment_BR</c> table; otherwise, an empty record.
    /// </returns>
    public FiscalEstablishment_BR fiscalEstablishment_BR()
    {
        InventLocation  inventLocation  = RetailStoreTable::findInventLocation(this.RecId);
        InventSite      inventSite      = InventSite::find(inventLocation.InventSiteId);

        return inventSite.fiscalEstablishment();
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasUnpostedStatement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check whether the store has unposted statement.
    /// </summary>
    /// <returns>
    /// true if the store has an unposted statement; false otherwise.
    /// </returns>
    private boolean hasUnpostedStatement()
    {
        return RetailStatementTable::existUnposted(this.StoreNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the value against a few fields.
    /// </summary>
    public void initValue()
    {
        super();
        this.MaximumTextLengthOnReceipt = 39;
        this.statementMethod = RetailStaffTerminalTotal::Shift;
        this.closingMethod = RetailClosingMethodType::PosBatch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataAreaFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>DataArea</c> fields based on the <c>inventLocationDataAreaId</c> field.
    /// </summary>
    public void setDataAreaFields()
    {
        super();
        this.TaxGroupDataAreaId = getCompany(tableNum(TaxGroupHeading), this.inventLocationDataAreaId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record in <c>RetailStoreTable</c> table and sets the store number if not present.
    /// </summary>
    /// <param name="_sync">
    /// method parameter to support base class method which has been overridden
    /// </param>
    /// <remarks>
    /// If replication of the record is allowed for the table, action is inserted into the <c>RetailConnPreactionTable</c> table.
    /// </remarks>
    public void insert(boolean _sync = true)
    {
        RetailStoreTable createdStore;

        ttsbegin;

        if (this.StoreNumber == "")
        {
            this.StoreNumber = NumberSeq::newGetNum(RetailParameters::numRefStoreId()).num();
        }

        super();

        // After calling super() method, the store will be inserted into the RetailChannelTable
        // in this transaction. If the user doesn't have the permission to create a new store,
        // such as XDS is applied, the user cannot query the created store, and all the following
        // operations will fail. Therefore, we add a check here.
        createdStore = RetailStoreTable::findRecId(this.RecId);
        if (createdStore.RecId != this.RecId)
        {
            throw error("@Retail:RetailStoreCreationFailureError");
            return;
        }

        // Publish the current channel implicit and populates publishing data in the specified table.
        RetailPubRetailStoreTable::publishChannel(this.RecId);

        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            this.copyLocationFromWarehouseLocation_BR();
        }
        // </GBR>

        ttscommit;
        
        DimensionDefaultFacade::copyDimensionValueToDefaultDimensionField(this, fieldNum(RetailStoreTable, StoreNumber), this, fieldNum(RetailStoreTable, DefaultDimension));
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a dimension attribute value set that contains the combination of the provided input parameters.
    /// </summary>
    /// <param name="_primaryDefaultDimension">
    /// The primary default dimension that is used to merge.
    /// </param>
    /// <param name="_secondaryDefaultDimension">
    /// The secondary default dimension that is used to merge.
    /// </param>
    /// <param name="_dimensionMerge">
    /// An instance of <c>DimensionMerge</c> class.
    /// </param>
    /// <returns>
    /// A dimension attribute value set that contains the combination of the provided input parameters.
    /// </returns>
    public DimensionDefault mergeDimension(
        DimensionDefault _primaryDefaultDimension,
        DimensionDefault _secondaryDefaultDimension = 0,
        DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this, this.companyInfo().RecId))
    {
        return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets the field values.
    /// </summary>
    /// <param name="_fieldId">
    /// Field value that is modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RetailChannelTable, InventLocationDataAreaId):

                this.InventLocationIdForCustomerOrder = '';
                this.taxGroup = '';

                this.TaxGroupDataAreaId             = getCompany(tableNum(TaxGroupHeading), this.inventLocationDataAreaId);
                break;
            // <GBR>
            case fieldNum(RetailChannelTable, InventLocation):
                if (BrazilParameters::isEnabled())
                {
                    if (this.RecId)
                    {
                        this.copyLocationFromWarehouseLocation_BR();
                    }
                }
                break;
            // </GBR>
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>retailStoreTitleFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the store and operating unit details.
    /// </summary>
    /// <returns>
    /// The store number and operating unit number.
    /// </returns>
    display TitleFields retailStoreTitleFields()
    {
        OMOperatingUnit omOperatingUnit;

        if (this.RecId == 0)
        {
            return "@RET5915";
        }
        else
        {
            select Name from omOperatingUnit where omOperatingUnit.RecId == this.omOperatingUnitID;
            return strFmt("@RET5916", this.StoreNumber, omOperatingUnit.Name);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfDevices</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of devices for current store.
    /// </summary>
    /// <returns>
    /// Number of devices
    /// </returns>
    display int numberOfDevices()
    {
        RetailDevice retailDevices;
        RetailTerminalTable retailTerminalTable;
        select count(RecId) from retailDevices join retailTerminalTable where retailDevices.Terminal == retailTerminalTable.terminalId && retailTerminalTable.StoreRecId == this.RecId;

        return int642int(retailDevices.RecId); // return device count for current store
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfRegisters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of registers for the current store.
    /// </summary>
    /// <returns>
    /// The number of registers.
    /// </returns>
    display int numberOfRegisters()
    {
        RetailTerminalTable retailTerminalTable;

        select count(RecId) from retailTerminalTable where retailTerminalTable.StoreRecId == this.RecId;

        return int642int(retailTerminalTable.RecId); // Return the count
    }

]]></Source>
			</Method>
			<Method>
				<Name>roundingAccountName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of ledger account.
    /// </summary>
    /// <returns>
    /// The main account name.
    /// </returns>
    display Name roundingAccountName()
    {
        return MainAccount::findByLedgerDimension(this.RoundingAccountLedgerDimension).localizedName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>roundingTaxAccountName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of tax account.
    /// </summary>
    /// <returns>
    /// The main account name.
    /// </returns>
    display Name roundingTaxAccountName()
    {
        return MainAccount::findByMainAccountId(this.RoundingTaxAccount).localizedName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of operating unit.
    /// </summary>
    /// <returns>
    /// The operating unit name.
    /// </returns>
    display DirPartyName unitName()
    {
        return RetailStoreTable::findOperatingUnit(this.RecId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the record in <c>RetailStoreTable</c> table.
    /// </summary>
    /// <param name="_sync">
    /// method parameter to support base class method which has been overridden
    /// </param>
    public void update(boolean _sync = true)
    {
        RetailStoreLocatorGroupMember retailStoreLocatorGroupMember;
        InventLocationId origInventLocationId = this.orig().InventLocation;

        ttsbegin;

        super(_sync);

        if (this.RecId && origInventLocationId != this.inventLocation)
        {
            update_recordset retailStoreLocatorGroupMember
                setting InventLocationId = this.inventLocation
                where retailStoreLocatorGroupMember.Store == this.RecId
                && retailStoreLocatorGroupMember.InventLocationDataAreaId == curExt();
        }

        // Publish the current channel implicit and populates publishing data in the specified table.
        RetailPubRetailStoreTable::publishChannel(this.RecId);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        RetailTransactionTable retailTransactionTable;
        RetailPosBatchTable retailPosBatchTable;
        RetailStatementJour retailStatementJour;
        RetailTerminalTable retailTerminalTable;

        boolean ret;

        ret = super();

        if (ret)
        {
            // check if the store is referenced in RetailTransactionTable
            select crosscompany RecId from retailTransactionTable
                where retailTransactionTable.store == this.StoreNumber
                   && retailTransactionTable.dataAreaId == this.inventLocationDataAreaId;

            if (retailTransactionTable)
            {
                warning(strFmt("@SYS128564", tablePName(RetailStoreTable), tablePName(RetailTransactionTable)));
                ret = false;
            }
        }

        if (ret)
        {
            // check if the store is referenced in RetailPosBatchTable
            select crosscompany RecId from retailPosBatchTable
                where retailPosBatchTable.StoreId == this.StoreNumber
                   && retailPosBatchTable.dataAreaId == this.inventLocationDataAreaId;

            if (retailPosBatchTable)
            {
                warning(strFmt("@SYS128564", tablePName(RetailStoreTable), tablePName(RetailPosBatchTable)));
                ret = false;
            }
        }

        if (ret)
        {
            // check if the store is referenced in RetailStatementJour
            select crosscompany RecId from retailStatementJour
                where retailStatementJour.storeId == this.StoreNumber
                   && retailStatementJour.dataAreaId == this.inventLocationDataAreaId;

            if (retailStatementJour)
            {
                warning(strFmt("@SYS128564", tablePName(RetailStoreTable), tablePName(RetailStatementJour)));
                ret = false;
            }
        }

        if (ret)
        {
            // check if the store is referenced in RetailTerminalTable
            select RecId from retailTerminalTable
                where retailTerminalTable.StoreRecId == this.RecId
                   || retailTerminalTable.EFTStoreRecId == this.RecId;

            if (retailTerminalTable)
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Perform validations on a given field.
    /// </summary>
    /// <param name = "_fieldIdToCheck">Field to validate.</param>
    /// <returns>true if validation successful; else false.</returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        switch (_fieldIdToCheck)
        {
            case fieldNum(RetailStoreTable, TaxGroup):
                changecompany(this.TaxGroupDataAreaId)
                {
                    ret = super(_fieldIdToCheck);
                }
                break;

            case fieldNum(RetailStoreTable, InventLocationIdForCustomerOrder):
                changecompany(this.inventLocationDataAreaId)
                {
                    ret = super(_fieldIdToCheck);
                }
                break;

            case fieldNum(RetailStoreTable, functionalityProfile):
                ret = super(_fieldIdToCheck) && this.validateFunctionalityProfile();
                break;

            // <GEERU>
            case fieldNum(RetailStoreTable, CashOffice_RU):
                ret = true;

                if (this.CashOffice_RU != '')
                {
                    changeCompany(this.inventLocationDataAreaId)
                    {
                        ret = RCashTable::checkExist(this.CashOffice_RU);
                    }
                }

                if (ret && this.hasUnpostedStatement())
                {
                    ret = checkFailed("@SYS4007526");
                }

                // We do not want the standard validation to happen.
                return ret;
            // </GEERU>
            
            default:
                ret = super(_fieldIdToCheck);
        }

        switch (fieldExt2Id(_fieldIdToCheck))
        {
            case fieldNum(RetailStoreTable, RoundingAccountLedgerDimension):
                ret = this.validateRoundingAccount();
                break;
            case fieldNum(RetailStoreTable, InventLocationDataAreaId):
                ret = (CompanyInfo::findDataArea(this.inventLocationDataAreaId).RecId != 0);
                break;
            case fieldNum(RetailStoreTable, maximumPostingDifference):
            case fieldNum(RetailStoreTable, maxRoundingAmount):
            case fieldNum(RetailStoreTable, maxShiftDifferenceAmount):
            case fieldNum(RetailStoreTable, maxTransactionDifferenceAmount):
                ret = this.(_fieldIdToCheck) >= 0;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateName</Name>
				<Source><![CDATA[
    [SysObsolete('Unused method removed in AX 2012 R3', true, 31\01\2016)]
    boolean validateName()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRoundingAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks the type of main account.
    /// </summary>
    /// <returns>
    /// A boolean value true if the account is transaction account; otherwise false.
    /// </returns>
    boolean validateRoundingAccount()
    {
        return MainAccount::checkTransactionAccount(MainAccount::findByLedgerDimension(this.RoundingAccountLedgerDimension).LedgerChartOfAccounts);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFunctionalityProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks functionality profile is valid for the store.
    /// </summary>
    /// <returns>
    /// A boolean value true if the functionality profile is valid for store; otherwise false.
    /// </returns>
    private boolean validateFunctionalityProfile()
    {
        // If functionality profile selected requires declare amounts then validate store is having Paymentmethod with Pay cash operation.
        RetailStoreTenderTypeTable retailStoreTenderTypeTable;
        select firstOnly retailStoreTenderTypeTable
            where retailStoreTenderTypeTable.channel == this.RecId
            && (retailStoreTenderTypeTable.posOperation == RetailPosOperationHelper::payCashOperation()
                || retailStoreTenderTypeTable.posOperation == RetailPosOperationHelper::payCashQuickOperation());
        
        boolean requiredStartAmount = RetailFunctionalityProfile::find(this.functionalityProfile).RequireAmountDeclaration;
    
        if (!retailStoreTenderTypeTable.RecId && requiredStartAmount)
        {
            return checkFailed("@Retail:StoreDoesNotHaveCashOperationButFunctionalityProfileRequiresOne");
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePosTaxConfigurations_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the POS tax configurations are correct for Brasil.
    /// </summary>
    private void validatePosTaxConfigurations_BR()
    {
        if (BrazilParameters::isEnabled())
        {
            if(this.UseCustomerBasedTax)
            {
                warning(strFmt("@Brazil_Retail:MarkingField", fieldPName(RetailStoreTable, UseCustomerBasedTax)));
            }

            if(this.UseDestinationBasedTax)
            {
                warning(strFmt("@Brazil_Retail:MarkingField", fieldPName(RetailStoreTable, UseDestinationBasedTax)));
            }

            if(!this.PriceIncludesSalesTax)
            {
                warning(strFmt("@Brazil_Retail:UnmarkingField", fieldPName(RetailChannelTable, PriceIncludesSalesTax)));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateStatementMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the statement method for the store and updates the POS terminals.
    /// </summary>
    public void validateStatementMethod()
    {
        RetailTerminalTable    terminal;
        ttsbegin;

        if (this.StatementMethod != this.orig().StatementMethod)
        {
            update_recordset terminal
            setting
                StatementMethod = this.StatementMethod
            where
                terminal.StoreRecId == this.RecId
                && terminal.StatementMethod == this.orig().StatementMethod;
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFinancialDimensions</Name>
				<Source><![CDATA[
    private void validateFinancialDimensions()
    {
        RetailStatementTable   statement;
        int64                  counter = 0;

        select count(RecId)
        from statement
        where statement.StoreId == this.StoreNumber;

        counter = statement.RecId;

        if (counter > 0 && this.DefaultDimension != this.orig().DefaultDimension && RetailEodStatementFeatureHelper::isNewEodEnabled())
        {
            info(strFmt("@Ret_HF_241329:RetailNeedToRecalculateFinancialDimensions",this.StoreNumber));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        RetailTerminalTable    terminalTable;
        boolean ret;

        ret = super();

        if (this.RecId != this.orig().RecId)
        {
            terminalTable = RetailTerminalTable::find(this.StoreNumber);

            if (terminalTable)
                ret = checkFailed(strFmt("@RET4050",terminalTable.TerminalId)
                + "@RET4051");
        }
        else
        {
            if (this.OpenFrom > this.OpenTo)
            {
                ret = checkFailed("@RET4052");
            }
        }

        /* Validate there is no leading or trailing spaces in store number */
        System.String storeNumber = this.StoreNumber;
        if (this.orig().StoreNumber != this.StoreNumber &&
            storeNumber.Trim() != storeNumber)
        {
            ret = checkFailed(strFmt('@Retail:RetailStoreTableStoreNumberLeadingTrailingSpaceError'));
        }
        
        /* Validate statement method and closing method are set to Shifts if either start amount calculation
        is set to 'Last' or Bank drop calculation is set to 'Last'*/
        if ((this.startAmountCalculation == RetailStartAmountCalculationBase::LastStartAmount ||
            this.bankDropCalculation == RetailBankDropCalculationBase::LastBankDrop) &&
            (this.statementMethod != RetailStaffTerminalTotal::Shift ||
            this.closingMethod != RetailClosingMethodType::PosBatch)
            )
        {
            ret = checkFailed("@Retail:ShiftStatementAndClosingMethodRequiredForStore");
        }
        else if (RetailEodTrickleFeedFeatureExposure::isEnabled() && this.closingMethod != RetailClosingMethodType::PosBatch)
        {
            ret = checkFailed("@Retail:RetailShiftClosingMethodRequiredForTrickleFeed");
        }
        else
        {
            /* Set the statement method in terminal table */
            this.validateStatementMethod();
        }

        this.validateFinancialDimensions();

        this.validatePosTaxConfigurations_BR();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WarehousePrimaryAddress_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the default address of the retail warehouse.
    /// </summary>
    /// <returns>
    /// Returns the default address of the retail warehouse.
    /// </returns>
    display LogisticsAddressing WarehousePrimaryAddress_IN()
    {
        LogisticsPostalAddress      logisticsPostalAddress;

        if (this.inventLocationDataAreaId)
        {
            changeCompany(this.inventLocationDataAreaId)
            {
                logisticsPostalAddress      = LogisticsPostalAddress::findByLocation(
                    InventLocation::getDefaultLogisticsLocation_IN(this.inventLocation, LogisticsLocationRoleType::Delivery).RecId);
            }
        }

        return logisticsPostalAddress.Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>WarehousePrimaryLocation_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the default location of the retail warehouse.
    /// </summary>
    /// <returns>
    /// Returns the default location of the retail warehouse.
    /// </returns>
    display Description WarehousePrimaryLocation_IN()
    {
        Description warehousePrimaryLocation;
        if (this.inventLocationDataAreaId)
        {
            changeCompany(this.inventLocationDataAreaId)
            {
                warehousePrimaryLocation = InventLocation::getDefaultLogisticsLocation_IN(this.inventLocation, LogisticsLocationRoleType::Delivery).Description;
            }
        }
        return warehousePrimaryLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>RetailStoreTable</c> table exists.
    /// </summary>
    /// <param name="_storeId">
    /// The ID number of the store.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false
    /// </returns>
    public static boolean exist(RetailStoreId _storeId)
    {
        return _storeId && (select firstonly RecId from retailStoreTable
                                where retailStoreTable.StoreNumber == _storeId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillInventDimWithStoreDefaults</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method copies default inventory dimensions that are defined for the retail store
    /// to the specified inventory dimensions record.
    /// </summary>
    /// <param name="_itemId">
    /// ID of the item that the inventory dimensions relate to.
    /// </param>
    /// <param name="_inventDim">
    /// The inventory dimensions record that needs to be populated with the default inventory dimensions that are defined for the retail store.
    /// </param>
    /// <param name="_inventDirection">
    /// The inventory direction of Issue or Receipt.
    /// </param>
    /// <remarks>
    /// The method will use the current InventLocationId to determine the warehouse to copy defaults from.
    /// </remarks>
    public static void fillInventDimWithStoreDefaults(ItemId _itemId, InventDim _inventDim, InventDirection _inventDirection = InventDirection::Issue)
    {
        InventLocation      inventLocation;
        InventDimGroupSetup inventDimGroupSetup;

        inventLocation = InventLocation::find(_inventDim.InventLocationId);
        inventDimGroupSetup = InventDimGroupSetup::newItemId(_itemId);

        if (inventDimGroupSetup.isDimensionActive(fieldNum(InventDim, WMSLocationId)))
        {
            _inventDim.WMSLocationId = _inventDirection == InventDirection::Receipt ?
                                       inventLocation.RetailWMSLocationIdDefaultReturn : inventLocation.RBODefaultWMSLocationId;
        }

        if (inventDimGroupSetup.isDimensionActive(fieldNum(InventDim, WMSPalletId)))
        {
            _inventDim.WMSPalletId = inventLocation.RBODefaultWMSPalletId;
        }

        if (inventDimGroupSetup.isDimensionActive(fieldNum(InventDim, InventStatusId)))
        {
            _inventDim.InventStatusId = WHSInvent::getDefaultStatus(_inventDim);
        }

        // <GEERU>
        if (inventDimGroupSetup.isDimensionActive(fieldNum(InventDim, InventProfileId_RU)))
        {
            _inventDim.InventProfileId_RU = inventLocation.RBODefaultInventProfileId_RU;
        }
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record using the <c>storeId</c> parameter.
    /// </summary>
    /// <param name="_storeId">
    /// The store ID number.
    /// </param>
    /// <param name="_forUpdate">
    /// true if record is selected for update; otherwise, false.
    /// </param>
    /// <returns>
    /// The record that was found.
    /// </returns>
    public static RetailStoreTable find(RetailStoreId _storeId, boolean _forUpdate = false)
    {
        RetailStoreTable   storeTable;

        if (_storeId)
        {
            storeTable.selectForUpdate(_forUpdate);

            select firstOnly storeTable
                where storeTable.StoreNumber == _storeId;
        }

        return storeTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInventLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>InventLocation</c> table that is based on the <c>InventLocationId</c>
    /// field in the retail store.
    /// </summary>
    /// <param name="_storeId">
    /// The Id number of retail store.
    /// </param>
    /// <returns>
    /// A record in the <c>InventLocation</c> table; otherwise, an empty record.
    /// </returns>
    public static InventLocation findInventLocation(RecId _storeId)
    {
        InventLocation      inventLocation;
        RetailStoreTable    storeTable;

        select firstOnly crossCompany inventLocation
            index InventLocationIdx
            exists join RecId, InventLocation from storeTable
            where storeTable.RecId == _storeId &&
                  storeTable.InventLocation == inventLocation.InventLocationId &&
                  storeTable.inventLocationDataAreaId == inventLocation.dataAreaId;

        return inventLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOperatingUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>OMOperatingUnit</c> table.
    /// </summary>
    /// <param name="_storeId">
    /// The ID value of the store.
    /// </param>
    /// <returns>
    /// A record in the <c>OMOperatingUnit</c> table.
    /// </returns>
    public static OMOperatingUnit findOperatingUnit(RecId _storeId)
    {
        RetailChannelTable channelTable;

        select RecId, OmOperatingUnitID from channelTable
            where channelTable.RecId == _storeId;

        return OMOperatingUnit::find(channelTable.OMOperatingUnitID, OMOperatingUnitType::RetailChannel);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record that has a specified <c>RecId</c> value.
    /// </summary>
    /// <param name="_storeRecId">
    /// The <c>RedId</c> value of the store.
    /// </param>
    /// <param name="_forUpdate">
    /// true if the record is selected for update; otherwise, false
    /// </param>
    /// <returns>
    /// The record that is found.
    /// </returns>
    public static RetailStoreTable findRecId(RecId _storeRecId, boolean _forUpdate = false)
    {
        RetailStoreTable   storeTable;

        if (_storeRecId)
        {
            storeTable.selectForUpdate(_forUpdate);

            select firstOnly storeTable
                where storeTable.RecId == _storeRecId;
        }

        return storeTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCashOffice_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the cash office account set up for the current retail store.
    /// </summary>
    /// <param name="_storeId">
    /// Retail store number identifier.
    /// </param>
    /// <returns>
    /// Cash office account.
    /// </returns>
    public static RCashAccount getCashOffice_RU(RetailStoreId _storeId)
    {
        return (select firstOnly CashOffice_RU from RetailStoreTable
                    where RetailStoreTable.StoreNumber == _storeId).CashOffice_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFirstStoreIdByCashOffice_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Looks up the first store number by the given cash office account.
    /// </summary>
    /// <param name="_cashOffice">Cash account.</param>
    /// <returns>
    /// Retail store number.
    /// </returns>
    public static RetailStoreId getFirstStoreIdByCashOffice_RU(RCashAccount _cashOffice)
    {
        if (_cashOffice == '')
        {
            return '';
        }

        return (select firstonly StoreNumber from RetailStoreTable where RetailStoreTable.CashOffice_RU == _cashOffice).StoreNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number sequence area.
    /// </summary>
    /// <returns>
    /// Area that the current application object is attached to.
    /// </returns>
    public static NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::RBOStore;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@RET4053";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFirstStoreIdByInventLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Looks up the first store number by the given invent location id.
    /// </summary>
    /// <param name = "_inventLocationId">Invent location Id.</param>
    /// <returns>Retail store number.</returns>
    public static RetailStoreId getFirstStoreIdByInventLocation(InventLocationId  _inventLocationId)
    {
        RetailStoreId       retailStoreNumber;
        RetailStoreTable    retailStoreTable;

        if (_inventLocationId)
        {
            // Today our system supports only one warehouse per store.
            select firstonly StoreNumber from retailStoreTable
                where retailStoreTable.InventLocationIdForCustomerOrder == _inventLocationId
                   && retailStoreTable.inventLocationDataAreaId == curExt();

            if (retailStoreTable)
            {
                retailStoreNumber = retailStoreTable.StoreNumber;
            }
        }

        return retailStoreNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFirstStoreIdByShippingLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Looks up the first store number by the given Shipping invent location id.
    /// </summary>
    /// <param name = "_inventLocationId">Invent location Id.</param>
    /// <returns>Retail store number.</returns>
    public static RetailStoreId getFirstStoreIdByShippingLocation(InventLocationId  _inventLocationId)
    {
        RetailStoreId       retailStoreNumber;
        RetailStoreTable    retailStoreTable;

        if (_inventLocationId)
        {
            // Today our system supports only one warehouse per store.
            select firstonly StoreNumber from retailStoreTable
                where retailStoreTable.InventLocationIdForCustomerOrder == _inventLocationId
                   && retailStoreTable.inventLocationDataAreaId == curExt();

            if (retailStoreTable)
            {
                retailStoreNumber = retailStoreTable.StoreNumber;
            }
        }

        return retailStoreNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFirstStoreIdByPickupLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Looks up the first store number by the given Pickup invent location id.
    /// </summary>
    /// <param name = "_inventLocationId">Invent location Id.</param>
    /// <returns>Retail store number.</returns>
    public static RetailStoreId getFirstStoreIdByPickupLocation(InventLocationId  _inventLocationId)
    {
        RetailStoreId       retailStoreNumber;
        RetailStoreTable    retailStoreTable;

        if (_inventLocationId)
        {
            // Today our system supports only one warehouse per store.
            select firstonly StoreNumber from retailStoreTable
                where retailStoreTable.inventLocation == _inventLocationId
                   && retailStoreTable.inventLocationDataAreaId == curExt();

            if (retailStoreTable)
            {
                retailStoreNumber = retailStoreTable.StoreNumber;
            }
        }

        return retailStoreNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        // Check to see if the associated dimension attribute value has been used
        // in a way that would prevent deletion.
        if (!DimensionValidation::canDeleteEntityValue(this))
        {
            throw error(strFmt("@SYS134392", this.StoreNumber));
        }

        ttsbegin;

        // Update the associated dimension attribute value.
        DimensionAttributeValue::updateForEntityValueDelete(this);

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    public void renamePrimaryKey()
    {
        DimensionValueRenameV2 rename = DimensionValueRenameV2::construct(this, this.orig());
        rename.syncRenamedValuePreSuper();

        super();

        rename.syncRenamedValuePostSuper();
    }

]]></Source>
			</Method>
			<Method>
				<Name>DimensionAttributeDelegates_getTablesToAddCopiedValuesTo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a list of tables and fields to update when copying the values to default dimensions on existing values.
    /// </summary>
    /// <param name = "_tableSet">A <c>Set</c> of <c>DimensionCopyValuesDataContract</c> values.</param>
    [SubscribesTo(classStr(DimensionAttributeDelegates), delegateStr(DimensionAttributeDelegates, getTablesToAddCopiedValuesTo))]
    public static void DimensionAttributeDelegates_getTablesToAddCopiedValuesTo(Set _tableSet)
    {
        DimensionCopyValueDataContract contract = DimensionCopyValueDataContract::construct(tableNum(RetailStoreTable), fieldNum(RetailStoreTable, DefaultDimension));
        contract.addKeyFieldDimensionPair(tableNum(RetailStoreTable), fieldNum(RetailStoreTable, StoreNumber));
        _tableSet.add(contract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onSkipRecordTemplateValuesForDerivedTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Allow templates for Retail stores.
    /// </summary>
    /// <param name = "_formRunContext">The form context of the derived table.</param>
    /// <param name = "_derivedTableId">Tables used in the template.</param>
    /// <param name = "_acceptTemplateValuesForDerivedTable">Whether to accept templates for the table.</param>
    [SubscribesTo(classStr(SysRecordTemplate), delegateStr(SysRecordTemplate, onSkipRecordTemplateValuesForDerivedTable))]
    static public void onSkipRecordTemplateValuesForDerivedTable(xFormRun _formRunContext, TableId _derivedTableId, EventHandlerAcceptResult _acceptTemplateValuesForDerivedTable)
    {
        if (_formRunContext && _formRunContext.form() && _formRunContext.form().name() == formStr(RetailStoreTable)
            && _derivedTableId == tableNum(RetailStoreTable))
        {
            _acceptTemplateValuesForDerivedTable.accept();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>RetailOfflineTerminalDashboardJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Provides functionality to go to main table.
    /// </summary>
    /// <param name="_retailStoreId">
    ///    The Store Id of the <c>RetailStoreTable</c> record.
    /// </param>
    /// <param name="_companyId">
    ///     The company account identifier; optional.
    /// </param>
    /// <exception cref="Exception::Error">
    ///     The company does not exist.
    /// </exception>
    public static void RetailOfflineTerminalDashboardJumpRef(RetailStoreId _retailStoreId, CompanyId _companyId = curext())
    {
        CompanyId companyId;

        if (_companyId)
        {
            companyId = _companyId;
        }
        else
        {
            companyId = curext();
        }

        if (! xDataArea::exist(companyId))
        {
            throw error(strFmt("@SYS10666", companyId));
        }

        changecompany(companyId)
        {
            Args args;
            if (_retailStoreId)
            {
                args = new Args();
                args.record(RetailStoreTable::Find(_retailStoreId));
            }

            new MenuFunction(menuitemDisplayStr(RetailStoreTable), MenuItemType::Display).run(args);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET5917</DeveloperDocumentation>
	<FormRef>RetailStoreTable</FormRef>
	<Label>@RET3005</Label>
	<ListPageRef>RetailStoreTable</ListPageRef>
	<TableGroup>Main</TableGroup>
	<TitleField1>StoreNumber</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Extends>RetailChannelTable</Extends>
	<Modules>BrickAndMortarStore</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailIncomeExpenseAccountTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailIncomeExpenseAccountTable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailStoreSection</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailStoreSection</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailStoreTenderTypeTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailStoreTenderTypeTable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailTerminalReceiptTxt</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailTerminalReceiptTxt</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailWorkShiftSetup</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailWorkShiftSetup</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailStoreHardwareStationTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailStoreHardwareStationTable</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>replicationCounter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>removeAddTender</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StoreNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>replicationCounter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Password</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DatabaseName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SQLServerName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>removeAddTender</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>roundingTaxAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>maxRoundingTaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseDefaultCustAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationIdForCustomerOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BatchFramework</Name>
			<Label>@SYS4005910</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>stmtCalcBatchEndTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>stmtPostAsBusinessDay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>separateStmtPerStaffTerminal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Closing</Name>
			<Label>@RET3242</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>closingMethod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ContactInfo</Name>
			<Label>@SYS21663</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>phone</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Culture</Name>
			<Label>@RET2366</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>cultureName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EndOfDayProcedure</Name>
			<Label>@RET428</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Groups</Name>
			<Label>@RET3243</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>inventLocation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>HHTPlannedOrder</Name>
			<Label>@RET1590</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetailReqPlanIdSched</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Labels</Name>
			<Label>@RET4295</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>generatesShelfLabels</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>generatesItemLabels</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createLabelsForZeroPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MaximumDifference</Name>
			<Label>@RET3244</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>maximumPostingDifference</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>maxShiftDifferenceAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>maxTransactionDifferenceAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OpeningHours</Name>
			<Label>@RET3007</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>openFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>openTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>POSTerminal</Name>
			<Label>@RET490350</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>functionalityProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OfflineProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inventoryLookup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Purchase</Name>
			<Label>@SYS53872</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>poItemFilter</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Receipt</Name>
			<Label>@RET3183</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>itemIdOnReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>numberOfTopOrBottomLines</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>maximumTextLengthOnReceipt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Rounding</Name>
			<Label>@RET3246</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RoundingAccountLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>roundingAccountName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>maxRoundingAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ServiceCharge</Name>
			<Label>@RET3247</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>serviceChargePct</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>serviceChargePrompt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Statement</Name>
			<Label>@RET3248</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>statementMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>oneStatementPerDay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>startAmountCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>bankDropCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>tenderDeclarationCalculation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Tax</Name>
			<Label>@RET3875</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxIdentificationNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>taxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseDestinationBasedTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseCustomerBasedTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxOverrideGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReturnTaxGroup_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseCustomerBasedTaxExemption</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TrainingMode</Name>
			<Label>@RET4642</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>hideTrainingMode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EFT</Name>
			<Label>@RET3284</Label>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>taxGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>closingMethod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailClosingMethod</ExtendedDataType>
			<EnumType>RetailClosingMethodType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>createLabelsForZeroPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCreateLabelsForZeroPrice</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>cultureName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DatabaseName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDatabaseName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>functionalityProfile</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFunctionalityProfileId</ExtendedDataType>
			<Label>@RET3231</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>generatesItemLabels</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGeneratesItemLabels</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>generatesShelfLabels</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailGeneratesShelfLabels</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>hideTrainingMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailHideTrainingMode</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationIdForCustomerOrder</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<Label>@SYS88252</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>inventoryLookup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RET4844</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>itemIdOnReceipt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailItemIdOnReceipt</ExtendedDataType>
			<EnumType>RetailItemIdOnReceiptBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>maximumPostingDifference</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailMaxDifferenceAmount</ExtendedDataType>
			<Label>@RET3211</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>maximumTextLengthOnReceipt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailMaximumTextLengthOnReceipt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>maxRoundingAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailMaxRoundingAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>maxRoundingTaxAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailMaxRoundingTaxAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>maxShiftDifferenceAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailMaxDifferenceAmount</ExtendedDataType>
			<Label>@RET3189</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>maxTransactionDifferenceAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailMaxDifferenceAmount</ExtendedDataType>
			<Label>@RET3229</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>numberOfTopOrBottomLines</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailNumberOfTopOrBottomLines</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OfflineProfile</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>oneStatementPerDay</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOneStatementPerDay</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>openFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFromTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>openTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailToTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PackedExtensions</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysExtensionSerializerPackedContainer</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Password</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RetailDBPassword</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>phone</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Phone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>poItemFilter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPOItemFilter</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>removeAddTender</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTenderTypeId</ExtendedDataType>
			<Label>@RET3239</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>replicationCounter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailReplicationCounter</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetailReqPlanIdSched</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailReqPlanIdSched</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReturnTaxGroup_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>PL,CZ,HU,LT,LV,EE,BR</CountryRegionCodes>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
			<Label>@SYS4002055</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RoundingAccountLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@RET3568</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>roundingTaxAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailRoundingTaxAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>separateStmtPerStaffTerminal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailseparateStmtPerStaffTerminal</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>serviceChargePct</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailServiceChargePct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>serviceChargePrompt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailServiceChargePrompt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SQLServerName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ServerName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>statementMethod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStatementMethod</ExtendedDataType>
			<EnumType>RetailStaffTerminalTotal</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>stmtCalcBatchEndTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TimeOfDay</ExtendedDataType>
			<Label>@SYS4005912</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>stmtPostAsBusinessDay</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>RetailPostAsBusinessDay</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StoreNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStoreId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroupDataAreaId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxIdentificationNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTaxIdNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxOverrideGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@RET5029</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>tenderDeclarationCalculation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTenderDeclarationCalculation</ExtendedDataType>
			<EnumType>RetailTenderDeclarationCalculationBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseCustomerBasedTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RET5260</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseDefaultCustAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@RET4276</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseDestinationBasedTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RET5167</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UserName</Name>
			<AssetClassification>End User Identifiable Information (EUII)</AssetClassification>
			<ExtendedDataType>RetailDBUserName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EFTStoreNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>RetailEFTStoreNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCallCenter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LinkedCallCenter</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>layoutId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLayoutId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>startAmountCalculation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStartAmountCalculation</ExtendedDataType>
			<EnumType>RetailStartAmountCalculationBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>bankDropCalculation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailBankDropCalculation</ExtendedDataType>
			<EnumType>RetailBankDropCalculationBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseCustomerBasedTaxExemption</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStoreTableUseCustomerBasedTaxExemption</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RetailOfflineProfileIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OfflineProfile</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DimensionAttributeValueCombinationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RoundingAccountLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>StoreNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>StoreNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>DimensionDefaultMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>PackedExtensions</MapField>
					<MapFieldTo>PackedExtensions</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackedPrioritizedIdList</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DimensionAttributeValueCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RoundingAccountLedgerDimension</Name>
					<Field>RoundingAccountLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocationForCustomerOrder</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventLocationForCustomerOrder</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationIdForCustomerOrder</Name>
					<SourceEDT>InventLocationId</SourceEDT>
					<Field>InventLocationIdForCustomerOrder</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>LabelFile_Extern</Name>
					<SourceEDT>LanguageId</SourceEDT>
					<RelatedField>LabelFile</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>cultureName</Name>
					<SourceEDT>LanguageId</SourceEDT>
					<Field>cultureName</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OfflineProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailOfflineProfile</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OfflineProfile</Name>
					<Field>OfflineProfile</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReqPlanSched</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ReqPlanSched</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroupDataAreaId</Name>
					<Field>TaxGroupDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailReqPlanIdSched</Name>
					<SourceEDT>RetailReqPlanIdSched</SourceEDT>
					<Field>RetailReqPlanIdSched</Field>
					<RelatedField>ReqPlanIdSched</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PlanIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailChannel_FK</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailChannelTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailFunctionalityProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailFunctionalityProfile</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>functionalityProfile</Name>
					<SourceEDT>RetailFunctionalityProfileId</SourceEDT>
					<Field>functionalityProfile</Field>
					<RelatedField>profileId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>profileIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailSalesTaxOverrideGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailSalesTaxOverrideGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxOverrideGroup</Name>
					<Field>TaxOverrideGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailTenderTypeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailTenderTypeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>removeAddTender</Name>
					<SourceEDT>RetailTenderTypeId</SourceEDT>
					<Field>removeAddTender</Field>
					<RelatedField>tenderTypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>tenderTypeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroupDataAreaId</Name>
					<Field>TaxGroupDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>taxGroup</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>taxGroup</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading_ReturnTaxGroup_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxGroupHeading_ReturnTaxGroup_W</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RetailStoreTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroupDataAreaId</Name>
					<Field>TaxGroupDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReturnTaxGroup_W</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>ReturnTaxGroup_W</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CallCenter</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailMCRChannelTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Link</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LinkedCallCenter</Name>
					<Field>LinkedCallCenter</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailTillLayout</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailTillLayout</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>layoutId</Name>
					<Field>layoutId</Field>
					<RelatedField>layoutId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>