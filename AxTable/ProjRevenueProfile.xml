<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjRevenueProfile</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjRevenueProfile extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByRevenueProfileId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the project revenue profile that has the given <c>ProjRevenueProfileId</c>.
    /// </summary>
    /// <param name="_projRevenueProfileId">
    ///    The ID of the project revenue profile.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that determines whether the record should be selected for update; optional.
    /// </param>
    /// <returns>
    ///    <c>ProjRevenueProfile</c> record. Returns null if the revenue profile does not exist.
    /// </returns>
    public static ProjRevenueProfile findByRevenueProfileId(ProjRevenueProfileId _projRevenueProfileId, boolean _forUpdate = false)
    {
        ProjRevenueProfile projRevenueProfile = null;

        projRevenueProfile.selectForUpdate(_forUpdate);

        if (_projRevenueProfileId)
        {
            select firstOnly projRevenueProfile where projRevenueProfile.ProjRevenueProfileId == _projRevenueProfileId;
        }

        return projRevenueProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes values.
    /// </summary>
    public void initValue()
    {
        super();

        this.initFromBillingMethod();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays a dialog box that has a list from which the user can select a project revenue profile.
    /// </summary>
    /// <param name="_lookupCtrl">
    /// The field that will hold the selected project revenue profile ID.
    /// </param>
    /// <param name="_profileId">
    /// Project revenue profile ID value used to filter the lookup results.
    /// </param>
    public static void lookupProfile(FormStringControl _lookupCtrl, str _profileId)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(ProjRevenueProfile), _lookupCtrl);
        Query query = new Query();
        QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(ProjRevenueProfile));

        if (_profileId)
        {
            QueryBuildRange queryBuildRange = queryBuildDataSource.addRange(fieldNum(ProjRevenueProfile, ProjRevenueProfileId));
            queryBuildDataSource.relations(true);
            queryBuildRange.value(SysQuery::valueLikeAfter(_profileId));
        }

        sysTableLookup.addLookupfield(fieldNum(ProjRevenueProfile, ProjRevenueProfileId));
        sysTableLookup.addLookupfield(fieldNum(ProjRevenueProfile, Name));
        sysTableLookup.addLookupfield(fieldNum(ProjRevenueProfile, BillingMethod));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupProfileByBillingMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays a dialog box that has a list from which the user can select a project cost and revenue profile.
    /// </summary>
    /// <param name="_lookupCtrl">
    /// The lookup control.
    /// </param>
    /// <param name="_billingMethod">
    /// The <c>ProjContractBillingMethod</c> value for filtering profiles.
    /// </param>
    /// <param name="_profileId">
    /// Project cost and revenue profile ID value used to filter the lookup results.
    /// </param>
    public static void lookupProfileByBillingMethod(FormStringControl _lookupCtrl, ProjContractBillingMethod _billingMethod, str _profileId)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(ProjRevenueProfile), _lookupCtrl);
        Query query = new Query();
        QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(ProjRevenueProfile));

        QueryBuildRange queryBuildRange = queryBuildDataSource.addRange(fieldNum(ProjRevenueProfile, BillingMethod));
        queryBuildRange.value(queryValue(_billingMethod));

        if (_profileId)
        {
            QueryBuildRange queryBuildRange2 = queryBuildDataSource.addRange(fieldNum(ProjRevenueProfile, ProjRevenueProfileId));
            queryBuildRange2.value(SysQuery::valueLikeAfter(_profileId));
        }

        sysTableLookup.addLookupfield(fieldNum(ProjRevenueProfile, ProjRevenueProfileId));
        sysTableLookup.addLookupfield(fieldNum(ProjRevenueProfile, Name));
        sysTableLookup.addLookupfield(fieldNum(ProjRevenueProfile, BillingMethod));
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupValidProfileForRevRec</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays a dialog box that has a list from which the user can select a project cost and revenue profile valid for revenue recognition.
    /// </summary>
    /// <param name="_lookupCtrl">
    /// The lookup control.
    /// </param>
    /// <param name="_profileId">
    /// Project cost and revenue profile ID value used to filter the lookup results.
    /// </param>
    public static void lookupValidProfileForRevRec(FormStringControl _lookupCtrl, str _profileId)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(ProjRevenueProfile), _lookupCtrl);
        Query query = new Query();
        QueryBuildDataSource queryBuildDataSource = query.addDataSource(tableNum(ProjRevenueProfile));

        QueryBuildRange queryBuildRange = queryBuildDataSource.addRange(fieldNum(ProjRevenueProfile, BillingMethod));

		// Revenue recognition is always associated with fixed price billing method.
        queryBuildRange.value(queryValue(ProjContractBillingMethod::FixedPrice));
        
		QueryBuildRange queryBuildComplPrincRange = queryBuildDataSource.addRange(fieldNum(ProjRevenueProfile, CompletePrinciple));
        queryBuildComplPrincRange.value(SysQuery::valueNot(ProjCompletePrincip::NoWIP));

        if (_profileId)
        {
            QueryBuildRange queryBuildProfileIdRange = queryBuildDataSource.addRange(fieldNum(ProjRevenueProfile, ProjRevenueProfileId));
            queryBuildProfileIdRange.value(SysQuery::valueLikeAfter(_profileId));
        }

        sysTableLookup.addLookupfield(fieldNum(ProjRevenueProfile, ProjRevenueProfileId));
        sysTableLookup.addLookupfield(fieldNum(ProjRevenueProfile, Name));
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the project revenue profile that has the given RecId.
    /// </summary>
    /// <param name="_recId">
    ///    The RecId of the project revenue profile.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that determines whether the record should be selected for update; optional.
    /// </param>
    /// <returns>
    ///    <c>ProjRevenueProfile</c> record. Returns null if the revenue profile does not exist.
    /// </returns>
    internal static ProjRevenueProfile find(RecId _recId, boolean _forUpdate = false)
    {
        ProjRevenueProfile projRevenueProfile = null;

        projRevenueProfile.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select firstOnly projRevenueProfile where projRevenueProfile.RecId == _recId;
        }

        return projRevenueProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the project revenue profile.
    /// </summary>
    /// <returns>
    ///    true if the record is valid; otherwise, false.
    /// </returns>
    boolean validateWrite()
    {
        boolean ret = super();

        if (ret)
        {
            if (this.OnAccLedgerStatus == ProjLedgerStatusOnAcc::None)
            {
                ret = checkFailed("@Proj:RevenueProfileMissingOnAccLS");
            }

            if (this.SalesPriceMatchingPrinciple != ProjSalesPriceMatchingPrincip::None)
            {
                info("@SYS308783");
            }

            switch (this.MatchingPrinciple)
            {
                case ProjMatchingPrincip::SalesValue:
                if (!this.SalesValueCategoryId)
                    {
                        ret = checkFailed(strFmt("@SYS78453",this.MatchingPrinciple));
                    }
                    break;

                case ProjMatchingPrincip::ProductionProfit:
                if (!this.ProductionCategoryId)
                    {
                        ret = checkFailed(strFmt("@SYS78455",this.MatchingPrinciple));
                    }
                    if (! this.ProfitCategoryId)
                    {
                        ret = checkFailed(strFmt("@SYS78454",this.MatchingPrinciple));
                    }
                    break;
            }

            if (this.ForeseeableLosses)
            {
                if (this.CompletePrinciple != ProjCompletePrincip::CompletedPercentage)
                {
                    if (!this.AccruedLossCategoryId)
                    {
                        ret = checkFailed("@SYS90833");
                    }
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates project profile data when certain fields are modified.
    /// </summary>
    /// <param name="_fieldId">
    ///    The field ID of the modified field.
    /// </param>
    /// <remarks>
    ///    This method is automatically called from forms when any field is modified.
    /// </remarks>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ProjRevenueProfile, EmplLedgerStatus):
                if (this.EmplLedgerStatus == ProjLedgerStatus::Operations || this.EmplLedgerStatus == ProjLedgerStatus::BalanceSheet)
                {
                    this.PostWIPEmpl = false;
                }
                break;

            case fieldNum(ProjRevenueProfile, PostWIPEmpl) :
                if (this.EmplLedgerStatus == ProjLedgerStatus::None || this.EmplLedgerStatus == ProjLedgerStatus::BalanceSheet)
                {
                    this.EmplLedgerStatus = ProjLedgerStatus::Operations;
                }
                break;

            case fieldNum(ProjRevenueProfile, CostLedgerStatus):
                this.PostWIPCost = false;
                break;
            
            case fieldNum(ProjRevenueProfile, PostWIPCost):
                this.CostLedgerStatus = ProjLedgerStatusCost::Operations;
                break;

            case fieldNum(ProjRevenueProfile, ItemLedgerStatus):
                this.PostWIPItem = false;
                break;

            case fieldNum(ProjRevenueProfile, PostWIPItem):
                this.ItemLedgerStatus = ProjLedgerStatusItem::Operations;
                break;

            case fieldNum(ProjRevenueProfile, CompletePrinciple) :
                this.initFromCompletePriniciple();
                break;

            case fieldNum(ProjRevenueProfile, SalesPriceMatchingPrinciple):
                this.initFromSalesPriceMatchingPrinciple();
                break;

            case fieldNum(ProjRevenueProfile, BillingMethod):
                this.initFromBillingMethod();
                break;

            case fieldNum(ProjRevenueProfile, MatchingPrinciple) :
                this.initFromMatchingPrinciple();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowEditFieldForeseeableLosses</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether users can modify the foreseeable losses field.
    /// </summary>
    /// <returns>
    /// true if the field can be edited; otherwise, false.
    /// </returns>
    public boolean allowEditFieldForeseeableLosses()
    {
        boolean ret;

        if (this.BillingMethod == ProjContractBillingMethod::FixedPrice)
        {
            if (this.CompletePrinciple == ProjCompletePrincip::CompletedContract || this.CompletePrinciple == ProjCompletePrincip::CompletedPercentage)
            {
                ret = (this.SalesPriceMatchingPrinciple == ProjSalesPriceMatchingPrincip::None);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setForeseeableLosses</Name>
				<Source><![CDATA[
    private void setForeseeableLosses()
    {
        if (this.allowEditFieldForeseeableLosses())
        {
            if ((this.CompletePrinciple != ProjCompletePrincip::CompletedContract)
                && (this.CompletePrinciple != ProjCompletePrincip::None))
            {
                this.AccruedLossCategoryId = '';
            }
        }
        else
        {
            this.ForeseeableLosses = NoYes::No;
            this.AccruedLossCategoryId = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromBillingMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the project profile information, based on billing method.
    /// </summary>
    private void initFromBillingMethod()
    {
        switch (this.BillingMethod)
        {
            case ProjContractBillingMethod::TimeMaterial:
                this.CostLedgerStatus = ProjLedgerStatusCost::Operations;
                this.ItemLedgerStatus = ProjLedgerStatusItem::Operations;
                this.EmplLedgerStatus = ProjLedgerStatus::Operations;
                this.OnAccLedgerStatus = ProjLedgerStatusOnAcc::BalanceSheet;
                
                this.resetWIPFields();

                this.CompletePrinciple = ProjCompletePrincip::None;
                this.SalesPriceMatchingPrinciple = ProjSalesPriceMatchingPrincip::None;
                this.MatchingPrinciple = ProjMatchingPrincip::None;
                this.AccruedLossCategoryId  = '';
                this.ForeseeableLosses = NoYes::No;
                this.ProductionCategoryId = '';
                this.ProfitCategoryId = '';
                this.SalesvalueCategoryId = '';
                break;

            case ProjContractBillingMethod::FixedPrice   :
                this.CostLedgerStatus = ProjLedgerStatusCost::Operations;
                this.ItemLedgerStatus = ProjLedgerStatusItem::Operations;
                this.EmplLedgerStatus = ProjLedgerStatus::Operations;
                this.OnAccLedgerStatus = ProjLedgerStatusOnAcc::Operations;

                this.resetWIPFields();

                this.CompletePrinciple = ProjCompletePrincip::NoWIP;
                this.SalesPriceMatchingPrinciple = ProjSalesPriceMatchingPrincip::None;
                this.MatchingPrinciple = ProjMatchingPrincip::NoMatching;
                break;
        }
        this.setForeseeableLosses();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromMatchingPrinciple</Name>
				<Source><![CDATA[
    private void initFromMatchingPrinciple()
    {
        switch (this.MatchingPrinciple)
        {
            case ProjMatchingPrincip::None  :
                if (this.BillingMethod == ProjContractBillingMethod::TimeMaterial)
                {
                    this.AccruedLossCategoryId = '';
                }
                this.ProductionCategoryId = '';
                this.ProfitCategoryId = '';
                this.SalesvalueCategoryId = '';
                break;

            case ProjMatchingPrincip::SalesValue:
                if (this.BillingMethod == ProjContractBillingMethod::TimeMaterial)
                {
                    this.AccruedLossCategoryId = '';
                }
                this.ProductionCategoryId = '';
                this.ProfitCategoryId = '';
                break;

            case ProjMatchingPrincip::ProductionProfit:
                if (this.BillingMethod == ProjContractBillingMethod::TimeMaterial)
                {
                    this.AccruedLossCategoryId = '';
                }
                this.SalesvalueCategoryId = '';
                break;

            case ProjMatchingPrincip::NoMatching:
                if (this.BillingMethod == ProjContractBillingMethod::TimeMaterial)
                {
                    this.AccruedLossCategoryId = '';
                }
                this.ProductionCategoryId = '';
                this.ProfitCategoryId = '';
                this.SalesvalueCategoryId = '';
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesPriceMatchingPrinciple</Name>
				<Source><![CDATA[
    private void initFromSalesPriceMatchingPrinciple()
    {
        switch (this.SalesPriceMatchingPrinciple)
        {
            case ProjSalesPriceMatchingPrincip::None:
                switch (this.CompletePrinciple)
                {
                    case ProjCompletePrincip::NoWIP:
                        this.MatchingPrinciple = ProjMatchingPrincip::NoMatching;
                        this.ProductionCategoryId = '';
                        this.ProfitCategoryId = '';
                        this.SalesValueCategoryId = '';
                        break;

                    case ProjCompletePrincip::CompletedContract:
                        this.MatchingPrinciple = ProjMatchingPrincip::SalesValue;
                        this.ProductionCategoryId = '';
                        this.ProfitCategoryId = '';
                        this.OnAccLedgerStatus = ProjLedgerStatusOnAcc::BalanceSheet;
                        break;

                    case ProjCompletePrincip::CompletedPercentage:
                        this.MatchingPrinciple = ProjMatchingPrincip::ProductionProfit;
                        this.SalesvalueCategoryId = '';
                        this.OnAccLedgerStatus = ProjLedgerStatusOnAcc::BalanceSheet;
                        break;
                }
                break;

            case ProjSalesPriceMatchingPrincip::MarkupPercentTotal:
                this.MatchingPrinciple = ProjMatchingPrincip::SalesValue;
                this.ProductionCategoryId = '';
                this.ProfitCategoryId = '';
                this.ForeseeableLosses = NoYes::No;
                this.OnAccLedgerStatus = ProjLedgerStatusOnAcc::BalanceSheet;
                break;

            case ProjSalesPriceMatchingPrincip::MarkupPercentEstimateLine:
                this.MatchingPrinciple = ProjMatchingPrincip::SalesValue;
                this.ProductionCategoryId = '';
                this.ProfitCategoryId = '';
                this.ForeseeableLosses = NoYes::No;
                this.OnAccLedgerStatus = ProjLedgerStatusOnAcc::BalanceSheet;
                break;

            case ProjSalesPriceMatchingPrincip::ValueAddedMarkupPercent:
                this.MatchingPrinciple = ProjMatchingPrincip::ProductionProfit;
                this.SalesvalueCategoryId = '';
                this.ForeseeableLosses = NoYes::No;
                this.OnAccLedgerStatus = ProjLedgerStatusOnAcc::BalanceSheet;
                break;

            case ProjSalesPriceMatchingPrincip::ValueAddedHourRate:
                this.MatchingPrinciple = ProjMatchingPrincip::ProductionProfit;
                this.SalesvalueCategoryId = '';
                this.ForeseeableLosses = NoYes::No;
                this.OnAccLedgerStatus = ProjLedgerStatusOnAcc::BalanceSheet;
                break;
        }
        this.setForeseeableLosses();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCompletePriniciple</Name>
				<Source><![CDATA[
    private void initFromCompletePriniciple()
    {
        switch (this.CompletePrinciple)
        {
            case ProjCompletePrincip::None:
                this.SalesPriceMatchingPrinciple = ProjSalesPriceMatchingPrincip::None;
                this.MatchingPrinciple = ProjMatchingPrincip::NoMatching;
                this.ProductionCategoryId = '';
                this.ProfitCategoryId = '';
                this.SalesValueCategoryId = '';
                switch (this.BillingMethod)
                {
                    case ProjContractBillingMethod::TimeMaterial:
                        this.OnAccLedgerStatus = ProjLedgerStatusOnAcc::BalanceSheet;
                        break;

                    case ProjContractBillingMethod::FixedPrice:
                        this.OnAccLedgerStatus = ProjLedgerStatusOnAcc::Operations;
                        break;
                }
                break;

            case ProjCompletePrincip::NoWIP:
                this.SalesPriceMatchingPrinciple = ProjSalesPriceMatchingPrincip::None;
                this.MatchingPrinciple = ProjMatchingPrincip::NoMatching;
                this.ProductionCategoryId = '';
                this.ProfitCategoryId = '';
                this.SalesValueCategoryId = '';
                this.OnAccLedgerStatus = ProjLedgerStatusOnAcc::Operations;
                break;

            case ProjCompletePrincip::CompletedContract:
                this.SalesPriceMatchingPrinciple = ProjSalesPriceMatchingPrincip::None;
                this.MatchingPrinciple = ProjMatchingPrincip::SalesValue;
                this.ProductionCategoryId = '';
                this.ProfitCategoryId = '';
                this.OnAccLedgerStatus = ProjLedgerStatusOnAcc::BalanceSheet;
                break;

            case ProjCompletePrincip::CompletedPercentage:
                this.SalesPriceMatchingPrinciple = ProjSalesPriceMatchingPrincip::None;
                this.MatchingPrinciple = ProjMatchingPrincip::ProductionProfit;
                this.SalesValueCategoryId = '';
                this.OnAccLedgerStatus = ProjLedgerStatusOnAcc::BalanceSheet;
                break;
        }
        this.setForeseeableLosses();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetWIPFields</Name>
				<Source><![CDATA[
    private void resetWIPFields()
    {
        this.PostWIPCost = false;
        this.PostWIPItem = false;
        this.PostWIPEmpl = false;
        this.PostWIPFee = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canPostWIPForTransType</Name>
				<Source><![CDATA[
    public boolean canPostWIPForTransType(ProjTransType _projTransType)
    {
        boolean canPostWIP;

        switch(_projTransType)
        {
            case ProjTransType::Cost:
                canPostWIP = this.PostWIPCost;
                break;
            case ProjTransType::Item:
                canPostWIP = this.PostWIPItem;
                break;
            case ProjTransType::Revenue:
                canPostWIP = this.PostWIPFee;
                break;
            case ProjTransType::Hour:
                    canPostWIP = this.PostWIPEmpl;
                    break;
            default:
                canPostWIP = false;
        }

        return canPostWIP;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@Proj:RevenueProfileDevDoc</DeveloperDocumentation>
	<Label>@Proj:RevenueProfile</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ProjRevenueProfileId</TitleField1>
	<TitleField2>Name</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>ProjRevenueProfileIdx</ClusteredIndex>
	<Modules>ProjectManagementAndAccounting</Modules>
	<ReplacementKey>ProjRevenueProfileIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjRevenueProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmplLedgerStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostWIPEmpl</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostLedgerStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostWIPCost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemLedgerStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostWIPItem</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostWIPFee</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OnAccLedgerStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjRevenueProfileId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Cost</Name>
			<Label>@SYS4249</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EmplLedgerStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostLedgerStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemLedgerStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CostControl</Name>
			<Label>@SYS107921</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EstimateCategory</Name>
			<Label>@SYS78407</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesvalueCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductionCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProfitCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccruedLossCategoryId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FixedPrice</Name>
			<Label>@SYS3237</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CompletePrinciple</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPriceMatchingPrinciple</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MatchingPrinciple</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ForeseeableLosses</Name>
			<Label>@SYS78457</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ForeseeableLosses</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjRevenueProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BillingMethod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Invoicing</Name>
			<Label>@SYS5779</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OnAccLedgerStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Journalizing</Name>
			<Label>@SYS58509</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EmplLedgerStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemLedgerStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostLedgerStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Project</Name>
			<Label>@SYS4534</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TimeMaterial</Name>
			<Label>@SYS53874</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostWIPEmpl</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostWIPCost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostWIPItem</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostWIPFee</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RevRecDefaults</Name>
			<Label>@PSA242</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PeriodId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostTemplate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccruedLossCategoryId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryCostId</ExtendedDataType>
			<Label>@SYS78380</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CompletePrinciple</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@Proj:RevenueProfile_CompletePrinciple</Label>
			<EnumType>ProjCompletePrincip</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CostTemplate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjControlId</ExtendedDataType>
			<Label>@Proj:RevenueProfile_CostTemplate</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CostLedgerStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS53212</Label>
			<EnumType>ProjLedgerStatusCost</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostWIPCost</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjActivateTrans</ExtendedDataType>
			<Label>@SYS62481</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EmplLedgerStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS50268</Label>
			<EnumType>ProjLedgerStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostWIPEmpl</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjActivateTrans</ExtendedDataType>
			<Label>@SYS62480</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ForeseeableLosses</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjForeseablesLosses</ExtendedDataType>
			<Label>@Proj:RevenueProfile_ForeseeableLosses</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OnAccLedgerStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS4236</Label>
			<EnumType>ProjLedgerStatusOnAcc</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemLedgerStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LogisticsBasic</ConfigurationKey>
			<Label>@SYS69924</Label>
			<EnumType>ProjLedgerStatusItem</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostWIPItem</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LogisticsBasic</ConfigurationKey>
			<ExtendedDataType>ProjActivateTrans</ExtendedDataType>
			<Label>@SYS69926</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MatchingPrinciple</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@Proj:RevenueProfile_MatchingPrinciple</Label>
			<EnumType>ProjMatchingPrincip</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@Proj:RevenueProfile_Name</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PeriodId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjPeriodId</ExtendedDataType>
			<Label>@Proj:RevenueProfile_PeriodId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProductionCategoryId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
			<Label>@SYS10657</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProfitCategoryId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
			<Label>@SYS20010</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjRevenueProfileId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjRevenueProfileId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@Proj:RevenueProfileId</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostWIPFee</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjActivateTrans</ExtendedDataType>
			<Label>@SYS62482</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SalesPriceMatchingPrinciple</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@Proj:RevenueProfile_SalesPriceMatchingPrinciple</Label>
			<EnumType>ProjSalesPriceMatchingPrincip</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesvalueCategoryId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
			<Label>@SYS50058</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BillingMethod</Name>
			<AllowEdit>No</AllowEdit>
			<Label>@Proj:ProjBillingMethod</Label>
			<EnumType>ProjContractBillingMethod</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProjRevenueProfileIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjRevenueProfileId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategory_AccruedCost</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjCategory_AccruedCost</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjRevenueProfile</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccruedLossCategoryId</Name>
					<SourceEDT>ProjCategoryCostId</SourceEDT>
					<Field>AccruedLossCategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategory_Production</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjCategory_Production</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjRevenueProfile</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductionCategoryId</Name>
					<SourceEDT>ProjCategoryId</SourceEDT>
					<Field>ProductionCategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategory_Profit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjCategory_Profit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjRevenueProfile</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProfitCategoryId</Name>
					<SourceEDT>ProjCategoryId</SourceEDT>
					<Field>ProfitCategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategory_SalesValue</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjCategory_SalesValue</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjRevenueProfile</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesvalueCategoryId</Name>
					<SourceEDT>ProjCategoryId</SourceEDT>
					<Field>SalesvalueCategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjControl</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjControl</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CostTemplate</Name>
					<SourceEDT>ProjControlId</SourceEDT>
					<Field>CostTemplate</Field>
					<RelatedField>ControlId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjPeriodID</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjPeriodTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PeriodId</Name>
					<SourceEDT>ProjPeriodId</SourceEDT>
					<Field>PeriodId</Field>
					<RelatedField>PeriodId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>