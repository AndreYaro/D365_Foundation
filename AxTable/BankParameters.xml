<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankParameters extends common
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    void delete()
    {
        throw error("@SYS23721");
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes operations depending on the field that was modified.
    /// </summary>
    /// <param name="_fieldId">
    /// The <c>FieldId</c> of the field that was modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(BankParameters, EnablePDC) :
                if (this.EnablePDC == NoYes::No)
                {
                    this.PostTransPDC = NoYes::No;
                    this.TaxEnablePDCConditionalTax = NoYes::No;
                    this.IssueClearingPDC = 0;
                    this.ReceiptClearingPDC = 0;
                    this.whtClearingPDC = 0;
                    this.VendPaymentJournalPDC = '';
                    this.GeneralJournalNamePDC = '';
                }
                break;

            case fieldNum(BankParameters, PostTransPDC) :
                if (this.PostTransPDC == NoYes::No)
                {
                    this.IssueClearingPDC = 0;
                    this.ReceiptClearingPDC = 0;
                    this.whtClearingPDC = 0;
                    this.VendPaymentJournalPDC = '';
                    this.GeneralJournalNamePDC = '';
                }
                break;

            case fieldNum(BankParameters, BankLCImportEnable):
                if (!this.BankLCImportEnable)
                {
                    this.BankLCImportChargeEnable_SA = NoYes::No;
                }
                break;

            case fieldnum(BankParameters, BankLGEnable):
                if (this.BankLGEnable == NoYes::No)
                {
                    this.BankLGJournalName = '';
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    void update()
    {
        super();
        flush BankParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        if (ret)
        {
            LedgerJournalName ledgerJournalName;

            switch (_fieldIdToCheck)
            {
                case fieldNum(BankParameters, BankLGJournalName):
                    ledgerJournalName = LedgerJournalName::find(this.BankLGJournalName);
                    if (ledgerJournalName.RecId != 0
                        && (ledgerJournalName.JournalType           != LedgerJournalType::Daily
                            || ledgerJournalName.OffsetAccountType  != LedgerJournalACType::Ledger
                            || ledgerJournalName.FixedOffsetAccount != NoYes::No))
                    {
                        // Only Daily journal name is allowed for Letter of Guarantee. The journal should not have a fixed offset account and offset account type should be ledger.
                        ret = checkFailed("@SYS314704");
                    }
                    break;

                // Postdated check vendor payment journal field only accepts vendor disbursement journal type.
                case fieldNum(BankParameters, VendPaymentJournalPDC):
                    if (this.VendPaymentJournalPDC)
                    {
                        ledgerJournalName = LedgerJournalName::find(this.VendPaymentJournalPDC);
                        if (ledgerJournalName && ledgerJournalName.JournalType != LedgerJournalType::Payment)
                        {
                            ret = checkFailed(strFmt("@SYS22977", LedgerJournalType::Payment));
                        }
                    }
                    break;

                // Postdated check General journal field only accepts daily journals.
                case fieldNum(BankParameters, GeneralJournalNamePDC):
                    if (this.GeneralJournalNamePDC)
                    {
                        ledgerJournalName = LedgerJournalName::find(this.GeneralJournalNamePDC);
                        if (ledgerJournalName && ledgerJournalName.JournalType != LedgerJournalType::Daily)
                        {
                            ret = checkFailed(strFmt("@SYS22977", LedgerJournalType::Daily));
                        }
                    }
                    break;

                case fieldNum(BankParameters, BridgedTransClearingJournalName):
                    if (this.BridgedTransClearingJournalName)
                    {
                        ledgerJournalName = LedgerJournalName::find(this.BridgedTransClearingJournalName);
                        if (ledgerJournalName)
                        {
                            if (ledgerJournalName.JournalType != LedgerJournalType::Daily || ledgerJournalName.NewVoucher != NewVoucher::BalanceSheet)
                            {
                                ret = checkFailed(strFmt("@Bank:BankClearingJournalTypeValidationError", LedgerJournalType::Daily, NewVoucher::BalanceSheet));
                            }
                        }
                    }
                    break;

                case fieldNum(BankParameters, AllowNettingIntercompany):
                    if (this.AllowNettingIntercompany == NoYes::No && this.haveInterCompanyNettingPairs())
                    {
                        ret = checkFailed("@CashManagement:NettingHasIntercompanyValidation");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCurrCodeControl_W</Name>
				<Source><![CDATA[
    public static NoYes checkCurrCodeControl_W()
    {
        return BankParameters::find().CurrCodeControl_W;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkParameters_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks bank parameters.
    /// </summary>
    /// <returns>
    /// Returns true if the check succeed.
    /// </returns>
    public static boolean checkParameters_IN()
    {
        boolean ret;
        
        #ISOCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            BankParameters bankParameters = BankParameters::find();
            ret = bankParameters.RequireChequeReversalJour || bankParameters.RequireDepositCancelJour;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static BankParameters find(boolean _forupdate = false)
    {
        BankParameters parameter;

        parameter.selectForUpdate(_forupdate);

        select firstonly parameter
            index Key
            where parameter.Key == 0;

        if (!parameter && !parameter.isTmp())
        {
            Company::createParameter(parameter);
        }

        return parameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    public static NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::Bank;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBankDepositNum</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefBankDepositNum()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankDepositNum));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBankCurrencyRevalNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the number sequence reference for bank currency revaluation voucher.
    /// </summary>
    /// <returns>
    ///     The number sequence reference for bank currency revaluation voucher.
    /// </returns>
    internal static NumberSequenceReference numRefBankCurrencyRevalNum()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankCurrencyRevalVoucher));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBankExchAdjVoucher_PL</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the number sequence reference for bank exchange adjustment voucher.
    /// </summary>
    /// <returns>
    ///     Number sequence reference for bank exchange adjustment voucher.
    /// </returns>
    public static NumberSequenceReference numRefBankExchAdjVoucher_PL()
    {
        return NumberSeqReference::findReference(extendedTypeNum(PlBankExchAdjVoucher));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBankExchAdjVoucher_RU</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefBankExchAdjVoucher_RU()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankExchAdjVoucher_RU));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBankLGNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the letter of guarantee number.
    /// </summary>
    /// <returns>
    ///    The letter of guarantee number.
    /// </returns>
    public static NumberSequenceReference numRefBankLGNumber()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankLGNumber));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBankLGTransNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the letter of guarantee transaction or action number.
    /// </summary>
    /// <returns>
    ///    The letter of guarantee transaction or action number.
    /// </returns>
    public static NumberSequenceReference numRefBankLGTransNum()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankLGTransNumber));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBankPositivePayNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number sequence reference for the bank positive pay ID.
    /// </summary>
    /// <returns>
    /// The number sequence reference for the bank positive pay ID.
    /// </returns>
    public static NumberSequenceReference numRefBankPositivePayNum()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankPositivePayId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBankPrenoteNum</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefBankPrenoteNum()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankPrenoteNum));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBankReconcileVoucher</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefBankReconcileVoucher()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankReconcileVoucher));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBankStatementReversalVoucher</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefBankStatementReversalVoucher()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankStatementReversalVoucher));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBankReconciliationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number sequence reference for a bank reconciliation ID.
    /// </summary>
    /// <returns>
    /// The number sequence reference for the bank reconciliation ID.
    /// </returns>
    public static NumberSequenceReference numRefBankReconciliationId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankReconciliationId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBankStatementDownloadId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number sequence reference for a bank statement download ID.
    /// </summary>
    /// <returns>
    /// The number sequence reference for the bank statement download ID.
    /// </returns>
    public static NumberSequenceReference numRefBankStatementDownloadId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankStatementDownloadId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBankStatementId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number sequence reference for a bank statement ID.
    /// </summary>
    /// <returns>
    /// The number sequence reference for the bank statement ID.
    /// </returns>
    public static NumberSequenceReference numRefBankStatementId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankStatementId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefCashDueAnnouncement_RU</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefCashDueAnnouncement_RU()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankCashDueAnnouncement_RU));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefTransferCurOrder_RU</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefTransferCurOrder_RU()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankCurrencyTransferId_RU));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefSummarizationID</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefSummarizationID()
    {
        return NumberSeqReference::findReference(extendedTypeNum(BankTransSummarizationID));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        if (FeatureStateProvider::isFeatureEnabled(BankStatementPostPerLineFeature::instance()))
        {
            this.BookingDateAsDefaultAccountingDate = NoYes::Yes;
        }

        if (FeatureStateProvider::isFeatureEnabled(BankModernReconciliationFeature::instance()))
        {
            this.BankModernReconciliationUpgradeWizardExecutionStatus = BankModernReconciliationUpgradeWizardExecutionStatus::Executed;
        }

        this.CheckNumberValidation = NoYes::Yes;
        this.CheckNumberInterval = 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (ret
            && this.ExchAdjRateSource == BankRevalExchRateSource::Specific
            && (this.AccountingCurrencyExchangeRateType == 0 || this.ReportingCurrencyExchangeRateType == 0))
        {
            ret = checkFailed("@CashManagement:BankRevalMissingExchangeRateType");
        }

        if (ret)
        {
            LedgerJournalName ledgerJournalName = LedgerJournalName::find(this.BridgedTransClearingJournalName);
            if (ledgerJournalName && NumberSequenceTable::find(ledgerJournalName.NumberSequenceTable).Continuous)
            {
                checkFailed("@Bank:NumberSequenceNonContinuousValidation");
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnablePettyCash</Name>
				<Source><![CDATA[
    internal static NoYes getEnablePettyCash()
    {
        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ, #isoEE, #isoHU, #isoLT, #isoLV, #isoPL, #isoRU]))
        {
            return BankParameters::find().EnablePettyCash;
        }
        return NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnablePettyCash</Name>
				<Source><![CDATA[
    internal static void setEnablePettyCash(NoYes _enablePettyCash)
    {
        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ, #isoEE, #isoHU, #isoLT, #isoLV, #isoPL, #isoRU]))
        {
            BankParameters bankParameters = BankParameters::find(true);
            bankParameters.EnablePettyCash = _enablePettyCash;
            ttsbegin;
            bankParameters.write();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>haveInterCompanyNettingPairs</Name>
				<Source><![CDATA[
    private boolean haveInterCompanyNettingPairs()
    {
        CustVendNettingPair custVendNettingPair;
        CustVendNettingAgreement custVendNettingAgreement;

        select firstonly RecId from custVendNettingPair
            where custVendNettingPair.CreditCompany != curExt() || custVendNettingPair.DebitCompany != curExt()
            exists join custVendNettingAgreement
                where custVendNettingAgreement.RecId == custVendNettingPair.CustVendNettingAgreement
                    && custVendNettingAgreement.AgreementStatus == CustVendNettingStatus::Active;

        return custVendNettingPair.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Bank</ConfigurationKey>
	<DeveloperDocumentation>@SYS127027</DeveloperDocumentation>
	<Label>@SYS53800</Label>
	<TableGroup>Parameter</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>Key</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Bank</Modules>
	<PrimaryIndex>Key</PrimaryIndex>
	<ReplacementKey>Key</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NSFTransactionType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BankClient_RU</Name>
			<Label>@GLS115265</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ImportedPaymentJournalName_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BankLC</Name>
			<Label>@SYS313678</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankLCImportEnable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankLCImportChargeEnable_SA</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankLCExportEnable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BankLG</Name>
			<Label>@SYS314671</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankLGEnable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankLGJournalName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BankReconciliation</Name>
			<Label>@SYS24040</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankStatementShowDrCrAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BookingDateAsDefaultAccountingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllowBlankBankStatement</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BankReconciliationMatchingValidation</Name>
			<Label>@GLS222640</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CheckReconciliationMatchingDiffDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllowedReconciliationMatchingMaxDiffDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckReconciliationMatchingTransType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CheckParameters</Name>
			<Label>@SYS26410</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllowBankLedgerCheck</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllowCheckReuse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllowCreateBlankStatusChecks</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CreditLimit</Name>
			<Label>@sys313989</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CreditLimitTolerance</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ExchAdjustment_PL</Name>
			<Label>@GLS104897</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExchDiffCalcType_PL</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GiroAccounts_W</Name>
			<Label>@SYS5695</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrCodeControl_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GiroAccountValidationEnabled_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Journals</Name>
			<Label>@SYS114140</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RequireChequeReversalJour</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequireDepositCancelJour</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>NSF</Name>
			<Label>@SYS79196</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NSFTransactionType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaymentCopies</Name>
			<Label>@SYS131361</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllowPaymentCopies</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PDC</Name>
			<Label>@SYS322452</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IssueClearingPDC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptClearingPDC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnablePDC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostTransPDC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxEnablePDCConditionalTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GeneralJournalNamePDC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendPaymentJournalPDC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WHTClearingPDC</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Prenotes</Name>
			<Label>@SYS128504</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllowInactiveBankPrenote</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReasonCodes</Name>
			<Label>@SYS114144</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RequireChequeReversalReason</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequireDepositCancelReason</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BankAccountNameKana_JBA_JP</Name>
			<Label>@CashManagement:NameKanaJBAFormat_JP</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankAccountNameKanaValidation_JBA_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccountNameKanaCanUseComma_JBA_JP</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ImportListOfBanks_RU</Name>
			<Label>@CashManagement:ImportListOfBanks</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ERModelMappingID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ImportedPaymentJournalName_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>LedgerJournalNameId</ExtendedDataType>
			<Label>@SYS23060</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowBankLedgerCheck</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>BankCheque</ConfigurationKey>
			<Label>@SYS92825</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowCheckReuse</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>CA,US</CountryRegionCodes>
			<Label>@SYS93953</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AllowedReconciliationMatchingMaxDiffDays</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankReconciliationMatchingMaxDiffDays</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowInactiveBankPrenote</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Prenotes</ConfigurationKey>
			<Label>@SYS127528</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowPaymentCopies</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AllowPaymentCopies</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankLCExportEnable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankLCExportEnable</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankLCImportChargeEnable_SA</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankLCImportChargeEnable_SA</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankLCImportEnable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankLCImportEnable</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankLGEnable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankLGEnable</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankLGJournalName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankLGLedgerJournalNameId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankStatementShowDrCrAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankStatementShowDrCrAmount</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckReconciliationMatchingDiffDays</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS222641</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckReconciliationMatchingTransType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS222643</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreditLimitTolerance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CreditLimitTolerance</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CurrCodeControl_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrCodeControl_W</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnablePDC</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerPostDatedChecks</ConfigurationKey>
			<Label>@SYS322512</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExchDiffCalcType_PL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>PL,HU</CountryRegionCodes>
			<EnumType>PlExchDiffCalcType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GeneralJournalNamePDC</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerPostDatedChecks</ConfigurationKey>
			<ExtendedDataType>LedgerJournalNameId</ExtendedDataType>
			<Label>@SYS322478</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>GiroAccountValidationEnabled_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankGiroAccountValidationEnabled_W</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>IssueClearingPDC</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerPostDatedChecks</ConfigurationKey>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS322449</Label>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NSFTransactionType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankTransactionType</ExtendedDataType>
			<Label>@SYS24086</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostTransPDC</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerPostDatedChecks</ConfigurationKey>
			<Label>@SYS322500</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReceiptClearingPDC</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerPostDatedChecks</ConfigurationKey>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS322446</Label>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RequireChequeReversalJour</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS114145</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RequireChequeReversalReason</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS114147</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RequireDepositCancelJour</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS114146</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RequireDepositCancelReason</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS114148</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendPaymentJournalPDC</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerPostDatedChecks</ConfigurationKey>
			<ExtendedDataType>LedgerJournalNameId</ExtendedDataType>
			<Label>@SYS322450</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WHTClearingPDC</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerPostDatedChecks</ConfigurationKey>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS330988</Label>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankAccountNameKanaCanUseComma_JBA_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankAccountNameKanaCanUseComma_JBA_JP</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankAccountNameKanaValidation_JBA_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BankAccountNameKanaValidation_JBA_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LoadReconciliationWorksheetExtensible</Name>
			<HelpText>@CashManagement:LoadReconciliationWorksheetExtensibleHelpText</HelpText>
			<IsObsolete>Yes</IsObsolete>
			<Label>@CashManagement:ReconciliationWorksheetExtensibilityLoad</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ERModelMappingID</Name>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>ERModelMappingID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxEnablePDCConditionalTax</Name>
			<ExtendedDataType>TaxEnablePDCConditionalTax</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowBankCurrencyReval</Name>
			<Label>@CashManagement:BankCurrencyRevalEnable</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowEditBankAccountStatement</Name>
			<HelpText>@CashManagement:AllowEditBankStatementDateHelpText</HelpText>
			<Label>@CashManagement:AllowEditBankStatementDate</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankReconciliationMatchDuplicates</Name>
			<HelpText>@CashManagement:BankReconciliationMatchDuplicatesFeatureSummary</HelpText>
			<Label>@CashManagement:BankReconciliationMatchDuplicates</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowCreateBlankStatusChecks</Name>
			<Label>@CashManagement:BankBlankStatusChequesCreate</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BookingDateAsDefaultAccountingDate</Name>
			<FeatureClass>BankStatementPostPerLineFeature</FeatureClass>
			<Label>@CashManagement:StatementBookingDateAsDefaultAccountingDate</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowBlankBankStatement</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@CashManagement:AllowEmptyBankStatementWhenMarkedAsReconciledHelpText</HelpText>
			<Label>@CashManagement:AllowEmptyBankStatementWhenMarkedAsReconciled</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CheckNumberInterval</Name>
			<ExtendedDataType>BankChequeQty</ExtendedDataType>
			<FeatureClass>BankChequeSequenceValidationFeature</FeatureClass>
			<HelpText>@CashManagement:BankChequeNumberIntervalHelpText</HelpText>
			<Label>@CashManagement:BankChequeNumberInterval</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckNumberValidation</Name>
			<FeatureClass>BankChequeSequenceValidationFeature</FeatureClass>
			<HelpText>@CashManagement:BankChequeNumberValidationHelpText</HelpText>
			<Label>@CashManagement:BankChequeNumberValidation</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DueDateCalc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<HelpText>@AccountsReceivable:DueDateCalculationHelpText</HelpText>
			<Label>@AccountsReceivable:ConsolidatedDateRoundingPaymentsTabBankParameters</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SkipThirdPartyBankValidation</Name>
			<FeatureClass>PaymentRequestRecepientBankAccountCorrectionFlight</FeatureClass>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExchAdjRateSource</Name>
			<FeatureClass>BankRevalExchRateTypeEnhancementFeature</FeatureClass>
			<EnumType>BankRevalExchRateSource</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AccountingCurrencyExchangeRateType</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<FeatureClass>BankRevalExchRateTypeEnhancementFeature</FeatureClass>
			<Label>@Ledger:DefaultExchangeRateType</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReportingCurrencyExchangeRateType</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<FeatureClass>BankRevalExchRateTypeEnhancementFeature</FeatureClass>
			<Label>@Ledger:ReportingCurrencyExchangeRateType</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BridgedTransClearingJournalName</Name>
			<ExtendedDataType>LedgerJournalNameId</ExtendedDataType>
			<FeatureClass>BankBridgedTransAutoClearingFeature</FeatureClass>
			<Label>@Bank:BankClearingJournalName</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DefaultBridgedAutoClearTopPickBatchTasks</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
			<FeatureClass>BankBridgedTransAutoClearingFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnablePettyCash</Name>
			<FeatureClass>PettyCashFeature</FeatureClass>
			<Label>@CashManagement:EnablePettyCash</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowNettingIntercompany</Name>
			<Label>@CashManagement:AllowInterCompanyNetting</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankModernReconciliationUpgradeWizardExecutionStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<FeatureClass>BankModernReconciliationFeature</FeatureClass>
			<Visible>No</Visible>
			<EnumType>BankModernReconciliationUpgradeWizardExecutionStatus</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Key</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IssueClearingPDCIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>IssueClearingPDC</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReceiptClearingPDCIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ReceiptClearingPDC</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DimensionAttributeValueCombinationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WHTClearingPDC</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankTransType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BankTransType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NSFTransactionType</Name>
					<SourceEDT>BankTransactionType</SourceEDT>
					<Field>NSFTransactionType</Field>
					<RelatedField>BankTransType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransType</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ImportedPaymentJournal_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerJournalName</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>JournalType_Extern</Name>
					<RelatedField>JournalType</RelatedField>
					<ValueStr>LedgerJournalType::Daily</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ImportedPaymentJournalName_RU</Name>
					<SourceEDT>LedgerJournalNameId</SourceEDT>
					<Field>ImportedPaymentJournalName_RU</Field>
					<RelatedField>JournalName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IssueClearingPDC</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination_3</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerParameters</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>IssueClearingPDC</Name>
					<Field>IssueClearingPDC</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LedgerJournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerJournalName</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerJournalName_Table</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerJournalName_BankParameters</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>FixedOffsetAccount_Extern</Name>
					<RelatedField>FixedOffsetAccount</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>OffsetAccountType_Extern</Name>
					<RelatedField>OffsetAccountType</RelatedField>
					<ValueStr>LedgerJournalACType::Ledger</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>JournalType_Extern</Name>
					<RelatedField>JournalType</RelatedField>
					<ValueStr>LedgerJournalType::Daily</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankLGJournalName</Name>
					<SourceEDT>BankLGLedgerJournalNameId</SourceEDT>
					<Field>BankLGJournalName</Field>
					<RelatedField>JournalName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerJournalName_GeneralJournalNamePDC</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LedgerJournalName</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerJournalName_GeneralJournalNamePDC</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GeneralJournalNamePDC</Name>
					<SourceEDT>LedgerJournalNameId</SourceEDT>
					<Field>GeneralJournalNamePDC</Field>
					<RelatedField>JournalName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>JournalNameIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerJournalName_VendPaymentJournalPDC</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LedgerJournalName</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerJournalName_VendPaymentJournalPDC</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendPaymentJournalPDC</Name>
					<SourceEDT>LedgerJournalNameId</SourceEDT>
					<Field>VendPaymentJournalPDC</Field>
					<RelatedField>JournalName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>JournalNameIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReceiptClearingPDC</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination_2</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerParameters</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReceiptClearingPDC</Name>
					<Field>ReceiptClearingPDC</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHTClearingPDC</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination_WHT</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerParameters</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WHTClearingPDC</Name>
					<Field>WHTClearingPDC</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ERModelMappingTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ERModelMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ERModelMappingID</Name>
					<Field>ERModelMappingID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>AccountingCurrencyExchangeRateType</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ExchangeRateType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountingCurrencyExchangeRateType</Name>
					<Field>AccountingCurrencyExchangeRateType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ReportingCurrencyExchangeRateType</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ExchangeRateType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReportingCurrencyExchangeRateType</Name>
					<Field>ReportingCurrencyExchangeRateType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>BridgedTransClearingJournalName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerJournalName</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BridgedTransClearingJournalName</Name>
					<Field>BridgedTransClearingJournalName</Field>
					<RelatedField>JournalName</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>