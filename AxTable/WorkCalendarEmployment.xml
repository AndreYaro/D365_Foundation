<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WorkCalendarEmployment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WorkCalendarEmployment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByEmploymentRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>WorkCalendarEmployment</c> table by using the specified employment value.
    /// </summary>
    /// <param name="_employmentRecId">
    /// The record ID of the related employment record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use on the table; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>WorkCalendarEmployment</c> table.
    /// </returns>
    public static WorkCalendarEmployment findByEmploymentRecId(
        HcmEmploymentRecId          _employmentRecId,
        boolean                     _forUpdate = false,
        ConcurrencyModel            _concurrencyModel = ConcurrencyModel::Auto)
    {
        WorkCalendarEmployment workCalendarEmployment;

        workCalendarEmployment.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            workCalendarEmployment.concurrencyModel(_concurrencyModel);
        }

        select firstonly workCalendarEmployment
            where workCalendarEmployment.Employment == _employmentRecId;

        return workCalendarEmployment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCalendarIdSMA</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ID of the calendar that is assigned to an employee.
    /// </summary>
    /// <param name="_hcmPersonnelNumberId">
    ///    The personnel number ID of the worker.
    /// </param>
    /// <returns>
    ///    The ID of the calendar.
    /// </returns>
    /// <remarks>
    ///    If a calendar is not assigned to the specified employee, the calendar from the service parameters
    ///    is taken.
    /// </remarks>
    public static CalendarId findCalendarIdSMA(HcmPersonnelNumberId _hcmPersonnelNumberId)
    {
        HcmWorker               hcmWorker;
        HcmEmployment           hcmEmployment;
        WorkCalendarEmployment  workCalendarEmployment;

        select firstonly CalendarId from workCalendarEmployment
        join   recid from hcmEmployment
            where   hcmEmployment.RecId          == workCalendarEmployment.Employment
            &&      hcmEmployment.LegalEntity    == CompanyInfo::current()
        join   recid from hcmWorker
            where   hcmEmployment.Worker         == hcmWorker.RecId
            &&      hcmWorker.PersonnelNumber    == _hcmPersonnelNumberId;

        CalendarId ret;

        ret = workCalendarEmployment.CalendarId;
        if (!ret)
        {
            SMAParameters parameters;

            parameters  = SMAParameters::find();
            ret         = parameters.CalendarId;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        if (_fieldIdToCheck == fieldNum(WorkCalendarEmployment, CalendarId))
        {
            changecompany(this.CalendarDataAreaId)
            {
                ret = super(_fieldIdToCheck);
            }
        }
        else
        {
            ret = super(_fieldIdToCheck);
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByWorkerRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>WorkCalendarEmployment</c> for the specified worker as of a specific date in a
    /// specific legal entity.
    /// </summary>
    /// <param name = "_workerRecId">The record ID of the worker record.</param>
    /// <param name = "_validFrom">The valid from date of the worker employment.</param>
    /// <param name = "_legalEntityRecId">The record ID of the legal entity of the worker employment.</param>
    /// <param name = "_forUpdate">A boolean value that specifies whether to read the record for update.</param>
    /// <param name = "_concurrencyModel">The concurrency model option to use on the table.</param>
    /// <returns>The <c>WorkCalendarEmployment</c> record.</returns>
    public static WorkCalendarEmployment findByWorkerRecId(
        HcmWorkerRecId   _workerRecId,
        utcdatetime      _validFrom,
        CompanyInfoRecId _legalEntityRecId = CompanyInfo::current(),
        boolean          _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        HcmEmployment employment = HcmEmployment::findByWorkerLegalEntity(
            _workerRecId,
            _legalEntityRecId,
            _validFrom);
        WorkCalendarEmployment workCalendarEmployment = WorkCalendarEmployment::findByEmploymentRecId(
            employment.RecId,
            _forUpdate,
            _concurrencyModel);
        return workCalendarEmployment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCalendar</Name>
				<Source><![CDATA[
    private boolean validateCalendar()
    {
        boolean isValid;
        if (this.CalendarId)
        {
            changecompany(this.CalendarDataAreaId)
            {
                isValid = WorkCalendarTable::checkExist(this.CalendarId);
            }
        }
        else
        {
            // Calendar ID is not mandatory, return status as valid
            isValid = true;
        }
        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCalendarDataArea</Name>
				<Source><![CDATA[
    private boolean validateCalendarDataArea()
    {
        boolean isValid = true;
        HcmEmployment employment = HcmEmployment::find(this.Employment);

        if (this.CalendarDataAreaId != CompanyInfo::getDataArea(employment.LegalEntity))
        {
            isValid = checkFailed("@SCM:WorkCalendarEmployment_CalendarCompanyMismatch");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (this.CalendarDataAreaId)
        {
            ret = this.validateCalendarDataArea()
                && this.validateCalendar();
        }
        else if (this.CalendarId && !this.CalendarDataAreaId)
        {
            ret = checkFailed("@SYS84753", fieldPName(WorkCalendarEmployment, CalendarDataAreaId));
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS315843</DeveloperDocumentation>
	<FormRef>HcmWorker</FormRef>
	<Label>@SYS315844</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Employment</TitleField1>
	<TitleField2>CalendarId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProductionControl</Modules>
	<ReplacementKey>Employment_AK</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalendarDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalendarId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Employment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Calendar</Name>
			<Label>@SYS11839</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalendarDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalendarId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS40133</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WorkerAffiliation</Name>
			<Label>@SYS304583</Label>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CalendarDataAreaId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CalendarId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalendarId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Employment</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmEmploymentRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Employment_AK</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Employment</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>Calendar</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CalendarDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CalendarId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmEmployment_FK</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>HcmEmployment</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Employment</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Employment_WorkCalendarEmployment</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Employment</Name>
					<Field>Employment</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkCalendarTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WorkCalendarTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>WorkCalendarTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WorkCalendarTable_WorkCalendarWorkerAffiliation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CalendarDataAreaId</Name>
					<Field>CalendarDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CalendarId</Name>
					<SourceEDT>CalendarId</SourceEDT>
					<Field>CalendarId</Field>
					<RelatedField>CalendarId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CalendarIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>