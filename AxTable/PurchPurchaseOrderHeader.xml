<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchPurchaseOrderHeader</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchPurchaseOrderHeader extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amountCur2Euro</Name>
				<Source><![CDATA[
    private AmountCur  amountCur2Euro(VendPurchOrderJour _vendPurchOrderJour, AmountCur _amountCur)
    {
        if (this.CurrencyCodeEuro == '' || _amountCur == 0)
        {
            return 0;
        }

        return CurrencyExchangeHelper::curAmount(CurrencyExchangeHelper::mstAmount(_amountCur, this.CurrencyCode, this.PurchOrderDate, Currency::noYes2UnknownNoYes(_vendPurchOrderJour.Triangulation), _vendPurchOrderJour.ExchRate, _vendPurchOrderJour.ExchRateSecondary), this.CurrencyCodeEuro, this.PurchOrderDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountCur2EuroPurchConfReqJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates and converts passed in using taxes from <c>PurchConfirmationRequestJour</c> table record.
    /// </summary>
    /// <param name="_purchConfirmationRequestJour">
    /// The <c>PurchConfirmationRequestJour</c> table record where information about fixed exchange rates are stored.
    /// </param>
    /// <param name="_amountCur">
    /// The <c>AmountCur</c> value which should be converted.
    /// </param>
    /// <returns>
    /// Converted <c>AmountCur</c> value.
    /// </returns>
    private AmountCur amountCur2EuroPurchConfReqJour(PurchConfirmationRequestJour _purchConfirmationRequestJour, AmountCur _amountCur)
    {
        if (this.CurrencyCodeEuro == '' || _amountCur == 0)
        {
            return 0;
        }

        return CurrencyExchangeHelper::curAmount(CurrencyExchangeHelper::mstAmount(_amountCur, this.CurrencyCode, this.PurchOrderDate, Currency::noYes2UnknownNoYes(_purchConfirmationRequestJour.Triangulation), _purchConfirmationRequestJour.ExchRate, _purchConfirmationRequestJour.ExchRateSecondary), this.CurrencyCodeEuro, this.PurchOrderDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateEuroAmounts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the amounts for the specific Euro fields from the amounts in transaction currency.
    /// </summary>
    /// <param name="_vendPurchOrderJour">
    /// The <c>VendPurchOrderJour</c> table record where information about fixed exchange rates are stored.
    /// </param>
    public void calculateEuroAmounts(VendPurchOrderJour _vendPurchOrderJour)
    {
        this.SalesOrderBalanceEuro      = this.amountCur2Euro(_vendPurchOrderJour, this.SalesOrderBalance);
        this.EndDiscEuro                = this.amountCur2Euro(_vendPurchOrderJour, this.EndDisc);
        this.SumMarkupEuro              = this.amountCur2Euro(_vendPurchOrderJour, this.SumMarkup);
        this.SumTaxEuro                 = this.amountCur2Euro(_vendPurchOrderJour, this.SumTax);
        this.RoundOffEuro               = this.amountCur2Euro(_vendPurchOrderJour, this.RoundOff);
        this.AmountEuro                 = this.amountCur2Euro(_vendPurchOrderJour, this.Amount);

        if (this.PrintTaxFreeBalance == NoYes::Yes)
        {
            this.NetAmountEuro              = this.amountCur2Euro(_vendPurchOrderJour, this.NetAmount);
            this.TaxFreeBalanceEuro         = this.amountCur2Euro(_vendPurchOrderJour, this.TaxFreeBalance);
            this.TaxableBalanceEuro         = this.amountCur2Euro(_vendPurchOrderJour, this.TaxableBalance);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateEuroAmountsPurchConfReqJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the amounts for the specific Euro fields from the amounts in transaction currency.
    /// </summary>
    /// <param name="_purchConfirmationRequestJour">
    /// The <c>PurchConfirmationRequestJour</c> table record where information about fixed exchange rates are stored.
    /// </param>
    public void calculateEuroAmountsPurchConfReqJour(PurchConfirmationRequestJour _purchConfirmationRequestJour)
    {
        this.SalesOrderBalanceEuro      = this.amountCur2EuroPurchConfReqJour(_purchConfirmationRequestJour, this.SalesOrderBalance);
        this.EndDiscEuro                = this.amountCur2EuroPurchConfReqJour(_purchConfirmationRequestJour, this.EndDisc);
        this.SumMarkupEuro              = this.amountCur2EuroPurchConfReqJour(_purchConfirmationRequestJour, this.SumMarkup);
        this.SumTaxEuro                 = this.amountCur2EuroPurchConfReqJour(_purchConfirmationRequestJour, this.SumTax);
        this.RoundOffEuro               = this.amountCur2EuroPurchConfReqJour(_purchConfirmationRequestJour, this.RoundOff);
        this.AmountEuro                 = this.amountCur2EuroPurchConfReqJour(_purchConfirmationRequestJour, this.Amount);

        if (this.PrintTaxFreeBalance == NoYes::Yes)
        {
            this.NetAmountEuro              = this.amountCur2EuroPurchConfReqJour(_purchConfirmationRequestJour, this.NetAmount);
            this.TaxFreeBalanceEuro         = this.amountCur2EuroPurchConfReqJour(_purchConfirmationRequestJour, this.TaxFreeBalance);
            this.TaxableBalanceEuro         = this.amountCur2EuroPurchConfReqJour(_purchConfirmationRequestJour, this.TaxableBalance);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculcateJournalizedTaxBalances</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the taxable and tax free amounts for journalized purchase orders.
    /// </summary>
    /// <param name="_vendPurchOrderJour">
    /// The <c>VendPurchOrderJour</c> table record that is used for calculating the tax amounts.
    /// </param>
    public void calculcateJournalizedTaxBalances(VendPurchOrderJour _vendPurchOrderJour)
    {
        this.calculcateTaxBalances(_vendPurchOrderJour.taxableBalance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculcateProformaTaxBalances</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the taxable and tax free amounts for pro forma purchase orders.
    /// </summary>
    /// <param name="_vendPurchOrderJour">
    /// The <c>VendPurchOrderJour</c> table record that is used for calculating the tax amounts.
    /// </param>
    /// <param name="_tmpTaxWorkTrans">
    /// The <c>TmpTaxWorkTrans</c> temporary table record where temporary tax calculations are stored.
    /// </param>
    public void calculcateProformaTaxBalances(VendPurchOrderJour _vendPurchOrderJour, TmpTaxWorkTrans _tmpTaxWorkTrans)
    {
        this.calculcateTaxBalances(_vendPurchOrderJour.taxableBalance(_tmpTaxWorkTrans));
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculcatePurchConfReqTaxBalances</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the taxable and tax free amounts for journalized purchase orders confirmation.
    /// </summary>
    /// <param name="_purchConfirmationRequestJour">
    /// The <c>PurchConfirmationRequestJour</c> table record that is used for calculating the tax amounts.
    /// </param>
    public void calculcatePurchConfReqTaxBalances(PurchConfirmationRequestJour _purchConfirmationRequestJour)
    {
        this.calculcateTaxBalances(_purchConfirmationRequestJour.taxableBalance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculcateTaxBalances</Name>
				<Source><![CDATA[
    private void calculcateTaxBalances(TaxAmountCur _taxableBalance)
    {
        this.TaxableBalance         = _taxableBalance;
        this.TaxFreeBalance         = this.NetAmount - this.TaxableBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCompanyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>PurchPurchaseOrderHeader</c> table record with the values from a <c>CompanyInfo</c> table record.
    /// </summary>
    /// <param name="_companyInfo">
    /// The <c>CompanyInfo</c> table record.
    /// </param>
    public void initFromCompanyInfo(CompanyInfo _companyInfo)
    {
        this.CurrencyCodeCompany           = Ledger::accountingCurrency(_companyInfo.RecId);
        if (this.PrePrintLevel == PrePrintLevel::BlankPaper)
        {
            this.initFromCompanyInfoOnBlankPaper(_companyInfo);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCompanyInfoOnBlankPaper</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>PurchPurchaseOrderHeader</c> table record with the values from a <c>CompanyInfo</c> table record when printing on blank paper.
    /// </summary>
    /// <param name="_companyInfo">
    /// The <c>CompanyInfo</c> table record.
    /// </param>
    public void initFromCompanyInfoOnBlankPaper(CompanyInfo _companyInfo)
    {
        #ISOCountryRegionCodes

        this.CompanyName                = _companyInfo.name();
        this.CompanyAddress             = _companyInfo.postalAddress().Address;
        this.CompanyPhone               = _companyInfo.phone();
        this.CompanyTeleFax             = _companyInfo.teleFax();
        this.CompanyGiro                = _companyInfo.Giro;
        this.CompanyCoRegNum            = _companyInfo.CoRegNum;
        this.CompanyEnterpriseNumber    = _companyInfo.getPrimaryRegistrationNumber(TaxRegistrationTypesList::UID, this.PurchOrderDate);
        this.CompanyLogo                = FormLetter::companyLogo();
        this.ShowCompanyVATNum          = VendFormletterParameters::find().PrintPurchOrderVATNum;
        this.CompanyVATNum              = TaxRegistration::getCompanyTaxRegNum_W(this.PurchOrderDate);

        if (conLen(this.CompanyLogo) > 0)
        {
            this.PrintLogo             = NoYes::Yes;
        }

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]))
        {
            this.CompanyRegNum    = _companyInfo.RegNum;
            this.CompanyEmail     = _companyInfo.email();

            this.RegNumCompaniesFieldMap::initCommercialRegisterFromTaxRegistration(_companyInfo, this.PurchOrderDate);

            BankAccountTable companyBankAccount = BankAccountTable::find(_companyInfo.Bank);

            if (companyBankAccount)
            {
                this.CompanyBankAccountName = companyBankAccount.Name;
                this.CompanyBankAccountNum = hasFieldAccess(tableNum(BankAccountTable), fieldNum(BankAccountTable, AccountNum))
                    ? companyBankAccount.AccountNum
                    : "@AccountsReceivable:FiveAsterisk";
                this.CompanyBankAccountRoutingNum = companyBankAccount.RegistrationNum;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromFormLetterRemarks</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>PurchPurchaseOrderHeader</c> table record with the values from a <c>FormLetterRemarks</c> table record.
    /// </summary>
    /// <param name="_formLetterRemarks">
    /// The <c>FormLetterRemarks</c> table record.
    /// </param>
    public void initFromFormLetterRemarks(FormLetterRemarks _formLetterRemarks)
    {
        this.FormLetterRemarksTxt       = _formLetterRemarks.Txt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchConfirmationRequestJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates current <c>PurchPurchaseOrderHeader</c> record using data from passed in <c>PurchConfirmationRequestJour</c> table record.
    /// </summary>
    /// <param name="_purchConfirmationRequestJour">
    /// The <c>PurchConfirmationRequestJour</c> table record.
    /// </param>
    public void initFromPurchConfirmationRequestJour(PurchConfirmationRequestJour _purchConfirmationRequestJour)
    {
        VendFormletterDocument      vendFormletterDocument = VendFormletterDocument::find();

        this.PurchId                    = _purchConfirmationRequestJour.getPurchaseOrderId();
        this.PurchOrderDocNum           = _purchConfirmationRequestJour.DocumentNumber;
        this.PurchOrderDate             = _purchConfirmationRequestJour.DocumentDate;
        this.DeliveryName               = _purchConfirmationRequestJour.DeliveryName;
        this.DeliveryAddress            = _purchConfirmationRequestJour.deliveryAddress().Address;
        this.IsPrepay                   = _purchConfirmationRequestJour.IsPrepay;

        this.EnableAmountControls       = _purchConfirmationRequestJour.AmountPurchaseOrder;

        if (this.EnableAmountControls)
        {
            this.SalesOrderBalance          = _purchConfirmationRequestJour.OrderBalance;
            this.EndDisc                    = _purchConfirmationRequestJour.EndDisc;
            this.SumMarkup                  = _purchConfirmationRequestJour.SumMarkup;
            this.SumTax                     = _purchConfirmationRequestJour.SumTax;
            this.RoundOff                   = _purchConfirmationRequestJour.RoundOff;
            this.Amount                     = _purchConfirmationRequestJour.Amount;

            if (this.PrintTaxFreeBalance == NoYes::Yes)
            {
                this.NetAmount              = _purchConfirmationRequestJour.netAmount();
            }
        }

        this.initFromCompanyInfo(_purchConfirmationRequestJour.companyInfo());

        if ((vendFormletterDocument.DocuOnPurchOrderConfirmationRequest == DocuOnFormular::Head)
         || (vendFormletterDocument.DocuOnPurchOrderConfirmationRequest == DocuOnFormular::All))
        {
            this.Notes = Docu::concatDocuRefNotes(
                DocuRefSearch::newTypeIdAndRestriction(_purchConfirmationRequestJour,
                    vendFormletterDocument.DocuTypePurchOrderConfirmationRequest,
                    DocuRestriction::External));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchTableAllVersions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>PurchPurchaseOrderHeader</c> table record with the values from a <c>PurchTableAllVersions</c> table record.
    /// </summary>
    /// <param name="_purchTableAllVersions">
    /// The <c>PurchTableAllVersions</c> table record.
    /// </param>
    /// <param name="_isPurchConfirmationRequest">
    /// true if method is being called for a purchase order confirmation request journal; otherwise false.
    /// </param>
    public void initFromPurchTableAllVersions(PurchTableAllVersions _purchTableAllVersions, boolean _isPurchConfirmationRequest = false)
    {
        this.ReqAttention               = _purchTableAllVersions.ReqAttention;
        this.DlvTerm                    = _purchTableAllVersions.DlvTerm;
        this.CurrencyCode               = _purchTableAllVersions.CurrencyCode;

        this.initFromVendTable(VendTable::find(_purchTableAllVersions.OrderAccount));
        this.initFromFormLetterRemarks(FormLetterRemarks::find(_purchTableAllVersions.LanguageId, (_isPurchConfirmationRequest ? FormTextType::PurchaseOrderConfirmationRequest : FormTextType::PurchPurchaseOrder)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendFormletterParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>PurchPurchaseOrderHeader</c> table record with the values from a <c>VendFormletterParameters</c> table record.
    /// </summary>
    /// <param name="_vendFormletterParameters">
    /// The <c>VendFormletterParameters</c> table record.
    /// </param>
    /// <param name="_isConfirmationRequest">
    /// A boolean value indicating whether it is a confirmation request journal.
    /// </param>
    public void initFromVendFormletterParameters(VendFormletterParameters _vendFormletterParameters, boolean _isConfirmationRequest = false)
    {
        this.PrintTaxFreeBalance        = _vendFormletterParameters.TaxPrintTaxFreeBalance;

        if (_isConfirmationRequest)
        {
            this.PrePrintLevel          = _vendFormletterParameters.PrePrintLevelPurchOrderConfirmation;
        }
        else
        {
            this.PrePrintLevel              = _vendFormletterParameters.PrePrintLevelPurchorder;
        }
        this.TaxSpecPrintLevel          = _vendFormletterParameters.TaxSpecPrintLevel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendPurchOrderJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>PurchPurchaseOrderHeader</c> table record with the values from a <c>VendPurchOrderJour</c> table record.
    /// </summary>
    /// <param name="_vendPurchOrderJour">
    /// The <c>VendPurchOrderJour</c> table record.
    /// </param>
    public void initFromVendPurchOrderJour(VendPurchOrderJour _vendPurchOrderJour)
    {
        VendFormletterDocument      vendFormletterDocument = VendFormletterDocument::find();

        // <GEEHU>
        #ISOCountryRegionCodes
        // </GEEHU>

        this.PurchId                    = _vendPurchOrderJour.PurchId;
        this.PurchaseOrderId            = _vendPurchOrderJour.PurchaseOrderId;
        this.PurchOrderDocNum           = _vendPurchOrderJour.PurchOrderDocNum;
        this.PurchOrderDate             = _vendPurchOrderJour.PurchOrderDate;
        this.DeliveryName               = _vendPurchOrderJour.DeliveryName;
        this.DeliveryAddress            = DirUtility::replaceAddressTokenLanguage(_vendPurchOrderJour.deliveryAddress(), _vendPurchOrderJour.purchTable().LanguageId);
        this.IsPrepay                   = _vendPurchOrderJour.IsPrepay;
        this.IsProForma                 = _vendPurchOrderJour.isProforma();

        this.EnableAmountControls       = _vendPurchOrderJour.AmountPurchaseOrder;

        if (this.EnableAmountControls)
        {
            this.SalesOrderBalance          = _vendPurchOrderJour.SalesOrderbalance;
            this.EndDisc                    = _vendPurchOrderJour.EndDisc;
            this.SumMarkup                  = _vendPurchOrderJour.SumMarkup;
            this.SumTax                     = _vendPurchOrderJour.SumTax;
            this.RoundOff                   = _vendPurchOrderJour.RoundOff;
            this.Amount                     = _vendPurchOrderJour.Amount;

            if (this.PrintTaxFreeBalance == NoYes::Yes)
            {
                this.NetAmount                  = _vendPurchOrderJour.netAmount();
            }
        }

        this.initFromCompanyInfo(
                                 _vendPurchOrderJour.companyInfo()
                                 );

        if ((vendFormletterDocument.DocuOnPurchOrder == DocuOnFormular::Head)
         || (vendFormletterDocument.DocuOnPurchOrder == DocuOnFormular::All))
        {
            this.Notes                  = Docu::concatDocuRefNotes(
                                              DocuRefSearch::newTypeIdAndRestriction(_vendPurchOrderJour,
                                                                                     vendFormletterDocument.DocuTypePurchOrder,
                                                                                     DocuRestriction::External));
        }

        // <GEEHU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]) &&
            this.CurrencyCode != this.CurrencyCodeCompany &&
            (this.TaxSpecPrintLevel == TaxSpecPrintLevel::CurrencyMST ||
            (this.TaxSpecPrintLevel == TaxSpecPrintLevel::Currency && TaxParameters::find().BankExchRate_W)))
        {
            this.PrintTaxAmountSalesExchangeRate    = NoYes::Yes;
            this.SalesTaxExchangeRate               = _vendPurchOrderJour.ExchRate;
            this.SumTaxMST                          = CurrencyExchangeHelper::mstAmount(_vendPurchOrderJour.SumTax, this.CurrencyCode, _vendPurchOrderJour.PurchOrderDate, Currency::noYes2UnknownNoYes(_vendPurchOrderJour.Triangulation), _vendPurchOrderJour.ExchRate, _vendPurchOrderJour.ExchRateSecondary);
        }
        // </GEEHU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>PurchPurchaseOrderHeader</c> table record with the values from a <c>VendTable</c> table record.
    /// </summary>
    /// <param name="_vendTable">
    /// The <c>VendTable</c> table record.
    /// </param>
    public void initFromVendTable(VendTable _vendTable)
    {
        // <GEECZ>
        #ISOCountryRegionCodes
        // </GEECZ>

        this.VendName               = _vendTable.name();
        this.VendAddress            = DirUtility::replaceAddressTokenLanguage(_vendTable.postalAddress(), _vendTable.languageId());

        // <GEECZ>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]))
        {
            this.VendRegNum      = _vendTable.getPrimaryRegistrationNumber(TaxRegistrationTypesList::UID);
            this.VendCoRegNum    = _vendTable.getPrimaryRegistrationNumber(TaxRegistrationTypesList::TAXID);
        }
        // </GEECZ>
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>PurchPurchaseOrderHeader</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>PurchPurchaseOrderHeader</c> table to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether the record is retrieved for an update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>PurchPurchaseOrderHeader</c> table; otherwise, an empty record.
    /// </returns>
    public static PurchPurchaseOrderHeader find(
        RecId   _recId,
        boolean _forUpdate = false)
    {
        PurchPurchaseOrderHeader purchPurchaseOrderHeader;

        purchPurchaseOrderHeader.selectForUpdate(_forUpdate);

        select purchPurchaseOrderHeader
            where purchPurchaseOrderHeader.RecId == _recId;

        return purchPurchaseOrderHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findJourRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>PurchPurchaseOrderHeader</c> table by <c>JournalRecId</c>.
    /// </summary>
    /// <param name="_jourRecId">
    /// The record identifier of the record to find.
    /// </param>
    /// <returns>
    /// A <c>PurchPurchaseOrderHeader</c> record if one exists; otherwise, an empty record.
    /// </returns>
    public static PurchPurchaseOrderHeader findJourRecId(RecId _jourRecId)
    {
        PurchPurchaseOrderHeader purchPurchaseOrderHeader;

        select forupdate firstonly purchPurchaseOrderHeader
            where purchPurchaseOrderHeader.JournalRecId == _jourRecId;

        return purchPurchaseOrderHeader;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS344468</DeveloperDocumentation>
	<Label>@SYS25547</Label>
	<TitleField1>PurchOrderDocNum</TitleField1>
	<TitleField2>PurchOrderDate</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<ClusteredIndex>CreatedTransactionId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>ProcurementAndSourcing</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CompanyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyPhone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyTeleFax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyGiro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyCoRegNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyLogo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyEnterpriseNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReqAttention</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchOrderDocNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchOrderDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPrepay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchaseOrderId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintLogo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Notes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FormLetterRemarksTxt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumMarkup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundOff</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderBalanceEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDiscEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumMarkupEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumTaxEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundOffEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCodeEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxFreeBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxableBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxableBalanceEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxFreeBalanceEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NetAmountEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NetAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountPrepay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCodeCompany</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrePrintLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableAmountControls</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintTaxFreeBalance</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AllFields</Name>
			<Label>@SYS25547</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CompanyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyPhone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyTeleFax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyGiro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyCoRegNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyLogo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyEnterpriseNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReqAttention</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchOrderDocNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchOrderDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPrepay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchaseOrderId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintLogo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Notes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FormLetterRemarksTxt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumMarkup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundOff</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderBalanceEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDiscEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumMarkupEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumTaxEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundOffEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCodeEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxFreeBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxableBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxableBalanceEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxFreeBalanceEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NetAmountEuro</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NetAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountPrepay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCodeCompany</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrePrintLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnableAmountControls</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintTaxFreeBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvTerm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxSpecPrintLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConfirmingPOMessage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendRegNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendCoRegNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyRegNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyEmail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyCommercialRegisterSection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyCommercialRegisterInsetNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyCommercialRegister</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyBankAccountRoutingNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyBankAccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyBankAccountName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintTaxAmountSalesExchangeRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesTaxExchangeRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumTaxMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyVATNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShowCompanyVATNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountEuro</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountPrepay</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Addressing</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyBankAccountName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyBankAccountNum</Name>
			<AosAuthorization>Yes</AosAuthorization>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>CZ</CountryRegionCodes>
			<ExtendedDataType>BankAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyBankAccountRoutingNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankRegNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyCommercialRegister</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CommercialRegister</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyCommercialRegisterInsetNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CommercialRegisterInsetNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyCommercialRegisterSection</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CommercialRegisterSection</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyCoRegNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyCoRegNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyEmail</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Email</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyEnterpriseNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxEnterpriseNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyGiro</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>GiroNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>CompanyLogo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Bitmap</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyPhone</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Phone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyRegNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyRegNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyTeleFax</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TeleFax</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConfirmingPOMessage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConfirmingPOMessage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCodeCompany</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCodeEuro</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeliveryAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Addressing</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DeliveryName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvTerm</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendDlvTermId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableAmountControls</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EndDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchEndDiscAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EndDiscEuro</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchEndDiscAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FormLetterRemarksTxt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FormLetterTxt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPrepay</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>JournalRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>NetAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCurNet</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>NetAmountEuro</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCurNet</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Notes</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Notes</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrePrintLevel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PrePrintLevel</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintLogo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintTaxAmountSalesExchangeRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintTaxFreeBalance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchaseOrderId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchaseOrderId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchIdBase</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PurchOrderDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchOrderDocNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchaseOrderId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReqAttention</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchReqAttention</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RoundOff</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RoundOff</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RoundOffEuro</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RoundOff</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesOrderBalance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesOrderBalanceEuro</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesTaxExchangeRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyExchangeRateReport</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumMarkup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupSumPurch</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumMarkupEuro</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarkupSumPurch</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumTaxEuro</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumTaxMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxableBalance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxTaxableAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxableBalanceEuro</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxTaxableAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxFreeBalance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxTaxFreeAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxFreeBalanceEuro</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxTaxFreeAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxSpecPrintLevel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxSpecPrintLevel</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Addressing</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendCoRegNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyCoRegNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendName</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendRegNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyRegNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyVATNum</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VATNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ShowCompanyVATNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Payment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPaymTermId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsProForma</Name>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JournalRecId</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CreatedTransactionId</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>CreatedTransactionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CompanyCurrency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CompanyCurrency</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchaseOrderHeader</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCodeCompany</Name>
					<Field>CurrencyCodeCompany</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Currency</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchaseOrderHeader</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EuroCurrency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>EuroCurrency</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchaseOrderHeader</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCodeEuro</Name>
					<Field>CurrencyCodeEuro</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchId</Name>
					<SourceEDT>PurchIdBase</SourceEDT>
					<Field>PurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PurchIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendPurchOrderJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendPurchOrderJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalRecId</Name>
					<Field>JournalRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PaymTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PaymTerm</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchaseOrderHeader</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Payment</Name>
					<Field>Payment</Field>
					<RelatedField>PaymTermId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TermIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>