<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkCreateHistory</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWorkCreateHistory extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayFail</Name>
				<Source><![CDATA[
	/// <summary>
	/// Method to display an image in case of failure.
	/// </summary>
	/// <returns>
	/// An image to display in case of failure.
	/// </returns>
    public display ImageRes displayFail()
    {
        #ResAppl

        return this.Fail ? #ImageStateNotAtAllOK : #ImageOverlayYes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createWorkHistoryLineFromTmpWorkLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a work creation history line record, based on the specified <c>WHSTmpWorkLine</c> record.
    /// </summary>
    /// <param name="_workBuildId">
    /// Work build id.
    /// </param>
    /// <param name="_message">
    /// Message to be written in the record.
    /// </param>
    /// <param name="_fail">
    /// Determines whether the work creation failed.
    /// </param>
    /// <param name="_tmpWorkLine">
    /// Temporary work line that represents the history line.
    /// </param>
    public static void createWorkHistoryLineFromTmpWorkLine(
        WHSWorkBuildId   _workBuildId,
        WHSMessage       _message,
        boolean          _fail,
        WHSTmpWorkLine   _tmpWorkLine)
    {
        if (_workBuildId)
        {
            _tmpWorkLine.checkInvalidFieldAccess(false);

            WHSWorkCreateHistory workCreateHistory;

            WHSWorkCreateHistory::assignWorkHistoryFieldsFromTmpWorkLine(workCreateHistory, _workBuildId, _tmpWorkLine, _message, _fail);

            WHSWorkCreationLogApplicationInsightsLogEvent::trackEvent(workCreateHistory);

            if (WHSParameters::find().isWorkCreateHistoryLogEnabled())
            {
                UserConnection conn = new UserConnection();

                try
                {
                    conn.ttsbegin();

                    workCreateHistory.setConnection(conn);
                    workCreateHistory.insert();

                    conn.ttscommit();
                }
                finally
                {
                    conn.finalize();
                }
            }
        }

        WHSLocationDirectiveAcceptanceTestContext::logIfActive(_message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignWorkHistoryFieldsFromTmpWorkLine</Name>
				<Source><![CDATA[
    [Wrappable(true)]
    protected static void assignWorkHistoryFieldsFromTmpWorkLine(
        WHSWorkCreateHistory _workCreateHistory,
        WHSWorkBuildId       _workBuildId,
        WHSTmpWorkLine       _tmpWorkLine,
        WHSMessage           _message,
        boolean              _fail)
    {
        _workCreateHistory.initWorkCreateHistoryLine(_workBuildId, _message, _fail);
        _workCreateHistory.OriginType        = _tmpWorkLine.OriginType;
        _workCreateHistory.OriginRefId       = _tmpWorkLine.OriginRefId;
        _workCreateHistory.OrderNum          = _tmpWorkLine.OrderNum;
        _workCreateHistory.ShipmentId        = _tmpWorkLine.ShipmentId;
        _workCreateHistory.LoadId            = _tmpWorkLine.LoadId;
        _workCreateHistory.InventLocationId  = _tmpWorkLine.InventLocationId;
        _workCreateHistory.ItemId            = _tmpWorkLine.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createWorkHistoryLineFromTmpWorkLineWithQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a work creation history line record, based on the specified <c>WHSTmpWorkLine</c> record including information regarding the quantity.
    /// </summary>
    /// <param name="_message">
    /// Message to be written in the record.
    /// </param>
    /// <param name="_fail">
    /// Determines whether the work creation failed.
    /// </param>
    /// <param name="_tmpWorkLine">
    /// Temporary work line that represents the history line.
    /// </param>
    [Hookable(false)]
    internal static void createWorkHistoryLineFromTmpWorkLineWithQuantity(
        WHSTmpWorkLine  _tmpWorkLine,
        WHSMessage      _message,
        boolean         _fail)
    {
        if (_tmpWorkLine.WorkCreateId)
        {
            WHSWorkCreateHistory workCreateHistory;

            WHSWorkCreateHistory::assignWorkHistoryFieldsFromTmpWorkLineWithQuantity(workCreateHistory, _tmpWorkLine, _message, _fail);

            WHSWorkCreationLogApplicationInsightsLogEvent::trackEvent(workCreateHistory);

            if (WHSParameters::find().isWorkCreateHistoryLogEnabled())
            {
                UserConnection conn = new UserConnection();

                try
                {
                    conn.ttsbegin();

                    workCreateHistory.setConnection(conn);
                    workCreateHistory.insert();

                    conn.ttscommit();
                }
                finally
                {
                    conn.finalize();
                }
            }
        }

        WHSLocationDirectiveAcceptanceTestContext::logIfActive(_message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignWorkHistoryFieldsFromTmpWorkLineWithQuantity</Name>
				<Source><![CDATA[
    [Wrappable(true)]
    protected static void assignWorkHistoryFieldsFromTmpWorkLineWithQuantity(
        WHSWorkCreateHistory _workCreateHistory,
        WHSTmpWorkLine       _tmpWorkLine,
        WHSMessage           _message,
        boolean              _fail)
    {
        _workCreateHistory.WorkBuildId       = _tmpWorkLine.WorkCreateId;
        _workCreateHistory.OriginType        = _tmpWorkLine.OriginType;
        _workCreateHistory.OriginRefId       = _tmpWorkLine.OriginRefId;
        _workCreateHistory.OrderNum          = _tmpWorkLine.OrderNum;
        _workCreateHistory.ShipmentId        = _tmpWorkLine.ShipmentId;
        _workCreateHistory.LoadId            = _tmpWorkLine.LoadId;
        _workCreateHistory.InventLocationId  = _tmpWorkLine.InventLocationId;
        _workCreateHistory.Message           = _message;
        _workCreateHistory.TransDateTime     = DateTimeUtil::utcNow();
        _workCreateHistory.ItemId            = _tmpWorkLine.ItemId;
        _workCreateHistory.Qty               = _tmpWorkLine.InventQty;
        _workCreateHistory.UnitID            = WHSCatchWeightHelper::inventHandlingUnitId(_tmpWorkLine.ItemId);
        _workCreateHistory.Fail              = _fail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createWorkHistoryLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a work creation history line record.
    /// </summary>
    /// <param name="_workBuildId">
    /// Work build id.
    /// </param>
    /// <param name="_message">
    /// Message to be written in the record.
    /// </param>
    /// <param name="_fail">
    /// Determines whether the work creation failed.
    /// </param>
    public static void createWorkHistoryLine(
        WHSWorkBuildId   _workBuildId,
        WHSMessage       _message,
        boolean          _fail)
    {
        WHSWorkCreateHistory::createAndGetWorkHistoryLine(_workBuildId, _message, _fail);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkCreateHistoryLine</Name>
				<Source><![CDATA[
    private void initWorkCreateHistoryLine(
        WHSWorkBuildId   _workBuildId,
        WHSMessage       _message,
        boolean          _fail)
    {
        this.WorkBuildId       = _workBuildId;
        this.Message           = _message;
        this.TransDateTime     = DateTimeUtil::utcNow();
        this.Fail              = _fail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAndGetWorkHistoryLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a work creation history line record.
    /// </summary>
    /// <param name="_workBuildId">
    /// Work build id.
    /// </param>
    /// <param name="_message">
    /// Message to be written in the record.
    /// </param>
    /// <param name="_fail">
    /// Determines whether the work creation failed.
    /// </param>
    /// <returns>
    /// the <c>WHSWorkCreateHistory</c> instanse of the created line.
    /// </returns>
    public static WHSWorkCreateHistory createAndGetWorkHistoryLine(
        WHSWorkBuildId   _workBuildId,
        WHSMessage       _message,
        boolean          _fail)
    {
        WHSWorkCreateHistory workCreateHistory;

        if (_workBuildId)
        {
            workCreateHistory.initWorkCreateHistoryLine(_workBuildId, _message, _fail);

            WHSWorkCreationLogApplicationInsightsLogEvent::trackEvent(workCreateHistory);

            if (WHSParameters::find().isWorkCreateHistoryLogEnabled())
            {
                UserConnection conn = new UserConnection();

                try
                {
                    conn.ttsbegin();

                    workCreateHistory.setConnection(conn);
                    workCreateHistory.insert();

                    conn.ttscommit();
                }
                finally
                {
                    conn.finalize();
                }
            }
        }

        WHSLocationDirectiveAcceptanceTestContext::logIfActive(_message);

        return workCreateHistory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4491</DeveloperDocumentation>
	<Label>@WAX1706</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>WorkBuildId</TitleField1>
	<TitleField2>OriginRefId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>WorkBuildIdIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>Inventory</Modules>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkBuildId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Message</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Fail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OriginType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkBuildId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Message</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Fail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Fail</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFail</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventStatusId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSInventStatusId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LoadId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLoadId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Message</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSMessage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrderNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSOrderNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OriginRefId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSOriginRefId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OriginType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSOriginType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProductQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipmentId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSShipmentId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>TransDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkBuildId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkBuildId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WorkBuildIdIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkBuildId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OriginIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OriginRefId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OriginType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<SourceEDT>InventLocationId</SourceEDT>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitID</Name>
					<Field>UnitID</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSInventStatus</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSInventStatus</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventStatusId</Name>
					<SourceEDT>WHSInventStatusId</SourceEDT>
					<Field>InventStatusId</Field>
					<RelatedField>InventStatusId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSLoadTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSLoadTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoadId</Name>
					<SourceEDT>WHSLoadId</SourceEDT>
					<Field>LoadId</Field>
					<RelatedField>LoadId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSShipmentTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSShipmentTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShipmentId</Name>
					<SourceEDT>WHSShipmentId</SourceEDT>
					<Field>ShipmentId</Field>
					<RelatedField>ShipmentId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>