<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventReserveInventDimEnable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSInventReserveInventDimEnable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>WHSInventReserveInventDimEnable</c> table.
    /// </summary>
    /// <param name="_forupdate">
    /// true if the record must be selected for update; otherwise, false.
    /// </param>
    /// <returns>
    /// An <c>WHSInventReserveInventDimEnable</c> record.
    /// </returns>
    public static WHSInventReserveInventDimEnable find(boolean _forupdate = false)
    {
        WHSInventReserveInventDimEnable inventReserveInventDimEnable;
        
        if (_forupdate)
        {
            inventReserveInventDimEnable.selectForUpdate(_forupdate);
        }

        select firstonly inventReserveInventDimEnable;

        return inventReserveInventDimEnable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markDataUpgradeComplete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Mark date upgrade completed for the feature.
    /// </summary>
    public static void markDataUpgradeComplete()
    {
        WHSInventReserveInventDimEnable inventReserveInventDimEnable = WHSInventReserveInventDimEnable::find(true);

        inventReserveInventDimEnable.HasDataUpgradeCompleted = NoYes::Yes;
        
        ttsbegin;

        inventReserveInventDimEnable.write();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markDataUpgradeIncomplete</Name>
				<Source><![CDATA[
    public static void markDataUpgradeIncomplete()
    {
        WHSInventReserveInventDimEnable inventReserveInventDimEnable = WHSInventReserveInventDimEnable::find(true);

        if (inventReserveInventDimEnable.RecId)
        {
            inventReserveInventDimEnable.HasDataUpgradeCompleted = NoYes::No;
  
            ttsbegin;

            inventReserveInventDimEnable.update();

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasDataUpgradeCompleted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if the data upgrade has been completed.
    /// </summary>
    /// <returns>True if data upgrade has been completed; otherwise, false.</returns>
    public static boolean hasDataUpgradeCompleted()
    {
        WHSInventReserveInventDimEnable inventReserveInventDimEnable = WHSInventReserveInventDimEnable::find();
        return inventReserveInventDimEnable.HasDataUpgradeCompleted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WHSInventReserveInventDimEnableDevDoc</DeveloperDocumentation>
	<Label>@WAX:WHSInventReserveInventDimEnable</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Parameter</TableGroup>
	<Visible>No</Visible>
	<CacheLookup>EntireTable</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HasDataUpgradeCompleted</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>