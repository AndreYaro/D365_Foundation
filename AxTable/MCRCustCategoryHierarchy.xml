<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRCustCategoryHierarchy</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRCustCategoryHierarchy extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified category hierarchy in the <c>MCRCustCategoryHierarchy</c> table
    ///    by hierarchy ID.
    /// </summary>
    /// <param name="_ecoResCategoryHierarchyId">
    ///    The category hierarchy ID in the <c>EcoResCategoryHierarchy</c> table to retrieve.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record from the <c>MCRCustCategoryHierarchy</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static MCRCustCategoryHierarchy find(EcoResCategoryHierarchyId _ecoResCategoryHierarchyId, boolean _forUpdate = false)
    {
        MCRCustCategoryHierarchy    mcrCustCategoryHierarchy = null;

        if (_ecoResCategoryHierarchyId)
        {
            mcrCustCategoryHierarchy.selectForUpdate(_forUpdate);
            select mcrCustCategoryHierarchy where mcrCustCategoryHierarchy.RecId == _ecoResCategoryHierarchyId;
        }

        return mcrCustCategoryHierarchy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified category hierarchy name in the <c>EcoResCategoryHierarchy</c> table.
    /// </summary>
    /// <param name="_ecoResCategoryHierarchyName">
    ///    The category hierarchy name in the <c>EcoResCategoryHierarchy</c> table to retrieve.
    /// </param>
    /// <param name="_forUpdate">
    ///    A <c>boolean</c> value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record from the <c>MCRCustCategoryHierarchy</c> table if found; otherwise, an empty buffer.
    /// </returns>
    public static MCRCustCategoryHierarchy findByName(EcoResCategoryHierarchyName _ecoResCategoryHierarchyName, boolean _forUpdate = false)
    {
        MCRCustCategoryHierarchy    mcrCustCategoryHierarchy = null;

        mcrCustCategoryHierarchy.selectForUpdate(_forUpdate);

        if (_ecoResCategoryHierarchyName)
        {
            select mcrCustCategoryHierarchy
                where mcrCustCategoryHierarchy.Name == _ecoResCategoryHierarchyName;
        }

        return mcrCustCategoryHierarchy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateCategoryHierarchy</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the category hierarchy that is associated with the product configuration or creates one if it does not exist.
    /// </summary>
    /// <param name="_ecoResCategoryHierarchyName">
    ///    The category hierarchy name in the <c>EcoResCategoryHierarchy</c> table to retrieve if it exists.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    The <c>MCRCustCategoryHierarchy</c> record of the category hierarchy that is associated with the product configuration.
    /// </returns>
    public static MCRCustCategoryHierarchy findOrCreateCategoryHierarchy(
            EcoResCategoryHierarchyName _ecoResCategoryHierarchyName,
            boolean                     _forUpdate = false )
    {
        MCRCustCategoryHierarchy mcrCustCategoryHierarchy;

        mcrCustCategoryHierarchy = MCRCustCategoryHierarchy::findByName(_ecoResCategoryHierarchyName, _forUpdate);

        if (mcrCustCategoryHierarchy.RecId != 0)
        {
            return mcrCustCategoryHierarchy;
        }
        else
        {
            ttsbegin;
            mcrCustCategoryHierarchy.Name = _ecoResCategoryHierarchyName;

            if (mcrCustCategoryHierarchy.validateWrite())
            {
                mcrCustCategoryHierarchy.insert();
            }
            else
            {
                throw error("@SYS104318");
            }
            ttscommit;

            mcrCustCategoryHierarchy.selectForUpdate(_forUpdate);

            return mcrCustCategoryHierarchy;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupNames</Name>
				<Source><![CDATA[
    /// <summary>
    /// Lists the <c>Name</c> field of all records in the <c>MCRCustCategoryHierarchy</c> table.
    /// </summary>
    /// <param name="_ctrl">
    /// The calling form control.
    /// </param>
    public static void lookupNames(FormStringControl _ctrl)
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(MCRCustCategoryHierarchy), _ctrl);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource;

        sysTableLookup.addLookupfield(fieldNum(MCRCustCategoryHierarchy, Name));

        queryBuildDataSource = query.addDataSource(tableNum(MCRCustCategoryHierarchy));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TAMPromotionsManagement</ConfigurationKey>
	<DeveloperDocumentation>@MCR39228</DeveloperDocumentation>
	<FormRef>MCRCustCategoryHierarchy</FormRef>
	<Label>@MCR39228</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>dataAreaId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>SalesAndMarketing</Modules>
	<ReplacementKey>NameIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS104259</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategoryHierarchyName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>