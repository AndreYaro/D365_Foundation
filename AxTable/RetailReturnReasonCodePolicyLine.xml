<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailReturnReasonCodePolicyLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailReturnReasonCodePolicyLine extends RetailReturnPolicyLine
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkIsNotDuplicate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if there is no record with the same key fields.
    /// </summary>
    /// <returns>
    ///    Yrue if the specified record doesn't exist; otherwise, false.
    /// </returns>
    public boolean checkIsNotDuplicate()
    {
        RetailReturnReasoncodePolicyLine retailReturnReasoncodePolicyLine;

        select firstonly RecId, Policy from retailReturnReasoncodePolicyLine
            where retailReturnReasoncodePolicyLine.Policy           == this.Policy
               && retailReturnReasoncodePolicyLine.ReasonCodeId     == this.ReasonCodeId
               && retailReturnReasoncodePolicyLine.RetailStoreTable == this.RetailStoreTable
               && retailReturnReasoncodePolicyLine.RecId            != this.RecId;

        if (retailReturnReasoncodePolicyLine.RecId)
        {
            return checkFailed(strFmt('%1, %2. %3', retailReturnReasoncodePolicyLine.Policy, this.ReasonCodeId, "@SYS126563"));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(RetailReturnReasonCodePolicyLine, ReasonCodeId):
                    ret = this.validateReasonCode();
                    break;
                default:
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateReasonCode</Name>
				<Source><![CDATA[
    private boolean validateReasonCode()
    {
        boolean ret = true;

        if (this.ReasonCodeId && !ReturnReasonCode::exist(this.ReasonCodeId))
        {
            ret = checkFailed(strFmt("@REX4161301", this.ReasonCodeId, fieldStr(RetailReturnReasonCodePolicyLine, ReasonCodeId), tableStr(ReturnReasonCode)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds return reason code policy line by its rec id and return reason code id.
    /// </summary>
    /// <param name="_policyRefRecId">
    ///     RecId
    /// </param>
    /// <param name="_reasonCodeId">
    ///     Return reason code id
    /// </param>
    /// <param name="_retailStoreTableRecId">
    ///     <c>RetailStoreTable</c> record RecId
    /// </param>
    /// <param name="_forUpdate">
    ///     True, if the record should be selected for update; false - otherwise.
    /// </param>
    /// <returns>
    ///     Return reason code policy line record.
    /// </returns>
    static public RetailReturnReasonCodePolicyLine find(RefRecId            _policyRefRecId,
                                                        ReturnReasonCodeId  _reasonCodeId,
                                                        RefRecId            _retailStoreTableRecId,
                                                        boolean             _forUpdate = false)
    {
        RetailReturnReasonCodePolicyLine retailReturnReasonCodePolicyLine;

        if (_policyRefRecId && _reasonCodeId && _retailStoreTableRecId)
        {
            retailReturnReasonCodePolicyLine.selectForUpdate(_forUpdate);

            select firstOnly retailReturnReasonCodePolicyLine
                where retailReturnReasonCodePolicyLine.Policy           == _policyRefRecId
                   && retailReturnReasonCodePolicyLine.ReasonCodeId     == _reasonCodeId
                   && retailReturnReasonCodePolicyLine.RetailStoreTable == _retailStoreTableRecId;
        }

        return retailReturnReasonCodePolicyLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@REX4161276</DeveloperDocumentation>
	<Label>@REX4161275</Label>
	<TitleField1>ReasonCodeId</TitleField1>
	<TitleField2>dataAreaId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Extends>RetailReturnPolicyLine</Extends>
	<Modules>TransactionsAndOrders</Modules>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonCodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReturnReasonCode</Name>
			<Label>@SYS106031</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonCodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReasonCodeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReturnReasonCodeId</ExtendedDataType>
			<Label>@Retail:ReasonCode</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailReturnPolicyLine_ReasonCode</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailReturnPolicyLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReturnReasonCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ReturnReasonCode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReasonCodeId</Name>
					<SourceEDT>ReturnReasonCodeId</SourceEDT>
					<Field>ReasonCodeId</Field>
					<RelatedField>ReasonCodeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ReturnReasonCodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>