<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesPurchCycle</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesPurchCycle extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createRecords</Name>
				<Source><![CDATA[
        public void createRecords(SalesPurchCycleModuleParameter    _salesPurchCycleModuleParameter)
    {
        const str FeatureReference = 'ES-00012';
        GlobalizationInstrumentationHelper::featureRun(FeatureReference, funcName());

        switch (_salesPurchCycleModuleParameter)
        {
            case SalesPurchCycleModuleParameter::CustParameter:
                this.defaultRecords(SalesPurchCycleAction::Confirmation, SalesPurchCycleModuleParameter::CustParameter);
                this.defaultRecords(SalesPurchCycleAction::PickingList, SalesPurchCycleModuleParameter::CustParameter);
                this.defaultRecords(SalesPurchCycleAction::PickingListRegistrate, SalesPurchCycleModuleParameter::CustParameter);
                this.defaultRecords(SalesPurchCycleAction::PackingSlip, SalesPurchCycleModuleParameter::CustParameter);
                this.defaultRecords(SalesPurchCycleAction::Invoice, SalesPurchCycleModuleParameter::CustParameter);
                break;
            case SalesPurchCycleModuleParameter::VendParameter:
                this.defaultRecords(SalesPurchCycleAction::ReceiptsList, SalesPurchCycleModuleParameter::VendParameter);
                this.defaultRecords(SalesPurchCycleAction::PackingSlip, SalesPurchCycleModuleParameter::VendParameter);
                this.defaultRecords(SalesPurchCycleAction::Invoice, SalesPurchCycleModuleParameter::VendParameter);
                break;
            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRecords</Name>
				<Source><![CDATA[
        public void defaultRecords(SalesPurchCycleAction             _salesPurchCycleAction,
                                      SalesPurchCycleModuleParameter    _custVend)
    {
        if (!SalesPurchCycle::exist(_salesPurchCycleAction, _custVend, ''))
        {
            ttsbegin;
            this.Action                  = _salesPurchCycleAction;
            this.CustVendParameter       = _custVend;
            this.CustVendAccount         = '';
            this.Active                  = NoYes::Yes;
            this.insert();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesPurchCycle</Name>
				<Source><![CDATA[
        public void initFromSalesPurchCycle(SalesPurchCycleModuleParameter   _moduleDefault,
                                               SalesPurchCycleModuleParameter   _moduleType,
                                               CustVendAC                       _custVendAccount)
    {
        const str FeatureReference = 'ES-00012';
        GlobalizationInstrumentationHelper::featureRun(FeatureReference, funcName());

        SalesPurchCycle     salesPurchCycle;
        SalesPurchCycle     salesPurchCycleInsert;

        if (_custVendAccount)
        {
            ttsbegin;
            insert_recordset salesPurchCycleInsert (Action, Active, custVendParameter, custVendAccount)
                select Action, Active, _moduleType, _custVendAccount from salesPurchCycle
                    where salesPurchCycle.CustVendParameter == _moduleDefault;
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
        public void initValue()
    {
        super();

        this.Active = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean ret;

        if ((this.CustVendParameter       == SalesPurchCycleModuleParameter::Cust  ||
             this.CustVendParameter       == SalesPurchCycleModuleParameter::Vend) &&
            !this.CustVendAccount)
        {
            ret = false;
        }
        else
        {
            ret = super();
        }
        if (ret == false)
        {
            throw error("@SYS96320");
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteFromCust</Name>
				<Source><![CDATA[
        public static void deleteFromCust(CustVendAC   _custAccount)
    {
        SalesPurchCycle      salesPurchCycle;

        delete_from salesPurchCycle
            where salesPurchCycle.CustVendParameter       == SalesPurchCycleModuleParameter::Cust
               && salesPurchCycle.CustVendAccount         == _custAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteFromVend</Name>
				<Source><![CDATA[
        public static void deleteFromVend(CustVendAC   _vendAccount)
    {
        SalesPurchCycle      salesPurchCycle;

        delete_from salesPurchCycle
            where salesPurchCycle.CustVendParameter       == SalesPurchCycleModuleParameter::Vend
               && salesPurchCycle.CustVendAccount         == _vendAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSalesPurchCycle</Name>
				<Source><![CDATA[
        public static void deleteSalesPurchCycle(SalesPurchCycleModuleParameter      _module,
                                                    CustVendAC                          _custVendAccount)
    {
        const str FeatureReference = 'ES-00012';
        GlobalizationInstrumentationHelper::featureRun(FeatureReference, funcName());

        SalesPurchCycle     salesPurchCycle;

        ttsbegin;
        delete_from salesPurchCycle
            where salesPurchCycle.CustVendParameter     == _module
               && salesPurchCycle.CustVendAccount       == _custVendAccount;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
        public static boolean exist(SalesPurchCycleAction           _action,
                                SalesPurchCycleModuleParameter  _moduleType,
                                CustVendAC                         _accountNum)
    {
        return SalesPurchCycle::findBySalesPurchaseCycle(_action, _moduleType, _accountNum).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>SalesPurchCycle</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>SalesPurchCycle</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>SalesPurchCycle</c> table otherwise, an empty record.
    /// </returns>
    public static SalesPurchCycle find(
        RecId              _recId,
        boolean            _forUpdate        = false,
        ConcurrencyModel   _concurrencyModel = ConcurrencyModel::Auto)
    {
        SalesPurchCycle salesPurchCycle;

        salesPurchCycle.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            salesPurchCycle.concurrencyModel(_concurrencyModel);
        }

        select firstonly salesPurchCycle
            where salesPurchCycle.RecId == _recId;

        return salesPurchCycle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBySalesPurchaseCycle</Name>
				<Source><![CDATA[
        public static SalesPurchCycle findBySalesPurchaseCycle(
        SalesPurchCycleAction           _action,
        SalesPurchCycleModuleParameter  _moduleType,
        CustVendAC                      _accountNum,
        boolean                         _update = false)
    {
        SalesPurchCycle salesPurchCycle;

        salesPurchCycle.selectForUpdate (_update);

        select firstonly salesPurchCycle
            where salesPurchCycle.Action                  == _action
               && salesPurchCycle.CustVendParameter       == _moduleType
               && salesPurchCycle.CustVendAccount         == _accountNum;

        return salesPurchCycle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesPurchCycleAction</Name>
				<Source><![CDATA[
        static public SalesPurchCycleAction salesPurchCycleAction(DocumentStatus _documentStatus)
    {
        SalesPurchCycleAction    salesPurchCycleAction;

        switch (_documentStatus)
        {
            case DocumentStatus::Confirmation       :
                salesPurchCycleAction = SalesPurchCycleAction::Confirmation;
                break;
            case DocumentStatus::ReceiptsList       :
                salesPurchCycleAction = SalesPurchCycleAction::ReceiptsList;
                break;
            case DocumentStatus::PickingList        :
                salesPurchCycleAction = SalesPurchCycleAction::PickingList;
                break;
            case DocumentStatus::PackingSlip        :
                salesPurchCycleAction = SalesPurchCycleAction::PackingSlip;
                break;
            case DocumentStatus::Invoice            :
                salesPurchCycleAction = SalesPurchCycleAction::Invoice;
                break;
            default :
                salesPurchCycleAction = SalesPurchCycleAction::None;
                break;
        }
        return salesPurchCycleAction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesPurchCycleActive</Name>
				<Source><![CDATA[
        static public void salesPurchCycleActive(SalesPurchCycleModuleParameter   _module,
                                                    boolean                          _active)
    {
        const str FeatureReference = 'ES-00012';
        GlobalizationInstrumentationHelper::featureRun(FeatureReference, funcName());

        SalesPurchCycle     salesPurchCycle;

        ttsbegin;
        update_recordset salesPurchCycle
            setting Active = _active
            where salesPurchCycle.CustVendParameter == _module;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesPurchCycleUpdateActive</Name>
				<Source><![CDATA[
        static public void salesPurchCycleUpdateActive(boolean                            _activate,
                                                          SalesPurchCycleModuleParameter     _module,
                                                          SalesPurchCycleAction              _action,
                                                          SalesPurchCycle                    _salesPurchCycle)
    {
        const str FeatureReference = 'ES-00012';
        GlobalizationInstrumentationHelper::featureRun(FeatureReference, funcName());

        SalesPurchCycle     salesPurchCycle;

        if (_salesPurchCycle)
        {
            ttsbegin;
            _salesPurchCycle.Active = _activate;
            _salesPurchCycle.update();

            select forupdate Active from salesPurchCycle
                where salesPurchCycle.Action            == _action
                   && salesPurchCycle.CustVendParameter == _module;
            salesPurchCycle.Active = _activate;
            salesPurchCycle.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>ES</CountryRegionCodes>
	<DeveloperDocumentation>@SYS123462</DeveloperDocumentation>
	<FormRef>SalesPurchCycle_Sales</FormRef>
	<Label>@SYS96326</Label>
	<SingularLabel>@SYS96326</SingularLabel>
	<TableGroup>Group</TableGroup>
	<TitleField1>Action</TitleField1>
	<TitleField2>CustVendParameter</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>SalesPurchaseCycleIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Action</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendParameter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Active</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Action</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendParameter</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ActionStatus</Name>
			<Label>@SYS96319</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Action</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Active</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CustVendParameter</Name>
			<Label>@SYS7764</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustVendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustVendParameter</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Action</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>SalesPurchCycleAction</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Active</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesPurchCycleActive</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustVendAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>ES</CountryRegionCodes>
			<ExtendedDataType>CustVendAC</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustVendParameter</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>SalesPurchCycleModuleParameter</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SalesPurchaseCycleIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Action</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CustVendAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CustVendParameter</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>