<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GeneralJournalAccountEntrySim_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class GeneralJournalAccountEntrySim_IT extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateInternalValues</Name>
				<Source><![CDATA[
    public void calculateInternalValues()
    {
        this.IsCredit = (this.AccountingCurrencyAmount < 0 && !this.IsCorrection)
            || (this.AccountingCurrencyAmount > 0 && this.IsCorrection);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addSecureRangeForMainAccount</Name>
				<Source><![CDATA[
    public static QueryBuildRange addSecureRangeForMainAccount(
        QueryBuildDataSource _dataSource,
        MainAccountRecId _mainAccountRecId)
    {
        QueryBuildRange range = SysQuery::findOrCreateRange(_dataSource, fieldNum(GeneralJournalAccountEntrySim_IT, MainAccount));
        range.value(SysQuery::value(_mainAccountRecId));
        range.status(RangeStatus::Hidden);

        return range;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayAccountingExchangeRate</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display ExchRate displayAccountingExchangeRate()
    {
        ExchangeRateHelper exchangeRateHelper = ExchangeRateHelper::newCurrency(Ledger::primaryLedger(CompanyInfo::findDataArea(curext()).RecId), this.TransactionCurrencyCode);

        return exchangeRateHelper.displayStoredExchangeRate(this.getAccountingExchangeRate());
    }

]]></Source>
			</Method>
			<Method>
				<Name>displaySecondaryExchangeRate</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display ExchrateSecondary displaySecondaryExchangeRate()
    {
        ExchangeRateHelper exchangeRateHelper = ExchangeRateHelper::newCurrency(Ledger::primaryLedger(CompanyInfo::findDataArea(curext()).RecId), this.TransactionCurrencyCode);

        return exchangeRateHelper.displayStoredExchangeRate(this.getReportingExchangeRate());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccountingExchangeRate</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public display ExchRate getAccountingExchangeRate()
    {
        return CurrencyExchange::calculateExchangeRate(this.TransactionCurrencyAmount, this.AccountingCurrencyAmount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportingExchangeRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an approximation of the exchange rate for the reporting currency amount.
    /// </summary>
    /// <returns>
    /// An approximation of the exchange rate for the reporting currency amount.
    /// </returns>
    /// <remarks>
    /// The results of this method should not be passed to the parmExchangeRate2
    /// method on the CurrencyExchangeHelper class.
    /// </remarks>
    public ExchrateSecondary getReportingExchangeRate()
    {
        return CurrencyExchange::calculateExchangeRate(this.ReportingCurrencyAmount, this.AccountingCurrencyAmount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSecondaryExchangeRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an approximation of the exchange rate for the reporting currency amount.
    /// </summary>
    /// <returns>
    /// An approximation of the exchange rate for the reporting currency amount.
    /// </returns>
    /// <remarks>
    /// The results of this method should not be passed to the parmExchangeRate2
    /// method on the CurrencyExchangeHelper class.
    /// </remarks>
    public display ExchrateSecondary getSecondaryExchangeRate()
    {
        return this.getReportingExchangeRate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromGeneralJournalAccountEntry</Name>
				<Source><![CDATA[
    public void initFromGeneralJournalAccountEntry(generalJournalAccountEntry _generalJournalAccountEntry)
    {
        this.TransactionCurrencyAmount = _generalJournalAccountEntry.TransactionCurrencyAmount;
        this.AccountingCurrencyAmount = _generalJournalAccountEntry.AccountingCurrencyAmount;
        this.ReportingCurrencyAmount = _generalJournalAccountEntry.ReportingCurrencyAmount;
        this.Quantity = _generalJournalAccountEntry.Quantity;
        this.AllocationLevel = _generalJournalAccountEntry.AllocationLevel;
        this.IsCorrection = _generalJournalAccountEntry.IsCorrection;
        this.IsCredit = _generalJournalAccountEntry.IsCredit;
        this.TransactionCurrencyCode = _generalJournalAccountEntry.TransactionCurrencyCode;
        this.PostingType = _generalJournalAccountEntry.PostingType;
        this.LedgerDimension = _generalJournalAccountEntry.LedgerDimension;
        this.GeneralJournalEntry = _generalJournalAccountEntry.GeneralJournalEntry;
        this.Text = _generalJournalAccountEntry.Text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isExchangeAdjustment</Name>
				<Source><![CDATA[
    public boolean isExchangeAdjustment()
    {
        return this.PostingType == LedgerPostingType::ExchRateGain
            || this.PostingType == LedgerPostingType::ExchRateLoss;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        if (this.isFieldDataRetrieved(fieldStr(GeneralJournalAccountEntrySim_IT, IsCorrection)))
        {
            if (this.isFieldDataRetrieved(fieldStr(GeneralJournalAccountEntrySim_IT, TransactionCurrencyAmount)))
            {
                this.TransactionCurrencyAmount= corrFlagSet(this.TransactionCurrencyAmount, this.IsCorrection);
            }

            if (this.isFieldDataRetrieved(fieldStr(GeneralJournalAccountEntrySim_IT, AccountingCurrencyAmount)))
            {
                this.AccountingCurrencyAmount = corrFlagSet(this.AccountingCurrencyAmount, this.IsCorrection);
            }
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>GeneralJournalAccountEntrySim_IT</c> table; if not, an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>GeneralJournalAccountEntrySim_IT</c> record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(recId _recId)
    {
        boolean isExisting = true;

        if (!GeneralJournalAccountEntrySim_IT::exist(_recId))
        {
            isExisting = checkFailed(strFmt(GeneralJournalAccountEntrySim_IT::txtNotExist(), _recId));
        }

        return isExisting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the GeneralJournalAccountEntrySim table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the GeneralJournalAccountEntrySim record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(recId _recId)
    {
        GeneralJournalAccountEntrySim_IT generalJournalAccountEntrySim;

        select firstonly RecId from generalJournalAccountEntrySim
            where generalJournalAccountEntrySim.RecId == _recId;

        return generalJournalAccountEntrySim != null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the GeneralJournalAccountEntry table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the GeneralJournalAccountEntry record.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the GeneralJournalAccountEntry table; otherwise, an empty record.
    /// </returns>
    public static GeneralJournalAccountEntrySim_IT find(
        recId _recId,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        GeneralJournalAccountEntrySim_IT generalJournalAccountEntrySim;

        generalJournalAccountEntrySim.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            generalJournalAccountEntrySim.concurrencyModel(_concurrencyModel);
        }

        select firstonly generalJournalAccountEntrySim
            where generalJournalAccountEntrySim.RecId == _recId;

        return generalJournalAccountEntrySim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the message to use when a specific record in the GeneralJournalAccountEntry table does not exist.
    /// </summary>
    /// <returns>
    /// The message that indicates a record does not exists.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMainAccountName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of the associated main account.
    /// </summary>
    /// <returns>
    /// The name of the associated main account.
    /// </returns>
    public display AccountName getMainAccountName()
    {
        return MainAccount::findByLedgerDimension(this.LedgerDimension).localizedName();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>IT</CountryRegionCodes>
	<DeveloperDocumentation>@SYS328430</DeveloperDocumentation>
	<Label>@SYS132693</Label>
	<TableGroup>TransactionLine</TableGroup>
	<TitleField1>TransactionCurrencyCode</TitleField1>
	<TitleField2>TransactionCurrencyAmount</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<Modules>Ledger</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DeleteAction1</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>LedgerDimension</Relation>
			<Table>DimensionAttributeValueCombination</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>DeleteAction2</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>TransactionCurrencyCode</Relation>
			<Table>Currency</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>DeleteAction3</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>TransactionLog</Relation>
			<Table>TransactionLog</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GeneralJournalEntry</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCorrection</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS130756</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransactionCurrencyAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingCurrencyAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionCurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GeneralJournalEntry</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Text</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Statistical</Name>
			<Label>@SYS14578</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Quantity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Summarize</Name>
			<Label>@SYS132683</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ValueType</Name>
			<Label>@SYS24942</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsCorrection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCredit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllocationLevel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AccountingCurrencyAmount</Name>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AllocationLevel</Name>
			<ExtendedDataType>LedgerAllocateLevel</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>GeneralJournalEntry</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCorrection</Name>
			<HelpText>@SYS19991</HelpText>
			<Label>@SYS38561</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCredit</Name>
			<HelpText>@SYS19991</HelpText>
			<Label>@SYS22082</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostingType</Name>
			<EnumType>LedgerPostingType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Quantity</Name>
			<ExtendedDataType>Qty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReportingCurrencyAmount</Name>
			<ExtendedDataType>AmountMSTSecondary</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SkipCreditCalculation</Name>
			<Label>@SYS25456</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Text</Name>
			<ExtendedDataType>TransTxt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TransactionCurrencyAmount</Name>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransactionCurrencyCode</Name>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerAccount</Name>
			<ExtendedDataType>DimensionDisplayValueLTR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MainAccount</Name>
			<ExtendedDataType>MainAccountRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>GeneralJournalEntryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>GeneralJournalEntry</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransactionCurrencyAmountIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TransactionCurrencyAmount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AccountingCurrencyAmountIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AccountingCurrencyAmount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReportingCurrencyAmountIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransactionCurrencyCodeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TransactionCurrencyCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CreatedTransactionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>createdTransactionId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>GeneralJournalAccountEntryMap_IT</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AccountingCurrencyAmount</MapField>
					<MapFieldTo>AccountingCurrencyAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AllocationLevel</MapField>
					<MapFieldTo>AllocationLevel</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>GeneralJournalEntry</MapField>
					<MapFieldTo>GeneralJournalEntry</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsCorrection</MapField>
					<MapFieldTo>IsCredit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsCredit</MapField>
					<MapFieldTo>IsCredit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LedgerDimension</MapField>
					<MapFieldTo>LedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PostingType</MapField>
					<MapFieldTo>PostingType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Quantity</MapField>
					<MapFieldTo>Quantity</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ReportingCurrencyAmount</MapField>
					<MapFieldTo>ReportingCurrencyAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Text</MapField>
					<MapFieldTo>Text</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransactionCurrencyAmount</MapField>
					<MapFieldTo>TransactionCurrencyAmount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransactionCurrencyCode</MapField>
					<MapFieldTo>TransactionCurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>LedgerDimTransactionMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LedgerDimension</MapField>
					<MapFieldTo>LedgerDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MainAccount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>GeneralJournalEntrySim_IT</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>GeneralJournalEntrySim_IT</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>GeneralJournalEntrySim_IT</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>GeneralJournalEntrySim_GeneralJournalLine_IT</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GeneralJournalEntry</Name>
					<Field>GeneralJournalEntry</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>GeneralJournalAccountEntry</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TransactionCurrencyCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TransactionCurrenyCode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>GeneralJournalAccountEntry</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransactionCurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>TransactionCurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TransactionLog</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS126015</EntityRelationshipRole>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>TransactionLog</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TransactionLog</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>GeneralJournalEntry</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>createdTransactionId</Name>
					<Field>createdTransactionId</Field>
					<RelatedField>createdTransactionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>