<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankDeposit</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankDeposit extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canCreateBankDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a bank document can be created from the table in current status.
    /// </summary>
    /// <returns>
    /// true if the bank document can be created from the table in current status; otherwise, false.
    /// </returns>
    public boolean canCreateBankDocument()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTransFromJournal</Name>
				<Source><![CDATA[
    public void createTransFromJournal(
        LedgerJournalTrans _ledgerJournalTrans,
        BankDepositNum _depositNum,
        CompanyBankAccountId _accountId)
    {
        LedgerJournalTrans ledgerJournalTrans = _ledgerJournalTrans;

        if (ledgerJournalTrans.AccountType == LedgerJournalACType::Bank && ledgerJournalTrans.parmLedgerDimension())
        {
            this.clear();
            this.initFromLedgerJournalTrans(ledgerJournalTrans);

            this.AccountId = _accountId;
            this.DepositNum = _depositNum;
            this.Canceled = BankAccountTrans::findBySource(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId).Reconciled;

            this.insert();
        }
        else if (ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank && ledgerJournalTrans.parmOffsetLedgerDimension())
        {
            this.clear();
            ledgerJournalTrans.AmountCurDebit = -ledgerJournalTrans.AmountCurDebit;
            ledgerJournalTrans.AmountCurCredit = -ledgerJournalTrans.AmountCurCredit;
            this.initFromLedgerJournalTrans(ledgerJournalTrans);

            this.AccountId = _accountId;
            this.DepositNum = _depositNum;
            this.Canceled = BankAccountTrans::findBySource(ledgerJournalTrans.TableId, ledgerJournalTrans.RecId).Reconciled;

            this.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromLedgerJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the table buffer with values from the <c>LedgerJournalTrans</c> table.
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    /// The table buffer that contains the values to set as the default on the new record.
    /// </param>
    /// <remarks>
    /// Most values from the table are assigned directly, but some are used to determine or calculate the
    /// remaining values.
    /// </remarks>
    protected void initFromLedgerJournalTrans(LedgerJournalTrans _ledgerJournalTrans)
    {
        BankAccountTable bankAccountTable;
        CompanyId bankAccountCompany;

        if (_ledgerJournalTrans.OffsetAccountType == LedgerJournalACType::Bank && _ledgerJournalTrans.parmOffsetLedgerDimension())
        {
            bankAccountTable = BankAccountTable::findByLedgerDimension(_ledgerJournalTrans.parmOffsetLedgerDimension());
            bankAccountCompany = _ledgerJournalTrans.OffsetCompany ? _ledgerJournalTrans.OffsetCompany : curext();
            this.DefaultDimension = _ledgerJournalTrans.OffsetDefaultDimension;
        }
        else if (_ledgerJournalTrans.AccountType == LedgerJournalACType::Bank && _ledgerJournalTrans.parmLedgerDimension())
        {
            bankAccountTable = BankAccountTable::findByLedgerDimension(_ledgerJournalTrans.parmLedgerDimension());
            bankAccountCompany = _ledgerJournalTrans.Company ? _ledgerJournalTrans.Company : curext();
            this.DefaultDimension = _ledgerJournalTrans.DefaultDimension;
        }

        Debug::assert(BankAccountTable.RecId != 0);

        this.LedgerTransType = _ledgerJournalTrans.TransactionType;
        this.TransDate = _ledgerJournalTrans.TransDate;
        this.Voucher = _ledgerJournalTrans.Voucher;
        this.PaymMode = _ledgerJournalTrans.PaymMode;
        this.PaymReference = _ledgerJournalTrans.PaymReference;

        this.BankTransCurrencyCode = _ledgerJournalTrans.CurrencyCode;
        this.BankTransAmountCur = _ledgerJournalTrans.amount();

        if (_ledgerJournalTrans.company() != '' && _ledgerJournalTrans.company() != bankAccountCompany)
        {
            // The journal transaction exchange rates come from the ledgerJournaltrans.Company.
            // If the bank account company is different from this company, the exchange rates used
            // to determine the deposit's MST amount need to be found in the bank account's company.
            CurrencyExchangeHelper exchangeHelper = CurrencyExchangeHelper::newExchangeDate(
                Ledger::primaryLedger(CompanyInfo::findDataArea(bankAccountCompany).RecId),
                _ledgerJournalTrans.TransDate);

            this.AmountMST = exchangeHelper.calculateTransactionToAccounting(_ledgerJournalTrans.CurrencyCode, this.BankTransAmountCur, true);
            this.AmountReportingCurrency = exchangeHelper.calculateTransactionCurrencyToReportingCurrency(_ledgerJournalTrans.CurrencyCode, this.BankTransAmountCur, true);
        }
        else
        {
            this.AmountMST = _ledgerJournalTrans.calcAmountMST();
            this.AmountReportingCurrency = _ledgerJournalTrans.calcAmountReportingCurrency();
        }

        this.CurrencyCode = bankAccountTable.CurrencyCode;

        if (_ledgerJournalTrans.CurrencyCode == bankAccountTable.CurrencyCode)
        {
            this.AmountCur = this.BankTransAmountCur;
        }
        else
        {
            this.AmountCur = CurrencyExchangeHelper::curAmount(this.AmountMST, bankAccountTable.CurrencyCode, _ledgerJournalTrans.TransDate);
        }

        this.BankTransType = _ledgerJournalTrans.BankTransType;
        this.Txt = _ledgerJournalTrans.Txt;
        this.SourceTableId = _ledgerJournalTrans.TableId;
        this.SourceRecId = _ledgerJournalTrans.RecId;
        this.CustAccount = _ledgerJournalTrans.parmAccount();

        CustTrans custTrans = CustTrans::findByCompany(_ledgerJournalTrans.company(), _ledgerJournalTrans.CustTransId);

        this.RefCompany = custTrans.DataAreaId;
        this.RefRecId = custTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the bank account id.
    /// </summary>
    /// <returns>
    /// The bank accound id.
    /// </returns>
    public CompanyBankAccountId parmBankAccount()
    {
        return this.AccountId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankCurrencyAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the bank currency amount.
    /// </summary>
    /// <returns>
    /// The bank currency amount.
    /// </returns>
    public AmountCur parmBankCurrencyAmount()
    {
        return this.AmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankDocumentBookType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the bank document type.
    /// </summary>
    /// <returns>
    /// The bank document type.
    /// </returns>
    public BankDocumentBookType parmBankDocumentBookType()
    {
        return BankDocumentBookType::DepositSlipCancel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processBankDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes a bank document from the deposit.
    /// </summary>
    private void processBankDocument()
    {
        if ((this.orig().CancelPending == false
                && this.orig().Canceled == false)
            && (this.CancelPending == true
                || this.Canceled == true))
        {
            // Create document for cancelling bank deposit slip details.
            BankDocumentProcessor::submitBankDocumentTable(this);
        }
        else if (this.orig().CancelPending == true
            && this.CancelPending == false
            && this.Canceled == false)
        {
            // Remove document for cancelled bank deposit slip details
            BankDocumentProcessor::deleteBankDocument(this.TableId, this.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates bank deposit.
    /// </summary>
    public void update()
    {
        this.processBankDocument();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(RecId _recId )
    {
        boolean ret = true;

        if (!BankDeposit::exist(_recId))
        {
            ret = checkFailed(strFmt(BankDeposit::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(RecId _recId )
    {
        boolean found;

        found = (select firstonly RecId from bankDeposit
            where bankDeposit.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static BankDeposit find(
        RecId _recId ,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        BankDeposit bankDeposit;

        bankDeposit.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            bankDeposit.concurrencyModel(_concurrencyModel);
        }

        select firstonly bankDeposit
            where bankDeposit.RecId == _recId;

        return bankDeposit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRef</Name>
				<Source><![CDATA[
    public static BankDeposit findRef(
        RecId _refRecId,
        boolean _forUpdate = false)
    {
        BankDeposit bankDeposit;

        if (_refRecId)
        {
            bankDeposit.selectForUpdate(_forUpdate);

            select firstonly bankDeposit
                where bankDeposit.RefRecId == _refRecId;
        }

        return bankDeposit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRefByCompany</Name>
				<Source><![CDATA[
    public static BankDeposit findRefByCompany(
        CompanyId _refcompany,
        RecId _refRecId,
        boolean _forUpdate = false)
    {
        BankDeposit bankDeposit;

        changecompany(_refcompany)
        {
            bankDeposit = BankDeposit::findRef(_refRecId, _forUpdate);
        }

        return bankDeposit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BankDeposit</ConfigurationKey>
	<DeveloperDocumentation>@SYS127024</DeveloperDocumentation>
	<FormRef>BankDeposit</FormRef>
	<Label>@SYS22793</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>AccountId</TitleField1>
	<TitleField2>DepositNum</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>BankDeposit</ClusteredIndex>
	<Modules>Bank</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepositNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountReportingCurrency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountReportingCurrency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankTransCurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankTransAmountCur</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Cancelled</Name>
			<Label>@SYS80127</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Canceled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CancelPending</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DepositNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Ledger</Name>
			<Label>@SYS13356</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerTransType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepositNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountReportingCurrency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymReference</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reason</Name>
			<Label>@SYS107174</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonRefRecID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Voucher</Name>
			<Label>@SYS12371</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyBankAccountId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BankDepositDocument</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>BankTransAmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankTransAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankTransCurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankTransCurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankTransType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankTransactionType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Canceled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS1068</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CancelPending</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS114141</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
			<Visible>No</Visible>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DepositNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankDepositNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LedgerTransType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS11115</Label>
			<EnumType>LedgerTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymMode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymReference</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymReference</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReasonRefRecID</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ReasonRefRecID</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RefCompany</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustTransRefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReversalRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ReversalTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<GroupPrompt>@SYS7402</GroupPrompt>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransTxt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountReportingCurrency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMSTSecondary</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BankDeposit</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AccountId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DepositNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RefRecIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RefCompany</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VoucherDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BankDepositDocumentIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BankDepositDocument</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>BankDocumentTableMap</MappingTable>
			<Connections />
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankAccountTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BankAccountTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountId</Name>
					<SourceEDT>CompanyBankAccountId</SourceEDT>
					<Field>AccountId</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankDepositDocument</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankDepositDocument</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankDepositDocument</Name>
					<Field>BankDepositDocument</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>BankDocumentTableView</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>BankDocumentTableView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TableId</Name>
					<Field>TableId</Field>
					<RelatedField>SourceRelationType</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>SourceRecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankTransType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BankTransType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankTransType</Name>
					<SourceEDT>BankTransactionType</SourceEDT>
					<Field>BankTransType</Field>
					<RelatedField>BankTransType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransType</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency_BankTransCurrencyCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Currency_BankTransCurrencyCode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BankDeposit</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankTransCurrencyCode</Name>
					<SourceEDT>BankTransCurrencyCode</SourceEDT>
					<Field>BankTransCurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustAccount</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>CustAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<SourceEDT>CustTransRefRecId</SourceEDT>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefCompany</Name>
					<SourceEDT>CompanyId</SourceEDT>
					<Field>RefCompany</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>isVirtual_Extern</Name>
					<SourceEDT>CompanyId</SourceEDT>
					<RelatedField>isVirtual</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BankDeposit</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ReasonRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS127012</EntityRelationshipRole>
			<RelatedTable>ReasonTableRef</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ReasonRef</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BankDeposit</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReasonRefRecID</Name>
					<SourceEDT>ReasonRefRecID</SourceEDT>
					<Field>ReasonRefRecID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>