<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductBarcodeAssociation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductBarcodeAssociation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByAssociationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the product barcode association by association ID.
    /// </summary>
    /// <param name = "_associationId">The association ID.</param>
    /// <param name = "_forUpdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A record in the <c>EcoResProductBarcodeAssociation</c> table; otherwise, an empty record.</returns>
    public static EcoResProductBarcodeAssociation findByAssociationId(EcoResProductBarcodeAssociationId _associationId, boolean _forUpdate = false)
    {
        EcoResProductBarcodeAssociation productBarcodeAssociation;

        if (_associationId)
        {
            productBarcodeAssociation.selectForUpdate(_forUpdate);

            select firstonly productBarcodeAssociation
                where productBarcodeAssociation.AssociationId == _associationId;
        }

        return productBarcodeAssociation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByItemBarcode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the product barcode association by item barcode.
    /// </summary>
    /// <param name = "_itemBarcodeRecId">The record ID of the item barcode.</param>
    /// <param name = "_forUpdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A record in the <c>EcoResProductBarcodeAssociation</c> table; otherwise, an empty record.</returns>
    public static EcoResProductBarcodeAssociation findByItemBarcode(InventItemBarcodeRecId _itemBarcodeRecId, boolean _forUpdate = false)
    {
        EcoResProductBarcodeAssociation productBarcodeAssociation;

        if (_itemBarcodeRecId)
        {
            productBarcodeAssociation.selectForUpdate(_forUpdate);

            select firstonly productBarcodeAssociation
                where productBarcodeAssociation.InventItemBarcode == _itemBarcodeRecId;
        }

        return productBarcodeAssociation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertWithInventItemBarcode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a new <c>EcoResProductBarcodeAssociation</c> for the specified item - barcode record.
    /// </summary>
    /// <param name = "_itemBarcodeRecId">The record ID of the item - barcode.</param>
    /// <returns>The new record if created; otherwise, an empty record.</returns>
    internal static EcoResProductBarcodeAssociation insertWithInventItemBarcode(InventItemBarcodeRecId _itemBarcodeRecId)
    {
        EcoResProductBarcodeAssociation productBarcodeAssociation;

        if (_itemBarcodeRecId)
        {
            productBarcodeAssociation.AssociationId = EcoResProductBarcodeAssociation::newAssociationId();
            productBarcodeAssociation.InventItemBarcode = _itemBarcodeRecId;
            productBarcodeAssociation.insert();
        }

        return productBarcodeAssociation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAssociationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new association ID.
    /// </summary>
    /// <returns>A new association ID.</returns>
    internal static EcoResProductBarcodeAssociationId newAssociationId()
    {
        return NumberSeq::newGetNum(EcoResProductParameters::numRefProductBarcodeAssociationId()).num();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:Developer_EcoResProductBarcodeAssociation</DeveloperDocumentation>
	<FormRef>InventItemBarcode</FormRef>
	<Label>@SCM:Table_EcoResProductBarcodeAssociation</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>AssociationId</TitleField1>
	<TitleField2>InventItemBarcode</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>AssociationIdIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>AssociationIdIdx</PrimaryIndex>
	<ReplacementKey>AssociationIdIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailDiscountCode</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RetailDiscountCode</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventItemBarcode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssociationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssociationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssociationId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>EcoResProductBarcodeAssociationId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventItemBarcode</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>InventItemBarcodeRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AssociationIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AssociationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventItemBarcodeIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>InventItemBarcode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventItemBarcode</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventItemBarcode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventItemBarcode</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ProductBarcodeAssociation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventItemBarcode</Name>
					<Field>InventItemBarcode</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>