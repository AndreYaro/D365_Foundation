<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventCostTransVariance</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventCostTransVariance extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addCostAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds a <c>costAmount</c> to the <c>costAmount</c> field of the current record.
    /// </summary>
    /// <param name="_costAmount">
    ///    The <c>costAmount</c> that has to be added.
    /// </param>
    /// <param name="_costAmountSecCur">
    ///    The <c>costAmount</c> in secondary currency that has to be added(dual warehouse); optional
    /// </param>
    /// <remarks>
    ///    Adds a <c>costAmount</c> to the <c>costAmount</c> field of the current record.
    /// </remarks>
    public void addCostAmount(CostAmount _costAmount,
                              CostAmount _costAmountSecCur = 0)
    {
        this.CostAmount          += _costAmount;
        // <GEERU>
        this.CostAmountSecCur_RU += _costAmountSecCur;
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCostAmountPosted</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds a <c>costAmountPosted</c> to the <c>costAmountPosted</c> field of the current record.
    /// </summary>
    /// <param name="_costAmountPosted">
    ///    The <c>costAmountPosted</c> that must be added.
    /// </param>
    /// <param name="_costAmountPostedSecCur">
    ///    The <c>costAmountPosted</c> in seconary currency(dual warehouse) that must be added; optional
    /// </param>
    /// <remarks>
    ///    Adds a <c>costAmountPosted</c> to the <c>costAmountPosted</c> field of the current record.
    /// </remarks>
    public void addCostAmountPosted(CostAmount _costAmountPosted,
                                    CostAmount _costAmountPostedSecCur = 0)
    {
        this.CostAmountPosted          += _costAmountPosted;
        // <GEERU>
        this.CostAmountPostedSecCur_RU += _costAmountPostedSecCur;
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>CompanyInfo</c> record that is associated to the current record.
    /// </summary>
    /// <returns>
    /// The <c>CompanyInfo</c> record.
    /// </returns>
    public CompanyInfo companyInfo()
    {
        return CompanyInfo::findDataArea(this.company());
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a dimension set to apply to the <c>defaultDimension</c> field on this table.
    /// </summary>
    /// <param name="_defaultDimension">
    ///    A dimension set to apply to the <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_dimensionCopy">
    ///    A <c>dimensionCopy</c> object that was initialized with the current buffer; optional.
    /// </param>
    /// <returns>
    ///    A dimension set to apply to the <c>defaultDimension</c> field on this table.
    /// </returns>
    /// <remarks>
    ///    This method makes sure that potential linked dimensions are not overwritten.
    /// </remarks>

    public DimensionDefault copyDimension(
        DimensionDefault _defaultDimension,
        DimensionCopy    _dimensionCopy = DimensionCopy::newFromTable(this,
                                                                      this.companyInfo().RecId
                                                                      )

        )
    {
        return _dimensionCopy.copy(_defaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Verifies that the delete action is not called from a form.
    /// </summary>
    /// <exception cref="M:Exception::Error">
    ///    The delete action is called from a form.
    /// </exception>
    public void delete()
    {
        if (FormDataUtil::isFormDataSource(this))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventCostTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes an <c>inventCostTransVariance</c> record from an <c>inventCostTrans</c> record.
    /// </summary>
    /// <param name="_inventCostTrans">
    ///    The <c>inventCostTrans</c> record from which the data should be taken.
    /// </param>
    /// <remarks>
    ///    This method sets the <c>inventCostTransRefRecId</c> and <c>dimension</c> fields in an
    ///    <c>inventCostTransVariance</c> record from a given <c>inventCostTransrecord</c>.
    ///    The level is set
    ///    to "total", and split field is set to "no", because when this method is used, no breakdown is
    ///    available in the <c>inventItemCostGroupRollup</c> table.
    /// </remarks>

    public void initFromInventCostTrans(InventCostTrans _inventCostTrans)
    {
        this.InventCostTransRefRecId = _inventCostTrans.RecId;
        this.DefaultDimension        = this.copyDimension(_inventCostTrans.DefaultDimension);
        this.Level                   = InventCostLevel::Total;
        this.Split                   = NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventCostTransVariance</Name>
				<Source><![CDATA[
    public void initFromInventCostTransVariance(InventCostTransVariance _inventCostTransVariance)
    {
        this.CostGroupId              = _inventCostTransVariance.CostGroupId;
        this.DefaultDimension         = this.copyDimension(_inventCostTransVariance.DefaultDimension);
        this.InventCostTransRefRecId  = _inventCostTransVariance.InventCostTransRefRecId;
        this.Level                    = _inventCostTransVariance.Level;
        this.Split                    = _inventCostTransVariance.Split;
        this.VarianceType             = _inventCostTransVariance.VarianceType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventItemCostGroupRollup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes an <c>inventCostTransVariance</c> record from a <c>inventItemCostGroupRollup</c> record.
    /// </summary>
    /// <param name="_inventItemCostGroupRollup">
    ///    The <c>inventItemCostGroupRollup</c> record from which the data should be taken.
    /// </param>
    /// <remarks>
    ///    Sets the <c>costGroupId</c>, <c>level</c>, and <c>split</c> fields for an
    ///    <c>inventCostTransVariance</c> record from a given <c>inventItemCostGroupRollup</c> record.
    /// </remarks>

    public void initFromInventItemCostGroupRollup(InventItemCostGroupRollup _inventItemCostGroupRollup)
    {
        this.CostGroupId = _inventItemCostGroupRollup.CostGroupId;
        this.Level       = _inventItemCostGroupRollup.CostLevel;
        this.Split       = _inventItemCostGroupRollup.Split;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInventCostTransVariance</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes an <c>inventCostTransVariance</c> record.
    /// </summary>
    /// <param name="_costGroupId">
    ///    The cost group ID to which this variance belongs.
    /// </param>
    /// <param name="_varianceType">
    ///    The variance type that should be set.
    /// </param>
    /// <param name="_dimension">
    ///    The dimension that should be set.
    /// </param>
    /// <param name="_costAmount">
    ///    The cost amount that should be set; optional.
    /// </param>
    /// <param name="_costAmountSecCur">
    ///    The cost amount in secondary currency that should be set(dual warehouse); optional.
    /// </param>
    /// <remarks>
    ///    If a cost amount is passed in the method, it will be set.
    /// </remarks>

    public void initInventCostTransVariance(
        CostGroupId            _costGroupId,
        InventCostVarianceType _varianceType,
        DimensionDefault       _dimension,
        CostAmount             _costAmount       = 0,
        CostAmount             _costAmountSecCur = 0
        )
    {
        this.CostGroupId        = _costGroupId;
        this.Level              = InventCostLevel::Total;
        this.Split              = NoYes::No;
        this.VarianceType       = _varianceType;
        this.DefaultDimension   = this.copyDimension(_dimension);
        this.CostAmount         = _costAmount;
        // <GEERU>
        this.CostAmountSecCur_RU = _costAmountSecCur;
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Verifies that the insert action is not called from a form.
    /// </summary>
    /// <exception cref="M:Exception::Error">
    ///    The insert action is called from a form.
    /// </exception>
    public void insert()
    {
        if (FormDataUtil::isFormDataSource(this))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a dimension set that holds the merged combination of the current <c>defaultDimension</c>
    ///    field on this table and the provided dimension set.
    /// </summary>
    /// <param name="_primaryDefaultDimension">
    ///    A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_secondaryDefaultDimension">
    ///    A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
    ///    optional.
    /// </param>
    /// <param name="_dimensionMerge">
    ///    A <c>dimensionMerge</c> object that was initialized by using the current buffer; optional.
    /// </param>
    /// <returns>
    ///    A dimension set that holds the merged combination of the current <c>defaultDimension</c> field on
    ///    this table and the provided dimension set.
    /// </returns>
    /// <remarks>
    ///    This method makes sure that potential linked dimensions are not overwritten when they are merged.
    /// </remarks>

    public DimensionDefault mergeDimension(
        DimensionDefault _primaryDefaultDimension,
        DimensionDefault _secondaryDefaultDimension = 0,
        DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this,
                                                                        this.companyInfo().RecId
                                                                        )

        )
    {
        return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustPost</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the variance must be posted in the general ledger.
    /// </summary>
    /// <returns>
    ///    true if the variance must be posted in the general ledger; otherwise, false.
    /// </returns>
    public boolean mustPost()
    {
        return ((this.Level == InventCostLevel::Total && this.Split == NoYes::No) || this.Level == InventCostLevel::Single);
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetCostAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Resets the <c>costAmount</c> value of the current record to zero.
    /// </summary>

    public void resetCostAmount()
    {
        #define.zero(0)
        this.CostAmount = #zero;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Verifies that the update action is not called from a form.
    /// </summary>
    /// <exception cref="M:Exception::Error">
    ///    The update action is called from a form.
    /// </exception>
    public void update()
    {
        if (FormDataUtil::isFormDataSource(this))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds a record in the <c>inventCostTransVariance</c> table.
    /// </summary>
    /// <param name="_inventCostTransRefRecId">
    ///    The <c>inventCostTrans</c> record <c>recId</c> for which the record should be looked up.
    /// </param>
    /// <param name="_costGroupId">
    ///    The <c>costGroupId</c> for which the record should be looked up.
    /// </param>
    /// <param name="_varianceType">
    ///    The variance type for which the record should be looked up.
    /// </param>
    /// <param name="_level">
    ///    The level for which the record should be looked up.
    /// </param>
    /// <param name="_split">
    ///    The split flag for which the record should be looked up.
    /// </param>
    /// <param name="_dimension">
    ///    The dimension for which the record should be looked up.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that determines whether the record should be selected for update; optional.
    /// </param>
    /// <returns>
    ///    An <c>inventCostTransVariance</c> record.
    /// </returns>
    /// <remarks>
    ///    This method uses the primary key to find the record.
    /// </remarks>

    public static InventCostTransVariance find(InventCostTransRefRecId _inventCostTransRefRecId,
                                               CostGroupId             _costGroupId,
                                               InventCostVarianceType  _varianceType,
                                               InventCostLevel         _level,
                                               boolean                 _split,
                                               DimensionDefault        _dimension,
                                               boolean                 _forUpdate = false)
    {
        InventCostTransVariance inventCostTransVariance;
        if (_inventCostTransRefRecId)
        {
            inventCostTransVariance.selectForUpdate(_forUpdate);

            select firstonly inventCostTransVariance
                where inventCostTransVariance.InventCostTransRefRecId == _inventCostTransRefRecId
                   && inventCostTransVariance.CostGroupId             == _costGroupId
                   && inventCostTransVariance.Level                   == _level
                   && inventCostTransVariance.Split                   == _split
                   && inventCostTransVariance.VarianceType            == _varianceType
                   && inventCostTransVariance.DefaultDimension        == _dimension;
        }

        return inventCostTransVariance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS125520</DeveloperDocumentation>
	<Label>@SYS110731</Label>
	<SingularLabel>@SYS110699</SingularLabel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>CostGroupId</TitleField1>
	<TitleField2>VarianceType</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>CostTransVarianceIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>CostTransVarianceIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VarianceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Level</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Split</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAmountSecCur_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VarianceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Level</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Split</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAmountSecCur_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventCostTransRefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VarianceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Level</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Split</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Accounts</Name>
			<Label>@SYS11800</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS5951</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>isPosted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS5943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Posting</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingOffset</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Variance</Name>
			<Label>@SYS103326</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VarianceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Level</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Split</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAmountPosted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VarianceSecCur_RU</Name>
			<Label>@GLS102435</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CostAmountSecCur_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAmountPostedSecCur_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CostAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostAmountNonMonetary</ExtendedDataType>
			<CurrencyDate>CurrencyDateField</CurrencyDate>
			<CurrencyDateField>TransDate</CurrencyDateField>
			<CurrencyDateTable>InventCostTrans</CurrencyDateTable>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CostAmountPosted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostAmountPosted</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CostAmountPostedSecCur_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostAmountSecCur_RU</ExtendedDataType>
			<Label>@SYS22515</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CostAmountSecCur_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostAmountSecCur_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CostGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventCostTransRefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventCostTransRefRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>isPosted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS22361</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Level</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventCostLevel</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Posting</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPostingType</ExtendedDataType>
			<EnumType>LedgerPostingType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostingOffset</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventPostingType</ExtendedDataType>
			<Label>@SYS27324</Label>
			<EnumType>LedgerPostingType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Split</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventCostSplit</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VarianceType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventCostVarianceType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CostTransVarianceIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventCostTransRefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VarianceType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Level</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Split</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CostGroupId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DefaultDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>DimensionDefaultMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BOMCostGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BOMCostGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CostGroupId</Name>
					<Field>CostGroupId</Field>
					<RelatedField>CostGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CostGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DefaultDimension_InventCostTransVariance</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventCostTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventCostTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventCostTransRefRecId</Name>
					<Field>InventCostTransRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransactionIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerDimension_InventCostTransVariance</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OffsetLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>OffsetLedgerDimension_InventCostTransVariance</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>