<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustCollectionLetterLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustCollectionLetterLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    void initValue()
    {
        super();

        this.CurrencyCode = Ledger::accountingCurrency(CompanyInfo::current());
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Table method that occurs after the field with the specified ID is modified in a client form.
    /// </summary>
    /// <param name="_fieldId">
    ///    The ID of the field that was modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(CustCollectionLetterLine, ReferToCollectionAgency_W):
                if (this.ReferToCollectionAgency_W == NoYes::Yes)
                {
                    this.NumOfDays = 0;
                }
                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>notes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the note that is attached to the collection letter.
    /// </summary>
    /// <param name="_languageId">
    /// Is the language for the current text.
    /// </param>
    /// <returns>
    /// The note that is attached to the collection letter.
    /// </returns>
    public FreeTxt notes(LanguageId _languageId)
    {
        LanguageTxt languageTxt;

        languageTxt = LanguageTxt::find(this.TableId, this.RecId, _languageId);

        return languageTxt.Txt ? languageTxt.Txt : this.Notes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    boolean validateField(FieldId p1)
    {
        boolean ret;
        CustCollectionLetterLine custCollectionLetterLine;

        ret = super(p1);

        switch (p1)
        {
            case (fieldNum(CustCollectionLetterLine, LedgerDimension)) :
                if (this.LedgerDimension)
                {
                    ret = MainAccount::checkAllowPosting(LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.LedgerDimension).MainAccountId);
                    break;
                }
            case fieldNum(CustCollectionLetterLine, CollectionLetterCode) :
                CustCollectionLetterCodeOrderedList custCollectionLetterCodeOrderedList = CustCollectionLetterCodeOrderedList::newFromOrder();

                if (custCollectionLetterCodeOrderedList.indexOf(this.CollectionLetterCode) >= custCollectionLetterCodeOrderedList.indexOf(CustCollectionLetterCode::All))
                {
                    ret = checkFailed(strFmt("@SYS73939", this.CollectionLetterCode));
                    break;
                }
            case fieldNum(CustCollectionLetterLine, ReferToCollectionAgency_W) :
                if (this.ReferToCollectionAgency_W == NoYes::Yes)
                {
                    select firstOnly custCollectionLetterLine
                        where custCollectionLetterLine.CollectionLetterCourse == this.CollectionLetterCourse &&
                              custCollectionLetterLine.ReferToCollectionAgency_W == NoYes::Yes &&
                              custCollectionLetterLine.RecId != this.RecId;

                    if (custCollectionLetterLine)
                    {
                        ret = checkFailed("@SYS4009956");
                        break;
                    }
                }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (this.Fee && ! this.LedgerDimension)
            {
                ret = checkFailed("@SYS27830");
            }

            CustCollectionLetterCodeOrderedList custCollectionLetterCodeOrderedList = CustCollectionLetterCodeOrderedList::newFromOrder();

            if (custCollectionLetterCodeOrderedList.indexOf(this.CollectionLetterCode) >= custCollectionLetterCodeOrderedList.indexOf(CustCollectionLetterCode::All))
            {
                ret = checkFailed(strFmt("@SYS73939", this.CollectionLetterCode));
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(CollectionLetterCourseId _collectionLetterCourse, CustCollectionLetterCode _collectionLetterCode, CurrencyCode _currencyCode )
    {
        boolean ret = true;

        if (!CustCollectionLetterLine::exist(_collectionLetterCourse, _collectionLetterCode, _currencyCode))
        {
            ret = checkFailed(strFmt(CustCollectionLetterLine::txtNotExist(), _collectionLetterCourse, _collectionLetterCode, _currencyCode));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(CollectionLetterCourseId _collectionLetterCourse, CustCollectionLetterCode _collectionLetterCode, CurrencyCode _currencyCode )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     custCollectionLetterLine
                 where
                     custCollectionLetterLine.CollectionLetterCourse == _collectionLetterCourse &&
                    custCollectionLetterLine.CollectionLetterCode == _collectionLetterCode &&
                    custCollectionLetterLine.CurrencyCode == _currencyCode).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static CustCollectionLetterLine find(
        CollectionLetterCourseId _collectionLetterCourse,
        CustCollectionLetterCode _collectionLetterCode,
        CurrencyCode _currencyCode ,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustCollectionLetterLine custCollectionLetterLine;

        custCollectionLetterLine.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custCollectionLetterLine.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            custCollectionLetterLine
            where
            custCollectionLetterLine.CollectionLetterCourse == _collectionLetterCourse &&
                    custCollectionLetterLine.CollectionLetterCode == _collectionLetterCode &&
                    custCollectionLetterLine.CurrencyCode == _currencyCode;

        return custCollectionLetterLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102173";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CustCollectionLetter</ConfigurationKey>
	<DeveloperDocumentation>@SYS344921</DeveloperDocumentation>
	<FormRef>CollectionLetterCourse</FormRef>
	<Label>@SYS9195</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>CollectionLetterCourse</TitleField1>
	<TitleField2>CollectionLetterCode</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>CourseCodeCurIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>CourseCodeCurIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>LanguageTxt</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>LanguageTxt</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CollectionLetterCourse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CollectionLetterCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumOfDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Notes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Block</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Fee</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumOfDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Block</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Fee</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CollectionAgency_W</Name>
			<Label>@SYS4009955</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReferToCollectionAgency_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CollectionLetterCourse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CollectionLetterCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LedgerPosting</Name>
			<Label>@SYS3881</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Notes</Name>
			<Label>@SYS70989</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Notes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Block</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Block</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CollectionLetterCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>CustCollectionLetterCode</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CollectionLetterCourse</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CollectionLetterCourseId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustCurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Fee</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS9955</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MinAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS309896</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Notes</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Notes</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumOfDays</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PositiveDays</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReferToCollectionAgency_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReferToCollectionAgency_W</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CourseCodeCurIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CollectionLetterCourse</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CollectionLetterCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CurrencyCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FK_DimensionAttributeValueCombination_Cu</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CustCurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustCollectionLetterTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS125053</EntityRelationshipRole>
			<RelatedTable>CustCollectionLetterTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CustCollectionLetterTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>CustCollectionLetterLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CollectionLetterCourse</Name>
					<SourceEDT>CollectionLetterCourseId</SourceEDT>
					<Field>CollectionLetterCourse</Field>
					<RelatedField>CollectionLetterCourse</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustCollectionLetterLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroup</Name>
					<SourceEDT>TaxItemGroup</SourceEDT>
					<Field>TaxItemGroup</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxItemGroupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>