<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGEDocumentVersions_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerRRGEDocumentVersions_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowEdit</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean allowEdit()
    {
        return (this.Type == LedgerRRGEVersionType_W::Correction) || (this.Type == LedgerRRGEVersionType_W::Version) && this.document().allowEdit();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        LedgerRRGEDocumentVersions_W    superVersions;
        LedgerRRGEDocuments_W           document;

        ttsbegin;

        delete_from superVersions where superVersions.ParentRefRecId == this.RecId;

        if (this.document().CurrentVersion == this.RecId)
        {
            document = this.document(true);
            document.CurrentVersion = this.ParentRefRecId;
            document.update();
        }

        super();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>document</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGEDocuments_W document(boolean _forupdate = false)
    {
        return LedgerRRGEDocuments_W::find(this.LedgerRRGEDocuments_W, _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromDocument</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromDocument(LedgerRRGEDocuments_W _document)
    {
        this.LedgerRRGEDocuments_W = _document.RecId;
        this.LedgerRRGETemplates_W = _document.LedgerRRGETemplates_W;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        LedgerRRGEDocuments_W document;

        ttsbegin;

        super();

        document = this.document(true);
        if (document)
        {
            document.CurrentVersion = this.RecId;
            document.update();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>template</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public LedgerRRGETemplates_W template(boolean _forUpdate = false)
    {
        return LedgerRRGETemplates_W::find(this.LedgerRRGETemplates_W, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        LedgerRRGEDocumentVersions_W    superVersions;
        boolean                         ret = super();

        if (ret && LedgerRRGEDocumentVersions_W::versionBlocked(this.RecId))
        {
            ret = checkFailed(strFmt("@LedgerRRG:LedgerRRG_DocumentIsUsedBy", this.Notes, new xSession(this.SessionId).userId()));
        }

        if (ret)
        {
            while select superVersions
                where superVersions.ParentRefRecId == this.RecId
            {
                if (!superVersions.validateDelete())
                {
                    ret = false;
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>LedgerRRGEDocumentVersions_W</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The RecId of the LedgerRRGEDocumentVersions_W record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>LedgerRRGEDocumentVersions_W</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGEDocumentVersions_W find(
        RecId              _recId,
        boolean            _forupdate = false,
        ConcurrencyModel   _concurrencyModel = ConcurrencyModel::Auto)
    {
        LedgerRRGEDocumentVersions_W ledgerRRGEDocumentVersions;

        ledgerRRGEDocumentVersions.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            ledgerRRGEDocumentVersions.concurrencyModel(_concurrencyModel);
        }

        select firstonly ledgerRRGEDocumentVersions
            where ledgerRRGEDocumentVersions.RecId == _recId;

        return ledgerRRGEDocumentVersions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>versionBlocked</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static server Blocked versionBlocked(RecId _versionId, Blocked _value = false)
    {
        LedgerRRGEDocumentVersions_W    version;
        xSession                        xSession;

        if (!prmisDefault(_value))
        {
            ttsbegin;

            version = LedgerRRGEDocumentVersions_W::find(_versionId, true);
            if (version)
            {
                if (_value)
                {
                    if (version.SessionId && isSessionActive(version.SessionId, version.SessionLoginDateTime, true))
                    {
                        throw error(strFmt("@LedgerRRG:LedgerRRG_DocumentIsUsedBy", version.Notes, new xSession(version.SessionId).userId()));
                    }

                    xSession = new xSession(sessionId());

                    version.SessionId            = sessionId();
                    version.SessionLoginDateTime = xSession.loginDateTime();
                }
                else
                {
                    version.SessionId               = 0;
                    version.SessionLoginDateTime    = utcDateTimeNull();
                }

                version.doUpdate();
            }
            ttscommit;
        }
        else
        {
            version = LedgerRRGEDocumentVersions_W::find(_versionId);
            if (version.SessionId && !isSessionActive(version.SessionId, version.SessionLoginDateTime, true))
            {
                version.SessionId = 0;
            }
        }

        return version.SessionId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<Label>@LedgerRRG:LedgerRRG_ElectronicDocumentVersions</Label>
	<TitleField1>LedgerRRGEDocuments_W</TitleField1>
	<TitleField2>Type</TitleField2>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>Ledger</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>LedgerRRGEPropertyVersions_W</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>LedgerRRGEPropertyVersions_W</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerRRGEDocuments_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerRRGETemplates_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerRRGEDocuments_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerRRGETemplates_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>createdBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Notes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FileName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BaseDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>BaseDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>BaseDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>File</Name>
			<ExtendedDataType>DocuValueFile</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FileName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>Filename</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerRRGEDocuments_W</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>LedgerRRGEDocumentRecId_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerRRGETemplates_W</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>LedgerRRGETemplateRecId_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Notes</Name>
			<ExtendedDataType>NotesLine</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ParentRefRecId</Name>
			<ExtendedDataType>LedgerRRGEDocumentVersionRefRecId_W</ExtendedDataType>
			<Label>@SYS81227</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SessionId</Name>
			<ExtendedDataType>SessionId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>SessionLoginDateTime</Name>
			<ExtendedDataType>JournalSessionLoginDateTime</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>LedgerRRGEVersionType_W</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NotesIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Notes</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerRRGEDocuments_WIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerRRGEDocuments_W</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerRRGETemplates_WIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerRRGETemplates_W</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ParentLedgerRRGEDocumentVersions_WIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ParentRefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerRRGEDocuments_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerRRGEDocuments_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerRRGEDocuments_W</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>LedgerRRGEDocumentVersions_W</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerRRGEDocuments_W</Name>
					<Field>LedgerRRGEDocuments_W</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerRRGETemplates_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerRRGETemplates_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerRRGETemplates_W</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerRRGEDocumentVersions_W</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerRRGETemplates_W</Name>
					<Field>LedgerRRGETemplates_W</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ParentLedgerRRGEDocumentVersions_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerRRGEDocumentVersions_W</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ParentLedgerRRGEDocumentVersions_W</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>LedgerRRGEDocumentVersions_W</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentRefRecId</Name>
					<Field>ParentRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>