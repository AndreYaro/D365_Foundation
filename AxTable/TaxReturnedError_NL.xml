<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReturnedError_NL</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxReturnedError_NL extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public display ErrorTxt description()
    {
        ErrorTxt ret;

        if (this.TaxEvatError_NL)
        {
            ret = TaxEvatError_NL::find(this.TaxEvatError_NL).ErrorDescription;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>add</Name>
				<Source><![CDATA[
        public static void add(
        Num                _returnedErrorId,
        TaxDeclarationType _declarationType,
        str                _class,
        str                _code,
        str                _location = '')
    {
        TaxEvatError_NL     taxEvatError_NL;
        TaxReturnedError_NL taxReturnedError_NL;
        TaxErrorType        errorType;

        errorType = str2enum(errorType, _class);

        taxEvatError_NL = TaxEvatError_NL::findByErrorTypeCode(errorType, str2int(_code));

        ttsbegin;
        taxReturnedError_NL.TaxEvatError_NL = taxEvatError_NL.RecId;
        taxReturnedError_NL.DeclarationType = _declarationType;
        taxReturnedError_NL.ReturnedErrorId = _returnedErrorId;
        taxReturnedError_NL.ErrorLocation   = _location;
        taxReturnedError_NL.insert();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
        public static boolean checkExist(
        Num                 _returnedErrorId,
        TaxDeclarationType  _declarationType,
        RefRecId            _taxEvatErrorRecId,
        TaxErrorLocation    _taxErrorLocation)
    {
        boolean ret = true;

        if (!TaxReturnedError_NL::exist(_returnedErrorId, _declarationType, _taxEvatErrorRecId, _taxErrorLocation))
        {
            ret = checkFailed(strfmt(TaxReturnedError_NL::txtNotExist(), _returnedErrorId, _declarationType, TaxEvatError_NL::find(_taxEvatErrorRecId).ErrorId, _taxErrorLocation));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
        public static boolean exist(
        Num                 _returnedErrorId,
        TaxDeclarationType  _declarationType,
        RefRecId            _taxEvatErrorRecId,
        TaxErrorLocation    _taxErrorLocation)
    {
        boolean found;

        found = (select firstonly RecId from taxReturnedError_NL
                    where taxReturnedError_NL.ReturnedErrorId  == _returnedErrorId
                       && taxReturnedError_NL.DeclarationType  == _declarationType
                       && taxReturnedError_NL.ErrorLocation    == _taxErrorLocation
                       && taxReturnedError_NL.TaxEvatError_NL  == _taxEvatErrorRecId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>TaxReturnedError_NL</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>TaxReturnedError_NL</c> record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value the indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>TaxReturnedError_NL</c> table; otherwise, an empty record.
    /// </returns>
    public static TaxReturnedError_NL find(
        recId                   _recId,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxReturnedError_NL taxReturnedError_NL;

        taxReturnedError_NL.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxReturnedError_NL.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxReturnedError_NL
            where
                taxReturnedError_NL.RecId == _recId;

        return taxReturnedError_NL;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByErrorInfo</Name>
				<Source><![CDATA[
        public static TaxReturnedError_NL findByErrorInfo(
        Num                     _returnedErrorId,
        TaxDeclarationType      _declarationType,
        RefRecId                _taxEvatErrorRecId,
        TaxErrorLocation        _taxErrorLocation,
        boolean                 _forupdate        = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxReturnedError_NL taxReturnedError_NL;

        taxReturnedError_NL.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxReturnedError_NL.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxReturnedError_NL
            where taxReturnedError_NL.ReturnedErrorId == _returnedErrorId
               && taxReturnedError_NL.DeclarationType == _declarationType
               && taxReturnedError_NL.ErrorLocation   == _taxErrorLocation
               && taxReturnedError_NL.TaxEvatError_NL == _taxEvatErrorRecId;

        return taxReturnedError_NL;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static TxtNotExist txtNotExist()
    {
        return "@SYS103309";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<DeveloperDocumentation>@SYS123496</DeveloperDocumentation>
	<FormRef>TaxReturnedError_NL</FormRef>
	<Label>@SYS96766</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>DeclarationType</TitleField1>
	<TitleField2>ReturnedErrorId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReturnedErrorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxEvatError_NL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeclarationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ErrorLocation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Error</Name>
			<Label>@SYS92945</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxEvatError_NL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ErrorLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ErrorDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusDetails</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReturnedErrorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeclarationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeclarationType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>TaxDeclarationType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ErrorDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ErrorDescription_NL</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ErrorLocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxErrorLocation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReturnedErrorId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS5468</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StatusCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>StatusCode_NL</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>StatusDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DateTimeExecuted</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StatusDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>StatusDescription_NL</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StatusDetails</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>StatusDetails_NL</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxEvatError_NL</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS96749</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxEvatError_NLIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxEvatError_NL</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxEvatError_NL</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxEvatError_NL</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ElectronicTaxOBDeclaration</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ElectronicDeclarationReturnErrors</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxEvatError_NL</Name>
					<Field>TaxEvatError_NL</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TaxIntraCommTable_NL</Name>
			<Cardinality>OneMore</Cardinality>
			<EntityRelationshipRole>@SYS123497</EntityRelationshipRole>
			<RelatedTable>TaxIntraCommTable_NL</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxIntraCommTableIntraCommId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReturnedErrorDeclarations</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>DeclarationType</Name>
					<Field>DeclarationType</Field>
					<ValueStr>TaxDeclarationType::ICL</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReturnedErrorId</Name>
					<Field>ReturnedErrorId</Field>
					<RelatedField>IntraCommId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TaxTurnOverTable_NL</Name>
			<Cardinality>OneMore</Cardinality>
			<EntityRelationshipRole>@SYS123498</EntityRelationshipRole>
			<RelatedTable>TaxTurnOverTable_NL</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxTurnOverTableTurnOverID</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReturnedTurnErrorDeclarations</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>DeclarationType</Name>
					<Field>DeclarationType</Field>
					<ValueStr>TaxDeclarationType::VAT</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReturnedErrorId</Name>
					<Field>ReturnedErrorId</Field>
					<RelatedField>TurnOverID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>