<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailMixAndMatchLineGroups</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailMixAndMatchLineGroups extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromMixAndMatchLineGroupSetup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialises the number of items needed and discount line color.
    /// </summary>
    /// <param name="_mixAndMatchLineGroupSetup">
    /// An instance of <c>RetailMixAndMatchLineGroupSetup</c> table.
    /// </param>
    public void initFromMixAndMatchLineGroupSetup(RetailMixAndMatchLineGroupSetup _mixAndMatchLineGroupSetup)
    {
        this.NumberOfItemsNeeded = _mixAndMatchLineGroupSetup.NumberOfItemsNeeded;
        this.DiscountLineColorId = _mixAndMatchLineGroupSetup.DiscountLineColorId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the method when a field is modified.
    /// </summary>
    /// <param name="_fieldId">
    /// The field Id which is modified.
    /// </param>
    /// <remarks>
    /// Sets the value of <c>NumberOfItemsNeeded</c> and <c>DiscountLineColorId</c> to values which are specified in
    /// <c>RetailMixAndMatchLineGroupSetup</c>
    /// </remarks>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);
        if (_fieldId == fieldNum(RetailMixAndMatchLineGroups, mixAndMatchLineGroup))
        {
            this.initFromMixAndMatchLineGroupSetup(RetailMixAndMatchLineGroupSetup::find(this.mixAndMatchLineGroup));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>noOfLinesToTrigger</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of the number of items.
    /// </summary>
    /// <param name="_mixAndMatchId">
    /// The ID number of mix and match group.
    /// </param>
    /// <returns>
    /// The total number of items needed.
    /// </returns>
    public RetailNoOfLinesToTrigger noOfLinesToTrigger(RetailMixAndMatchId _mixAndMatchId)
    {
        select sum(NumberOfItemsNeeded) from this
        where this.MixAndMatchId == _mixAndMatchId;

        return this.NumberOfItemsNeeded;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </summary>
    public void renamePrimaryKey()
    {
        ;
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the record in <c>RetailMixAndMatchLineGroups</c> table.
    /// </summary>
    /// <remarks>
    /// If replication of the record is allowed for the table, action is inserted into the <c>RetailConnPreactionTable</c> table
    /// Doesnot allow to change the discount if it is enabled.
    /// Updates all linked mix and match discount lines.
    /// </remarks>
    public void update()
    {
        RetailDiscountLineMixAndMatch mixAndMatchDiscountLine;

        if (RetailPeriodicDiscount::findByOfferId(this.mixAndMatchId).Status == RetailDisabledEnabled::Enabled)
        {
            throw error("@RET4014");
        }

        super();

        // update related lines in mix and match discounts
        while select forUpdate mixAndMatchDiscountLine
            where mixAndMatchDiscountLine.OfferId == this.mixAndMatchId
                && mixAndMatchDiscountLine.lineGroup == this.mixAndMatchLineGroup
        {
            mixAndMatchDiscountLine.numberOfItemsNeeded = this.numberOfItemsNeeded;
            mixAndMatchDiscountLine.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailMixAndMatchLineGroups</c> table.
    /// </summary>
    /// <param name="_mixAndMatchId">
    /// The ID number of mix and match group.
    /// </param>
    /// <param name="_mixAndMatchLineGroup">
    /// The ID number of mix and match line group.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailMixAndMatchLineGroups</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailMixAndMatchLineGroups find(RetailMixAndMatchId _mixAndMatchId,
                                                RetailMixAndMatchLineGroup _mixAndMatchLineGroup,
                                          boolean _forUpdate = false)
    {
        RetailMixAndMatchLineGroups mixAndMatchLineGroups;

        if (_mixAndMatchId && _mixAndMatchLineGroup)
        {
            mixAndMatchLineGroups.selectForUpdate(_forUpdate);

            select firstonly mixAndMatchLineGroups
                index hint IdGroupIdx
                where   mixAndMatchLineGroups.MixAndMatchId == _mixAndMatchId
                &&      mixAndMatchLineGroups.MixAndMatchLineGroup == _mixAndMatchLineGroup;
        }

        return mixAndMatchLineGroups;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hexValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edit method to enable conversion between hex and integer value.
    /// </summary>
    /// <param name = "_set">True, If the value is set; otherwise false.</param>
    /// <param name = "_record">The <c>RetailMixAndMatchLineGroups</c> record.</param>
    /// <param name = "_color">The hex value to set.</param>
    /// <returns></returns>
    public edit Color hexValue(boolean _set, RetailMixAndMatchLineGroups _record, Color _color)
    {
        if (_set)
        {
            _record.discountLineColorId = hex2Int(_color);
        }

        return int2Hex(_record.discountLineColorId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET6127</DeveloperDocumentation>
	<FormRef>RetailMixAndMatchLineGroups</FormRef>
	<Label>@RET3902</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>mixAndMatchId</TitleField1>
	<TitleField2>mixAndMatchLineGroup</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>IdGroupIdx</ClusteredIndex>
	<Modules>Merchandising</Modules>
	<PrimaryIndex>IdGroupIdx</PrimaryIndex>
	<ReplacementKey>IdGroupIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailDiscountLineMixAndMatch</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RetailDiscountLineMixAndMatch</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>mixAndMatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>mixAndMatchLineGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>mixAndMatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>numberOfItemsNeeded</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>mixAndMatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>mixAndMatchLineGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Color</Name>
			<Label>@RET3903</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>discountLineColorId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@RET3040</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>mixAndMatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>mixAndMatchLineGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Restrictions</Name>
			<Label>@RET3156</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>numberOfItemsNeeded</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>discountLineColorId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDiscountLineColorId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>mixAndMatchId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOfferIdEx3</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>mixAndMatchLineGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailMixAndMatchLineGroup</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>numberOfItemsNeeded</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailNumberOfItemsNeeded</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>IdGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>mixAndMatchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>mixAndMatchLineGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RetailDiscountMixAndMatch</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailDiscountMixAndMatch</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>mixAndMatchId</Name>
					<Field>mixAndMatchId</Field>
					<RelatedField>OfferId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailMixAndMatchLineGroupSetup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailMixAndMatchLineGroupSetup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>mixAndMatchLineGroup</Name>
					<Field>mixAndMatchLineGroup</Field>
					<RelatedField>mixAndMatchLineGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>