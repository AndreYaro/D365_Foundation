<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTillLayoutSize</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailTillLayoutSize extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate that layout size is not being referenced before deleting.
    /// </summary>
    /// <returns>Return true if there is no issue; otherwise false.</returns>
    public boolean validateDelete()
    {
        RetailTillLayoutConfiguration layoutConfiguration;
        boolean ret;

        ret = super();

        if (ret)
        {
            // Validate that this szie is not being used by screen layout
            select firstonly RecId from layoutConfiguration
                where layoutConfiguration.SizeId == this.LayoutSizeId;

            if (layoutConfiguration.RecId)
            {
                warning("@Retail:FailedToDeleteLayoutSize");
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate for duplicated name.
    /// </summary>
    /// <returns>Return true if there is no issue; otherwise return false.</returns>
    public boolean validateWrite()
    {
        RetailTillLayoutSize layoutSize;
        boolean ret;

        ret = super();

        if (ret)
        {
            // Duplicated record is not allowed...
            select firstonly RecId from layoutSize
                where layoutSize.LayoutSizeId == this.LayoutSizeId &&
                      layoutSize.RecId != this.RecId;

            if (layoutSize.RecId)
            {
                error("@Retail:LayoutSizeDupNameError");
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateDiagonal</Name>
				<Source><![CDATA[
    private real calculateDiagonal()
    {
        return power(this.Height, 2) + power(this.Width, 2);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update diagonal when inserting record.
    /// </summary>
    public void insert()
    {
        this.Diagonal = this.calculateDiagonal();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update diagonal when updating record.
    /// </summary>
    public void update()
    {
        this.Diagonal = this.calculateDiagonal();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailTillLayoutSize</c> table by using the specified
    /// <c>RetailLayoutSizeId</c> value.
    /// </summary>
    /// <param name="_layoutSizeId">
    /// The ID value.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailTillLayout</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailTillLayoutSize find(RetailLayoutSizeId _layoutSizeId, boolean _forUpdate = false)
    {
        RetailTillLayoutSize tillLayoutSize;

        if (_layoutSizeId)
        {
            tillLayoutSize.selectForUpdate(_forUpdate);

            select firstonly tillLayoutSize
                where tillLayoutSize.LayoutSizeId == _layoutSizeId;
        }

        return tillLayoutSize;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@Retail:RetailTillLayoutSizeTableDevDoc</DeveloperDocumentation>
	<FormRef>RetailTillLayoutSize</FormRef>
	<Label>@Retail:LayoutSizes</Label>
	<TitleField1>LayoutSizeId</TitleField1>
	<TitleField2>LayoutType</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<Modules>BrickAndMortarStore</Modules>
	<ReplacementKey>nameIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LayoutSizeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LayoutSizeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>displayGroup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LayoutSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LayoutType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Width</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Height</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LayoutSizeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLayoutSizeId</ExtendedDataType>
			<Label>@RET3054</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LayoutType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>RetailLayoutType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Width</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailWidth</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Height</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailHeight</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Diagonal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>nameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LayoutSizeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>