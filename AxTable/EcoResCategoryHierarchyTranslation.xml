<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResCategoryHierarchyTranslation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResCategoryHierarchyTranslation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the specified record exists in the <c>EcoResCategoryHierarchyTranslation</c> table;
    ///    if not, an error message is displayed.
    /// </summary>
    /// <param name="_categoryHierarchy">
    ///    The category hierarchy in the <c>EcoResCategoryHierarchyTranslation</c> table to check for
    ///    existence.
    /// </param>
    /// <param name="_languageId">
    ///    The language ID in the <c>EcoResCategoryHierarchyTranslation</c> table to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(EcoResCategoryHierarchyId _categoryHierarchy,LanguageId _languageId )
    {
        if (_categoryHierarchy && _languageId && EcoResCategoryHierarchyTranslation::exist(_categoryHierarchy,_languageId))
            return true;

        return checkFailed(strfmt(EcoResCategoryHierarchyTranslation::txtNotExist(), tablepname(EcoResCategoryHierarchyTranslation),_languageId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdateHierarchyTranslation</Name>
				<Source><![CDATA[
    public static void createOrUpdateHierarchyTranslation(EcoResCategoryHierarchyId _ecoResCategoryHierarchyId,
                                                         EcoResCategoryHierarchyDescription _ecoResCategoryHierarchyDescription,
                                                         EcoResCategoryHierarchyHelpText _ecoResCategoryHierarchyHelpText = '' ,
                                                         LanguageId _languageId = LanguageTable::defaultLanguage(),
                                                         boolean _forUpdate = false)
    {
        EcoResCategoryHierarchyTranslation ecoResCategoryHierarchyTranslation;

        ecoResCategoryHierarchyTranslation = EcoResCategoryHierarchyTranslation::find(_ecoResCategoryHierarchyId,_languageId, _forUpdate);

        ttsbegin;

        if (_ecoResCategoryHierarchyId != 0)
        {
                ecoResCategoryHierarchyTranslation.CategoryHierarchy      =   _ecoResCategoryHierarchyId;
                ecoResCategoryHierarchyTranslation.Description   =   _ecoResCategoryHierarchyDescription;
                ecoResCategoryHierarchyTranslation.HelpText    =   _ecoResCategoryHierarchyHelpText;
                ecoResCategoryHierarchyTranslation.LanguageId    =   _languageId;

                if (_forUpdate)
                {
                        ecoResCategoryHierarchyTranslation.update();
                }
                else
                {
                        ecoResCategoryHierarchyTranslation.insert();
                }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a record in the <c>EcoResCategoryHierarchyTranslation</c> table exists.
    /// </summary>
    /// <param name="_categoryHierarchy">
    ///    The category hierarchy in the <c>EcoResCategoryHierarchyTranslation</c> table to check for
    ///    existence.
    /// </param>
    /// <param name="_languageId">
    ///    The language ID in the <c>EcoResCategoryHierarchyTranslation</c> table to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(EcoResCategoryHierarchyId _categoryHierarchy,LanguageId _languageId )
    {
        return (EcoResCategoryHierarchyTranslation::find(_categoryHierarchy,_languageId).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified category hierarchy translation in the <c>EcoResCategoryHierarchyTranslation</c>
    ///    table.
    /// </summary>
    /// <param name="_categoryHierarchy">
    ///    The category hierarchy in the <c>EcoResCategoryHierarchyTranslation</c> table to find.
    /// </param>
    /// <param name="_languageId">
    ///    The language ID in the <c>EcoResCategoryHierarchyTranslation</c> table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether the record should be read for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EcoResCategoryHierarchyTranslation</c> table if found; otherwise, an empty
    ///    buffer.
    /// </returns>
    public static EcoResCategoryHierarchyTranslation find(EcoResCategoryHierarchyId _categoryHierarchy,LanguageId _languageId , boolean _forUpdate = false)
    {
        EcoResCategoryHierarchyTranslation    ecoResCategoryHierarchyTranslation = null;

        if (_categoryHierarchy && _languageId)
        {
            ecoResCategoryHierarchyTranslation.selectForUpdate(_forUpdate);
            select ecoResCategoryHierarchyTranslation where ecoResCategoryHierarchyTranslation.CategoryHierarchy == _categoryHierarchy &&
                                                            ecoResCategoryHierarchyTranslation.LanguageId == _languageId;
        }

        return ecoResCategoryHierarchyTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>EcoResCategoryHierarchyTranlsation</c>
    ///    table does not exist.
    /// </summary>
    /// <returns>
    ///    The message that indicates a record does not exist.
    /// </returns>
    public static str txtNotExist()
    {
        return "@SYS327065";
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the fields on the table.
    /// </summary>
    public void initValue()
    {
        super();
        this.LanguageId = SystemParameters::getSystemLanguageId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS309797</DeveloperDocumentation>
	<FormRef>EcoResCategoryHierarchyListPage</FormRef>
	<Label>@SYS300453</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>CategoryHierarchy</TitleField1>
	<TitleField2>LanguageId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>HierarchyLanguage</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>HierarchyLanguage</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CategoryHierarchy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CategoryHierarchy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS27587</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CategoryHierarchy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HelpText</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CategoryHierarchy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategoryHierarchyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategoryHierarchyDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HelpText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategoryHierarchyHelpText</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageIdAll</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>HierarchyLanguage</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CategoryHierarchy</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LanguageId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategoryHierarchy</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>EcoResCategoryHierarchy</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategoryHierarchy</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EcoResCategoryHierarchy_EcoResCategoryHierarchyTranslation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryHierarchy</Name>
					<Field>CategoryHierarchy</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LanguageTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EcoResCategoryHierarchyTranslation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LanguageId</Name>
					<SourceEDT>LanguageIdAll</SourceEDT>
					<Field>LanguageId</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>