<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferJour</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransferJour extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>currencyInfo_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to display the currency of <c>InventTransferLine</c> table.
    /// </summary>
    /// <returns>
    /// Returns the currency code.
    /// </returns>
    display CurrencyCode currencyInfo_IN()
    {
        InventTransferLine  receiveInventLine;
        str                 curr;

        receiveInventLine   = InventTransferJourLine::findInventTransLine_IN(this.TransferId, this.VoucherId);
        curr                = any2str(receiveInventLine.inventTransferLine_IN().CurrencyCode);

        return curr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exciseAmtInvent_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to display the invent excise amount.
    /// </summary>
    /// <returns>
    /// Returns the invent excise amount.
    /// </returns>
    display Amount exciseAmtInvent_IN()
    {
        InventTransferJourLine  inventTransJourLine;

        select sum(ExciseAmt_IN) from inventTransJourLine
            where inventTransJourLine.TransferId == this.TransferId
               && inventTransJourLine.VoucherId  == this.VoucherId;

        return inventTransJourLine.ExciseAmt_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalDocumentNumber_BR</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the fiscal document number associated with the transfer journal
    /// </summary>
    /// <returns>
    ///     The fiscal document number
    /// </returns>
    ///
    public display FiscalDocumentNumber_BR fiscalDocumentNumber_BR()
    {
        return FiscalDocument_BR::findByRef(this.TableId, this.RecId).FiscalDocumentNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalDocumentSeries_BR</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the fiscal document series associated with the transfer journal
    /// </summary>
    /// <returns>
    ///     The fiscal document series
    /// </returns>

    public display FiscalDocumentSeries_BR fiscalDocumentSeries_BR()
    {
        return FiscalDocument_BR::findByRef(this.TableId, this.RecId).FiscalDocumentSeries;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a formatted address based on the source address.
    /// </summary>
    /// <returns>
    /// A formatted address based on the source address
    /// </returns>
    display LogisticsAddressing fromAddress()
    {
        LogisticsPostalAddress address = LogisticsPostalAddress::findRecId(this.FromPostalAddress);

        // <GEERU>
        boolean                countryRegion_RU = LogisticsPostalAddressUtility::isCountryRegionRU(address.CountryRegionId);
        // </GEERU>

        if (countryRegion_RU)
        {
            var addressStringBuilderParameters = LogisticsPostalAddressStringBuilderParameters::constructFromLogisticsPostalAddress(address);
            addressStringBuilderParameters.parmDistrictName('');
            addressStringBuilderParameters.parmStreetNumber(countryRegion_RU ? address.StreetNumber : '');
            addressStringBuilderParameters.parmBuildingCompliment(countryRegion_RU ? address.BuildingCompliment : '');
            addressStringBuilderParameters.parmPostBox(countryRegion_RU ? address.PostBox : '');

            return LogisticsPostalAddressStringBuilder::buildAddressStringFromParameters(addressStringBuilderParameters);
        }
        else
        {
            return address.Address;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTransferParmTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes fields based on the <c>InventTransferParmTable</c> table record passed as a parameter.
    /// </summary>
    /// <param name="_inventTransferParmTable">
    ///    An <c>InventTransferParmTable</c> table record.
    /// </param>
    public void initFromInventTransferParmTable(InventTransferParmTable    _inventTransferParmTable)
    {
        this.UpdateType         = _inventTransferParmTable.UpdateType;
        this.UpdatedByWorker    = _inventTransferParmTable.UpdatedByWorker;
        this.TrackingId         = _inventTransferParmTable.TrackingId;
        this.TransDate          = _inventTransferParmTable.TransDate;
        this.AutoReceiveQty     = _inventTransferParmTable.AutoReceiveQty;
        // <GEERU>
        this.LicenseCardType_RU     = _inventTransferParmTable.LicenseCardType_RU;
        this.LicenseCardRegNum_RU   = _inventTransferParmTable.LicenseCardRegNum_RU;
        this.LicenseCardSeries_RU   = _inventTransferParmTable.LicenseCardSeries_RU;
        this.LicenseCardNum_RU      = _inventTransferParmTable.LicenseCardNum_RU;
        this.CarrierType_RU         = _inventTransferParmTable.CarrierType_RU;
        this.CarrierCode_RU         = _inventTransferParmTable.CarrierCode_RU;
        this.DeliveryDate_RU        = _inventTransferParmTable.DeliveryDate_RU;
        this.VehicleModel_RU        = _inventTransferParmTable.VehicleModel_RU;
        this.VehiclePlateNum_RU     = _inventTransferParmTable.VehiclePlateNum_RU;
        this.WaybillNum_RU          = _inventTransferParmTable.WaybillNum_RU;
        this.DriverName_RU          = _inventTransferParmTable.DriverName_RU;
        this.DrivingLicenseNum_RU   = _inventTransferParmTable.DrivingLicenseNum_RU;
        this.TransportationType_RU  = _inventTransferParmTable.TransportationType_RU;

        this.OffSessionId_RU        = _inventTransferParmTable.OffSessionId_RU;

        this.TransferType_RU            = _inventTransferParmTable.TransferType_RU;
        this.PartyAccountNum_RU         = _inventTransferParmTable.PartyAccountNum_RU;
        this.PartyAgreementHeaderExt_RU    = _inventTransferParmTable.PartyAgreementHeaderExt_RU;
        this.PriceGroupId_RU            = _inventTransferParmTable.PriceGroupId_RU;
        this.CurrencyCode_RU            = _inventTransferParmTable.CurrencyCode_RU;

        this.DriverContact_RU           = _inventTransferParmTable.DriverContact_RU;
        this.TransportInvoiceType_RU    = _inventTransferParmTable.TransportInvoiceType_RU;
        this.CargoDescription_RU        = _inventTransferParmTable.CargoDescription_RU;
        this.CargoPacking_RU            = _inventTransferParmTable.CargoPacking_RU;

        this.LadingPostalAddress_RU     = _inventTransferParmTable.LadingPostalAddress_RU;
        this.UnladingPostalAddress_RU   = _inventTransferParmTable.UnladingPostalAddress_RU;
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTransferTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes fields based on the <c>InventTransferTable</c> table record passed as a parameter.
    /// </summary>
    /// <param name="_inventTransferTable">
    ///    An <c>InventTransferTable</c> table record.
    /// </param>
    public void initFromInventTransferTable(InventTransferTable    _inventTransferTable)
    {
        this.TransferId                 = _inventTransferTable.TransferId;

        this.InventLocationIdFrom       = _inventTransferTable.InventLocationIdFrom;
        this.FromAddressName            = _inventTransferTable.FromAddressName;
        this.FromPostalAddress          = _inventTransferTable.FromPostalAddress;
        this.FromContactPerson          = _inventTransferTable.FromContactPerson;

        this.InventLocationIdTransit    = _inventTransferTable.InventLocationIdTransit;

        this.InventLocationIdTo         = _inventTransferTable.InventLocationIdTo;
        this.ToAddressName              = _inventTransferTable.ToAddressName;
        this.ToPostalAddress            = _inventTransferTable.ToPostalAddress;
        this.ToContactPerson            = _inventTransferTable.ToContactPerson;

        this.DlvModeId                  = _inventTransferTable.DlvModeId;
        this.DlvTermId                  = _inventTransferTable.DlvTermId;
        this.FreightZoneId              = _inventTransferTable.FreightZoneId;
        this.FreightSlipType            = _inventTransferTable.FreightSlipType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransferTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>InventTransferTable</c> record related to this transfer journal record
    /// </summary>
    /// <returns>
    /// The <c>InventTransferTable</c> record related to this <c>InventTransferJour</c>
    /// </returns>
    public InventTransferTable inventTransferTable()
    {
        return InventTransferTable::find(this.TransferId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>invSalesTaxAmt_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to display the invoice sales tax amount.
    /// </summary>
    /// <returns>
    /// Returns the invoice sales tax amount.
    /// </returns>
    display Amount invSalesTaxAmt_IN()
    {
        InventTransferJourLine  inventTransJourLine;

        select sum(SalesTaxAmt_IN) from inventTransJourLine
            where inventTransJourLine.TransferId == this.TransferId
               && inventTransJourLine.VoucherId  == this.VoucherId;

        return inventTransJourLine.SalesTaxAmt_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invTotalAmtRecve_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to display the invoice total receive amount.
    /// </summary>
    /// <returns>
    /// Returns the invoice total receive amount.
    /// </returns>
    display Amount invTotalAmtRecve_IN()
    {
        InventTransferJourLine  inventTransJourLine;
        real                    totals;
        TaxTrans_IN             taxTrans_IN;
        FormulaDesigner_IN      formulaDesigner_IN;

        select sum(vatAmt_IN), sum(SalesTaxAmt_IN), sum(ExciseAmt_IN), sum(NetAmtReceive_IN) from inventTransJourLine
            where inventTransJourLine.TransferId == this.TransferId
               && inventTransJourLine.VoucherId  == this.VoucherId;

        select sum(TaxAmount) from taxTrans_IN
            join RecId from formulaDesigner_IN
            where taxTrans_IN.TaxItemGroup      == formulaDesigner_IN.TaxItemGroup &&
                formulaDesigner_IN.PriceInclTax == NoYes::Yes &&
                formulaDesigner_IN.TaxCode      == taxTrans_IN.TaxCode &&
                taxTrans_IN.Voucher             == this.VoucherId &&
                taxTrans_IN.TransDate           == this.TransDate &&
                taxTrans_IN.SourceTableId       == tableNum(InventTransferLine);

        totals = (inventTransJourLine.NetAmtReceive_IN
                  + inventTransJourLine.vatAmt_IN
                  + inventTransJourLine.ExciseAmt_IN
                  + inventTransJourLine.SalesTaxAmt_IN
                  + VATRetentionTrans_IN::vatRetentionCalc(this.TransferId)
                  - abs(taxTrans_IN.TaxAmount));

        return totals;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invTotalAmtShip_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to display the invoice total amount.
    /// </summary>
    /// <returns>
    /// Returns invoice total amount.
    /// </returns>
    display Amount invTotalAmtShip_IN()
    {
        InventTransferJourLine  inventTransJourLine;
        real                    totals;
        TaxTrans_IN             taxTrans_IN;
        FormulaDesigner_IN      formulaDesigner_IN;

        select sum(vatAmt_IN), sum(SalesTaxAmt_IN), sum(ExciseAmt_IN), sum(NetAmtShip_IN) from inventTransJourLine
            where inventTransJourLine.TransferId == this.TransferId
               && inventTransJourLine.VoucherId  == this.VoucherId;

        select sum(TaxAmount) from taxTrans_IN
            join RecId from formulaDesigner_IN
            where taxTrans_IN.TaxItemGroup      == formulaDesigner_IN.TaxItemGroup &&
                formulaDesigner_IN.PriceInclTax == NoYes::Yes &&
                formulaDesigner_IN.TaxCode      == taxTrans_IN.TaxCode &&
                taxTrans_IN.Voucher             == this.VoucherId &&
                taxTrans_IN.TransDate           == this.TransDate &&
                taxTrans_IN.SourceTableId       == tableNum(InventTransferLine);

        totals = (inventTransJourLine.NetAmtShip_IN
                  + inventTransJourLine.vatAmt_IN
                  + inventTransJourLine.ExciseAmt_IN
                  + inventTransJourLine.SalesTaxAmt_IN
                  + VATRetentionTrans_IN::vatRetentionCalc(this.TransferId)
                  - abs(taxTrans_IN.TaxAmount));

        return totals;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invVatAmt_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to display the VAT amount.
    /// </summary>
    /// <returns>
    /// Returns VAT amount.
    /// </returns>
    display Amount invVatAmt_IN()
    {
        InventTransferJourLine  inventTransJourLine;

        select sum(vatAmt_IN) from inventTransJourLine
            where inventTransJourLine.TransferId == this.TransferId
               && inventTransJourLine.VoucherId  == this.VoucherId;

        return inventTransJourLine.vatAmt_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invVatRetention_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to display the retention amount.
    /// </summary>
    /// <returns>
    /// Returns retention amount.
    /// </returns>
    display RetentionAmt_IN invVatRetention_IN()
    {
        return VATRetentionTrans_IN::vatRetentionCalc(this.TransferId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>netAmtReceive_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to display the net amount.
    /// </summary>
    /// <returns>
    /// Returns net amount.
    /// </returns>
    display Price netAmtReceive_IN()
    {
        InventTransferJourLine  inventTransJourLine;
        TaxTrans_IN             taxTrans_IN;
        FormulaDesigner_IN      formulaDesigner_IN;

        select sum(NetAmtReceive_IN) from inventTransJourLine
            where inventTransJourLine.TransferId == this.TransferId
               && inventTransJourLine.VoucherId  == this.VoucherId;

        select sum(TaxAmount) from taxTrans_IN
            join RecId from formulaDesigner_IN
            where taxTrans_IN.TaxItemGroup      == formulaDesigner_IN.TaxItemGroup &&
                formulaDesigner_IN.PriceInclTax == NoYes::Yes &&
                formulaDesigner_IN.TaxCode      == taxTrans_IN.TaxCode &&
                taxTrans_IN.Voucher             == this.VoucherId &&
                taxTrans_IN.TransDate           == this.TransDate &&
                taxTrans_IN.SourceTableId       == tableNum(InventTransferLine);

        return inventTransJourLine.NetAmtReceive_IN - abs(taxTrans_IN.TaxAmount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>netAmtShip_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to return the net amount.
    /// </summary>
    /// <returns>
    /// Returns the net amount.
    /// </returns>
    display Price netAmtShip_IN()
    {
        InventTransferJourLine  inventTransJourLine;
        TaxTrans_IN             taxTrans_IN;
        FormulaDesigner_IN      formulaDesigner_IN;

        select sum(NetAmtShip_IN) from inventTransJourLine
            where inventTransJourLine.TransferId == this.TransferId
               && inventTransJourLine.VoucherId  == this.VoucherId;

        select sum(TaxAmount) from taxTrans_IN
            join RecId from formulaDesigner_IN
            where taxTrans_IN.TaxItemGroup      == formulaDesigner_IN.TaxItemGroup &&
                formulaDesigner_IN.PriceInclTax == NoYes::Yes &&
                formulaDesigner_IN.TaxCode      == taxTrans_IN.TaxCode &&
                taxTrans_IN.Voucher             == this.VoucherId &&
                taxTrans_IN.TransDate           == this.TransDate &&
                taxTrans_IN.SourceTableId       == tableNum(InventTransferLine);

        return inventTransJourLine.NetAmtShip_IN - abs(taxTrans_IN.TaxAmount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>partyCustTable_RU</Name>
				<Source><![CDATA[
    public CustTable partyCustTable_RU()
    {
        return CustTable::findByPartyRecId(this.partyVendTable_RU().Party);
    }

]]></Source>
			</Method>
			<Method>
				<Name>partyVendTable_RU</Name>
				<Source><![CDATA[
    public VendTable partyVendTable_RU()
    {
        return VendTable::find(this.PartyAccountNum_RU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>toAddress</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a formatted address based on the destination (to) address.
    /// </summary>
    /// <returns>
    ///    a formatted address based on the destination (to) address
    /// </returns>
    display LogisticsAddressing toAddress()
    {
        LogisticsPostalAddress address = LogisticsPostalAddress::findRecId(this.ToPostalAddress);
        // <GEERU>
        boolean                countryRegion_RU = LogisticsPostalAddressUtility::isCountryRegionRU(address.CountryRegionId);
        // </GEERU>

        if (countryRegion_RU)
        {
            var addressStringBuilderParameters = LogisticsPostalAddressStringBuilderParameters::constructFromLogisticsPostalAddress(address);
            addressStringBuilderParameters.parmDistrictName('');
            addressStringBuilderParameters.parmStreetNumber(countryRegion_RU ? address.StreetNumber : '');
            addressStringBuilderParameters.parmBuildingCompliment(countryRegion_RU ? address.BuildingCompliment : '');
            addressStringBuilderParameters.parmPostBox(countryRegion_RU ? address.PostBox : '');

            return LogisticsPostalAddressStringBuilder::buildAddressStringFromParameters(addressStringBuilderParameters);
        }
        else
        {
            return address.Address;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>toWHLocationId_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to display the LocationId.
    /// </summary>
    /// <returns>
    /// Returns locationId.
    /// </returns>
    display InventLocationIdTo toWHLocationId_IN()
    {
        InventTransferTable inventTransTable;
        InventLocationIdTo  locationId;

        inventTransTable = InventTransferTable::find(this.TransferId, false);

        if (inventTransTable.TransferType_IN == TransferType_IN::StockTransfer)
            locationId = inventTransTable.InventLocationIdTo;
        else
            locationId = "";

        return locationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static public boolean exist(
        InventTransferId            _transferId,
        InventTransferVoucherId     _voucherId)
    {
        return _transferId &&
               _voucherId    &&
               (select inventTransferJour
                    where inventTransferJour.TransferId == _transferId &&
                          inventTransferJour.VoucherId  == _voucherId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static public InventTransferJour find(
        InventTransferId            _transferId,
        InventTransferVoucherId     _voucherId,
        boolean                     _forUpdate = false)
    {
        InventTransferJour      inventTransferJour;

        inventTransferJour.selectForUpdate(_forUpdate);

        if (_transferId)
        {
            select firstonly inventTransferJour
                where inventTransferJour.TransferId  == _transferId &&
                      inventTransferJour.VoucherId   == _voucherId;
        }

        return inventTransferJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>InventTransferJour</c> table.
    /// </summary>
    /// <param name="_inventTransferJourRecId">
    /// The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The specified record if found; otherwise, an empty buffer.
    /// </returns>
    public static InventTransferJour findRecId(RefRecId _inventTransferJourRecId, boolean _forUpdate = false)
    {
        InventTransferJour inventTransferJour;

        if (_inventTransferJourRecId)
        {
            inventTransferJour.selectForUpdate(_forUpdate);

            select firstonly inventTransferJour
                where inventTransferJour.RecId == _inventTransferJourRecId;
        }

        return inventTransferJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupShipmentVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Looks up the voucher ID for the associated inventory transaction. Shipments that have already been
    /// received are excluded.
    /// </summary>
    /// <param name="_ctrl">
    /// The parent control.
    /// </param>
    /// <param name="_inventTransferId">
    /// The transaction that identifies the transaction history.
    /// </param>
    /// <param name="_updateQtyReceive">
    /// Determines which qty for receive should be updated; optional.
    /// </param>
    /// <param name="_updateQtyShip">
    /// Determines which qty for shipment should be updated; optional.
    /// </param>
    /// <remarks>
    /// This method is used by the <c>InventTransferParmReceive</c> form to list the vouchers for shipments
    /// that have not yet been fully received.
    /// </remarks>
    static public void lookupShipmentVoucher(
        FormStringControl       _ctrl,
        InventTransferId               _inventTransferId,
        InventTransferReceiveUpdateQty _updateQtyReceive = InventTransferReceiveUpdateQty::Shipment,
        InventTransferShipUpdateQty    _updateQtyShip    = InventTransferShipUpdateQty::DocumentReturn_RU)
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    qbdJour;
        QueryBuildDataSource    qbdParmTable;
        // <GEERU>
        #ISOCountryRegionCodes
        // </GEERU>

        // Create table lookup in the the transfer order history
        sysTableLookup = SysTableLookup::newParameters(tableNum(InventTransferJour), _ctrl);
        sysTableLookup.addLookupfield(fieldNum(InventTransferJour, VoucherId));
        sysTableLookup.addLookupfield(fieldNum(InventTransferJour, TransferId));
        sysTableLookup.addLookupfield(fieldNum(InventTransferJour, TransDate));
        sysTableLookup.addLookupfield(fieldNum(InventTransferJour, TrackingId));
        sysTableLookup.addLookupfield(fieldNum(InventTransferJour, UpdatedByWorker));

        if (_inventTransferId)
        {
            // Limit the lookup to shipments for the same transaction
            query = new Query();
            qbdJour = query.addDataSource(tableNum(InventTransferJour));
            qbdJour.addRange(fieldNum(InventTransferJour, TransferId)).value(queryValue(_inventTransferId));

            // <GEERU>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) || BrazilParameters::isEnabled())
            {
                sysTableLookup.addLookupfield(fieldNum(InventTransferJour, UpdateType));

                switch (_updateQtyReceive)
                {
                    case InventTransferReceiveUpdateQty::Shipment:
                        qbdJour.addRange(fieldNum(InventTransferJour, UpdateType)).value(queryValue(InventTransferUpdateType::Shipment));
                        // Exclude shipments which have been previously fully received (proved by existence in InventTransferParmTable)
                        //   NOTE: We only exclude shipments that have been received with EditLines unchecked - thus indicating
                        //   a full receive without changes to the lines. This will be the common case for shipment receipts.
                        qbdJour.addRange(fieldNum(InventTransferJour, Return_RU)).value(queryValue(NoYes::No));
                        qbdParmTable = qbdJour.addDataSource(tableNum(InventTransferParmTable));
                        qbdParmTable.joinMode( JoinMode::NoExistsJoin );
                        qbdParmTable.addLink(fieldNum(InventTransferJour,VoucherId),fieldNum(InventTransferParmTable,VoucherShipmentId));
                        qbdParmTable.addRange(fieldNum(InventTransferParmTable, EditLines)).value(SysQuery::value(NoYes::No));
                        qbdParmTable.addRange(fieldNum(InventTransferParmTable,JobStatus)).value(SysQuery::valueNot(ParmJobStatus::ContainErrors));
                        qbdParmTable.addRange(fieldNum(InventTransferParmTable, ReceiveUpdateQty)).value(queryValue(InventTransferReceiveUpdateQty::Shipment));

                        if (BrazilParameters::isEnabled())
                        {
                            sysTableLookup.addLookupMethod(tableMethodStr(InventTransferJour, fiscalDocumentSeries_BR));
                            sysTableLookup.addLookupMethod(tableMethodStr(InventTransferJour, fiscalDocumentNumber_BR));
                            sysTableLookup.addSelectionField(fieldNum(InventTransferJour, RecId));

                            qbdParmTable = qbdJour.addDataSource(tableNum(FiscalDocument_BR));

                            if (!InventTransferTable::find(_inventTransferId).inventTransferTableFiscalInfo_BR().canCreateShipmentFiscalDocument())
                            {
                                qbdParmTable.joinMode(JoinMode::OuterJoin);
                            }
                            qbdParmTable.relations(true);
                            qbdParmTable.addRange(fieldNum(FiscalDocument_BR, Status)).value(SysQuery::valueNot(FiscalDocumentStatus_BR::Cancelled));
                        }

                        break;
                    case InventTransferReceiveUpdateQty::DocumentReturn_RU:
                        sysTableLookup.addLookupfield(fieldNum(InventTransferJour, Return_RU));
                        sysTableLookup.addLookupfield(fieldNum(InventTransferJour, Storno_RU));
                        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                        {
                            qbdJour.addRange(fieldNum(InventTransferJour, UpdateType)).value(queryValue(InventTransferUpdateType::Receive));
                        }
                        break;
                    case InventTransferReceiveUpdateQty::ReceiveNow:
                        if (_updateQtyShip == InventTransferShipUpdateQty::DocumentReturn_RU)
                        {
                            sysTableLookup.addLookupfield(fieldNum(InventTransferJour, Return_RU));
                            sysTableLookup.addLookupfield(fieldNum(InventTransferJour, Storno_RU));
                            qbdJour.addRange(fieldNum(InventTransferJour, UpdateType)).value(queryValue(InventTransferUpdateType::Shipment));
                            break;
                        }
                        else
                        return;
                        break;
                    default:
                        return;
                }
            }
            else
            {
            // </GEERU>
            qbdJour.addRange(fieldNum(InventTransferJour, UpdateType)).value(queryValue(InventTransferUpdateType::Shipment));
            qbdJour.addRange(fieldNum(InventTransferJour, CanceledShipment)).value(queryValue(NoYes::No));

            // Exclude shipments which have been previously fully received (proved by existence in InventTransferParmTable)
            //   NOTE: We only exclude shipments that have been received with EditLines unchecked - thus indicating
            //   a full receive without changes to the lines. This will be the common case for shipment receipts.
            qbdParmTable = qbdJour.addDataSource(tableNum(InventTransferParmTable));
            qbdParmTable.joinMode( JoinMode::NoExistsJoin );
            qbdParmTable.addLink(fieldNum(InventTransferJour,VoucherId),fieldNum(InventTransferParmTable,VoucherShipmentId));
            qbdParmTable.addRange(fieldNum(InventTransferParmTable,EditLines)).value(SysQuery::value(NoYes::No));
            qbdParmTable.addRange(fieldNum(InventTransferParmTable,JobStatus)).value(SysQuery::valueNot(ParmJobStatus::ContainErrors));
            // <GEERU>
            }
            // </GEERU>

            sysTableLookup.parmQuery(query);
        }

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupTrackingId</Name>
				<Source><![CDATA[
    static public void lookupTrackingId(
        FormStringControl           _ctrl,
        InventTransferId            _inventTransferId,
        InventTransferVoucherId     _shipmentVoucherId = '')
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;

        sysTableLookup = SysTableLookup::newParameters(tableNum(InventTransferJour), _ctrl);
        sysTableLookup.addLookupfield(fieldNum(InventTransferJour, TrackingId));
        sysTableLookup.addLookupfield(fieldNum(InventTransferJour, VoucherId));
        sysTableLookup.addLookupfield(fieldNum(InventTransferJour, TransDate));
        sysTableLookup.addLookupfield(fieldNum(InventTransferJour, UpdateType));
        if (_inventTransferId)
        {
            query = new Query();
            queryBuildDataSource = query.addDataSource(tableNum(InventTransferJour));
            queryBuildDataSource.addRange(fieldNum(InventTransferJour, TransferId)).value(queryValue(_inventTransferId));
            queryBuildDataSource.addRange(fieldNum(InventTransferJour, UpdateType)).value(queryValue(InventTransferUpdateType::Shipment));
            if (_shipmentVoucherId)
            {
                queryBuildDataSource.addRange(fieldNum(InventTransferJour, VoucherId)).value(queryValue(_shipmentVoucherId));
            }

            sysTableLookup.parmQuery(query);
        }
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ttsbegin;

        super();
        if (TaxParameters::isExciseEnable_IN())
        {
            this.SysExtensionSerializerMap::postInsert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransferJour_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>InventTransferJour_IN</c> record associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>InventTransferJour_IN</c> record.
    /// </returns>
    public InventTransferJour_IN inventTransferJour_IN()
    {
        return this.SysExtensionSerializerMap::getExtensionTable(tableNum(InventTransferJour_IN));
    }

]]></Source>
			</Method>
			<Method>
				<Name>packInventTransferJour_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Packs the <c>InventTransferJour_IN</c> record into the current record.
    /// </summary>
    /// <param name ="_inventTransferJour">
    /// The <c>InventTransferJour_IN</c> record.
    /// </param>
    public void packInventTransferJour_IN(InventTransferJour_IN _inventTransferJour)
    {
        _inventTransferJour.InventTransferJour = this.RecId;
        this.SysExtensionSerializerMap::packExtensionTable(_inventTransferJour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCanceled</Name>
				<Source><![CDATA[
    public boolean isCanceled()
    {
        return (select firstonly RecId from inventTransferJour
                    where inventTransferJour.TransferId == this.TransferId
                       && inventTransferJour.CanceledShipmentJournalRecId == this.RecId).RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventTransferOrders</ConfigurationKey>
	<DeveloperDocumentation>@SYS124010</DeveloperDocumentation>
	<Label>@SYS78303</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>TransferId</TitleField1>
	<TitleField2>VoucherId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>TransferIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>TransferIdx</PrimaryIndex>
	<ReplacementKey>TransferIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpdateType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpdatedByWorker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VoucherId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TrackingId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpdatedByWorker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Addresses_RU</Name>
			<Label>@SYS7566</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LadingPostalAddress_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnladingPostalAddress_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CancelReason</Name>
			<Label>@SYS114149</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonTableRef_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Carrier_RU</Name>
			<Label>@SYS50733</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CarrierType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierCode_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocumentStatus_LT</Name>
			<Label>@GLS112820</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FromWarehouse</Name>
			<Label>@SYS25253</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventLocationIdFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromAddressName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>fromAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromContactPerson</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General_RU</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OffSessionId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LicenseCard_RU</Name>
			<Label>@GLS111069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LicenseCardType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicenseCardRegNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicenseCardSeries_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicenseCardNum_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PackingSlipNumbering_W</Name>
			<Label>@SYS68453</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Num_LT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Numbering_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Party_RU</Name>
			<Label>@SYS102988</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartyAccountNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartyAgreementHeaderExt_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Price_RU</Name>
			<Label>@SYS11865</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PriceGroupId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Shipment</Name>
			<Label>@SYS50389</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DlvModeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvTermId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ToWarehouse</Name>
			<Label>@SYS8519</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventLocationIdTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToAddressName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>toAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToContactPerson</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransferOrder</Name>
			<Label>@SYS78234</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventLocationIdFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationIdTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationIdTransit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transport</Name>
			<Label>@SYS3843</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FreightZoneId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreightSlipType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transportation_RU</Name>
			<Label>@GLS111070</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryDate_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VehicleModel_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VehiclePlateNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DriverName_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DrivingLicenseNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DriverContact_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportationType_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransportInvoice_RU</Name>
			<Label>@GLS221922</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransportInvoiceType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CargoDescription_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CargoPacking_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Updated</Name>
			<Label>@SYS439</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UpdateType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpdatedByWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TrackingId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoReceiveQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Storno_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Return_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BillOfLadingId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ForeignTrade</Name>
			<Label>@SYS27650</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IntrastatDispatch</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoReceiveQty</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferAutoReceiveQty</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BillOfLadingId_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>WMSBillOfLadingId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CanceledShipment</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SCM:CanceledShipment</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CanceledShipmentJournalRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferJourRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CargoDescription_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CargoDescription_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CargoPacking_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CargoPacking_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CarrierCode_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CarrierCode_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CarrierType_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CarrierType_W</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DeliveryDate_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>DlvDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvModeId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferDlvModeId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvTermId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferDlvTermId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DriverContact_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DriverContact_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DriverName_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DriverName_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DrivingLicenseNum_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DrivingLicenseNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FreightSlipType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>FreightSlipType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FreightZoneId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FreightZoneId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FromAddressName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FromContactPerson</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventTransferContactPerson</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FromPostalAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IntrastatDispatch</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IntrastatDispatchId</ExtendedDataType>
			<FeatureClass>IntrastatDispatchIdToggle</FeatureClass>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationIdFrom</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationIdFrom</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationIdTo</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationIdTo</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationIdTransit</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationIdTransit</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LadingPostalAddress_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>LogisticsPostalAddressRecId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicenseCardNum_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LicenseCardNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicenseCardRegNum_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LicenseCardRegNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicenseCardSeries_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LicenseCardSeries_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LicenseCardType_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>LicenseCardType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Num_LT</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>LT,LV</CountryRegionCodes>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS16995</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Numbering_W</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>LT,LV</CountryRegionCodes>
			<ExtendedDataType>LtDocNumberingCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@GLS112818</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OffSessionId_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>OffSessionId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PartyAccountNum_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferPartyAccount_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PartyAgreementHeaderExt_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AgreementHeaderExtRecId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PriceGroupId_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>CustPriceGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReasonTableRef_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>ReasonTableRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Return_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU,BR</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS104270</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Storno_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Storno_RU</ExtendedDataType>
			<Label>@SYS6054</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToAddressName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ToContactPerson</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventTransferContactPerson</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ToPostalAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TrackingId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferTrackingId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS14475</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransferId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransferType_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventTransferType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportationType_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransportationType_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransportInvoiceType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TransportInvoiceType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>UnladingPostalAddress_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>UpdatedByWorker</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UpdateType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventTransferUpdateType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VehicleModel_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VehicleModel_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VehiclePlateNum_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VehiclePlateNum_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VoucherId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferVoucherId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaybillNum_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WaybillNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PackedExtensions</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysExtensionSerializerPackedContainer</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxRegistrationRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PartyTaxID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxRegistrationRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TransferIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TransferId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VoucherId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PartyAgreementHeaderExt_RUIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PartyAgreementHeaderExt_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FromPostalAddressIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FromPostalAddress</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ToPostalAddressIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ToPostalAddress</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LadingPostalAddress_RUIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LadingPostalAddress_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>UnladingPostalAddress_RUIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>UnladingPostalAddress_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CustVendPackingSlipRegistration</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DeliveryDate</MapField>
					<MapFieldTo>TransDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryName</MapField>
					<MapFieldTo>ToAddressName</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryPostalAddress</MapField>
					<MapFieldTo>ToPostalAddress</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OrderAccount</MapField>
					<MapFieldTo>InventLocationIdTo</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackingSlipId</MapField>
					<MapFieldTo>TransferId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackingSlipNumberingCode_LT</MapField>
					<MapFieldTo>Numbering_W</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackingSlipRegister_LT</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackingSlipStatus_LT</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Voucher</MapField>
					<MapFieldTo>VoucherId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>PackedExtensions</MapField>
					<MapFieldTo>PackedExtensions</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackedPrioritizedIdList</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalTable</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>InclTax</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PartyTaxId</MapField>
					<MapFieldTo>PartyTaxID</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Posted</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxId</MapField>
					<MapFieldTo>TaxID</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ListCode</MapField>
					<MapFieldTo>Listcode</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InventTransferMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransferId</MapField>
					<MapFieldTo>TransferId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UpdateType</MapField>
					<MapFieldTo>UpdateType</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode_RU</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode_RU</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DlvMode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvModeId</Name>
					<Field>DlvModeId</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DlvTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvTermId</Name>
					<Field>DlvTermId</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FromContactPerson</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_1_InventTransferJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FromContactPerson</Name>
					<Field>FromContactPerson</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FromInventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>FromInventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransferJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationIdFrom</Name>
					<Field>InventLocationIdFrom</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>InventLocationType_Extern</Name>
					<RelatedField>InventLocationType</RelatedField>
					<ValueStr>InventLocationType::Standard</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FromLogisticsPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>FromLogisticsPostalAddress</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>FromLogisticsPostalAddress_InventTransferJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FromPostalAddress</Name>
					<Field>FromPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransferTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransferTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransferId</Name>
					<Field>TransferId</Field>
					<RelatedField>TransferId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransferIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LadingPostalAddress_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LadingPostalAddress_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransferJour</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LadingPostalAddress_RU</Name>
					<Field>LadingPostalAddress_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>OfficialsTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>OfficialsTrans_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffSessionId_RU</Name>
					<SourceEDT>OffSessionId_RU</SourceEDT>
					<Field>OffSessionId_RU</Field>
					<RelatedField>OffSessionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PartyAgreementHeaderExt_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AgreementHeaderExt_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartyAgreementHeaderExt_RU</Name>
					<Field>PartyAgreementHeaderExt_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PartyVendTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PartyVendTable_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartyAccountNum_RU</Name>
					<SourceEDT>InventTransferPartyAccount_RU</SourceEDT>
					<Field>PartyAccountNum_RU</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PriceDiscGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<SourceEDT>CustPriceGroup</SourceEDT>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<SourceEDT>CustPriceGroup</SourceEDT>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PriceGroupId_RU</Name>
					<SourceEDT>CustPriceGroup</SourceEDT>
					<Field>PriceGroupId_RU</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReasonTableRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ReasonTableRef</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReasonTableRef_BR</Name>
					<Field>ReasonTableRef_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ToContactPerson</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_InventTransferJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToContactPerson</Name>
					<Field>ToContactPerson</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ToInventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ToInventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransferJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationIdTo</Name>
					<Field>InventLocationIdTo</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>InventLocationType_Extern</Name>
					<RelatedField>InventLocationType</RelatedField>
					<ValueStr>InventLocationType::Standard</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ToLogisticsPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ToLogisticsPostalAddress</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ToLogisticsPostalAddress_InventTransferJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToPostalAddress</Name>
					<Field>ToPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TransitInventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TransitInventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransferJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationIdTransit</Name>
					<Field>InventLocationIdTransit</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>InventLocationType_Extern</Name>
					<RelatedField>InventLocationType</RelatedField>
					<ValueStr>InventLocationType::Transit</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TransportationTypeTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TransportationTypeTable_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransportationType_RU</Name>
					<SourceEDT>TransportationType_RU</SourceEDT>
					<Field>TransportationType_RU</Field>
					<RelatedField>Type</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnladingPostalAddress_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>UnladingPostalAddress_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransferJour</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnladingPostalAddress_RU</Name>
					<Field>UnladingPostalAddress_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UpdatedByWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker_2</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_2_InventTransferJour</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UpdatedByWorker</Name>
					<Field>UpdatedByWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VehicleModelTable_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VehicleModelTable_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VehicleModel_RU</Name>
					<SourceEDT>VehicleModel_W</SourceEDT>
					<Field>VehicleModel_RU</Field>
					<RelatedField>VehicleModel</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ModelIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WMSBillOfLading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WMSBillOfLading</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BillOfLadingId_RU</Name>
					<SourceEDT>WMSBillOfLadingId</SourceEDT>
					<Field>BillOfLadingId_RU</Field>
					<RelatedField>billOfLadingId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>IdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxRegistration</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxRegistration</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxRegistration</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxRegistration_InventTransferJour</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxID</Name>
					<Field>TaxID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PartyTaxRegistration</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxRegistration</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PartyTaxRegistration</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PartyTaxRegistration_InventTransferJour</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartyTaxID</Name>
					<Field>PartyTaxID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>