<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTmpAssortedProductDateRange</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailTmpAssortedProductDateRange extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAvailableDateRanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the date ranges from retail assortment date ranges.
    /// </summary>
    /// <param name="_operatingUnitId">
    /// Operating unit id.
    /// </param>
    /// <param name="_productId">
    /// Product id.
    /// </param>
    /// <param name="_fromValidDate">
    /// Valid from date.
    /// </param>
    /// <param name="_toValidDate">
    /// Valid to date.
    /// </param>
    /// <returns>
    /// List of date ranges.
    /// </returns>
    public List getAvailableDateRanges(
        OMOperatingUnitRefRecId _operatingUnitId, EcoResProductRecId _productId, ValidFromDate _fromValidDate, ValidToDate _toValidDate)
    {
        List dateRanges = new List(Types::Class);
        List restrictionsDateRanges = new List(Types::Class);
        RetailAssortmentDateRange inputDateRange = new RetailAssortmentDateRange(_fromValidDate, _toValidDate);
        RetailAssortmentDateRange availabilityDateRange;

        while select this
            where
                this.omOperatingUnitId == _operatingUnitId &&
                this.Product == _productId &&
                this.ValidTo >= _fromValidDate

        {
            availabilityDateRange = new RetailAssortmentDateRange(this.ValidFrom, this.ValidTo);

            restrictionsDateRanges.addEnd(availabilityDateRange);
        }

        dateRanges = inputDateRange.intersectList(restrictionsDateRanges);

        return dateRanges;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeFromAssortment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates all the catalog product intervals according to assortment.
    /// </summary>
    /// <param name="_catalogRecId">
    /// Catalog record id.
    /// </param>
    /// <param name="_startDate">
    /// Start date of the catalog
    /// </param>
    /// <param name="_omOperatingUnitId">
    /// Operating unit record ID.
    /// </param>
    /// <remarks>
    /// Make sure that the actual products in the catalog is calculated before calling this.
    /// </remarks>
    public static void initializeFromAssortment(CatalogRefRecId _catalogRecId, ValidFromDate _startDate, OMOperatingUnitRefRecId _omOperatingUnitId)
    {
        RetailTmpAssortedProductDateRange tmpRetailAssortedProductDateRange;
        RetailAssortmentView assortedProducts;
        EcoResDistinctProductVariant productVariant;
        CatalogTmpProduct tmpCatalogProduct;
        RetailCatalogChannelCurrent catalogChannelCurrent;

        insert_recordset tmpRetailAssortedProductDateRange (Catalog, Product, ValidFrom, ValidTo, OMOperatingUnitId)
        select _catalogRecId, Product, ValidFrom, ValidTo, OmOperatingUnitId
        from assortedProducts
        group by OmOperatingUnitId, Product, ValidFrom, ValidTo
        where assortedProducts.ValidTo >= _startDate &&
                assortedProducts.Variant == 0 &&
                assortedProducts.OMOperatingUnitId == _omOperatingUnitId
            join tmpCatalogProduct
                where tmpCatalogProduct.Catalog == _catalogRecId &&
                        tmpCatalogProduct.Product == assortedProducts.Product;

        // add explicitly assorted variants
        insert_recordset tmpRetailAssortedProductDateRange (Catalog, Product, ValidFrom, ValidTo, OMOperatingUnitId)
        select _catalogRecId, Variant, ValidFrom, ValidTo, OmOperatingUnitId
        from assortedProducts
        group by OmOperatingUnitId, Variant, ValidFrom, ValidTo
        where assortedProducts.ValidTo >= _startDate &&
                assortedProducts.Variant != 0 &&
                assortedProducts.OMOperatingUnitId == _omOperatingUnitId
            join tmpCatalogProduct
                where tmpCatalogProduct.Catalog == _catalogRecId &&
                        tmpCatalogProduct.Product == assortedProducts.Variant;

        // insert variants that were not explicitly assorted
        // their validity is the validity of the master.
        insert_recordset tmpRetailAssortedProductDateRange (Catalog, Product, ValidFrom, ValidTo, OMOperatingUnitId)
        select _catalogRecId, RecId
        from productVariant
            join tmpCatalogProduct
                where tmpCatalogProduct.Catalog == _catalogRecId &&
                        tmpCatalogProduct.Product == productVariant.RecId
            join ValidFrom, ValidTo, OMOperatingUnitId from assortedProducts
                where productVariant.ProductMaster == assortedProducts.Product &&
                        assortedProducts.ValidTo >= _startDate &&
                        assortedProducts.Variant == 0 &&
                        assortedProducts.OMOperatingUnitId == _omOperatingUnitId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET490141</DeveloperDocumentation>
	<Label>@RET490140</Label>
	<TitleField1>Product</TitleField1>
	<TitleField2>OMOperatingUnitId</TitleField2>
	<Modules>SystemAdministration</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Catalog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OMOperatingUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Catalog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OMOperatingUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Catalog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OMOperatingUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Catalog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OMOperatingUnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>OMOperatingUnitRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Product</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidFromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidToDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>OperatingUnitProductIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OMOperatingUnitId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Product</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Catalog</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Catalog</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Catalog</Name>
					<Field>Catalog</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResProduct</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResProduct</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Product</Name>
					<Field>Product</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OMOperatingUnit</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>OMOperatingUnit</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OMOperatingUnitId</Name>
					<Field>OMOperatingUnitId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>