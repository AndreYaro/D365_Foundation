<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetBookBonus</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetBookBonus extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromAssetBonusTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes <c>AssetBonus</c> buffer based on the Bonus Id.
    /// </summary>
    /// <param name = "_bonusId">Bonus Id value.</param>
    public void initFromAssetBonusTable(AssetBonusId _bonusId = this.BonusId)
    {
        AssetBonus assetBonus;

        assetBonus = AssetBonus::find(_bonusId);

        // If record is found, initialize the fields
        if (assetBonus)
        {
            this.Amount = assetBonus.Amount;
            this.Description = assetBonus.Description;
            this.Percentage = assetBonus.Percentage;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromAssetGroupSetupBonusTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes <c>AssetBonus</c> buffer based on <c>AssetGroupSetupBonus</c> record.
    /// </summary>
    /// <param name = "_bookId">Asset book Id</param>
    /// <param name = "_assetId">Asset Id</param>
    /// <param name = "_bonusId">Bonus Id</param>
    /// <returns>True, if the record has been initialized; otherwise, false</returns>
    public boolean initFromAssetGroupSetupBonusTable(
        AssetBookId                 _bookId = this.BookId,
        AssetId                     _assetId = this.AssetId,
        AssetBonusId                _bonusId = this.BonusId)
    {
        boolean result = false;

        AssetGroupSetupBonus assetGroupSetupBonus =
            AssetGroupSetupBonus::findByAssetBookId(_bookId, AssetTable::find(_assetId).AssetGroup, _bonusId);

        // If record is found, initialize the fields
        if (assetGroupSetupBonus)
        {
            this.BonusId = assetGroupSetupBonus.BonusId;
            this.Amount = assetGroupSetupBonus.Amount;
            this.Description = assetGroupSetupBonus.Description;
            this.Percentage = assetGroupSetupBonus.Percentage;
            this.Priority = assetGroupSetupBonus.Priority;

            result = true;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(AssetBookBonus, BonusId):

                if (!this.initFromAssetGroupSetupBonusTable())
                {
                    this.initFromAssetBonusTable();
                }

                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId field)
    {
        boolean ok;

        ok = super(field);

        if (ok)
        {
            switch (field)
            {
                case fieldnum(AssetBookBonus, Percentage):
                    if (this.Percentage > 100)
                    {
                        this.Percentage = 100;
                    }

                    if (this.Percentage != 0)
                    {
                        this.Amount = 0;
                    }

                    if (this.Percentage != this.orig().Percentage
                        && (AssetTrans::existDepreciationTrans(this.AssetId, this.BookId, true)
                        || LedgerJournalTrans_Asset::existDepreciationJournals(this.AssetId, this.BookId, true)))
                    {
                        ok = checkFailed(strfmt("@SYS95556", AssetTransType::Depreciation,
                                                            AssetTransType::DepreciationAdj,
                                                            AssetTransType::BonusDepreciation,
                                                            AssetTransType::ExtraordinaryDepreciation));
                    }
                    break;

                case fieldnum(AssetBookBonus, Amount):
                    if (this.Amount > 0)
                    {
                        this.Percentage = 0;
                    }

                    if (this.Amount != this.orig().Amount
                        && (AssetTrans::existDepreciationTrans(this.AssetId, this.BookId, true)
                        || LedgerJournalTrans_Asset::existDepreciationJournals(this.AssetId, this.BookId, true)))
                    {
                        ok = checkFailed(strfmt("@SYS95557", AssetTransType::Depreciation,
                                                            AssetTransType::DepreciationAdj,
                                                            AssetTransType::BonusDepreciation,
                                                            AssetTransType::ExtraordinaryDepreciation));
                    }

                    break;
            }
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        AssetBookBonus assetBookBonus;
        boolean ret;

        ret = super();

        if (this.Priority <= 0)
        {
            return checkFailed("@SYS94653");
        }

        select firstonly assetBookBonus
            where assetBookBonus.BookId == this.BookId
                && assetBookBonus.AssetId == this.AssetId
                && assetBookBonus.Priority == this.Priority;

        if (assetBookBonus && assetBookBonus.RecId != this.RecId)
        {
            ret = checkFailed("@FixedAssets:FA_MessageValidation_PriorityMustBeUniqueForSpecialDepreciationAllowance");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(
        AssetBookId     _bookId,
        AssetId         _assetId,
        AssetBonusId    _bonusId)
    {
        boolean ret = true;

        if (!AssetBookBonus::exist(_bookId, _assetId, _bonusId))
        {
            ret = checkFailed(strfmt(AssetBookBonus::txtNotExist(), _bookId, _assetId, _bonusId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromAssetGroupSetupBonus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates <c>AssetBookBonus</c> record if the record does not yet exist.
    /// </summary>
    /// <param name = "_assetTable"><c>AssetTable</c> buffer</param>
    /// <param name = "_assetGroupSetupBonus"><c>AssetGroupSetupBonus</c> buffer</param>
    public static void createFromAssetGroupSetupBonus(
        AssetTable                  _assetTable,
        AssetGroupSetupBonus        _assetGroupSetupBonus)
    {
        AssetBookBonus  assetBookBonus;
        boolean            doesExist;

        // Check if parameters are set
        if (_assetTable && _assetGroupSetupBonus &&
            (_assetTable.AssetGroup == _assetGroupSetupBonus.AssetGroupId) )
        {
            ttsbegin;

            doesExist = AssetBookBonus::exist(
                _assetGroupSetupBonus.BookId,
                _assetTable.AssetId,
                _assetGroupSetupBonus.BonusId);

            if (!doesExist)
            {
                assetBookBonus.clear();
                assetBookBonus.AssetId = _assetTable.AssetId;
                assetBookBonus.BookId  = _assetGroupSetupBonus.BookId;
                assetBookBonus.BonusId = _assetGroupSetupBonus.BonusId;
                assetBookBonus.Amount = _assetGroupSetupBonus.Amount;
                assetBookBonus.Description = _assetGroupSetupBonus.Description;
                assetBookBonus.Percentage = _assetGroupSetupBonus.Percentage;
                assetBookBonus.Priority = _assetGroupSetupBonus.Priority;
                assetBookBonus.insert();
            }
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(
        AssetBookId     _bookId,
        AssetId         _assetId,
        AssetBonusId    _bonusId)
    {
        boolean found;

        found = (select firstonly
                     RecId
                 from
                     assetBookBonus
                 where
                     assetBookBonus.BookId == _bookId &&
                     assetBookBonus.AssetId == _assetId &&
                     assetBookBonus.BonusId == _bonusId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static AssetBookBonus find(
        AssetBookId         _bookId,
        AssetId             _assetId,
        AssetBonusId        _bonusId,
        boolean             _forupdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetBookBonus      assetBookBonus;

        assetBookBonus.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            assetBookBonus.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            assetBookBonus
        where
            assetBookBonus.BookId == _bookId &&
            assetBookBonus.AssetId == _assetId &&
            assetBookBonus.BonusId == _bonusId;

        return assetBookBonus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@FixedAssets:FA_MessageValidation_RecordWithBookAssetAndSpecialDepreciationAllowanceDoesNotExist";
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the current record can be deleted.
    /// </summary>
    /// <returns>True if validation is successful, otherwise false.</returns>
    public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (ret
            && (AssetTrans::existDepreciationTrans(this.AssetId, this.BookId, true)
            || LedgerJournalTrans_Asset::existDepreciationJournals(this.AssetId, this.BookId, true)))
        {
            ret = checkFailed(strfmt("@FixedAssets:FA_ErrorMessage_DeletingSpecialDepreciationOnBook", this.BonusId));
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<DeveloperDocumentation>@FixedAssets:FA_TableDeveloper_AssetBookBonus</DeveloperDocumentation>
	<FormRef>AssetBookBonus</FormRef>
	<Label>@FixedAssets:FA_TableLabel_AssetBookBonus</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>AssetId</TitleField1>
	<TitleField2>BookId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>AssetBookBonusIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>FixedAssets</Modules>
	<PrimaryIndex>AssetBookBonusIdx</PrimaryIndex>
	<ReplacementKey>AssetBookBonusIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BonusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Priority</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BonusId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Bonus</Name>
			<Label>@SYS101281</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Percentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS25589</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BonusId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Priority</Name>
			<Label>@SYS80083</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Priority</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetBonusAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BonusId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetBonusId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BookId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetBookId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percentage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepreciationPercentage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Priority</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Label>@SYS80083</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AssetBookBonusIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BookId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BonusId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetBonus</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetBonus</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BonusId</Name>
					<SourceEDT>AssetBonusId</SourceEDT>
					<Field>BonusId</Field>
					<RelatedField>BonusId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>BonusIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>AssetBook</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS127389</EntityRelationshipRole>
			<RelatedTable>AssetBook</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>AssetBook</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetBookBonus</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetId</Name>
					<Field>AssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BookId</Name>
					<Field>BookId</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetBookTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetBookTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BookId</Name>
					<SourceEDT>AssetBookId</SourceEDT>
					<Field>BookId</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetTable_AssertId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>AssetTable_AssertId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetDepBookBonus</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetId</Name>
					<SourceEDT>AssetId</SourceEDT>
					<Field>AssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupAssetIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>