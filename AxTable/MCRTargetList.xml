<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRTargetList</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRTargetList extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayAccountNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the account number of the associated customer or prospect.
    /// </summary>
    /// <returns>
    ///     The account number of the associated customer or prospect.
    /// </returns>
    public display AccountNum displayAccountNum()
    {
        AccountNum      accountNum;
        CustTable       custTable;

        custTable = CustTable::findByPartyRecId(this.Party);
        if (custTable)
        {
            accountNum = custTable.AccountNum;
        }
        else
        {
            accountNum = smmBusRelTable::findByParty(this.Party).BusRelAccount;
        }

        return accountNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayContactName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the contact's name for display.
    /// </summary>
    /// <returns>
    ///     The contact person's name.
    /// </returns>
    public display Name displayContactName()
    {
        Name name;

        if (this.ContactPersonId)
        {
            name = ContactPerson::find(this.ContactPersonId).partyName();
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the party's names for display.
    /// </summary>
    /// <returns>
    ///     The party's name.
    /// </returns>
    public display DirPartyName displayName()
    {
        return DirPartyTable::findRec(this.Party).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayType</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the type of target, customer or prospect.
    /// </summary>
    /// <returns>
    ///     Customer if the target is a customer; otherwise, prospect.
    /// </returns>
    public display MCRTargetPartyType displayType()
    {
        MCRTargetPartyType  type;
        CustTable           custTable;

        custTable = CustTable::findByPartyRecId(this.Party);
        if (custTable)
        {
            type = "@SYS11779";
        }
        else
        {
            type = "@SYS80138";
        }

        return type;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editContactName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the contact name based on the contact ID entered.
    /// </summary>
    /// <param name="_set">
    ///     The <c>boolean</c> value to determine whether or not to set the contact name.
    /// </param>
    /// <param name="_name">
    ///     The contact person's name to edit.
    /// </param>
    /// <returns>
    ///     The contact person's name.
    /// </returns>
    public edit ContactPersonName  editContactName(boolean _set, ContactPersonName _name)
    {
        #define.blank('')

        ContactPersonName   name = _name;

        if (_set)
        {
            if (name)
            {
                this.ContactPersonId = ContactPerson::find(_name).ContactPersonId;

                if (this.ContactPersonId)
                {
                    name = ContactPerson::find(this.ContactPersonId).partyName();
                }
            }
            else
            {
                this.ContactPersonId = #blank;
            }
        }
        else
        {
            name = this.displayContactName();
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editParty</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the party based on the party number selected.
    /// </summary>
    /// <param name="_set">
    ///     The <c>boolean</c> value to determine whether or not to set the party.
    /// </param>
    /// <param name="_partyNumber">
    ///     The party number to select.
    /// </param>
    /// <returns>
    ///     The party's number.
    /// </returns>
    public edit AccountNum editParty(boolean _set, DirPartyNumber _partyNumber)
    {
        DirPartyTable   dirPartyTable;
        AccountNum      accountNum;
        CustTable       custTable;
        smmBusRelTable  smmBusRelTable;

        if (_set && _partyNumber)
        {
           custTable = CustTable::find(_partyNumber);
           if (custTable)
           {
               this.Party = custTable.Party;
               this.CustAccount = custTable.AccountNum;
               this.ContactPersonId = custTable.ContactPersonId;
           }
           else
           {
               smmBusRelTable = smmBusRelTable::find(_partyNumber);
               if (smmBusRelTable)
               {
                   this.Party = smmBusRelTable.Party;
                   this.CustAccount = smmBusRelTable.BusRelAccount;
               }
           }

           if (!(custTable || smmBusRelTable))
           {
               dirPartyTable = DirPartyTable::find(_partyNumber);
               if (dirPartyTable)
               {
                   this.Party = dirPartyTable.RecId;
               }
            }
        }

        custTable = CustTable::findByPartyRecId(this.Party);
        if (custTable)
        {
            accountNum = custTable.AccountNum;
        }
        else
        {
            accountNum = smmBusRelTable::findByParty(this.Party).BusRelAccount;
        }
        return accountNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addImportedBRToTargetList</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Adds the imported business relations to the target list.
    /// </summary>
    /// <param name="_listId">
    ///     The smm list ID.
    /// </param>
    /// <param name="_targetId">
    ///     The target list to which the business relations should be added.
    /// </param>
    /// <param name="_overwriteAppend">
    ///     The value that indicates an overwrite or append to the business relation.
    /// </param>
    public static void addImportedBRToTargetList(MCRSmmListId _listId, MCRTargetId _targetId, OverwriteAppend _overwriteAppend)
    {
        smmBusRelTable  busRelTable;
        ContactPerson   contactPerson;
        MCRTargetList   mcrTargetList;
        MCRsmmBusRelTable  mcrsmmBusRelTable;

        if (_overwriteAppend == OverwriteAppend::Overwrite)
        {
            delete_from mcrTargetList
                where mcrTargetList.TargetID == _targetId;
        }

        ttsBegin;

        // If the business relation does not exist in target list add it.
        while select Party from busRelTable
            join Party, ContactPersonId from contactPerson
            where  contactPerson.Party == busRelTable.party
            exists join mcrsmmBusRelTable
            where mcrsmmBusRelTable.smmBusRelTable == busRelTable.RecId
                && mcrsmmBusRelTable.ListId == _listId

        {
            // contact may already be on the list if appending.
            if (_overwriteAppend == OverwriteAppend::Append)
            {
                select firstonly RecId from mcrTargetList
                    where mcrTargetList.TargetID == _targetId
                        && mcrTargetList.ContactPersonId == contactPerson.ContactPersonId;

                if (mcrTargetList)
                {
                    continue;
                }
            }

            mcrTargetList.TargetID = _targetId;
            mcrTargetList.ContactPersonId = contactPerson.ContactPersonId;
            mcrTargetList.Party = contactPerson.Party;

            if (mcrTargetList.validateWrite())
            {
                mcrTargetList.insert();
            }
            else
            {
                throw error("@SYS104318");
            }
        }
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupCustomerOrProspect</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Looks up a list of customers and prospects.
    /// </summary>
    /// <param name="_formControl">
    ///     The control on which the look up will be performed.
    /// </param>
    public static void lookupCustomerOrProspect(FormControl _formControl)
    {
        SysTableLookup                      sysTableLookup = SysTableLookup::newParameters(tableNum(TmpMCRStr), _formControl);
        TmpMCRStr                           tmpMCRStr;

        tmpMCRStr = MCRTargetList::insertTmpStrCustomersProspects();

        sysTableLookup.parmTmpBuffer(tmpMCRStr);
        sysTableLookup.addLookupfield(fieldNum(TmpMCRStr, String20));
        sysTableLookup.setLabel("@SYS1996");
        sysTableLookup.addLookupfield(fieldNum(TmpMCRStr, Str1260));
        sysTableLookup.setLabel("@AccountsReceivable:PersonName");
        sysTableLookup.addLookupfield(fieldNum(TmpMCRStr, String15));
        sysTableLookup.setLabel("@SYS330576");

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveSelectionToList</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Copies the campaign selected targets to the promotion target for reuse.
    /// </summary>
    /// <param name="_targetId">
    ///     The target ID.
    /// </param>
    /// <param name="_campaignId">
    ///     The campaign ID.
    /// </param>
    /// <param name="_overwriteAppend">
    ///     The <c>boolean</c> value to determine whether or not to overwrite the target list.
    /// </param>
    public static void saveSelectionToList(MCRTargetId      _targetId,
                                    smmCampaignId   _campaignId,
                                    OverwriteAppend _overwriteAppend)
    {
        smmCampaignSelectionResult  smmCampaignSelectionResult;
        MCRTargetList               mcrTargetList;

        if (_overwriteAppend == OverwriteAppend::Overwrite)
        {
            delete_from mcrTargetList
                where mcrTargetList.TargetID == _targetId;
        }

        ttsBegin;

        // Record may exists already even of overwritting based on the way
        // the smmCampaignSelectionResult table is keyed.
        while select Party, ContactPersonId from smmCampaignSelectionResult
            notexists join mcrTargetList
            where mcrTargetList.ContactPersonId == smmCampaignSelectionResult.ContactPersonId
            && mcrTargetList.TargetID == _targetId
            && smmCampaignSelectionResult.CampaignId == _campaignId
        {
            mcrTargetList.TargetID        = _targetId;
            mcrTargetList.ContactPersonId = smmCampaignSelectionResult.ContactPersonId;
            mcrTargetList.Party           = smmCampaignSelectionResult.Party;
            if (mcrTargetList.validateWrite())
            {
                mcrTargetList.insert();
            }
            else
            {
                throw error("@SYS104318");
            }
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertTmpStrCustomersProspects</Name>
				<Source><![CDATA[
    private static TmpMCRStr insertTmpStrCustomersProspects()
    {
        TmpMCRStr       tmpMCRStr;
        DirPartyTable   dirPartyTable;
        CustTable       custTable;
        smmBusRelTable  smmBusRelTable;
        String15        prospect = "@SYS80138";
        String15        customer = "@SYS11779";

        insert_recordset tmpMCRStr (Str1260, String15, String20)
            select Name, customer from dirPartyTable
                join AccountNum from custTable
                where custTable.Party == dirPartyTable.RecId;

        insert_recordset tmpMCRStr (Str1260, String15, String20)
            select Name, prospect from dirPartyTable
                join BusRelAccount from smmBusRelTable
                where smmBusRelTable.Party == dirPartyTable.RecId
                notexists join custTable
                where custTable.Party == dirPartyTable.RecId;

        select tmpMCRStr;
        return tmpMCRStr;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MCRSourceCode</ConfigurationKey>
	<DeveloperDocumentation>@MCR25735</DeveloperDocumentation>
	<Label>@MCR25735</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>TargetID</TitleField1>
	<TitleField2>ContactPersonId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>TargetContact</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>CommerceCustomers</Modules>
	<PrimaryIndex>TargetContact</PrimaryIndex>
	<ReplacementKey>TargetContact</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TargetID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TargetID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@MCR36253</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TargetList</Name>
			<Label>@MCR25735</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TargetID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPersonId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ContactPersonId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Party</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DirPartyRecId</ExtendedDataType>
			<Label>@SYS319238</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TargetID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRTargetID</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TargetContact</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TargetID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Party</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ContactPerson</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ContactPerson</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContactPersonId</Name>
					<SourceEDT>ContactPersonId</SourceEDT>
					<Field>ContactPersonId</Field>
					<RelatedField>ContactPersonId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<SourceEDT>DirPartyRecId</SourceEDT>
					<Field>Party</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DirPartyTable_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DirPartyTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DirPartyTable_MCRTargetList</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRSourceCodeSetup</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>MCRSourceCodeSetup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TargetID</Name>
					<Field>TargetID</Field>
					<RelatedField>TargetID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRTargetSetup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>MCRTargetSetup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TargetID</Name>
					<SourceEDT>MCRTargetID</SourceEDT>
					<Field>TargetID</Field>
					<RelatedField>TargetID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>