<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmBusRelDefaultLocation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class smmBusRelDefaultLocation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exists</Name>
				<Source><![CDATA[
    [SysObsoleteAttribute('Exists has been deprecated. Please use ExistsV2.', false, 30\6\2023)]
    public static boolean exists(smmBusRelAccount _account, LogisticsLocationRoleRecId _roleId)
    {
        smmBusRelDefaultLocation defaultLocation;
        DirPartyLocationRole partyLocationRole;

        select firstOnly RecId from defaultLocation
              where defaultLocation.BusRelAccount == _account
        exists join partyLocationRole
            where partyLocationRole.RecId == defaultLocation.PartyLocationRole &&
            partyLocationRole.LocationRole == _roleId;

        return (defaultLocation.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsV2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks for the existance of the default location for a given prospect.
    /// </summary>
    /// <param name = "_account">The prospect account.</param>
    /// <param name = "_roleId">The role Id.</param>
    /// <param name = "_checkAddressExpired">A boolean to indicate whether or not to check for expired addresses.</param>
    /// <returns>true if the default location for the given customer exists; otherwise, false.</returns>
    public static boolean existsV2(smmBusRelAccount _account, LogisticsLocationRoleRecId _roleId, boolean _checkAddressExpired = false)
    {
        // Check to ensure that existsV2 query is not run for empty busRelAccount or LogisticsLocationRoleRecId which can cause performance issues
        if (!_account || !_roleId)
        {
            return false;
        }

        smmBusRelDefaultLocation defaultLocation;
        Query query = new Query();
        query.firstOnly1(true);

        QueryBuildDataSource qbd = query.addDataSource(tableNum(smmBusRelDefaultLocation));
        qbd.addSelectionField(fieldNum(smmBusRelDefaultLocation, RecId));
        qbd.addRange(fieldNum(smmBusRelDefaultLocation, BusRelAccount)).value(_account);

        qbd = qbd.addDataSource(tableNum(DirPartyLocationRole));
        qbd.joinMode(JoinMode::ExistsJoin);
        qbd.addLink(fieldNum(smmBusRelDefaultLocation, PartyLocationRole), fieldNum(DirPartyLocationRole, RecId));
        qbd.addRange(fieldNum(DirPartyLocationRole, LocationRole)).value(int642Str(_roleId));

        qbd = qbd.addDataSource(tableNum(DirPartyLocation));
        qbd.joinMode(JoinMode::ExistsJoin);
        qbd.addLink(fieldNum(DirPartyLocationRole, PartyLocation), fieldNum(DirPartyLocation, RecId));

        QueryBuildDataSource qbdBusRelTable = qbd.addDataSource(tableNum(smmBusRelTable));
        qbdBusRelTable.relations(false);
        qbdBusRelTable.addLink(fieldNum(DirPartyLocation, Party), fieldNum(smmBusRelTable, Party));
        qbdBusRelTable.addRange(fieldNum(smmBusRelTable, BusRelAccount)).value(_account);
        qbdBusRelTable.fetchMode(QueryFetchMode::One2One);
        qbdBusRelTable.joinMode(JoinMode::ExistsJoin);

        if (_checkAddressExpired)
        {
            QueryBuildDataSource qbdPostalAddress = qbd.addDataSource(tableNum(LogisticsPostalAddress));
            qbdPostalAddress.relations(false);
            qbdPostalAddress.addLink(fieldNum(DirPartyLocation, Location), fieldNum(LogisticsPostalAddress, Location));
            qbdPostalAddress.fetchMode(QueryFetchMode::One2One);
            qbdPostalAddress.joinMode(JoinMode::ExistsJoin);
        }

        QueryRun qr = new QueryRun(query);
        if (qr.next())
        {
            defaultLocation = qr.get(tableNum(smmBusRelDefaultLocation));
        }

        return (defaultLocation.RecId != 0);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SmmCRM</ConfigurationKey>
	<DeveloperDocumentation>@SYS324044</DeveloperDocumentation>
	<FormRef>smmBusRelTable</FormRef>
	<Label>@SYS300501</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>BusRelAccount</TitleField1>
	<CacheLookup>Found</CacheLookup>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>SalesAndMarketing</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BusRelAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartyLocationRole</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BusRelAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartyLocationRole</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BusRelAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmBusRelAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PartyLocationRole</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>smmBusRelTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BusRelAccount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DirPartyLocationRoleIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PartyLocationRole</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DirPartyLocationRole</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>DirPartyLocationRole</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartyLocationRole</Name>
					<Field>PartyLocationRole</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmBusRelTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>smmBusRelTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BusRelAccount</Name>
					<SourceEDT>smmBusRelAccount</SourceEDT>
					<Field>BusRelAccount</Field>
					<RelatedField>BusRelAccount</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>