<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CommReportTransPrepayment_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CommReportTransPrepayment_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates values for fields VATAmountMST, VATvalue.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    server public void calcTax()
    {
        TaxTrans            taxTrans;
        TaxTable            taxTable;
        CalcPostedTaxes_RU  calcPostedTaxes;
        CustVendTrans       custVendTrans = this.custVendTrans();

        select sum(SourceBaseAmountCur),
           sum(SourceTaxAmountCur),
           sum(SourceRegulateAmountCur),
           sum(TaxBaseAmount),
           sum(TaxAmount) from taxTrans
        group by TaxCode, TaxAutogenerated, TaxGroup, TaxItemGroup, TransDate
        where taxTrans.TransDate   == custVendTrans.TransDate &&
          taxTrans.Voucher     == custVendTrans.Voucher   &&
          taxTrans.TaxOrigin   == TaxOrigin::Tax;

        calcPostedTaxes = new CalcPostedTaxes_RU(taxTrans);
        calcPostedTaxes.calc();

        if (! calcPostedTaxes.taxBaseAmountCur_VAT()        &&
        ! calcPostedTaxes.taxBaseAmountCur_VATReduced() &&
        ! calcPostedTaxes.taxBaseAmountCur_VATZero()    &&
        ! calcPostedTaxes.taxAmountCur_VAT()            &&
        ! calcPostedTaxes.taxAmountCur_VATReduced()     &&
        ! calcPostedTaxes.taxAmountCur_VATZero())
        {
            return;
        }

        select firstonly
           sum(SourceBaseAmountCur),
           sum(SourceTaxAmountCur),
           sum(SourceRegulateAmountCur),
           sum(TaxBaseAmount),
           sum(TaxAmount) from taxTrans
        group by TaxCode, TaxValue, TaxAutogenerated, TaxGroup, TaxItemGroup, TransDate
        where taxTrans.TransDate   == custVendTrans.TransDate &&
              taxTrans.Voucher     == custVendTrans.Voucher   &&
              taxTrans.TaxOrigin   == TaxOrigin::Tax
        exists join taxTable
        where taxTable.TaxCode   == taxTrans.TaxCode      &&
             (taxTable.TaxType_W == TaxType_W::VAT        ||
              taxTable.TaxType_W == TaxType_W::VATReduced ||
              taxTable.TaxType_W == TaxType_W::VATZero);

        this.VATAmountMST    = CurrencyExchangeHelper::amount(abs(taxTrans.TaxAmount * (custVendTrans.AmountMST ? this.LineAmountMST / custVendTrans.AmountMST : 0)));
        this.VATValue        = taxTrans.TaxValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays customer name.
    /// </summary>
    /// <returns>
    /// Customer name.
    /// </returns>
    [SysClientCacheDataMethodAttribute, Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display Name custName()
    {
        return CustTable::find(this.CustAccount).name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>custVendTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes custVendTrans buffer.
    /// </summary>
    /// <returns>
    /// Ð¡ustVendTrans buffer.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CustVendTrans custVendTrans()
    {
        CustVendTrans custVendTrans;

        if (! this.RefTableId)
        {
            return custVendTrans;
        }

        custVendTrans = new SysDictTable(this.RefTableId).makeRecord();

        select firstonly custVendTrans
        where custVendTrans.RecId == this.RefRecId;

        return custVendTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        CommPrepaymAllocRef_RU  prepaymAllocRef;

        ttsbegin;

        if (this.LineAmountMST > 0 && CommPrepaymAllocRef_RU::exist(this.RefTableId, this.RefRecId))
        {
            delete_from prepaymAllocRef
            where prepaymAllocRef.RefTableId == this.RefTableId
               && prepaymAllocRef.RefRecId   == this.RefRecId;
        }

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromReference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the buffer from referenced table.
    /// </summary>
    /// <param name="_refTableId">
    /// Reference table Id identifying related record.
    /// </param>
    /// <param name="_refRecId">
    /// Reference record Id identifying related record.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromReference(RefTableId _refTableId = this.RefTableId,
                              RefRecId   _refRecId   = this.RefRecId)
    {
        FactureJour_RU   factureJour;
        FactureTrans_RU  factureTrans;
        CustVendTrans    custVendTrans;
        CustVendTrans_W  custVendTransW;

        this.RefTableId     = _refTableId;
        this.RefRecId       = _refRecId;

        FactureModule_RU module = _refTableId == tableNum(CustTrans) ?
                              FactureModule_RU::Cust             :
                              FactureModule_RU::Vend;

        custVendTrans = this.custVendTrans();

        if (module == FactureModule_RU::Cust)
        {
            this.CustAccount = custVendTrans.AccountNum;
            custVendTransW = SysDictTable::newTableId(tableNum(CustTrans_W)).makeRecord();
        }
        else
        {
            this.VendAccount = custVendTrans.AccountNum;
            custVendTransW = SysDictTable::newTableId(tableNum(VendTrans_W)).makeRecord();
        }

        this.Voucher        = custVendTrans.Voucher;
        this.TransDate      = custVendTrans.TransDate;
        this.LineAmountMST  = abs(custVendTrans.AmountMST) - custVendTrans.custVendTrans::getCommPrepaymentUsedAmount_RU(this.RecId);
        this.calcTax();

        select firstonly * from factureJour
        where factureJour.FactureType               == FactureType_RU::Prepayment
           && factureJour.Module                    == module
           && factureJour.CustVendInvoiceAccount    == custVendTrans.AccountNum
           && factureJour.Voucher                   == custVendTrans.Voucher
           && factureJour.CurrencyCode              == custVendTrans.CurrencyCode
        exists join custVendTransW
            where custVendTransW.BaseRecId              == custVendTrans.RecId
               && custVendTransW.PrepaymentFactureId_W  == factureJour.FactureId;

        this.RefFactureJour         = factureJour.RecId;
        this.FactureExternalId      = factureJour.FactureExternalId;
        this.FactureDateExternal    = factureJour.FactureDate_External ?
                                  factureJour.FactureDate_External :
                                  factureJour.FactureDate;
        this.DocumentNum            = factureJour.DocumentNum;
        this.DocumentDate           = factureJour.DocumentDate;

        if (module == FactureModule_RU::Vend && ! this.VATAmountMST)
        {
            select firstonly VATValue, VATAmountMST
            from factureTrans
            where factureTrans.FactureId == factureJour.FactureId
               && factureTrans.Module    == factureJour.Module;

            this.VATAmountMST    = CurrencyExchangeHelper::amount(abs(factureTrans.VATAmountMST * (custVendTrans.AmountMST ? this.LineAmountMST / custVendTrans.AmountMST : 0)));
            this.VATValue        = factureTrans.VATValue;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ttsbegin;

        super();

        if (this.LineAmountMST > 0)
        {
            this.updateAllocRef();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds <c>CommReportJour_RU</c> record related to prepayment line.
    /// </summary>
    /// <returns>
    /// <c>CommReportJour_RU</c> record related to prepayment line.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CommReportJour_RU reportJour()
    {
        return CommReportJour_RU::find(this.ReportId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        if (this.orig().Approved == this.Approved || this.validateApprove(false))
        {
            ttsbegin;

            super();

            this.updateAllocRef();

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAllocRef</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateAllocRef()
    {
        CustVendTrans           prepaymTrans;
        CommPrepaymAllocRef_RU  prepaymAllocRef;

        prepaymAllocRef = CommPrepaymAllocRef_RU::find(this.RefTableId, this.RefRecId, true);

        prepaymTrans = this.custVendTrans();
        if (abs(prepaymTrans.AmountMST) > prepaymTrans.commPrepaymUsedAmount_RU())
        {
            if (prepaymAllocRef)
            {
                prepaymAllocRef.delete();
            }
        }
        else
        {
            if (! prepaymAllocRef)
            {
                prepaymAllocRef.RefTableId  = this.RefTableId;
                prepaymAllocRef.RefRecId    = this.RefRecId;
                prepaymAllocRef.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateApprove</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate if line can be approved or rejected.
    /// </summary>
    /// <param name="_showErrorMsg">
    /// Show error message if result is negative.
    /// </param>
    /// <returns>
    /// True if line can be approved or rejected; otherwise false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean validateApprove(boolean _showErrorMsg = true)
    {
        FactureJour_RU  factureJour;
        boolean         ret = true;

        if (this.Approved)
        {
            if (! this.RefFactureJour)
            {
                ret = _showErrorMsg ? checkFailed("@SalesPurchBook:ReportForPrincipalLineCannotBeApproved") : false;
            }
        }
        else if (this.RecId)
        {
            select firstonly RecId from factureJour
            where factureJour.RefCommReportTrans == this.RecId;

            if (factureJour)
            {
                ret = _showErrorMsg ? checkFailed("@SalesPurchBook:ReportForPrincipalLineCannotBeRejected") : false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super() && this.validateApprove(true);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays vendor name.
    /// </summary>
    /// <returns>
    /// Vendor name.
    /// </returns>
    [SysClientCacheDataMethodAttribute, Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display Name vendName()
    {
        return VendTable::find(this.VendAccount).name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds <c>CommReportTransPrepayment_RU</c> record by record Id.
    /// </summary>
    /// <param name="_recId">
    /// <c>CommReportTransPrepayment_RU</c> record Id.
    /// </param>
    /// <param name="_forUpdate">
    /// True if record will be updated; otherwise false.
    /// </param>
    /// <returns>
    /// <c>CommReportTransPrepayment_RU</c> record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static CommReportTransPrepayment_RU find(
    RefRecId _recId,
    boolean _forUpdate = false)
    {
        CommReportTransPrepayment_RU reportTrans;

        if (_recId)
        {
            reportTrans.selectForUpdate(_forUpdate);

            select firstonly reportTrans
            where reportTrans.RecId == _recId;
        }

        return reportTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SalesPurchBook:CommReportTransPrepayment_RU_DevDoc</DeveloperDocumentation>
	<Label>@SalesPurchBook:ReportLineOnPrepaymentForPrincipal</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>Voucher</TitleField1>
	<TitleField2>FactureExternalId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ReportIdIdx</ClusteredIndex>
	<Modules>Bank</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FactureExternalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATAmountMST</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS84859</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATAmountMST</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Approve</Name>
			<Label>@GLS104415</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Approved</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Customer</Name>
			<Label>@SYS24704</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Document</Name>
			<Label>@SYS21873</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FactureOriginal</Name>
			<Label>@GLS104524</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FactureExternalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FactureDateExternal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReportId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS112248</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefFactureJour</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Vendor</Name>
			<Label>@GLS100925</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Approved</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>Approved</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS4081875</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DocumentDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>DocumentDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>DocumentNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FactureDateExternal</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>FactureDate_External_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FactureExternalId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>FactureExternalId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineAmountMST</Name>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefFactureJour</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReportId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>CommReportId_RU</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VATAmountMST</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>TaxAmountVATMST_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VATValue</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>TaxValue</ExtendedDataType>
			<Label>@GLS104352</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS4081840</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReportIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ReportId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RefTableRecIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CommReportJour_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CommReportJour_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReportId</Name>
					<Field>ReportId</Field>
					<RelatedField>ReportId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustAccount</Name>
					<Field>CustAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>FactureJour_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FactureJour_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefFactureJour</Name>
					<Field>RefFactureJour</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccount</Name>
					<Field>VendAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>