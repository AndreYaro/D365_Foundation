<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashFlowExternalSource</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CashFlowExternalSource extends common
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CashFlowExternalSource</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>CashFlowExternalSource</c> record to find.
    /// </param>
    /// <returns>
    ///    A record in the <c>CashFlowExternalSource</c> table; otherwise, an empty record.
    /// </returns>
    public static CashFlowExternalSource find(RecId _recId)
    {
        CashFlowExternalSource extSource;
        
        if (_recId)
        {
            select firstonly extSource where extSource.RecId == _recId;
        }

        return extSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        CashFlowExternalSource orig = this.orig();

        if (!this.PostingType)
        {
            this.defaultPostingType();
        }

        super();

        // LiquidityDirection and postingType are the only fields used in calculating ledgerCov. 
        // When these 2 fields updated, reset corresponding entry covStatus to 0,
        // so those entries will be picked up next time user calculate the report data.
        if (this.LiquidityDirection != orig.LiquidityDirection || this.PostingType != orig.PostingType)
        {
            CashFlowExternalSourceEntry::resetEntryCovStatusForExtSource(this.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        if (!this.PostingType)
        {
            this.defaultPostingType();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (!this.PostingType)
        {
            this.defaultPostingType();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPostingType</Name>
				<Source><![CDATA[
    private void defaultPostingType()
    {
        this.PostingType = LedgerPostingType::Liquidity;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@CashManagement:CashFlowExternalSourceDevDoc</DeveloperDocumentation>
	<Label>@CashManagement:CashFlowExternalSourceTable</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>Name</TitleField1>
	<TitleField2>Description</TitleField2>
	<ClusteredIndex>NameIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LiquidityDirection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<ExtendedDataType>Name</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LiquidityDirection</Name>
			<Mandatory>Yes</Mandatory>
			<EnumType>LedgerCovLiquidityDirection</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostingType</Name>
			<EnumType>LedgerPostingType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>