<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductDimensionGroupFldSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductDimensionGroupFldSetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>aosValidateUpdate</Name>
				<Source><![CDATA[
    public boolean aosValidateUpdate()
    {
        boolean     ret;

        ret = super();
        ret = this.validateDimensionsActive() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes a record and calls a method to clear the cache.
    /// </summary>
    public void delete()
    {
        super();
        EcoResProductDimGroupSetupCache::clearCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a display name for a dimension.
    /// </summary>
    /// <returns>
    ///    A string that contains the display name.
    /// </returns>
    display EcoResProductDimensionName fieldName()
    {
        EcoResProductDimensionName  name;
        DictField                   dictField;

        if (!this.RecId)
        {
            return '';
        }

        name                    = fieldId2pname(tableNum(InventDim), this.DimensionFieldId);
        dictField               = new DictField(tableNum(InventDim), this.DimensionFieldId);

        if (!dictField.configurationKeyId() || isConfigurationkeyEnabled(dictField.configurationKeyId()))
        {
            return name;
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProductDimensionGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the buffer from a <c>EcoResProductDimensionGroup</c> buffer.
    /// </summary>
    /// <param name="productDimensionGroup">
    ///    A <c>EcoResProductDimensionGroup</c> buffer to be initialized from.
    /// </param>
    void initFromProductDimensionGroup(EcoResProductDimensionGroup productDimensionGroup)
    {
        this.ProductDimensionGroup = productDimensionGroup.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextLineNumber</Name>
				<Source><![CDATA[
    private LineNum nextLineNumber()
    {
        LineNum currentLineNumber = (
            select maxof(LineNumber) from EcoResProductDimensionGroupFldSetup 
                where EcoResProductDimensionGroupFldSetup.ProductDimensionGroup == this.ProductDimensionGroup
            ).LineNumber;

        return currentLineNumber + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the buffer with default values.
    /// </summary>
    /// <remarks>
    ///    The <c>DimensionFieldId</c> field should be set before this method is called.
    /// </remarks>
    public void initValue()
    {
        this.LineNumber = this.nextLineNumber();

        this.IsPurchPriceSearchEnabled = NoYes::Yes;
        this.IsSalesPriceSearchEnabled = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts a record and calls a method to clear the cache.
    /// </summary>
    public void insert()
    {
        super();
        EcoResProductDimGroupSetupCache::clearCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates a record and calls a method to clear the cache.
    /// </summary>
    public void update()
    {
        ttsbegin;

        super();

        ttscommit;

        EcoResProductDimGroupSetupCache::clearCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDimensionsActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that changes to the <c>IsActive</c> field are valid.
    /// </summary>
    /// <returns>
    /// true if validation succeeded; otherwise, false.
    /// </returns>
    public boolean validateDimensionsActive()
    {
        EcoResProductDimensionGroupFldSetup     origDimFieldSetup = this.orig();

        boolean dimGroupHasActiveDimension()
        { // Validate that at least 1 other dimension is active.
            EcoResProductDimensionGroupFldSetup     ecoResProductDimensionGroupFldSetup;

            if (this.IsActive == NoYes::Yes)
            {
                return true;
            }

            select firstonly RecId from ecoResProductDimensionGroupFldSetup
                where ecoResProductDimensionGroupFldSetup.ProductDimensionGroup == this.ProductDimensionGroup
                  &&  ecoResProductDimensionGroupFldSetup.DimensionFieldId      != this.DimensionFieldId
                  &&  ecoResProductDimensionGroupFldSetup.IsActive              == NoYes::Yes;

            if (!ecoResProductDimensionGroupFldSetup.RecId)
            {
                return false;
            }

            return true;
        }

        void restoreData()
        {
            this.data(origDimFieldSetup);

            if (FormDataUtil::isFormDataSource(this))
            {
                FormDataUtil::getFormDataSource(this).refresh();
            }
        }

        if (!this.RecId)
        { // initial data will always be consistent.
            return true;
        }

        if (this.IsActive != origDimFieldSetup.IsActive)
        { // IsActive field changed -> Not called during consistency check
            if (!dimGroupHasActiveDimension())
            {
                return checkFailed("@SYS322628");
            }

            if (EcoResProductDimensionGroup::isUsedByAnyProduct(this.ProductDimensionGroup))
            {
                restoreData();
                return checkFailed("@SYS134208");
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        if (!this.validateDimensionsActive())
        {
            return false;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByDimensionGroupFieldId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds an <c>EcoResProductDimensionGroupFldSetup</c> record using the
    ///    <c>EcoResProductDimensionGroup</c> record ID and the dimension field ID as the key.
    /// </summary>
    /// <param name="_productDimensionGroup">
    ///    An <c>EcoResProductDimensionGroup</c> record ID that will be used as a filter.
    /// </param>
    /// <param name="_dimensionFieldId">
    ///    A dimension field ID that will be used as a filter.
    /// </param>
    /// <param name="_update">
    ///    A flag specifying whether a buffer should be selected for update. If true the buffer is selected
    ///    for update.
    /// </param>
    /// <returns>
    ///    An <c>EcoResProductDimensionGroupFldSetup</c> buffer.
    /// </returns>
    static public EcoResProductDimensionGroupFldSetup findByDimensionGroupFieldId(
        EcoResProductDimensionGroupRecId    _productDimensionGroup,
        int                                 _dimensionFieldId,
        boolean                             _update = false)
    {
        EcoResProductDimensionGroupFldSetup  ecoResProductDimensionGroupFldSetup;

        ecoResProductDimensionGroupFldSetup.selectForUpdate(_update);

        if (_productDimensionGroup && _dimensionFieldId)
        {
            select firstonly ecoResProductDimensionGroupFldSetup
                where ecoResProductDimensionGroupFldSetup.ProductDimensionGroup == _productDimensionGroup &&
                      ecoResProductDimensionGroupFldSetup.DimensionFieldId == _dimensionFieldId;
        }

        return ecoResProductDimensionGroupFldSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS133211</DeveloperDocumentation>
	<FormRef>EcoResProductDimensionGroup</FormRef>
	<Label>@SYS133210</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ProductDimensionGroup</TitleField1>
	<TitleField2>DimensionFieldId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>ProductDimensionGroupFieldSetupIdx</ClusteredIndex>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>ProductDimensionGroupFieldSetupIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductDimensionGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DimensionFieldId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductDimensionGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DimensionFieldId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductDimensionGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DimensionFieldId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>fieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsActive</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPurchPriceSearchEnabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSalesPriceSearchEnabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisplayOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>UseInPriceSearch</Name>
			<Label>@SYS70105</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsPurchPriceSearchEnabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSalesPriceSearchEnabled</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DimensionFieldId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<RelatedTable>InventDim</RelatedTable>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsActive</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS14584</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPurchPriceSearchEnabled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductDimPriceDiscPurch</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsSalesPriceSearchEnabled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductDimPriceDiscSales</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProductDimensionGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DisplayOrder</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductDimensionGroupFldSetupDisplayOrder</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProductDimensionGroupFieldSetupSortIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProductDimensionGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProductDimensionGroupFieldSetupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProductDimensionGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DimensionFieldId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResProductDimensionGroup</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>EcoResProductDimensionGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResProductDimensionGroup</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>EcoResProductDimensionGroup_EcoResProductDimensionGroupFldSetup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductDimensionGroup</Name>
					<Field>ProductDimensionGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>