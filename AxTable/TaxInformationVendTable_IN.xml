<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxInformationVendTable_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxInformationVendTable_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getPANTaxStatus_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets PAN tax status.
    /// </summary>
    /// <returns>
    /// Returns PAN tax status.
    /// </returns>
    public PANTaxStatus_IN getPANTaxStatus_IN()
    {
        switch (this.PANStatus)
        {
            case PANStatus_IN::Received:
                return PANTaxStatus_IN::Received;
            default:
                return PANTaxStatus_IN::NotReceived;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies the specified field to its original value.
    /// </summary>
    /// <param name="_fieldName">
    /// The field name.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index of the field; optional.
    /// </param>
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        TaxValueThresholdProfile_IN     taxValueThresholdProfileLoc;
        ConcessionCertificateDetails_IN concessionCertificateDetailsLoc;

        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(TaxInformationVendTable_IN, IsForeign):
                if (this.IsForeign == NoYes::No)
                {
                    this.IsPreferential = NoYes::No;
                }
                break;

            case fieldStr(TaxInformationVendTable_IN, panStatus):
                if (this.getPANTaxStatus_IN() != PANTaxStatus_IN::Received)
                {
                    //delete associated certificate info for this vend.
                    select firstOnly RecId,AccountType,CustVendGroupOrTable from taxValueThresholdProfileLoc
                        where taxValueThresholdProfileLoc.AccountType == AccountType_IN::Vend
                            && taxValueThresholdProfileLoc.CustVendGroupOrTable == this.VendTable
                    join concessionCertificateDetailsLoc
                        where taxValueThresholdProfileLoc.RecId == concessionCertificateDetailsLoc.SourceReferenceRecId;

                    ttsBegin;
                    delete_from concessionCertificateDetailsLoc
                        where concessionCertificateDetailsLoc.SourceReferenceRecId == taxValueThresholdProfileLoc.RecId;
                    ttsCommit;
                }

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the specified field value.
    /// </summary>
    /// <param name="_fieldName">
    /// The name of the field to validate.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index of the field; optional.
    /// </param>
    /// <returns>
    /// Returns true if the field passes value validation; otherwise, false.
    /// </returns>
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;
        #define.alphabets('ABCDEFGHIJKLMNOPQRSTUVWXYZ')
        #define.numbers('0123456789')
        #define.10(10)
        DialogButton                    diagBut;
        ConcessionCertificateDetails_IN concessionCertificateDetailsLoc;
        TaxValueThresholdProfile_IN     taxValueThresholdProfileLoc;
        boolean                         taxParameterEnabled         = TaxParameters::checkTaxParameters_IN();
        boolean                         taxWithholdParameterEnabled = TaxWithholdParameters_IN::checkTaxParameters();

        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(TaxInformationVendTable_IN, tdsGroup):
                    if (TaxWithholdParameters_IN::isTDSActivate()
                        && this.tdsGroup
                        && TaxWithholdGroupHeading::find(this.tdsGroup).TaxType_IN != TaxWithholdCodeType_IN::TDS)
                    {
                        ret = checkFailed(strFmt("@GLS5461", this.tdsGroup, TaxWithholdCodeType_IN::TDS));
                    }
                    break;

                case fieldStr(TaxInformationVendTable_IN, tcsGroup):
                    if (TaxWithholdParameters_IN::isTCSActivate()
                        && this.tcsGroup
                        && TaxWithholdGroupHeading::find(this.tcsGroup).TaxType_IN != TaxWithholdCodeType_IN::TCS)
                    {
                        ret = checkFailed(strFmt("@GLS5461", this.tcsGroup, TaxWithholdCodeType_IN::TCS));
                    }
                    break;

                case fieldStr(TaxInformationVendTable_IN, panNumber):
                    if ((taxParameterEnabled || taxWithholdParameterEnabled)
                        && this.panStatus == PANStatus_IN::Received
                        && this.panNumber)
                    {
                        if ((strKeep(subStr(this.panNumber, 1, 5), #alphabets)  != subStr(this.panNumber, 1, 5)) ||
                            (strKeep(subStr(this.panNumber, 6, 4), #numbers)    != subStr(this.panNumber, 6, 4)) ||
                            (strLen(this.panNumber) != #10)                                                         ||
                            (strKeep(subStr(this.panNumber, 10, 1), #alphabets) != subStr(this.panNumber, 10, 1)))
                        {
                            ret = checkFailed("@GLS5849");
                        }
                    }
                    break;

                case fieldStr(TaxInformationVendTable_IN, panStatus):
                    if (ret && this.getPANTaxStatus_IN() != PANTaxStatus_IN::Received)
                    {
                        //validation whether this vend has concession certificate associated.
                        select firstOnly RecId,AccountType,CustVendGroupOrTable from taxValueThresholdProfileLoc
                            where taxValueThresholdProfileLoc.AccountType == AccountType_IN::Vend
                                && taxValueThresholdProfileLoc.CustVendGroupOrTable == this.VendTable
                        join RecId from concessionCertificateDetailsLoc
                            where taxValueThresholdProfileLoc.RecId == concessionCertificateDetailsLoc.SourceReferenceRecId;

                        if (taxValueThresholdProfileLoc.RecId)
                        {
                            diagBut = Box::yesNo("@SYS4003635",
                                                DialogButton::No);

                            ret = (diagBut == DialogButton::Yes);
                        }
                    }
                    if (ret)
                    {
                        if (taxParameterEnabled || taxWithholdParameterEnabled)
                        {
                            if (this.panStatus != PANStatus_IN::Applied)
                            {
                                this.panReferenceNumber = '';
                            }
                            if (this.panStatus != PANStatus_IN::Received)
                            {
                                this.panNumber = '';
                            }
                        }
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean ret;

        ret = super();
        if (ret && TaxWithholdParameters_IN::checkTaxParameters())
        {
            if (this.PANStatus == PANStatus_IN::Received && !this.PANNumber)
            {
                    ret = ret && checkFailed(strFmt("@SYS26332","@SYS36260"));
            }
            if (this.PANStatus == PANStatus_IN::Applied && !this.PANReferenceNumber)
            {
                    ret = ret && checkFailed(strFmt("@SYS26332","@SYS22304"));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>TaxInformationVendTable_IN</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>TaxInformationVendTable_IN</c> record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>TaxInformationVendTable_IN</c> table; otherwise, an empty record.
    /// </returns>
    public static TaxInformationVendTable_IN find(
        RecId     _recId,
        boolean   _forupdate = false)
    {
        TaxInformationVendTable_IN taxInformationVendTable;

        taxInformationVendTable.selectForUpdate(_forupdate);

        select firstOnly taxInformationVendTable
            where taxInformationVendTable.RecId == _recId;

        return taxInformationVendTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByVendTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the record of <c>TaxInformationVendTable_IN</c> by the accountNum of <c>VendTable</c>.
    /// </summary>
    /// <param name="_accountNum">
    /// The account number of <c>VendTable</c>.
    /// </param>
    /// <param name="_forUpdate">
    /// Determine whether update the table or not.
    /// </param>
    /// <returns>
    /// If exists, return the record, or return null.
    /// </returns>
    public static TaxInformationVendTable_IN findByVendTable(AccountNum _accountNum, boolean  _forUpdate = false)
    {
        TaxInformationVendTable_IN taxInformationVendTable_IN;

        taxInformationVendTable_IN.selectForUpdate(_forUpdate);

        select firstonly taxInformationVendTable_IN
            where taxInformationVendTable_IN.VendTable == _accountNum;

        return taxInformationVendTable_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to insert information into the <c>TaxInformationVendTable_IN</c> table
    /// </summary>
    public void insert()
    {
        if (this.VendTable)
        {
            super();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS220286</DeveloperDocumentation>
	<Label>@GLS220289</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>VendTable</TitleField1>
	<TitleField2>PANNumber</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>VendTableIdx</ClusteredIndex>
	<DataSharingType>Single</DataSharingType>
	<Modules>Tax</Modules>
	<ReplacementKey>VendTableIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPreferential</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsGTA</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSSI</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsForeign</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsGTA</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPreferential</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSSI</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SSIValidityDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS2952</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsForeign</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPreferential</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsGTA</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSSI</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SSIValidityDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PAN</Name>
			<Label>@GLS5163</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PANStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PANNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PANReferenceNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NatureOfAssessee</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VAT</Name>
			<Label>@GLS5004</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CompositionScheme</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WithholdingTax</Name>
			<Label>@SYS7372</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TDSGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TCSGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GST</Name>
			<Label>@TaxGST:GST</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GSTCompositionScheme</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApplyGSTTDS</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApplyGSTTCS</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CompositionScheme</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@GLS5218</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsForeign</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS5728</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsGTA</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS5069</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPreferential</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS5194</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsSSI</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS5266</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NatureOfAssessee</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NatureOfAssessee_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PANNumber</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>PANNumber_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PANReferenceNumber</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>PANReferenceNumber_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PANStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PANStatus_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SSIValidityDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@GLS5268</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TCSGroup</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TaxWithholdGroup</ExtendedDataType>
			<Label>@GLS5363</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TDSGroup</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TaxWithholdGroup</ExtendedDataType>
			<Label>@GLS5362</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendTable</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AccountNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>GSTCompositionScheme</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@TaxGST:GSTCompositionSchemeLabel</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ApplyGSTTDS</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@TaxGST:ApplyGSTTDS</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ApplyGSTTCS</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@TaxGST:ApplyGSTTCS</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendTableIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>VendTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdGroupHeadingTCS</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxWithholdGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TCSGroup</Name>
					<SourceEDT>TaxWithholdGroup</SourceEDT>
					<Field>TCSGroup</Field>
					<RelatedField>TaxWithholdGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxWithholdGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdGroupHeadingTDS</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxWithholdGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdGroupHeading_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdGroupHeading_1_TaxInformationVendTable_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TDSGroup</Name>
					<SourceEDT>TaxWithholdGroup</SourceEDT>
					<Field>TDSGroup</Field>
					<RelatedField>TaxWithholdGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxWithholdGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendTable</Name>
					<Field>VendTable</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>