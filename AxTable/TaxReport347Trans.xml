<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReport347Trans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxReport347Trans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateAmountYear</Name>
				<Source><![CDATA[
        private AmountMST calculateAmountYear()
    {
        return this.AmountQuarter1 + this.AmountQuarter2 + this.AmountQuarter3 + this.AmountQuarter4;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canHaveTenants</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the report line is allowed to have related tenants records.
    /// </summary>
    /// <returns>
    /// True if the report line is allowed to have relates tenants records; otherwise, false.
    /// </returns>
    /// <remarks>
    /// Only sales lines which are marked for tenancy are allowed to have related tenents records.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean canHaveTenants()
    {
        return this.OperationKey == TaxRep347OperationKey::Sales && this.Rent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAmountsAreNonZero</Name>
				<Source><![CDATA[
        private boolean checkAmountsAreNonZero()
    {
        if (!this.Amount && !this.AmountQuarter1 && !this.AmountQuarter2 && !this.AmountQuarter3 && !this.AmountQuarter4 && !this.AmountInCash)
        {
            return checkFailed(strfmt("@SYS78897",
                fieldPName(TaxReport347Trans, Amount),
                fieldPName(TaxReport347Trans, AmountInCash)));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteTenants</Name>
				<Source><![CDATA[
        private void deleteTenants()
    {
        TaxReport347Tenants reportTenants;

        delete_from reportTenants
            where reportTenants.TaxReport347Table == this.TaxReport347Table &&
                reportTenants.VATNum == this.VATNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayOperationKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the code which has to be exported to the ASCII file to the operation key field.
    /// </summary>
    /// <returns>
    /// The code which has to be exported to the ASCII file to the operation key field
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display char displayOperationKey()
    {
        #define.purchase            ('A')
        #define.sales               ('B')
        #define.paymentMediation    ('C')
        #define.purchPublicEntity   ('D')
        #define.subsidy             ('E')
        char    operationKey;

        switch (this.OperationKey)
        {
            case TaxRep347OperationKey::Purchase:
                operationKey = #purchase;
                break;

            case TaxRep347OperationKey::Sales:
                operationKey = #sales;
                break;

            case TaxRep347OperationKey::PaymentMediation:
                operationKey = #paymentMediation;
                break;

            case TaxRep347OperationKey::PurchPublicEntity:
                operationKey = #purchPublicEntity;
                break;

            case TaxRep347OperationKey::Subsidy:
                operationKey = #subsidy;
                break;

            default:
                operationKey = ' ';
        }

        return operationKey;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasTenants</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the report line has related tenant records.
    /// </summary>
    /// <returns>
    /// True if the report line has relates tenant records; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean hasTenants()
    {
        TaxReport347Tenants reportTenants;

        if (this.canHaveTenants())
        {
            select firstonly RecId from reportTenants
                where reportTenants.TaxReport347Table == this.TaxReport347Table &&
                    reportTenants.VATNum == this.VATNum;

            return reportTenants.RecId != 0;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVATNum</Name>
				<Source><![CDATA[
        private void initFromVATNum()
    {
        TaxVATNumTable taxVATNumTable;

        select firstOnly taxVATNumTable
            where taxVATNumTable.VATNum == this.VATNum;

        this.Name = taxVATNumTable.Name;
        this.CountryRegionId = taxVATNumTable.CountryRegionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insuranceOperation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the code which has to be exported to the ASCII file to the field
    /// which indicates whether the report line contains insurance operations.
    /// </summary>
    /// <returns>
    /// The code which has to be exported to the ASCII file to the field
    /// which indicates whether the report line contains insurance operations.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str 1 insuranceOperation()
    {
        str 1 insuranceOperation;

        #define.checked('X');

        switch (this.InsuranceOperation)
        {
            case NoYes::Yes:
                insuranceOperation = #checked;
                break;

            default :
                insuranceOperation = ' ';
        }

        return insuranceOperation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
        public void modifiedField(FieldId _fieldId)
    {
        TaxReport347Tenants    taxReport347Tenants;

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(TaxReport347Trans, Rent):
                if (this.Rent)
                {
                    select firstonly taxReport347Tenants
                        where this.vatNum == taxReport347Tenants.vatNum
                            && this.TaxReport347Table == taxReport347Tenants.TaxReport347Table;

                    if (taxReport347Tenants)
                    {
                        checkFailed("@SYS57634");
                    }
                    else
                    {
                        super(_fieldId);
                    }
                }
                else
                {
                    super(_fieldId);
                }
                break;

            case fieldnum(TaxReport347Trans, CashInvoiceYear):
                if (this.CashInvoiceYear != this.taxReport347Table().Year)
                {
                    this.AmountQuarter1 = 0;
                    this.AmountQuarter2 = 0;
                    this.AmountQuarter3 = 0;
                    this.AmountQuarter4 = 0;
                }

                break;

            case fieldnum(TaxReport347Trans, Amount):
                if (this.Amount != 0 && this.AmountInCash != 0)
                {
                    this.CashInvoiceYear = this.taxReport347Table().Year;
                }

                break;

            case fieldnum(TaxReport347Trans, AmountInCash):
                if (this.AmountInCash == 0)
                {
                    this.CashInvoiceYear = 0;
                }

                if (this.AmountInCash != 0 && this.Amount != 0)
                {
                    this.CashInvoiceYear = this.taxReport347Table().Year;
                }

                break;

            case fieldnum(TaxReport347Trans, VATNum):
                this.initFromVATNum();
                break;
        }

        this.Amount = this.calculateAmountYear();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the code which has to be exported to the ASCII file to the field
    /// which indicates whether the report line includes rental operations.
    /// </summary>
    /// <returns>
    /// The code which has to be exported to the ASCII file to the field
    /// which indicates whether the report line includes rental operations.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str 1 rent()
    {
        str 1 rent;

        #define.checked('X')

        switch (this.Rent)
        {
            case NoYes::Yes:
                rent = #checked;
                break;

            default :
                rent = ' ';
        }

        return rent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
        public void update()
    {
        ttsbegin;

        if (this.orig().canHaveTenants() && this.canHaveTenants() && this.orig().VATNum != this.VATNum)
        {
            this.updateTenantsVATNumber(this.orig().VATNum, this.VATNum);
        }
        else if (this.orig().canHaveTenants() && !this.canHaveTenants())
        {
            this.orig().deleteTenants();
        }

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTenantsVATNumber</Name>
				<Source><![CDATA[
        private void updateTenantsVATNumber(VATNum _origVATNum, VATNum _newVATNum)
    {
        TaxReport347Tenants reportTenants;

        update_recordset reportTenants
            setting VATNum = _newVATNum
            where reportTenants.TaxReport347Table == this.TaxReport347Table &&
                reportTenants.VATNum == _origVATNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(FieldId _fieldId)
    {
        #TaxReport347

        boolean             ret;
        TaxReport347Tenants taxReport347Tenants;

        ret = super(_fieldId);

        if (ret)
        {
            switch (_fieldId)
            {
                case fieldNum(TaxReport347Trans, vatNum):
                    ret = TaxVATNumTable::checkVATNum(this.vatNum, this, _fieldId);
                    break;

                case fieldNum(TaxReport347Trans, CashInvoiceYear):
                    if (this.CashInvoiceYear > 9999)
                    {
                        ret = checkFailed("@SYS62556");
                    }

                    if (this.CashInvoiceYear < year(#MinCashInvDate))
                    {
                        ret = checkFailed(strFmt("@SYS94968", this.CashInvoiceYear, fieldPName(TaxReport347Trans, CashInvoiceYear)));
                    }
                    break;

                case fieldNum(TaxReport347Trans, Rent):
                    if (this.Rent)
                    {
                        select firstonly taxReport347Tenants
                            where this.vatNum            == taxReport347Tenants.vatNum
                               && this.TaxReport347Table == taxReport347Tenants.TaxReport347Table;

                        if (taxReport347Tenants)
                        {
                            ret = checkFailed("@SYS57634");
                        }
                    }
                    break;

                case fieldNum(TaxReport347Trans, CashAccountingAmount) :
                    if (abs(this.CashAccountingAmount) > (this.Amount))
                    {
                        ret = checkFailed(strFmt("@SYS344287",
                            fieldPName(TaxReport347Trans, CashAccountingAmount),
                            fieldPName(TaxReport347Trans, Amount)));
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ret = ret && this.checkAmountsAreNonZero();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static boolean checkExist(RecId _recId )
    {
        boolean ret = true;

        if (!TaxReport347Trans::exist(_recId))
        {
            ret = checkFailed(strFmt(TaxReport347Trans::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static boolean exist(RecId _recId )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     taxReport347Trans
                 where
                     taxReport347Trans.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the report line with the specified record Id.
    /// </summary>
    /// <param name="_recId">
    /// Record Id of the report line.
    /// </param>
    /// <param name="_forupdate">
    /// Indicates whether the report line should be selected for update.
    /// </param>
    /// <param name="_concurrencyModel">
    /// Concurrency model.
    /// </param>
    /// <returns>
    /// The report line with the specified record Id.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TaxReport347Trans find(
        RecId _recId ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxReport347Trans taxReport347Trans;

        taxReport347Trans.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxReport347Trans.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxReport347Trans
            where taxReport347Trans.RecId == _recId;

        return taxReport347Trans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxReport347Table</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public TaxReport347Table taxReport347Table(TaxReport347Table _relatedTable = null)
        {
            if (prmIsDefault(_relatedTable))
            {
                return this.setLink('TaxReport347DeclarationTable');
            }
            else
            {
                return this.setLink('TaxReport347DeclarationTable', _relatedTable);
            }
        }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>ES</CountryRegionCodes>
	<DeveloperDocumentation>@SYS123472</DeveloperDocumentation>
	<FormRef>TaxReport347Trans</FormRef>
	<Label>@SYS54386</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>VATNum</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>KeyIdx</ClusteredIndex>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>KeyIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>TaxReport347Tenants</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>TaxReport347Tenants</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxReport347Table</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OperationKey</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxReport347Table</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OperationKey</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashInvoiceYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReverseCharge</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashAccountingRegime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Representative</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InsuranceOperation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Rent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashAccountingRegime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GoodsInDeposit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReverseCharge</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS6928</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountQuarter1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountQuarter2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountQuarter3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountQuarter4</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashAccountingAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AmountInCash</Name>
			<Label>@SYS319353</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountInCash</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashInvoiceYear</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DeclarationLine</Name>
			<Label>@SYS54452</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VATNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountryRegionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxReport347Table</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Operation</Name>
			<Label>@SYS4528</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OperationKey</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRep347AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountInCash</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRep347PositiveAmountMST</ExtendedDataType>
			<Label>@SYS319353</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountQuarter1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRep347AmountMST</ExtendedDataType>
			<Label>@SYS4000475</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountQuarter2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRep347AmountMST</ExtendedDataType>
			<Label>@SYS4000465</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountQuarter3</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRep347AmountMST</ExtendedDataType>
			<Label>@SYS4000467</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountQuarter4</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRep347AmountMST</ExtendedDataType>
			<Label>@SYS4000471</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CashInvoiceYear</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxReport347CashInvoiceYear</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryRegionId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AddressCountryRegionId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountyId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AddressCountyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InsuranceOperation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS54389</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TaxRep34XName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OperationKey</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxRep347OperationKey</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Rent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS54391</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Representative</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS54387</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxReport347Table</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxReport347TableRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VATNum</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VATNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CashAccountingRegime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxReportCashAccountingRegime_ES</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>GoodsInDeposit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxReportGoodsInDeposit_ES</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReverseCharge</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReverseCharge_ES</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CashAccountingAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxRep347AmountMST</ExtendedDataType>
			<Label>@SYS11660</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KeyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxReport347Table</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VATNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OperationKey</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CountryRegionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CashInvoiceYear</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReverseCharge</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CashAccountingRegime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>AddressCountry</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123473</EntityRelationshipRole>
			<RelatedTable>LogisticsAddressCounty</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsAddressCountyDetails</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxReport347Transactions</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountyId</Name>
					<Field>CountyId</Field>
					<RelatedField>CountyId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryRegionId</Name>
					<Field>CountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsAddressCountryRegion</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxReport347Trans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryRegionId</Name>
					<SourceEDT>AddressCountryRegionId</SourceEDT>
					<Field>CountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxReport347Table</Name>
			<Cardinality>ZeroMore</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<NavigationPropertyMethodNameOverride>taxReport347Table</NavigationPropertyMethodNameOverride>
			<RelatedTable>TaxReport347Table</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxReport347DeclarationTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>TaxReport347DeclarationTransactions</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxReport347Table</Name>
					<Field>TaxReport347Table</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>taxVatNumTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123474</EntityRelationshipRole>
			<RelatedTable>TaxVATNumTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxVATNumTable_VATNum</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxReport347Trans_VATNum</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VATNum</Name>
					<Field>VATNum</Field>
					<RelatedField>VATNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>