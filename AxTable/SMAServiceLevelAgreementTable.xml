<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SMAServiceLevelAgreementTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SMAServiceLevelAgreementTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isInUse</Name>
				<Source><![CDATA[
        public boolean isInUse(boolean _checkSuspended = true)
    {
        boolean ret = false;
        // to check suspended SLA or ignore Suspended field - parameter set up
        ret = (_checkSuspended) ? this.Suspended == NoYes::No :true;
        // SLA is in use if it is set on service agreement or servise agreement group
        ret = ret && (SMAAgreementGroup::checkExistServiceLevelAgreementId(this.ServiceLevelAgreementId)
            || SMAAgreementTable::existServiceLevelAgreementId(this.ServiceLevelAgreementId));

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>secondsToFinishRequest</Name>
				<Source><![CDATA[
        public Seconds secondsToFinishRequest()
    {
        return (((this.Days * 24 + this.Hours) * 60 + this.Minutes) * 60);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(fieldId _fieldId)
    {
        boolean ret;

        ret = super(_fieldId);

        if (ret)
        {
            if ((_fieldId == fieldnum(SMAServiceLevelAgreementTable, Days)
                || _fieldId == fieldnum(SMAServiceLevelAgreementTable, Hours)
                || _fieldId == fieldnum(SMAServiceLevelAgreementTable, Minutes)
                || _fieldId == fieldnum(SMAServiceLevelAgreementTable, CalendarId))
                && this.isInUse())
            {
                // Service level agreement is in use and cannot be changed
                ret = checkFailed("@SYS104476");
            }
        }

        if (ret)
        {
            switch (_fieldId)
            {
                case fieldnum(SMAServiceLevelAgreementTable, Suspended):
                    if (this.Suspended == NoYes::Yes && this.isInUse(false))
                    {
                        // The suspended service level agreement is associated with one or more service agreement groups
                        warning("@SYS105121");
                    }
                break;

                case fieldnum(SMAServiceLevelAgreementTable, Days):
                    if (ret && (this.Days < 0))
                    {
                        // Days can not be a negative value
                        ret = checkFailed("@SYS102923");
                    }
                    break;

                case fieldnum(SMAServiceLevelAgreementTable, Hours):
                    if (ret && (this.Hours > 23 || this.Hours < 0))
                    {
                        // The value for hours must be between 1 and 23
                        ret = checkFailed("@SYS102921");
                    }
                    break;

                case fieldnum(SMAServiceLevelAgreementTable, Minutes):
                    if (ret && (this.Minutes > 59 || this.Minutes < 0))
                    {
                         // The value for minutes must be between 1 and 59
                         ret = checkFailed("@SYS102922");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        // check if values in Days/Hours/minutes inserted
        if (ret && (this.Minutes == 0 && this.Hours == 0 && this.Days == 0))
        {
            // Minutes, hours or days must contain a value
            ret = checkFailed("@SYS105058");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cancelSLAOnServiceOrder</Name>
				<Source><![CDATA[
        static public void cancelSLAOnServiceOrder(SMAServiceOrderId _serviceOrderId)
    {
        SMAServiceOrderTable        serviceOrder;
        SMAServiceLevelAgreementLog serviceLevelAgreementLog;

        ttsbegin;

        serviceOrder = SMAServiceOrderTable::find(_serviceOrderId, true);

        serviceOrder.ServiceLevelAgreement          = '';
        serviceOrder.ServiceLevelAgreementStatus    = SMALogStatus::Cancel;
        serviceOrder.calcServiceLevelAgreementCompliance();

        serviceOrder.update();

        delete_from serviceLevelAgreementLog where serviceLevelAgreementLog.ServiceOrderId == _serviceOrderId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        public static SMAServiceLevelAgreementTable find(SMAServiceLevelAgreementId _serviceLevelAgreementId, boolean _forupdate = false)
    {
        SMAServiceLevelAgreementTable   serviceLevelAgreementTable = null;

        if (_serviceLevelAgreementId)
        {
            serviceLevelAgreementTable.selectForUpdate(_forupdate);

            select firstonly serviceLevelAgreementTable where serviceLevelAgreementTable.ServiceLevelAgreementId == _serviceLevelAgreementId;
        }

        return serviceLevelAgreementTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SMAManagement</ConfigurationKey>
	<DeveloperDocumentation>@SYS122711</DeveloperDocumentation>
	<FormRef>SMAServiceLevelAgreement</FormRef>
	<Label>@SYS102596</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ServiceLevelAgreementId</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ServiceLevelAgreementIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ServiceManagement</Modules>
	<PrimaryIndex>ServiceLevelAgreementIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>SMAAgreementGroup</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SMAAgreementGroup</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>SMAAgreementTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SMAAgreementTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceLevelAgreementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Days</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Hours</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Minutes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Days</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Hours</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Minutes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Calendar</Name>
			<Label>@SYS11839</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalendarId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceLevelAgreementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Interval</Name>
			<Label>@SYS104858</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Days</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Hours</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Minutes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceLevelAgreementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Suspended</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Suspended</Name>
			<Label>@SYS68302</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Suspended</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CalendarId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalendarId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Days</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Days</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Hours</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAHours</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Minutes</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAMinutes</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServiceLevelAgreementId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAServiceLevelAgreementId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Suspended</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMASuspended</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ServiceLevelAgreementIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ServiceLevelAgreementId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkCalendarTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WorkCalendarTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CalendarId</Name>
					<Field>CalendarId</Field>
					<RelatedField>CalendarId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CalendarIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>