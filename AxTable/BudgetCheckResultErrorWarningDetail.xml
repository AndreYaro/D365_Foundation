<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetCheckResultErrorWarningDetail</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetCheckResultErrorWarningDetail extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayBudgetCheckResultErrorWarning</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the budgetary control error warning message for the <c>BudgetSource</c> record.
    /// </summary>
    /// <returns>
    /// A <c>BudgetControlErrorWarning</c> type as a value if the
    /// <c>BudgetCheckResultErrorWarningDetail</c> record ID exists; otherwise, -1.
    /// </returns>
    /// <remarks>
    /// We must not display anything when <c>BudgetCheckResultErrorWarningDetail</c> record ID does not
    /// exist. Therefore 0 is returned.
    /// </remarks>
    public display BudgetControlErrorWarning displayBudgetCheckResultErrorWarning()
    {
        BudgetSource budgetSource;
        BudgetControlErrorWarning budgetControlErrorWarning;

        if (BudgetControlConfiguration::isControlConfigured() &&
            hasTableAccess(tablenum(BudgetSource)) &&
            this.RecId != 0)
        {
            budgetSource = BudgetSource::find(this.BudgetSource);
            budgetControlErrorWarning = budgetSource.CheckResultErrorWarning;
        }

        return budgetControlErrorWarning;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayBudgetGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Displays the name for the budget group member <c>BudgetCheckResultErrorWarningDetail</c> record.
    /// </summary>
    /// <returns>
    ///    The name of the budget group member as a value if the group
    ///    <c>BudgetCheckResultErrorWarningDetail</c> record ID exists; otherwise, an empty string.
    /// </returns>
    public display BudgetGroupMemberName displayBudgetGroup()
    {
        BudgetGroupMemberName name = '';

        if (this.RecId != 0)
        {
            if (BudgetControlConfiguration::isControlConfigured() &&
                hasTableAccess(tablenum(BudgetGroupMember)))
            {
                name = BudgetGroupMember::find(this.BudgetGroupMember).Name;
            }
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayBudgetSourceCheckResult</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the budgetary control check result for the <c>BudgetSource</c> record.
    /// </summary>
    /// <returns>
    /// A <c>BudgetCheckResult</c> type as value if the <c>BudgetCheckResultErrorWarningDetail</c> record
    /// ID exists; otherwise, -1.
    /// </returns>
    /// <remarks>
    /// We must not display anything when the <c>BudgetCheckResultErrorWarningDetail</c> record ID does not
    /// exist. Therefore 0 is returned.
    /// </remarks>
    public display BudgetCheckResult displayBudgetSourceCheckResult()
    {
        BudgetSource        budgetSource;
        BudgetCheckResult   budgetCheckResult;

        if (BudgetControlConfiguration::isControlConfigured() &&
            hasTableAccess(tablenum(BudgetSource)) &&
            this.RecId != 0)
        {
            budgetSource = BudgetSource::find(this.BudgetSource);

            budgetCheckResult = budgetSource.CheckResult;
        }

        return budgetCheckResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayControlLedgerDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the display value of the referenced <c>BudgetControlLedgerDimension</c>.
    /// </summary>
    /// <returns>
    /// The display value of the referenced <c>BudgetControlLedgerDimension</c>.
    /// </returns>
    display DimensionDisplayValue displayControlLedgerDimensionValue()
    {
        DimensionDisplayValue dimensionDisplayValue;

        if (hasTableAccess(tablenum(DimensionAttributeValueCombination)))
        {
            dimensionDisplayValue = LedgerDimensionFacade::getDisplayValueForLedgerDimension(this.BudgetControlLedgerDimension);
        }

        return dimensionDisplayValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayGroupAmountOverBudgetAvailable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Displays the <c>AmountOverBudgetAvailable</c> value for the group
    ///    <c>BudgetCheckResultErrorWarningDetail</c> record.
    /// </summary>
    /// <returns>
    ///    An <c>AmountMST</c> value if the group <c>BudgetCheckResultErrorWarningDetail</c> record ID exists;
    ///    otherwise, 0.0.
    /// </returns>
    public display AmountMST displayGroupAmountOverBudgetAvailable()
    {
        BudgetCheckResultErrorWarningDetail groupBudgetCheckResultErrorWarningDetail;
        AmountMST                           amountMST = 0.0;

        if (this.RecId != 0)
        {
            groupBudgetCheckResultErrorWarningDetail = BudgetCheckResultErrorWarningDetail::findGroupBudgetCheckErrorWarningDetail(this.BudgetSource, this.SequenceNumber);

            if (groupBudgetCheckResultErrorWarningDetail.RecId != 0)
            {
                amountMST = groupBudgetCheckResultErrorWarningDetail.AccountingCurrencyAmountOverAvailable;
            }
        }

        return amountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayGroupAmountOverBudgetThreshold</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Displays the <c>AmountOverBudgetTreshold</c> value for the group
    ///    <c>BudgetCheckResultErrorWarningDetail</c> record.
    /// </summary>
    /// <returns>
    ///    An <c>AmountMST</c> value if the group <c>BudgetCheckResultErrorWarningDetail</c> record exists;
    ///    otherwise, 0.0.
    /// </returns>
    public display AmountMST displayGroupAmountOverBudgetThreshold()
    {
        BudgetCheckResultErrorWarningDetail groupBudgetCheckResultErrorWarningDetail;
        AmountMST                           amountMST = 0.0;

        if (this.RecId != 0)
        {
            groupBudgetCheckResultErrorWarningDetail = BudgetCheckResultErrorWarningDetail::findGroupBudgetCheckErrorWarningDetail(this.BudgetSource, this.SequenceNumber);

            if (groupBudgetCheckResultErrorWarningDetail.RecId != 0)
            {
                amountMST = groupBudgetCheckResultErrorWarningDetail.AccountingCurrencyAmountOverThreshold;
            }
        }

        return amountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displaySourceLedgerDimensionLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Displays the <c>DataAreaId</c> value for the budget source ledger dimension.
    /// </summary>
    /// <returns>
    ///    The <c>DataAreaId</c> value for the budget source ledger dimension.
    /// </returns>
    public display dataAreaId displaySourceLedgerDimensionLegalEntity()
    {
        dataAreaId legalEntityDataAreaId;
        CompanyInfo legalEntity;
        Ledger ledger;

        if (BudgetControlConfiguration::isControlConfigured() &&
            hasTableAccess(tablenum(CompanyInfo)) &&
            this.RecId != 0)
        {
            select firstonly DataArea from legalEntity
                join RecId from ledger
                    where ledger.RecId == this.PrimaryLedger &&
                        ledger.PrimaryForLegalEntity == legalEntity.RecId;

            legalEntityDataAreaId = legalEntity.DataArea;
        }

        return legalEntityDataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displaySourceLedgerDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the display value of the referenced <c>BudgetSourceLedgerDimension</c> object.
    /// </summary>
    /// <returns>
    /// The display value of the referenced <c>BudgetSourceLedgerDimension</c> object.
    /// </returns>
    display DimensionDisplayValue displaySourceLedgerDimensionValue()
    {
        DimensionDisplayValue dimensionDisplayValue;

        if (hasTableAccess(tablenum(DimensionAttributeValueCombination)))
        {
            dimensionDisplayValue = LedgerDimensionFacade::getDisplayValueForLedgerDimension(this.BudgetSourceLedgerDimension);
        }

        return dimensionDisplayValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the specified record exists in the <c>BudgetCheckResultErrorWarningDetail</c> table;
    ///    if not, an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    ///    The <c>recId</c> value of the record to check for existence.
    /// </param>
    /// <param name="_userConnection">
    ///    An instance of the <c>UserConnection</c> class to use to determine whether the specified record in
    ///    the <c>BudgetCheckResultErrorWarningDetail</c> table exists; optional, default is null.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RecId _recId, UserConnection _userConnection = null)
    {
        boolean ret = true;

        if (!BudgetCheckResultErrorWarningDetail::exist(_recId, _userConnection))
        {
            ret = checkFailed(strfmt(BudgetCheckResultErrorWarningDetail::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>BudgetCheckResultErrorWarningDetail</c> table
    ///    exists.
    /// </summary>
    /// <param name="_recId">
    ///    The <c>recId</c> value of the <c>BudgetCheckResultErrorWarningDetail</c> record to check for
    ///    existence.
    /// </param>
    /// <param name="_userConnection">
    ///    An instance of the <c>UserConnection</c> class to use to determine whether the specified record in
    ///    the <c>BudgetCheckResultErrorWarningDetail</c> table exists; optional, default is null.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId, UserConnection _userConnection = null)
    {
        BudgetCheckResultErrorWarningDetail budgetCheckResultErrorWarningDetail;

        if (_userConnection)
        {
            budgetCheckResultErrorWarningDetail.setConnection(_userConnection);
        }

        select firstonly RecId from budgetCheckResultErrorWarningDetail
            where budgetCheckResultErrorWarningDetail.RecId == _recId;

        return (budgetCheckResultErrorWarningDetail.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>BudgetCheckResultErrorWarningDetail</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The <c>recId</c> value of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <param name="_userConnection">
    ///    An instance of the <c>UserConnection</c> class to use to find the specified record in the
    ///    <c>BudgetCheckResultErrorWarningDetail</c> table; optional, default is null.
    /// </param>
    /// <returns>
    ///    A record in the <c>BudgetCheckResultErrorWarningDetail</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetCheckResultErrorWarningDetail find(
        RecId _recId ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto,
        UserConnection          _userConnection = null)
    {
        BudgetCheckResultErrorWarningDetail budgetCheckResultErrorWarningDetail;

        budgetCheckResultErrorWarningDetail.selectForUpdate(_forupdate);

        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            budgetCheckResultErrorWarningDetail.concurrencyModel(_concurrencyModel);
        }

        if (_userConnection)
        {
            budgetCheckResultErrorWarningDetail.setConnection(_userConnection);
        }

        select firstonly
            budgetCheckResultErrorWarningDetail
            where
            budgetCheckResultErrorWarningDetail.RecId == _recId;

        return budgetCheckResultErrorWarningDetail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findGroupBudgetCheckErrorWarningDetail</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the <c>BudgetCheckResultErrorWarningDetail</c> record group.
    /// </summary>
    /// <param name="_budgetSourceRecId">
    ///    The <c>recId</c> value of the <c>BudgetSource</c> record to use to find the group
    ///    <c>BudgetCheckResultErrorWarningDetail</c> record.
    /// </param>
    /// <param name="_sequenceNum">
    ///    The <c>sequenceNum</c> value to use to find the group <c>BudgetCheckResultErrorWarningDetail</c>
    ///    record.
    /// </param>
    /// <param name="_userConnection">
    ///    An instance of the <c>UserConnection</c> class to use to find the group
    ///    <c>BudgetCheckResultErrorWarningDetail</c> record; optional, default is null.
    /// </param>
    /// <returns>
    ///    The <c>BudgetCheckResultErrorWarningDetail</c> record of the budget group.
    /// </returns>
    public static BudgetCheckResultErrorWarningDetail findGroupBudgetCheckErrorWarningDetail(
        RecId _budgetSourceRecId,
        SequenceNum _sequenceNum,
        UserConnection _userConnection = null)
    {
        BudgetCheckResultErrorWarningDetail groupBudgetCheckResultErrorWarningDetail;

        if (_userConnection)
        {
            groupBudgetCheckResultErrorWarningDetail.setConnection(_userConnection);
        }

        select firstonly groupBudgetCheckResultErrorWarningDetail
                where groupBudgetCheckResultErrorWarningDetail.BudgetSourceLedgerDimension == 0 &&
                    groupBudgetCheckResultErrorWarningDetail.BudgetSource == _budgetSourceRecId &&
                    groupBudgetCheckResultErrorWarningDetail.SequenceNumber == (_sequenceNum - 1);

        return groupBudgetCheckResultErrorWarningDetail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetCtrl</ConfigurationKey>
	<DeveloperDocumentation>@SYS139250</DeveloperDocumentation>
	<Label>@SYS139226</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>BudgetSourceLedgerDimension</TitleField1>
	<TitleField2>BudgetSource</TitleField2>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>Budget</Modules>
	<ReplacementKey>BudgetCheckResultErrorWarningIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetSourceLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingCurrencyAmountOverThreshold</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingCurrencyAmountOverAvailable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SequenceNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetControlLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetGroupMember</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SequenceNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetSourceLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingCurrencyAmountOverThreshold</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingCurrencyAmountOverAvailable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SequenceNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetControlLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryLedger</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetGroupMember</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckResult</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckResultErrorWarningType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckResultErrorWarning</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AccountingCurrencyAmountOverAvailable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AccountingCurrencyAmountOverThreshold</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetControlLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionBudgetControl</ExtendedDataType>
			<Label>@SYS301658</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetGroupMember</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS127618</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetSource</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS127829</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetSourceLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionBase</ExtendedDataType>
			<Label>@SYS8343</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckResult</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BudgetCheckResult</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckResultErrorWarning</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BudgetControlErrorWarning</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckResultErrorWarningType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BudgetControlErrorWarningType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PrimaryLedger</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SequenceNumber</Name>
			<ExtendedDataType>SequenceNum</ExtendedDataType>
			<Label>@SYS2658</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BudgetSourceLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetSourceLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BudgetCheckResultErrorWarningIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetSource</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SequenceNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetControlLedgerDimension</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetSourceLedgerDimension</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CheckResultErrorWarning</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BudgetControlLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetControlLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PrimaryLedgerIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>PrimaryLedger</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BudgetGroupMemberIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetGroupMember</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetControlLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS139231</EntityRelationshipRole>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BudgetControlLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetCheckErrorWarningDetail</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetControlLedgerDimension</Name>
					<Field>BudgetControlLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetGroupMember</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>BudgetGroupMember</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BudgetGroupMember</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetGroupMember_BudgetCheckResultErrorWarningDetail</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetGroupMember</Name>
					<Field>BudgetGroupMember</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetSource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS127829</EntityRelationshipRole>
			<RelatedTable>BudgetSource</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BudgetSource</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetCheckErrorWarningDetail</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetSource</Name>
					<Field>BudgetSource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetSourceLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS139231</EntityRelationshipRole>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BudgetSourceLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetCheckErrorWarningDetail</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetSourceLedgerDimension</Name>
					<Field>BudgetSourceLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PrimaryLedger</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Ledger</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Ledger</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Ledger_BudgetCheckResultErrorWarningDetail</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PrimaryLedger</Name>
					<Field>PrimaryLedger</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>