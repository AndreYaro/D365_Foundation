<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetImpairmentCGUGroup_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetImpairmentCGUGroup_JP extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowEditContent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if the CGU group can be edited.
    /// </summary>
    /// <returns>
    /// If the CGU group can be edited.
    /// </returns>
    public boolean allowEditContent()
    {
        return this.Status == AssetImpairmentCGUGroupStatus_JP::Draft;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateSharedAssetsNetBookValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the total NBV of all shared assets of this CGU group
    /// </summary>
    /// <param name="_asOfDate">
    /// The as of date to calculate NBV
    /// </param>
    /// <returns>
    /// The total NBV of all shared assets of this CGU group
    /// </returns>
    public AssetNetBookValue calculateSharedAssetsNetBookValue(AssetTransDate _asOfDate)
    {
        AssetSumCalc                      sumCalc;
        AssetImpairmentCGUSharedAssets_JP assets;
        AssetBook                         assetBook;
        AssetNetBookValue                 sumNbv;

        while select CGUGroup, AssetId, BookId from assets
                where assets.CGUGroup == this.RecId
              join RecId from assetBook
                where assets.AssetId == assetBook.AssetId
                      && assets.BookId == assetBook.BookId
        {
            sumCalc = AssetSumCalc_Trans::newAssetYear(assets.AssetId, assets.BookId, _asOfDate);
            sumNbv += sumCalc.netBookValue();
        }

        return sumNbv;
    }

]]></Source>
			</Method>
			<Method>
				<Name>holdingEntryCheck</Name>
				<Source><![CDATA[
    public boolean holdingEntryCheck()
    {
        boolean                     ret = true;
        AssetImpairmentCGU_JP       cgu;
        AssetImpairmentCGUAssets_JP cguAsset;
        AssetImpairmentCGUAssets_JP holdingAsset;

        while select RecId, Number from cgu
            where cgu.CGUGroup == this.RecId
        {
            while select ImpairmentHoldingAssetId, ImpairmentHoldingBookId from holdingAsset
                group by ImpairmentHoldingAssetId, ImpairmentHoldingBookId
                where holdingAsset.AssetImpairmentCGU == cgu.RecId
                      && holdingAsset.IsSharedAsset == NoYes::No
                      && holdingAsset.ImpairmentHoldingAssetId != ''
                      && holdingAsset.ImpairmentHoldingBookId != ''
            {
                select firstOnly cguAsset
                    where cguAsset.AssetId == holdingAsset.ImpairmentHoldingAssetId
                          && cguAsset.BookId == holdingAsset.ImpairmentHoldingBookId
                          && cguAsset.AssetImpairmentCGU == cgu.RecId
                          && cguAsset.IsSharedAsset == NoYes::No;

                if (!cguAsset)
                {
                    ret = checkFailed(strFmt("@SYP4880613", holdingAsset.ImpairmentHoldingAssetId, holdingAsset.ImpairmentHoldingBookId, cgu.Number));
                }
                else
                {
                    if (cguAsset.AssetImpairmentAllocationMethod_JP != AssetImpairmentAllocationMethod_JP::Neglected)
                    {
                        ret = checkFailed(strFmt("@SYP4880613", cguAsset.AssetId, cguAsset.BookId, cgu.Number));
                    }
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSharedAssetFullyAllocated</Name>
				<Source><![CDATA[
    public boolean isSharedAssetFullyAllocated()
    {
        AssetImpairmentCGUSharedAssets_JP      cguSharedAssets;
        AssetImpairmentCGUSharedAssetsAlloc_JP sharedAssetsAlloc;
        TmpPercent_JP                          percentTmp;
        boolean                                ret = true;

        insert_recordset percentTmp
            (Percent, RefRecId)
        select sum(Percent), SharedAsset from sharedAssetsAlloc
                group by SharedAsset
            exists join cguSharedAssets
                where cguSharedAssets.RecId == sharedAssetsAlloc.SharedAsset
                      && cguSharedAssets.CGUGroup == this.RecId;

        select firstOnly RecId from percentTmp where percentTmp.Percent != 100;

        if (percentTmp)
        {
            ret = checkFailed(strFmt("@SYP4880612", "@SYP4880420"));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priorityCheck</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate if the priority set up is valid.
    /// </summary>
    /// <returns>
    /// Whether the same priority using the same proration method.
    /// </returns>
    public boolean priorityCheck()
    {
        AssetImpairmentCGUSharedAssets_JP   cguSharedAssets;
        Map                                 mapLoc = new Map(Types::Integer, Types::Enum);
        boolean                             ret = true;

        // Checks if the same priority using the same method.
        while select AllocationPriority, ProrationMethodOverride from cguSharedAssets
            group by AllocationPriority, ProrationMethodOverride
            where cguSharedAssets.CGUGroup == this.RecId
        {
            if (!mapLoc.exists(cguSharedAssets.AllocationPriority))
            {
                mapLoc.insert(cguSharedAssets.AllocationPriority, cguSharedAssets.ProrationMethodOverride);
            }
            else
            {
                ret = checkFailed(strFmt("@SYP4880232", cguSharedAssets.AllocationPriority));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        AssetImpairmentTestResult_JP testResult;
        boolean ret;

        ret = super();

        if (ret)
        {
            select firstonly testResult where testResult.CGUGroup == this.RecId;
            if (testResult)
            {
                ret = checkFailed("@SYP4880450");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>AssetImpairmentCGUGroup_JP</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The <c>AssetImpairmentCGUGroup_JP</c> recid.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// The <c>AssetImpairmentCGUGroup_JP</c> table record.
    /// </returns>
    public static AssetImpairmentCGUGroup_JP find(
        RefRecId                _recId,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetImpairmentCGUGroup_JP      result;

        if (_recId)
        {
            result.selectForUpdate(_forupdate);
            if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
            {
                result.concurrencyModel(_concurrencyModel);
            }

            select firstonly
                result
            where
                result.RecId == _recId;
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4880456</DeveloperDocumentation>
	<FormRef>AssetCashGeneratingUnitGroup_JP</FormRef>
	<Label>@SYP4880233</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>FixedAssets</Modules>
	<ReplacementKey>NameIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedAssetAllocBasis</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedAssetHasHigherPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedAssetImpairMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Details</Name>
			<Label>@SYS318405</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingLayer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedAssetAllocBasis</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedAssetImpairMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedAssetHasHigherPriority</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AssetImpairmentCGUGroupName_JP</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostingLayer</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CurrentOperationsTax</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SharedAssetAllocBasis</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>AssetImpairmentSharedAssetAllocBasis_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SharedAssetHasHigherPriority</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@FixedAssetsImpairementAccounting:SharedAssetPriority</Label>
			<EnumType>AssetImpairmentSharedAssetPriority_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SharedAssetImpairMethod</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>AssetImpairmentSharedAssetsMethod_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>AssetImpairmentCGUGroupStatus_JP</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Description</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Status</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>