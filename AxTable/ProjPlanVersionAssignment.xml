<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjPlanVersionAssignment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjPlanVersionAssignment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>hasProjPlanVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return true if any <c>ProjPlanVersionAssignment</c> record contains the specified <c>ProjPlanVersion</c> value.
    /// </summary>
    /// <param name = "_projPlanVersion">
    /// The reference record ID of <c>ProjPlanVersion</c> table.
    /// </param>
    /// <returns>
    /// true if any record with the specified <c>ProjPlanVersion</c> reference record ID exists; otherwise false.
    /// </returns>
    public static boolean hasProjPlanVersion(ProjPlanVersionRecId _projPlanVersion)
    {
        ProjPlanVersionAssignment projPlanVersionAssignment;

        if (_projPlanVersion)
        {
            select firstonly RecId from projPlanVersionAssignment
                where projPlanVersionAssignment.ProjPlanVersion == _projPlanVersion;
        }

        return projPlanVersionAssignment.RecId ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasCancelation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return true if any <c>ProjPlanVersionAssignment</c> record contains 
    /// the specified <c>ProjPlanVersion</c> value and Reserve field = false.
    /// </summary>
    /// <param name = "_projPlanVersion">
    /// The reference record ID of <c>ProjPlanVersion</c> table.
    /// </param>
    /// <returns>
    /// true if any record with the specified <c>ProjPlanVersion</c> reference 
    /// record ID exists and Reservie field = false; otherwise false.
    /// </returns>
    public static boolean hasCancelation(ProjPlanVersionRecId _projPlanVersion)
    {
        ProjPlanVersionAssignment projPlanVersionAssignment;

        if (_projPlanVersion)
        {
            select firstonly RecId from projPlanVersionAssignment
                where projPlanVersionAssignment.ProjPlanVersion == _projPlanVersion
                    && projPlanVersionAssignment.ReservationType == ProjPlanVersionAssignmentType::Cancel;
        }

        return projPlanVersionAssignment.RecId ? true : false ;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasReservationByHierarchyAndTaskId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return true if <c>ProjPlanVersionAssignment</c> table contains
    /// record with Reserve field = true when looking up by the specified
    /// <c>ProjPlanVersion</c> table hierarchy ID and hierarchy task ID.
    /// </summary>
    /// <param name = "_hierarchyId">
    /// The <c>ProjPlanVersion</c> table hierarchy ID field value.
    /// </param>
    /// <param name = "_taskId">
    /// The <c>ProjPlanVersion</c> table hierarchy task ID field value .
    /// </param>
    /// <returns>
    /// true if <c>ProjPlanVersionAssignment</c> table contains record with Reserve field = true
    /// when looking up by the specified <c>ProjPlanVersion</c> table hierarchy ID 
    /// and hierarchy task ID values; otherwise false.
    /// </returns>
    public static boolean hasReservationByHierarchyAndTaskId(HierarchyIdBase _hierarchyId, ProjHierarchyTaskId _taskId)
    {
        ProjPlanVersionAssignment   projPlanVersionAssignment;
        ProjPlanVersion             projPlanVersion;

        if (_hierarchyId && _taskId)
        {
            select firstonly RecId from projPlanVersionAssignment
                where projPlanVersionAssignment.ReservationType == ProjPlanVersionAssignmentType::Reserve
                exists join projPlanVersion
                    where projPlanVersion.HierarchyId == _hierarchyId
                        && projPlanVersion.HierarchyTaskId == _taskId
                        && projPlanVersion.RecId == projPlanVersionAssignment.projPlanVersion;
        }

        return projPlanVersionAssignment.RecId ? true : false ;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasReservationByHierarchyId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return true if <c>ProjPlanVersionAssignment</c> table contains reservation records.
    /// </summary>
    /// <param name = "_leafNodeTaskChangesList">
    /// List of class <c>ResWBSTaskDateChangeContext</c> that holds leaf node WBS tasks
    /// parameters if no backing booking reservation is detected.
    /// </param>
    /// <param name = "_hierarchyId">
    /// Hierarchy ID field value.
    /// </param>
    /// <returns>
    /// true if <c>ProjPlanVersionAssignment</c> table contains reservation records; otherwise false.
    /// </returns>
    public static boolean hasReservationByHierarchyId(List _leafNodeTaskChangesList, HierarchyIdBase _hierarchyId)
    {
        ProjPlanVersion             projPlanVersion;
        ProjPlanVersionAssignment   projPlanVersionAssignment;
        PSAProjSchedRole            teamMember;

        // Only look for task which has staffed resource assigned to it.
        while select HierarchyTaskId, TaskName, TaskStartDate, TaskFinishDate, HierarchyId from projPlanVersion
            where projPlanVersion.HierarchyId == _hierarchyId
            join RecId from projPlanVersionAssignment
                where projPlanVersionAssignment.ProjPlanVersion == projPlanVersion.RecId
                    && projPlanVersionAssignment.ActivityResource != 0
            join Name from teamMember
                where teamMember.RecId == projPlanVersionAssignment.ActivityResource
                    && teamMember.Resource != 0
        {
            ResWBSTaskDateChangeContext dataChangeContextTask = ResWBSTaskDateChangeContext::construct();
            dataChangeContextTask.parmHierarchyTaskId(projPlanVersion.HierarchyTaskId);
            dataChangeContextTask.parmTaskName(projPlanVersion.TaskName);
            dataChangeContextTask.parmResourceName(teamMember.Name);
            dataChangeContextTask.parmNewTaskStartDate(projPlanVersion.TaskStartDate);
            dataChangeContextTask.parmNewTaskEndDate(projPlanVersion.TaskFinishDate);
            dataChangeContextTask.parmIsDraftActivityResource(true);
            dataChangeContextTask.parmHierarchyId(projPlanVersion.HierarchyId);
            _leafNodeTaskChangesList.addEnd(dataChangeContextTask);
        }
        
        return (!_leafNodeTaskChangesList.empty());
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByAllKeyFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>ProjPlanVersionAssignment</c> record by the specificed key fields.
    /// </summary>
    /// <param name = "_projPlanVersion">
    /// The reference record ID of <c>ProjPlanVersion</c> table.
    /// </param>
    /// <param name = "_activityResource">
    /// The reference record ID of <c>PSAProjSchedRole</c> table.
    /// </param>
    /// <param name = "_reservationType">
    /// The reservation type of the assignment.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that determines whether the <c>ProjPlanVersionAssignment</c> should be selected for update; optional.
    /// </param>
    /// <returns>
    /// The <c>ProjPlanVersionAssignment</c> record buffer.
    /// </returns>
    public static ProjPlanVersionAssignment findByAllKeyFields(ProjPlanVersionRecId _projPlanVersion, 
        activityresourcerecid _activityResource, ProjPlanVersionAssignmentType _reservationType, boolean _forUpdate = false)
    {
        ProjPlanVersionAssignment projPlanVersionAssignment;

        projPlanVersionAssignment.selectForUpdate(_forUpdate);

        if (_projPlanVersion && _activityResource)
        {
            select firstonly projPlanVersionAssignment
                where projPlanVersionAssignment.ProjPlanVersion == _projPlanVersion
                    && projPlanVersionAssignment.ActivityResource == _activityResource
                && projPlanVersionAssignment.ReservationType == _reservationType;
        }

        return projPlanVersionAssignment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteByHierarchyId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete <cProjPlanVersionAssignment></c> records by the specified <c>ProjPlanVersion</c> hierarchy ID value.
    /// </summary>
    /// <param name = "_hierarchyId">
    /// The <c>ProjPlanVersion</c> table hierarchy ID field value .
    /// </param>
    public static void deleteByHierarchyId(HierarchyIdBase _hierarchyId)
    {
        if (_hierarchyId)
        {
            ProjPlanVersionAssignment   projPlanVersionAssignment;
            ProjPlanVersion             projPlanVersion;

            ttsbegin;

            delete_from projPlanVersionAssignment
                exists join projPlanVersion
                    where projPlanVersion.RecId == projPlanVersionAssignment.ProjPlanVersion
                        && projPlanVersion.HierarchyId == _hierarchyId;

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteByProjPlanVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete <cProjPlanVersionAssignment></c> records by the specified <c>ProjPlanVersion</c> record ID value.
    /// </summary>
    /// <param name = "_activityResource">
    /// The reference record ID of <c>PSAProjSchedRole</c> table.
    /// </param>
    public static void deleteByProjPlanVersion(ProjPlanVersionRecId _projPlanVersion)
    {
        if (_projPlanVersion)
        {
            ProjPlanVersionAssignment   projPlanVersionAssignment;
            
            ttsbegin;

            delete_from projPlanVersionAssignment
                where projPlanVersionAssignment.ProjPlanVersion == _projPlanVersion;
                
            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@Proj:ProjPlanVersionAssignmentDoc</DeveloperDocumentation>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<Modules>ProjectManagementAndAccounting</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ActivityResource</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ActivityResourceRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProjPlanVersion</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ProjPlanVersionRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReservationType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjPlanVersionAssignmentType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>UniqueKeysIndex</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ActivityResource</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjPlanVersion</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReservationType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProjPlanVersionIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjPlanVersion</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ActivityResource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PSAProjSchedRole</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ActivityResource</Name>
					<Field>ActivityResource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjPlanVersion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>ProjPlanVersion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjPlanVersion</Name>
					<Field>ProjPlanVersion</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>