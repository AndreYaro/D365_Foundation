<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailFiscalIntegrationFunctionalityProfile</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailFiscalIntegrationFunctionalityProfile extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromFiscalDocumentProvider</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init the record in the <c>RetailFiscalIntegrationFunctionalityProfile</c> table specified by a <c>RetailFiscalIntegrationDocumentProviderTable</c> table record.
    /// </summary>
    /// <param name = "_fiscalDocumentProvider">
    /// The record of the <c>RetailFiscalIntegrationDocumentProviderTable</c> table.
    /// </param> 
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromFiscalDocumentProvider(RetailFiscalIntegrationDocumentProviderTable _fiscalDocumentProvider)
    {
        RetailFiscalIntegrationConfigurationHelper configurationHelper = new RetailFiscalIntegrationConfigurationHelper();
        List propertyList = new List(Types::AnyType);

        XMLNodeList documentProviderInfoNodeList = configurationHelper.getFiscalIntegrationPropertyNodeListByNameSpace(_fiscalDocumentProvider.Manifest, RetailFiscalIntegrationConnectorContants::DocumentProviderGeneralInfo);
        if (documentProviderInfoNodeList.length() > 0)
        {
            propertyList.addEnd(documentProviderInfoNodeList);
        }

        XMLNodeList setupNodeList = configurationHelper.getFiscalIntegrationPropertyNodeListByNameSpace(_fiscalDocumentProvider.Manifest, RetailFiscalIntegrationConnectorContants::FiscalServiceSetupInfo);
        if (setupNodeList.length() > 0)
        {
            propertyList.addEnd(setupNodeList);
        }

        XmlNodeList dataMappingNodeList = configurationHelper.getFiscalIntegrationPropertyNodeListByNameSpace(_fiscalDocumentProvider.Manifest, RetailFiscalIntegrationConnectorContants::FiscalServiceDataMappingInfo);
        if (dataMappingNodeList.length() > 0)
        {
            propertyList.addEnd(dataMappingNodeList);
        }

        this.DocumentProviderName = _fiscalDocumentProvider.Name;
        this.DocumentProviderProperties = RetailFiscalIntegrationConfigurationHelper::constructPropertyXML(propertyList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init funcrionality profile id by a specific retail number sequence.
    /// </summary>
    public void initValue()
    {
        super();

        NumberSeq numberSeq = NumberSeq::newGetNum(RetailParameters::numRefRetailFiscalIntegrationFunctionalityProfileId(), false, true);

        if (numberSeq)
        {
            this.ProfileId = numberSeq.num();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>RetailFiscalIntegrationFunctionalityProfile</c> table specified by a recId.
    /// </summary>
    /// <param name = "_recId">
    /// The record id of the <c>RetailFiscalIntegrationFunctionalityProfile</c> record to find.
    /// </param>
    /// <param name = "_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailFiscalIntegrationFunctionalityProfile</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RetailFiscalIntegrationFunctionalityProfile find(RecId _recId, boolean _forUpdate = false)
    {
        RetailFiscalIntegrationFunctionalityProfile profile;

        if (_recId)
        {
            if (_forUpdate)
            {
                profile.selectForUpdate(_forUpdate);
            }

            select profile where profile.RecId == _recId;
        }

        return profile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCrossCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record that cross company in the <c>RetailFiscalIntegrationFunctionalityProfile</c> table specified by a recId.
    /// </summary>
    /// <param name = "_recId">
    /// The record id of the <c>RetailFiscalIntegrationFunctionalityProfile</c> record to find.
    /// </param>
    /// <param name = "_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailFiscalIntegrationFunctionalityProfile</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RetailFiscalIntegrationFunctionalityProfile findCrossCompany(RecId _recId, boolean _forUpdate = false)
    {
        RetailFiscalIntegrationFunctionalityProfile profile;

        if (_recId)
        {
            if (_forUpdate)
            {
                profile.selectForUpdate(_forUpdate);
            }

            select crosscompany profile where profile.RecId == _recId;
        }

        return profile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// The record in the <c>RetailFiscalIntegrationFunctionalityProfile</c> table is not possible to delete if it used in fiscal connector group.
    /// </summary>
    public void delete()
    {
        RetailFiscalIntegrationFunctionalityProfileGroup profileGroup;
        RetailFiscalIntegrationFunctionalityProfileGroupLine profileGroupLine;

        select firstonly profileGroup
            exists join profileGroupLine
                where profileGroupLine.FunctionalityProfileGroup == profileGroup.FunctionalityProfileGroupId
                && profileGroupLine.FunctionalityProfile == this.RecId;

        if (profileGroup)
        {
            throw error(strFmt("@RetailFiscalIntegration:FiscalFunctionalProfileUsedInFiscalConnectorGroupCannotBeDeleted", this.ProfileId));
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add necessary conditions when fill in the <c>RetailFiscalIntegrationFunctionalityProfile</c> table fields.
    /// </summary>
    /// <param name = "_fieldId">
    /// The field id needs to check.
    /// </param>
    /// <returns>
    /// A boolean value that indicates whether the field is effective; true, effect; false, void.
    /// </returns>
    public boolean validateField(FieldId _fieldId)
    {
        boolean ret = super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RetailFiscalIntegrationFunctionalityProfile, ConnectorName) :
                ret = ret && this.validateConnectorName();
                break;

            default :
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateConnectorName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate field ConnectorName in the <c>RetailFiscalIntegrationFunctionalityProfile</c> table.
    /// </summary>
    /// <returns>
    /// A boolean value that indicates whether the field is effective; true, effect; false, void.
    /// </returns>
    private boolean validateConnectorName()
    {
        boolean ret = true;

        if (this.ConnectorName != this.orig().ConnectorName)
        {
            RetailFiscalIntegrationFunctionalityProfileGroupLine groupLine;

            select firstonly RecId from groupLine where groupLine.FunctionalityProfile == this.RecId;

            if (groupLine.RecId)
            {
                ret = checkFailed(strFmt("@RetailFiscalIntegration:FunctionalProfileUsedInConnectorGroupCannotBeModified", this.ProfileId));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@RetailFiscalIntegration:RetailFiscalIntegrationFunctionalProfile</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>ProfileId</TitleField1>
	<TitleField2>Description</TitleField2>
	<ClusteredIndex>ProfileId</ClusteredIndex>
	<Modules>Retail</Modules>
	<PrimaryIndex>ProfileId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProfileId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProfileId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConnectorName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentProviderProperties</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Profile</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FiscalConnector</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConnectorName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProfileId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFiscalIntegrationFunctionalityProfileId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConnectorName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFiscalIntegrationConnectorName</ExtendedDataType>
			<Label>@RetailFiscalIntegration:FiscalConnectorName</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
			<Label>@SYS25589</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentProviderName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFiscalIntegrationDocumentProviderName</ExtendedDataType>
			<Label>@RetailFiscalIntegration:ProviderName</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentProviderProperties</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>XML</ExtendedDataType>
			<Label>@RetailFiscalIntegration:ManifestFile</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProfileId</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProfileId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RetailFiscalIntegrationConnectorTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailFiscalIntegrationConnectorTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ConnectorName</Name>
					<Field>ConnectorName</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailFiscalIntegrationDocumentProviderTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailFiscalIntegrationDocumentProviderTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocumentProviderName</Name>
					<Field>DocumentProviderName</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>