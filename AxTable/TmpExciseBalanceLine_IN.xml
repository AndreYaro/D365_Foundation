<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpExciseBalanceLine_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpExciseBalanceLine_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertTmpExciseBalLine</Name>
				<Source><![CDATA[
        public void insertTmpExciseBalLine(
        RefRecId    _eccNumber,
        TransDate   _fromDate)
    {
        TaxComponentTable_IN    taxComponentTable;

        while select RecId, Component from taxComponentTable
            where taxComponentTable.TaxType == TaxType_IN::Excise
        {
            this.TaxComponentTable       = taxComponentTable.RecId;
            this.PayableBal              = ExciseRG23ARegister_IN::sumRG23APayableBalance(_eccNumber, _fromDate, taxComponentTable.RecId)  +
                                           ExciseRG23CRegister_IN::sumRG23CPayableBalance(_eccNumber, _fromDate, taxComponentTable.RecId);
            this.PayableBalanceAvailable = this.PayableBal +
                                           ExciseRG23ARegister_IN::sumRG23APayable(_eccNumber, _fromDate, taxComponentTable.RecId)  +
                                           ExciseRG23CRegister_IN::sumRG23CPayable(_eccNumber, _fromDate, taxComponentTable.RecId);

            this.PayableOpeningBAL       = ExciseRG23ARegister_IN::sumRG23APayable(_eccNumber, _fromDate, taxComponentTable.RecId)   +
                                           ExciseRG23CRegister_IN::sumRG23CPayable(_eccNumber, _fromDate, taxComponentTable.RecId);
            this.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertTmpExciseBalLine23C</Name>
				<Source><![CDATA[
        public void insertTmpExciseBalLine23C(
        RefRecId    _eccNumber,
        TransDate   _fromDate)
    {
        ExciseRG23CRegister_IN     exciseRG23CRegister;
        ExciseRG23CRegister_IN     exciseRG23CRegisterDefBal;
        ExciseRG23CRegister_IN     exciseRG23CRegisterLoc;
        TaxComponentTable_IN       taxComponentTable;

        while select RecId from taxComponentTable
            where taxComponentTable.TaxType == TaxType_IN::Excise
        {
            this.TaxComponentTable  = taxComponentTable.RecId;
            select sum(rg23cRecoverable) from exciseRG23CRegister
                where exciseRG23CRegister.TaxComponentTable             == taxComponentTable.RecId
                   && exciseRG23CRegister.TaxRegistrationNumberTable    == _eccNumber
                   && exciseRG23CRegister.rgDate                        == _fromDate;

            this.rg23cRecoverable    = exciseRG23CRegister.rg23cRecoverable;

            select sum(rg23cDeferredBal) from exciseRG23CRegisterDefBal
                where exciseRG23CRegisterDefBal.TaxComponentTable               == taxComponentTable.RecId
                   && exciseRG23CRegisterDefBal.TaxRegistrationNumberTable      == _eccNumber
                   && exciseRG23CRegisterDefBal.rgDate                          <= _fromDate;

            this.rg23cDeferredBAl    = exciseRG23CRegisterDefBal.rg23cDeferredBal;

            select sum(rg23cRecoverable) from exciseRG23CRegisterLoc
                where exciseRG23CRegisterLoc.TaxComponentTable               == taxComponentTable.RecId
                   && exciseRG23CRegisterLoc.TaxRegistrationNumberTable      == _eccNumber
                   && exciseRG23CRegisterLoc.rgDate                          <  _fromDate;

            this.rg23cOpeningBAL        = exciseRG23CRegisterLoc.rg23cRecoverable;
            this.rg23cBalanceAvailable  = this.rg23cOpeningBAL +  this.rg23cRecoverable;
            this.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertTmpExciseBalLine23D</Name>
				<Source><![CDATA[
        public void insertTmpExciseBalLine23D(
        RefRecId    _eccNumber,
        TransDate   _fromDate)
    {
        ExciseRG23DRegister_IN      exciseRG23DRegister;
        ExciseRG23DRegister_IN      exciseRG23DRegisterOpeningClosing;
        TaxComponentTable_IN        taxComponentTable;

        while select RecId from taxComponentTable
            where taxComponentTable.TaxType == TaxType_IN::Excise
        {
            select sum(CenvatCredit),
                   sum(CenvatCreditTransfer) from exciseRG23DRegister
                where exciseRG23DRegister.TaxComponentTable             == taxComponentTable.RecId
                   && exciseRG23DRegister.TaxRegistrationNumberTable    == _eccNumber
                   && exciseRG23DRegister.rgDate                        < _fromDate;

            select sum(CenvatCredit),
                   sum(CenvatCreditTransfer) from exciseRG23DRegisterOpeningClosing
                where exciseRG23DRegisterOpeningClosing.TaxComponentTable           == taxComponentTable.RecId
                   &&  exciseRG23DRegisterOpeningClosing.TaxRegistrationNumberTable == _eccNumber
                   &&  exciseRG23DRegisterOpeningClosing.rgDate                     == _fromDate;

            this.TaxComponentTable                   = taxComponentTable.RecId;
            this.rg23dOpeningCenvatCredit            = exciseRG23DRegister.CenvatCredit;
            this.rg23dCenvatCredit                   = exciseRG23DRegisterOpeningClosing.CenvatCredit;
            this.rg23dOpeningCenvatCreditTransfer    = exciseRG23DRegister.CenvatCreditTransfer;
            this.rg23dCenvatCreditTransfer           = exciseRG23DRegisterOpeningClosing.CenvatCreditTransfer;
            this.rg23dClosingCenvatCredit            = exciseRG23DRegister.CenvatCredit + exciseRG23DRegisterOpeningClosing.CenvatCredit;
            this.rg23dClosingCenvatCreditTransfer    = exciseRG23DRegister.CenvatCreditTransfer + exciseRG23DRegisterOpeningClosing.CenvatCreditTransfer;
            this.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertTmpExciseBalLineBalance</Name>
				<Source><![CDATA[
        public void insertTmpExciseBalLineBalance(
        RefRecId    _eccNumber,
        TransDate   _fromDate)
    {
        TaxComponentTable_IN    taxComponentTable;
        ExciseRG23ARegister_IN  exciseRG23ARegister;
        ExciseRG23ARegister_IN  exciseRG23ARegisterDefBal;
        ExciseRG23ARegister_IN  exciseRG23ARegisterLoc;

        while select RecId from taxComponentTable
            where taxComponentTable.TaxType == TaxType_IN::Excise
        {
            this.TaxComponentTable = taxComponentTable.RecId;

            select sum(rg23aRecoverable)
                from exciseRG23ARegister
                where exciseRG23ARegister.TaxComponentTable             == taxComponentTable.RecId
                   && exciseRG23ARegister.TaxRegistrationNumberTable    == _eccNumber
                   && exciseRG23ARegister.rgDate                        == _fromDate;

            this.rg23aRecoverable = exciseRG23ARegister.rg23aRecoverable;

            select sum(rg23aDeferredBal)
                from exciseRG23ARegisterDefBal
                where exciseRG23ARegisterDefBal.TaxComponentTable           == taxComponentTable.RecId
                   && exciseRG23ARegisterDefBal.TaxRegistrationNumberTable  == _eccNumber
                   && exciseRG23ARegisterDefBal.rgDate                      <= _fromDate;

            this.rg23aDeferredBAl = exciseRG23ARegisterDefBal.rg23aDeferredBal;

            select sum(rg23aRecoverable)
                from exciseRG23ARegisterLoc
                where exciseRG23ARegisterLoc.TaxComponentTable          == taxComponentTable.RecId
                   && exciseRG23ARegisterLoc.TaxRegistrationNumberTable == _eccNumber
                   && exciseRG23ARegisterLoc.rgDate                     <  _fromDate;

            this.rg23aOpeningBAL        = exciseRG23ARegisterLoc.rg23aRecoverable;
            this.rg23aBalanceAvailable  =  this.rg23aOpeningBAL +  this.rg23aRecoverable;
            this.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertTmpExciseBalLinePLA</Name>
				<Source><![CDATA[
        public void insertTmpExciseBalLinePLA(
        RefRecId      _eccNumber,
        TransDate     _fromDate)
    {
        TaxComponentTable_IN    taxComponentTable;
        ExcisePLARegister_IN    execisePLARegister;
        ExcisePLARegister_IN    excisePLARegisterLoc;

        while select RecId from taxComponentTable
            where taxComponentTable.TaxType == TaxType_IN::Excise
        {
            this.TaxComponentTable  = taxComponentTable.RecId;

            select sum(DebitBalance),
                   sum(CreditBalance) from execisePLARegister
                where execisePLARegister.TaxRegistrationNumberTable == _eccNumber
                   && execisePLARegister.rgDate                     == _fromDate
                   &&   execisePLARegister.TaxComponentTable        == taxComponentTable.RecId;

            this.plaTransferBal      =  execisePLARegister.DebitBalance + execisePLARegister.CreditBalance;

            select sum(DebitBalance),
                   sum(CreditBalance) from excisePLARegisterLoc
                where excisePLARegisterLoc.TaxRegistrationNumberTable   == _eccNumber
                  &&  excisePLARegisterLoc.rgDate                       <  _fromDate
                  &&  excisePLARegisterLoc.TaxComponentTable            == taxComponentTable.RecId;

            this.plaOpeningBAL        =  excisePLARegisterLoc.DebitBalance + excisePLARegisterLoc.CreditBalance;

            this.plaBalanceAvailable  = this.plaTransferBal +  this.plaOpeningBAL;
            this.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createExciseBalanceInquiry</Name>
				<Source><![CDATA[
        static void createExciseBalanceInquiry(
        TaxInquiryArguments_IN          _taxInquiryArguments,
        TmpExciseBalanceLine_IN         _tmpExciseBalanceLine)
    {
        ExciseRG23ARegister_IN     exciseRG23ARegister;
        ExciseRG23CRegister_IN     exciseRG23CRegister;
        ExciseRG23DRegister_IN     exciseRG23DRegister;
        ExcisePLARegister_IN       excisePLARegister;
        TmpExciseBalanceLine_IN    tmpExciseBalanceLine;

        ttsbegin;
        tmpExciseBalanceLine = _tmpExciseBalanceLine;

    //RG23A
        select sum(rg23aRecoverable) from exciseRG23ARegister
            where exciseRG23ARegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && exciseRG23ARegister.rgDate                     == _taxInquiryArguments.getFromDate();

        tmpExciseBalanceLine.rg23aRecoverable = exciseRG23ARegister.rg23aRecoverable;

        select sum(rg23aRecoverable) from exciseRG23ARegister
            where exciseRG23ARegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && exciseRG23ARegister.rgDate                     <  _taxInquiryArguments.getFromDate();

        tmpExciseBalanceLine.rg23aOpeningBAL        = exciseRG23ARegister.rg23aRecoverable;
        tmpExciseBalanceLine.rg23aBalanceAvailable  = _tmpExciseBalanceLine.rg23aRecoverable + _tmpExciseBalanceLine.rg23aOpeningBAL;

        select sum(rg23aDeferredBal)from exciseRG23ARegister
            where exciseRG23ARegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && exciseRG23ARegister.rgDate                     <= _taxInquiryArguments.getFromDate();

        tmpExciseBalanceLine.rg23aDeferredBAl   = exciseRG23ARegister.rg23aDeferredBal;

    //RG23C

        select sum(rg23cRecoverable) from exciseRG23CRegister
            where exciseRG23CRegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && exciseRG23CRegister.rgDate                     == _taxInquiryArguments.getFromDate();

        tmpExciseBalanceLine.rg23cRecoverable = exciseRG23CRegister.rg23cRecoverable;

        select sum(rg23cRecoverable) from exciseRG23CRegister
            where exciseRG23CRegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && exciseRG23CRegister.rgDate                     < _taxInquiryArguments.getFromDate();

        tmpExciseBalanceLine.rg23cOpeningBAL        = exciseRG23CRegister.rg23cRecoverable;
        tmpExciseBalanceLine.rg23cBalanceAvailable  = _tmpExciseBalanceLine.rg23cRecoverable + _tmpExciseBalanceLine.rg23cOpeningBAL;

        select sum(rg23cDeferredBal) from exciseRG23CRegister
            where exciseRG23CRegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && exciseRG23CRegister.rgDate                    <= _taxInquiryArguments.getFromDate();

        tmpExciseBalanceLine.rg23cDeferredBAl   = exciseRG23CRegister.rg23cDeferredBal;

    //RGPayable
        select sum(rg23aPayable) from exciseRG23ARegister
            where exciseRG23ARegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && exciseRG23ARegister.rgDate                     < _taxInquiryArguments.getFromDate();

        select sum(rg23cPayable) from exciseRG23CRegister
            where exciseRG23CRegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && exciseRG23CRegister.rgDate                     < _taxInquiryArguments.getFromDate();

        tmpExciseBalanceLine.PayableOpeningBAL  = exciseRG23ARegister.rg23aPayable + exciseRG23CRegister.rg23cPayable;

        select sum(rg23aPayable) from exciseRG23ARegister
            where exciseRG23ARegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && exciseRG23ARegister.rgDate                     == _taxInquiryArguments.getFromDate();

        select sum(rg23cPayable) from exciseRG23CRegister
            where exciseRG23CRegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && exciseRG23CRegister.rgDate                     == _taxInquiryArguments.getFromDate();

        tmpExciseBalanceLine.PayableBal                 = exciseRG23ARegister.rg23aPayable + exciseRG23CRegister.rg23cPayable;
        tmpExciseBalanceLine.PayableBalanceAvailable    = _tmpExciseBalanceLine.PayableBal + _tmpExciseBalanceLine.PayableOpeningBAL;
        tmpExciseBalanceLine.TotalAvailBalance          = tmpExciseBalanceLine.PayableBalanceAvailable +
                                                          (tmpExciseBalanceLine.rg23aBalanceAvailable  +
                                                           tmpExciseBalanceLine.rg23cBalanceAvailable);
    // RG23D
        select sum(CenvatCredit),
               sum(CenvatCreditTransfer) from exciseRG23DRegister
            where exciseRG23DRegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && exciseRG23DRegister.rgDate                     < _taxInquiryArguments.getFromDate();

        tmpExciseBalanceLine.rg23dOpeningCenvatCredit         = exciseRG23DRegister.CenvatCredit;
        tmpExciseBalanceLine.rg23dOpeningCenvatCreditTransfer = exciseRG23DRegister.CenvatCreditTransfer;

        select sum(CenvatCredit),
               sum(CenvatCreditTransfer) from exciseRG23DRegister
            where exciseRG23DRegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && exciseRG23DRegister.rgDate                     == _taxInquiryArguments.getFromDate();

        tmpExciseBalanceLine.rg23dCenvatCredit           = exciseRG23DRegister.CenvatCredit;
        tmpExciseBalanceLine.rg23dCenvatCreditTransfer   = exciseRG23DRegister.CenvatCreditTransfer;

        tmpExciseBalanceLine.rg23dClosingCenvatCredit           = tmpExciseBalanceLine.rg23dOpeningCenvatCredit + tmpExciseBalanceLine.rg23dCenvatCredit;
        tmpExciseBalanceLine.rg23dClosingCenvatCreditTransfer   = tmpExciseBalanceLine.rg23dOpeningCenvatCreditTransfer + tmpExciseBalanceLine.rg23dCenvatCreditTransfer;

    // PLA
        select sum(DebitBalance),
               sum(CreditBalance) from excisePLARegister
            where excisePLARegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && excisePLARegister.rgDate                     == _taxInquiryArguments.getFromDate();

        tmpExciseBalanceLine.plaTransferBal = excisePLARegister.DebitBalance + excisePLARegister.CreditBalance;

        select sum(DebitBalance),
               sum(CreditBalance) from excisePLARegister
            where excisePLARegister.TaxRegistrationNumberTable == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
               && excisePLARegister.rgDate                     < _taxInquiryArguments.getFromDate();

        tmpExciseBalanceLine.plaOpeningBAL       =  excisePLARegister.DebitBalance + excisePLARegister.CreditBalance;
        tmpExciseBalanceLine.plaBalanceAvailable = tmpExciseBalanceLine.plaTransferBal + tmpExciseBalanceLine.plaOpeningBAL;

        tmpExciseBalanceLine.insert();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertIntoTmpExciseBalanceLine</Name>
				<Source><![CDATA[
        public static void insertIntoTmpExciseBalanceLine(
        TaxInquiryArguments_IN   _taxInquiryArguments,
        TmpExciseBalanceLine_IN  _tmpExciseBalanceLine)
    {
        ExciseRG23ARegister_IN     exciseRG23ARegister;
        ExciseRG23CRegister_IN     exciseRG23CRegister;
        ExcisePLARegister_IN       excisePLARegister;
        TaxComponentTable_IN       taxComponentTable;
        TmpExciseBalanceLine_IN    tmpExciseBalanceLine;
        ExciseRG23DRegister_IN     exciseRG23DRegister;

        tmpExciseBalanceLine = _tmpExciseBalanceLine;

        ttsbegin;

        while select RecId from taxComponentTable
            where taxComponentTable.TaxType == TaxType_IN::Excise
        {
            select  sum(rg23aRecoverable),
                    sum(rg23aDeferredBal),
                    sum(rg23aPayable) from exciseRG23ARegister
                where exciseRG23ARegister.TaxComponentTable             == taxComponentTable.RecId
                   && exciseRG23ARegister.TaxRegistrationNumberTable    == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
                   && exciseRG23ARegister.rgDate                        <= _taxInquiryArguments.getFromDate();

            select  sum(rg23cRecoverable),
                    sum(rg23cDeferredBal),
                    sum(rg23cPayable) from  exciseRG23CRegister
                where exciseRG23CRegister.TaxComponentTable             == taxComponentTable.RecId
                   &&   exciseRG23CRegister.TaxRegistrationNumberTable  == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
                   &&   exciseRG23CRegister.rgDate                      <= _taxInquiryArguments.getFromDate();

            select  sum(CreditBalance),
                    sum(DebitBalance) from excisePLARegister
                where excisePLARegister.TaxComponentTable           == taxComponentTable.RecId
                   && excisePLARegister.TaxRegistrationNumberTable  == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
                   && excisePLARegister.rgDate                      == _taxInquiryArguments.getFromDate();

            select sum(CenvatCredit),
                   sum(CenvatCreditTransfer) from exciseRG23DRegister
                where exciseRG23DRegister.TaxComponentTable             == taxComponentTable.RecId
                   && exciseRG23DRegister.TaxRegistrationNumberTable    == TaxRegistrationNumbers_IN::findByTaxType(_taxInquiryArguments.getECCNumber(),TaxType_IN::Excise).RecId
                   && exciseRG23DRegister.rgDate                        == _taxInquiryArguments.getFromDate();

            tmpExciseBalanceLine.TaxComponentTable          = taxComponentTable.RecId;
            tmpExciseBalanceLine.rg23aRecoverable           = exciseRG23ARegister.rg23aRecoverable;
            tmpExciseBalanceLine.rg23cRecoverable           = exciseRG23CRegister.rg23cRecoverable;
            tmpExciseBalanceLine.rg23aDeferredBAl           = exciseRG23ARegister.rg23aDeferredBal;
            tmpExciseBalanceLine.rg23cDeferredBAl           = exciseRG23CRegister.rg23cDeferredBal;
            tmpExciseBalanceLine.PayableBal                 = exciseRG23ARegister.rg23aPayable + exciseRG23CRegister.rg23cPayable;
            tmpExciseBalanceLine.plaTransferBal             = excisePLARegister.DebitBalance + excisePLARegister.CreditBalance;
            tmpExciseBalanceLine.rg23dCenvatCredit          = exciseRG23DRegister.CenvatCredit;
            tmpExciseBalanceLine.rg23dCenvatCreditTransfer  = exciseRG23DRegister.CenvatCreditTransfer;

            tmpExciseBalanceLine.insert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<Label>@GLS6444</Label>
	<ClusteredIndex>RecId</ClusteredIndex>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payable</Name>
			<Label>@GLS5622</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayableOpeningBAL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayableBal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PLA</Name>
			<Label>@GLS5335</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PLAOpeningBAL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PLATransferBal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RG23A</Name>
			<Label>@GLS5249</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RG23AOpeningBAL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RG23ARecoverable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RG23ADeferredBAl</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RG23C</Name>
			<Label>@GLS5250</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RG23COpeningBAL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RG23CRecoverable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RG23CDeferredBAl</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Totals</Name>
			<Label>@SYS13865</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TotalAvailBalance</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>Date</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ECCTaxRegistrationNumberTable</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS59571</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PayableBal</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PayableBalanceAvailable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PayableOpeningBAL</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PLABalanceAvailable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PLAOpeningBAL</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PLATransferBal</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23ABalanceAvailable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23ADeferredBAl</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23AOpeningBAL</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23ARecoverable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23CBalanceAvailable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23CDeferredBAl</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23COpeningBAL</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23CRecoverable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23DCenvatCredit</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@GLS6419</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23DCenvatCreditTransfer</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@GLS6423</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23DClosingCenvatCredit</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@GLS6424</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23DClosingCenvatCreditTransfer</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@GLS6425</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23DOpeningCenvatCredit</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@GLS6463</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RG23DOpeningCenvatCreditTransfer</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@GLS6464</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxComponentTable</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS5042</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxLedgerAccountGroup</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS59367</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxRegistrationNumberTable</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalAvailBalance</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxRegistrationNumberTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ECCTaxRegistrationNumberTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxComponentTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxComponentTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxLedgerAccountGroupIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxLedgerAccountGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ECCTaxRegistrationNumberTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxRegistrationNumbers_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxRegistrationNumbers_IN_ECCTaxRegistrationNumberTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxRegistrationNumbers_IN_TmpExciseBalanceLine_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ECCTaxRegistrationNumberTable</Name>
					<Field>ECCTaxRegistrationNumberTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxComponentTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxComponentTable_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxComponentTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxComponentTable_IN_TmpExciseBalanceLine_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxComponentTable</Name>
					<Field>TaxComponentTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxLedgerAccountGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxLedgerAccountGroup_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxLedgerAccountGroup_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxLedgerAccountGroup_IN_TmpExciseBalanceLine_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxLedgerAccountGroup</Name>
					<Field>TaxLedgerAccountGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TaxRegistrationNumberTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxRegistrationNumbers_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxRegistrationNumberTable</Name>
					<Field>TaxRegistrationNumberTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>