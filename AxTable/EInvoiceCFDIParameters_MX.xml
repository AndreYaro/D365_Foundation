<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceCFDIParameters_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EInvoiceCFDIParameters_MX extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// throw error message when deleting the record.
    /// </summary>
    public void  delete()
    {
        throw error("@SYS23721");
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.CFDIDigestAlgorithm = CFDDigestAlgorithm_MX::SHA256;
        this.CFDIResponseTolerance_MX = EInvoiceInterfacturaWCF::StampMaxReceivedMessageSizeIncreasedTolerance;

    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// flush the EInvoiceCFDIParameters_MX when updating the record.
    /// </summary>
    public void update()
    {
        super();

        flush EInvoiceCFDIParameters_MX;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified field is valid.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field ID of the field to validate.
    /// </param>
    /// <returns>
    /// True if the field is valid; otherwise, false.
    /// </returns>
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;
        boolean useAdvCert = SystemParameters::find().UseAdvCertificateStore;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(EInvoiceCFDIParameters_MX, CertificateSubject):
                if (this.EnabledCFDI && !this.CertificateSubject && !useAdvCert)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldPName(EInvoiceCFDIParameters_MX, CertificateSubject)));
                }
                break;

            case fieldNum(EInvoiceCFDIParameters_MX, KeyVaultCertificateRef):
                if (this.EnabledCFDI && !this.KeyVaultCertificateRef && useAdvCert)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldPName(EInvoiceCFDIParameters_MX, KeyVaultCertificateRef)));
                }
                break;
                
            case fieldnum(EInvoiceCFDIParameters_MX, CFDIVersion):
                if (this.EnabledCFDI)
                {
                    if (!this.CFDIVersion)
                    {
                        ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, CFDIVersion)));
                    }
                    else if (this.CFDIVersion == EInvoiceCFDIVersion_MX::V3)
                    {
                        ret = checkFailed("@SYS4001806");
                    }
                }

                break;

            case fieldnum(EInvoiceCFDIParameters_MX, PACAccount):
                if (this.EnabledCFDI && !this.PACAccount)
                {
                    ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, PACAccount)));
                }
                break;

            case fieldnum(EInvoiceCFDIParameters_MX, CFDIPACCertificate):
                if (this.EnabledCFDI && !this.CFDIPACCertificate && !useAdvCert)
                {
                    ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, CFDIPACCertificate)));
                }
                break;

            case fieldnum(EInvoiceCFDIParameters_MX, PACKeyVaultCertificateRef):
                if (this.EnabledCFDI && !this.PACKeyVaultCertificateRef && useAdvCert)
                {
                    ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, PACKeyVaultCertificateRef)));
                }
                break;

            case fieldnum(EInvoiceCFDIParameters_MX, CFDIEnvironment):
                if (this.EnabledCFDI && !this.CFDIEnvironment)
                {
                    ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, CFDIEnvironment)));
                }
                break;

            case fieldnum(EInvoiceCFDIParameters_MX, EmailId):
                if (this.EnabledCFDI && !this.EmailID)
                {
                    ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, EmailId)));
                }
                break;

            case fieldNum(EInvoiceCFDIParameters_MX, DocuRefCFDI):
                ret = this.validateSchema(this.DocuRefCFDI);
                break;

            case fieldNum(EInvoiceCFDIParameters_MX, DocuRefPaym):
                ret = this.validateSchema(this.DocuRefPaym);
                break;
                 
            case fieldNum(EInvoiceCFDIParameters_MX, DocuRefForeignTrade):
                ret = this.validateSchema(this.DocuRefForeignTrade);
                break;

            case fieldNum(EInvoiceCFDIParameters_MX, DocuRefWithholding):
                ret = this.validateSchema(this.DocuRefWithholding);
                break;

            default:
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSchema</Name>
				<Source><![CDATA[
    private boolean validateSchema(DocuRefRecId _docuRefRecId)
    {
        DocuRef docuRef = DocuRef::findRecId(_docuRefRecId);
        System.IO.Stream schemaStream = DocumentManagement::getAttachmentStream(docuRef);
        XMLSchemaValidator_W schemaValidator = XMLSchemaValidator_W::construct();
        return schemaValidator.tryAddSchemaFromStream(schemaStream);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMandatoryFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the mandatory fields brfore inserting into database.
    /// </summary>
    /// <returns>
    /// true if the fields are filled otherwise, false.
    /// </returns>
    public boolean validateMandatoryFields()
    {
        boolean ret = true;
        boolean useAdvCert = SystemParameters::find().UseAdvCertificateStore;


        if (this.EnabledCFDI)
        {
            if (!this.CertificateSubject && !useAdvCert)
            {
                ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, CertificateSubject)));
            }

            if (!this.KeyVaultCertificateRef && useAdvCert)
            {
                ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, KeyVaultCertificateRef)));
            }

            if (!this.CFDIVersion)
            {
                ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, CFDIVersion)));
            }

            if (!this.PACAccount)
            {
                ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, PACAccount)));
            }

            if (!this.CFDIPACCertificate && !useAdvCert)
            {
                ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, CFDIPACCertificate)));
            }

            if (!this.PACKeyVaultCertificateRef && useAdvCert)
            {
                ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, PACKeyVaultCertificateRef)));
            }

            if (!this.CFDIEnvironment)
            {
                ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, CFDIEnvironment)));
            }

            if (!this.EmailId)
            {
                ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, EmailId)));
            }

            if (this.EnabledCFDIWithholding)
            {
                if (!this.WithholdingDigestAlgorithm)
                {
                    ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, WithholdingDigestAlgorithm)));
                }

                if (!this.WithholdingXsltFile)
                {
                    ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, WithholdingXsltFile)));
                }
            }

            if (this.EnabledXsdValidation)
            {
                if (this.EnabledCFDIWithholding && !this.DocuRefWithholding)
                {
                    ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, DocuRefWithholding)));
                }

                if (!this.DocuRefForeignTrade)
                {
                    ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, DocuRefForeignTrade)));
                }

                if (!this.DocuRefPaym)
                {
                    ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, DocuRefPaym)));
                }

                if (!this.DocuRefCFDI)
                {
                    ret = checkFailed(strfmt("@SYS26332", fieldpname(EInvoiceCFDIParameters_MX, DocuRefCFDI)));
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the mandatory fields current record before it is written to the database.
    /// </summary>
    /// <returns>
    ///    true if the fields are filled otherwise, false
    /// </returns>
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ret = this.validateMandatoryFields();

        ret = ret && this.validateDigest();

        ret = ret && this.validateCFDIForeignTradeVersion();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCFDIForeignTradeVersion</Name>
				<Source><![CDATA[
    private boolean validateCFDIForeignTradeVersion()
    {
        boolean ret = true;
        
        if (EInvoiceCFDIForeignTradeVersion_2_MXFlight::instance().isEnabled()
            && this.CFDIForeignTradeVersion == EInvoiceCFDIComplementVersion_MX::V1_1)
        {
            ret = checkFailed("@MexicoCFDI:CFDIForeignTradeVersion_1_1Error");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDigest</Name>
				<Source><![CDATA[
    private boolean validateDigest()
    {
        boolean ret = true;

        if (this.CFDIDigestAlgorithm == CFDDigestAlgorithm_MX::SHA1)
        {
            ret = checkFailed(strFmt("@MexicoCFDI:EncryptionAlgorithmDeprecatedError", CFDDigestAlgorithm_MX::SHA1));
        }

        if (this.WithholdingDigestAlgorithm == CFDDigestAlgorithm_MX::SHA1 && this.CFDIVersion >= EInvoiceCFDIVersion_MX::V4)
        {
            ret = checkFailed(strFmt("@MexicoCFDI:WithholdingAlgorithmIncompatibleWithHigherCFDIVersionError", CFDDigestAlgorithm_MX::SHA1, EInvoiceCFDIVersion_MX::V4));
        }

        if (this.WithholdingDigestAlgorithm == CFDDigestAlgorithm_MX::SHA256 && this.CFDIVersion < EInvoiceCFDIVersion_MX::V4)
        {
            ret = checkFailed(strFmt("@MexicoCFDI:WithholdingAlgorithmIncompatibleWithLowerCFDIVersionError", CFDDigestAlgorithm_MX::SHA256, EInvoiceCFDIVersion_MX::V4));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// It checks if exists the EInvoiceCFDIParameters_MX with current recId
    /// </summary>
    /// <returns>
    /// returns true if it is found
    /// </returns>
    public static boolean exist()
    {
        return (select firstonly RecId from eInvoiceCFDIParameters_MX).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>EInvoiceCFDIParameters_MX</c> table.
    /// </summary>
    /// <param name="_forUpdate">
    ///   A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EInvoiceParameters_MX</c> table; otherwise, an empty record.
    /// </returns>
    public static EInvoiceCFDIParameters_MX find(boolean _forUpdate = false)
    {
        EInvoiceCFDIParameters_MX    eInvoiceParam;

        if (_forUpdate)
        {
            eInvoiceParam.selectForUpdate(_forUpdate);
        }

        select firstonly eInvoiceParam
            where eInvoiceParam.Key == 0;

        if (!eInvoiceParam && !eInvoiceParam.isTmp())
        {
            Company::createParameter(eInvoiceParam);
        }

        return eInvoiceParam;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isElectronicInvoiceEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns how the electronic invoice is set
    /// </summary>
    /// <returns>
    /// returns the cotent of field EnabledCFDI
    /// </returns>
    public static NoYes isElectronicInvoiceEnabled()
    {
        #ISOCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        {
            return EInvoiceCFDIParameters_MX::find().EnabledCFDI;
        }
        else
        {
            return NoYes::No;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCFDIWithholdingEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines if CFDI Withholding functionality is on
    /// </summary>
    /// <returns>
    /// returns the cotent of field EnabledCFDIWithholding
    /// </returns>
    public static NoYes isCFDIWithholdingEnabled()
    {
        #ISOCountryRegionCodes

        if(SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        {
            return EInvoiceCFDIParameters_MX::find().EnabledCFDIWithholding;
        }
        else
        {
            return NoYes::No;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefCFDIWithholdingJournalID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds numbersequence reference for CFDIWithholdingJournalID.
    /// </summary>
    /// <returns>
    /// Numbersequence reference
    /// </returns>
    public static client server NumberSequenceReference numRefCFDIWithholdingJournalID()
    {
        return NumberSeqReference::findReference(extendedTypeNum(CFDIWithholdingJournalID_MX));
    }

]]></Source>
			</Method>
			<Method>
				<Name>schemaFileExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true if the CFD schema file exists in the server file system
    /// </summary>
    /// <returns>True if the CFD schema file exists in the server file system</returns>
    public static boolean schemaFileExists()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Version of currently set up CFDI version.
    /// </summary>
    /// <returns>
    /// Current CFDI version if CFDI Enabled. Otherwise, EInvoiceCFDIVersion_MX:Blanc.
    /// </returns>
    public static EInvoiceCFDIVersion_MX getVersion()
    {
        EInvoiceCFDIVersion_MX     version;
        EInvoiceCFDIParameters_MX  parameters;
        #ISOCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        {
            parameters = EInvoiceCFDIParameters_MX::find();
            if (parameters.EnabledCFDI)
            {
                version = parameters.CFDIVersion;
            }
        }

        return version;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isVersionApplicableForForeignTrade</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks is current version of CFDI supports foreign trade.
    /// </summary>
    /// <returns>
    /// True if the curretn CFDI version is foreign trade; otherwise false.
    /// </returns>
    public static boolean isVersionApplicableForForeignTrade()
    {
        return EInvoiceCFDIParameters_MX::getVersion() >= EInvoiceCFDIVersion_MX::V3_3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAmountInRange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified amount matches incoming and outgoing limits set up in parameters.
    /// </summary>
    /// <param name="_amount">
    /// The amount to be checked.
    /// </param>
    /// <returns>
    /// <c>True</c> if specified amount matches incoming and outgoing limits; otherwise, <c>false</c>.
    /// </returns>
    public static boolean checkAmountInRange(InvoiceAmountMST _amount)
    {
        EInvoiceCFDIParameters_MX parameters = EInvoiceCFDIParameters_MX::find();
        boolean ret;

        if (_amount < 0)
        {
            var outgoingLimit = parameters.OutgoingLimit > 0 ? parameters.OutgoingLimit : maxRecId();
            ret = abs(_amount) <= outgoingLimit;
        }
        else
        {
            var incomingLimit = parameters.IncomingLimit > 0 ? parameters.IncomingLimit : maxRecId();
            ret = _amount <= incomingLimit;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupSchemaReference</Name>
				<Source><![CDATA[
    public Common lookupSchemaReference(FormReferenceControl _formControl)
    {
        Query query = new Query();
        QueryBuildDataSource docuRefDs = query.addDataSource(tableNum(DocuRef));
        docuRefDs.addRange(fieldNum(DocuRef, RefTableId)).value(queryValue(this.TableId));
        docuRefDs.addRange(fieldNum(DocuRef, RefRecId)).value(queryValue(this.RecId));

        QueryBuildDataSource docuValueDs = docuRefDs.addDataSource(tableNum(DocuValue));
        docuValueDs.relations(true);
        docuValueDs.addRange(fieldNum(DocuValue, filetype)).value('xsd');

        SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(DocuRef), _formControl);
        sysTableLookup.addLookupfield(fieldNum(DocuRef, Name));
        sysTableLookup.addLookupfield(fieldNum(DocuRef, CreatedDateTime));
        sysTableLookup.parmQuery(query);
        
        DocuRef selectedRecord = sysTableLookup.performFormLookup();
        return selectedRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSchemaStream</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets string that contains schema file attached
    /// </summary>
    public static System.IO.Stream getSchemaStream(RefRecID _docuRefRecId)
    {
        if (!_docuRefRecId)
        {
            throw error("@MexicoCFDI:XSDSchemaNotSpecifiedError");
        }

        EInvoiceCFDIParameters_MX parameters = EInvoiceCFDIParameters_MX::find();
        DocuRef docuRef = DocuRef::findRecId(_docuRefRecId);

        if (!docuRef)
        {
            throw error(strFmt("@SYS76877","@SYS93335"));
        }

        System.IO.Stream schemaStream = DocumentManagement::getAttachmentStream(docuRef);

        return schemaStream;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRetailInvoiceRFC</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Retail invoice RFC.
    /// </summary>
    /// <returns>
    /// The Retail invoice RFC.
    /// </returns>
    public Rfc_MX getRetailInvoiceRFC()
    {
        return this.RetailInvoiceRFC ? this.RetailInvoiceRFC : 'XAXX010101000';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRetailItemDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Retail item description.
    /// </summary>
    /// <returns>
    /// The Retail item description.
    /// </returns>
    public ItemFreeTxt getRetailItemDescription()
    {
        return this.RetailItemDescription ? this.RetailItemDescription : 'Venta';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRetailPaymMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Retail payment method.
    /// </summary>
    /// <returns>
    /// The Retail payment method.
    /// </returns>
    public EInvoiceExtCodeId_MX getRetailPaymMethod()
    {
        return this.RetailPaymMethod ? this.RetailPaymMethod : 'PUE';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRetailProductCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Retail product code.
    /// </summary>
    /// <returns>
    /// The Retail product code.
    /// </returns>
    public EInvoiceExtCodeId_MX getRetailProductCode()
    {
        return this.RetailProductCode ? this.RetailProductCode : '01010101';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRetailPurpose</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Retail purpose.
    /// </summary>
    /// <returns>
    /// The Retail purpose.
    /// </returns>
    public EInvoiceExtCodeId_MX getRetailPurpose()
    {
        return this.RetailPurpose
            ? this.RetailPurpose
            : this.CFDIVersion == EInvoiceCFDIVersion_MX::V4 ? 'S01' : 'P01';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRetailUnitCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Retail unit code.
    /// </summary>
    /// <returns>
    /// The Retail unit code.
    /// </returns>
    public EInvoiceExtCodeId_MX getRetailUnitCode()
    {
        return this.RetailUnitCode ? this.RetailUnitCode : 'ACT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRetailRecipientTaxRegimeCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Retail recipient tax regime code.
    /// </summary>
    /// <returns>
    /// The Retail recipient tax regime code.
    /// </returns>
    public EInvoiceExtCodeId_MX getRetailRecipientTaxRegimeCode()
    {
        return this.RetailRecipientTaxRegimeCode
            ? this.RetailRecipientTaxRegimeCode
            : this.CFDIVersion == EInvoiceCFDIVersion_MX::V4 ? '616' : '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRetailInvoicingName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Retail invoicing name.
    /// </summary>
    /// <returns>
    /// The Retail invoicing name.
    /// </returns>
    public Name getRetailInvoicingName()
    {
        return this.RetailInvoicingName
            ? this.RetailInvoicingName
            : this.CFDIVersion == EInvoiceCFDIVersion_MX::V4 ? 'PUBLICO EN GENERAL' : '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>MX</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4001804</DeveloperDocumentation>
	<Label>@Mexico:EInvoice_CFDIParameters_Title</Label>
	<TableGroup>Parameter</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>EInvoice</Modules>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EnabledCFDI</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CertificateSubject</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CFDIVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CFDIXsdFile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CFDIPACCertificate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CFDI</Name>
			<Label>@SYS4001805</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KeyVaultCertificateRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CertificateSubject</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CFDIVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CFDIDigestAlgorithm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocuRefCFDI</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocuRefPaym</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SplitTaxAmountPerLines</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EInvoiceGlobalPeriod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CFDIForeignTrade</Name>
			<Label>@MexicoCFDI:CFDIForeignTrade</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OperationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CFDIForeignTradeVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ForeignTradeReportingCurrency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocuRefForeignTrade</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CFDIWithholding</Name>
			<Label>@MexicoCFDIWithholding:Withholding</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KeyVaultCertificateRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnabledCFDIWithholding</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WithholdingDigestAlgorithm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WithholdingXsltFile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocuRefWithholding</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CFDIWithholdingEmail</Name>
			<Label>@SYS80255</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WithholdingSendByMail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WithholdingEmailId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EInvoiceEnabled</Name>
			<Label>@SYS4001802</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EnabledCFDI</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnabledXsdValidation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Email</Name>
			<Label>@SYS80255</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SendByMail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmailId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SendReportFile</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Key</Name>
			<Label>@SYS112132</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PAC</Name>
			<Label>@SYS4001803</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CFDIPACCertificate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CFDIEnvironment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PACAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PACKeyVaultCertificateRef</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Limits</Name>
			<Label>@CFDILimits_MX:Limits</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IncomingLimit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OutgoingLimit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SATDefault</Name>
			<Label>@MexicoCFDI:SATDefault_group</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SATProductCode_MX</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SATUnitCode_MX</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Retail</Name>
			<Label>@RET3014</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetailInvoiceRFC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailPaymMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailPurpose</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailProductCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailUnitCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailItemDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailEnableRelatedCFDIInReturns</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailExcludeCustOrdersFromCFDIGlobal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailRecalculateRoundingOfTaxBaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailDiscountVariationLimit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailRecipientTaxRegimeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailInvoicingName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransNote</Name>
			<Label>@MexicoCFDI:CartaPorte</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocuRefTransNote</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CertificateSubject</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DigitalCertificateSubject</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CFDIDigestAlgorithm</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@ApplicationSuite_EInvoices_MX:CFDIEncryptionAlgorithmType</Label>
			<EnumType>CFDDigestAlgorithm_MX</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CFDIEnvironment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>EInvoiceCFDIEnvironment_MX</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CFDIForeignTradeVersion</Name>
			<EnumType>EInvoiceCFDIComplementVersion_MX</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CFDIForeignTradeXsdFile</Name>
			<ExtendedDataType>Filename</ExtendedDataType>
			<HelpText>@MexicoCFDI:CFDIForeignTradeXsdFileHelp</HelpText>
			<Label>@SYS4081675</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CFDIPACCertificate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PACCertificateSubject_MX</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CFDIVersion</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>EInvoiceCFDIVersion_MX</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CFDIXsdFile</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Filename</ExtendedDataType>
			<Label>@SYS4081675</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EmailId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SysEmailId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnabledCFDI</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS4081676</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnabledCFDIWithholding</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@MexicoCFDIWithholding:EnabledCFDIWithholding_FieldHelp</HelpText>
			<Label>@MexicoCFDIWithholding:EnabledCFDIWithholding_Field</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ForeignTradeReportingCurrency</Name>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<Label>@SYS88346</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PACAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EInvoiceCFDIPACAccount_MX</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WithholdingDigestAlgorithm</Name>
			<Label>@SYS4009867</Label>
			<EnumType>CFDDigestAlgorithm_MX</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WithholdingEmailId</Name>
			<ExtendedDataType>SysEmailId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WithholdingSendByMail</Name>
			<ExtendedDataType>SendByMail_MX</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WithholdingXsdFile</Name>
			<ExtendedDataType>FilenameOpen</ExtendedDataType>
			<HelpText>@MexicoCFDIWithholding:WithholdingXsdFile_FieldHelp</HelpText>
			<Label>@SYS4081675</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WithholdingXsltFile</Name>
			<ExtendedDataType>FilenameOpen</ExtendedDataType>
			<HelpText>@MexicoCFDIWithholding:WithholdingXsltFile_FieldHelp</HelpText>
			<Label>@MexicoCFDIWithholding:WithholdingXsltFile_Field</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SendByMail</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SendByMail_MX</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SendReportFile</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SendReportFile_MX</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>IncomingLimit</Name>
			<ExtendedDataType>EInvoiceTotalAmountLimit_MX</ExtendedDataType>
			<Label>@CFDILimits_MX:IncomingLimit</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OutgoingLimit</Name>
			<ExtendedDataType>EInvoiceTotalAmountLimit_MX</ExtendedDataType>
			<Label>@CFDILimits_MX:OutgoingLimit</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OperationType</Name>
			<EnumType>OperationType_MX</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SATProductCode_MX</Name>
			<ExtendedDataType>SATProductCode_MX</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SATUnitCode_MX</Name>
			<ExtendedDataType>SATUnitCode_MX</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymXsdFile</Name>
			<ExtendedDataType>FilenameOpen</ExtendedDataType>
			<HelpText>@MexicoCFDI:PaymXsdFile_Field_Help</HelpText>
			<Label>@MexicoCFDI:PaymXsdFile_Field</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>KeyVaultCertificateRef</Name>
			<ExtendedDataType>KeyVaultCertificateRef</ExtendedDataType>
			<Label>@SYS32306</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PACKeyVaultCertificateRef</Name>
			<ExtendedDataType>KeyVaultCertificateRef</ExtendedDataType>
			<Label>@SYS4081519</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DocuRefCFDI</Name>
			<ExtendedDataType>DocuRefRecId</ExtendedDataType>
			<Label>@MexicoCFDI:CFDISchema_Field</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DocuRefPaym</Name>
			<ExtendedDataType>DocuRefRecId</ExtendedDataType>
			<Label>@MexicoCFDI:PaymXsdFile_Field</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnabledXsdValidation</Name>
			<Label>@MexicoCFDI:SchemaValidationEnabled</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DocuRefWithholding</Name>
			<ExtendedDataType>DocuRefRecId</ExtendedDataType>
			<Label>@SYS4081675</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DocuRefForeignTrade</Name>
			<ExtendedDataType>DocuRefRecId</ExtendedDataType>
			<Label>@MexicoCFDI:CFDIForeignTradeXML</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetailInvoiceRFC</Name>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>Rfc_MX</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetailItemDescription</Name>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>ItemFreeTxt</ExtendedDataType>
			<Label>@SYS58702</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetailPaymMethod</Name>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>EInvoiceExtCodeId_MX</ExtendedDataType>
			<Label>@SYS115681</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetailProductCode</Name>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>EInvoiceExtCodeId_MX</ExtendedDataType>
			<Label>@MexicoCFDI:SATProductCode</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetailPurpose</Name>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>EInvoiceExtCodeId_MX</ExtendedDataType>
			<Label>@SYS40775</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetailUnitCode</Name>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>EInvoiceExtCodeId_MX</ExtendedDataType>
			<Label>@MexicoCFDI:SATUnitCode</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SplitTaxAmountPerLines</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@RetailEInvoiceCFDI:SplitTaxAmountPerLines_HelpText</HelpText>
			<Label>@RetailEInvoiceCFDI:SplitTaxAmountPerLines_Field</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RetailExcludeCustOrdersFromCFDIGlobal</Name>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@RetailEInvoiceCFDI:CreatesNormalCFDIEInvoicesForCustomerOrders</HelpText>
			<Label>@RetailEInvoiceCFDI:ExcludeCustomerOrdersFromCFDIGlobal</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RetailEnableRelatedCFDIInReturns</Name>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@RetailEInvoiceCFDI:ShowUUIDofOriginalEInvoicesInReturnEInvoices</HelpText>
			<Label>@RetailEInvoiceCFDI:SpecifyRelatedCFDIinReturns</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RetailRecalculateRoundingOfTaxBaseAmount</Name>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@RetailEInvoiceCFDI:RecalculateRoundingOfTaxBaseAmountsHelpText</HelpText>
			<Label>@RetailEInvoiceCFDI:RecalculateRoundingOfTaxBaseAmounts</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DocuRefTransNote</Name>
			<ExtendedDataType>DocuRefRecId</ExtendedDataType>
			<Label>@MexicoCFDI:CFDICartaPorteXML</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RetailDiscountVariationLimit</Name>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>PercentPositive</ExtendedDataType>
			<Label>@RetailEInvoiceCFDI:DiscountVariationLimitPercent</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetailRecipientTaxRegimeCode</Name>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>EInvoiceExtCodeId_MX</ExtendedDataType>
			<Label>@SYS4082470</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetailInvoicingName</Name>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@SYS58518</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EInvoiceGlobalPeriod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailEInvoicePeriod_MX</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CFDIResponseTolerance_MX</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Key</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PACTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PACAccount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ForeignTradeReportingCurrency</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>ForeignTradeReportingCurrency</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PACTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>EInvoiceCFDIPACTable_MX</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PACAccount</Name>
					<Field>PACAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SysEmailTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>SysEmailTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EmailId</Name>
					<SourceEDT>SysEmailId</SourceEDT>
					<Field>EmailId</Field>
					<RelatedField>EmailId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>emailIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>KeyVaultCertificateTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>KeyVaultCertificateTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>KeyVaultCertificateRef</Name>
					<Field>KeyVaultCertificateRef</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PACKeyVaultCertificateTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>KeyVaultCertificateTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PACKeyVaultCertificateRef</Name>
					<Field>PACKeyVaultCertificateRef</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SATProductCode_MX</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>EInvoiceExtCodeTable_MX</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ExtCodeTableProductCode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SATProductCode_MX</Name>
					<Field>SATProductCode_MX</Field>
					<RelatedField>CodeId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CodeType</Name>
					<RelatedField>CodeType</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SATUnitCode_MX</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>EInvoiceExtCodeTable_MX</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ExtCodeTableUnitCode</RelatedTableRole>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SATUnitCode_MX</Name>
					<Field>SATUnitCode_MX</Field>
					<RelatedField>CodeId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CodeType</Name>
					<RelatedField>CodeType</RelatedField>
					<Value>2</Value>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WitholdingSysEmailTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SysEmailTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>EmailTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ParameterTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WithholdingEmailId</Name>
					<Field>WithholdingEmailId</Field>
					<RelatedField>EmailId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DocuRefCFDI</Name>
			<RelatedTable>DocuRef</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocuRefCFDI</Name>
					<Field>DocuRefCFDI</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DocuRefPaym</Name>
			<RelatedTable>DocuRef</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocuRefPaym</Name>
					<Field>DocuRefPaym</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DocuRefForeignTrade</Name>
			<RelatedTable>DocuRef</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocuRefForeignTrade</Name>
					<Field>DocuRefForeignTrade</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DocuRefWithholding</Name>
			<RelatedTable>DocuRef</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocuRefWithholding</Name>
					<Field>DocuRefWithholding</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DocuRefTransNote</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>DocuRef</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Link</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocuRefTransNote</Name>
					<Field>DocuRefTransNote</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailRecipientTaxRegime</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>EInvoiceExtCodeTable_MX</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ExtCodeTableTaxRegime</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailRecipientTaxRegimeCode</Name>
					<Field>RetailRecipientTaxRegimeCode</Field>
					<RelatedField>CodeId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>CodeType</Name>
					<RelatedField>CodeType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>