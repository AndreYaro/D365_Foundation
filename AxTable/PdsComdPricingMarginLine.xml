<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsComdPricingMarginLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PdsComdPricingMarginLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountRelationText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Build single text string to describe the account relation data.
    /// </summary>
    /// <returns>
    /// Text that describes the account relation data in the record.
    /// </returns>
    /// <remarks>
    /// This will return a different string for each type of account relation code. This
    /// string can be used in messages to identify the record as account code and
    /// account relation are part of the key.
    /// <syntax>
    /// public str accountRelationText()
    /// </syntax>
    /// </remarks>
    public str accountRelationText()
    {
        str         ret;

        switch (this.MarginAccountCode)
        {
            case PriceDiscPartyCodeType::All:
                ret = "@SYS53652";
                break;

            case PriceDiscPartyCodeType::GroupId:
                ret = "@SYS54788" + ' ' + this.MarginAccountRelation;
                break;

            case PriceDiscPartyCodeType::Table:
                ret = "@SYS7149" + ' ' + this.MarginAccountRelation;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>computeMargin</Name>
				<Source><![CDATA[
    /// <summary>
    /// Compute the margin for the line based on the current cost and given template line.
    /// </summary>
    /// <param name="_templateLine">
    /// Template line with the margin calculation variables to compute the margin with.
    /// </param>
    /// <param name="_currencyCode">
    /// Optional. Currency code to use for rounding. If blank (the default), this will use the company's default currency.
    /// </param>
    /// <returns>
    /// Margin value to use for this line.
    /// </returns>
    /// <remarks>
    /// This computes the margin from using the current cost value and the margin
    /// variables in the passed template line. The result will be rounded using the
    /// passed currency or company default currency if no currnecy code is given.
    ///
    /// Prerequisites - the Cost field on this margin line must be valid.
    /// <syntax>
    /// public PdsMargin computeMargin(Record _templateLine, CurrencyCode _currencyCode)
    /// </syntax>
    /// </remarks>
    public PdsComdMargin computeMargin(
        PdsComdPricingTemplateLine  _templateLine,
        CurrencyCode                _currencyCode = '')
    {
        return CurrencyExchangeHelper::price(this.Cost * _templateLine.MarginMult + this.Cost * _templateLine.MarginPerc / 100 + _templateLine.MarginChange, _currencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        if (this.PriceCalcId)
        {
            BOMCalcTable::deletePriceCalc(this.PriceCalcId);
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPrevious</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the previous PricingMarginLine using the given pricing margin id.
    /// </summary>
    /// <param name="_marginId">
    /// Pricing margin id to find.
    /// </param>
    /// <returns>
    /// Record value if found, empty otherwise.
    /// </returns>
    /// <remarks>
    /// This will find the martching PdsPricingMarginLine as this line with a different
    /// (typically the previous) margin id. All the fields for the lookup will come
    /// from the current record except the margin id.
    /// </remarks>
    public PdsComdPricingMarginLine findPrevious(PdsComdPricingMarginId _marginId)
    {
        return PdsComdPricingMarginLine::findPricingMarginId(_marginId,this.ItemId,
            this.InventDimId, this.MarginAccountCode,
            this.MarginAccountRelation, this.InventQtyFrom);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executed when a field is modified in a form.
    /// </summary>
    /// <param name="_fieldId">
    /// Table field id number of the field being modified.
    /// </param>
    /// <remarks>
    /// This method operates on two fields:
    /// <ul><li>Price - update the margin to match the new price.
    /// </li><li>Margin - update the price to match the new margin.</li></ul>
    /// <syntax>
    /// public void modifiedField(fieldId _fieldId)
    /// </syntax>
    /// </remarks>
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(PdsComdPricingMarginLine, Price):
                this.updateMarginFromPrice();
                break;

            case fieldnum(PdsComdPricingMarginLine, Margin):
                this.updatePrice();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showCostDiff</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display method for the difference between the current cost and previous cost.
    /// </summary>
    /// <returns>
    /// Difference between current cost and previous cost.
    /// </returns>
    /// <remarks>
    /// The cost difference is computed with the following formula:
    ///
    ///     Cost - PrevCost
    /// <syntax>
    /// public PdsCostDiff showCostDiff()
    /// </syntax>
    /// </remarks>
    public display PdsCostDiff showCostDiff()
    {
        return this.Cost - this.PrevCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showMarginDiff</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display method for the difference between the current margin and previous margin.
    /// </summary>
    /// <returns>
    /// Difference between current margin and previous margin.
    /// </returns>
    /// <remarks>
    /// The margin difference is computed with the following formula:
    ///
    ///     Margin - PrevMargin
    /// <syntax>
    /// public PdsMarginDiff showMarginDiff()
    /// </syntax>
    /// </remarks>
    public display PdsComdMarginDiff showMarginDiff()
    {
        return this.Margin - this.PrevMargin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showPricePercChange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display method for the percentage change  between the current price and previous price.
    /// </summary>
    /// <returns>
    /// Percentage cheange from the previous price to the new price.
    /// </returns>
    /// <remarks>
    /// The price change percentage is computed with the following formula:
    ///
    ///     (Price - PrevPreice) / PrevPrice * 100
    /// <syntax>
    /// public PdsMarginDiff showMarginDiff()
    /// </syntax>
    /// </remarks>
    public display PdsComdPriceChangePerc showPricePercChange()
    {
        if (this.PrevPrice)
        {
            return ((this.Price - this.PrevPrice) / this.PrevPrice) * 100;
        }
        else
        {
            return 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMarginFromPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the margin on this line from the price.
    /// </summary>
    /// <param name="_currencyCode">
    /// Optional. Currency code to use for rounding. If blank (the default), this will use the company's default currency.
    /// </param>
    /// <remarks>
    /// This is typically called when the price is changed by the user. The computed
    /// margin will be rounded based on the given currency or the company's default
    /// currency if not is given.
    /// <syntax>
    /// public void updateMarginFromPrice(CurrencyCode _currencyCode)
    /// </syntax>
    /// </remarks>
    public void updateMarginFromPrice(CurrencyCode _currencyCode = '')
    {
        this.Margin = CurrencyExchangeHelper::price(this.Price - this.Cost, _currencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the price on this line from the margin.
    /// </summary>
    /// <param name="_currencyCode">Optional. Currency code to use for rounding. If blank (the default), this will use the
    /// company's default currency.</param>
    /// <remarks>
    /// This is typically called when the margin is changed by the user. The computed
    /// price will be rounded based on the given currency or the company's default
    /// currency if not is given.
    /// <syntax>
    /// public void updatePrice(CurrencyCode _currencyCode)
    /// </syntax>
    /// </remarks>
    public void updatePrice(CurrencyCode _currencyCode = '')
    {
        this.Price = CurrencyExchangeHelper::price(this.Cost + this.Margin, _currencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(RecId _recId)
    {
        return _recId
            && (select pdsComdPricingMarginLine
                where pdsComdPricingMarginLine.RecId == _recId)
                .RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existPricingMarginId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a specific <c>PdsPricingMarginLine</c> record exists.
    /// </summary>
    /// <param name="_marginId">
    /// Pricing margin id to check.
    /// </param>
    /// <param name="_itemId" >
    /// Item id to check.
    /// </param>
    /// <param name="_dimId" >
    /// Inventory dimension id to check.
    /// </param>
    /// <param name="_accountCode" >
    /// Customer account code to check (TableGroupAll enumerate).
    /// </param>
    /// <param name="_accountRelation" >
    /// Customer account relation to check.
    /// </param>
    /// <param name="_inventQtyFrom" >
    /// Inventory quantity to check.
    /// </param>
    /// <returns>true if the record exists; otherwise, false.
    /// </returns>
    public static boolean existPricingMarginId(
        PdsComdPricingMarginId          _marginId,
        ItemId                          _itemId,
        InventDimId                     _dimId,
        PdsComdMarginAccountCode        _accountCode,
        PdsComdMarginAccountRelation    _accountRelation,
        PdsInventQtyFrom                _inventQtyFrom)
    {
        return _marginId && _itemId
            && (select pdsComdPricingMarginLine
                where  pdsComdPricingMarginLine.PricingMarginId         == _marginId
                    && pdsComdPricingMarginLine.ItemId                  == _itemId
                    && pdsComdPricingMarginLine.InventDimId             == _dimId
                    && pdsComdPricingMarginLine.MarginAccountCode       == _accountCode
                    && pdsComdPricingMarginLine.MarginAccountRelation   == _accountRelation
                    && pdsComdPricingMarginLine.InventQtyFrom           == _inventQtyFrom)
                .RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static PdsComdPricingMarginLine find(
        RecId   _recId,
        boolean _forUpdate = false)
    {
        PdsComdPricingMarginLine pdsComdPricingMarginLine;

        pdsComdPricingMarginLine.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select firstonly pdsComdPricingMarginLine
                where pdsComdPricingMarginLine.RecId == _recId;
        }

        return pdsComdPricingMarginLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPricingMarginId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>PdsPricingMarginLine</c> record.
    /// </summary>
    /// <param name="_marginId">
    /// Pricing margin id to CopyOffind.
    /// </param>
    /// <param name="_itemId">
    /// Item id to find.
    /// </param>
    /// <param name="_dimId">
    /// Inventory dimension id to find.
    /// </param>
    /// <param name="_accountCode">
    /// Customer account code to find (TableGroupAll enumerate).
    /// </param>
    /// <param name="_accountRelation">
    /// Customer account relation to find.
    /// </param>
    /// <param name="_inventQtyFrom">
    /// Inventory from quantity to find.
    /// </param>
    /// <param name="_forUpdate">
    /// Optional. Specify as true if the record should be locked for update. Default value is false - do not lock the record for update.
    /// </param>
    /// <returns>
    /// Record value if found, empty otherwise.
    /// </returns>
    public static PdsComdPricingMarginLine findPricingMarginId(
        PdsComdPricingMarginId          _marginId,
        ItemId                          _itemId,
        InventDimId                     _dimId,
        PdsComdMarginAccountCode        _accountCode,
        PdsComdMarginAccountRelation    _accountRelation,
        PdsInventQtyFrom                _inventQtyFrom,
        boolean                         _forUpdate = false)
    {
        PdsComdPricingMarginLine        pdsComdPricingMarginLine;

        pdsComdPricingMarginLine.selectForUpdate(_forUpdate);

        if (_marginId && _itemId)
        {
            select firstonly pdsComdPricingMarginLine
                where  pdsComdPricingMarginLine.PricingMarginId         == _marginId
                    && pdsComdPricingMarginLine.ItemId                  == _itemId
                    && pdsComdPricingMarginLine.InventDimId             == _dimId
                    && pdsComdPricingMarginLine.MarginAccountCode       == _accountCode
                    && pdsComdPricingMarginLine.MarginAccountRelation   == _accountRelation
                    && pdsComdPricingMarginLine.InventQtyFrom           == _inventQtyFrom;
        }

        return pdsComdPricingMarginLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsCommodity</ConfigurationKey>
	<DeveloperDocumentation>@PDS1107</DeveloperDocumentation>
	<Label>@PDS463</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>PricingMarginId</TitleField1>
	<TitleField2>ItemId</TitleField2>
	<ClusteredIndex>MarginItemDimAccountQtyIdx</ClusteredIndex>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOMId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrevCost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Cost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrevMargin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Margin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrevPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BOM</Name>
			<Label>@SYS3076</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BOMId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RouteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Change</Name>
			<Label>@PDS458</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>showCostDiff</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showMarginDiff</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showPricePercChange</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PricingMarginId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OrderQuantity</Name>
			<Label>@PDS1455</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventQty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Previous</Name>
			<Label>@PDS457</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrevCost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrevMargin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrevPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Pricing</Name>
			<Label>@PDS427</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrevCost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Cost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrevMargin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Margin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrevPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Price</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceCalcId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Quantity</Name>
			<Label>@PRO1497</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventQtyFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventQtyTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Relations</Name>
			<Label>@PDS1058</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MarginAccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MarginAccountRelation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Update</Name>
			<Label>@SYS67943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UpdateAgreement</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BOMId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMId</ExtendedDataType>
			<Label>@PRO529</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Cost</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCost</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventQtyFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsInventQtyFrom</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventQtyTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsInventQtyTo</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Margin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsComdMargin</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MarginAccountCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsComdMarginAccountCode</ExtendedDataType>
			<EnumType>PriceDiscPartyCodeType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MarginAccountRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsComdMarginAccountRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PrevCost</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsComdPrevCost</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PrevMargin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsComdPrevMargin</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PrevPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsComdPrevPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Price</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsComdPrice</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PriceCalcId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceCalcId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PricingMarginId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsComdPricingMarginId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RouteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RouteId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventUnitId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UpdateAgreement</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsUpdateAgreement</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>MarginItemDimAccountQtyFromIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>PricingMarginId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MarginAccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MarginAccountRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventQtyFrom</DataField>
					<Optional>Yes</Optional>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MarginItemDimAccountQtyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PricingMarginId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MarginAccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MarginAccountRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventQty</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>BOMCalcTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BOMCalcTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PriceCalcId</Name>
					<SourceEDT>PriceCalcId</SourceEDT>
					<Field>PriceCalcId</Field>
					<RelatedField>PriceCalcId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>BOMTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BOMTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BOMId</Name>
					<SourceEDT>BOMId</SourceEDT>
					<Field>BOMId</Field>
					<RelatedField>BOMId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PdsComdPricingMargin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PdsComdPricingMargin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PricingMarginId</Name>
					<Field>PricingMarginId</Field>
					<RelatedField>PricingMarginId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RouteTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RouteTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RouteId</Name>
					<SourceEDT>RouteId</SourceEDT>
					<Field>RouteId</Field>
					<RelatedField>RouteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitID</Name>
					<Field>UnitID</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>