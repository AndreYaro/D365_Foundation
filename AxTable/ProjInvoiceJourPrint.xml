<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjInvoiceJourPrint</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjInvoiceJourPrint extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createInvoiceCopySequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a record in the <c>ProjInvoiceJourPrint</c> table to track the number of project invoice
    /// report copies.
    /// </summary>
    /// <param name="_projInvoiceId">
    /// The ID of the <c>ProjInvoiceJour</c> record.
    /// </param>
    /// <param name="_invoiceDate">
    /// The date of the <c>ProjInvoiceJour</c> record.
    /// </param>
    /// <param name="_printCopyOriginal">
    /// The type of the project invoice document that is being printed.
    /// </param>
    /// <returns>
    /// The number of copies the project invoice document been printed.
    /// </returns>
    public static int createInvoiceCopySequence(ProjInvoiceId _projInvoiceId, TransDate _invoiceDate, PrintCopyOriginal _printCopyOriginal)
    {
        int copyNumber;
        ProjInvoiceJourPrint projInvoiceJourPrint;

        ttsbegin;
        projInvoiceJourPrint = ProjInvoiceJourPrint::findFromProjInvoiceJour(_projInvoiceId, _invoiceDate, true);

        if (_printCopyOriginal == PrintCopyOriginal::Original || _printCopyOriginal == PrintCopyOriginal::OriginalPrint)
        {
            // If original document is being printed, update the HasOriginalBeenPrinted flag.
            // HU allows the original to be printed once.
            if (!projInvoiceJourPrint.HasOriginalBeenPrinted)
            {
                projInvoiceJourPrint.HasOriginalBeenPrinted = true;
                copyNumber = 0;
            }
        }
        else
        {
            projInvoiceJourPrint.NumberOfCopiesPrinted = projInvoiceJourPrint.NumberOfCopiesPrinted + 1;
            copyNumber = projInvoiceJourPrint.NumberOfCopiesPrinted;
        }

        if (projInvoiceJourPrint.RecId)
        {
            projInvoiceJourPrint.update();
        }
        else
        {
            projInvoiceJourPrint.ProjInvoiceId = _projInvoiceId;
            projInvoiceJourPrint.InvoiceDate = _invoiceDate;
            projInvoiceJourPrint.insert();
        }

        ttscommit;

        return copyNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFromProjInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>ProjInvoiceJourPrint</c> record by the project invoice ID and date.
    /// </summary>
    /// <param name="_projInvoiceId">
    /// The ID of the <c>ProjInvoiceJour</c> record.
    /// </param>
    /// <param name="_invoiceDate">
    /// The date of the <c>ProjInvoiceJour</c> record.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    /// A <c>ProjInvoiceJourPrint</c> record.
    /// </returns>
    public static ProjInvoiceJourPrint findFromProjInvoiceJour(ProjInvoiceId _projInvoiceId,
        TransDate           _invoiceDate,
        boolean             _forupdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        ProjInvoiceJourPrint projInvoiceJourPrint;

        projInvoiceJourPrint.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            projInvoiceJourPrint.concurrencyModel(_concurrencyModel);
        }

        select firstonly projInvoiceJourPrint
            where projInvoiceJourPrint.ProjInvoiceId == _projInvoiceId &&
                  projInvoiceJourPrint.InvoiceDate == _invoiceDate;

        return projInvoiceJourPrint;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<CountryRegionCodes>HU</CountryRegionCodes>
	<DeveloperDocumentation>@GLS222883</DeveloperDocumentation>
	<TableGroup>Transaction</TableGroup>
	<Visible>No</Visible>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>ProjectManagementAndAccounting</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HasOriginalBeenPrinted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InvoiceDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumberOfCopiesPrinted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NumberOfCopiesPrinted</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjInvoiceId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjInvoiceId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjInvoiceJour</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>ProjInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceDate</Name>
					<Field>InvoiceDate</Field>
					<RelatedField>InvoiceDate</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjInvoiceId</Name>
					<Field>ProjInvoiceId</Field>
					<RelatedField>ProjInvoiceId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>