<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SMAAgreementLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SMAAgreementLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkActivity</Name>
				<Source><![CDATA[
    private boolean checkActivity()
    {
        boolean ret = true;

        if (this.ActivityNumber)
        {
            ret = ProjActivityHelper::validateProjActivityParentLinkV2(this.ProjId, this.ActivityNumber);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkIfValid</Name>
				<Source><![CDATA[
    // checks if on the agreement line, the project is finished, category is inactive or the employee is terminated
    public boolean checkIfValid()
    {
        boolean ret;

        // Project Id, Category Id are required, but not Employee Id
        ret = this.ProjId && ProjTable::find(this.ProjId).status().activeInTree();

        ret = ret && this.ProjCategoryId &&
                        ProjCategory::find(this.ProjCategoryId).validateIfInactiveAllowed(true);

        if (ret && this.Worker)
        {
            ret = this.SMAServiceLineMap::checkWorker();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkItemSetupAllowed</Name>
				<Source><![CDATA[
    public boolean checkItemSetupAllowed()
    {
        boolean     ret = true;
        ProjTable   projTable;
        ProjType    projType;

        // Is agreement line of the type item and item setup is item of the item requirement type
        if (this.TransactionType == SMATransactionType::Item && this.ItemSetupType == SMAItemSetupType::ItemRequirement)
        {
            // Find project type
            projTable   = ProjTable::find(this.ProjId);
            projType    = projTable.Type;

            // Is the attached project not a time and material or fixed price project
            // and it is not an internal project with Cust account attached
            if (!(projType == ProjType::TimeMaterial || projType == ProjType::FixedPrice || (projType == ProjType::Internal && projTable.CustAccount != '')))
            {
                // Item requirement can only be entered on time and material or fixed-price projects.
                ret = checkFailed("@SYS91840");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkServiceTaskRelation</Name>
				<Source><![CDATA[
    public void checkServiceTaskRelation(boolean _createRelation = false, SMAAgreementLine _originAgreementLine = null)
    {
        boolean                 existRelation = false;
        SMAServiceTaskRelation  taskRelationOrigin;

        // Check for existing service task relation
        existRelation = SMAServiceTaskRelation::existRelation(tableNum(SMAAgreementTable), this.AgreementId, this.ServiceTaskId);

        if (!existRelation && _createRelation)
        {
            if (_originAgreementLine)
            {
                // Find original relation
                taskRelationOrigin  = SMAServiceTaskRelation::find(tablenum(SMAAgreementTable), _originAgreementLine.AgreementId, _originAgreementLine.ServiceTaskId);
            }

            // Create Service task relation
            SMAServiceTaskRelation::createRelation(this.ServiceTaskId,this.AgreementId,
                                                   tableNum(SMAAgreementTable),
                                                   taskRelationOrigin.DescriptionExternal,
                                                   taskRelationOrigin.DescriptionInternal);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>CompanyInfo</c> record associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>CompanyInfo</c> record.
    /// </returns>
    public CompanyInfo companyInfo()
    {
        return CompanyInfo::findDataArea(this.company());
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a dimension set that can be applied to the <c>defaultDimension</c> field on this table.
    /// </summary>
    /// <param name="_defaultDimension">
    /// A dimension set to apply to the <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_dimensionCopy">
    /// A <c>dimensionCopy</c> object that was previously instantiated by using the current buffer;
    /// optional.
    /// </param>
    /// <returns>
    /// A dimension set that can be applied to the <c>defaultDimension</c> field on this table.
    /// </returns>
    /// <remarks>
    /// This method makes sure that potential linked dimensions are not overwritten.
    /// </remarks>

    public DimensionDefault copyDimension(
        DimensionDefault _defaultDimension,
        DimensionCopy    _dimensionCopy = DimensionCopy::newFromTable(this,
                                                                      this.companyInfo().RecId
                                                                      )
        )
    {
        return _dimensionCopy.copy(_defaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStartDate</Name>
				<Source><![CDATA[
    public date getStartDate(boolean _newAgreementLine = false)
    {
        StartDate           lineStartDate;
        SMAAgreementTable   agreementTable;

        agreementTable = SMAAgreementTable::find(this.AgreementId);

        // If a new agreement line record hasn't been saved, use todays date, otherwise use the line start date
        lineStartDate = (_newAgreementLine) ? DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()): this.StartDate;

        // If the agreement starts after the line start date, the agreement start date is used instead
        lineStartDate = (agreementTable.StartDate > lineStartDate) ? agreementTable.StartDate : lineStartDate;

        return lineStartDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromAgreementLine</Name>
				<Source><![CDATA[
    public void initFromAgreementLine(SMAAgreementLine _agreementLine, boolean _includeTask, boolean _includeProject = true)
    {
        this.initValue();

        // Transfer values from other agreement line
        this.TransactionType        = _agreementLine.TransactionType;
        this.Description            = _agreementLine.Description;
        this.DescriptionService     = _agreementLine.DescriptionService;
        this.IntervalId             = _agreementLine.IntervalId;
        this.TimeAgreementId        = _agreementLine.TimeAgreementId;
        this.ItemId                 = _agreementLine.ItemId;
        this.setInventDimId(_agreementLine.InventDimId);
        this.Unit                   = _agreementLine.Unit;
        this.ItemSetupType          = _agreementLine.ItemSetupType;
        this.Qty                    = _agreementLine.Qty;
        this.ProjTransTxt           = _agreementLine.ProjTransTxt;
        this.ProjCategoryId         = _agreementLine.ProjCategoryId;

        // Only use active workers as the default value on the agreement line
        if (_agreementLine.Worker && HcmWorkerLookup::newOnlyActiveEmployeesWithinCompany().validateWorker(_agreementLine.Worker))
        {
            this.Worker                 = _agreementLine.Worker;
        }
        this.ProjTaxGroupId         = _agreementLine.ProjTaxGroupId;
        this.ProjTaxItemGroupId     = _agreementLine.ProjTaxItemGroupId;
        this.ServiceTimeStartAfter  = _agreementLine.ServiceTimeStartAfter;
        this.ServiceTimeEndBefore   = _agreementLine.ServiceTimeEndBefore;

        // Should values regarding project be transferred?
        if (_includeProject)
        {
            this.ProjId             = _agreementLine.ProjId;
            this.ProjLinePropertyId = _agreementLine.ProjLinePropertyId;
            this.ProjCurrencyId     = _agreementLine.ProjCurrencyId;
        }

        this.setDimension();

        // Copy activity if there is one matching to original
        if (ProjActivity::find(_agreementLine.ActivityNumber))
        {
            this.ActivityNumber     = _agreementLine.ActivityNumber;
        }

        // Should the attached service task be copied to the new agreement line
        if (_includeTask && _agreementLine.ServiceTaskId)
        {
            // Create service task relation
            this.ServiceTaskId = _agreementLine.ServiceTaskId;
            this.checkServiceTaskRelation(true, _agreementLine);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromAgreementTable</Name>
				<Source><![CDATA[
    void initFromAgreementTable(SMAAgreementTable _agreementTable)
    {
        CustTable custTable = CustTable::find(_agreementTable.custAccount());
        InventDim inventDim = this.inventDim();

        if (_agreementTable)
        {
            // Find the project that are associated with the agreement (if any)
            this.ProjId = _agreementTable.ProjId;

            // Is the transaction an hour transaction?
            if (this.TransactionType == SMATransactionType::Hour)
            {
                // Only use active workers as the default value on the agreement line
                if (_agreementTable.WorkerPreferredTechnician && HcmWorkerLookup::newOnlyActiveEmployeesWithinCompany().validateWorker(_agreementTable.WorkerPreferredTechnician))
                {
                    this.Worker = _agreementTable.WorkerPreferredTechnician;
                }
            }

            if (custTable.InventLocation || custTable.InventSiteId)
            {
                inventDim.InventLocationId = custTable.InventLocation;
                inventDim.InventSiteId     = custTable.InventSiteId;
            }

            this.setInventDimIdFromInventDim(inventDim);

            this.setDimension();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.initFromAgreementTable(SMAAgreementTable::find(this.AgreementId));

        // Is a project associated with the agreement?
        if (this.ProjId)
        {
            // Get values from project (function located on service line map)
            this.SMAServiceLineMap::initFromProjTable(ProjTable::find(this.ProjId));
        }

        // Set default quantity to 1
        this.Qty = 1;

        // Get start date. The true argument indicates that it is for a new agreement line
        this.StartDate = this.getStartDate(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    InventDim inventDim(boolean  _forUpdate = false)
    {
        return InventDim::find(this.InventDimId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>InventTable</c> record that corresponds to the item ID of the current record.
    /// </summary>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to select the record for update; optional.
    /// </param>
    /// <returns>
    /// The <c>InventTable</c> record that corresponds to the item ID of the current record.
    /// </returns>
    public InventTable inventTable(boolean _forUpdate = false)
    {
        return InventTable::find(this.ItemId,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastAgreementLineNum</Name>
				<Source><![CDATA[
    private SMAAgreementLineNum lastAgreementLineNum(SMAAgreementId _agreementId)
    {
        // Return the greatest agreement line number used in the agreement
        return (select maxof(AgreementLineNum) from smaAgreementLine where smaAgreementLine.AgreementId == _agreementId).AgreementLineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>linkInventDim2Dimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Defaults <c>SMAAgreementLine.dimension</c> values that are based on the <c>InventDim</c> record
    ///    buffer values.
    /// </summary>
    /// <param name="_newInventDim">
    ///    The <c>InventDim</c> record buffer linked to the current <c>SMAAgreementLine</c> record buffer.
    /// </param>
    public void linkInventDim2Dimension(InventDim _newInventDim)
    {
        _newInventDim.modifiedInventSiteFromParent(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a dimension set that holds the merged combination of the current <c>defaultDimension</c>
    /// field on this table and the provided dimension set.
    /// </summary>
    /// <param name="_primaryDefaultDimension">
    /// A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_secondaryDefaultDimension">
    /// A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
    /// optional.
    /// </param>
    /// <param name="_dimensionMerge">
    /// A <c>dimensionMerge</c> object that was initialized with the current buffer; optional.
    /// </param>
    /// <returns>
    /// A dimension set that holds the merged combination of the current <c>defaultDimension</c> field on
    /// this table and the provided dimension set.
    /// </returns>
    /// <remarks>
    /// This method makes sure that potential linked dimensions are not overwritten when they are merged.
    /// </remarks>

    public DimensionDefault mergeDimension(
        DimensionDefault _primaryDefaultDimension,
        DimensionDefault _secondaryDefaultDimension = 0,
        DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this,
                                                                        this.companyInfo().RecId
                                                                        )
        )
    {
        return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            // Project category field is changed
            case(fieldNum(SMAAgreementLine, ProjCategoryId)):
                this.SMAServiceLineMap::fieldModifiedCategoryId(false);
                break;

            // Project activity is changed
            case(fieldNum(SMAAgreementLine, ActivityNumber)):
                this.SMAServiceLineMap::fieldModifiedActivityId(false);
                break;

            // Employee is changed
            case(fieldNum(SMAAgreementLine, Worker)):
                this.SMAServiceLineMap::fieldModifiedWorker(false);
                break;

            // Item is changed
            case(fieldNum(SMAAgreementLine, ItemId)):
                this.SMAServiceLineMap::fieldModifiedItemId(false, this.isItemRequirement());
                break;

            // ItemSetupType is changed
            case(fieldNum(SMAAgreementLine, ItemSetupType)):
                if (this.ItemId)
                {
                    this.SMAServiceLineMap::fieldModifiedItemId(false, this.isItemRequirement());
                }
                break;

            // Project currency is changed
            case(fieldNum(SMAAgreementLine, ProjCurrencyId)):
                this.SMAServiceLineMap::fieldModifiedCurrency(false);
                break;

            // Quantity is changed
            case(fieldNum(SMAAgreementLine, Qty)):
                this.SMAServiceLineMap::fieldModifiedQty(false);
                break;

            case (fieldNum(SMAAgreementLine, ServiceObjectRelationId)):
                if (!this.ServiceObjectRelationId)
                {
                    this.ServiceObjectId = '';
                }
                else
                {
                    this.ServiceObjectId = SMAServiceObjectRelation::find(this.ServiceObjectRelationId).ServiceObjectId;
                }
                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAgreementLineNum</Name>
				<Source><![CDATA[
    public void newAgreementLineNum()
    {
        // Make sure that a agreement line number is never changed
        if (this.AgreementLineNum == 0)
        {
            // Add one to the greatest agreement line number
            this.AgreementLineNum = this.lastAgreementLineNum(this.AgreementId) + 1;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceDate</Name>
				<Source><![CDATA[
    public date priceDate()
    {
        // PriceDate function, picks the right date whether is the map is used from Agreement Lines or ServiceOrder Lines.
        //
        // The DateExecution is not mapped on the Agreementine but allways filled on the ServiceOrderLine, therefore
        // it returns the systemdate instead.
        //
        // When there are a DateExecution, it determents which date to pick, and in the case where the SeOL is created by and there is a
        // DateCalculated it allways uses this date, otherwise use the DateExecution, which exists.

        return  this.getStartDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimension</Name>
				<Source><![CDATA[
    public void setDimension()
    {
        this.SMAServiceLineMap::setDefaultDimension();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Applies the <c>InventDimId</c> parameter to the <c>SMAAgreementLine.inventDimId</c> field and
    ///    assigns default values that are based on the new inventory dimensions.
    /// </summary>
    /// <param name="_inventDimId">
    ///    The <c>InventDimId</c> value that should be applied to the <c>SMAAgreementLine.InventDimId</c>
    ///    field.
    /// </param>
    /// <param name="_inventDim">
    ///    The <c>InventDim</c> record buffer related to the <c>InventDimId</c> parameters; optional.
    /// </param>
    public void setInventDimId(InventDimId _inventDimId, InventDim _inventDim = InventDim::find(_inventDimId))
    {
        InventDim   currentInventDim = this.InventDimId == _inventDimId ? _inventDim : this.inventDim();
        this.InventDimId = _inventDimId;
        this.linkInventDim2Dimension(_inventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimIdFromInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds or creates an <c>InventDimId</c> value for the <c>InventDim</c> parameter and applies the
    ///    found <c>InventDimId</c> to the <c>SMAAgreementLine.inventDimId</c> field.
    /// </summary>
    /// <param name="_inventDim">
    ///    An <c>InventDim</c> record buffer that should be referenced by the current <c>SMAAgreementLine</c>
    ///    record buffer.
    /// </param>
    public void setInventDimIdFromInventDim(InventDim _inventDim)
    {
        InventDim   inventDim;
        inventDim = InventDim::findOrCreate(_inventDim);
        this.setInventDimId(inventDim.InventDimId, inventDim);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineProperty</Name>
				<Source><![CDATA[
    public void setLineProperty()
    {
        // Set line property based on the selected project and category
        this.ProjLinePropertyId = ProjLinePropertySetup::findLinePropertyId(this.ProjId, this.ProjCategoryId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean                 ret;
        SMAAgreementTable       agreementRecord;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(SMAAgreementLine, TransactionType):
                ret = ret && this.SMAServiceLineMap::checkTransTypeAllowed();
                break;

            case fieldNum(SMAAgreementLine, StartDate), fieldNum(SMAAgreementLine, EndDate) :
                // Check against agreement header
                agreementRecord = SMAAgreementTable::find(this.AgreementId);
                if (agreementRecord.StartDate && agreementRecord.StartDate > this.StartDate)
                {
                    // Agreement line cannot start earlier than agreement start date.
                    ret = ret && checkFailed("@SYS87717");
                }

                if (agreementRecord.EndDate && agreementRecord.EndDate < this.EndDate)
                {
                    // Agreement line cannot end later than agreement end date.
                    ret = ret && checkFailed("@SYS87718");
                }

                // Check internal line correctness
                if (this.StartDate && this.EndDate && this.StartDate > this.EndDate)
                {
                    // End date must come after start date.
                    ret = ret && checkFailed("@SYS21592");
                }
                break;

            case fieldNum(SMAAgreementLine, ItemSetupType):
                ret = this.checkItemSetupAllowed();
                break;

            case fieldNum(SMAAgreementLine, ProjCategoryId):
                ret = ret && this.SMAServiceLineMap::checkProjCategoryId();
                break;

            case fieldNum(SMAAgreementLine, Worker):
                ret = ret && this.SMAServiceLineMap::checkWorker();
                break;

            case fieldNum(SMAAgreementLine, ActivityNumber):
                ret = ret && this.checkActivity();
                break;

            case fieldNum(SMAAgreementLine, ServiceTaskId):
                if (ret && this.ServiceTaskId)
                {
                    ret = ret && SMAServiceTaskRelation::existRelation(tableNum(SMAAgreementTable), this.AgreementId, this.ServiceTaskId);
                }
                break;

            case fieldNum(SMAAgreementLine, ServiceObjectRelationId):
                if (ret && this.ServiceObjectRelationId)
                {
                    ret = ret && SMAServiceObjectRelation::existRelation(this.ServiceObjectRelationId, this.AgreementId, tableNum(SMAAgreementTable));
                }
                break;
            case fieldNum(SMAAgreementLine, Qty):
                ret = ret && this.validateQty(this.Qty);            
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validating that the Line Quantity is meeting the constraints. 
    /// </summary>
    /// <param name = "_qty"> The quantity value to be validated.</param>
    /// <returns> Returns true if the quantity value has been validated; otherwise false. </returns>
    protected boolean validateQty(SMAQuantity _qty)
    {
        if (_qty >= 0)
        {
            return true;
        }
        else
        {
            return checkFailed("@SCM:SMAQtyLineValidation");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean             ret;
        ProjValCheckTrans   projValCheckTrans = new ProjValCheckTrans();
        SMAAgreementTable   agreementTable;

        ret = super();

        // Call validation that are shared between service order line and service agreement lines. The validation is placed on a map
        ret = this.SMAServiceLineMap::validateWrite();

        if (ret)
        {
            ret = projValCheckTrans.validateMandatory(this);
        }

        if (ret)
        {
           ret = this.checkActivity();
        }

        if ((this.startDate == this.EndDate) && (this.ServiceTimeStartAfter > this.ServiceTimeEndBefore))
        {
            warning("@SYS32682");
            ret = false;
        }

        if (ret)
        {
            agreementTable = SMAAgreementTable::find(this.AgreementId);
            if (agreementTable.EndDate && (agreementTable.EndDate < this.StartDate))
            {
                warning("@SYS107057");
            }
        }

        if (ret && #PmfEnabled)
        {
            ret = this.inventTable()
                    .pmfInventProductType().validateInventUpd();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>workerName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the name of the worker that is related to the record.
    /// </summary>
    /// <returns>
    /// A string that contains the name.
    /// </returns>
    public display HcmWorkerName workerName()
    {
        return HcmWorker::find(this.Worker).name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>workerPersonnelNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the personnel number of the worker that is related to the record.
    /// </summary>
    /// <returns>
    /// A string that contains the personnel number.
    /// </returns>
    public display HcmPersonnelNumberId workerPersonnelNumber()
    {
        return HcmWorker::find(this.Worker).PersonnelNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
    public void write()
    {
        // Is it a new line?
        if (this.AgreementLineNum == 0)
        {
            // Find the next available line number
            this.newAgreementLineNum();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(SMAAgreementId _agreementId, SMAAgreementLineNum _lineId)
    {
        boolean ret = false;

        if (_agreementId && _lineId)
        {
            ret = (select firstonly RecId from smaAgreementLine
                        where smaAgreementLine.AgreementId      == _agreementId &&
                              smaAgreementLine.AgreementLineNum == _lineId).RecId != 0;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existAgreementLine</Name>
				<Source><![CDATA[
    public static boolean existAgreementLine(SMAAgreementId _agreementId)
    {
        boolean ret = false;

        if (_agreementId)
        {
            ret = (select firstonly RecId from smaAgreementLine where smaAgreementLine.AgreementId == _agreementId).RecId != 0;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existTask</Name>
				<Source><![CDATA[
    public static boolean existTask(SMAAgreementId _agreementId, SMAServiceTaskId _taskId)
    {
        boolean ret = false;

        if (_agreementId && _taskId)
        {
            ret = (select firstonly RecId from smaAgreementLine
                        where smaAgreementLine.AgreementId      == _agreementId &&
                              smaAgreementLine.ServiceTaskId    == _taskId).RecId != 0;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static SMAAgreementLine find(SMAAgreementId         _agreementId,
                                        SMAAgreementLineNum    _lineId,
                                        boolean                _forupdate = false)
    {
        SMAAgreementLine agreementLine = null;

        if (_agreementId && _lineId)
        {
            agreementLine.selectForUpdate(_forupdate);

            select firstonly agreementLine
                where agreementLine.AgreementId      == _agreementId &&
                      agreementLine.AgreementLineNum == _lineId;
        }

        return agreementLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static SMAAgreementLine findRecId(RecId _recId, boolean _forupdate = false)
    {
        SMAAgreementLine agreementLine;

        agreementLine.selectForUpdate(_forupdate);

        select firstonly agreementLine where agreementLine.RecId == _recId;

        return agreementLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transType</Name>
				<Source><![CDATA[
    public static ProjCategoryType transType(ProjCategoryId _projCategoryId)
    {
        // Return the project category type
        return ProjCategory::find(_projCategoryId).CategoryType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles reinitialization if needed when an associated <c>InventDim</c> buffer is changed.
    /// </summary>
    /// <param name = "_inventDim">The <c>InventDim</c> buffer.</param>
    /// <param name = "_inventDimFieldId">The field that was changed.</param>
    public void modifiedInventDim(InventDim _inventDim, FieldId _inventDimFieldId)
    {
        boolean isFieldProductOrSiteDimension = _inventDim.siteOrProductDimFieldModified(_inventDimFieldId);
        this.InventDimId = _inventDim.inventDimId;

        if (isFieldProductOrSiteDimension)
        {
            this.SMAServiceLineMap::initDimensionsSpecificDefaulting(false, this.isItemRequirement());
        }

        _inventDim.refreshFormDataSource(this.inventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isItemRequirement</Name>
				<Source><![CDATA[
    private boolean isItemRequirement()
    {
        return (this.ItemSetupType == SMAItemSetupType::ItemRequirement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventItemOrderSetupType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the type of inventory item order setup based on item setup type.
    /// </summary>
    /// <returns>Returns the type of inventory item order setup.</returns>
    public InventItemOrderSetupType getInventItemOrderSetupType()
    {
            return this.isItemRequirement() ? InventItemOrderSetupType::Sales : InventItemOrderSetupType::Invent;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SMAManagement</ConfigurationKey>
	<DeveloperDocumentation>@SYS122694</DeveloperDocumentation>
	<Label>@SYS78984</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>AgreementId</TitleField1>
	<TitleField2>AgreementLineNum</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>AgreementLineNumIdx</ClusteredIndex>
	<Modules>ServiceManagement</Modules>
	<PrimaryIndex>AgreementLineNumIdx</PrimaryIndex>
	<ReplacementKey>AgreementLineNumIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>SMAServiceOrderLine</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SMAServiceOrderLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AgreementLineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActivityNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimeAgreementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntervalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceTaskId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AgreementLineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AgreementLineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DescriptionService</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS81213</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EPOverview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransactionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceTaskId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Suspended</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AgreementLineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Interval</Name>
			<Label>@SYS88963</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IntervalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimeAgreementId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ObjectRelation</Name>
			<Label>@SYS102585</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectRelationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransactionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectRelationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceTaskId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntervalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemSetupType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Suspended</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@SYS40</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Suspended</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProjCostPrice</Name>
			<Label>@SYS13134</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProjectIdentification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemSetupType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActivityNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjLinePropertyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProjSalesPrice</Name>
			<Label>@SYS5755</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjCurrencyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Unit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS67871</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjTaxGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjTaxItemGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ServiceRelation</Name>
			<Label>@SYS90610</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectRelationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceTaskId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ServiceTime</Name>
			<Label>@SYS90312</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceTimeStartAfter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceTimeEndBefore</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transaction</Name>
			<Label>@SYS99887</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjTransTxt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ActivityNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjActivityNumber</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AgreementId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAAgreementId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AgreementLineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAAgreementLineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteSMAItemLinkedDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DescriptionService</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMADescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EndDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EndDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IntervalId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAIntervalId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LogisticsBasic</ConfigurationKey>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemSetupType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>SMAItemSetupType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjCategoryId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjCurrencyId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjSalesCurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAProjId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjLinePropertyId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjLinePropertyId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjTaxGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjTaxGroup</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjTaxItemGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjTaxItemGroup</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjTransTxt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransTxt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServiceObjectId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAServiceObjectId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServiceObjectRelationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAServiceObjectRelationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServiceTaskId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAServiceTaskId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>ServiceTimeEndBefore</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAEndBeforeTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>ServiceTimeStartAfter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAStartAfter</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>StartDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Suspended</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS11058</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TimeAgreementId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMATimeAgreementId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransactionType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>SMATransactionType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Unit</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LogisticsBasic</ConfigurationKey>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SMAWorker</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AgreementLineNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AgreementId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AgreementLineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ServiceObjectIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<ConfigurationKey>SMA</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ServiceObjectId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ServiceTaskIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ServiceTaskId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>DimensionDefaultMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SMAServiceLineMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ProjCostPriceCost</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjCategoryId</MapField>
					<MapFieldTo>ProjCategoryId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Description</MapField>
					<MapFieldTo>Description</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StartDate</MapField>
					<MapFieldTo>StartDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjId</MapField>
					<MapFieldTo>ProjId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ServiceTaskId</MapField>
					<MapFieldTo>ServiceTaskId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ServiceObjectId</MapField>
					<MapFieldTo>ServiceObjectId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Qty</MapField>
					<MapFieldTo>Qty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Dimension</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjLinePropertyId</MapField>
					<MapFieldTo>ProjLinePropertyId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>ProjCurrencyId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjSalesPriceCost</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransactionType</MapField>
					<MapFieldTo>TransactionType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjTaxItemGroup</MapField>
					<MapFieldTo>ProjTaxItemGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransTxt</MapField>
					<MapFieldTo>ProjTransTxt</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UnitID</MapField>
					<MapFieldTo>Unit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
					<MapFieldTo>ItemId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
					<MapFieldTo>InventDimId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjTaxGroup</MapField>
					<MapFieldTo>ProjTaxGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AgreementId</MapField>
					<MapFieldTo>AgreementId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ServiceOrderId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TimeAgreementId</MapField>
					<MapFieldTo>TimeAgreementId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IntervalId</MapField>
					<MapFieldTo>IntervalId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AgreementLineId</MapField>
					<MapFieldTo>AgreementLineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DateExecution</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ServiceTimeStartAfter</MapField>
					<MapFieldTo>ServiceTimeStartAfter</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ServiceTimeEndBefore</MapField>
					<MapFieldTo>ServiceTimeEndBefore</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ServiceOrderStatus</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DescriptionService</MapField>
					<MapFieldTo>DescriptionService</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjJournalId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjJournalLineNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Stopped</MapField>
					<MapFieldTo>Suspended</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemSetupType</MapField>
					<MapFieldTo>ItemSetupType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TimeSheetStartTime</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TimeSheetEndTime</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Origin</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DateCalculated</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyIdCost</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Worker</MapField>
					<MapFieldTo>Worker</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ActivityNumber</MapField>
					<MapFieldTo>ActivityNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AgreementLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AgreementLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Worker</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Worker</Name>
					<Field>Worker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjCategoryId</Name>
					<Field>ProjCategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjectSalesCurrency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjCurrencyId</Name>
					<Field>ProjCurrencyId</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjectTaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjTaxGroupId</Name>
					<Field>ProjTaxGroupId</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjectTaxItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjTaxItemGroupId</Name>
					<Field>ProjTaxItemGroupId</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxItemGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjLineProperty</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjLineProperty</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjLinePropertyId</Name>
					<Field>ProjLinePropertyId</Field>
					<RelatedField>LinePropertyId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StatusIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProjectIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SMAAgreementInterval</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAAgreementInterval</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>IntervalId</Name>
					<Field>IntervalId</Field>
					<RelatedField>IntervalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>IntervalIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SMAAgreementTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAAgreementTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ServiceAgreement</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ServiceAgreementLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AgreementId</Name>
					<Field>AgreementId</Field>
					<RelatedField>AgreementId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SMAServiceObjectRelation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAServiceObjectRelation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceObjectRelationId</Name>
					<Field>ServiceObjectRelationId</Field>
					<RelatedField>ServiceObjectRelationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SMAServiceObjectTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAServiceObjectTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceObjectId</Name>
					<Field>ServiceObjectId</Field>
					<RelatedField>ServiceObjectId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ObjectIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SMAServiceOrderLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAServiceOrderLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ServiceOrderLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ServiceAgreementLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AgreementId</Name>
					<Field>AgreementId</Field>
					<RelatedField>AgreementId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AgreementLineNum</Name>
					<Field>AgreementLineNum</Field>
					<RelatedField>AgreementLineNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SMAServiceTask</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAServiceTask</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceTaskId</Name>
					<Field>ServiceTaskId</Field>
					<RelatedField>ServiceTaskId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaskIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SMATimeAgreement</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMATimeAgreement</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TimeAgreementId</Name>
					<Field>TimeAgreementId</Field>
					<RelatedField>TimeAgreementId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TimeAgreementIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmActivities</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>smmActivities</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ActivityNumber</Name>
					<Field>ActivityNumber</Field>
					<RelatedField>ActivityNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ActivityNumberIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Unit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Unit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ServiceAgreementLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Unit</Name>
					<Field>Unit</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>