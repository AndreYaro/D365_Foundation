<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLCExportLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankLCExportLine extends BankLCLine
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
        public void initValue()
    {
        super();
        this.ExportShipmentStatus = BankLCExportShipmentStatusType::Open;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isUpdateInvoiceAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the invoice can be updated for the <c>BankLCLine</c> record.
    /// </summary>
    /// <returns>
    ///    true if the invoice can be updated; otherwise, false.
    /// </returns>
    public boolean isUpdateInvoiceAllowed()
    {
        return this.ExportShipmentStatus == BankLCExportShipmentStatusType::Shipped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isUpdatePackingslipAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the packing slip can be updated for the <c>BankLCLine</c> record.
    /// </summary>
    /// <returns>
    ///    true if the packing slip can be updated; otherwise, false.
    /// </returns>
    public boolean isUpdatePackingslipAllowed()
    {
        return this.ExportShipmentStatus == BankLCExportShipmentStatusType::Open;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
        public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (this.ExportShipmentStatus != BankLCExportShipmentStatusType::Open)
            {
                // Shipment line could only be deleted when its status is "Open".
                ret = checkFailed("@SYS316277");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified <c>BankLCExportLine</c> record.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>BankLCExportLine</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    The specified record in the <c>BankLCExportLine</c> table; otherwise, an empty record.
    /// </returns>
    public static BankLCExportLine find(
        recId   _recId,
        boolean _forUpdate = false)
    {
        BankLCExportLine bankLCExportLine;

        if (_recId)
        {
            bankLCExportLine.selectForUpdate(_forUpdate);

            select firstonly bankLCExportLine
                where bankLCExportLine.RecId == _recId;
        }

        return bankLCExportLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByExportTableAndLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the <c>BankLCExportLine</c> record specified by a letter of credit and a line number.
    /// </summary>
    /// <param name="_bankLCExportRefRecId">
    ///    The record ID of a letter of credit.
    /// </param>
    /// <param name="_bankLCShipmentLineNum">
    ///    The shipment line number.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    The specified record in the <c>BankLCExportLine</c> table if found; otherwise, an empty record.
    /// </returns>
    public static BankLCExportLine findByExportTableAndLineNum(
        BankLCRefRecId        _bankLCExportRefRecId,
        BankLCShipmentLineNum _bankLCShipmentLineNum,
        boolean               _forUpdate = false)
    {
        return BankLCExportLine::find(
            BankLCLine::findByTableAndLineNum(_bankLCExportRefRecId, _bankLCShipmentLineNum).RecId, _forUpdate);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BankDocument</ConfigurationKey>
	<DeveloperDocumentation>@SYS316241</DeveloperDocumentation>
	<FormRef>BankLCExport</FormRef>
	<Label>@SYS316240</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>ExportShipmentStatus</TitleField1>
	<TitleField2>DocumentSubmitted</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Extends>BankLCLine</Extends>
	<Modules>Bank</Modules>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExportShipmentStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentSubmitted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExportShipmentStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentSubmitted</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DocumentSubmitted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankLCExportShipmentDocumentSubmitted</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExportShipmentStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankLCExportShipmentStatus</ExtendedDataType>
			<EnumType>BankLCExportShipmentStatusType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ExportShipmentStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ExportShipmentStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankLCExportLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>BankLCLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>