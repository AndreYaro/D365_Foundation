<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqTransCov</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqTransCov extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>actionSum</Name>
				<Source><![CDATA[
    display ActionQty actionSum()
    {
        return this.Qty   + this.ActionQtyAdd;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertUsingInsertList</Name>
				<Source><![CDATA[
    public void insertUsingInsertList(
        RecordInsertList    _list
        )
    {
        if (!_list)
        {
            this.insert();
        }
        else
        {
            _list.add(this);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWActionQtyAdd</Name>
				<Source><![CDATA[
    public display PdsCWActionQtyAdd pdsCWActionQtyAdd()
    {
        if (PdsGlobal::pdsIsCWItem(this.ItemId))
        {
            return PdsCatchWeight::convertQtyToCWQty(this.ItemId, this.ActionQtyAdd, InventTable::find(this.ItemId).inventUnitId());
        }
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWSettled</Name>
				<Source><![CDATA[
    public display PdsCWSettled pdsCWSettled()
    {
        if (PdsGlobal::pdsIsCWItem(this.ItemId))
        {
            return PdsCatchWeight::convertQtyToCWQty(this.ItemId, this.Qty,  InventTable::find(this.ItemId).inventUnitId());
        }
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertFromReceiptIssue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record into the <c>ReqTransCov</c> table based on a receipt <c>ReqTrans</c> record and an
    /// issue <c>ReqTrans</c> record.
    /// </summary>
    /// <param name="_receipt">
    /// A <c>ReqTrans</c> record that represents a receipt requirement transaction.
    /// </param>
    /// <param name="_issue">
    /// A <c>ReqTrans</c> record that represents an issue requirement transaction.
    /// </param>
    /// <param name="_reqPlanData">
    /// A <c>ReqPlanData</c> object that holds the master planning settings.
    /// </param>
    /// <param name="_reqTransCovInsertList">
    /// A <c>RecordInsertList</c> object that holds the <c>ReqTransCov</c> records to insert.
    /// </param>
    /// <param name="_reqTraceLogger">
    /// A <c>ReqTraceLogger</c> object that is used to log MRP execution details; optional.
    /// </param>
    public static void insertFromReceiptIssue(
        ReqTrans            _receipt,
        ReqTrans            _issue,
        ReqPlanData         _reqPlanData,
        RecordInsertList    _reqTransCovInsertList
        , ReqTraceLogger    _reqTraceLogger = null
        )
    {
        InventQty           qty;
        ReqTransCov         reqTransCov;

        if (   _receipt
            && _issue)
        {
            if (abs(_issue.openQty()) > abs(_receipt.openQty()))
            {
                qty   = _receipt.openQty();
            }
            else
            {
                qty   = -_issue.openQty();
            }

            reqTransCov.PlanVersion         = _receipt.PlanVersion;

            reqTransCov.ItemId              = _receipt.ItemId;
            reqTransCov.IsDerivedDirectly   = _receipt.IsDerivedDirectly;
            reqTransCov.ReceiptRecId        = _receipt.RecId;
            reqTransCov.IssueRecId          = _issue.RecId;

            reqTransCov.setAbsoluteQty(qty);

            if (_reqTraceLogger && _reqTraceLogger.loggingEnabled())
            {
                _reqTraceLogger.writeLog(ReqTraceLogMessageEntry::newFromReqTrans(ReqTraceMessageType::IssuePeggedToReceipt, [ qty, _issue.openQty() + qty], _issue));
            }

            // ReqTransCov of safety inventory receipt should be inserted into database directly because it will be used to allocate coverage qty in method ReqCalc.covCalcDimSafetyInvent().
            if (_receipt.RefType == ReqRefType::SafetyInvent)
            {
                reqTransCov.insert();
            }
            else
            {
                reqTransCov.insertUsingInsertList(_reqTransCovInsertList);
            }

            _receipt.CovQty        += qty;

            _receipt.update(_reqPlanData);

            _issue.CovQty          -= qty;

            _issue.update(_reqPlanData);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>reduceAbsoluteQtyBy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reduces the absolute value of the pegged quantity.
    /// </summary>
    /// <param name = "_qtyToSubtract">The quantity that must be subtracted from the absolute value of the pegged quantity.</param>
    /// <remarks>
    /// Since the quantity field always contains negative values this method helps making code that tries to reduce 
    /// the quantity easier to read.
    /// </remarks>
    public void reduceAbsoluteQtyBy(ReqQty _qtyToSubtract)
    {
        this.Qty += _qtyToSubtract; // ReqTransCov.Qty values are negative. Thus adding the value will reduce the pegged quantity.
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAbsoluteQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the absolute value of the pegged quantity.
    /// </summary>
    /// <param name = "_absoluteQty">The absolute value of the pegged quantity that must be set.</param>
    /// <remarks>
    /// Since the quantity field always contains negative values this method helps making code that tries to reduce
    /// the quantity easier to read.
    /// </remarks>
    public void setAbsoluteQty(ReqQty _absoluteQty)
    {
        if (_absoluteQty < 0)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        this.Qty = -_absoluteQty; // ReqTransCov.Qty values are negative.
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Req</ConfigurationKey>
	<DeveloperDocumentation>@SYS124117</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS15722</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>Qty</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ItemIdx</ClusteredIndex>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>MasterPlanning</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActionQtyAdd</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ActionMessage</Name>
			<Label>@SYS2041</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActionQtyAdd</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Coverage</Name>
			<Label>@SYS26726</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsDerivedDirectly</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Item</Name>
			<Label>@SYS7407</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PdsCatchWeight</Name>
			<Label>@PDS72</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>pdsCWSettled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>pdsCWActionQtyAdd</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReceiptRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ReqTransReceiptRefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ActionQtyAdd</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ActionQtyAdd</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDerivedDirectly</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqIsDerivedDirectly</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>IssueRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ReqTransIssueRefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PlanVersion</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqQtySettled</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReceiptIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>ReceiptRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IssueIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>IssueRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ItemIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>PlanVersion</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>IsDerivedDirectly</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IssueReqTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ReqTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>IssueReqTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReqTransCov</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>IssueRecId</Name>
					<SourceEDT>ReqTransIssueRefRecId</SourceEDT>
					<Field>IssueRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Direction_Extern</Name>
					<SourceEDT>ReqTransIssueRefRecId</SourceEDT>
					<RelatedField>Direction</RelatedField>
					<ValueStr>InventDirection::Issue</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReceiptReqTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ReqTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ReceiptReqTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReqTransCov</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReceiptRecId</Name>
					<SourceEDT>ReqTransReceiptRefRecId</SourceEDT>
					<Field>ReceiptRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Direction_Extern</Name>
					<SourceEDT>ReqTransReceiptRefRecId</SourceEDT>
					<RelatedField>Direction</RelatedField>
					<ValueStr>InventDirection::Receipt</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReqPlanVersion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ReqPlanVersion</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PlanVersion</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>PlannedCoverage</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PlanVersion</Name>
					<Field>PlanVersion</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>