<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdReportingCodes_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxWithholdReportingCodes_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayCollectionCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the tax withhold reporting collection code.
    /// </summary>
    /// <returns>
    /// The tax withhold section code.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display TaxWithholdSectionCode_IN displayCollectionCode()
    {
        TaxWithholdComponentGroupTable_IN   taxWithholdComponentGroupTable;
        TaxWithholdSectionCode_IN           ret;
        TaxWithholdSectionCode_IN           taxWithholdCollectionCode;

        taxWithholdComponentGroupTable  = TaxWithholdComponentGroupTable_IN::find(this.TaxWithholdComponentGroup);
        taxWithholdCollectionCode       = taxWithholdComponentGroupTable.SectionCode;

        if (this.TaxType == TaxWithholdType_IN::TCS)
        {
            ret = taxWithholdCollectionCode;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displaySectionCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays tax withhold reporting section code.
    /// </summary>
    /// <returns>
    /// The tax withhold section code.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display TaxWithholdSectionCode_IN displaySectionCode()
    {
        TaxWithholdComponentGroupTable_IN   taxWithholdComponentGroupTable;
        TaxWithholdSectionCode_IN           ret;
        TaxWithholdSectionCode_IN           taxWithholdSectionCode;

        taxWithholdComponentGroupTable  = TaxWithholdComponentGroupTable_IN::find(this.TaxWithholdComponentGroup);
        taxWithholdSectionCode          = taxWithholdComponentGroupTable.SectionCode;

        if (this.TaxType == TaxWithholdType_IN::TDS)
        {
            ret = taxWithholdSectionCode;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the specified field.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The id of the field to validate.
    /// </param>
    /// <returns>
    /// Returns true if the field passes validation; otherwise, false.
    /// </returns>
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean                         ret;
        TaxWithholdComponentTable_IN    taxWithholdComponentTable;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldnum(TaxWithholdReportingCodes_IN, TaxWithholdComponent):
                if (this.TaxWithholdComponent)
                {
                    select firstonly Component from taxWithholdComponentTable
                        where taxWithholdComponentTable.RecId   == this.TaxWithholdComponent
                           && taxWithholdComponentTable.TaxType == this.TaxType;
                    if (!taxWithholdComponentTable)
                    {
                        ret = ret && checkFailed(strfmt("@GLS5459", TaxWithholdComponentTable_IN::find(this.TaxWithholdComponent).Component, this.TaxType));
                    }
                }
                break;

            case fieldnum(TaxWithholdReportingCodes_IN, ReportingCode):
                if (this.TaxType == TaxWithholdType_IN::TCS)
                {
                    if (this.ReportingCode == TaxWithholdReportingCode_IN::TDS)
                    {
                        throw error(strfmt("@GLS6353", "@GLS5470"));
                    }
                }
                else
                {
                    if (this.ReportingCode == TaxWithholdReportingCode_IN::TCS)
                    {
                        throw error(strfmt("@GLS6353", "@GLS5471"));
                    }
                }
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the specified field value.
    /// </summary>
    /// <param name="_fieldName">
    /// The name of the field to validate.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index of the field; optional.
    /// </param>
    /// <returns>
    /// Returns true if the field passes value validation; otherwise, false.
    /// </returns>
    public boolean validateFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        boolean                         ret;
        TaxWithholdComponentTable_IN    taxWithholdComponentTable;

        ret = super(_fieldName);

        switch (_fieldName)
        {
            case fieldstr(TaxWithholdReportingCodes_IN, TaxWithholdComponent):
                if (this.TaxWithholdComponent)
                {
                    select firstonly Component from taxWithholdComponentTable
                        where taxWithholdComponentTable.RecId   == this.TaxWithholdComponent
                           && taxWithholdComponentTable.TaxType == this.TaxType;
                    if (!taxWithholdComponentTable)
                    {
                        ret = ret && checkFailed(strfmt("@GLS5459", TaxWithholdComponentTable_IN::find(this.TaxWithholdComponent).Component, this.TaxType));
                    }
                }
                break;

            case fieldstr(TaxWithholdReportingCodes_IN, ReportingCode):
                if (this.TaxType == TaxWithholdType_IN::TCS)
                {
                    if (this.ReportingCode == TaxWithholdReportingCode_IN::TDS)
                    {
                        throw error(strfmt("@GLS6353", "@GLS5470"));
                    }
                }
                else
                {
                    if (this.ReportingCode == TaxWithholdReportingCode_IN::TCS)
                    {
                        throw error(strfmt("@GLS6353", "@GLS5471"));
                    }
                }
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the <c>TaxWithholdReportingCodes_IN</c> table for the specified record id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forupdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing <c>TaxWithholdReportingCodes_IN</c> table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TaxWithholdReportingCodes_IN find(RefRecId            _recId,
                                                    boolean             _forupdate        = false,
                                                    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxWithholdReportingCodes_IN taxWithholdReportingCodes;

        taxWithholdReportingCodes.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxWithholdReportingCodes.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxWithholdReportingCodes
            where taxWithholdReportingCodes.RecId == _recId;

        return taxWithholdReportingCodes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByComponentGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>TaxWithholdReportingCodes_IN</c> table specified by a component group.
    /// </summary>
    /// <param name="_taxType">
    /// The tax type of the <c>TaxWithholdReportingCodes_IN</c> record to find.
    /// </param>
    /// <param name="_component">
    /// The component of the <c>TaxWithholdReportingCodes_IN</c> record to find.
    /// </param>
    /// <param name="_componentGroup">
    /// The component group of the <c>TaxWithholdReportingCodes_IN</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>TaxWithholdReportingCodes_IN</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TaxWithholdReportingCodes_IN findByComponentGroup(TaxWithholdType_IN              _taxType,
                                                                    TaxWithholdComponent_IN         _component,
                                                                    TaxWithholdComponentGroup_IN    _componentGroup,
                                                                    boolean                         _forUpdate = false)
    {
        TaxWithholdReportingCodes_IN    taxWithholdReportingCodes;

        if (_component)
        {
            taxWithholdReportingCodes.selectForUpdate(_forUpdate);
            select firstonly taxWithholdReportingCodes
                index hint TypeComponentGroupIdx
                where taxWithholdReportingCodes.TaxType                   == _taxType
                   && taxWithholdReportingCodes.TaxWithholdComponent      == TaxWithholdComponentTable_IN::findByComponentGroup(_taxType, _component, _componentGroup).RecId
                   && taxWithholdReportingCodes.TaxWithholdComponentGroup == TaxWithholdComponentGroupTable_IN::findByComponentGroup(_taxType, _componentGroup).RecId;
        }

        return taxWithholdReportingCodes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupComponent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and shows a lookup form for the <c>TaxWithholdComponentTable_IN</c> field.
    /// </summary>
    /// <param name="_ctrl">
    /// The calling form control.
    /// </param>
    /// <param name="_taxType">
    /// TaxType used to filter the lookup record based on Tax type
    /// </param>
    /// <returns>
    /// The selected record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static Common lookupComponent(FormReferenceControl    _ctrl,
                                                TaxWithholdType_IN   _taxType)
    {
        Common                  selectedRecord;
        SysReferenceTableLookup sysTableLookup  = SysReferenceTableLookup::newParameters(tablenum(TaxWithholdComponentTable_IN), _ctrl, true);
        Query                   query           = new Query();
        QueryBuildDataSource    queryBuildDataSource;

        sysTableLookup.addLookupfield(fieldnum(TaxWithholdComponentTable_IN, Component));
        sysTableLookup.addLookupfield(fieldnum(TaxWithholdComponentTable_IN, Name));

        queryBuildDataSource = query.addDataSource(tablenum(TaxWithholdComponentTable_IN));
        queryBuildDataSource.addRange(fieldnum(TaxWithholdComponentTable_IN, TaxType)).value(queryValue(_taxType));

        sysTableLookup.parmQuery(query);
        selectedRecord = sysTableLookup.performFormLookup();

        return selectedRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupComponentGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and shows a lookup form for the <c>TaxWithholdComponentGroupTable_IN</c> field.
    /// </summary>
    /// <param name="_ctrl">
    /// The calling form control.
    /// </param>
    /// <param name="_taxType">
    /// TaxType used to filter the lookup record based on Tax type.
    /// </param>
    /// <returns>
    /// Return the selected buffer.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static Common lookupComponentGroup(FormReferenceControl     _ctrl,
                                                     TaxWithholdType_IN       _taxType)
    {
        Common                  selectedRecord;
        SysReferenceTableLookup sysTableLookup  = SysReferenceTableLookup::newParameters(tablenum(TaxWithholdComponentGroupTable_IN), _ctrl, true);
        Query                   query           = new Query();
        QueryBuildDataSource    queryBuildDataSource;

        sysTableLookup.addLookupfield(fieldnum(TaxWithholdComponentGroupTable_IN, ComponentGroup));
        sysTableLookup.addLookupfield(fieldnum(TaxWithholdComponentGroupTable_IN, Name));

        queryBuildDataSource = query.addDataSource(tablenum(TaxWithholdComponentGroupTable_IN));
        queryBuildDataSource.addRange(fieldnum(TaxWithholdComponentGroupTable_IN, TaxType)).value(queryValue(_taxType));

        sysTableLookup.parmQuery(query);
        selectedRecord = sysTableLookup.performFormLookup();

        return selectedRecord;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS63786</DeveloperDocumentation>
	<Label>@GLS6371</Label>
	<TitleField1>TaxWithholdComponent</TitleField1>
	<TitleField2>TaxWithholdComponentGroup</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>TypeComponentGroupIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportingCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdComponent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdComponentGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdComponent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdComponentGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReportingCodes</Name>
			<Label>@GLS6379</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>displaySectionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayCollectionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportingCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReportingCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<HelpText>@TaxWithholdParameters:ReportingCodesINReportingCodeHelpText</HelpText>
			<EnumType>TaxWithholdReportingCode_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>TaxWithholdType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdComponent</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:ReportingCodesINTaxWithholdComponentHelpText</HelpText>
			<Label>@GLS5357</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdComponentGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:ReportingCodesINTaxWithholdComponentGroupHelpText</HelpText>
			<Label>@GLS5350</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TypeComponentGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxWithholdComponent</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxWithholdComponentGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxWithholdComponentTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxWithholdComponent</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxWithholdComponentGroupTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxWithholdComponentGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdComponentGroupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxWithholdComponentGroupTable_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdComponentGroupTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdComponentGroupTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdComponentGroup</Name>
					<Field>TaxWithholdComponentGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdComponentTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxWithholdComponentTable_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdComponentTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdComponentTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdComponent</Name>
					<Field>TaxWithholdComponent</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>