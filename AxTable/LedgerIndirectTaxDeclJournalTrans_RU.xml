<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerIndirectTaxDeclJournalTrans_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerIndirectTaxDeclJournalTrans_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getOkato</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds OKATO for the current <c>LedgerIndirectTaxDeclJournalTrans_RU</c> record.
    /// </summary>
    /// <returns>
    ///    OKATO for the current <c>LedgerIndirectTaxDeclJournalTrans_RU</c> record.
    /// </returns>
    public OKATO_RU getOkato()
    {
        LedgerIndirectTaxDeclJournalTable_RU    journalTable = this.journalTable();
        Branches_RU                             branches = Branches_RU::find(this.BranchId);

        if (branches)
        {
            return branches.VendAccount ? branches.vendTable().partyOKATOasOfDate_RU(journalTable.fromDate())
                : CompanyInfoHelper::partyOKATOasOfDate_RU(CompanyInfo::find(), journalTable.fromDate());
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromJournalTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the table buffer with values from the <c>LedgerIndirectTaxDeclJournalTable_RU</c> table.
    /// </summary>
    /// <param name="_journalTable">
    ///    The table buffer containing the values to default on the new record.
    /// </param>
    public void initFromJournalTable(LedgerIndirectTaxDeclJournalTable_RU  _journalTable)
    {
        this.JournalId = _journalTable.JournalId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the parent record in the <c>LedgerIndirectTaxDeclJournalTable_RU</c> table.
    /// </summary>
    /// <param name="_forUpdate">
    ///    Indicates whether to select the parent record for update or not.
    /// </param>
    /// <returns>
    ///    The parent record in the <c>LedgerIndirectTaxDeclJournalTable_RU</c> table.
    /// </returns>
    public LedgerIndirectTaxDeclJournalTable_RU journalTable(boolean    _forUpdate = false)
    {
        return LedgerIndirectTaxDeclJournalTable_RU::find(this.JournalId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Executed when fields values are changed.
    /// </summary>
    /// <param name="_fieldId">
    ///    The id of the changed field.
    /// </param>
    /// <remarks>
    ///    Actions are triggered by field changes.
    /// </remarks>
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(LedgerIndirectTaxDeclJournalTrans_RU, Approved):
                if (this.Approved == NoYes::Yes)
                {
                    this.Approver = HcmWorker::userId2Worker(curUserId());
                }
                else
                {
                    this.Approver = 0;
                }
                break;

            case fieldNum(LedgerIndirectTaxDeclJournalTrans_RU, BranchId):
                this.OKATO = this.getOkato();
                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (this.Approved && ! this.Approver)
            {
                ret = checkFailed("@SYS67768");
            }

            if (! this.OKATO)
            {
                ret = checkFailed(strFmt("@SYP4860042", this.BranchId));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record in the <c>LedgerIndirectTaxDeclJournalTrans_RU</c> table.
    /// </summary>
    /// <param name="_journalId">
    ///    The ID of the journal.
    /// </param>
    /// <param name="_branchId">
    ///    The ID of the branch.
    /// </param>
    /// <param name="_forUpdate">
    ///    Indicates whether to select the record for update or not.
    /// </param>
    /// <returns>
    ///    The record found in the <c>LedgerIndirectTaxDeclJournalTrans_RU</c> table.
    /// </returns>
    public static LedgerIndirectTaxDeclJournalTrans_RU find(LedgerIndirectTaxDeclJournalId_RU   _journalId,
                                                            BranchId_RU                         _branchId,
                                                            boolean                             _forUpdate = false)
    {
        LedgerIndirectTaxDeclJournalTrans_RU declarationJournalTrans;

        if (_journalId && _branchId)
        {
            declarationJournalTrans.selectForUpdate(_forUpdate);

            select firstonly declarationJournalTrans
                index hint JournalBranchIdx
                where declarationJournalTrans.JournalId == _journalId
                    && declarationJournalTrans.BranchId == _branchId;
        }
        return declarationJournalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record in the <c>LedgerIndirectTaxDeclJournalTrans_RU</c> table by its record ID.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID.
    /// </param>
    /// <param name="_forUpdate">
    ///    Indicates whether to select the record for update or not.
    /// </param>
    /// <returns>
    ///    The record found in the <c>LedgerIndirectTaxDeclJournalTrans_RU</c> table.
    /// </returns>
    public static LedgerIndirectTaxDeclJournalTrans_RU findRecId(RecId _recId, boolean _forUpdate = false)
    {
        LedgerIndirectTaxDeclJournalTrans_RU declarationJournalTrans;

        declarationJournalTrans.selectForUpdate(_forupdate);

        if (_recId)
        {
            select firstonly declarationJournalTrans
                where declarationJournalTrans.RecId == _recId;
        }
        return declarationJournalTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4860021</DeveloperDocumentation>
	<FormRef>LedgerIndirectTaxDeclJournalTrans_RU</FormRef>
	<Label>@SYP4860020</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>BranchId</TitleField1>
	<TitleField2>Status</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>JournalBranchIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>JournalBranchIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>LedgerIndirectTaxSection1DeclTrans_RU</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>LedgerIndirectTaxSection1DeclTrans_RU</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>LedgerIndirectTaxSection2DeclTrans_RU</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>LedgerIndirectTaxSection2DeclTrans_RU</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>LedgerIndirectTaxAppendixDeclTrans_RU</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>LedgerIndirectTaxAppendixDeclTrans_RU</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OKATO</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Approval</Name>
			<Label>@SYS2453</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Approved</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Approver</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OKATO</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Approved</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Approver</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Approved</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Approved</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Approver</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BranchId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>BranchId_RU</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerIndirectTaxDeclJournalId_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OKATO</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>OKATO_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>LedgerIndirectTaxDeclStatus_RU</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JournalBranchIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BranchId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Branches_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Branches_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BranchId</Name>
					<Field>BranchId</Field>
					<RelatedField>BranchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>BranchIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Approver</Name>
					<Field>Approver</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerIndirectTaxDeclJournalTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LedgerIndirectTaxDeclJournalTable_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalId</Name>
					<Field>JournalId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>JournalIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>