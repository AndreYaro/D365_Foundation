<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ShipCarrierStaging</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ShipCarrierStaging extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
        public void initValue()
    {
        super();
        this.Transferred = NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>ShipCarrierStaging</c> table; if not, an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>ShipCarrierStaging</c> table record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RefRecId _recId)
    {
        boolean ret = true;

        if (!ShipCarrierStaging::exist(_recId))
        {
            ret = checkFailed(strFmt(ShipCarrierStaging::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createUpdatePackage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates a package record based on the staging data.
    /// </summary>
    /// <param name="_shipCarrierStaging">
    /// The <c>ShipCarrierStaging</c> table buffer that contains the staging data.
    /// </param>
    /// <param name="_shipCarrierPackage">
    /// The <c>ShipCarrierPackage</c> cursor that is updated or inserted into.
    /// </param>
    /// <param name="_isFirstPackage">
    /// A Boolean value that indicates whether a package is the first package for the sales ID and packing
    /// slip ID combination being processed.
    /// </param>
    /// <param name="_useRowLevelSecurity">
    /// A Boolean value that indicates whether to set the <c>ShipCarrierPackage</c> cursor as temporary.
    /// </param>
    /// <remarks>
    /// If the package record already exists, it will be updated. If RLS is specified, all table reads will
    /// enforce RLS.
    /// </remarks>
    private static void createUpdatePackage(
        ShipCarrierStaging      _shipCarrierStaging,
        ShipCarrierPackage      _shipCarrierPackage,
        boolean                 _isFirstPackage,
        boolean                 _useRowLevelSecurity)
    {
        CustPackingSlipJour         custPackingSlipJour;
        DlvMode                     dlvMode;
        ShipCarrierCompanyAccounts  shipCarrierCompanyAccounts;
        ShipCarrierRate             handlingCharge;
        ShipCarrierRate             otherCharge;
        ShipCarrierName             shipCarrierName;
        ShipCarrierAccountCode      shipCarrierAccountCode;

        // Compute handling and other charges
        handlingCharge = _shipCarrierStaging.HandlingCharge + _shipCarrierStaging.HandlingCharge2;
        otherCharge = _shipCarrierStaging.OtherCharge + _shipCarrierStaging.OtherCharge2;
        if (_isFirstPackage)
        {
            // HandlingCharge3 & OtherCharge3 apply to the shipment as a whole, not per package.
            // Note: Multiple shipments could occur for the same packing slip; hence the ShipCarrierPackage would be
            // updated with the "3" charges once per additional shipment (each time untransfered staging records are processed)
            handlingCharge += _shipCarrierStaging.HandlingCharge3;
            otherCharge += _shipCarrierStaging.OtherCharge3;
        }

        select forupdate firstonly _shipCarrierPackage
        where _shipCarrierPackage.SalesId           == _shipCarrierStaging.SalesId
           && _shipCarrierPackage.PackingSlipId     == _shipCarrierStaging.PackingSlipId;

        if (_shipCarrierPackage.RecId)
        {
            _shipCarrierPackage.PublishedRate   += _shipCarrierStaging.PublishedRate;
            _shipCarrierPackage.ShippingCharge  += _shipCarrierStaging.ShippingCharge;
            _shipCarrierPackage.HandlingCharge  += handlingCharge;
            _shipCarrierPackage.FuelSurcharge   += _shipCarrierStaging.FuelSurcharge;
            _shipCarrierPackage.OtherCharge     += otherCharge;
            _shipCarrierPackage.Weight          += _shipCarrierStaging.Weight;
            _shipCarrierPackage.update();
        }
        else
        {
            // find CustPackingSlipJour
            if (_useRowLevelSecurity)
            {
                custPackingSlipJour.recordLevelSecurity(true);
            }
            select DlvMode, ShipCarrierId from custPackingSlipJour
                where custPackingSlipJour.SalesId       == _shipCarrierStaging.SalesId
                   && custPackingSlipJour.PackingSlipId == _shipCarrierStaging.PackingSlipId;

            // fined DlvMode
            if (_useRowLevelSecurity)
            {
                dlvMode.recordLevelSecurity(true);
                select firstonly dlvMode
                    where dlvMode.Code == custPackingSlipJour.DlvMode;
            }
            else
            {
                dlvMode = DlvMode::find(custPackingSlipJour.DlvMode);
            }
            shipCarrierName = dlvMode.ShipCarrierName;
            shipCarrierAccountCode = dlvMode.ShipCarrierAccountCode;

            // find ShipCarrierCompanyAccounts
            if (_useRowLevelSecurity)
            {
                shipCarrierCompanyAccounts.recordLevelSecurity(true);
                select firstonly shipCarrierCompanyAccounts
                    where   shipCarrierCompanyAccounts.CarrierName  == shipCarrierName
                         && shipCarrierCompanyAccounts.AccountCode  == shipCarrierAccountCode;
            }
            else
            {
                shipCarrierCompanyAccounts = ShipCarrierCompanyAccounts::find(shipCarrierName, shipCarrierAccountCode);
            }

            _shipCarrierPackage.clear();
            _shipCarrierPackage.SalesId         = _shipCarrierStaging.SalesId;
            _shipCarrierPackage.PackingSlipId   = _shipCarrierStaging.PackingSlipId;
            _shipCarrierPackage.ShipDate        = _shipCarrierStaging.ShipDate;
            _shipCarrierPackage.PublishedRate   = _shipCarrierStaging.PublishedRate;
            _shipCarrierPackage.ShippingCharge  = _shipCarrierStaging.ShippingCharge;
            _shipCarrierPackage.HandlingCharge  = handlingCharge;
            _shipCarrierPackage.FuelSurcharge   = _shipCarrierStaging.FuelSurcharge;
            _shipCarrierPackage.OtherCharge     = otherCharge;
            _shipCarrierPackage.Weight          = _shipCarrierStaging.Weight;
            _shipCarrierPackage.CarrierId       = custPackingSlipJour.ShipCarrierId;
            _shipCarrierPackage.CarrierName     = shipCarrierName;
            _shipCarrierPackage.AccountCode     = shipCarrierAccountCode;
            _shipCarrierPackage.CurrencyCode    = shipCarrierCompanyAccounts.CurrencyCode;
            _shipCarrierPackage.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>ShipCarrierStaging</c> table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>ShipCarrierStaging</c> table record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _recId)
    {
        boolean found;

        found = (select firstonly RecId from shipCarrierStaging
                    where shipCarrierStaging.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>ShipCarrierStaging</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>ShipCarrierStaging</c> table record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when the code reads the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>ShipCarrierStaging</c> table; otherwise, an empty record.
    /// </returns>
    public static ShipCarrierStaging find(
        RefRecId            _recId,
        boolean             _forupdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        ShipCarrierStaging  shipCarrierStaging;

        shipCarrierStaging.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            shipCarrierStaging.concurrencyModel(_concurrencyModel);
        }

        select firstonly shipCarrierStaging
            where shipCarrierStaging.RecId == _recId;

        return shipCarrierStaging;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPhysicallyExistingInDB</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the <c>ShipCarrierStaging</c> table physically exists in the database.
    /// </summary>
    /// <returns>
    /// true if the table physically exists in the database; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The table may not yet physically exist in the database during an upgrade scenario.
    /// </remarks>
    public static boolean isPhysicallyExistingInDB()
    {
        SqlDictionary sqlDictionary;

        select firstonly RecId from sqlDictionary
            where sqlDictionary.TabId   == tableNum(ShipCarrierStaging);

        if (sqlDictionary.RecId == 0)
        {
            // The table does not yet physically exist in the database.
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferToMainTables</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates records in the main ship carrier tables, depending on the staging records.
    /// </summary>
    /// <param name="_salesId">
    /// The sales ID of the sales order that has the ship carrier staging records.
    /// </param>
    /// <remarks>
    /// Records are created in the <c>ShipCarrierPackage</c> and <c>ShipCarrierTracking</c> tables.
    /// </remarks>
    public static void transferToMainTables(SalesId  _salesId)
    {
        ShipCarrierStaging      shipCarrierStaging;
        ShipCarrierPackage      shipCarrierPackage;
        ShipCarrierTracking     shipCarrierTracking;
        CustPackingSlipJour     custPackingSlipJour;
        PackingSlipId           prevPackingSlip = '';
        boolean                 isFirstPackage;

        if (!Global::isConfigurationkeyEnabled(configurationKeyNum(ShipCarrier)))
        {
            return;
        }
        ttsbegin;

        while select forupdate shipCarrierStaging
            order by PackingSlipId
            where shipCarrierStaging.SalesId        == _salesId
               && shipCarrierStaging.Transferred    == NoYes::No
            exists join custPackingSlipJour
                where custPackingSlipJour.PackingSlipId     == shipCarrierStaging.PackingSlipId
                   && custPackingSlipJour.SalesId           == _salesId
        {
            // Create/update package
            if (shipCarrierStaging.PackingSlipId != prevPackingSlip)
            {
                isFirstPackage = true;
                prevPackingSlip = shipCarrierStaging.PackingSlipId;
            }
            ShipCarrierStaging::createUpdatePackage(shipCarrierStaging, shipCarrierPackage, isFirstPackage, false);
            isFirstPackage = false;

            shipCarrierTracking.initValue();
            shipCarrierTracking.SalesId        = shipCarrierStaging.SalesId;
            shipCarrierTracking.PackingSlipId  = shipCarrierStaging.PackingSlipId;
            shipCarrierTracking.TrackingNumber = shipCarrierStaging.TrackingNumber;
            shipCarrierTracking.insert();

            shipCarrierStaging.Transferred     = NoYes::Yes;
            shipCarrierStaging.update();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the message to use when a specific record in the <c>ShipCarrierStagging</c> table does not exist.
    /// </summary>
    /// <returns>
    /// The message that indicates a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";  //A record with RecId %1 does not exist.
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ShipCarrier</ConfigurationKey>
	<DeveloperDocumentation>@SYS126973</DeveloperDocumentation>
	<Label>@SYS116850</Label>
	<TableGroup>Framework</TableGroup>
	<TitleField1>PackingSlipId</TitleField1>
	<TitleField2>SalesId</TitleField2>
	<ClusteredIndex>RecId</ClusteredIndex>
	<OccEnabled>No</OccEnabled>
	<PrimaryIndex>RecId</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SaveDataPerPartition>No</SaveDataPerPartition>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingSlipId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Weight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PublishedRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShippingCharge</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HandlingCharge</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OtherCharge</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FuelSurcharge</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Transferred</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TrackingNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS116850</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingSlipId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Weight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PublishedRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShippingCharge</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HandlingCharge</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OtherCharge</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FuelSurcharge</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Transferred</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TrackingNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HandlingCharge2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HandlingCharge3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OtherCharge2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OtherCharge3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WeightText</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PublishedRateText</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShippingChargeText</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HandlingChargeText</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HandlingCharge2Text</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HandlingCharge3Text</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OtherChargeText</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OtherCharge2Text</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OtherCharge3Text</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FuelSurchargeText</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>FuelSurcharge</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierRate</ExtendedDataType>
			<Label>@SYS116810</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FuelSurchargeText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS116810</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>HandlingCharge</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierRate</ExtendedDataType>
			<Label>@SYS116702</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>HandlingCharge2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierRate</ExtendedDataType>
			<Label>@SYS116702</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HandlingCharge2Text</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS116702</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>HandlingCharge3</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierRate</ExtendedDataType>
			<Label>@SYS116702</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HandlingCharge3Text</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS116702</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>HandlingChargeText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS116702</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OtherCharge</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierRate</ExtendedDataType>
			<Label>@SYS116715</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackageId</Name>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>ShipCarrierPackageId</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OtherCharge2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierRate</ExtendedDataType>
			<Label>@SYS116715</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OtherCharge2Text</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS116715</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OtherCharge3</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierRate</ExtendedDataType>
			<Label>@SYS116715</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OtherCharge3Text</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS116715</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OtherChargeText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS116715</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackingSlipId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PackingSlipId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PublishedRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierRate</ExtendedDataType>
			<Label>@SYS116704</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PublishedRateText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS116704</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ShipDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesShippingDateConfirmed</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ShippingCharge</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierRate</ExtendedDataType>
			<Label>@SYS116710</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShippingChargeText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS116710</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TrackingNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ShipCarrierTrackingNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Transferred</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS12615</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Weight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Weight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WeightText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS11575</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>OrderIdPackingSlipIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PackingSlipId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PackingSlipIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PackingSlipId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesId</Name>
					<Field>SalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>