<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashFlowForecastLedgerDimensionReference</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CashFlowForecastLedgerDimensionReference extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>DimensionFocusLedgerDimensionReference</c> table
    ///    exists; if not, a warning message is displayed.
    /// </summary>
    /// <param name="_dimensionFocusLedgerDimensionRefRecId">
    ///    The record ID of the <c>DimensionFocusLedgerDimensionReference</c> record.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(DimensionFocusLedgerDimensionRefRecId  _dimensionFocusLedgerDimensionRefRecId)
    {
        boolean isExisting = true;

        if (!DimensionFocusLedgerDimensionReference::exist(_dimensionFocusLedgerDimensionRefRecId))
        {
            isExisting = checkFailed(strfmt(DimensionFocusLedgerDimensionReference::txtNotExist(), _dimensionFocusLedgerDimensionRefRecId));
        }

        return isExisting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteForDimensionHierarchy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the <c>DimensionFocusLedgerDimensionReference</c> records for the
    /// specified dimension hierarchy.
    /// </summary>
    /// <param name="_dimensionHierarchyRecId">
    /// The record ID of the dimension hierarchy.
    /// </param>
    public static server void deleteForDimensionHierarchy(DimensionHierarchyId _dimensionHierarchyRecId)
    {
        DimensionFocusLedgerDimensionReference dimensionFocusLedgerDimensionReference;

        if (_dimensionHierarchyRecId == 0)
        {
            return;
        }

        delete_from dimensionFocusLedgerDimensionReference
            where dimensionFocusLedgerDimensionReference.FocusDimensionHierarchy == _dimensionHierarchyRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>DimensionFocusLedgerDimensionReference</c> table
    ///    exists.
    /// </summary>
    /// <param name="_dimensionFocusLedgerDimensionRefRecId">
    ///    The record ID of the <c>DimensionFocusLedgerDimensionReference</c> record.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(DimensionFocusLedgerDimensionRefRecId _dimensionFocusLedgerDimensionRefRecId)
    {
        DimensionFocusLedgerDimensionReference dimensionFocusLedgerDimensionReference;

        select firstonly dimensionFocusLedgerDimensionReference
            where dimensionFocusLedgerDimensionReference.RecId == _dimensionFocusLedgerDimensionRefRecId;

        return dimensionFocusLedgerDimensionReference != null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Reads the <c>DimensionFocusLedgerDimensionReference</c> table for the specified record ID.
    /// </summary>
    /// <param name="_dimensionFocusLedgerDimensionRefRecId">
    ///    The unique record ID to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    An optional value that is used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    ///    A buffer that contains the <c>DimensionFocusBalance</c> table.
    /// </returns>
    public static DimensionFocusLedgerDimensionReference find(
        DimensionFocusLedgerDimensionRefRecId _dimensionFocusLedgerDimensionRefRecId,
        boolean _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        DimensionFocusLedgerDimensionReference dimensionFocusLedgerDimensionReference;

        dimensionFocusLedgerDimensionReference.selectForUpdate(_forUpdate);

        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            dimensionFocusLedgerDimensionReference.concurrencyModel(_concurrencyModel);
        }

        select firstonly dimensionFocusLedgerDimensionReference
            where dimensionFocusLedgerDimensionReference.RecId == _dimensionFocusLedgerDimensionRefRecId;

        return dimensionFocusLedgerDimensionReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByFocusTransactionLedgerDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>DimensionFocusLedgerDimensionReference</c> table.
    /// </summary>
    /// <param name="_focusLedgerDimension">
    ///    The record ID of the related <c>DimensionAttributeValueCombination</c> table.
    /// </param>
    /// <param name="_accountEntryLedgerDimension">
    ///    The record ID of the related <c>DimensionAttributeValueCombination</c> table.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    An optional value that is used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    ///    A record in the <c>DimensionFocusLedgerDimensionReference</c> table; otherwise, an empty record.
    /// </returns>
    public static DimensionFocusLedgerDimensionReference findByFocusTransactionLedgerDimensions(
        LedgerDimensionAccount _focusLedgerDimension,
        LedgerDimensionAccount _accountEntryLedgerDimension,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        DimensionFocusLedgerDimensionReference dimensionFocusLedgerDimensionReference;

        dimensionFocusLedgerDimensionReference.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            dimensionFocusLedgerDimensionReference.concurrencyModel(_concurrencyModel);
        }

        select firstonly dimensionFocusLedgerDimensionReference
            where dimensionFocusLedgerDimensionReference.FocusLedgerDimension == _focusLedgerDimension
               && dimensionFocusLedgerDimensionReference.AccountEntryLedgerDimension == _accountEntryLedgerDimension;

        return dimensionFocusLedgerDimensionReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CashFlowForecasting</ConfigurationKey>
	<DeveloperDocumentation>@CashManagement:CashFlowForecastLedgerDimensionReferenceDevDoc</DeveloperDocumentation>
	<Label>@CashManagement:CashFlowForecastLedgerDimensionReference</Label>
	<TitleField1>AccountEntryLedgerDimension</TitleField1>
	<TitleField2>MainAccount</TitleField2>
	<ReplacementKey>FocusAccountEntryDimensionsIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountEntryLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BalanceDefaultDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MainAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BalanceDefaultDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MainAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountEntryLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS35583</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountEntryLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AccountEntryLedgerDimension</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MainAccount</Name>
			<ExtendedDataType>MainAccountRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BalanceDefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionValueSet</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DimensionAttributeSet</Name>
			<ExtendedDataType>DimensionEnumeration</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FocusAccountEntryDimensionsIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AccountEntryLedgerDimension</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MainAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BalanceDefaultDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BalanceDefaultsIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>MainAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BalanceDefaultDimension</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountEntryLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AccountEntryLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>AccountEntryLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerDimensionReference</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountEntryLedgerDimension</Name>
					<Field>AccountEntryLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MainAccount</Name>
					<Field>MainAccount</Field>
					<RelatedField>MainAccount</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BalanceDefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Balance</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BalanceDefaultDimension</Name>
					<Field>BalanceDefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>MainAccount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MainAccount</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>MainAccount</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>Balance</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MainAccount</Name>
					<Field>MainAccount</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>