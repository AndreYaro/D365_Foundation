<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQVendLink</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchRFQVendLink extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>contactPerson</Name>
				<Source><![CDATA[
    ContactPerson contactPerson(boolean update = false)
    {
        return ContactPerson::find(this.ContactPersonId, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>contactPersonName</Name>
				<Source><![CDATA[
    display ContactPersonName  contactPersonName()
    {
        return ContactPerson::name(this.ContactPersonId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        PurchRFQCaseTable rfqCaseTable = PurchRFQCaseTable::find(this.rfqCaseId, true);

        ttsbegin;
        
        PurchRFQDeleteDocuRef::deleteDocuRef(this);

        super();
        if (rfqCaseTable)
            rfqCaseTable.updateStatus();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editContactPersonName</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    edit ContactPersonName  editContactPersonName(boolean _set, ContactPersonName _name)
    {
        ContactPersonName   name = _name;
        ContactPerson       contactPerson;
        DirPartyTable       partyTable;
        ContactPersonId     contactPersonId;
        VendTable           vendTable;
        if (_set)
        {
            if (name)
            {
                contactPersonId = this.ContactPersonId;
                contactPerson = ContactPerson::find(_name);
                this.ContactPersonId = contactPerson.ContactPersonId;
                if (this.ContactPersonId)
                {
                    name = contactPerson.personName();
                }
                else
                {
                    select contactPerson join AccountNum, Party from vendTable
                            where vendTable.AccountNum ==   this.VendAccount
                            && vendTable.Party == contactPerson.ContactForParty
                        join Name
                        from partyTable
                            where partyTable.RecId == contactPerson.Party &&
                                  partyTable.Name like name;
                    if (contactPerson)
                    {
                        this.ContactPersonId=contactPerson.ContactPersonId;
                        name=partyTable.Name;
                    }
                }
                if (contactPersonId != this.ContactPersonId)
                {
                    this.initFromContactPerson();
                    if (FormDataUtil::getFormDataSource(this))
                        FormDataUtil::getFormDataSource(this).refresh();
                }
            }
            else
            {
                this.ContactPersonId = '';
            }
        }
        else
        {
            name = this.contactPersonName();
        }
        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromContactPerson</Name>
				<Source><![CDATA[
    void initFromContactPerson(ContactPerson _contactPerson = this.contactPerson())
    {
        this.Phone = _contactPerson.phone();
        this.Email = _contactPerson.email();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendTable</Name>
				<Source><![CDATA[
    void initFromVendTable(VendTable _vendTable)
    {
        this.VendAccount = _vendTable.AccountNum;
        if (PurchParameters::find().IsSupplierShipmentDatesEnabled)
        {
            this.ShipCalendarId = _vendTable.PurchaseShipCalendarId;
        }
        if (_vendTable.ContactPersonId)
        {
            this.ContactPersonId    = _vendTable.ContactPersonId;
            this.initFromContactPerson();
        }
        else
        {
            this.Phone = _vendTable.phone();
            this.Email = _vendTable.email();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            this.SalesPurchOperationType_BR = BrazilParameters::find().PurchRFQOperationType;
        }
        // </GBR>
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        PurchRFQCaseTable rfqCaseTable = PurchRFQCaseTable::find(this.rfqCaseId, true);

        ttsbegin;

        super();
        if (rfqCaseTable)
            rfqCaseTable.updateStatus();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPortalVendor</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the vendor on the current <c>PurchRFQVendLink</c> record has an active related
    ///    user.
    /// </summary>
    /// <returns>
    ///    true if the vendor has an active related user; otherwise false.
    /// </returns>
    [SysClientCacheDataMethodAttribute (false)]
    public display PurchRFQVendorPortal isPortalVendor()
    {
        DirPersonUser           dirPersonUser;
        UserInfo                userInfo;
        UserExternalParty       dirPersonExternalParty;
        VendTable               vendTable;

        if (this.VendAccount != "")
        {
            select  firstonly RecId
            from    vendTable
            where   vendTable.AccountNum == this.VendAccount
            exists join RecId
            from    dirPersonExternalParty
            where   dirPersonExternalParty.ExternalParty == vendTable.Party
                    && dirPersonExternalParty.ExternalEntityType == UserExternalPartyEntityType::Vendor
                    && dirPersonExternalParty.LegalEntity == CompanyInfo::findDataArea(curext()).RecId
            exists join RecId
            from    dirPersonUser
            where   dirPersonUser.User == dirPersonExternalParty.User
            exists join RecId
            from    userInfo
            where   userInfo.Id     == dirPersonUser.User &&
                    userInfo.Enable == true;
        }

        return (vendTable.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchRFQCaseTable_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find PurcRFQCaseTable related to this link
    /// </summary>
    /// <param name="update">
    /// if the selection should be for update or not
    /// </param>
    /// <returns>
    /// returns PurcRFQCaseTable record
    /// </returns>
    public PurchRFQCaseTable purchRFQCaseTable_BR(boolean update = false)
    {
        return PurchRFQCaseTable::find(this.rfqCaseId, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>statusHigh</Name>
				<Source><![CDATA[
    display PurchRFQStatus  statusHigh()
    {
        if (!this.RecId)
            return PurchRFQStatus::Created;

        return PurchRFQTable::findRFQCaseId(this.rfqCaseId, this.VendAccount).StatusHigh;
    }

]]></Source>
			</Method>
			<Method>
				<Name>statusLow</Name>
				<Source><![CDATA[
    display PurchRFQStatus  statusLow()
    {
        if (!this.RecId)
            return PurchRFQStatus::Created;

        return PurchRFQTable::findRFQCaseId(this.rfqCaseId, this.VendAccount).StatusLow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        VendTable   vendTable;
        boolean     ret;

        ret = super(_fieldIdToCheck);
        switch (_fieldIdToCheck)
        {
            case fieldNum(PurchRFQVendLink, VendAccount):
                switch (PurchRFQCaseTable::find(this.rfqCaseId).RFQType)
                {
                    case PurchRFQType::Purch :
                        ret = !VendTable::isVendorBlocked(this.VendAccount, CustVendorBlocked::PurchOrder);
                        break;
                    case PurchRFQType::PurchReq :
                        ret = !VendTable::isVendorBlocked(this.VendAccount, CustVendorBlocked::Requisition);
                        break;
                    default :
                        ret = !VendTable::isVendorBlocked(this.VendAccount, CustVendorBlocked::All);
                        break;
                }               
            break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendorEmail</Name>
				<Source><![CDATA[
    display Email vendorEmail()
    {
        return this.vendTable().email();
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendorPhone</Name>
				<Source><![CDATA[
    display VendPhone vendorPhone()
    {
        return this.vendTable().phone();
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendTable</Name>
				<Source><![CDATA[
    VendTable vendTable(boolean update = false)
    {
        return VendTable::find(this.VendAccount, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doVendorExistForRFQCase</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether current vendors exist for a given RFQCaseId.
    /// </summary>
    /// <param name="_rfqCaseId">
    /// The RFQCaseId for which vendor is to be looked for.
    /// </param>
    /// <param name="_vendAccount">
    /// The VendAccountto be looked for.
    /// </param>
    /// <returns>
    /// Returns true if vendors exist for the <c>PurchRFQCaseTable</c>; otherwise, false.
    /// </returns>
    public static boolean doVendorExistForRFQCase(PurchRFQCaseId _rfqCaseId,  VendAccount _vendAccount)
    {
        PurchRFQVendLink    purchRFQVendLink;

        if (_rfqCaseId && _vendAccount)
        {
            select RecId from purchRFQVendLink
                where purchRFQVendLink.RFQCaseId == _rfqCaseId
                && purchRFQVendLink.VendAccount == _vendAccount;
        }

        return (purchRFQVendLink.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doVendorsExistForRFQCase</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether any vendors exist for a given RFQCaseId.
    /// </summary>
    /// <param name="_rfqCaseId">
    /// The RFQCaseId for which vendors are to be looked for.
    /// </param>
    /// <returns>
    /// Returns true if vendors exist for the <c>PurchRFQCaseTable</c>; otherwise, false.
    /// </returns>
    public static boolean doVendorsExistForRFQCase(PurchRFQCaseId _rfqCaseId)
    {
        PurchRFQVendLink    purchRFQVendLink;

        if (_rfqCaseId)
        {
            select firstonly RecId from purchRFQVendLink
                where purchRFQVendLink.rfqCaseId == _rfqCaseId;
        }

        return (purchRFQVendLink.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static PurchRFQVendLink find(PurchRFQCaseId _rfqCaseId, VendAccount _vendAccount = '', boolean _forUpdate = false)
    {
        PurchRFQVendLink    purchRFQVendLink;

        if (_rfqCaseId)
        {
            purchRFQVendLink.selectForUpdate(_forUpdate);

            if (_vendAccount)
            {
                select firstonly purchRFQVendLink
                    index hint PurchRFQCaseTable
                    where purchRFQVendLink.rfqCaseId == _rfqCaseId
                       && purchRFQVendLink.VendAccount == _vendAccount;
            }
            else
            {
                select firstonly purchRFQVendLink
                    index hint PurchRFQCaseTable
                    where purchRFQVendLink.rfqCaseId == _rfqCaseId;
            }
        }

        return purchRFQVendLink;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bidReceived</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if the bid for the current RFQ is received.
    /// </summary>
    /// <returns>
    /// A boolean value that indicates if bid for current RFQ is received.
    /// </returns>
    public display PurchRFQBidReceived bidReceived()
    {
        return this.statusHigh() >= PurchRFQStatus::Received;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreatePurchRFQVendLink</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a record in the <c>PurchRFQVendLink</c> table if one not found.
    /// </summary>
    /// <param name = "_purchRFQCaseId">RFQ case ID</param>
    /// <param name = "_vendTable">a <c>VendTable</c> record</param>
    /// <returns>
    /// Returns a <c>PurchRFQVendLink</c> record
    /// </returns>
    public static PurchRFQVendLink findOrCreatePurchRFQVendLink(PurchRFQCaseId _purchRFQCaseId, VendTable _vendTable)
    {
        if (_purchRFQCaseId && _vendTable)
        {
            PurchRFQVendLink purchRFQVendLink = PurchRFQVendLink::find(_purchRFQCaseId, _vendTable.AccountNum);

            if (!purchRFQVendLink)
            {
                ttsbegin;
                purchRFQVendLink.clear();
                purchRFQVendLink.initValue();
                purchRFQVendLink.rfqCaseId = _purchRFQCaseId;

                purchRFQVendLink.initFromVendTable(_vendTable);

                purchRFQVendLink.insert();
                ttscommit;
            }

            return purchRFQVendLink;
        }
        else
        {
            throw error(strFmt("@SYS54195", tableStaticMethodStr(PurchRFQVendLink, findOrCreatePurchRFQVendLink)));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124580</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS102692</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>VendAccount</TitleField1>
	<TitleField2>RFQCaseId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>PurchRFQCaseTable</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>PurchRFQCaseTable</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>PrintMgmtDocInstance</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>PrintMgmtDocInstance</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RFQCaseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FiscalInformation_BR</Name>
			<Label>@GLS56</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesPurchOperationType_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Link</Name>
			<Label>@SYS57785</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RFQCaseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Phone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Email</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipCalendarId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax_IN</Name>
			<Label>@GLS5536</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesTaxFormTypes_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPersonId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ContactPersonId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Email</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Email</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Phone</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendPhone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RFQCaseId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQCaseId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesPurchOperationType_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesPurchOperationTypeRecId_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesTaxFormTypes_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesTaxFormTypesRecId_IN</ExtendedDataType>
			<Label>@GLS5518</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipCalendarId</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>PurchVendorShipCalendarId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PurchRFQCaseTable</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>VendAccount</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RFQCaseId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SalesTaxFormTypes_INIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesTaxFormTypes_IN</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SalesPurchOperationType_BRIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesPurchOperationType_BR</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ContactPerson</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ContactPerson</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ContactPerson_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ContactPerson_1_PurchRFQVendLink</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContactPersonId</Name>
					<SourceEDT>ContactPersonId</SourceEDT>
					<Field>ContactPersonId</Field>
					<RelatedField>ContactPersonId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContactPersonId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchRFQCaseTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PurchRFQCaseTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PurchRFQCaseTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>PurchRFQCaseTable_PurchRFQVendLink</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RFQCaseId</Name>
					<SourceEDT>PurchRFQCaseId</SourceEDT>
					<Field>RFQCaseId</Field>
					<RelatedField>RFQCaseId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RFQCaseIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesPurchOperationType_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesPurchOperationType_BR</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesPurchOperationType_BR</Name>
					<Field>SalesPurchOperationType_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTaxFormTypes_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTaxFormTypes_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesTaxFormTypes_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesTaxFormTypes_IN_PurchRFQVendLink</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesTaxFormTypes_IN</Name>
					<Field>SalesTaxFormTypes_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable_1</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>VendTable_1_PurchRFQVendLink</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccount</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>VendAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>