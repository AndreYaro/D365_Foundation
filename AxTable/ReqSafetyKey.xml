<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqSafetyKey</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqSafetyKey extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>breakEvenDate</Name>
				<Source><![CDATA[
    TransDate breakEvenDate(TransDate todaysDate)
    {
        if (this.Fixed)
        {
            return this.FixedDate ? this.FixedDate : DateTimeUtil::getStartOfYearDate(Global::currentUserLanguage(), todaysDate);
        }

        return todaysDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    void initValue()
    {
        this.Fixed = NoYes::Yes;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    void insert()
    {
        if (!this.Fixed)
            this.FixedDate = dateNull();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    void update()
    {
        if (!this.Fixed)
            this.FixedDate = dateNull();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(ReqSafetyKeyId reqSafetyKeyId)
    {
        if (reqSafetyKeyId && !ReqSafetyKey::exist(reqSafetyKeyId))
            return checkFailed(strfmt(ReqSafetyKey::txtNotExist(),reqSafetyKeyId));
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean  exist(ReqSafetyKeyId  reqSafetyKeyId)
    {
        return reqSafetyKeyId && (select firstonly reqSafetyKey
                index hint KeyIdx
                where reqSafetyKey.SafetyKeyId == reqSafetyKeyId

               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static ReqSafetyKey find(ReqSafetyKeyId     reqSafetyKeyId,
                             boolean            update = false)
    {
        ReqSafetyKey  reqSafetyKey;

        reqSafetyKey.selectForUpdate(update);

        if (reqSafetyKeyId)
            select firstonly reqSafetyKey
                index hint KeyIdx
                where reqSafetyKey.SafetyKeyId == reqSafetyKeyId;

        return reqSafetyKey;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    static Name name(ReqSafetyKeyId reqSafetyKeyId)
    {
        return ReqSafetyKey::find(reqSafetyKeyId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@SYS58033";
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || ReqEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Req</ConfigurationKey>
	<DeveloperDocumentation>@SYS124232</DeveloperDocumentation>
	<Label>@SYS58030</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>SafetyKeyId</TitleField1>
	<TitleField2>Name</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>KeyIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>MasterPlanning</Modules>
	<PrimaryIndex>KeyIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>ReqSafetyLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>ReqSafetyLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SafetyKeyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Fixed</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Fixed</Name>
			<Label>@SYS7409</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Fixed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SafetyKeyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Fixed</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SCM:UseEffectiveDate</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FixedDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqFixedDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SafetyKeyId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqSafetyKeyId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KeyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SafetyKeyId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>AllocateKeyMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Id</MapField>
					<MapFieldTo>SafetyKeyId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Name</MapField>
					<MapFieldTo>Name</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations />
	<StateMachines />
</AxTable>