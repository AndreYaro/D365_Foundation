<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createDefault</Name>
				<Source><![CDATA[
    void createDefault()
    {
        ReqParameters   reqParameters;

        ttsbegin;

        this.initValue();
        this.ReqGroupId  = "@SYS3815";
        this.Name        = "@SYS26467";

        reqParameters = ReqParameters::find(true);
        if (reqParameters.RecId)
        {
            if (! ReqGroup::find(this.ReqGroupId))
                this.insert();
            else
                this.data(ReqGroup::find(this.ReqGroupId));

            reqParameters.StandardReqGroupId = this.ReqGroupId;
            reqParameters.update();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.CovRule                 = ReqCovType::Req;

        this.MaxNegativeDays         = ReqGroup::defaultNegativeDays(this.CovRule);
        this.MaxPositiveDays         = ReqGroup::defaultPositiveDays(this.CovRule);

        this.FuturesTimeFence        = 100;
        this.ExplosionTimeFence      = 100;
        this.CapacityTimeFence       = 100;
        this.LockingTimeFence        = 0;
        this.CovTimeFence            = 100;
        this.MasterPlanTimeFence     = 100;
        this.AuthorizationTimeFence  = 0;

        this.AutoProdStatus          = this.getFirstLegalProdStatusTypeWhenFirmingIsMadeAutomatically();

        // actionsetting

        this.ActionCalc              = NoYes::Yes;
        this.ActionTimeFence         = 100;
        this.ActionAdvance           = NoYes::Yes;
        this.ActionAppreciate        = NoYes::Yes;
        this.ActionPostpone          = NoYes::Yes;
        this.ActionDepreciate        = NoYes::Yes;
        this.ActionDerived           = NoYes::Yes;

        this.FuturesCalc             = NoYes::Yes;

        this.ReduceForecastWithIntercompanyOrders   = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(ReqGroup, CovRule):
                break;

            case fieldStr(ReqGroup, IssueMargin):
                if (this.IssueMargin < 0)
                    return checkFailed("@SYS53966");

                break;
            case fieldStr(ReqGroup, ReceiptMargin):
                if (this.ReceiptMargin < 0)
                    return checkFailed("@SYS53966");

                break;
            case fieldStr(ReqGroup, OrderMargin):
                if (this.OrderMargin < 0)
                    return checkFailed("@SYS53966");

                break;
            case fieldStr(ReqGroup, MaxNegativeDays):
                if (this.MaxNegativeDays < 0)
                    return checkFailed("@SYS53966");

                break;
            case fieldStr(ReqGroup, MaxPositiveDays):
                if (this.MaxPositiveDays < 0)
                    return checkFailed("@SYS53966");

                break;
            case fieldStr(ReqGroup, ActionPostponeMargin):
                if (this.ActionPostponeMargin < 0)
                    return checkFailed("@SYS53966");

                break;
            case fieldStr(ReqGroup, ActionAdvanceMargin):
                if (this.ActionAdvanceMargin < 0)
                    return checkFailed("@SYS53966");

                break;
            
            case fieldStr(ReqGroup, ActionTimeFence),
                 fieldStr(ReqGroup, FuturesTimeFence),
                 fieldStr(ReqGroup, ExplosionTimeFence),
                 fieldStr(ReqGroup, CapacityTimeFence),
                 fieldStr(ReqGroup, CovTimeFence),
                 fieldStr(ReqGroup, LockingTimeFence),
                 fieldStr(ReqGroup, MasterPlanTimeFence),
                 fieldStr(ReqGroup, AuthorizationTimeFence):

                if (this.(fieldName2Id(this.TableId, _fieldName)) < 0)
                {
                    return checkFailed("@SYS53966");
                }

                if (ReqCheckFieldsTimeFenceLimitFlight::instance().isEnabled())
                {
                    ret = ret && ReqPlanSched::checkTimeFenceLimit(this.(fieldName2Id(this.TableId, _fieldName)));
                }
                break;

            case fieldStr(ReqGroup, TimeFenceBackRequisition):
              
                if (ReqCheckFieldsTimeFenceLimitFlight::instance().isEnabled())
                {
                    ret = ret && ReqPlanSched::checkTimeFenceLimit(this.(fieldName2Id(this.TableId, _fieldName)));
                }
                break;
                
            case fieldStr(ReqGroup, CovPeriod):
                if (this.CovPeriod < 0)
                    return checkFailed("@SYS53966");

                break;

            case fieldStr(ReqGroup, PeriodTemplate):
                if (   this.PeriodTemplate
                    && this.DataAreaId != CompanyInfo::find(false,WorkPeriodTemplate::find(this.PeriodTemplate).LegalEntity).DataArea)
                {
                    return checkFailed("@SYS133265");
                }
                break;

            case fieldStr(ReqGroup, AutoProdStatus):
                ProdTable prodTable;

                prodTable.ProdStatus = this.AutoProdStatus;

                if (!prodTable.status().autoAuthorization())
                {
                    return checkFailed(strFmt("@SCMPlanning:ReqGroupIllegalAutoProdStatus", this.AutoProdStatus));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if ((this.CovRule        == ReqCovType::MinMax)  &&
            (this.MaxPositiveDays < this.CovTimeFence)   &&
             FormDataUtil::isFormDataSource(this))
        {
            warning("@SYS83611", SysHelpPath::applField(tableStr(ReqGroup), identifierStr(MaxPositiveDays)),
                SysInfoAction_TableField::newBufferField(this, fieldNum(ReqGroup, MaxPositiveDays)));
        }
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(ReqGroupId reqGroupId)
    {
        if (reqGroupId    && ! ReqGroup::exist(reqGroupId))
            return checkFailed(strFmt(ReqGroup::txtNotExist(),reqGroupId));

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultId</Name>
				<Source><![CDATA[
    static ReqGroupId defaultId(
        ItemId              _itemId,
        ReqCovInventDimId   _covInventDimId
        )
    {
        ReqItemTable reqItemTable = ReqItemTable::find(_itemId,_covInventDimId);

        return ReqGroup::defaultTable(InventTable::find(_itemId).ReqGroupId, reqItemTable.ItemCovFieldsActive ? reqItemTable.ReqGroupId : '').ReqGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultNegativeDays</Name>
				<Source><![CDATA[
    static ReqMaxNegativeDays defaultNegativeDays(ReqCovRule _reqCovRule)
    {
        return 2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPositiveDays</Name>
				<Source><![CDATA[
    static ReqMaxPositiveDays defaultPositiveDays(ReqCovRule _reqCovRule)
    {
        if (_reqCovRule == ReqCovType::MinMax)
        {
            return 365;
        }

        return 100;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultTable</Name>
				<Source><![CDATA[
    static ReqGroup defaultTable(
        ReqGroupId      _reqGroupIdItem         = '',   // from InventTable
        ReqGroupId      _reqGroupIdItemCov      = ''    // from ReqItemTable
        )
    {
        ReqGroup reqGroup;

        if (_reqGroupIdItemCov)
        {
            reqGroup = ReqGroup::find(_reqGroupIdItemCov);

            if (! reqGroup.RecId)
                info(strFmt("@SYS75198",_reqGroupIdItemCov));
        }

        if (! reqGroup.ReqGroupId && _reqGroupIdItem)
        {
            reqGroup = ReqGroup::find(_reqGroupIdItem);

            if (! reqGroup.RecId)
                info(strFmt("@SYS75199",_reqGroupIdItem));
        }

        if (! reqGroup.ReqGroupId)
            reqGroup = ReqGroup::find(ReqParameters::find().StandardReqGroupId);

        if (! reqGroup.RecId)
            reqGroup.createDefault();

        return reqGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(ReqGroupId   reqGroupId)
    {
        return reqGroupId && (select firstonly reqGroup
                    index hint GroupIdx
                    where reqGroup.ReqGroupId   == reqGroupId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>ReqGroup</c> record based on a specified <c>ReqGroupId</c> value.
    /// </summary>
    /// <param name="_reqGroupId">
    /// A string that contains the coverage group ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to select the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>ReqGroup</c> record; otherwise, an empty record.
    /// </returns>
    static ReqGroup find(
        ReqGroupId  _reqGroupId,
        boolean     _forUpdate = false)
    {
        ReqGroup reqGroup;

        reqGroup.selectForUpdate(_forUpdate);

        if (_reqGroupId)
        {
            select firstonly reqGroup
                index hint GroupIdx
                where reqGroup.ReqGroupId   == _reqGroupId;
        }

        return reqGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    static Name name(ReqGroupId reqGroupId)
    {
        return ReqGroup::find(reqGroupId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@SYS24770";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFirstLegalProdStatusTypeWhenFirmingIsMadeAutomatically</Name>
				<Source><![CDATA[
    private ProdStatus getFirstLegalProdStatusTypeWhenFirmingIsMadeAutomatically()
    {
        ProdTable   prodTable;
        SysDictEnum sysDictEnum;
        Counter     i = 0;
        int         value;

        sysDictEnum = new SysDictEnum(enumNum(ProdStatus));
        value       = sysDictEnum.firstValue();

        while (i < enumCnt(ProdStatus))
        {
            prodTable.clear();
            prodTable.ProdStatus = value;

            if (prodTable.status().autoAuthorization())
            {
                break;
            }

            value = sysDictEnum.nextValue(value);
            i++;
        }

        if (i == enumCnt(ProdStatus))
        {
            throw error("@SYS24603");
        }

        return prodTable.ProdStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefReqGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the coverage group form for the coverage group with the specified ID.
    /// </summary>
    /// <param name="_reqGroupId">The ID of the coverage group.</param>
    public static void jumpRefReqGroupId(ReqGroupId _reqGroupId)
    {
        if (_reqGroupId)
        {
            ReqGroup reqGroup = ReqGroup::find(_reqGroupId);

            if (reqGroup)
            {
                Args args = new Args();
                args.lookupRecord(reqGroup);

                MenuFunction menuFunction = new MenuFunction(menuitemDisplayStr(ReqGroup), MenuItemType::Display);
                menuFunction.run(args);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || ReqEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;
    
        ret = super();

        RetailAttributesLegalEntityLookup retailAttributesLegalEntityLookup;

        select firstonly retailAttributesLegalEntityLookup
            where retailAttributesLegalEntityLookup.GroupCoverage == this.ReqGroupId
                && retailAttributesLegalEntityLookup.LegalEntity == CompanyInfo::current();

        if (retailAttributesLegalEntityLookup)
        {
            return checkFailed(strfmt(("@Retail:RetailAttributesLegalEntityLookupPropertiesDeleteValidation"), this.ReqGroupId, EcoResCategory::find(retailAttributesLegalEntityLookup.Category).Name));
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Req</ConfigurationKey>
	<DeveloperDocumentation>@SYS124118</DeveloperDocumentation>
	<FormRef>ReqGroup</FormRef>
	<Label>@SYS23873</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ReqGroupId</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>GroupIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>MasterPlanning</Modules>
	<PrimaryIndex>GroupIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DeleteAction1</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>ReqGroup</Relation>
			<Table>ReqItemTable</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReqGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalendarId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CovTimeFence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxPositiveDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxNegativeDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActionCalc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FuturesCalc</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ActionMessage</Name>
			<Label>@Sys2041</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActionCalc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActionTimeFence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActionDepreciate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActionAppreciate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActionBasicDateType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActionPostpone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActionAdvance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActionPostponeMargin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActionAdvanceMargin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActionDerived</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Calendar</Name>
			<Label>@SYS11839</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalendarId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Forecast</Name>
			<Label>@SYS13699</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MasterPlanTimeFence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReqReduceKeyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ForecastReducedBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReduceForecastWithIntercompanyOrders</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustForecastIncludedInOverallForecast</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FuturesMessage</Name>
			<Label>@Sys2417</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FuturesCalc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FuturesTimeFence</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@Sys5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReqGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ItemCoverage</Name>
			<Label>@Sys21672</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CovRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CovPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CovTimeFence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxNegativeDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxPositiveDays</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OnHand</Name>
			<Label>@SYS119089</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OnHandConsumptionStrategy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MustUseLatestPossibleSupplyFirst</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BOMVersionReq</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RouteVersionReq</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodTemplate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PlannedOrder</Name>
			<Label>@SYS8597</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AutoProdStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AuthorizationTimeFence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LockingTimeFence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExplosionTimeFence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CapacityTimeFence</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Requisition</Name>
			<Label>@SYS4050041</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TimeFenceBackRequisition</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SafetyMargin</Name>
			<Label>@Sys19505</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReceiptMargin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IssueMargin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderMargin</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActionAdvance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>ReqSchedAction</ConfigurationKey>
			<Label>@SYS7604</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ActionAdvanceMargin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarginAdvance</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActionAppreciate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>ReqSchedAction</ConfigurationKey>
			<Label>@SYS77761</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActionBasicDateType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ActionBasicDateType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActionCalc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>ReqSchedAction</ConfigurationKey>
			<Label>@SYS2041</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActionDepreciate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>ReqSchedAction</ConfigurationKey>
			<Label>@SYS15899</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActionDerived</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>ReqSchedAction</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS70656</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActionPostpone</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>ReqSchedAction</ConfigurationKey>
			<Label>@SYS16366</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ActionPostponeMargin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarginPostpone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ActionTimeFence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TimeFenceAction</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AuthorizationTimeFence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TimeFenceAuthorization</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoProdStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS22466</Label>
			<EnumType>ProdStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BOMVersionReq</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>BOMVersion</ConfigurationKey>
			<Label>@SYS27540</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CalendarId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqCalendarId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CapacityTimeFence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TimeFenceCapacity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CovPeriod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqCovPeriod</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CovRule</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ReqCovType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CovTimeFence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TimeFenceCoverage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustForecastIncludedInOverallForecast</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqCustForecastIncludedInOverallForecast</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ExplosionTimeFence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TimeFenceExplosion</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ForecastReducedBy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ReqForecastReducedBy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FuturesCalc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SCM:CalculateDelays</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>FuturesTimeFence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TimeFenceFutures</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>IssueMargin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarginIssue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>LockingTimeFence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TimeFenceLocking</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MasterPlanTimeFence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TimeFenceMasterPlan</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MaxNegativeDays</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqMaxNegativeDays</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MaxPositiveDays</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqMaxPositiveDays</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OnHandConsumptionStrategy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ReqOnHandConsumptionStrategy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>OrderMargin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarginOrder</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PeriodTemplate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WorkPeriodTemplateRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ReceiptMargin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MarginReceipt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReduceForecastWithIntercompanyOrders</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqReduceForecastWithIntercompanyOrders</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReqGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReqReduceKeyId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqReduceKeyId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RouteVersionReq</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>ProdRouting</ConfigurationKey>
			<Label>@SYS27542</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TimeFenceBackRequisition</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TimeFenceBackRequisition</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MustUseLatestPossibleSupplyFirst</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqMustUseLatestPossibleSupplyFirst</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>GroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ReqGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReqReduceKey</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ReqReduceKey</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReqReduceKeyId</Name>
					<Field>ReqReduceKeyId</Field>
					<RelatedField>ReduceKeyId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>KeyIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkCalendarTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WorkCalendarTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CalendarId</Name>
					<Field>CalendarId</Field>
					<RelatedField>CalendarId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CalendarIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkPeriodTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WorkPeriodTemplate</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PeriodTemplate</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CoverageGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PeriodTemplate</Name>
					<Field>PeriodTemplate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>