<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsRebateItem</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PdsRebateItem extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayItemGTIN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the GTIN of the rebate item.
    /// </summary>
    /// <returns>
    /// The GTIN of the rebate item.
    /// </returns>
    public display GlobalTradeItemNumber displayItemGTIN()
    {
        return InventItemGTIN::find(this.ItemID, this.InventDimID, this.UnitID).GlobalTradeItemNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayItemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the item name for the item with the <c>itemId</c> of the current
    /// <c>PdsRebateItem</c> table record.
    /// </summary>
    /// <returns>
    /// The item name for the item with the <c>itemId</c> of the current
    /// <c>PdsRebateItem</c> table record.
    /// </returns>
    public display ItemName displayItemName()
    {
        return InventTable::find(this.ItemID).itemName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayNetWeight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the net weight for the current item in the <c>PdsRebateItem</c> table.
    /// </summary>
    /// <returns>
    /// Displays the net weight for the current item in the <c>PdsRebateItem</c> table.
    /// </returns>
    public display ItemNetWeight displayNetWeight()
    {
        return InventTable::find(this.ItemID).NetWeight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the desired <c>PdsRebateItem</c> record based on the passed parameters.
    /// </summary>
    /// <param name="_agreementRecId">
    /// The <c>RecId</c> of the rebate agreement record for which the <c>PdsRebateItem</c> table should
    /// be searched.
    /// </param>
    /// <param name="_itemId">
    /// The <c>ItemId</c> for which to search the <c>PdsRebateItem</c> table.
    /// </param>
    /// <param name="_inventDimId">
    /// The <c>InventDimId</c> for which to search the <c>PdsRebateItem</c> table.
    /// </param>
    /// <param name="_unitId">
    /// The <c>UnitId</c> for which to search the <c>PdsRebateItem</c> table.
    /// </param>
    /// <param name="_forUpdate">
    /// A <c>Boolean</c> value that defines whether the record should be selected for update or not; optional.
    /// </param>
    /// <returns>
    /// The <c>PdsRebateItem</c> record that was found based on the passed parameters.
    /// </returns>
    public static PdsRebateItem find(PdsRebateAgreementRefRecId _agreementRecId,
                                        ItemId                  _itemId,
                                        InventDimId             _inventDimId,
                                        UnitOfMeasureSymbol     _unitId,
                                        boolean                 _forUpdate = false)
    {
        PdsRebateItem  pdsRebateItem;

        if ( _agreementRecId && _itemId && _inventDimId && _unitId)
        {
            pdsRebateItem.selectForUpdate(_forUpdate);

            select firstonly pdsRebateItem
                where pdsRebateItem.RebateAgreementRefRecId == _agreementRecId
                    && pdsRebateItem.ItemID == _itemId
                    && pdsRebateItem.InventDimID == _inventDimId
                    && pdsRebateItem.UnitID == _unitId;
        }

        return pdsRebateItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the desired <c>PdsRebateItem</c> record based on the passed parameters.
    /// </summary>
    /// <param name="_recId">
    /// The <c>RecId</c> for which to search the <c>PdsRebateItem</c> table.
    /// </param>
    /// <param name="_forUpdate">
    /// A <c>Boolean</c> value that defines whether the record should be selected for update or not; optional.
    /// </param>
    /// <returns>
    /// The <c>PdsRebateItem</c> record that was found based on the passed parameters.
    /// </returns>
    public static PdsRebateItem findByRecId(RecId   _recId,
                                            boolean _forUpdate = false)
    {
        PdsRebateItem  pdsRebateItem;

        if (_recId)
        {
            pdsRebateItem.selectForUpdate(_forUpdate);

            select firstonly pdsRebateItem
                where pdsRebateItem.RecId == _recId;
        }

        return pdsRebateItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertPdsRebateItemFromProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a rebate item record from the product provided.
    /// </summary>
    /// <param name="_productContainer">
    /// A container of the product records to be inserted into the <c>PdsREbateItem</c> table.
    /// </param>
    /// <param name="_pdsRebateAgreement">
    /// The rebate agreement record used to get the <c>RefRecId</c>.
    /// </param>
    /// <param name="_inventDim">
    /// The inventory dimension of the rebate.
    /// </param>
    /// <returns>
    /// true if no errors occured; otherwise, false.
    /// </returns>
    public static boolean insertPdsRebateItemFromProduct(Container               _productContainer,
                                                                PdsRebateAgreement      _pdsRebateAgreement,
                                                                InventDim               _inventDim)
    {
        PdsRebateItem           pdsRebateItem;
        TmpRetailProductsToAdd  tmpProductTable;
        List                    listProducts;
        ListEnumerator          listEnumerator;
        boolean                 ret = true;

        if (_productContainer)
        {
            listProducts = List::create(_productContainer);
            listEnumerator = listProducts.getEnumerator();

            while (listEnumerator.moveNext())
            {
                tmpProductTable = listEnumerator.current();
                pdsRebateItem.ItemID = tmpProductTable.ItemId;

                // Check for ItemId before processing.
                if (pdsRebateItem.ItemID)
                {
                    pdsRebateItem.RebateAgreementRefRecId = _pdsRebateAgreement.RecId;
                    pdsRebateItem.InventDimID = tmpProductTable.InventDim;
                    pdsRebateItem.UnitID = InventTableModule::find(pdsRebateItem.ItemID,
                                                            ModuleInventPurchSales::Sales).UnitId;

                    if (!PdsRebateItem::find(pdsRebateItem.RebateAgreementRefRecId,
                                pdsRebateItem.ItemID,
                                pdsRebateItem.InventDimID,
                                pdsRebateItem.UnitID))
                    {
                        if (pdsRebateItem.validateWrite())
                        {
                            pdsRebateItem.insert();
                        }
                        else
                        {
                            throw error("@SYS104318");
                        }
                    }
                }
                else
                {
                    error(strFmt("@MCR38748", tmpProductTable.EcoResProductName));
                    ret = false;
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultUnitId</Name>
				<Source><![CDATA[
    private void defaultUnitId()
    {
        if (this.isFieldSet(fieldNum(PdsRebateItem, ItemID)))
        {
            this.UnitID = InventTableModule::find(this.ItemID, ModuleInventPurchSales::Sales).UnitId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates default values in a field.
    /// </summary>
    /// <param name = "_fieldId">The Id of the field that gets defaulted.</param>
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PdsRebateItem, UnitID):
                this.defaultUnitId();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return  [[fieldNum(PdsRebateItem, UnitID), [fieldNum(PdsRebateItem, ItemId)]]];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table extension used for defaulting.
    /// </summary>
    /// <returns>An instance of the <c>SysTableExtension</c> class.</returns>
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsRebate</ConfigurationKey>
	<DeveloperDocumentation>@MCR40113</DeveloperDocumentation>
	<FormRef>PdsRebateAgreements</FormRef>
	<Label>@MCR40114</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ItemID</TitleField1>
	<TitleField2>InventDimID</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>SalesAndMarketing</Modules>
	<ReplacementKey>RebateItemIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RebateAgreementRefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS35583</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RebateAgreementRefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RebateAgreementRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PdsRebateAgreementRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RebateItemIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RebateAgreementRefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UnitID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimID</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDimID</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemID</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemID</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PdsRebateAgreement</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PdsRebateAgreement</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RebateAgreementRefRecId</Name>
					<Field>RebateAgreementRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TamMerchandisingEventIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>