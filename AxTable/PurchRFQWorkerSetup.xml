<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQWorkerSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchRFQWorkerSetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(PurchRFQWorkerSetupRecId _recId)
    {
        boolean ret = true;

        if (!PurchRFQWorkerSetup::exist(_recId))
        {
            ret = checkFailed(strfmt(PurchRFQWorkerSetup::txtNotExist(), tablestr(PurchRFQWorkerSetup)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>PurchRFQWorkerSetup</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>PurchRFQWorkerSetup</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the record exists; otherwise, false.
    /// </returns>
    public static boolean exist(PurchRFQWorkerSetupRecId _recId)
    {
        return _recId && (select firstonly RecId from purchRFQWorkerSetup
                    where purchRFQWorkerSetup.RecId == _recId).RecId!= 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>PurchRFQWorkerSetup</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>PurchRFQWorkerSetup</c> table; otherwise, an empty record.
    /// </returns>
    public static PurchRFQWorkerSetup find(
    PurchRFQWorkerSetupRecId _recId,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        PurchRFQWorkerSetup purchRFQWorkerSetup;

        purchRFQWorkerSetup.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            purchRFQWorkerSetup.concurrencyModel(_concurrencyModel);
        }

        select purchRFQWorkerSetup
            where purchRFQWorkerSetup.RecId == _recId;

        return purchRFQWorkerSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByWorker</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>PurchRFQWorkerSetup</c> table, by using the specified value of
    ///    the <c>Worker</c> field.
    /// </summary>
    /// <param name="_worker">
    ///    A value of the <c>Worker</c> field.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    The specified <c>PurchRFQWorkerSetup</c> record if found; otherwise, an empty record.
    /// </returns>
    /// <remarks>
    ///    If no values are supplied for both the parameters they default to now. Therefore, the method
    ///    searches for only active records and returns either an empty or a valid record.The method searches
    ///    for the worker and returns either an empty or a valid record.
    /// </remarks>
    public static PurchRFQWorkerSetup findByWorker(
    HcmWorkerRecId _worker,
    boolean             _forUpdate = false,
    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        PurchRFQWorkerSetup purchRFQWorkerSetup;

        purchRFQWorkerSetup.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            purchRFQWorkerSetup.concurrencyModel(_concurrencyModel);
        }

         select purchRFQWorkerSetup
            where purchRFQWorkerSetup.Worker == _worker;

        return purchRFQWorkerSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS321009";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS322912</DeveloperDocumentation>
	<Label>@SYS304593</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>Worker</TitleField1>
	<TitleField2>BuyerGroupId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>PurchRFQWorkerSetup_AK1</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BuyerGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BuyerGroupDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BuyerGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BuyerGroupDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BuyerGroupDataAreaId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BuyerGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemBuyerGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PurchRFQWorkerSetup_AK1</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Worker</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker_FK</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>HcmWorker_DispatchWorker</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Worker</Name>
					<Field>Worker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventBuyerGroup_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventBuyerGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BuyerGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BuyerGroup_PurchReqWorkerSetup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BuyerGroupDataAreaId</Name>
					<Field>BuyerGroupDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BuyerGroupId</Name>
					<Field>BuyerGroupId</Field>
					<RelatedField>Group</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>