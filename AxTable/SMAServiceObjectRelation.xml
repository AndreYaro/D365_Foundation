<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SMAServiceObjectRelation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SMAServiceObjectRelation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>agreementDescription</Name>
				<Source><![CDATA[
    display Description agreementDescription()
    {
        Description description = '';

        if (this.RelTableId == tableNum(SMAAgreementTable))
        {
            description = SMAAgreementTable::find(this.RelKeyId).AgreementDescription;
        }

        return description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>agreementNumber</Name>
				<Source><![CDATA[
    public display SMAAgreementId agreementNumber()
    {
        SMAAgreementId agreementId = '';

        if (this.RelTableId == tableNum(SMAAgreementTable))
        {
            agreementId = this.RelKeyId;
        }

        return agreementId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        SMAServiceBOMTable          serviceBOMlines;
        SMAServiceBOMChange         serviceBOMhistory;

        ttsbegin;

        if (this.TemplateBOMId)
        {
            // delete service BOM history
            while select forupdate serviceBOMhistory where
                    serviceBOMhistory.ServiceBOMId              == this.TemplateBOMId &&
                    serviceBOMhistory.ServiceObjectRelationId   == this.ServiceObjectRelationId
            {
                serviceBOMhistory.doDelete();
            }

            // delete service BOM lines
            while select forupdate serviceBOMlines where
                    serviceBOMlines.ServiceBOMId                == this.TemplateBOMId &&
                    serviceBOMlines.ServiceObjectRelationId     == this.ServiceObjectRelationId
            {
                serviceBOMlines.doDelete();
            }
        }

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    public display ItemId itemId()
    {
        return SMAServiceObjectTable::find(this.ServiceObjectId).ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        SMAServiceObjectTable   serviceObjectTable;

        super(_fieldId);

        switch (_fieldId)
        {
            case (fieldNum(SMAServiceObjectRelation, ServiceObjectId)):
                if (this.ServiceObjectId)
                {
                    serviceObjectTable = SMAServiceObjectTable::find(this.ServiceObjectId);
                    if (serviceObjectTable.TemplateBOMId)
                    {
                        this.TemplateBOMId = serviceObjectTable.TemplateBOMId;
                    }
                }
                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>objectDescription</Name>
				<Source><![CDATA[
    display Description objectDescription()
    {
        Description description  = '';

        if (this.ServiceObjectId != '')
        {
            description = SMAServiceObjectTable::find(this.ServiceObjectId).Description;
        }

        return description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>serviceDescription</Name>
				<Source><![CDATA[
    display Description serviceDescription()
    {
        str description = '';

        if (this.RelTableId == tableNum(SMAServiceOrderTable))
        {
            description = SMAServiceOrderTable::find(this.RelKeyId).Description;
        }

        return description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showRelationDescription</Name>
				<Source><![CDATA[
    public display Description showRelationDescription()
    {
        Description description = '';

        switch (this.RelTableId)
        {
            case tableNum(SMAAgreementTable):
                description = SMAAgreementTable::find(this.RelKeyId).AgreementDescription;
                break;

            case tableNum(SMAServiceOrderTable):
                description = SMAServiceOrderTable::find(this.RelKeyId).Description;
                break;

            default:
                break;
        }

        return description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showRelationOrigin</Name>
				<Source><![CDATA[
    display SMARelationType showRelationOrigin()
    {
        SMARelationType relationType;

        switch (this.RelTableId)
        {
            case tableNum(SMAAgreementTable):
                relationType = SMARelationType::Agreement;
                break;

            case tableNum(SMAServiceOrderTable):
                relationType = SMARelationType::ServiceOrder;
                break;

            default:
                relationType = SMARelationType::None;
        }

        return relationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateBOMTable</Name>
				<Source><![CDATA[
    public SMATemplateBOMTable templateBOMTable(boolean _forUpdate = false)
    {
        return SMATemplateBOMTable::find(this.TemplateBOMId,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>attachObjects</Name>
				<Source><![CDATA[
    public static void attachObjects(FormDataSource _datasource, SalesId _salesId, SMATableKeyId _tableKeyId, TableId _tableId)
    {
        tmpSMAAgreementObjects      objects;
        SMAServiceObjectRelation    serviceObjectRelation;
        NumberSeq                   numberSeq = NumberSeq::newGetNum(SMAParameters::numRefSMAServiceObjectRelationId(), false);

        objects = _datasource.getFirst();

        ttsbegin;

        if (objects)
        {
            if (objects.CreateObject)
            {
                serviceObjectRelation.ServiceObjectRelationId   = numberSeq.num();
                serviceObjectRelation.RelKeyId                  = _tableKeyId;
                serviceObjectRelation.RelTableId                = _tableId;
                serviceObjectRelation.ServiceObjectId           = objects.ServiceObjectId;
                serviceObjectRelation.ServiceObjectRef          = '';
                serviceObjectRelation.TemplateBOMId             = '';
                serviceObjectRelation.InventDimId               = objects.InventDimId;
                serviceObjectRelation.SalesId                   = _salesId;
                if (objects.CreateTemplateBOM)
                {
                    serviceObjectRelation.TemplateBOMId         = objects.TemplateBOMId;
                }

                serviceObjectRelation.insert();
            }
        }

        while (objects)
        {
            objects = _datasource.getNext();
            if (objects)
            {
                if (objects.CreateObject && objects.ServiceObjectId)
                {
                    serviceObjectRelation.ServiceObjectRelationId   = numberSeq.num();
                    serviceObjectRelation.RelKeyId                  = _tableKeyId;
                    serviceObjectRelation.RelTableId                = _tableId;
                    serviceObjectRelation.ServiceObjectId           = objects.ServiceObjectId;
                    serviceObjectRelation.ServiceObjectRef          = '';
                    serviceObjectRelation.TemplateBOMId             = '';
                    serviceObjectRelation.InventDimId               = objects.InventDimId;
                    serviceObjectRelation.SalesId                   = _salesId;
                    if (objects.CreateTemplateBOM)
                    {
                        serviceObjectRelation.TemplateBOMId         = objects.TemplateBOMId;
                    }

                    serviceObjectRelation.insert();
                }
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createObjectRelation</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method create that service object relations exist for service orders.
    /// </summary>
    /// <param name = "_serviceObjectId">The current service object Id.</param>
    /// <param name = "_keyId">The service order Id.</param>
    /// <param name = "_tableId">The table Id.</param>
    /// <param name = "_relationID">The service object relation Id.</param>
    /// <param name = "_useExistingRelationId">true or false if the service object relation exists for the service order.</param>
    /// <returns>The service order Id.</returns>
    public static SMAServiceObjectRelationId createObjectRelation(
        SMAServiceObjectId		   _serviceObjectId,
        SMATableKeyId			   _keyId,
        TableId					   _tableId,
        SMAServiceObjectRelationId _relationID,
        boolean                    _useExistingRelationId = false)
    {
        SMAServiceObjectRelation    newRelation;
        NumberSeq                   numberSeq;

        if (_serviceObjectId && _tableId && _keyId)
        {
            ttsbegin;

            newRelation.clear();
            if (_useExistingRelationId && _relationID)
            {
                newRelation.ServiceObjectRelationId = _relationID;
            }
            else
            {
                numberSeq = NumberSeq::newGetNum(SMAParameters::numRefSMAServiceObjectRelationId(), false);
                newRelation.ServiceObjectRelationId = numberSeq.num();
            }
            
            newRelation.ServiceObjectId         = _serviceObjectId;
            newRelation.RelTableId              = _tableId;
            newRelation.RelKeyId                = _keyId;

            if (_relationID)
            {
                newRelation.InventDimId         = SMAServiceObjectRelation::find(_relationID).InventDimId;
            }
            else
            {
                newRelation.InventDimId         = InventDim::findOrCreate(InventDim::find(newRelation.InventDimId)).InventDimId;
            }

            newRelation.insert();

            ttscommit;
        }

        return newRelation.ServiceObjectRelationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existRelation</Name>
				<Source><![CDATA[
    public static boolean existRelation(SMAServiceObjectRelationId _serviceObjectRelationId, SMATableKeyId _keyId, TableId _tableId)
    {
        SMAServiceObjectRelation    smaServiceObjectRelation    = null;
        SMAServiceOrderTable        smaServiceOrderTable        = null;
        boolean                     ret                         = false;
        SMAAgreementId              smaAgreementId;

        if (!(_tableId && _keyId && _serviceObjectRelationId))
        {
            return ret;
        }

        switch (_tableId)
        {
            case tableNum(SMAServiceOrderTable):
                smaAgreementId = (select smaServiceOrderTable where smaServiceOrderTable.ServiceOrderId == _keyId).AgreementId;
                ret = (select firstonly RecId from smaServiceObjectRelation
                                    where smaServiceObjectRelation.RelTableId               == tableNum(SMAAgreementTable) &&
                                          smaServiceObjectRelation.RelKeyId                 == smaAgreementId &&
                                          smaServiceObjectRelation.ServiceObjectRelationId  == _serviceObjectRelationId).RecId != 0;
                if (ret)
                {
                    break;
                }

            case tableNum(SMAAgreementTable):
                ret = (select firstonly RecId from smaServiceObjectRelation
                                where smaServiceObjectRelation.RelTableId               == _tableId &&
                                      smaServiceObjectRelation.RelKeyId                 == _keyId &&
                                      smaServiceObjectRelation.ServiceObjectRelationId  == _serviceObjectRelationId).RecId != 0;
                break;
            default:
                // Table %1 has no relation.
                throw error(strFmt("@SYS89145", tableId2name(_tableId)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existServiceRelations</Name>
				<Source><![CDATA[
    /// <summary>
    ///     This method checks if service object relations exist for service orders or the service agreement associated with the service order.
    /// </summary>
    /// <param name="_smaServiceOrderTable">
    ///     The current service order.
    /// </param>
    /// <returns>
    ///     true, if at least 1 Service Object Relation exists for the service order OR the service agreement that the service order is attached to; false, otherwise.
    /// </returns>
    public static boolean existServiceRelations(SMAServiceOrderTable _smaServiceOrderTable)
    {
        SMAServiceObjectRelation    smaServiceObjectRelation    = null;
        boolean                     ret                         = false;

        if (!(_smaServiceOrderTable.ServiceOrderId))
        {
            return ret;
        }

        //Check to see if service objects exist with Service Order Number
        ret = (select firstonly RecId from smaServiceObjectRelation
                    where smaServiceObjectRelation.RelTableId   == tableNum(SMAServiceOrderTable)
                        && smaServiceObjectRelation.RelKeyId    == _smaServiceOrderTable.ServiceOrderId).RecId !=0;

        //Check to see if service objects exist for Service Agreement that the Service Order is tied to
        if ((!(ret)) && _smaServiceOrderTable.AgreementId)
        {
            ret = (select firstonly RecId from smaServiceObjectRelation
                        where smaServiceObjectRelation.RelTableId   == tableNum(SMAAgreementTable)
                            && smaServiceObjectRelation.RelKeyId    == _smaServiceOrderTable.AgreementId).RecId !=0;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existTemplateBOM</Name>
				<Source><![CDATA[
    public static boolean existTemplateBOM(SMATemplateBOMId _templateBOMId)
    {
        SMAServiceObjectRelation    smaServiceObjectRelation = null;
        boolean                     ret = false;

        if (_templateBOMId)
        {
            ret = (select firstonly RecId from smaServiceObjectRelation
                   where smaServiceObjectRelation.TemplateBOMId == _templateBOMId).RecId != 0;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static SMAServiceObjectRelation find(SMAServiceObjectRelationId  _objectRelationId,
        boolean                     _forupdate = false)
    {
        SMAServiceObjectRelation smaServiceObjectRelation = null;

        if (_objectRelationId)
        {
            smaServiceObjectRelation.selectForUpdate(_forupdate);

            select firstonly smaServiceObjectRelation where smaServiceObjectRelation.ServiceObjectRelationId   == _objectRelationId;
        }

        return smaServiceObjectRelation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefBomTableArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the <c>Args</c> class for the jump ref operation.
    /// </summary>
    /// <param name = "_relationTable">The relation table.</param>
    /// <returns>The <c>Args</c> class.</returns>
    protected static Args jumpRefBomTableArgs(SMAServiceObjectRelation _relationTable)
    {
        Args args;

        switch (_relationTable.RelTableId)
        {
            case tableNum(SMAAgreementTable):
                args = new Args(formStr(SMAAgreementTable));

                // Menu item info will be used by security framework, when setting access rights to form data sources
                args.menuItemType(MenuItemType::Display);
                args.menuItemName(menuitemDisplayStr(SMAAgreementTable));
                break;

            case tableNum(SMAServiceOrderTable):
                args = new Args(formStr(SMAServiceOrderTable));

                // Menu item info will be used by security framework, when setting access rights to form data sources
                args.menuItemType(MenuItemType::Display);
                args.menuItemName(menuitemDisplayStr(SMAServiceOrderTable));
                break;
        }

        return args;        
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefBomTableRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record to position to for the jump ref operation.
    /// </summary>
    /// <param name = "_relationTable">The relation table.</param>
    /// <returns>The record to position to.</returns>
    protected static Common jumpRefBomTableRecord(SMAServiceObjectRelation _relationTable)
    {        
        switch (_relationTable.RelTableId)
        {
            case tableNum(SMAAgreementTable):
                return SMAAgreementTable::find(_relationTable.RelKeyId);

            case tableNum(SMAServiceOrderTable):
                return SMAServiceOrderTable::find(_relationTable.RelKeyId);
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefBomTable</Name>
				<Source><![CDATA[
	public static void jumpRefBomTable(SMAServiceObjectRelation _relationTable, Object _caller, str _parm = '')
    {
        Args args = SMAServiceObjectRelation::jumpRefBomTableArgs(_relationTable);

        if (!args)
        {
            throw Error(Error::wrongUseOfFunction(funcName()));
        }

        Common record = SMAServiceObjectRelation::jumpRefBomTableRecord(_relationTable);

        args.caller(_caller);
        args.parm(_parm);

        FormRun fr = classfactory.formRunClass(args);
        fr.init();
        fr.run();
        if (record)
        {
            fr.dataSource().findRecord(record);
        }
        fr.detach();
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryFilterValue</Name>
				<Source><![CDATA[
    static str queryFilterValue(QueryBuildDataSource _qbds, SMAAgreementId _agreementId, SMAServiceOrderId _serviceOrderId)
    {
        return strFmt('(((%6 == \"%3\") && (%1.%7 == %2)) || ((%6 == \"%4\") && (%1.%7 == %5)))',
                      _qbds.name(),
                      tableNum(SMAServiceOrderTable),
                      _serviceOrderId,
                      _agreementId,
                      tableNum(SMAAgreementTable),
                      fieldStr(SMAServiceObjectRelation, RelKeyId),
                      fieldStr(SMAServiceObjectRelation, RelTableId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>existServiceOrderObjectRelation</Name>
				<Source><![CDATA[
    /// <summary>
    ///     This method checks that service object relations exist for service orders which are linked to a service agreement.
    /// </summary>
    /// <param name="_serviceObjectId">
    ///     The current service object Id.
    /// </param>
    /// <param name="_keyId">
    ///     The service order Id.
    /// </param>
    /// <param name="_relationID">
    ///     The service object relation Id.
    /// </param>
    /// <returns>
    ///     true, if at least one Service Object Relation exists for the service order that the service order is attached to; false, otherwise.
    /// </returns>
    public static boolean existServiceOrderObjectRelation(
        SMAServiceObjectId         _serviceObjectId,
        SMATableKeyId              _keyId,
        SMAServiceObjectRelationId _relationID)
    {
        SMAServiceObjectRelation smaServiceObjectRelation;
        select firstOnly RecId from smaServiceObjectRelation
            where smaServiceObjectRelation.ServiceObjectId         == _serviceObjectId
               && smaServiceObjectRelation.RelKeyId                == _keyId
               && smaServiceObjectRelation.RelTableId              == tableNum(SMAServiceOrderTable)
               && smaServiceObjectRelation.ServiceObjectRelationId == _relationID;
 
        return smaServiceObjectRelation.RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SMAManagement</ConfigurationKey>
	<DeveloperDocumentation>@SYS122713</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS87675</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ServiceObjectId</TitleField1>
	<TitleField2>RelKeyId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ServiceObjectRelationIdx</ClusteredIndex>
	<Modules>ServiceManagement</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>SMAAgreementLine</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SMAAgreementLine</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>SMARepairLine</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SMARepairLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelKeyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelTableId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelKeyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BOM</Name>
			<Label>@SYS67777</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateBOMId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS80392</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectRelationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>objectDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventDim</Name>
			<Label>@SYS70078</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Item</Name>
			<Label>@SYS7407</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>itemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TemplateBOMId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ItemId</Name>
			<Label>@SYS7407</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>itemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ObjectRelationId</Name>
			<Label>@SYS102586</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectRelationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS80404</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectRelationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>objectDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelKeyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showRelationDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showRelationOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectRef</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS81755</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectRef</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Relation</Name>
			<Label>@SYS9114</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>showRelationOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelKeyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showRelationDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesOrder</Name>
			<Label>@SYS19627</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Selection</Name>
			<Label>@SYS2245</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectRelationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>objectDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>showRelationOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelKeyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RelTableId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ServiceObject</Name>
			<Label>@SYS87256</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>objectDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceObjectRef</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RelKeyId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMATableKeyId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RelTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Label>@SYS2720</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServiceObjectId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAServiceObject</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServiceObjectRef</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAServiceObjectRef</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServiceObjectRelationId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMAServiceObjectRelationId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TemplateBOMId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMATemplateBOMId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ServiceObjectRelationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ServiceObjectId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RelKeyId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RelTableId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ServiceObjectRelationIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ServiceObjectRelationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesId</Name>
					<Field>SalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SalesIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SMAAgreementLines</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAAgreementLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ServiceAgreementLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ServiceObject</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelTableId</Name>
					<Field>RelTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelKeyId</Name>
					<Field>RelKeyId</Field>
					<RelatedField>AgreementId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceObjectRelationId</Name>
					<Field>ServiceObjectRelationId</Field>
					<RelatedField>ServiceObjectRelationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SMAAgreementTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAAgreementTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ServiceAgreement</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>ServiceObject</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelKeyId</Name>
					<Field>RelKeyId</Field>
					<RelatedField>AgreementId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelTableId</Name>
					<Field>RelTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SMAObjectTable</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>SMAServiceObjectTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ServiceObject</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ServiceObject</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceObjectId</Name>
					<Field>ServiceObjectId</Field>
					<RelatedField>ServiceObjectId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SMAServiceOrderLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMAServiceOrderLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ServiceOrderLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ServiceObject</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelTableId</Name>
					<Field>RelTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelKeyId</Name>
					<Field>RelKeyId</Field>
					<RelatedField>ServiceOrderId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ServiceObjectRelationId</Name>
					<Field>ServiceObjectRelationId</Field>
					<RelatedField>ServiceObjectRelationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SMAServiceOrderTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SMAServiceOrderTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ServiceOrder</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>ServiceObject</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelKeyId</Name>
					<Field>RelKeyId</Field>
					<RelatedField>ServiceOrderId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RelTableId</Name>
					<Field>RelTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SMATemplateBOMTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SMATemplateBOMTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TemplateBom</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ServiceObject</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TemplateBOMId</Name>
					<Field>TemplateBOMId</Field>
					<RelatedField>TemplateBOMId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>