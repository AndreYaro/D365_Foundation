<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxLogisticsPostalAddressValidationTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxLogisticsPostalAddressValidationTmp extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>formatAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form address by using standard setup
    /// </summary>
    public void formatAddress()
    {
        LogisticsPostalAddress LogisticsPostalAddressLoc;
        LogisticsPostalAddressLoc.City = this.City;
        LogisticsPostalAddressLoc.CountryRegionId = this.CountryRegionId;
        LogisticsPostalAddressLoc.County = this.County;
        LogisticsPostalAddressLoc.State = this.State;
        LogisticsPostalAddressLoc.Street = this.Street;
        LogisticsPostalAddressLoc.ZipCode = this.ZipCode;
        LogisticsPostalAddressLoc.formatAddressInstance();
        this.Address = LogisticsPostalAddressLoc.Address;

    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init temp data source from provided data source
    /// </summary>
    /// <param name = "_source">Common, but should be address table or view</param>
    public void initFromSource(Common _source)
    {
        var tableName = tableid2name(_source.TableId);
        var tabs = tableStr(DirPartyPostalAddressView);
        if (!((tableid2name(_source.TableId) == tableStr(LogisticsPostalAddress))
                || (tableid2name(_source.TableId) == tableStr(DirPartyPostalAddressView))
                || (tableid2name(_source.TableId) == tableStr(LogisticsEntityPostalAddressView))))
        {
            throw Error("@TaxIntegration:AddressValidationIncorrectSourceError");
            return;
        }
        this.setFieldValue((fieldStr(LogisticsPostalAddress, City)), _source.getFieldValue((fieldStr(LogisticsPostalAddress, City))));
        this.setFieldValue((fieldStr(LogisticsPostalAddress, CountryRegionId)), _source.getFieldValue((fieldStr(LogisticsPostalAddress, CountryRegionId))));
        this.setFieldValue((fieldStr(LogisticsPostalAddress, County)), _source.getFieldValue((fieldStr(LogisticsPostalAddress, County))));
        this.setFieldValue((fieldStr(LogisticsPostalAddress, State)), _source.getFieldValue((fieldStr(LogisticsPostalAddress, State))));
        this.setFieldValue((fieldStr(LogisticsPostalAddress, Street)), _source.getFieldValue((fieldStr(LogisticsPostalAddress, Street))));
        this.setFieldValue((fieldStr(LogisticsPostalAddress, ZipCode)), _source.getFieldValue((fieldStr(LogisticsPostalAddress, ZipCode))));
        this.setFieldValue((fieldStr(LogisticsPostalAddress, Location)), _source.getFieldValue((fieldStr(LogisticsPostalAddress, Location))));
        if (!this.Location)
        {
            this.Location = 1; // set a temp location in case this is a new address
        }
        this.formatAddress();
        this.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertToLogisticsPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Convert temp data source to <C>LogisticsPostalAddress</C>
    /// </summary>
    /// <returns>LogisticsPostalAddress</returns>
    public LogisticsPostalAddress convertToLogisticsPostalAddress()
    {
        LogisticsPostalAddress logisticsPostalAddressLoc;

        LogisticsPostalAddressLoc.City = this.City;
        LogisticsPostalAddressLoc.CountryRegionId = this.CountryRegionId;
        LogisticsPostalAddressLoc.County = this.County;
        LogisticsPostalAddressLoc.State = this.State;
        LogisticsPostalAddressLoc.Street = this.Street;
        LogisticsPostalAddressLoc.ZipCode = this.ZipCode;
        LogisticsPostalAddressLoc.formatAddressInstance();
        return logisticsPostalAddressLoc;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@TaxIntegration:AddressValidationTempTable</DeveloperDocumentation>
	<Label>@TaxIntegration:AddressValidationTempTable</Label>
	<ClusteredIndex></ClusteredIndex>
	<PrimaryIndex></PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Address</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressing</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>City</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressCityName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>County</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressCountyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryRegionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressCountryRegionId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Latitude</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressLatitude</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Longitude</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressLongitude</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Location</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>State</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressStateId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Street</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressStreet</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>StreetId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressStreetID_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ZipCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressZipCodeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AddressGroupId</Name>
			<ExtendedDataType>ExternalAddressGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsOriginalAddress</Name>
			<AllowEdit>No</AllowEdit>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LocationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Location</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>