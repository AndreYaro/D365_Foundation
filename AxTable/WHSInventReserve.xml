<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventReserve</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSInventReserve extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addInventReserveDelta</Name>
				<Source><![CDATA[
	/// <summary>
	/// Adds delta to current reserve.
	/// </summary>
	/// <param name="_inventReserveDelta">
	/// Delta reserve.
	/// </param>
    void addInventReserveDelta(WHSInventReserveDelta _inventReserveDelta)
    {
        this.AvailOrdered       += _inventReserveDelta.AvailOrdered;
        this.AvailPhysical      += _inventReserveDelta.AvailPhysical;
        this.ReservOrdered      += _inventReserveDelta.ReservOrdered;
        this.ReservPhysical     += _inventReserveDelta.ReservPhysical;
        this.CWAvailOrdered     += _inventReserveDelta.CWAvailOrdered;
        this.CWAvailPhysical    += _inventReserveDelta.CWAvailPhysical;
        this.CWReservOrdered    += _inventReserveDelta.CWReservOrdered;
        this.CWReservPhysical   += _inventReserveDelta.CWReservPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addInventReserveDeltaView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds delta view to current reserve.
    /// </summary>
    /// <param name="_inventReserveDeltaView">
    /// Delta reserve view.
    /// </param>
    [Hookable(false)]
    internal void addInventReserveDeltaView(WHSInventReserveDeltaView _inventReserveDeltaView)
    {
        this.AvailOrdered       += _inventReserveDeltaView.SumOfAvailOrdered;
        this.AvailPhysical      += _inventReserveDeltaView.SumOfAvailPhysical;
        this.ReservOrdered      += _inventReserveDeltaView.SumOfReservOrdered;
        this.ReservPhysical     += _inventReserveDeltaView.SumOfReservPhysical;
        this.CWAvailOrdered     += _inventReserveDeltaView.SumOfCWAvailOrdered;
        this.CWAvailPhysical    += _inventReserveDeltaView.SumOfCWAvailPhysical;
        this.CWReservOrdered    += _inventReserveDeltaView.SumOfCWReservOrdered;
        this.CWReservPhysical   += _inventReserveDeltaView.SumOfCWReservPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addFromWHSInventReserveQuantities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds inventory reservation quantities to the current buffer.
    /// </summary>
    /// <param name="_quantities">
    /// The <c>WHSInventReserveQuantities</c> quantities.
    /// </param>
    [Hookable(false)]
    internal void addFromWHSInventReserveQuantities(WHSInventReserveQuantities _quantities)
    {
        this.AvailOrdered       += _quantities.AvailOrdered;
        this.AvailPhysical      += _quantities.AvailPhysical;
        this.ReservOrdered      += _quantities.ReservOrdered;
        this.ReservPhysical     += _quantities.ReservPhysical;
        this.CWAvailOrdered     += _quantities.CWAvailOrdered;
        this.CWAvailPhysical    += _quantities.CWAvailPhysical;
        this.CWReservOrdered    += _quantities.CWReservOrdered;
        this.CWReservPhysical   += _quantities.CWReservPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCostPrice</Name>
				<Source><![CDATA[
	/// <summary>
	/// Display method for cost price.
	/// </summary>
    display CostPrice displayCostPrice()
    {
        InventModelGroup    inventModelGroup;
        InventSum           inventSum;
        CostPrice           ret;

        inventModelGroup = InventModelGroup::find(InventTable::find(this.ItemId).ProdGroupId);
        inventSum = InventSum::find(this.ItemId, this.InventDimId);

        if (inventModelGroup.StandardCost || inventModelGroup.inventModelType().stdCostBased())
        {
            ret = InventTable::findCostPcsPrice(this.ItemId, this.InventDimId, InventDim::find(this.InventDimId), maxDate());  // Standard Cost
        }
        else
        {
            ret = inventSum.costPricePcs();  // Average Cost
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayItemName</Name>
				<Source><![CDATA[
	/// <summary>
	/// Display method for product name.
	/// </summary>
    display ItemName displayItemName()
    {
        return EcoResProductTranslation::findByProductLanguage(InventTable::itemProduct(this.ItemId), Global::currentUserLanguage()).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayPhysAvailUpHierarchy</Name>
				<Source><![CDATA[
	/// <summary>
	/// Display method for on hand available quantity.
	/// </summary>
    display InventQtyAvailPhysical displayPhysAvailUpHierarchy()
    {
        return WHSInventOnHand::getReservePhysicalAvailQty(this.ItemId, InventDim::find(this.InventDimId), false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCWPhysAvailUpHierarchy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display method for on hand available catch weight quantity.
    /// </summary>
    display PdsCWAvailPhysical displayCWPhysAvailUpHierarchy()
    {
        if (!PdsGlobal::pdsIsCWItem(this.ItemId))
        {
            return 0;
        }
        
        return WHSInventOnHand::getReservePhysicalAvailHandlingQty(this.ItemId, InventDim::find(this.InventDimId), false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>merge</Name>
				<Source><![CDATA[
	/// <summary>
	/// Merges the record together with another <c>WHSInventReserve</c> record.
	/// </summary>
	/// <param name="_mergeInto">
	/// The record to be merged with.
	/// </param>
    public void merge(common _mergeInto)
    {
        WHSInventReserve inventReserveMergeInto;

        if (_mergeInto is WHSInventReserve)
        {
            inventReserveMergeInto = _mergeInto as WHSInventReserve;

            inventReserveMergeInto.AvailOrdered     += this.AvailOrdered;
            inventReserveMergeInto.AvailPhysical    += this.AvailPhysical;
            inventReserveMergeInto.ReservOrdered    += this.ReservOrdered;
            inventReserveMergeInto.ReservPhysical   += this.ReservPhysical;
            inventReserveMergeInto.CWAvailOrdered   += this.CWAvailOrdered;
            inventReserveMergeInto.CWAvailPhysical  += this.CWAvailPhysical;
            inventReserveMergeInto.CWReservOrdered  += this.CWReservOrdered;
            inventReserveMergeInto.CWReservPhysical += this.CWReservPhysical;
        }

        if (this.RecId) // If this record has not been inserted, then skip updating potential DB references to it.
        {
            super(_mergeInto);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addSumFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds all quantity value fields as sum fields to the datasource.
    /// </summary>
    /// <param name="_qbds">
    /// The datasource the sum fields should be added to.
    /// </param>
    /// <param name="_onlyAvail">
    /// Limits the fields being summed to only the avail quantities.
    /// </param>
    public static void addSumFields(
        QueryBuildDataSource    _qbds,
        boolean                 _onlyAvail = false)
    {
        QueryBuildFieldList queryBuildFieldList = _qbds.fields();
        WHSInventReserve::addInventSumFields(queryBuildFieldList, _onlyAvail);
        WHSInventReserve::addCWSumFields(queryBuildFieldList, _onlyAvail);    
    }

]]></Source>
			</Method>
			<Method>
				<Name>addInventSumFields</Name>
				<Source><![CDATA[
    private static void addInventSumFields(
        QueryBuildFieldList _queryBuildFieldList,
        boolean             _onlyAvail)
    {
        _queryBuildFieldList.addField(fieldNum(WHSInventReserve, AvailPhysical), SelectionField::Sum);
        _queryBuildFieldList.addField(fieldNum(WHSInventReserve, AvailOrdered), SelectionField::Sum);

        if (!_onlyAvail)
        {
            _queryBuildFieldList.addField(fieldNum(WHSInventReserve, ReservPhysical), SelectionField::Sum);
            _queryBuildFieldList.addField(fieldNum(WHSInventReserve, ReservOrdered), SelectionField::Sum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCWSumFields</Name>
				<Source><![CDATA[
    private static void addCWSumFields(
        QueryBuildFieldList     _queryBuildFieldList,
        boolean                 _onlyAvail)
    {
        _queryBuildFieldList.addField(fieldNum(WHSInventReserve, CWAvailPhysical), SelectionField::Sum);
        _queryBuildFieldList.addField(fieldNum(WHSInventReserve, CWAvailOrdered), SelectionField::Sum);

        if (!_onlyAvail)
        {
            _queryBuildFieldList.addField(fieldNum(WHSInventReserve, CWReservPhysical), SelectionField::Sum);
            _queryBuildFieldList.addField(fieldNum(WHSInventReserve, CWReservOrdered), SelectionField::Sum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks whether a specific <c>whsInventReserve</c> record exists.
	/// </summary>
	/// <param name="_itemId">
	/// Item id of the record.
	/// </param>
	/// <param name="_inventDimId">
	/// Dimension id of the record.
	/// </param>
	/// <returns>
	/// True if the record exists.
	/// </returns>
    public static boolean exist(ItemId      _itemId,
                                InventDimId _inventDimId)
    {
        return (_itemId && _inventDimId) &&
               (select firstonly whsInventReserve
                where whsInventReserve.ItemId ==      _itemId      &&
                      whsInventReserve.InventDimId == _inventDimId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a <c>whsInventReserve</c> record with given parameters.
	/// </summary>
	/// <param name="_itemId">
	/// Item id of the record.
	/// </param>
	/// <param name="_inventDimId">
	/// Dimension id of the record.
	/// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update.
	/// </param>
    public static WHSInventReserve find(ItemId      _itemId,
                                        InventDimId _inventDimId,
                                        boolean     _forupdate = false)
    {
        WHSInventReserve    whsInventReserve;

        if (_itemId      &&
            _inventDimId)
        {
            whsInventReserve.selectForUpdate(_forupdate);

            select firstonly whsInventReserve
                where whsInventReserve.ItemId ==      _itemId      &&
                      whsInventReserve.InventDimId == _inventDimId;
        }

        return whsInventReserve;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByInventDim</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a <c>whsInventReserve</c> record by dimension.
	/// </summary>
	/// <param name="_itemId">
	/// Item id of the record.
	/// </param>
	/// <param name="_inventDimCriteria">
	/// Dimension criteria for the record.
	/// </param>
	/// <returns>
    /// A  <c>whsInventReserve</c> record.
	/// </returns>
	public static WHSInventReserve findByInventDim(ItemId     _itemId,
                                                   InventDim  _inventDimCriteria)
    {
        //We are not using findOrCreate because if the inventDim does not exist then neither does the whsinventreserve record
        InventDimId inventDimIdSearch = (_inventDimCriteria.inventDimId ? _inventDimCriteria.inventDimId : InventDim::findDim(_inventDimCriteria).inventDimId);

        return WHSInventReserve::find(_itemId, inventDimIdSearch);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPhysicallyExistingInDB</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the <c>WHSInventReserve</c> table physically exists in the database.
    /// </summary>
    /// <returns>
    ///    true if the table physically exists in the database; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    The table may not yet physically exist in the database during an upgrade scenario.
    /// </remarks>
    public static boolean isPhysicallyExistingInDB()
    {
        SqlDictionary sqlDictionary;

        select firstonly RecId from sqlDictionary
            where sqlDictionary.TabId == tableNum(WHSInventReserve);

        return sqlDictionary.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAvailQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a query to find on hand for the specified parameters.
    /// </summary>
    /// <param name="_itemId">
    ///    The item.
    /// </param>
    /// <param name="_inventDimCriteria">
    ///    The inventory dimensions to limit to.
    /// </param>
    /// <param name="_inventDimParmCriteria">
    ///    Identification of which dimensions to limit to.
    /// </param>
    /// <param name="_addSumFields">
    ///    true if all quantity and value fields from <c>WHSInventReserve</c> should be added as summation fields; otherwise, false. Optional
    /// </param>
    /// <returns>
    ///    A query.
    /// </returns>
    static public Query newAvailQuery(
        ItemId          _itemId,
        InventDim       _inventDimCriteria,
        InventDimParm   _inventDimParmCriteria,
        boolean         _addSumFields = true
        )
    {
        Query                   query;
        QueryBuildDataSource    qbsInventReserve;
        QueryBuildDataSource    qbsDim;
        QueryBuildRange         queryRange;
        InventDim               inventDimCriteria;

        inventDimCriteria = _inventDimCriteria;
        inventDimCriteria.clearNotSelectedDim(_inventDimParmCriteria);

        query = new Query();

        qbsInventReserve = query.addDataSource(tableNum(WHSInventReserve));

        qbsDim = qbsInventReserve.addDataSource(tableNum(InventDim));

        qbsDim.joinMode(JoinMode::InnerJoin);
        qbsDim.relations(true);

        if (_itemId)
        {
            queryRange = qbsInventReserve.addRange(fieldNum(WHSInventReserve, ItemId));
            queryRange.value(queryValue(_itemId));
        }

        if (_addSumFields)
        {
            WHSInventReserve::addSumFields(qbsInventReserve, false);            
        }

        InventDim::queryAddRangeCriteria(qbsDim, inventDimCriteria);

        if (InventUseDimOfWHSInventReserveToggle::instance().isEnabled())
        {
            WHSInventReserve::queryAddRangeCriteria(qbsInventReserve, inventDimCriteria);
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.setInventDimFields();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the inventory dimension values set.
    /// </summary>
    /// <returns>
    /// The inventory dimension values set.
    /// </returns>
    public InventDim inventDim()
    {
        return InventDim::find(this.InventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set dimension fields on <c>WHSInventReserve</c> table.
    /// </summary>
    [Hookable(false)]
    public void setInventDimFields()
    {
        if (this.InventDimId)
        {
            InventDim inventDim = InventDim::find(this.InventDimId);
            
            if (inventDim.RecId)
            {
                this.initFromInventDim(inventDim);                
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize dimension fields on <c>WHSInventReserve</c> table from <c>InventDim</c> buffer.
    /// </summary>
    /// <param name="_inventDim">
    /// The <c>InventDim</c> buffer is used to initialize inventory dimensions of <c>WHSInventReserve</c> buffer.
    /// </param>
    [Hookable(false)]
    public void initFromInventDim(InventDim _inventDim)
    {
        this.configId = _inventDim.configId;
        this.InventBatchId = _inventDim.inventBatchId;
        this.InventColorId = _inventDim.InventColorId;
        this.InventLocationId = _inventDim.InventLocationId;
        this.InventSerialId = _inventDim.inventSerialId;
        this.InventSiteId = _inventDim.inventSiteId;
        this.InventSizeId = _inventDim.InventSizeId;
        this.InventStatusId = _inventDim.InventStatusId;
        this.InventStyleId = _inventDim.InventStyleId;
        this.InventVersionId = _inventDim.InventVersionId;
        this.LicensePlateId = _inventDim.LicensePlateId;
        this.wMSLocationId = _inventDim.wMSLocationId;
        this.wMSPalletId = _inventDim.wMSPalletId;
        this.InventDimension1 = _inventDim.InventDimension1;
        this.InventDimension2 = _inventDim.InventDimension2;
        this.InventDimension3 = _inventDim.InventDimension3;
        this.InventDimension4 = _inventDim.InventDimension4;
        this.InventDimension5 = _inventDim.InventDimension5;
        this.InventDimension6 = _inventDim.InventDimension6;
        this.InventDimension7 = _inventDim.InventDimension7;
        this.InventDimension8 = _inventDim.InventDimension8;
        this.InventDimension9 = _inventDim.InventDimension9;
        this.InventDimension10 = _inventDim.InventDimension10;
        this.InventDimension11 = _inventDim.InventDimension11;
        this.InventDimension12 = _inventDim.InventDimension12;

        // <GEERU>
        this.InventGtdId_RU = _inventDim.InventGtdId_RU;
        this.InventOwnerId_RU = _inventDim.InventOwnerId_RU;
        this.InventProfileId_RU = _inventDim.InventProfileId_RU;
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddRangeCriteria</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds ranges to an <c>WHSInventReserve</c> datasource based on the values in the inventDim criteria.
    /// </summary>
    /// <param name="_qbsWHSInventReserve">
    /// The <c>WHSInventReserve</c> datasource.
    /// </param>
    /// <param name="_inventDimCriteria">
    /// The inventDim criteria that will be set as ranges on the data source.
    /// </param>
    /// <param name="_dimFields">
    /// List of inventory dimensions fields to loop over.
    /// </param>
    /// <param name="_includeEmptyValue">
    /// Allows the range to be equal to the criteria or not specified.
    /// </param>
    static public void queryAddRangeCriteria(
        QueryBuildDataSource    _qbsWHSInventReserve,
        InventDim               _inventDimCriteria,
        List                    _dimFields = InventDim::dimFieldsList(),
        boolean                 _includeEmptyValue = false)
    {
        ListEnumerator      enumerator = _dimFields.getEnumerator();
        FieldId             inventDimFieldId;
        QueryBuildRange     queryRange;

        // Fields might not have been selected on the specified buffers, or might have been updated since selection
        _inventDimCriteria.checkInvalidFieldAccess(false);

        FieldId inventReserveDimFieldId;
        while (enumerator.moveNext())
        {
            inventDimFieldId = enumerator.current();

            if (_inventDimCriteria.(inventDimFieldId))
            {
                inventReserveDimFieldId = InventDim::dim2WHSInventReserveDim(inventDimFieldId);
                queryRange = SysQuery::findOrCreateRange(_qbsWHSInventReserve, inventReserveDimFieldId);

                if (_includeEmptyValue)
                {
                    queryRange.value(queryRangeConcat(queryValue(InventDim::emptyDimField(inventDimFieldId)), _inventDimCriteria.(inventDimFieldId)));
                }
                else
                {
                    queryRange.value(queryValue(_inventDimCriteria.(inventDimFieldId)));
                }

                queryRange.status(RangeStatus::Locked);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemHasReservations</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static boolean itemHasReservations(ItemId _itemId)
    {
        WHSInventReserve inventReserve;

        select firstonly RecId from inventReserve
            where  inventReserve.ReservPhysical != 0
                && inventReserve.ItemId == _itemId;

        return inventReserve.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemHasAnyOnHandChanges</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static boolean itemHasAnyOnHandChanges(ItemId _itemId)
    {
        WHSInventReserve inventReserve;

        select firstonly RecId from inventReserve
            where  inventReserve.AvailPhysical != 0
                && inventReserve.ItemId == _itemId;

        return inventReserve.RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4369</DeveloperDocumentation>
	<Label>@WAX1263</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>InventDimId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<ClusteredIndex>ItemIdDimId</ClusteredIndex>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>Inventory</Modules>
	<PrimaryIndex>ItemIdDimId</PrimaryIndex>
	<ReplacementKey>ItemIdDimId</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HierarchyLevel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HierarchyLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CWReservPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CWAvailOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CWAvailPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CWReservOrdered</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DeltaFields</Name>
			<Label>@WAX1267</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReservPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CWReservPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CWReservOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CWAvailPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CWAvailOrdered</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProductDimensions</Name>
			<Label>@SYS70071</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConfigId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventVersionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>StorageDimensions</Name>
			<Label>@SYS108783</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>wMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicensePlateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>wMSPalletId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TrackingDimensions</Name>
			<Label>@SYS317798</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>inventBatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inventSerialId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventProfileId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventOwnerId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventGtdId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventoryDimensions</Name>
			<Label>@SYS53630</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConfigId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventVersionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension4</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension5</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension6</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension7</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension8</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension9</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension10</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension11</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension12</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>wMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicensePlateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inventBatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inventSerialId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventOwnerId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventProfileId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventGtdId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>wMSPalletId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AvailOrdered</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyAvailOrdered</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AvailPhysical</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyAvailPhysical</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>HierarchyLevel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSReservationHierarchyLevel</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReservOrdered</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyReservOrdered</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReservPhysical</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyReservPhysical</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParentInventDimId</Name>
			<AssetClassification>System metadata</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CWReservPhysical</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>WHSCWReservPhysical</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CWAvailOrdered</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>WHSCWAvailOrdered</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CWAvailPhysical</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>WHSCWAvailPhysical</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CWReservOrdered</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>WHSCWReservOrdered</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsItemCatchWeightEnabled</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSIsItemCatchWeightEnabled</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConfigId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResItemConfigurationName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventBatchId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventBatchId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventColorId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResItemColorName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventGtdId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventGTDId_RU</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventOwnerId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventOwnerId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventProfileId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventProfileId_RU</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSerialId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSerialId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSizeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResItemSizeName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventStatusId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSInventStatusId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventStyleId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResItemStyleName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventVersionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResItemVersionName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicensePlateId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLicensePlateId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>wMSLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>wMSPalletId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WMSAdvancedUpgrade</ConfigurationKey>
			<ExtendedDataType>WMSPalletId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension1</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension2</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension3</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension3</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension4</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension4</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension5</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension5</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension6</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension6</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension7</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension7</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension8</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension8</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>InventDimension9</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension9</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventDimension10</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension10</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension11</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension11</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension12</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension12</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ItemIdDimId</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventDimIdItemIdQtyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReservPhysical</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReservOrdered</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AvailPhysical</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AvailOrdered</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CWReservPhysical</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CWReservOrdered</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CWAvailPhysical</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CWAvailOrdered</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HierarchyLevelIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>HierarchyLevel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AvailPhysical</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AvailOrdered</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReservPhysical</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ReservOrdered</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CWReservPhysical</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CWAvailOrdered</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CWAvailPhysical</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CWReservOrdered</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ParentInventDimId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HierarchyLevelAvailableQtyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>HierarchyLevel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ParentInventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AvailPhysical</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AvailOrdered</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CWAvailPhysical</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CWAvailOrdered</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProductDimBatchBelowIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ConfigId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSizeId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventColorId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventStyleId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventVersionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSiteId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventStatusId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>wMSLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LicensePlateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventBatchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSerialId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProductDimBatchAboveIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ConfigId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSizeId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventColorId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventStyleId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventVersionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSiteId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventStatusId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventBatchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>wMSLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LicensePlateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSerialId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventSum</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventSum</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>InventDimId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ParentInventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentInventDimId</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>ParentInventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>