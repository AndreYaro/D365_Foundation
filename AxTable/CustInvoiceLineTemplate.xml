<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInvoiceLineTemplate</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustInvoiceLineTemplate extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        // <GEERU>
        #ISOCountryRegionCodes
        // </GEERU>
        super();
        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]))
        {
            this.SalesUnit_RU = InventParameters::find().DefaultUnitId;
        }
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        CustInvoiceLineTemplate this_Orig = this.orig();

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(CustInvoiceLineTemplate, AmountCur):
            if (this_Orig.AmountCur != this.AmountCur)
            {
                CustInvoiceDistributionTemplate::updateDistributionLineAmount(this);
            }
            break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record occurs in the <c>CustInvoiceLineTemplate</c> table.
    /// </summary>
    /// <param name="_custInvoiceLineTemplateRecId">
    /// The unique ID of the record to find.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(recId _custInvoiceLineTemplateRecId)
    {
        boolean ret = true;

        if (!CustInvoiceLineTemplate::exist(_custInvoiceLineTemplateRecId))
        {
            ret = checkFailed(strfmt(CustInvoiceLineTemplate::txtNotExist(), _custInvoiceLineTemplateRecId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>CustInvoiceLineTemplate</c> table exists.
    /// </summary>
    /// <param name="_custInvoiceLineTemplateRecId">
    /// The <c>RecId</c> value of the <c>CustInvoiceLineTemplate</c> record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(recId _custInvoiceLineTemplateRecId)
    {
        boolean found;

        found = (select firstonly RecId from custInvoiceLineTemplate
                 where custInvoiceLineTemplate.RecId == _custInvoiceLineTemplateRecId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>CustInvoiceLineTemplate</c> table.
    /// </summary>
    /// <param name="_custInvoiceLineTemplateRecId">
    /// The unique ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to select the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A <c>CustInvoiceLineTemplate</c> table buffer.
    /// </returns>
    public static CustInvoiceLineTemplate find(
        recId _custInvoiceLineTemplateRecId,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustInvoiceLineTemplate custInvoiceLineTemplate;

        custInvoiceLineTemplate.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custInvoiceLineTemplate.concurrencyModel(_concurrencyModel);
        }

        select firstonly custInvoiceLineTemplate
            where custInvoiceLineTemplate.RecId == _custInvoiceLineTemplateRecId;

        return custInvoiceLineTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineTaxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the free text invoice template line tax amount.
    /// </summary>
    /// <param name="_custInvoiceLineTemplate">
    /// An instance of <c>CustInvoiceLineTemplate</c> table record.
    /// </param>
    /// <returns>
    /// The tax amount of <c>CustInvoiceLineTemplate</c> table record.
    /// </returns>
    public static AmountCur lineTaxAmount(CustInvoiceLineTemplate _custInvoiceLineTemplate)
    {
        CustInvoiceTemplate custInvoiceTemplate;
        CustInvoiceStandardLineTemplate custInvoiceStandardLineTemplate;

        select firstonly CurrencyCode from custInvoiceTemplate
            where custInvoiceTemplate.RecId == _custInvoiceLineTemplate.CustInvoiceTemplate;

        custInvoiceStandardLineTemplate = _custInvoiceLineTemplate as CustInvoiceStandardLineTemplate;

        return Tax::calcTaxAmount( _custInvoiceLineTemplate.TaxGroup,
                                   _custInvoiceLineTemplate.TaxItemGroup,
                                   DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                   custInvoiceTemplate.CurrencyCode,
                                   _custInvoiceLineTemplate.AmountCur,
                                   TaxModuleType::FreeTxtInvoice,
                                   custInvoiceStandardLineTemplate ? custInvoiceStandardLineTemplate.Quantity : 1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the <c>LineNum</c> value of the <c>CustInvoiceLineTemplate</c> record.
    /// </summary>
    /// <param name="_custInvoiceTemplateRecId">
    /// A record ID of <c>CustInvoiceTemplate</c> table.
    /// </param>
    /// <returns>
    /// The next line number for the <c>CustInvoiceLineTemplate</c> record.
    /// </returns>
    public static LineNum nextLineNum(recId _custInvoiceTemplateRecId)
    {
        CustInvoiceLineTemplate custInvoiceLineTemplate;

        select maxof(LineNum) from custInvoiceLineTemplate
            where custInvoiceLineTemplate.CustInvoiceTemplate == _custInvoiceTemplateRecId;

        return custInvoiceLineTemplate.LineNum + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalTemplateAmountIncTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total free text invoice template amount including tax.
    /// </summary>
    /// <param name="_custInvoiceTemplateRecId">
    /// The record ID of the <c>custInvoiceTemplate</c> table.
    /// </param>
    /// <returns>
    /// The total free text invoice template amount.
    /// </returns>
    public static AmountCur totalTemplateAmountIncTax(recId _custInvoiceTemplateRecId)
    {
        CustInvoiceLineTemplate custInvoiceLineTemplate;
        AmountCur totalTemplateAmount;

        while select custInvoiceLineTemplate
            where custInvoiceLineTemplate.CustInvoiceTemplate == _custInvoiceTemplateRecId
        {
            totalTemplateAmount += (custInvoiceLineTemplate.AmountCur + CustInvoiceLineTemplate::lineTaxAmount(custInvoiceLineTemplate));
        }

        return totalTemplateAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalTemplateLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total amount of the <c>CustInvoiceTemplate</c> table record.
    /// </summary>
    /// <param name="_custInvoiceTemplateRecId">
    /// A record ID of <c>CustInvoiceTemplate</c> table.
    /// </param>
    /// <returns>
    /// The total amount for the <c>CustInvoiceTemplate</c> table record.
    /// </returns>
    public static AmountCur totalTemplateLineAmount(recId _custInvoiceTemplateRecId)
    {
        CustInvoiceLineTemplate custInvoiceLineTemplate;
        AmountCur sumTemplateAmount;

        sumTemplateAmount = (select sum(AmountCur) from custInvoiceLineTemplate
                                where custInvoiceLineTemplate.CustInvoiceTemplate == _custInvoiceTemplateRecId).AmountCur;

        return sumTemplateAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        super();

        if (TaxIntegrationUtils::isTransitDocumentEnabled())
        {
            this.orig().TransitDocumentTransactionMap_IN::deleteTransitDocuments();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS314201</DeveloperDocumentation>
	<Label>@SYS314812</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>Description</TitleField1>
	<TitleField2>AmountCur</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<InstanceRelationType>InstanceRelationType</InstanceRelationType>
	<Modules>AccountsReceivable</Modules>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>CustInvoiceDistributionTemplate</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CustInvoiceDistributionTemplate</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>CustInvoiceLineTemplateTaxExtension_IN</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CustInvoiceLineTemplateTaxExtension_IN</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CustomerInvoiceLines</Name>
			<Label>@SYS2166</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustInvoiceTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesUnit_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OverrideSalesTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustInvoiceTemplate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InstanceRelationType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RelationType</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesUnit_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>SalesUnit</ExtendedDataType>
			<Label>@GLS100763</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OverrideSalesTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxIntegrationOverrideSalesTax</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalLine</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CategoryId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryLocation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryState</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IntrastatCommodity</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OverrideSalesTax</MapField>
					<MapFieldTo>OverrideSalesTax</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchQty</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPurchUnit</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
					<MapFieldTo>TaxItemGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustInvoiceTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceTemplate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CustInvoiceTemplate</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustInvoiceTemplate_CustInvoiceTemplateLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustInvoiceTemplate</Name>
					<Field>CustInvoiceTemplate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesUnit_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesUnit_RU</Name>
					<Field>SalesUnit_RU</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SymbolIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroup</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>TaxGroup</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroup</Name>
					<SourceEDT>TaxItemGroup</SourceEDT>
					<Field>TaxItemGroup</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxItemGroupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>