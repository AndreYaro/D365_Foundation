<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSTmpPlannedCrossDocking</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSTmpPlannedCrossDocking extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>populatePlannedCrossDocking</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populate a <c>WHSTmpPlannedCrossDocking</c> buffer based on a <c>Common</c>.
    /// </summary>
    /// <param name = "_common">A <c>Common</c> record.</param>
    /// <returns>A populated <c>WHSTmpPlannedCrossDocking</c> buffer.</returns>    
    protected internal static WHSTmpPlannedCrossDocking populatePlannedCrossDocking(Common _common)
    {
        WHSTmpPlannedCrossDocking   plannedCrossDocking;

        WHSCrossDockLoadLine crossDockLoadLine;
        InventTransOrigin    inventTransOrigin;
        WHSLoadLine          loadLine;
        Common               common;
    
        ttsbegin;
    
        common = _common;
    
        switch (common.TableId)
        {
            case tableNum(WHSShipmentTable):
                WHSShipmentTable shipmentTable = common as WHSShipmentTable;
    
                select crossDockLoadLine
                    exists join loadLine
                        where crossDockLoadLine.LoadLineRecId   == loadLine.RecId
                        &&    loadLine.ShipmentId               == shipmentTable.ShipmentId;
                break;
    
            case tableNum(WHSLoadTable):
                WHSLoadTable loadTable = common as WHSLoadTable;
    
                select crossDockLoadLine
                    exists join loadLine
                        where crossDockLoadLine.LoadLineRecId   == loadLine.RecId
                        &&    loadLine.LoadId                   == loadTable.LoadId;
                break;
    
            case tableNum(WHSLoadLine):
                loadLine = common as WHSLoadLine;
    
                select crossDockLoadLine
                    where crossDockLoadLine.LoadLineRecId == loadLine.RecId;
                break;
    
            case tableNum(InventTrans):
                InventTrans inventTrans = common as InventTrans;
    
                if (inventTrans.direction() == InventDirection::Issue)
                {
                    inventTransOrigin = inventTrans.InventTransOrigin();
    
                    select crossDockLoadLine
                        where crossDockLoadLine.InventTransIdDemand == inventTransOrigin.InventTransId
                        exists join loadLine
                            where crossDockLoadLine.LoadLineRecId   == loadLine.RecId
                               && inventTrans.InventDimId           == loadLine.InventDimId;
                }
                break;
    
            default:
                select crossDockLoadLine;
                break;
        }
    
        while (crossDockLoadLine)
        {
            InventTransOrigin supplyInventTransOrigin = InventTransOrigin::find(crossDockLoadLine.InventTransOriginIdSupply);
    
            plannedCrossDocking.CrossDockLoadLineRecId      = crossDockLoadLine.RecId;
            plannedCrossDocking.SupplyOrderNum              = supplyInventTransOrigin.ReferenceId;
            plannedCrossDocking.InventTransType             = supplyInventTransOrigin.ReferenceCategory;
            plannedCrossDocking.DemandSourceShipDateTime    = WHSCrossDocking::calculateShipDateTime(WHSLoadLine::findbyRecId(crossDockLoadLine.LoadLineRecId));
            plannedCrossDocking.ExpectedDateTime            = WHSCrossDocking::calculateSupplyDateTime(supplyInventTransOrigin);
    
            plannedCrossDocking.insert();
    
            next crossDockLoadLine;
        }
    
        ttscommit;
    
        return plannedCrossDocking;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:TmpPlannedCrossDockingDocumentation</DeveloperDocumentation>
	<Label>@WAX:PlannedCrossDocking</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>CrossDockLoadLineRecId</TitleField1>
	<TitleField2>ExpectedDateTime</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
    <ClusteredIndex>DemandSourceShipDateTimeIdx</ClusteredIndex>
    <TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CrossDockLoadLineRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DemandSourceShipDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpectedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SupplyOrderNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DemandSourceShipDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpectedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SupplyOrderNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CrossDockLoadLineRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>DemandSourceShipDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockDemandSourceShipDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ExpectedDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockExpectedDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SupplyOrderNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockSupplyOrderNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InventTransType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CrossDockLoadLineRecId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCrossDockLoadLineRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>DemandSourceShipDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DemandSourceShipDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>InventTransferTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransferTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SupplyOrderNum</Name>
					<Field>SupplyOrderNum</Field>
					<RelatedField>TransferId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>InventTransType</Name>
					<Field>InventTransType</Field>
					<ValueStr>InventTransType::TransferOrderReceive</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProdTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProdTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SupplyOrderNum</Name>
					<Field>SupplyOrderNum</Field>
					<RelatedField>ProdId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>InventTransType</Name>
					<Field>InventTransType</Field>
					<ValueStr>InventTransType::Production</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SupplyOrderNum</Name>
					<Field>SupplyOrderNum</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>InventTransType</Name>
					<Field>InventTransType</Field>
					<ValueStr>InventTransType::Purch</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSCrossDockLoadLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>WHSCrossDockLoadLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CrossDockLoadLineRecId</Name>
					<Field>CrossDockLoadLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>