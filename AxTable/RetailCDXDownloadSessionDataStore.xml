<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCDXDownloadSessionDataStore</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailCDXDownloadSessionDataStore extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getRemainingRetries</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the display number for remaining retries of a failed download session.
    /// </summary>
    /// <returns>
    /// The number of remaining retries of the failed download session.
    /// </returns>
    internal display str getRemainingRetries()
    {
        str remainingRetries = '';

        if (this.Status == RetailCDXDownloadSessionStatus::ApplyFailed ||
            this.Status == RetailCDXDownloadSessionStatus::DownloadFailed)
        {
            int remainingTryCount = RetailConnParameters::getCDXTryCount() - this.TryCount;
            remainingRetries = remainingTryCount > 0 ? int2Str(remainingTryCount) : '0';
        }

        return remainingRetries;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dataStoreName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the datastore name corresponding to the current download session.
    /// </summary>
    /// <returns>The datastore name.</returns>
    internal display RetailConnProfileName dataStoreName()
    {
        RetailConnDatabaseProfile dataStore;

        select firstOnly Name from dataStore
            where dataStore.RecId == this.DataStore;

        return dataStore.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSuspended</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the current session is suspended or not.
    /// When download session dependency enforcement feature is enabled, a suspended session will block processing of all subsequent download sesssions from dependent jobs, for the corresponding datastore.
    /// </summary>
    /// <returns>True if the session is suspended; false otherwise.</returns>
    internal boolean isSuspended()
    {
        boolean result = false;

        result  = this.Status == RetailCDXDownloadSessionStatus::Suspended;

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCancelable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the current session can be canceled or not.
    /// </summary>
    /// <returns>True if the session can be canceled; false otherwise.</returns>
    internal boolean isCancelable()
    {
        boolean result = false;

        result  = this.Status != RetailCDXDownloadSessionStatus::Applied && this.Status != RetailCDXDownloadSessionStatus::Canceled;

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packageDependencyEnforcementWaitMessage</Name>
				<Source><![CDATA[
    /// <summary>
    ///To display message of download session
    /// </summary>
    /// <returns>Message</returns>
    internal str packageDependencyEnforcementWaitMessage()
    {
        RetailCDXDownloadSession    blockingSession, currentSession;

        select firstonly currentSession where currentSession.RecId == this.Session;

        // Find if a session from the same job is suspended
        blockingSession = RetailConnDatabaseProfile::getBlockingDownloadSession(this.DataStore, currentSession.JobID);
        if (blockingSession.RecId)
        {
            return strFmt("@Retail:PackageDependecyEnforcementWaitMessage", blockingSession.Session);
        }
        else
        {
            // Get all dependent jobs, find if a session from any of the dependent jobs is in suspended state.
            SetEnumerator dependentJobIdsEnumerator = RetailConnSchedulerJobTable::getDependentJobIdEnumerator(currentSession.jobId);
            while (dependentJobIdsEnumerator.moveNext())
            {
                blockingSession = RetailConnDatabaseProfile::getBlockingDownloadSession(this.DataStore, dependentJobIdsEnumerator.current());
                if (blockingSession.RecId)
                {
                    return strFmt("@Retail:PackageDependecyEnforcementWaitMessage", blockingSession.Session);
                }
            }

            return this.Message;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RetailScheduler</ConfigurationKey>
	<DeveloperDocumentation>@REX1533</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@REX1537</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>Session</TitleField1>
	<TitleField2>DataStore</TitleField2>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ChannelManagement</Modules>
	<ReplacementKey>SessionDataStoreIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Session</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DataStore</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Session</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DataStore</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@RET609</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DataStore</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Session</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Message</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateApplied</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateDownloaded</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateRequested</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TryCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RowsAffected</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplacedBy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DataStore</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCDXDataStoreRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>DateApplied</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCDXDateApplied</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>DateDownloaded</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCDXDateDownloaded</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>DateRequested</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCDXDateRequested</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Message</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCDXMonDataSyncMessage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Session</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCDXDownloadSessionRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailCDXDownloadSessionStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TryCount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCDXTryCount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RowsAffected</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCDXRowsAffected</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReplacedBy</Name>
			<ExtendedDataType>RetailCDXReplacedBySessionNumber</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SessionDataStoreIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Session</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataStore</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DataStoreIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DataStore</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ModifiedDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ModifiedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DataStoreSessionStatusIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>DataStore</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Session</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Status</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DataStoreStatusSessionIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>DataStore</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Session</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailCDXDownloadSession</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailCDXDownloadSession</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Session</Name>
					<SourceEDT>RetailCDXDownloadSessionRefRecId</SourceEDT>
					<Field>Session</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailConnDatabaseProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailConnDatabaseProfile</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DataStore</Name>
					<SourceEDT>RetailCDXDataStoreRefRecId</SourceEDT>
					<Field>DataStore</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailCDXDownloadSession1</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailCDXDownloadSession</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReplacedBy</Name>
					<SourceEDT>RetailCDXDownloadSessionRefRecId</SourceEDT>
					<Field>ReplacedBy</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>