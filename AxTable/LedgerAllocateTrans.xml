<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerAllocateTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerAllocateTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.AllocateTransMap::setSort1980();

        this.LineNum = this.newLineNumber();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newLineNumber</Name>
				<Source><![CDATA[
    private real newLineNumber()
    {
        LedgerAllocateTrans allocateTrans;

        select maxof(LineNum) from allocateTrans
            where allocateTrans.Key == this.Key;

        return allocateTrans.LineNum + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startDate</Name>
				<Source><![CDATA[
    public StartDate startDate(BudgetMap budget)
    {
        LedgerAllocateKey       allocateKey;
        StartDate               startDate;
        Futures                 futures;

        recId                   calendarRecId = CompanyInfoHelper::fiscalCalendarRecId();

        allocateKey     = LedgerAllocateKey::find(this.Key);

        if (allocateKey.Fixed)
        {
            startDate = LedgerFiscalCalendar::findOpeningStartDateByDate(calendarRecId,budget.StartDate);
        }
        else
        {
            startDate = budget.StartDate;
        }

        if (this.Freq)
        {
            futures = Futures::construct(startDate,this.Freq,this.FreqCode);
            return futures.next();
        }
        else
        {
            return startDate;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.AllocateTransMap::setSort1980();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(LedgerAllocateKeyId _key, Date1980 _sort1980, recId _recId )
    {
        boolean ret = true;

        if (!LedgerAllocateTrans::exist(_key, _sort1980, _recId))
        {
            ret = checkFailed(strFmt(LedgerAllocateTrans::txtNotExist(), _key, _sort1980, _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyKey</Name>
				<Source><![CDATA[
    public static void copyKey(
        LedgerAllocateKeyId _toKey,
        LedgerAllocateKeyId _fromKey)
    {
        LedgerAllocateTrans ledgerAllocateTransFrom;
        LedgerAllocateTrans ledgerAllocateTransTo;

        if (_toKey == _fromKey)
        {
            throw error("@SYS83642");
        }

        insert_recordset ledgerAllocateTransTo (Key, DefaultDimension, Freq, FreqCode, LineNum, PctProportion, Sort1980)
            select _toKey, DefaultDimension, Freq, FreqCode, LineNum, PctProportion, Sort1980
                from ledgerAllocateTransFrom
                    where ledgerAllocateTransFrom.Key == _fromKey;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(LedgerAllocateKeyId _key, Date1980 _sort1980, recId _recId )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     ledgerAllocateTrans
                 where
                     ledgerAllocateTrans.Key == _key &&
                    ledgerAllocateTrans.Sort1980 == _sort1980 &&
                    ledgerAllocateTrans.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static LedgerAllocateTrans find(
        LedgerAllocateKeyId _key,
        Date1980 _sort1980,
        recId _recId ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        LedgerAllocateTrans ledgerAllocateTrans;

        ledgerAllocateTrans.selectForUpdate(_forupdate);

        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            ledgerAllocateTrans.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            ledgerAllocateTrans
            where
            ledgerAllocateTrans.Key == _key &&
                    ledgerAllocateTrans.Sort1980 == _sort1980 &&
                    ledgerAllocateTrans.RecId == _recId;

        return ledgerAllocateTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>remainPercent</Name>
				<Source><![CDATA[
    public static Percent remainPercent(
        TransDate           _dateRemain,
        LedgerAllocateKeyId _key,
        TransDate           _breakEvenPoint = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        LedgerAllocateTrans ledgerAllocateTrans;
        TransDate           tmp1980;

        if (_key)
        {
            tmp1980 = mkDate(01,01,1980) + (_dateRemain - _breakEvenPoint) - 12;

            while select ledgerAllocateTrans
                order by Sort1980
                where ledgerAllocateTrans.Key       == _key     &&
                      ledgerAllocateTrans.Sort1980  >= tmp1980
            {
                if (ledgerAllocateTrans.AllocateTransMap::calcTestDate(_breakEvenPoint) >= _dateRemain)
                {
                    return 100 - ledgerAllocateTrans.PctProportion;
                }
            }
        }

        return 100;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102213";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS125897</DeveloperDocumentation>
	<FormRef>LedgerAllocateTrans</FormRef>
	<Label>@SYS14040</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>Key</TitleField1>
	<TitleField2>Sort1980</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>KeyIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>KeyIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreqCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Freq</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PctProportion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Allocation</Name>
			<Label>@SYS12895</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Freq</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreqCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PctProportion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS342338</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Sorting</Name>
			<Label>@SYS4138</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Sort1980</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDefaultDimensionValueSet</ExtendedDataType>
			<Visible>No</Visible>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Freq</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Periods</ExtendedDataType>
			<Label>@GeneralLedger:IntervalOfTime</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FreqCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@GeneralLedger:UnitOfTime</Label>
			<EnumType>PeriodUnit</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerAllocateKeyId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PctProportion</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerAllocatePct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>Sort1980</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>Date1980</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KeyIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Sort1980</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FK_DimensionAttributeValueSet_LedgerAllo</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefaultDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>AllocateTransMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Sort1980</MapField>
					<MapFieldTo>Sort1980</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Freq</MapField>
					<MapFieldTo>Freq</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FreqCode</MapField>
					<MapFieldTo>FreqCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Id</MapField>
					<MapFieldTo>Key</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DefaultDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerAllocateTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerAllocateKey</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LedgerAllocateKey</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Key</Name>
					<SourceEDT>LedgerAllocateKeyId</SourceEDT>
					<Field>Key</Field>
					<RelatedField>Key</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>KeyIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>