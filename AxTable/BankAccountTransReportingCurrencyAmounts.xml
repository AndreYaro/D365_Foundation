<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankAccountTransReportingCurrencyAmounts</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankAccountTransReportingCurrencyAmounts extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertRecordsFromBankAccountTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the <c>BankAccountTransReportingCurrencyAmounts</c> table with values from the <c>BankAccountTrans</c> table.
    /// </summary>
    /// <param name = "_parameters">
    /// Unused. A parameter is required by SysOperationSandbox.
    /// </param>
    public static void insertRecordsFromBankAccountTrans(container _parameters)
    {
        BankAccountTransReportingCurrencyAmounts bankAccountTransReportingCurrencyAmounts;

        select firstonly RecId from bankAccountTransReportingCurrencyAmounts;

        // Only populate the table if it hasn't been populated yet.
        if (!bankAccountTransReportingCurrencyAmounts.RecId)
        {
            ttsbegin;

            BankAccountTransReportingCurrencyAmounts::populateBankAccountTransReportingCurrencyAmounts();
            BankAccountTransReportingCurrencyAmounts::updateReportingCurrencyDetailsFromGeneralLedger();

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateReportingCurrencyAmountsForBankAccountTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates all the <c>BankAccountTransReportingCurrencyAmounts</c> records with the reporting currency amount that was posted to GL.
    /// </summary>
    /// <param name = "_parameters">
    /// Unused. A parameter is required by SysOperationSandbox.
    /// </param>
    public static void updateReportingCurrencyAmountsForBankAccountTrans(container _parameters)
    {
        ttsbegin;
        BankAccountTransReportingCurrencyAmounts::updateReportingCurrencyDetailsFromGeneralLedger();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateBankAccountTransReportingCurrencyAmounts</Name>
				<Source><![CDATA[
    private static void populateBankAccountTransReportingCurrencyAmounts()
    {
        BankAccountTrans bankAccountTrans;
        BankAccountTransReportingCurrencyAmounts bankAccountTransReportingCurrencyAmounts;

        insert_recordset bankAccountTransReportingCurrencyAmounts
            (BankAccountTrans, AccountId, Voucher, BankTransType, TransDate, CurrencyCode, AmountCur, AmountMST)
            select RecId, AccountId, Voucher, BankTransType, TransDate, CurrencyCode, AmountCur, AmountMST from bankAccountTrans
                where bankAccountTrans.AmountReportingCurrency == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateReportingCurrencyDetailsFromGeneralLedger</Name>
				<Source><![CDATA[
    private static void updateReportingCurrencyDetailsFromGeneralLedger()
    {
        GeneralJournalEntry generalJournalEntry;
        GeneralJournalAccountEntry generalJournalAccountEntry;
        SubledgerVoucherGeneralJournalEntry subledgerVoucherGeneralJournalEntry;
        BankAccountTransReportingCurrencyAmounts bankAccountTransReportingCurrencyAmounts;
        BankAccountTrans bankAccountTrans;

        bankAccountTransReportingCurrencyAmounts.skipDataMethods(true);
        bankAccountTransReportingCurrencyAmounts.skipDatabaseLog(true);
        bankAccountTransReportingCurrencyAmounts.skipEvents(true);

        // Non-summarized bank account transactions use GL reporting amounts.
        update_recordset bankAccountTransReportingCurrencyAmounts
            setting AmountReportingCurrency = generalJournalAccountEntry.ReportingCurrencyAmount,
                JournalNumber = generalJournalEntry.JournalNumber
            join RecId from bankAccountTrans
                where BankAccountTrans.RecId == bankAccountTransReportingCurrencyAmounts.BankAccountTrans
            join RecId from subledgerVoucherGeneralJournalEntry
                where subledgerVoucherGeneralJournalEntry.Voucher == bankAccountTrans.Voucher
                    && subledgerVoucherGeneralJournalEntry.AccountingDate == bankAccountTrans.TransDate
                    && subledgerVoucherGeneralJournalEntry.VoucherDataAreaId == bankAccountTrans.DataAreaId
            join JournalNumber from generalJournalEntry
                where generalJournalEntry.RecId == subledgerVoucherGeneralJournalEntry.GeneralJournalEntry
            join ReportingCurrencyAmount from generalJournalAccountEntry
                where generalJournalAccountEntry.GeneralJournalEntry == generalJournalEntry.RecId
                    && generalJournalAccountEntry.AccountingCurrencyAmount == bankAccountTrans.AmountMST;

        // Bank deposit slips may summarize into a single bank account transaction when posted in the same payment journal.
        // When this happens, the BankAccountTrans reporting currency should equal the sum of the deposit slip GL entries.
        BankDeposit bankDeposit;

        while select forupdate bankAccountTransReportingCurrencyAmounts
            join AccountId, SourceRecId from bankAccountTrans
                where bankAccountTrans.RecId == bankAccountTransReportingCurrencyAmounts.BankAccountTrans
                    && bankAccountTrans.SourceTableId == tableNum(BankDepositDocument)
                    && bankAccountTransReportingCurrencyAmounts.AmountReportingCurrency == 0
        {
            select sum(ReportingCurrencyAmount) from generalJournalAccountEntry
                exists join bankDeposit
                    where bankDeposit.BankDepositDocument == bankAccountTrans.SourceRecId
                exists join subledgerVoucherGeneralJournalEntry
                    where subledgerVoucherGeneralJournalEntry.Voucher == bankDeposit.Voucher
                        && subledgerVoucherGeneralJournalEntry.AccountingDate == bankDeposit.TransDate
                        && subledgerVoucherGeneralJournalEntry.VoucherDataAreaId == bankDeposit.DataAreaId
                        && generalJournalAccountEntry.GeneralJournalEntry == subledgerVoucherGeneralJournalEntry.GeneralJournalEntry
                        && generalJournalAccountEntry.AccountingCurrencyAmount == bankDeposit.AmountMST;

            bankAccountTransReportingCurrencyAmounts.AmountReportingCurrency = generalJournalAccountEntry.ReportingCurrencyAmount;

            // There may be many journal numbers associated with a summarized deposit slip. Here we default to the first.
            select firstonly JournalNumber from generalJournalEntry
                exists join bankDeposit
                    where bankDeposit.BankDepositDocument == bankAccountTrans.SourceRecId
                exists join subledgerVoucherGeneralJournalEntry
                    where subledgerVoucherGeneralJournalEntry.Voucher == bankDeposit.Voucher
                        && subledgerVoucherGeneralJournalEntry.AccountingDate == bankDeposit.TransDate
                        && subledgerVoucherGeneralJournalEntry.VoucherDataAreaId == bankDeposit.DataAreaId
                        && subledgerVoucherGeneralJournalEntry.GeneralJournalEntry == generalJournalEntry.RecId;

            bankAccountTransReportingCurrencyAmounts.JournalNumber = generalJournalEntry.JournalNumber;
            bankAccountTransReportingCurrencyAmounts.update();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Bank</ConfigurationKey>
	<DeveloperDocumentation>@CashManagement:CashBankMgmt_Table_DevDocumentation_BankAccountTransReportingCurrencyAmounts</DeveloperDocumentation>
	<Label>@CashManagement:CashBankMgmt_TableTitle_BankAccountTransReportingCurrencyAmounts</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>AccountId</TitleField1>
	<TitleField2>Voucher</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>Bank</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountReportingCurrency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyBankAccountId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<Label>@SYS12336</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMST</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountReportingCurrency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMSTSecondary</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankTransType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankTransactionType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BankAccountTrans</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>GeneralJournalEntryJournalNumber</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BankAccountTransIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>BankAccountTrans</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>BankAccountTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankAccountTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankAccountTrans</Name>
					<Field>BankAccountTrans</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>