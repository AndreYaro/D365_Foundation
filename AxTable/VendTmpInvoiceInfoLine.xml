<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendTmpInvoiceInfoLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendTmpInvoiceInfoLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromInventTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the table by populating it with the pending invoices line records.
    /// </summary>
    /// <param name="_inventTrans">
    ///    A table buffer instance that relates to the <c>InventTrans</c> table.
    /// </param>
    /// <remarks>
    ///    The data in the table is restricted to the pending invoices for a specified <c>InventTrans</c>
    ///    record.
    /// </remarks>
    public void initFromInventTrans(InventTrans _inventTrans)
    {
        VendInvoiceInfoTable parmTable;
        VendInvoiceInfoLine parmLine;
        VendPackingSlipTrans vendPackingSlipTrans;
        InventTransOrigin inventTransOrigin;

        parmTable.recordLevelSecurity(true);
        parmLine.recordLevelSecurity(true);

        insert_recordset this (
                OrigPurchId,
                ItemId,
                ReceiveNow,
                PurchPrice,
                LineDisc,
                LinePercent,
                LineAmount,
                InventDimId,
                TableRefId,
                LineNum,
                PurchaseLineLineNumber,
                ProcurementCategory,
                Description)
            select OrigPurchId, ItemId, ReceiveNow, PurchPrice, LineDisc, LinePercent, LineAmount, InventDimId, TableRefId, LineNum,
                    PurchaseLineLineNumber, ProcurementCategory, Description from parmLine
            exists join parmTable
                where parmTable.TableRefId == parmLine.TableRefId
                   && parmTable.ParmId == parmLine.ParmId
                   && (parmTable.ParmJobStatus == ParmJobStatus::Waiting || parmTable.ParmJobStatus == ParmJobStatus::ContainErrors)
            exists join vendPackingSlipTrans
                where vendPackingSlipTrans.CostLedgerVoucher == _inventTrans.VoucherPhysical
                exists join inventTransOrigin
                    where inventTransOrigin.RecId == _inventTrans.InventTransOrigin && inventTransOrigin.InventTransId == vendPackingSlipTrans.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the table by populating it with the pending invoice line records.
    /// </summary>
    /// <param name="_purchTable">
    ///    A table buffer instance that relates to the <c>PurchTable</c> table.
    /// </param>
    /// <remarks>
    ///    The data in the table is restricted to the pending invoices for a given purchase order.
    /// </remarks>
    public void initFromPurchTable(PurchTable _purchTable)
    {
        VendInvoiceInfoTable parmTable;
        VendInvoiceInfoLine parmLine;
        VendInvoiceInfoLine parmLine2;
        VendInvoiceInfoTable vendInvoiceInfoTable;
        VendInvoiceInfoLine vendInvoiceInfoLine;

        parmTable.recordLevelSecurity(true);
        parmLine.recordLevelSecurity(true);
        parmLine2.recordLevelSecurity(true);

        insert_recordset this (
                OrigPurchId,
                ItemId,
                ReceiveNow,
                PurchPrice,
                LineDisc,
                LinePercent,
                LineAmount,
                InventDimId,
                TableRefId,
                LineNum,
                PurchaseLineLineNumber,
                ProcurementCategory,
                Description)
            select OrigPurchId, ItemId, ReceiveNow, PurchPrice, LineDisc, LinePercent, LineAmount, InventDimId, TableRefId, LineNum,
                    PurchaseLineLineNumber, ProcurementCategory, Description from parmLine
            exists join parmTable
                where parmTable.TableRefId == parmLine.TableRefId &&
                      parmTable.ParmId == parmLine.ParmId &&
                      (parmTable.ParmJobStatus == ParmJobStatus::Waiting ||
                       parmTable.ParmJobStatus == ParmJobStatus::ContainErrors) &&
                      parmTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending
             exists join parmLine2
                where parmLine2.TableRefId == parmTable.TableRefId && parmLine2.ParmId == parmTable.ParmId && parmLine2.OrigPurchId == _purchTable.PurchId;

        // Copy all invoices where the PO is at the header but not on any of the lines
        vendInvoiceInfoLine = null;
        vendInvoiceInfoTable = null;
        parmLine2 = null;

        insert_recordset this (
                OrigPurchId,
                ItemId,
                ReceiveNow,
                PurchPrice,
                LineDisc,
                LinePercent,
                LineAmount,
                InventDimId,
                TableRefId,
                LineNum,
                PurchaseLineLineNumber,
                ProcurementCategory,
                Description)
            select OrigPurchId, ItemId, ReceiveNow, PurchPrice, LineDisc, LinePercent, LineAmount, InventDimId, TableRefId, LineNum,
                    PurchaseLineLineNumber, ProcurementCategory, Description from vendInvoiceInfoLine
                where vendInvoiceInfoLine.ParmId == '' // only saved invoices
                exists join vendInvoiceInfoTable
                    where vendInvoiceInfoTable.TableRefId == vendInvoiceInfoLine.TableRefId &&
                          vendInvoiceInfoTable.ParmId == vendInvoiceInfoLine.ParmId &&
                          vendInvoiceInfoTable.PurchId == _purchTable.PurchId &&
                         (vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Waiting ||
                          vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::ContainErrors)
                 notexists join parmLine2
                    where parmLine2.TableRefId == vendInvoiceInfoTable.TableRefId &&
                          parmLine2.ParmId == vendInvoiceInfoTable.ParmId &&
                          parmLine2.OrigPurchId == _purchTable.PurchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendInvoiceInfoTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the table by populating it with the pending invoice line records.
    /// </summary>
    /// <param name="_vendInvoiceInfoTable">
    ///    A table buffer instance that relates to the <c>VendInvoiceInfoTable</c> table.
    /// </param>
    /// <remarks>
    ///    The data in the table is restricted to the given invoice.
    /// </remarks>
    public void initFromVendInvoiceInfoTable(VendInvoiceInfoTable _vendInvoiceInfoTable)
    {
        VendInvoiceInfoTable parmTable;
        VendInvoiceInfoLine parmLine;

        parmTable.recordLevelSecurity(true);
        parmLine.recordLevelSecurity(true);

        insert_recordset this (
                OrigPurchId,
                ItemId,
                ReceiveNow,
                PurchPrice,
                LineDisc,
                LinePercent,
                LineAmount,
                InventDimId,
                TableRefId,
                LineNum,
                PurchaseLineLineNumber,
                ProcurementCategory,
                Description)
            select OrigPurchId, ItemId, ReceiveNow, PurchPrice, LineDisc, LinePercent, LineAmount, InventDimId, TableRefId,
                    LineNum, PurchaseLineLineNumber, ProcurementCategory, Description from parmLine
                where parmLine.TableRefId == _vendInvoiceInfoTable.TableRefId
            exists join parmTable
                where parmTable.TableRefId == parmLine.TableRefId &&
                      parmTable.ParmId == parmLine.ParmId &&
                      (parmTable.ParmJobStatus == ParmJobStatus::Waiting ||
                       parmTable.ParmJobStatus == ParmJobStatus::ContainErrors) &&
                      parmTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendPackingSlipTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the table by populating it with the pending invoice line records.
    /// </summary>
    /// <param name="_vendPackingSlipTrans">
    ///    A table buffer instance that relates to the <c>VendPackingSlipTrans</c> table.
    /// </param>
    /// <remarks>
    ///    The data in the table is restricted to the pending invoices for a specified packing slip.
    /// </remarks>
    public void initFromVendPackingSlipTrans(VendPackingSlipTrans _vendPackingSlipTrans)
    {
        VendInvoiceInfoTable parmTable;
        VendInvoiceInfoLine parmLine;
        VendInvoiceInfoLine parmLine2;
        VendPackingSlipJour vendPackingSlipJour = _vendPackingSlipTrans.vendPackingslipJour();

        parmTable.recordLevelSecurity(true);
        parmLine.recordLevelSecurity(true);
        parmLine2.recordLevelSecurity(true);

        insert_recordset this (
                OrigPurchId,
                ItemId,
                ReceiveNow,
                PurchPrice,
                LineDisc,
                LinePercent,
                LineAmount,
                InventDimId,
                TableRefId,
                LineNum,
                PurchaseLineLineNumber,
                ProcurementCategory,
                Description)
            select OrigPurchId, ItemId, ReceiveNow, PurchPrice, LineDisc, LinePercent, LineAmount, InventDimId, TableRefId, LineNum,
                    PurchaseLineLineNumber, ProcurementCategory, Description from parmLine
            exists join parmTable
                where parmTable.TableRefId == parmLine.TableRefId &&
                      parmTable.ParmId == parmLine.ParmId &&
                      (parmTable.ParmJobStatus == ParmJobStatus::Waiting ||
                       parmTable.ParmJobStatus == ParmJobStatus::ContainErrors)
             exists join parmLine2
                where parmLine2.TableRefId == parmTable.TableRefId &&
                      parmLine2.ParmId == parmTable.ParmId &&
                      parmLine2.OrigPurchId == vendPackingSlipJour.PurchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the table by populating it with the pending invoice line records.
    /// </summary>
    /// <param name="_vendTable">
    ///    A table buffer instance that relates to the <c>VendTable</c> table.
    /// </param>
    /// <remarks>
    ///    The data in the table is restricted to the pending invoices for a specified vendor.
    /// </remarks>
    public void initFromVendTable(VendTable _vendTable)
    {
        VendInvoiceInfoTable parmTable;
        VendInvoiceInfoLine parmLine;

        parmTable.recordLevelSecurity(true);
        parmLine.recordLevelSecurity(true);

        insert_recordset this (
                OrigPurchId,
                ItemId,
                ReceiveNow,
                PurchPrice,
                LineDisc,
                LinePercent,
                LineAmount,
                InventDimId,
                TableRefId,
                LineNum,
                PurchaseLineLineNumber,
                ProcurementCategory,
                Description)
            select OrigPurchId, ItemId, ReceiveNow, PurchPrice, LineDisc, LinePercent, LineAmount, InventDimId, TableRefId, LineNum,
                    PurchaseLineLineNumber, ProcurementCategory, Description from parmLine
            exists join parmTable
                where parmTable.TableRefId == parmLine.TableRefId &&
                      parmTable.ParmId == parmLine.ParmId &&
                      (parmTable.ParmJobStatus == ParmJobStatus::Waiting ||
                       parmTable.ParmJobStatus == ParmJobStatus::ContainErrors) &&
                      parmTable.VendInvoiceSaveStatus == VendInvoiceSaveStatus::Pending &&
                      parmTable.OrderAccount == _vendTable.AccountNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the name field from the order line, because this is relevant for category based lines.
    /// </summary>
    /// <returns>
    /// The name field from the order line.
    /// </returns>
    public display ItemFreeTxt name()
    {
        if (this.OrigPurchId == '')
        {
            // this is non PO.
            return this.Description;
        }

        return PurchLine::find(this.OrigPurchId, this.PurchaseLineLineNumber).Name;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<Label>@SYS108836</Label>
	<TableGroup>TransactionLine</TableGroup>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>TableRefIdx</ClusteredIndex>
	<PrimaryIndex>TableRefIdx</PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrigPurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiveNow</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Discount</Name>
			<Label>@SYS11829</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LinePercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineDisc</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TableRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigPurchId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Inventory</Name>
			<Label>@SYS981</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Price</Name>
			<Label>@SYS11865</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchaseLines</Name>
			<Label>@SYS9664</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchaseQuantity</Name>
			<Label>@SYS11187</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReceiveNow</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TableGroup</Name>
			<Label>@SYS21958</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InvoiceLineDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Label>@SYS7407</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineAmount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS6901</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineDisc</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PurchLineDisc</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LinePercent</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PurchLinePercent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrigPurchId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PurchIdOrig</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProcurementCategory</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PurchCategory</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchaseLineLineNumber</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TradeLineNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PurchPrice</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PurchPrice</ExtendedDataType>
			<Label>@SYS11770</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReceiveNow</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PurchQty</ExtendedDataType>
			<Label>@SYS14578</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TableRefId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TradeLineRefId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TableRefIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>TableRefId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OrigPurchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProcurementCategory</Name>
					<SourceEDT>PurchCategory</SourceEDT>
					<Field>ProcurementCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrigPurchId</Name>
					<SourceEDT>PurchIdOrig</SourceEDT>
					<Field>OrigPurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PurchIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTmpInvoiceInfoTable</Name>
			<RelatedTable>VendTmpInvoiceInfoTable</RelatedTable>
			<RelatedTableRole>VendTmpInvoiceInfoTable</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>VendTmpInvoiceInfoLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TableRefId</Name>
					<Field>TableRefId</Field>
					<RelatedField>TableRefId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>