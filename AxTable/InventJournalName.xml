<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalName</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventJournalName extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
	void initValue()
    {
        this.VoucherNumberSequenceTable = InventJournalName::standardVoucherSeries();
        this.VoucherDraw = JournalVoucherDraw::Post;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        switch (this.JournalType)
        {
            case InventJournalType::Movement:
                break;
            default:
                this.LedgerDimension = 0;
        }

        if (ret && this.WorkflowApproval)
        {
            if (!this.Configuration)
            {
                ret = checkFailed("@SYS109578");
            }

            if (ret)
            {
                ret = InventJournalName::validateWorkflowApprovalConfig(this.Configuration, this.JournalType);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    static boolean checkExist(InventJournalNameId inventJournalNameId)
    {
        if (inventJournalNameId  && !InventJournalName::exist(inventJournalNameId))
        {
            return checkFailed(strFmt(InventJournalName::txtNotExist(),inventJournalNameId));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(InventJournalNameId  inventJournalNameId)
    {
        return inventJournalNameId && (select firstonly inventJournalName
                    where inventJournalName.JournalNameId  == inventJournalNameId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static InventJournalName find(InventJournalNameId inventJournalNameId, boolean _forUpdate = false)
    {
        InventJournalName inventJournalName;

        inventJournalName.selectForUpdate(_forUpdate);

        if (inventJournalNameId)
        {
            select firstonly inventJournalName
                where inventJournalName.JournalNameId == inventJournalNameId;
        }

        return inventJournalName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>standardJournalName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return the journal name Id for the provided <c>InventJournalType</c> enum value.
    /// </summary>
    /// <param name = "_journalType">Journal type.</param>
    /// <returns>Journal name Id.</returns>
    /// <remarks>
    /// Add a post-method handler to return the necessary journal name Id when extending the <c>InventJournalType</c> enum.
    /// </remarks>
    public static InventJournalNameId standardJournalName(InventJournalType _journalType)
    {
        switch (_journalType)
        {
            case InventJournalType::Movement  :
                return InventParameters::find().MovementJournalNameId;
            case InventJournalType::LossProfit:
                return InventParameters::find().LossProfitJournalNameId;
            case InventJournalType::project:
                return ProjParameters::find().InventJournalNameId;
            case InventJournalType::Transfer  :
                return InventParameters::find().TransferJournalNameId;
            case InventJournalType::Count     :
                return InventParameters::find().CountJournalNameId;
            case InventJournalType::BOM       :
                return InventParameters::find().bomJournalNameId;
            case InventJournalType::TagCounting:
                return InventParameters::find().TagCountingJournalNameId;
            case InventJournalType::Asset:
                return AssetParameters::find().InventJournalNameId;
            case InventJournalType::OwnershipChange:
                return InventParameters::find().OwnershipChangeJournalNameId;
            default:
                return '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>standardVoucherSeries</Name>
				<Source><![CDATA[
    static InventJournalVoucherNumberSeq standardVoucherSeries()
    {
        return NumberSequenceTable::find(InventParameters::numRefInventJournalVoucherId().NumberSequenceId).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@SYS22462";
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkWorkflowApprovalEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if the workflow function is enabled in journal name.
    /// </summary>
    /// <param name = "_displayInfoLog">If the info log is displayed.</param>
    /// <returns>True if journal name is using workflow; otherwise false.</returns>
    public boolean checkWorkflowApprovalEnabled(boolean _displayInfoLog = false)
    {
        boolean                     isWorkflowApprovalEnabled = false;
        WorkflowVersionTable        workflowVersionTable;

        //  Is the "Approval" active and is there a "Configuration"
        if (this.WorkflowApproval &&
            this.Configuration)
        {
            //  Find the "Configuration".
            workflowVersionTable = WorkflowVersionTable::findSequenceNumber(this.Configuration);

            //  Does it exist, and is it correct for the JournalType\Workflow Template, and is it enabled?
            if (workflowVersionTable.RecId &&
                workflowVersionTable.workflowTable().TemplateName == inventJournalName::findJournalTemplate(this.JournalType) &&
                workflowVersionTable.Enabled)
            {
                isWorkflowApprovalEnabled = true;
            }
            else
            {
                if (_displayInfoLog)
                {
                    info("@SYS112225");
                }
            }
        }

        return isWorkflowApprovalEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findWorkflowApprovalModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return the workflow approval module according to journal types.
    /// </summary>
    /// <param name = "_journalType">Type of inventory journal.</param>
    public static InventJournalWorkflowApprovalModule findWorkflowApprovalModule(InventJournalType _journalType)
    {
        InventJournalWorkflowApprovalModule module;

        switch (_journalType)
        {
            //  Movement types:
            case InventJournalType::Movement:
                module = InventJournalWorkflowApprovalModule::Movement;
                break;
            case InventJournalType::LossProfit:
                module = InventJournalWorkflowApprovalModule::LossProfit;
                break;
            case InventJournalType::BOM:
                module = InventJournalWorkflowApprovalModule::BOM;
                 break;
            case InventJournalType::Count:
                module = InventJournalWorkflowApprovalModule::Count;
                break;
            case InventJournalType::OwnershipChange:
                module = InventJournalWorkflowApprovalModule::OwnershipChange;
                 break;
            case InventJournalType::TagCounting:
                module = InventJournalWorkflowApprovalModule::TagCounting;
                 break;
            case InventJournalType::Transfer:
                module = InventJournalWorkflowApprovalModule::Transfer;
                 break;
            // Not supported types:
            default:
                module = InventJournalWorkflowApprovalModule::None;
                break;
        }

        return module;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findJournalTemplate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return workflow template according based on journal type.
    /// </summary>
    public static WorkflowTypeName findJournalTemplate(inventJournalType _journalType)
    {
        #InventJournalWorkflowApprovalTemplates

        WorkflowTypeName templateName;

        switch (_journalType)
        {
            //  Movement templates:
            case InventJournalType::Movement:
                templateName = #InventJournalMovementTemplate;
                break;
            case InventJournalType::LossProfit:
                templateName = #InventJournalAdjustmentTemplate;
                break;
            case InventJournalType::Transfer:
                templateName = #InventJournalTransferTemplate;
                break;
            case InventJournalType::BOM:
                templateName = #InventJournalBOMTemplate;
                break;
            case InventJournalType::OwnershipChange:
                templateName = #InventJournalOwnershipChangeTemplate;
                break;
            case InventJournalType::Count:
                templateName = #InventJournalCountingTemplate;
                break;
            case InventJournalType::TagCounting:
                templateName = #InventJournalTagCountingTemplate;
                break;
           
            //  Journal type does not have a supporting template.
            default:
                templateName = '';
                break;
        }

        return templateName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasRefsToWFApprConfig</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public static boolean hasRefsToWFApprConfig(WorkflowTable _workflowTable)
    {
        return (select firstonly RecId from inventJournalName
                    where inventJournalName.Configuration == _workflowTable.SequenceNumber &&
                          inventJournalName.Configuration != '').RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasActiveRefsToWFApprConfig</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public static boolean hasActiveRefsToWFApprConfig(WorkflowTable _workflowTable)
    {
        return (select firstonly RecId from inventJournalName 
                    where inventJournalName.WorkflowApproval == NoYes::Yes &&
                          inventJournalName.Configuration == _workflowTable.SequenceNumber &&
                          inventJournalName.Configuration != '').RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeWFApprConfigRefs</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Remove all references to the specified record of the <c>WorkflowTable</c> table from the
    ///    <c>InventJournalName</c> table.
    /// </summary>
    /// <param name="_workflowTable">
    ///    The record of the <c>WorkflowTable</c> table for which to remove <c>InventJournalName</c> table
    ///    references.
    /// </param>
    public static void removeWFApprConfigRefs(WorkflowTable _workflowTable)
    {
        #OCCRetryCount
        InventJournalName inventJournalName;

        try
        {
            update_recordset inventJournalName
                setting Configuration = '', WorkflowApproval = NoYes::No
                where inventJournalName.Configuration == _workflowTable.SequenceNumber;
        }
        catch(Exception::Deadlock)
        {
            if (xSession::currentRetryCount() >= #RetryNum)
            {
                throw Exception::Deadlock;
            }

            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (xSession::currentRetryCount() >= #RetryNum)
            {
                throw Exception::UpdateConflictNotRecovered;
            }

            retry;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWorkflowApprovalConfig</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that an active and enabled configuration exists and uses the correct inventory journal
    ///    workflow approval template for the specified journal type.
    /// </summary>
    /// <param name="_configuration">
    ///    A <c>Configuration</c> value to validate.
    /// </param>
    /// <param name="_journalType">
    ///    A <c>JournalType</c> value to validate.
    /// </param>
    /// <returns>
    ///    True if all of the validations are successful; otherwise, false.
    /// </returns>
    public static boolean validateWorkflowApprovalConfig(WorkflowSequenceNumber _configuration, InventJournalType _journalType)
    {
        boolean ret = true;

        if (_configuration)
        {
            //  Find the _configuration
            //  The findSequenceNumber() API only returns "Enable\Active" configurations of WorkflowConfigurationType::Definition
            WorkflowTable workflowTable = WorkflowTable::findSequenceNumber(_configuration);
            //  Does it exist?
            if (workflowTable.RecId == 0)
            {
                ret = checkFailed(strFmt("@SYS109579", _configuration));
            }
            //  Is it correct for the JournalType/Workflow Template?
            else if (workflowTable.TemplateName != InventJournalName::findJournalTemplate(_journalType))
            {
                ret = checkFailed(strFmt("@SYS109580", _configuration));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existRelatedNotPostedJournal</Name>
				<Source><![CDATA[
    public boolean existRelatedNotPostedJournal()
    {
        InventJournalTable inventJournalTable;

        return (select firstonly inventJournalTable 
                    where inventJournalTable.JournalNameId == this.JournalNameId && 
                          inventJournalTable.Posted == NoYes::No
               ).RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS123818</DeveloperDocumentation>
	<FormRef>InventJournalName</FormRef>
	<Label>@SYS22983</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>JournalNameId</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>NamesIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>Inventory</Modules>
	<PrimaryIndex>NamesIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>InventJournalTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>InventJournalTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalNameId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Blocking</Name>
			<Label>@SYS50247</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BlockUserGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocType_PL</Name>
			<Label>@SYS54213</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDocType_PL</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalNameId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Inventory</Name>
			<Label>@SYS981</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Reservation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS5943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DetailSummary</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeletePostedLines</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VoucherNumberSequenceTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Voucher</Name>
			<Label>@SYS12371</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VoucherDraw</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherChange</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Counting</Name>
			<Label>@SYS2828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountingStatusRegistrationPolicy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ApprovalWorkflow</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkflowApproval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Configuration</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Commerce</Name>
			<Label>@RetailOffering:ApplicationName</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetailInventJournalPosAdjustmentType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BlockUserGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalBlockUserGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeletePostedLines</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalDeletePostedLines</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DetailSummary</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JournalDetailSummary</ExtendedDataType>
			<EnumType>DetailSummary</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InventDocType_PL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>PL</CountryRegionCodes>
			<EnumType>PlInventDocType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalNameId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventJournalNameId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JournalType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventJournalType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@Sys11162</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Reservation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ItemReservation</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VoucherChange</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventJournalVoucherChange</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VoucherDraw</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>JournalVoucherDraw</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VoucherNumberSequenceTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventJournalVoucherNumberSeq</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CountingStatusRegistrationPolicy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventCountingStatusRegistrationPolicy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WorkflowApproval</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS109575</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Configuration</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WorkflowSequenceNumber</ExtendedDataType>
			<Label>@SYS103643</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RetailInventJournalPosAdjustmentType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailInventJournalPosAdjustmentType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SysRowVersionNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>SysRowVersionNumber</ExtendedDataType>
            <IsObsolete>Yes</IsObsolete>
			<Null>Yes</Null>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NamesIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalNameId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>JournalNameMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>VoucherDraw</MapField>
					<MapFieldTo>VoucherDraw</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherSeqId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DetailSummary</MapField>
					<MapFieldTo>DetailSummary</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeletePostedLines</MapField>
					<MapFieldTo>DeletePostedLines</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Description</MapField>
					<MapFieldTo>Description</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalNameId</MapField>
					<MapFieldTo>JournalNameId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherChange</MapField>
					<MapFieldTo>VoucherChange</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalType</MapField>
					<MapFieldTo>JournalType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BlockUserGroupId</MapField>
					<MapFieldTo>BlockUserGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VoucherNumberSeq</MapField>
					<MapFieldTo>VoucherNumberSequenceTable</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BlockingUserGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UserGroupInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BlockUserGroupId</Name>
					<Field>BlockUserGroupId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>UserIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerDimension_InventJournalName</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>NumberSequenceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>NumberSequenceTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>NumberSequenceTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventJournalNameVoucher</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VoucherNumberSequenceTable</Name>
					<Field>VoucherNumberSequenceTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>