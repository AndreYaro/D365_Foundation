<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailInformationSubcodeTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailInformationSubcodeTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkDiscount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether an item can be discounted.
    /// </summary>
    /// <returns>
    /// true if the discount is enabled; otherwise false.
    /// </returns>
    public boolean checkDiscount()
    {
        return this.type().checkDiscount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>displaySubcodeDescription</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves a description of the reason sub code.
    /// </summary>
    /// <param name="_languageId">
    ///     The ID of a language for which a description is retrieved.
    /// </param>
    /// <returns>
    ///     A description of the reason sub code.
    /// </returns>
    display public client server Description displaySubcodeDescription(LanguageId _languageId = SystemParameters::getSystemLanguageId())
    {
        return RetailInformationSubcodeTranslation::find(this.RecId, _languageId).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Perform any necessary initialization or validation when the given field is modified.
    /// </summary>
    /// <param name="_fieldId">
    /// The field which was modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RetailInformationSubcodeTable, TriggerFunction) :
                this.TriggerCode = '';
                break;
        }

        if (FormDataUtil::isFormDataSource(this))
        {
            FormDataUtil::getFormDataSource(this).refresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </summary>
    public void renamePrimaryKey()
    {
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>type</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new instance of <c>RetailSubcodeTriggerFuncType</c>.
    /// </summary>
    /// <returns>
    /// New instance of <c>RetailSubcodeTriggerFuncType</c>.
    /// </returns>
    public RetailSubcodeTriggerFuncType type()
    {
        return RetailSubcodeTriggerFuncType::construct(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;
        // Set a warning if the reason code is used on an active order hold
        if (MCRHoldCodeTrans::findActiveReasonCodeHolds(this.subcodeId))
        {
            if (box::okCancel("@MCR10378", DialogButton::Ok) == DialogButton::Cancel)
                return ret;
        }

        ret = super();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the field is valid.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field Id which is to be validated.
    /// </param>
    /// <returns>
    /// true if the field is valid; otherwise false.
    /// </returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        ret = this.type().validateField(_fieldIdToCheck) && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ret = this.type().validateWrite() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the record occurs in the <c>RetailInformationSubcodeTable</c> table.
    /// </summary>
    /// <param name="_infocodeId">
    /// The <c>InfocodeId</c> field of the <c>RetailInformationSubcodeTable</c> table.
    /// </param>
    /// <param name="_subcodeId">
    /// The <c>SubcodeId</c> field of the <c>RetailInformationSubcodeTable</c> table.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    static boolean exist(RetailInfocodeId _infocodeId, RetailInformationSubcodeId _subcodeId, boolean _forUpdate = false)
    {
        return _infocodeId && _subcodeId && (select firstonly RecId from retailInformationSubcodeTable
                                             index hint infocodeSubCodeIdx
                                                where retailInformationSubcodeTable.InfocodeId == _infocodeId
                                                   && retailInformationSubcodeTable.SubcodeId == _subcodeId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailInformationSubcodeTable</c> table.
    /// </summary>
    /// <param name="_infocodeId">
    /// The <c>InfocodeId</c> field of the <c>RetailInformationSubcodeTable</c> table.
    /// </param>
    /// <param name="_subcodeId">
    /// The <c>SubcodeId</c> field of the <c>RetailInformationSubcodeTable</c> table.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailInformationSubcodeTable</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailInformationSubcodeTable find(RetailInfocodeId _infocodeId, RetailInformationSubcodeId _subcodeId, boolean _forUpdate = false)
    {
        RetailInformationSubcodeTable  informationSubcodeTable;

        if (_infocodeId && _subcodeId)
        {
            informationSubcodeTable.selectForUpdate(_forUpdate);

            select firstonly informationSubcodeTable
                 index hint infocodeSubCodeIdx
                 where informationSubcodeTable.InfocodeId == _infocodeId
                    && informationSubcodeTable.SubcodeId == _subcodeId;
        }

        return informationSubcodeTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrValidate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the record occurs in the <c>RetailInformationSubcodeTable</c> table when the infocode ID and subcode ID are populated.
    /// </summary>
    /// <param name="_infocodeId">
    /// The <c>InfocodeId</c> field of the <c>RetailInformationSubcodeTable</c> table.
    /// </param>
    /// <param name="_subcodeId">
    /// The <c>SubcodeId</c> field of the <c>RetailInformationSubcodeTable</c> table.
    /// </param>
    /// <returns>
    /// true if the record is valid; otherwise, false.
    /// </returns>
    /// <remarks>
    /// This is different than the exist method is that the record ID needs to be 0 in order to show the error.
    /// Whereas the exist method checks for the record ID to not be 0.
    /// </remarks>
    static boolean mcrValidate(RetailInfocodeId _infocodeId, RetailInformationSubcodeId _subcodeId)
    {
        if (_infocodeId
            && _subcodeId
            && !RetailInformationSubcodeTable::exist(_infocodeId,_subcodeId))
        {
            return checkFailed(strFmt("@MCR4410194",
                        _subcodeId,
                        _infocodeId));
        }
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260859</DeveloperDocumentation>
	<FormRef>RetailInformationSubcodeTable</FormRef>
	<Label>@RET3098</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>infocodeId</TitleField1>
	<TitleField2>subcodeId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>infocodeSubCodeIdx</ClusteredIndex>
	<Modules>Retail</Modules>
	<PrimaryIndex>infocodeSubCodeIdx</PrimaryIndex>
	<ReplacementKey>infocodeSubCodeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>infocodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>subcodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>subcodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displaySubcodeDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>infocodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>infocodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>subcodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>newSalesLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@RET4782</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@RET4783</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>infocodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>subcodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Price</Name>
			<Label>@RET4784</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>amountPercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>priceType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Trigger</Name>
			<Label>@RET4785</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>triggerCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>triggerFunction</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>amountPercent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailAmountPercent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>infocodeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInfocodeId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>newSalesLine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailNewSalesLine</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>priceType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailPriceType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>subcodeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInformationSubcodeId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>triggerCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTriggerCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>triggerFunction</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailTriggerFunction</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>infocodeSubCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>infocodeId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>subcodeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>triggerFunction</Name>
					<Field>triggerFunction</Field>
					<ValueStr>RetailTriggerFunction::InventLocationReturns</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>triggerCode</Name>
					<Field>triggerCode</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailInfocode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RetailInfocode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>triggerFunction</Name>
					<Field>triggerFunction</Field>
					<ValueStr>RetailTriggerFunction::Infocode</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>triggerCode</Name>
					<Field>triggerCode</Field>
					<RelatedField>infocodeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailInfocodeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailInfocodeTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>infocodeId</Name>
					<SourceEDT>RetailInfocodeId</SourceEDT>
					<Field>infocodeId</Field>
					<RelatedField>infocodeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>infocodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>