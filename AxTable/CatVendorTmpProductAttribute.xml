<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatVendorTmpProductAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatVendorTmpProductAttribute extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getProductAttributeValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds product attributes for all the products that belong to a
    /// <c>CatVendorCatalogMaintenanceRequest</c> record.
    /// </summary>
    /// <param name="_catVendorCatalogMaintenanceRequestRecId">
    /// The record ID of a <c>CatVendorCatalogMaintenanceRequest</c> record.
    /// </param>
    /// <returns>
    /// A <c>CatVendorTmpProductAttribute</c> table buffer.
    /// </returns>
    public static CatVendorTmpProductAttribute getProductAttributeValues(RefRecId _catVendorCatalogMaintenanceRequestRecId)
    {
        CatVendorCatalog                    catVendorCatalog;
        CatVendorApprovedProduct            catVendorApprovedProduct;
        CatVendorProductCandidate           catVendorProductCandidate;
        CatVendorTmpProductAttribute        catVendorTmpProductAttribute; // Temporary table (In Memory).
        CatVendorTextValueTranslation       catVendorTextValueTranslation;
        CatVendProdCandidateAttributeValue  catVendProdCandidateAttributeValue;
        CatVendorCatalogMaintenanceRequest  catVendorCatalogMaintenanceRequest;

        EcoResProductInstanceValue          ecoResProductInstanceValue;
        EcoResTextValueTranslation          ecoResTextValueTranslation;
        EcoResAttributeValue                ecoResAttributeValue;
        EcoResInstanceValue                 ecoResInstanceValue;
        EcoResAttribute                     ecoResAttribute;
        EcoResValue                         ecoResValue;

        // This loop inserts the existing attibutes values and corresponding new attribbute values if available.
        while select VendorCatalog from catVendorCatalogMaintenanceRequest
                    where catVendorCatalogMaintenanceRequest.RecId == _catVendorCatalogMaintenanceRequestRecId
                join VendorParty from catVendorCatalog
                    where catvendorcatalog.RecId ==  catVendorCatalogMaintenanceRequest.VendorCatalog
                join VendorProductCode from catVendorProductCandidate
                    where catVendorProductCandidate.CatalogMaintenanceRequest == _catVendorCatalogMaintenanceRequestRecId
                join EcoResProduct from catVendorApprovedProduct
                    where catVendorApprovedProduct.VendorProductCode == catVendorProductCandidate.VendorProductCode
                        && catVendorApprovedProduct.DirPartyTable == catvendorcatalog.VendorParty
                join Product from ecoResProductInstanceValue
                    where ecoResProductInstanceValue.Product == catVendorApprovedProduct.EcoResProduct
                join RecId from ecoResInstanceValue
                    where ecoResInstanceValue.RecId == ecoResProductInstanceValue.RecId
                join InstanceValue, Attribute, Value from ecoResAttributeValue
                    where ecoResAttributeValue.InstanceValue == ecoResInstanceValue.RecId
                join Name from ecoResAttribute
                    where ecoResAttribute.RecId == ecoResAttributeValue.Attribute
                join ecoResValue where ecoResValue.RecId == ecoResAttributeValue.Value

                outer join TextValue, Language from ecoResTextValueTranslation
                    where ecoResTextValueTranslation.TextValueTable == ecoResValue.RecId

        {
            catVendorTmpProductAttribute.clear();
            // Gets new attribute value against an existing attibute.
            select firstOnly catVendProdCandidateAttributeValue
                    where catVendProdCandidateAttributeValue.CatVendorProductCandidate == catVendorProductCandidate.RecId
                            && catVendProdCandidateAttributeValue.EcoResAttribute == ecoResAttributeValue.Attribute
                outer join TextValue,Language from catVendorTextValueTranslation
                    where catVendorTextValueTranslation.TextValueTable == catVendProdCandidateAttributeValue.RecId
                            && catVendorTextValueTranslation.Language == ecoResTextValueTranslation.Language;

            if (ecoResTextValueTranslation)
            {
                catVendorTmpProductAttribute.CurrentValue               = catVendorTextValueTranslation.TextValue;
                catVendorTmpProductAttribute.PreviousValue              = ecoResTextValueTranslation.TextValue;
                catVendorTmpProductAttribute.Language                   = ecoResTextValueTranslation.Language;
            }
            else
            {
                catVendorTmpProductAttribute.CurrentValue               = catVendProdCandidateAttributeValue.currentAttributeValue();
                catVendorTmpProductAttribute.PreviousValue              = ecoResValue.value();
            }
            catVendorTmpProductAttribute.CatVendorProductCandidate      = catVendorProductCandidate.RecId;
            catVendorTmpProductAttribute.AttributeName                  = ecoResAttribute.Name;
            catVendorTmpProductAttribute.EcoResAttribute                = ecoResAttribute.RecId;
            catVendorTmpProductAttribute.insert();
        }

        // This loop inserts new attribute values which are not available in EcoRes* tables(existing attributes).
        while select recId from catVendorProductCandidate
                        where catVendorProductCandidate.CatalogMaintenanceRequest == _catVendorCatalogMaintenanceRequestRecId
                join catVendProdCandidateAttributeValue
                        where catVendorProductCandidate.RecId == catVendProdCandidateAttributeValue.CatVendorProductCandidate
                join Name from ecoResAttribute
                        where ecoResAttribute.RecId == catVendProdCandidateAttributeValue.EcoResAttribute

        {
            select recId from catVendorTmpProductAttribute
                where catVendorTmpProductAttribute.EcoResAttribute              == catVendProdCandidateAttributeValue.EcoResAttribute
                    && catVendorTmpProductAttribute.CatVendorProductCandidate   == catVendProdCandidateAttributeValue.CatVendorProductCandidate;

            if (!catVendorTmpProductAttribute)
            {
                if ( catVendProdCandidateAttributeValue.getInstanceRelationType() == tableStr(CatVendorTextValue) )
                {
                    while select TextValue,Language from CatVendorTextValueTranslation
                        where CatVendorTextValueTranslation.TextValueTable == catVendProdCandidateAttributeValue.RecId
                    {
                        catVendorTmpProductAttribute.CurrentValue               = catVendorTextValueTranslation.TextValue;
                        catVendorTmpProductAttribute.Language                   = catVendorTextValueTranslation.Language;
                        catVendorTmpProductAttribute.CatVendorProductCandidate  = catVendorProductCandidate.RecId;
                        catVendorTmpProductAttribute.AttributeName              = ecoResAttribute.Name;
                        catVendorTmpProductAttribute.EcoResAttribute            = ecoResAttribute.RecId;
                        catVendorTmpProductAttribute.insert();
                    }
                }
                else
                {
                    catVendorTmpProductAttribute.CurrentValue               = catVendProdCandidateAttributeValue.currentAttributeValue();
                    catVendorTmpProductAttribute.CatVendorProductCandidate  = catVendorProductCandidate.RecId;
                    catVendorTmpProductAttribute.AttributeName              = ecoResAttribute.Name;
                    catVendorTmpProductAttribute.EcoResAttribute            = ecoResAttribute.RecId;
                    catVendorTmpProductAttribute.insert();
                }
            }
        }

        return catVendorTmpProductAttribute;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@SYS329565</Label>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AttributeName</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CatVendorProductCandidate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrentValue</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AttributeValueText</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>EcoResAttribute</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Language</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LanguageIdAll</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PreviousValue</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AttributeValueText</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CatVendorProductCandidateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CatVendorProductCandidate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EcoResAttributeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>EcoResAttribute</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CatVendorProductCandidate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CatVendorProductCandidate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CatVendorProductCandidate</Name>
					<Field>CatVendorProductCandidate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResAttribute</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResAttribute</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EcoResAttribute</Name>
					<Field>EcoResAttribute</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Language</Name>
					<SourceEDT>LanguageIdAll</SourceEDT>
					<Field>Language</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>