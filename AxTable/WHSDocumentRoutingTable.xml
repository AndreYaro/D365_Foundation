<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSDocumentRoutingTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSDocumentRoutingTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>enableAccountNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether or not the AccountNum field is enabled based on the selected work transaction type
    /// </summary>
    /// <returns>
    /// Returns a flag to indicate whether to enable or disable the AccountNum field
    /// </returns>
    public boolean enableAccountNum()
    {
        WhsWorkTransactionType workTransactionType = WhsWorkTransactionType::singletonFromTypeOrDefault(this.WorkTransType);
        return workTransactionType.canHaveAccountNumber();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        WHSDocumentRoutingTable     documentRoutingTable;

        super();

        this.Query = new QueryRun(queryStr(WHSLicensePlateLabelQuery)).pack();

        select firstonly SeqNum from documentRoutingTable
            order by documentRoutingTable.SeqNum desc
            where documentRoutingTable.WorkTransType == this.WorkTransType;

        this.SeqNum = documentRoutingTable.SeqNum + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultQueryRun</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal QueryRun defaultQueryRun()
    {
        return new QueryRun(queryStr(WHSLicensePlateLabelQuery));
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WHSDocumentRoutingTable, WorkTransType):
                this.Query = new QueryRun(queryStr(WHSLicensePlateLabelQuery)).pack();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(WHSDocumentRoutingTable, SeqNum):
                    if ((select firstonly RecId from whsDocumentRoutingTable
                            where whsDocumentRoutingTable.WorkTransType      == this.WorkTransType    &&
                                  whsDocumentRoutingTable.SeqNum             == this.SeqNum           &&
                                  whsDocumentRoutingTable.RecId              != this.RecId).RecId > 0)
                    {
                        ret = checkFailed("@WAX3580");
                    }
                    break;

                case fieldNum(WHSDocumentRoutingTable, AccountNum):
                    if (this.AccountNum && this.canValidateAccountNum())
                    {
                        if (!this.findAccountNumOwner())
                        {
                            ret = checkFailed("@WAX5604");
                        }
                    }
                    break;

                case fieldNum(WHSDocumentRoutingTable, WorkTemplateCode):
                    if (this.WorkTemplateCode)
                    {
                        if (!WHSWorkTemplateTable::find(this.WorkTemplateCode, this.WorkTransType))
                        {
                            ret = checkFailed("@WAX5608");
                        }
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies the query assigned to a particular routing table record
    /// </summary>
    /// <param name="_whsDocumentRoutingTable">
    /// The WHSDocumentRoutingTable record to be updated
    /// </param>
    [SysObsolete('Method was moved to WHSDocumentRoutingTable::setEditQuery()', false, 09\09\2022)]
    public static void editQuery(WHSDocumentRoutingTable _whsDocumentRoutingTable)
    {
        WHSDocumentRoutingTable::setEditQuery(_whsDocumentRoutingTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEditQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies the query assigned to a particular routing table record
    /// </summary>
    /// <param name="_whsDocumentRoutingTable">
    /// The WHSDocumentRoutingTable record to be updated
    /// </param>
    /// <returns>true if changes are applied; otherwise false</returns>
    public static boolean setEditQuery(WHSDocumentRoutingTable _whsDocumentRoutingTable)
    {
        WHSDocumentRoutingTable localDocumentRoutingTable;

        localDocumentRoutingTable = WHSDocumentRoutingTable::find(_whsDocumentRoutingTable.SeqNum, _whsDocumentRoutingTable.WorkTransType, _whsDocumentRoutingTable.InventLocationId, true);

        if (localDocumentRoutingTable)
        {
            if (WHSEditQuerySetDefaultQueryRunFlight::instance().isEnabled())
            {
                SysQueryRun queryRun = WHSFormHelper::initializeQueryRunForEditing(localDocumentRoutingTable.Query, '', localDocumentRoutingTable.defaultQueryRun());

                if (queryRun.prompt())
                {
                    ttsbegin;

                    localDocumentRoutingTable.Query = queryRun.pack();
                    localDocumentRoutingTable.update();

                    ttscommit;

                    return true;
                }
            }
            else
            {
                QueryRun queryRun = new QueryRun(localDocumentRoutingTable.Query);

                queryRun.saveUserSetup(false);

                if (queryRun.prompt())
                {
                    ttsbegin;

                    localDocumentRoutingTable.Query = queryRun.pack();
                    localDocumentRoutingTable.update();

                    ttscommit;

                    return true;
                }
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks whether a specific <c>whsDocumentRoutingTable</c> record exists.
	/// </summary>
	/// <param name="_seqNum">
	/// Sequence number of the record.
	/// </param>
	/// <param name="_workTransType">
	/// Transaction type of the record.
	/// </param>
	/// <param name="_inventLocationId">
	/// Warehouse id of the record.
	/// </param>
	/// <returns>
	/// True if the record exists.
	/// </returns>
    public static boolean exist(
        WHSSeqNum _seqNum,
        WHSWorkTransType _workTransType,
        InventLocationId _inventLocationId)
    {
        return (_seqNum && _workTransType && _inventLocationId) &&
               (select firstonly RecId from whsDocumentRoutingTable
                    where whsDocumentRoutingTable.SeqNum            == _seqNum          &&
                          whsDocumentRoutingTable.WorkTransType     == _workTransType   &&
                          whsDocumentRoutingTable.InventLocationId  == _inventLocationId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>WHSDocumentRoutingTable</c> record with given parameters.
	/// </summary>
	/// <param name="_seqNum">
	/// Sequence number of the record.
	/// </param>
	/// <param name="_workTransType">
	/// Transaction type of the record.
	/// </param>
	/// <param name="_inventLocationId">
	/// Warehouse id of the record.
	/// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
    public static WHSDocumentRoutingTable find(
        WHSSeqNum _seqNum,
        WHSWorkTransType _workTransType,
        InventLocationId _inventLocationId,
        boolean _forupdate = false)
    {
        WHSDocumentRoutingTable     documentRoutingTable;

        if (_seqNum && _workTransType && _inventLocationId)
        {
            documentRoutingTable.selectForUpdate(_forupdate);

            select firstonly documentRoutingTable
                where documentRoutingTable.SeqNum           == _seqNum          &&
                      documentRoutingTable.WorkTransType    == _workTransType   &&
                      documentRoutingTable.InventLocationId == _inventLocationId;
        }

        return documentRoutingTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupWorkTemplateCode</Name>
				<Source><![CDATA[
	/// <summary>
	/// Performs a lookup on work template code field.
	/// </summary>
	/// <param name="_ctrl">
	/// Selected form control.
	/// </param>
	/// <param name="_workTransType">
	/// Work transaction type of the record.
	/// </param>
    public static void lookupWorkTemplateCode(FormStringControl _ctrl, str _workTransType)
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;

        sysTableLookup          = SysTableLookup::newParameters(tableNum(WHSWorkTemplateTable), _ctrl);
        query                   = new Query();
        queryBuildDataSource    = query.addDataSource(tableNum(WHSWorkTemplateTable));

        sysTableLookup.addLookupfield(fieldNum(WHSWorkTemplateTable, WorkTemplateCode));
        sysTableLookup.addLookupfield(fieldNum(WHSWorkTemplateTable, WorkTemplateDesc));
        queryBuildDataSource.addRange(fieldNum(WHSWorkTemplateTable, WorkTransType)).value(_workTransType);

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets the query assigned to a particular routing table record
    /// </summary>
    /// <param name="_whsDocumentRoutingTable">
    /// The WHSDocumentRoutingTable record to be updated
    /// </param>
    public static void resetQuery(WHSDocumentRoutingTable _whsDocumentRoutingTable)
    {
        WHSDocumentRoutingTable localDocumentRoutingTable;
        QueryRun                queryRun;

        ttsbegin;

        localDocumentRoutingTable = WHSDocumentRoutingTable::find(_whsDocumentRoutingTable.SeqNum, _whsDocumentRoutingTable.WorkTransType, _whsDocumentRoutingTable.InventLocationId, true);

        if (localDocumentRoutingTable)
        {
            queryRun = new QueryRun(queryStr(WHSLicensePlateLabelQuery));

            localDocumentRoutingTable.Query = queryRun.pack();
            localDocumentRoutingTable.update();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canValidateAccountNum</Name>
				<Source><![CDATA[
    private boolean canValidateAccountNum()
    {
        return this.WorkTransType == WHSWorkTransType::Sales
            || this.WorkTransType == WHSWorkTransType::ReturnOrder
            || this.WorkTransType == WHSWorkTransType::Purch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAccountNumOwner</Name>
				<Source><![CDATA[
    private Common findAccountNumOwner()
    {
        if (this.WorkTransType == WHSWorkTransType::Sales || this.WorkTransType == WHSWorkTransType::ReturnOrder)
        {
            return CustTable::find(this.AccountNum);
        }

        if (this.WorkTransType == WHSWorkTransType::Purch)
        {
            return VendTable::find(this.AccountNum);
        }

        return null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4525</DeveloperDocumentation>
	<Label>@WAX3471</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>InventLocationId</TitleField1>
	<TitleField2>WorkTransType</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>SeqNumWorkTransTypeInventLocationId</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<ReplacementKey>SeqNumWorkTransTypeInventLocationId</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Query</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RunQuery</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkTemplateCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ZoneIdFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ZoneIdTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS104259</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Query</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RunQuery</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkTemplateCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ZoneIdFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ZoneIdTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNum</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustVendAC</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CarrierCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCarrierCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDocumentType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>Query</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSQuery</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RunQuery</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSRunQuery</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SeqNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSSeqNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UserId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>WHSUserId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>WHSWorkerRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkTemplateCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkTemplateCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WorkTransType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>WHSWorkTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ZoneIdFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSZoneIdFrom</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ZoneIdTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSZoneIdTo</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SeqNumWorkTransTypeInventLocationId</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WorkTransType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SeqNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SeqNumIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SeqNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustTable_Sales</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>WorkTransType</Name>
					<Field>WorkTransType</Field>
					<ValueStr>WHSWorkTransType::Sales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountNum</Name>
					<Field>AccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable_ReturnOrder</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>WorkTransType</Name>
					<Field>WorkTransType</Field>
					<ValueStr>WHSWorkTransType::ReturnOrder</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountNum</Name>
					<Field>AccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<SourceEDT>InventLocationId</SourceEDT>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TMSCarrier</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TMSCarrier</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CarrierCode</Name>
					<SourceEDT>TMSCarrierCode</SourceEDT>
					<Field>CarrierCode</Field>
					<RelatedField>CarrierCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CarrierCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable_Purch</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>WorkTransType</Name>
					<Field>WorkTransType</Field>
					<ValueStr>WHSWorkTransType::Purch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountNum</Name>
					<Field>AccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Worker</Name>
					<Field>Worker</Field>
					<RelatedField>Worker</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>WorkerIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWorkTemplateTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSWorkTemplateTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkTransType</Name>
					<Field>WorkTransType</Field>
					<RelatedField>WorkTransType</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkTemplateCode</Name>
					<SourceEDT>WHSWorkTemplateCode</SourceEDT>
					<Field>WorkTemplateCode</Field>
					<RelatedField>WorkTemplateCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>WorkTemplateCodeWorkTransTypeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWorkUser</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSWorkUser</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UserId</Name>
					<SourceEDT>WHSUserId</SourceEDT>
					<Field>UserId</Field>
					<RelatedField>UserId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>UserIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSZoneFrom</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSZone</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ZoneFrom</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ZoneIdFrom</Name>
					<SourceEDT>WHSZoneIdFrom</SourceEDT>
					<Field>ZoneIdFrom</Field>
					<RelatedField>ZoneId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ZoneIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSZoneTo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WHSZone</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ZoneTo</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ZoneIdTo</Name>
					<SourceEDT>WHSZoneIdTo</SourceEDT>
					<Field>ZoneIdTo</Field>
					<RelatedField>ZoneId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ZoneIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>