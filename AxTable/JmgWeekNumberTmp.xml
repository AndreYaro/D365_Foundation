<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgWeekNumberTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JmgWeekNumberTmp extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getWeekNumbersTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>JmgWeekNumberTmp</c> table that contains week numbers and week day ranges for the
    /// specified year.
    /// </summary>
    /// <param name="_year">
    /// The year for which the <c>JmgWeekNumber</c> table should be populated.
    /// </param>
    /// <returns>
    /// The <c>JmgWeekNumberTmp</c> record.
    /// </returns>
    public static JmgWeekNumberTmp getWeekNumbersTable(int _year = year(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())))
    {
        JmgWeekNumberTmp    weekNumberTmp;

        Week    week;
        int     weekdays;
        date    testDate;
        Week weekOfTestDate;
        PreferredLocale preferredLocale = new xSession().preferredLocale();
        date    firstDayYear = DateTimeUtil::getStartOfWeekDate(preferredLocale, mkDate(1, 1, _year));

        // find first day of the first week of the year
        while (wkOfYr(firstDayYear) != 1)
        {
            firstDayYear++;
        }

        for (week = 1; week <= 53; ++week)
        {
            testDate = firstDayYear + ((week - 1) * 7);
            weekOfTestDate = wkOfYr(testDate);

            // stop if we exceeded number of weeks this year
            if (year(testDate) > _year || (week == 53 && weekOfTestDate == 1))
            {
                break;
            }

            if (weekOfTestDate != week)
            {
                weekdays = (week > weekOfTestDate) ? 7 : -7;

                while (wkOfYr(testDate) != week)
                {
                    testDate = testDate + weekdays;
                }
            }
            weekNumberTmp.Week = week;
            weekNumberTmp.FromDate = DateTimeUtil::getStartOfWeekDate(preferredLocale, testDate);
            weekNumberTmp.ToDate = weekNumberTmp.FromDate + 6;
            weekNumberTmp.insert();
        }

        select * from weekNumberTmp;
        return weekNumberTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateYearCombobox</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates a combo box with years before and after a reference year.
    /// </summary>
    /// <param name = "_yearCombobox">The Combo box to populate. Extended data type is JmgYear. </param>
    /// <param name = "_referenceYear">The reference year. </param>
    /// <param name = "_selectedYear">The year to select in the Combo box; if the value is not available, it defaults to the first value. </param>
    /// <param name = "_numberYearsBefore">Number of years to add before the reference year. </param>
    /// <param name = "_numberYearsAfter">Number of years to add after the reference year. </param>
    internal static void populateYearCombobox(FormComboBoxControl _yearCombobox, int _referenceYear = year(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())),
                                              int _selectedYear = _referenceYear, int _numberOfYearsBefore = 7, int _numberOfYearsAfter = 1)
    {
        for (int i = _numberOfYearsBefore; i>= -_numberOfYearsAfter; --i)
        {
            _yearCombobox.add(int2Str(_referenceYear - i));
        }
        _yearCombobox.selectText(int2Str(_selectedYear));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWeekNumberAndYearForWeek</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the week number and corresponding year, handling potential year end/beginning border cases
    /// </summary>
    /// <param name = "_viewDate">The date to be used for calculation.</param>
    /// <returns>A container with the week number at the first index and the year number at the second.</returns>
    public static container getWeekNumberAndYearForWeek(date _viewDate)
    {
        PreferredLocale preferredLocale = new xSession().preferredLocale();
        int weekNumber = DateTimeUtil::getWeekOfYear(preferredLocale, _viewDate);
        int lastDayOfWeekYearNumber = Year(DateTimeUtil::getEndOfWeekDate(preferredLocale, _viewDate));
        int currentDateYearNumber = Year(_viewDate);
        currentDateYearNumber = weekNumber == 1 && lastDayOfWeekYearNumber > currentDateYearNumber ? lastDayOfWeekYearNumber : currentDateYearNumber;
        return [weekNumber, currentDateYearNumber];
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@GLS3800012</Label>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ToDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Week</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Week</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>