<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailBarcodeMaskSegment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailBarcodeMaskSegment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes a record from <c>RetailBarcodeMaskSegment</c> table and updates the mask in <c>RetailBarcodeMaskTable</c> table.
    /// </summary>
    /// <remarks>
    /// If replication of the record is allowed for the table, unprocessed entries are removed from the distribution list.
    /// </remarks>
    public void delete()
    {
        ttsbegin;

        super();

        this.updateMaskTable();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record in <c>RetailBarcodeMaskSegment</c> table and updates the mask in <c>RetailBarcodeMaskTable</c> table.
    /// </summary>
    /// <remarks>
    /// If replication of the record is allowed for the table, action is inserted into the <c>RetailConnPreactionTable</c> table.
    /// </remarks>
    public void insert()
    {
        ttsbegin;

        super();

        this.updateMaskTable();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </summary>
    /// <remarks>
    /// An error is thrown when you rename the record if the distribution type is other than
    /// <c>NoDistribution</c>.
    /// </remarks>
    public void renamePrimaryKey()
    {
        ;
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the record in <c>RetailBarcodeMaskSegment</c> table and updates the mask in <c>RetailBarcodeMaskTable</c> table.
    /// </summary>
    /// <remarks>
    /// If replication of the record is allowed for the table, action is inserted into the <c>RetailConnPreactionTable</c> table.
    /// </remarks>
    public void update()
    {
        ttsbegin;

        super();

        this.updateMaskTable();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMaskTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the mask in <c>RetailBarcodeMaskTable</c> table.
    /// </summary>
    /// <remarks>
    /// The <c>updateMaskFromSegment</c> method of <c>RetailBarcodeMaskSegment</c> table is called.
    /// </remarks>
    void updateMaskTable()
    {
        RetailBarcodeMaskTable rboBarcodeMaskTable;
        ;

        rboBarcodeMaskTable.updateMaskFromSegment(this.MaskId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDecimals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the number of decimals.
    /// </summary>
    /// <returns>
    /// false if the number of decimals is more than 3; otherwise, true.
    /// </returns>
    boolean validateDecimals()
    {
        boolean ret;

        if (this.Decimals > 3)
        {
            ret = checkFailed("@RET3928");
        }
        else
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (fieldExt2Id(_fieldIdToCheck))
        {
            case fieldnum(RetailBarcodeMaskSegment, Type)      :   this.Char = RetailBarcodeMaskCharacter::find(this.Type).Character;
                                                                break;

            case fieldnum(RetailBarcodeMaskSegment, Length)    :   ret = this.validateLength();
                                                                break;

            case fieldnum(RetailBarcodeMaskSegment, Decimals)  :   this.validateDecimals();
                                                                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLength</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the length of bar code mask.
    /// </summary>
    /// <returns>
    /// false if the length is more than forty; otherwise, true.
    /// </returns>
    boolean validateLength()
    {
        boolean ret;

        if (this.Length > 40)
        {
            ret = checkFailed("@Retail:RetailBarcodeMaskLength");
        }
        else
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in <c>RetailBarcodeMaskSegment</c> table.
    /// </summary>
    /// <param name="_maskId">
    /// The mask ID of the bar code mask segment to find.
    /// </param>
    /// <param name="_segmentNum">
    /// The segment number to find.
    /// </param>
    /// <param name="update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailBarcodeMaskSegment</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailBarcodeMaskSegment find(RetailBarcodeMaskId _maskId,
                                             RetailBarcodeMaskSegmentNum _segmentNum,
                                             boolean update = false)
    {
        RetailBarcodeMaskSegment  barcodeMaskSegment;

        if (_maskId && _segmentNum)
        {
            barcodeMaskSegment.selectForUpdate(update);

            select firstonly barcodeMaskSegment
                where barcodeMaskSegment.maskId == _maskId
                && barcodeMaskSegment.segmentNum == _segmentNum;
        }

        return barcodeMaskSegment;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4040203</DeveloperDocumentation>
	<Label>@RET3041</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>maskId</TitleField1>
	<TitleField2>SegmentNum</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>MaskSegmentIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>CommerceMiscellaneous</Modules>
	<PrimaryIndex>MaskSegmentIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SegmentNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Length</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Decimals</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Char</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>maskId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@RET3040</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>maskId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SegmentNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Type</Name>
			<Label>@RET3042</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Value</Name>
			<Label>@RET3043</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Char</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Length</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Decimals</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Char</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailBarcodeMaskChar</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Decimals</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailBarcodeMaskSegmentDecimals</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Length</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailBarcodeMaskLength</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>maskId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailBarcodeMaskId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SegmentNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailBarcodeMaskSegmentNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailBarcodeMaskCharacterType</ExtendedDataType>
			<EnumType>RetailBarcodeMaskCharacterTypeBase</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>MaskSegmentIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>maskId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SegmentNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailBarcodeMaskCharacter</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailBarcodeMaskCharacter</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Type</Name>
					<SourceEDT>RetailBarcodeMaskCharacterType</SourceEDT>
					<Field>Type</Field>
					<RelatedField>CharacterType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>characterTypeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailBarcodeMaskTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailBarcodeMaskTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>maskId</Name>
					<Field>maskId</Field>
					<RelatedField>maskId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>