<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesParmLineCorrLink_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesParmLineCorrLink_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>clearLinks</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes links related to record id of <c>SalesParmLine</c>.
    /// </summary>
    /// <param name="_salesParmLineRecId">
    /// Record id of <c>SalesParmLine</c>
    /// </param>
    public static void clearLinks(SalesParmLineRefRecId _salesParmLineRecId)
    {
        SalesParmLineCorrLink_RU    corrLink;

        delete_from corrLink
            where corrLink.SalesParmLineRecId == _salesParmLineRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearLinksBySalesParmTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes links related to lines of <c>SalesParmTable</c>.
    /// </summary>
    /// <param name="_salesParmTable">
    /// <c>SalesParmTable</c> record.
    /// </param>
    public static void  clearLinksBySalesParmTable(SalesParmTable _salesParmTable)
    {
        SalesParmLine             salesParmLine;

        ttsbegin;
        while select RecId from salesParmLine
            where salesParmLine.ParmId       == _salesParmTable.ParmId &&
                  salesParmLine.TableRefId   == _salesParmTable.TableRefId
        {
            SalesParmLineCorrLink_RU::clearLinks(salesParmLine.RecId);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLink</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates link between <c>SalesParmLine</c> and corrected <c>CustInvoiceTrans</c> record.
    /// </summary>
    /// <param name="_salesParmLineRecId">
    /// <c>SalesParmLine</c> record id.
    /// </param>
    /// <param name="_corrTransRecId">
    /// Corrected <c>CustInvoiceTrans</c> record id.
    /// </param>
    /// <returns>
    /// Created <c>SalesParmLineCorrLink_RU</c> record.
    /// </returns>
    public static SalesParmLineCorrLink_RU createLink(
        SalesParmLineRefRecId _salesParmLineRecId,
        CustInvoiceTransRecId _corrTransRecId)
    {
        SalesParmLineCorrLink_RU corrLink;

        if (_salesParmLineRecId && _corrTransRecId)
        {
            corrLink.SalesParmLineRecId = _salesParmLineRecId;
            corrLink.CorrTransRecId     = _corrTransRecId;
            corrLink.insert();
        }

        return corrLink;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSalesParmLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches for <c>SalesParmLineCorrLink_RU</c> record by given record id of <c>SalesParmLine</c>.
    /// </summary>
    /// <param name="_salesParmLineRecId">
    /// Record id of <c>SalesParmLine</c>.
    /// </param>
    /// <param name="_forUpdate">
    /// Determines if record should be selected for update.
    /// </param>
    /// <returns>
    /// Found <c>SalesParmLineCorrLink_RU</c> record.
    /// </returns>
    public static SalesParmLineCorrLink_RU findSalesParmLine(SalesParmLineRefRecId _salesParmLineRecId, boolean _forUpdate = false)
    {
        SalesParmLineCorrLink_RU corrLink;

        if (_salesParmLineRecId)
        {
            corrLink.selectForUpdate(_forUpdate);

            select corrLink
                where corrLink.SalesParmLineRecId == _salesParmLineRecId;
        }
        return corrLink;
    }

]]></Source>
			</Method>
			<Method>
				<Name>CustInvoiceTrans</Name>
				<Source><![CDATA[
        public CustInvoiceTrans CustInvoiceTrans(CustInvoiceTrans _relatedTable = null)
        {
            if (prmIsDefault(_relatedTable))
            {
                return this.setLink('CustInvoiceTrans');
            }
            else
            {
                return this.setLink('CustInvoiceTrans', _relatedTable);
            }
        }

]]></Source>
			</Method>
			<Method>
				<Name>SalesParmLine</Name>
				<Source><![CDATA[
        public SalesParmLine SalesParmLine(SalesParmLine _relatedTable = null)
        {
            if (prmIsDefault(_relatedTable))
            {
                return this.setLink('SalesParmLine');
            }
            else
            {
                return this.setLink('SalesParmLine', _relatedTable);
            }
        }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4081854</DeveloperDocumentation>
	<Label>@SYS4081865</Label>
	<TitleField1>SalesParmLineRecId</TitleField1>
	<TitleField2>CorrTransRecId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>SalesParmLineRecIdx</ClusteredIndex>
	<Modules>AccountsReceivable</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CorrTransRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesParmLineRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CorrTransRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustInvoiceTransRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesParmLineRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SalesParmLineRecIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesParmLineRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustInvoiceTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<RelatedTable>CustInvoiceTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CorrTransRecId</Name>
					<Field>CorrTransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesParmLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesParmLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesParmLineRecId</Name>
					<Field>SalesParmLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ParmTableRefIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>