<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalizeReport</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerJournalizeReport extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEndTransDate</Name>
				<Source><![CDATA[
        public TransDate getEndTransDate()
    {
        date                            endTransDate;

        GeneralJournalEntry             generalJournalEntry;
        GeneralJournalAccountEntry      generalJournalAccountEntry;
        LedgerEntryJournalizing         ledgerEntryJournalizing;

        if (this.StartTransDate)
        {
            endTransDate = this.EndTransDate;
        }
        else
        {
            select maxof(AccountingDate) from generalJournalEntry
                exists join generalJournalAccountEntry
                    where generalJournalAccountEntry.GeneralJournalEntry == generalJournalEntry.RecId
                exists join ledgerEntryJournalizing
                    where ledgerEntryJournalizing.GeneralJournalAccountEntry == generalJournalAccountEntry.RecId
                        && ledgerEntryJournalizing.Journal == this.JournalizeNum;

            endTransDate = generalJournalEntry.AccountingDate;
        }

        return endTransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStartTransDate</Name>
				<Source><![CDATA[
        public TransDate getStartTransDate()
    {
        date                            startTransDate;

        GeneralJournalEntry             generalJournalEntry;
        GeneralJournalAccountEntry      generalJournalAccountEntry;
        LedgerEntryJournalizing         ledgerEntryJournalizing;

        if (this.StartTransDate)
        {
            startTransDate = this.StartTransDate;
        }
        else
        {
            select minof(AccountingDate) from generalJournalEntry
                exists join generalJournalAccountEntry
                    where generalJournalAccountEntry.GeneralJournalEntry == generalJournalEntry.RecId
                exists join ledgerEntryJournalizing
                    where ledgerEntryJournalizing.GeneralJournalAccountEntry == generalJournalAccountEntry.RecId
                        && ledgerEntryJournalizing.Journal == this.JournalizeNum;

            startTransDate = generalJournalEntry.AccountingDate;
        }

        return startTransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
        public static boolean checkExist(LedgerJournalizeNum _journalizeNum )
    {
        boolean ret = true;

        if (!LedgerJournalizeReport::exist(_journalizeNum))
        {
            ret = checkFailed(strFmt(LedgerJournalizeReport::txtNotExist(), _journalizeNum));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
        public static boolean exist(LedgerJournalizeNum _journalizeNum )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     ledgerJournalizeReport
                 where
                     ledgerJournalizeReport.JournalizeNum == _journalizeNum).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        public static LedgerJournalizeReport find(
        LedgerJournalizeNum _journalizeNum ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        LedgerJournalizeReport ledgerJournalizeReport;

        ledgerJournalizeReport.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            ledgerJournalizeReport.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            ledgerJournalizeReport
            where
            ledgerJournalizeReport.JournalizeNum == _journalizeNum;

        return ledgerJournalizeReport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastPage</Name>
				<Source><![CDATA[
        static PageNo lastPage()
    {
        return (select reverse ledgerJournalizeReport
                  order by Page
                  where ledgerJournalizeReport.Page).Page;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priorReportLastPage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the last page number of the report before the passed report.
    /// </summary>
    /// <param name="_ledgerJournalizeReport">
    /// The report for which the last page of previous report should be found.
    /// </param>
    /// <returns>
    /// The last page number of previous report; otherwise, 0.
    /// </returns>
    public static PageNo priorReportLastPage(LedgerJournalizeReport _ledgerJournalizeReport)
    {
        LedgerJournalizeReport  oldJournal;

        if (_ledgerJournalizeReport.NewJournalize == NoYes::Yes)
        {
            return 0;
        }

        select firstOnly Page from oldJournal
            order by JournalizeNum desc
            where oldJournal.JournalizeNum < _ledgerJournalizeReport.JournalizeNum;

        return oldJournal.Page;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static TxtNotExist txtNotExist()
    {
        return "@SYS102230";
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePageNum</Name>
				<Source><![CDATA[
        public static void updatePageNum(
        LedgerJournalizeNum _journalNum,
        PageNo              _pageNo)
    {
        LedgerJournalizeReport ledgerJournalizeReport;

        ttsbegin;

        ledgerJournalizeReport = LedgerJournalizeReport::find(_journalNum, true);

        if (! ledgerJournalizeReport.Page)
        {
            ledgerJournalizeReport.Page = _pageNo + LedgerJournalizeReport::priorReportLastPage(ledgerJournalizeReport);
            ledgerJournalizeReport.update();
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicJournalizeTransactions</ConfigurationKey>
	<DeveloperDocumentation>@SYS125930</DeveloperDocumentation>
	<Label>@SYS26007</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>JournalizeNum</TitleField1>
	<TitleField2>JournalizeSeqNum</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>JournalIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>JournalIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalizeNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalizeSeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Page</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Debit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Credit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Debit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Credit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalizeNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalizeSeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Page</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>JournalizeDates</Name>
			<Label>@SYS80293</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartTransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndTransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Misc</Name>
			<Label>@SYS73543</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NewJournalize</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AdvancedJournalizing</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AdvancedJournalizing</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerBasicJournalizeTransactions</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS59034</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Credit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS7084</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Debit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS9512</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EndTransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS58838</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalizeNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerJournalizeNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>JournalizeSeqNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerJournalizeSeqNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NewJournalize</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerBasicJournalizeTransactions</ConfigurationKey>
			<ExtendedDataType>LedgerJournalizePageOrder</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Page</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PageNo</ExtendedDataType>
			<Label>@SYS24835</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartTransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS58640</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JournalIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalizeNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PageIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Page</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>