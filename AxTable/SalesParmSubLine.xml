<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesParmSubLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesParmSubLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromCustPackingSlipTrans</Name>
				<Source><![CDATA[
    void initFromCustPackingSlipTrans(CustPackingSlipTrans _custPackingSlipTrans)
    {
        this.JournalRefRecId        = _custPackingSlipTrans.RecId;
        this.JournalRefTableId      = _custPackingSlipTrans.TableId;
        this.InventNow              = _custPackingSlipTrans.InventQty;
        this.DeliverNow             = _custPackingSlipTrans.Qty;
        this.DocumentId             = _custPackingSlipTrans.PackingSlipId;

        if (#PdsCatchWeightEnabled)
        {
            this.PdsCWDeliverNow    = _custPackingSlipTrans.PdsCWQty;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesParmLine</Name>
				<Source><![CDATA[
    void initFromSalesParmLine(SalesParmLine    _salesParmLine)
    {
        this.ParmId         = _salesParmLine.ParmId;
        this.LineRefRecId   = _salesParmLine.RecId;
        this.SalesLineRecId = _salesParmLine.SalesLineRecId;
        // <GEERU>
        this.InventOwnerId_RU = _salesParmLine.InventOwnerId_RU;
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromWMSOrderTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes <c>SalesParmSubLine</c> record from <c>WMSOrderTrans</c> record.
    /// </summary>
    /// <param name="_wmsOrderTrans">
    /// The <c>WMSOrderTrans</c> record.
    /// </param>
    /// <param name="_SalesLine">
    /// The <c>SalesLine</c> record.
    /// </param>
    public void initFromWMSOrderTrans(WMSOrderTrans _wmsOrderTrans, SalesLine _SalesLine)
    {
        this.DeliverNow				= EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(
                                            _salesLine.ItemId,
										    _salesLine.InventDimId,
										    _wmsOrderTrans.qty,
										    _salesLine.inventTable().inventUnitId(),
										    _salesLine.SalesUnit,
										    NoYes::Yes);
        this.InventNow              = _wmsOrderTrans.qty;
        this.WMSRouteId             = _wmsOrderTrans.routeId;
        this.JournalRefRecId        = _wmsOrderTrans.RecId;
        this.JournalRefTableId      = _wmsOrderTrans.TableId;
        this.DocumentId             = _wmsOrderTrans.shipmentId;
        this.PdsCWDeliverNow        = _wmsOrderTrans.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildSalesParmSubLineList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds a list of <c>SalesParmSubLine</c> records for a <c>SalesParmLine</c> record.
    /// </summary>
    /// <param name="_salesParmLine">
    /// The record ID of the <c>SalesParmLine</c> record.
    /// </param>
    /// <returns>
    /// A list of <c>SalesParmSubLine</c> records for a <c>SalesParmLine</c> record.
    /// </returns>
    public static List buildSalesParmSubLineList(RefRecId _salesParmLine)
    {
        List                list;
        SalesParmSubLine    salesParmSubLine;

        list = new List(Types::Record);

        while select salesParmSubLine
            where salesParmSubLine.LineRefRecId == _salesParmLine
        {
            list.addEnd(salesParmSubLine);
        }

        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean  exist(SalesParmLineRefRecId         _lineRefRecId,
                          SalesJournalLinkRefTableId    _journalRefTableId,
                          SalesJournalLinkRefRecId      _journalRefRecId)
    {
        if (_lineRefRecId && _journalRefTableId && _journalRefRecId)
        {
            return (select firstonly RecId from salesParmSubLine
                        where salesParmSubLine.LineRefRecId      == _lineRefRecId
                           && salesParmSubLine.JournalRefTableId == _journalRefTableId
                           && salesParmSubLine.JournalRefRecId   == _journalRefRecId
                   ).RecId != 0;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existSalesParmLine</Name>
				<Source><![CDATA[
    static boolean existSalesParmLine(SalesParmLineRefRecId _refRecId)
    {
        if (!_refRecId)
            return false;

        return (select firstonly salesParmSubLine
                    where salesParmSubLine.LineRefRecId == _refRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static SalesParmSubLine find(SalesParmLineRefRecId         _lineRefRecId,
                                 SalesJournalLinkRefTableId    _journalRefTableId,
                                 SalesJournalLinkRefRecId      _journalRefRecId,
                                 boolean                       _forUpdate = false)
    {
        SalesParmSubLine  salesParmSubLine;
        if (_lineRefRecId && _journalRefTableId && _journalRefRecId)
        {
            if (_forUpdate)
                salesParmSubLine.selectForUpdate(_forUpdate);

            select firstonly salesParmSubLine
                where salesParmSubLine.LineRefRecId         == _lineRefRecId
                   && salesParmSubLine.JournalRefTableId    == _journalRefTableId
                   && salesParmSubLine.JournalRefRecId      == _journalRefRecId;
        }
        return salesParmSubLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subId</Name>
				<Source><![CDATA[
    static SalesParmSubId subId(SalesParmLine   _salesParmLine)
    {
        return (select firstonly salesParmSubLine
                  where salesParmSubLine.LineRefRecId == _salesParmLine.RecId).SubId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subLines</Name>
				<Source><![CDATA[
    static NumberOfRecords subLines(SalesParmLine _salesParmLine)
    {
        return (select count(RecId) from salesParmSubLine
                    where salesParmSubLine.LineRefRecId == _salesParmLine.RecId).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>subLinesTable</Name>
				<Source><![CDATA[
    static NumberOfRecords subLinesTable(SalesParmTable _salesParmTable,
                                         boolean        _skipExactCount = false)
    {
        NumberOfRecords     i;
        SalesParmSubLine    salesParmSubLine;
        SalesParmLine       salesParmLine;

        while select RecId from salesParmSubLine
            group by DocumentId
            exists join salesParmLine
            where salesParmSubLine.LineRefRecId == salesParmLine.RecId &&
                  salesParmSubLine.ParmId       == _salesParmTable.ParmId &&
                  salesParmLine.TableRefId      == _salesParmTable.TableRefId
        {
            i++;
            if (_skipExactCount && i>1)
                break;
        }

        return i;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124555</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS109410</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>ParmId</TitleField1>
	<TitleField2>DocumentId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventOwner_RU</Name>
			<Label>@GLS115561</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventOwnerId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Quantity</Name>
			<Label>@SYS59970</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliverNow</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventNow</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWDeliverNow</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WMS</Name>
			<Label>@SYS323346</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WMSRouteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DeliverNow</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventNow</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventOwnerId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventOwnerId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>JournalRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesJournalLinkRefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>JournalRefTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesJournalLinkRefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LineRefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesParmLineRefRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParmId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWDeliverNow</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesLineRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesLineRefRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>subId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesParmSubId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WMSRouteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSRouteId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RefIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>LineRefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>JournalRefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>JournalRefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ParmIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>Common</Name>
			<RelatedTable>Common</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalRefTableId</Name>
					<Field>JournalRefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalRefRecId</Name>
					<Field>JournalRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventOwner_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventOwner_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventOwnerId_RU</Name>
					<SourceEDT>InventOwnerId_RU</SourceEDT>
					<Field>InventOwnerId_RU</Field>
					<RelatedField>InventOwnerId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventOwnerIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesLineRecId</Name>
					<Field>SalesLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SalesLineIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesParmLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesParmLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LineRefRecId</Name>
					<Field>LineRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ParmTableRefIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>InventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>