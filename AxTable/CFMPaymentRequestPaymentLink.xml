<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPaymentRequestPaymentLink</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CFMPaymentRequestPaymentLink extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createReference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates record in <c>CFMPaymentRequestPaymentLink</c> table for payment request
    /// </summary>
    /// <param name="_paymentRequestRefRecId">
    /// Record id of <c>CFMPaymentRequestTable</c> table
    /// </param>
    /// <param name="_paymentSource">
    /// The record wich will be assotiated with payment request
    /// </param>
    /// <param name="_createdFromScheduleJournal">
    /// The sign that shows whether link created from ssheduled journal or not, <c>false</c> by default. Optional
    /// </param>
    /// <returns>
    /// Record id of created link
    /// </returns>
    static public RefRecId createReference(CFMPaymentRequestRef _paymentRequestRefRecId, Common _paymentSource, boolean _createdFromScheduleJournal = false)
    {
        CFMPaymentRequestPaymentLink paymentReqLink;

        if (_paymentRequestRefRecId && _paymentSource.RecId)
        {
            paymentReqLink.initValue();
            paymentReqLink.PaymentRequest               = _paymentRequestRefRecId;
            paymentReqLink.RefTableId                   = _paymentSource.TableId;
            paymentReqLink.RefRecId                     = _paymentSource.RecId;
            paymentReqLink.CreatedFromScheduleJournal   = _createdFromScheduleJournal;
            paymentReqLink.insert();
        }

        return paymentReqLink.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deletePaymentRequestLinkJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes link to ledger journal trans
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    /// The <c>LedgerJournalTrans</c> line linked to payment request
    /// </param>
    public static void deletePaymentRequestLinkJournalTrans(LedgerJournalTrans _ledgerJournalTrans)
    {
        CFMPaymentRequestPaymentLink paymentLink;
        CFMPaymentRequestTable paymentRequest = CFMPaymentRequestTable::findRecID(CFMPaymentRequestPaymentLink::findPaymentRequestByPaymentSource(_ledgerJournalTrans).PaymentRequest);

        if (paymentRequest.Status == CFMPaymentRequestStatus::Opened
            || paymentRequest.Status == CFMPaymentRequestStatus::Confirmed
            || paymentRequest.Status == CFMPaymentRequestStatus::Scheduled)
        {
            CFMPaymentRequestPaymentLink::updatePaymReqJournalTransPaymentDocument(_ledgerJournalTrans, '', paymentRequest.DueDate);
        }

        delete_from paymentLink
            where paymentLink.RefTableId == _ledgerJournalTrans.TableId
               && paymentLink.RefRecId == _ledgerJournalTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds record
    /// </summary>
    /// <param name="_paymentRequestRefRecId">
    /// Record id of <c>CFMPaymentRequestTable</c> table
    /// </param>
    /// <param name="_tableIdRef">
    /// Table id the referance linked to
    /// </param>
    /// <param name="_sourceRecId">
    /// Record id the reference linked to
    /// </param>
    /// <param name="_update">
    /// Flag identifies whether record shoulkd be selected for update or not, <c>false</c> by default. Optional
    /// </param>
    /// <returns>
    /// Record of <c>CFMPaymentRequestPaymentLink</c> type
    /// </returns>
    public static CFMPaymentRequestPaymentLink find(CFMPaymentRequestRef _paymentRequestRefRecId, TableId _tableIdRef, RefRecId _sourceRecId, boolean _update = false)
    {
        CFMPaymentRequestPaymentLink paymentReqLink;

        if (_paymentRequestRefRecId && _sourceRecId && _tableIdRef)
        {
            paymentReqLink.selectForUpdate(_update);

            select firstonly paymentReqLink
                where paymentReqLink.PaymentRequest == _paymentRequestRefRecId
                   && paymentReqLink.RefTableId == _tableIdRef
                   && paymentReqLink.RefRecId == _sourceRecId;
        }

        return paymentReqLink;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(CFMPaymentRequestRef _paymentRequestRefRecId, TableId _tableIdRef, RefRecId _sourceRecId)
    {
        CFMPaymentRequestPaymentLink paymentReqLink;

        if (_paymentRequestRefRecId && _sourceRecId && _tableIdRef)
        {
            select firstonly RecId from paymentReqLink
                where paymentReqLink.PaymentRequest == _paymentRequestRefRecId
                   && paymentReqLink.RefTableId == _tableIdRef
                   && paymentReqLink.RefRecId == _sourceRecId;
        }

        return paymentReqLink.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPaymentRequestByPaymentSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds record assotiated with source passed as parameter
    /// </summary>
    /// <param name="_paymentSource">
    /// Record that associated with passed source
    /// </param>
    /// <returns>
    /// Source record
    /// </returns>
    public static CFMPaymentRequestPaymentLink findPaymentRequestByPaymentSource(Common _paymentSource)
    {
        CFMPaymentRequestPaymentLink paymentReqLink;

        if (_paymentSource.RecId)
        {
            select firstonly paymentReqLink
                where paymentReqLink.RefTableId == _paymentSource.TableId
                   && paymentReqLink.RefRecId == _paymentSource.RecId;
        }

        return paymentReqLink;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPaymentSourceByPaymentRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds link assotiated with payment request
    /// </summary>
    /// <param name="_pymentRequestRef">
    /// Record id of <c>CFMPaymentRequestTable</c> record
    /// </param>
    /// <param name="_refTableId">
    /// Table identificator of source record
    /// </param>
    /// <returns>
    /// Record of <c>CFMPaymentRequestPaymentLink</c> table
    /// </returns>
    public static CFMPaymentRequestPaymentLink findPaymentSourceByPaymentRequest(CFMPaymentRequestRef   _pymentRequestRef, TableId _refTableId)
    {
        CFMPaymentRequestPaymentLink paymentReqLink;

        if (_pymentRequestRef && _refTableId)
        {
            select firstonly paymentReqLink
                where paymentReqLink.RefTableId == _refTableId
                   && paymentReqLink.PaymentRequest == _pymentRequestRef;
        }

        return paymentReqLink;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isGeneratedFromPaymentSchedule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines that link was created from payment scheduled journal for ledger journal
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    /// <c>LedgerJournalTrans</c> record
    /// </param>
    /// <returns>
    /// <c>true</c> if link was created from payment scheduled journal otherwise <c>false</c>
    /// </returns>
    public static boolean isGeneratedFromPaymentSchedule(LedgerJournalTrans _ledgerJournalTrans)
    {
        CFMPaymentRequestPaymentLink paymentLink;

        select firstonly CreatedFromScheduleJournal from paymentLink
            where paymentLink.RefTableId == _ledgerJournalTrans.TableId
               && paymentLink.RefRecId == _ledgerJournalTrans.RecId;

        return paymentLink.CreatedFromScheduleJournal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePaymentRequestJournalTransPosting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates payment request when ledger journal trans posting
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    /// <c>LedgerJournalTrans</c> record
    /// </param>
    public static void updatePaymentRequestJournalTransPosting(LedgerJournalTrans _ledgerJournalTrans)
    {
        CFMPaymentRequestTable  paymentRequest;
        CFMPaymentRequestPaymentLink paymentLink;

        update_recordset paymentRequest
            setting Status = CFMPaymentRequestStatus::Completed,
                    PaymentDocumentNum = _ledgerJournalTrans.DocumentNum,
                    PaymentDate = _ledgerJournalTrans.TransDate
            exists join paymentLink
                where paymentLink.PaymentRequest == paymentRequest.RecId
                   && paymentLink.RefTableId == _ledgerJournalTrans.TableId
                   && paymentLink.RefRecId == _ledgerJournalTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePaymReqJournalTransPaymentDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates payment request when payment document on ledger journal trans creating
    /// </summary>
    /// <param name="_ledgerJournalTrans">
    /// <c>LedgerJournalTrans</c> record
    /// </param>
    /// <param name="_docNum">
    /// Payment document number
    /// </param>
    /// <param name="_docDate">
    /// Payment document date
    /// </param>
    public static void updatePaymReqJournalTransPaymentDocument(LedgerJournalTrans _ledgerJournalTrans,
                                                            DocumentNum _docNum = _ledgerJournalTrans.DocumentNum,
                                                            DocumentDate _docDate = _ledgerJournalTrans.TransDate)
    {
        CFMPaymentRequestTable  paymentRequest;
        CFMPaymentRequestPaymentLink paymentLink;

        DocumentDate docDate = _docDate;

        if (!docDate)
        {
            docDate = CFMPaymentRequestTable::findRecID(CFMPaymentRequestPaymentLink::findPaymentRequestByPaymentSource(_ledgerJournalTrans).PaymentRequest).DueDate;
        }

        update_recordset paymentRequest
            setting PaymentDocumentNum = _docNum,
                    PaymentDate = docDate
            exists join paymentLink
                where paymentLink.PaymentRequest == paymentRequest.RecId
                   && paymentLink.RefTableId == _ledgerJournalTrans.TableId
                   && paymentLink.RefRecId == _ledgerJournalTrans.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CFMPaymentRequests</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@CashFlowManagement:PaymentRequestPaymentLinkTableDevDescription</DeveloperDocumentation>
	<Label>@CashFlowManagement:Relations2Payments</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>PaymentRequest</TitleField1>
	<TitleField2>RefRecId</TitleField2>
	<ClusteredIndex>ReferenceIdx</ClusteredIndex>
	<Modules>RCashFlowManagement</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymentRequest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Link</Name>
			<Label>@SYS57785</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaymentRequest</Name>
			<Label>@CashFlowManagement:PaymentRequest</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymentRequest</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaymentSchedule</Name>
			<Label>@SYS127172</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CreatedFromScheduleJournal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreatedFromScheduleJournal</Name>
			<HelpText>@CashFlowManagement:PaymJournalCreatedFromPaymSchedule</HelpText>
			<Label>@SYS127172</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PaymentRequest</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CFMPaymentRequestRef</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LinkIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReferenceIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>PaymentRequest</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CustTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustVendPaymProposalLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CustVendPaymProposalLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LedgerJournalTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>LedgerJournalTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PaymentRequest</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>CFMPaymentRequestTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymentRequest</Name>
					<Field>PaymentRequest</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>VendTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>