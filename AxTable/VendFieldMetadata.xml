<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendFieldMetadata</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendFieldMetadata extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>tableLabel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the label of the table that is based on the field metadata.
    /// </summary>
    /// <returns>
    /// The label of the table if the field exists; otherwise, an empty string.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display TableLabel tableLabel()
    {
        SysDictTable        table;
        TableLabel          label = '';

        table = SysDictTable::newTableId(this.FieldTable);
        if (label == '' && table != null)
        {
            label = table.label();
        }
        return label;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a record for field metadata exists based on the definition of the field.
    /// </summary>
    /// <param name="_configProfileRecId">
    /// The record ID field of the entry point (EP) configuration profile.
    /// </param>
    /// <param name="_tableName">
    /// The table name of the configured EP field.
    /// </param>
    /// <param name="_fieldName">
    /// The field name of the configured EP field.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(recId _configProfileRecId, tableId _tableName, fieldId _fieldName)
    {
        VendFieldMetadata field;

        select firstonly RecId from field
            where field.MetadataGroup == _configProfileRecId &&
            field.FieldTable == _tableName &&
            field.Field == _fieldName;

        return field.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record for the metadata of a field based on the definition of the field.
    /// </summary>
    /// <param name="_configProfileRecId">
    /// The record ID field of the configuration profile.
    /// </param>
    /// <param name="_tableId">
    /// The table name of the configured field.
    /// </param>
    /// <param name="_fieldId">
    /// The field name of the configured field.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether the record can be selected for update.
    /// </param>
    /// <returns>
    /// The record if found; otherwise, null.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static VendFieldMetadata find(recId _configProfileRecId, tableId _tableId, fieldId _fieldId,
        boolean _forUpdate = false)
    {
        VendFieldMetadata field;

        field.selectForUpdate(_forUpdate);

        select firstonly forupdate field
                where field.MetadataGroup == _configProfileRecId &&
                field.FieldTable == _tableId &&
                field.Field == _fieldId;

        return field;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFieldStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the status for a field to metadata based on the definition of the field.
    /// </summary>
    /// <param name="_configProfileRecId">
    /// The record ID field of the entry point configuration profile.
    /// </param>
    /// <param name="_tableName">
    /// The table name of the field metadata.
    /// </param>
    /// <param name="_fieldName">
    /// The field name of the field metadata.
    /// </param>
    /// <param name="_status">
    /// The status to set field metadata to.
    /// </param>
    /// <remarks>
    /// The value of the status can be one of the following: displayed, not displayed, or required.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void setFieldStatus(recId _configProfileRecId, tableId _tableName, fieldId _fieldName, VendFieldMetadataStatus _status)
    {
        DictField dictField = SysDictField::findFieldById(_tableName, _fieldName);

        if (_status == VendFieldMetadataStatus::Required && dictField.baseType() == Types::Enum)
        {
            // Making an Enum (including NoYes) required is not supported.
            info(strFmt("@SCM:VendFieldMetedataInvalidRequiredField", dictField.label()));
            return;
        }

        VendFieldMetadata vendFieldMetadata = VendFieldMetadata::find(_configProfileRecId, _tableName, _fieldName);

        if (vendFieldMetadata && vendFieldMetadata.FieldStatus != _status)
        {
            ttsbegin;

            VendFieldMetadata vendFieldMetadataToUpdate;

            update_recordset vendFieldMetadataToUpdate
                setting FieldStatus = _status
                    where vendFieldMetadataToUpdate.RecId == vendFieldMetadata.RecId;

            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS327362</DeveloperDocumentation>
	<Label>@SYS130869</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>RecId</TitleField1>
	<TitleField2>Field</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>Vendor</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Field</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldLabel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldLabel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MetadataGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Field</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Field</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefFieldId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldLabel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldLabel</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FieldStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS130963</Label>
			<EnumType>VendFieldMetadataStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>FieldTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MetadataGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FieldDef</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>FieldTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Field</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MetadataGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendFieldMetadataGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendFieldMetadataGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendFieldMetadataGroup</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>VendFieldMetadataGroup_VendFieldMetadata</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MetadataGroup</Name>
					<Field>MetadataGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>