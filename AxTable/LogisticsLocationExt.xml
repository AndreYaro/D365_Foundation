<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsLocationExt</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LogisticsLocationExt extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static LogisticsLocationExt find(LogisticsLocationRecId   _location,
                                  boolean                  _forUpdate = false)
    {
        LogisticsLocationExt logisticsLocation;

        if (_location)
        {
            if (_forUpdate)
                logisticsLocation.selectForUpdate(_forUpdate);

            select firstonly logisticsLocation
                where logisticsLocation.Location == _location;
        }
        return logisticsLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        if (ret && BrazilParameters::isEnabled())
        {
            switch (_fieldName)
            {
                case fieldStr(LogisticsLocationExt, CNPJCPFNum_BR) :
                    boolean isCNPJValid, isCPFValid;
                    int line = infologLine();

                    // Two times try-catch to make sure that validate pass when either CNPJ or CPF validate passed,
                    // and give a generic warning message if both validate failed.
                    try
                    {
                        isCNPJValid = FiscalInformationUtil_BR::isCNPJValid(this.CNPJCPFNum_BR);
                    }
                    catch (Exception::Warning)
                    {
                        infolog.clear(line);

                        try
                        {
                            isCPFValid = FiscalInformationUtil_BR::isCPFValid(this.CNPJCPFNum_BR);
                        }
                        catch (Exception::Warning)
                        {
                            infolog.clear(line);
                            ret = checkFailed("@GLS37");
                        }
                    }
                    break;

                case fieldStr(LogisticsLocationExt, IENum_BR) :
                    ret = this.validateIENum();
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateIENum</Name>
				<Source><![CDATA[
    private boolean validateIENum()
    {
        #ISOCountryRegionCodes

        if (this.IENum_BR == '')
        {
            return true;
        }

        LogisticsPostalAddress logisticsPostaladdress = LogisticsPostalAddress::findByLocation(this.Location);
        LogisticsAddressCountryRegion countryRegion = LogisticsAddressCountryRegion::findByISOCode(#isoBR);

        boolean ret = true;

        if (strUpr(logisticsPostaladdress.CountryRegionId) != countryRegion.CountryRegionId)
        {
            ret = false;
        }

        ret = ret && FiscalInformationUtil_BR::isIEValid(this.IENum_BR, logisticsPostaladdress.State);

        if (!ret)
        {
            checkFailed(strFmt("@Brazil:AddressTaxAttributes_InvalidIENumber", logisticsPostaladdress.State));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDeemedExportType</Name>
				<Source><![CDATA[
    /// <summary>
    /// If user select EPZ code: BTP/EHTP/EOU/STP, it will be defined Deemed export type.
    /// </summary>
    /// <returns>
    /// True, if user select EPZ code: BTP/EHTP/EOU/STP, else false.
    /// </returns>
    public NoYes isDeemedExportType()
    {
        return (this.TaxGSTEPZCode_IN == TaxGSTEPZCode_IN::BTP  ||
                this.TaxGSTEPZCode_IN == TaxGSTEPZCode_IN::EHTP ||
                this.TaxGSTEPZCode_IN == TaxGSTEPZCode_IN::EOU  ||
                this.TaxGSTEPZCode_IN == TaxGSTEPZCode_IN::STP);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLogisticsPostalAddressRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Select EPZ code by delivery postal address
    /// </summary>
    /// <param name = "_deliveryPostalAddress">The logistics postal address.</param>
    /// <returns>The logistics location extension object.</returns>
    public static LogisticsLocationExt findByLogisticsPostalAddressRecId(LogisticsPostalAddressRecId _deliveryPostalAddress)
    {
        LogisticsPostalAddress logisticsPostalAddressLoc;
        LogisticsLocation logisticsLocation;
        LogisticsLocationExt logisticsLocationExt;

        select firstonly logisticsLocationExt
            join RecId from logisticsLocation
                where logisticsLocation.RecId == logisticsLocationExt.Location
                join RecId from logisticsPostalAddressLoc
                    where logisticsPostalAddressLoc.Location == logisticsLocation.RecId
                        && logisticsPostalAddressLoc.RecId == _deliveryPostalAddress;

        return logisticsLocationExt;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS324507</DeveloperDocumentation>
	<FormRef>custtable</FormRef>
	<Label>@SYS20394</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Location</TitleField1>
	<TitleField2>SalesCalendarId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>LocationIdx</ClusteredIndex>
	<Modules>GAB</Modules>
	<ReplacementKey>LocationIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesCalendarId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Location</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesCalendarId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Location</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Location</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Delivery</Name>
			<Label>@SYS4508</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesCalendarId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FiscalInformation</Name>
			<Label>@GlobalAddressBook:FiscalInformation</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CNPJCPFNum_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IENum_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxGSTEPZCode_IN</Name>
			<Label>@TaxGSTSEZ:EPZCode</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGSTEPZCode_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CNPJCPFNum_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CNPJCPFNum_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IENum_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IENum_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Location</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesCalendarId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesCalendarId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
			<Label>@SYS318303</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxGSTEPZCode_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxGSTEPZCode_IN</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LocationIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Location</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Location_FK</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>LogisticsLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LocationRelatedTableRole</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>IsLogLocationExtFor</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Location</Name>
					<Field>Location</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxGroupHeading</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsLocationExt</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroup</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>TaxGroup</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkCalendarTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>WorkCalendarTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>WorkCalendarTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsLocationExt</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesCalendarId</Name>
					<SourceEDT>SalesCalendarId</SourceEDT>
					<Field>SalesCalendarId</Field>
					<RelatedField>CalendarId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CalendarIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>