<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBSpedFileItemManufacturedTmp_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FBSpedFileItemManufacturedTmp_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateScrapConstTotal</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Calculates the scrap constant in percentage given a scrap constant.
    /// </summary>
    /// <param name="_scrapConst">
    ///     the scrap constant given a production associated with a BOM.
    /// </param>
    /// <param name="bomQtyProduced">
    ///     The total Qty produced, it is factor to multiplicate and calculate the total material consumption by the number of production orders.
    /// </param>
    /// <returns>
    ///     The scrap constant calculated in percentage.
    /// </returns>
    public ScrapVar calculateScrapConstTotal(ScrapConst _scrapConst, Qty bomQtyProduced)
    {
        ScrapVar calculatedValue;

        if (bomQtyProduced > 0 && this.TotalScheduledQty > 0)
        {
            calculatedValue = (this.CountOfProdId * _scrapConst) / (bomQtyProduced * this.TotalScheduledQty) * 100;
        }

        return calculatedValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertUnique</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Inserts a record in the <c>FBSpedFileItemConsumedTmp_BR</c> temporary table represented by the current table buffer instance.
    /// </summary>
    /// <param name="_fiscalEstablishmentRecId">
    ///     A record ID of the <c>FiscalEstablishment_BR</c>.
    /// </param>
    /// <param name="_fbProdTableView">
    ///     The record <c>FBProdTableView</c> that contains a synced production order.
    /// </param>
    /// <param name="_spedItemId">
    ///     The sped Item ID number.
    /// </param>
    public void insertUnique(
        FiscalEstablishmentRecId_BR _fiscalEstablishmentRecId,
        FBProdTableMinStartDateView_BR _fbProdTableView,
        SpedItemId _spedItemId)
    {
        this.insertUniqueSpedFileItemManufacturedTmp(_fiscalEstablishmentRecId, _fbProdTableView.ProdId, _fbProdTableView.ItemId, _fbProdTableView.QtyStUp, _spedItemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertUniqueSpedFileItemManufacturedTmp</Name>
				<Source><![CDATA[
    public void insertUniqueSpedFileItemManufacturedTmp(
        FiscalEstablishmentRecId_BR _fiscalEstablishmentRecId,
        ProdId _prodId,
        ItemId _itemId,
        Qty _qtyItemId,
        SpedItemId _spedItemId)
    {
        FBSpedFileItemManufacturedTmp_BR currentRecord = FBSpedFileItemManufacturedTmp_BR::find(this, _fiscalEstablishmentRecId, _itemId, _spedItemId);

        if (!currentRecord)
        {
            this.FiscalEstablishmentRecId = _fiscalEstablishmentRecId;
            this.SpedItemId = _spedItemId;
            this.ProdId = _prodId;
            this.ItemId = _itemId;
            this.CountOfProdId = 1;
            this.TotalScheduledQty = _qtyItemId;

            this.insert();
        }
        else
        {
            ttsBegin;

            currentRecord.CountOfProdId += 1;
            currentRecord.TotalScheduledQty += _qtyItemId;
            currentRecord.update();

            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Indicates whether the specified record in the <c>FBSpedFileItemConsumedTmp_BR</c> temporary table exists.
    /// </summary>
    /// <param name="_spedFileItemManufactured">
    ///     The instance of table buffer <c>FBSpedFileItemConsumedTmp_BR</c> where data should be searched for.
    /// </param>
    /// <param name="_fiscalEstablishmentRecId">
    ///     A record ID of the <c>FiscalEstablishment_BR</c> table representing the fiscal establishment from which the item comes.
    /// </param>
    /// <param name="_itemId">
    ///     An <c>ItemID</c> representing the item ID to be searched for in the temporary table.
    /// </param>
    /// <param name="_spedItemId">
    ///     The sped Item identification number.
    /// </param>
    /// <returns>
    ///     The <c>FBSpedFileItemManufacturedTmp_BR</c> record wheter the record exists; otherwise, null.
    /// </returns>
    public static FBSpedFileItemManufacturedTmp_BR find(
        FBSpedFileItemManufacturedTmp_BR _spedFileItemManufactured,
        FiscalEstablishmentRecId_BR _fiscalEstablishmentRecId,
        ItemId _itemId,
        SpedItemId _spedItemId)
    {
        select firstOnly forUpdate _spedFileItemManufactured
            where _spedFileItemManufactured.FiscalEstablishmentRecId == _fiscalEstablishmentRecId
                && _spedFileItemManufactured.ItemId == _itemId
                && _spedFileItemManufactured.SpedItemId == _spedItemId;

        return _spedFileItemManufactured;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findProdId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Indicates whether the specified record in the <c>FBSpedFileItemConsumedTmp_BR</c> temporary table exists.
    /// </summary>
    /// <param name="_spedFileItemManufactured">
    ///     The instance of table buffer <c>FBSpedFileItemConsumedTmp_BR</c> where data should be searched for.
    /// </param>
    /// <param name="_fiscalEstablishmentRecId">
    ///     A record ID of the <c>FiscalEstablishment_BR</c> table representing the fiscal establishment from which the item comes.
    /// </param>
    /// <param name="_prodId">
    ///     A <c>ProdId</c> representing the production order to be searched for in the temporary table.
    /// </param>
    /// <returns>
    ///     The <c>FBSpedFileItemManufacturedTmp_BR</c> record wheter the record exists; otherwise, null.
    /// </returns>
    public static FBSpedFileItemManufacturedTmp_BR findProdId(
        FBSpedFileItemManufacturedTmp_BR _spedFileItemManufactured,
        FiscalEstablishmentRecId_BR _fiscalEstablishmentRecId,
        ProdId _prodId)
    {
        select firstOnly _spedFileItemManufactured
            where _spedFileItemManufactured.FiscalEstablishmentRecId == _fiscalEstablishmentRecId
                && _spedFileItemManufactured.ProdId == _prodId;

        return _spedFileItemManufactured;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@FiscalBooks_SpedFiscal:TableDevDoc_FBSpedFileItemManufacturedTmp_BR</DeveloperDocumentation>
	<Label>@FiscalBooks_SpedFiscal:TableTitle_FBSpedFileItemManufacturedTmp_BR</Label>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>ProdId</TitleField2>
	<ClusteredIndex>FiscalEstablishmentIdItemIdSpedItemIdIdx</ClusteredIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CountOfProdId</Name>
			<ExtendedDataType>Counter</ExtendedDataType>
			<HelpText>@FiscalBooks_SpedFiscal:HelpText_CountOfProdId</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FiscalEstablishmentRecId</Name>
			<ExtendedDataType>FiscalEstablishmentRecId_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProdId</Name>
			<ExtendedDataType>ProdId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SpedItemId</Name>
			<ExtendedDataType>SpedItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalScheduledQty</Name>
			<ExtendedDataType>BOMQty</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FiscalEstablishmentIdItemIdSpedItemIdIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>FiscalEstablishmentRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SpedItemId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProdId</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FiscalEstablishmentRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProdId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>FiscalEstablishment_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FiscalEstablishment_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalEstablishmentRecId</Name>
					<Field>FiscalEstablishmentRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProdTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProdTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProdId</Name>
					<Field>ProdId</Field>
					<RelatedField>ProdId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>