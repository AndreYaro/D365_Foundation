<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferParmTableFiscalInfo_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransferParmTableFiscalInfo_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(InventTransferParmTableFiscalInfo_BR, ThirdPartyEFDocAccessKey_BR):
                this.ThirdPartyEFDocAccessKey_BR = strKeep(this.ThirdPartyEFDocAccessKey_BR, '0123456789');
                this.ThirdPartyFiscalDocumentNumber = EFDocAccessKeyBase_BR::getInvoiceNumber(this.ThirdPartyEFDocAccessKey_BR);
                this.ThirdPartyFiscalDocumentSeries = EFDocAccessKeyBase_BR::getInvoiceSeries(this.ThirdPartyEFDocAccessKey_BR);
                break;

            case fieldNum(InventTransferParmTableFiscalInfo_BR, ThirdPartyFiscalDocumentModel):
                this.ThirdPartyFiscalDocumentNumber = '';
                this.ThirdPartyFiscalDocumentSeries = '';
                this.ThirdPartyEFDocAccessKey_BR = '';
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = true;
        str documentDate, accessKeyDate;

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(InventTransferParmTableFiscalInfo_BR, ThirdPartyEFDocAccessKey_BR) :
                    if (this.ThirdPartyEFDocAccessKey_BR && FiscalDocModel_BR::find(this.ThirdPartyFiscalDocumentModel).IsForNFeFederal)
                    {
                        if (!EFDocAccessKeyBase_BR::validate(this.ThirdPartyEFDocAccessKey_BR))
                        {
                            ret = checkFailed("@SYS4110579");
                        }
                    }
                    break;
                    
                case fieldNum(InventTransferParmTableFiscalInfo_BR, ThirdPartyFiscalDocumentDate) :
                    if (FiscalDocModel_BR::find(this.ThirdPartyFiscalDocumentModel).IsForNFeFederal)
                    {
                        accessKeyDate = substr(this.ThirdPartyEFDocAccessKey_BR, 3, 4);
                    
                        documentDate = date2str(this.ThirdPartyFiscalDocumentDate, 321, DateDay::None, DateSeparator::None, DateMonth::Digits2, DateSeparator::None, DateYear::Digits2, DateFlags::None);
                    
                        if (!this.ThirdPartyFiscalDocumentDate || documentDate != accessKeyDate)
                        {
                            ret = checkFailed("@Brazil:InventTransfer_FieldError_DocumentDate");
                        }
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFrom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the InventTransferParmTableFiscalInfo_BR buffer with data received in the parameters.
    /// </summary>
    /// <param name="_carNumber">
    /// Number of the car that is transporting the shipment.
    /// </param>
    /// <param name="_carState">
    /// State where the car that is transporting the shipment is registered.
    /// </param>
    /// <param name="_inventTransferParmTableRecId">
    /// RecId from the InventTransferParmTable that the current buffer should be linked to.
    /// </param>
    /// <param name="_volumeQty">
    /// Quantity of volumes being transported.
    /// </param>
    /// <param name="_volumeType">
    /// Type of the volumes being transported.
    /// </param>
    public void initFrom(TMSCarNumber _carNumber, DlvStateRegistered_BR _carState, RefRecId _inventTransferParmTableRecId, VolumeQty_BR _volumeQty, VolumeType_BR _volumeType)
    {
        this.InventTransferParmTable = _inventTransferParmTableRecId;
        this.VehicleLicensePlate_BR = _carNumber;
        this.VehicleLicensePlateState_BR = _carState;
        this.VolumeQty_BR = _volumeQty;
        this.VolumeType_BR = _volumeType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasManyFiscalInfoForInventTransfer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if there is more than one InventTransferParmTableFiscalInfo_BR record referencing a specific InventTransferParmTable.
    /// </summary>
    /// <param name="_inventTransferParmTableRecId">
    /// RecId of the InventTransferParmTable that may be referenced by many InventTransferParmTableFiscalInfo_BR.
    /// </param>
    /// <returns>
    /// True if there is more than one record referencing the InventTransferParmTable; otherwise; false.
    /// </returns>
    public static boolean hasManyFiscalInfoForInventTransfer(RefRecId _inventTransferParmTableRecId)
    {
        InventTransferParmTableFiscalInfo_BR parmTableFiscalInfo;

        select count(RecId) from parmTableFiscalInfo
            where parmTableFiscalInfo.InventTransferParmTable == _inventTransferParmTableRecId;

        return parmTableFiscalInfo.RecId > 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertFromLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the fiscal information and ship stat parm records related to a given invent transfer parm table into the database.
    /// </summary>
    /// <param name="_loadId">
    /// Id of the load that contains the transfer order lines to be transported.
    /// </param>
    /// <param name="_transferOrderId">
    /// Id of the transfer order that contains lines in the load.
    /// </param>
    /// <param name="_inventTransferParmTableRecId">
    /// RecId of the InventTransferParmTable that will be linked to the inserted InventTransferParmTableFiscalInfo_BR records.
    /// </param>
    public static void insertFromLoad(WHSLoadId _loadId, WHSOrderNum _transferOrderId, RefRecId _inventTransferParmTableRecId)
    {
        InventTransferParmTableFiscalInfo_BR inventTransferParmTableFiscalInfo;
        InventTransferParmTableShipStat_BR   inventTransferParmTableShipStat;
        ShipmentStat_BR                      shipment;
        ShipmentStatSummary_BR               shipmentsSummary = ShipmentStatSummary_BR::constructFromLoadForTransferOrder(_loadId, _transferOrderId);
        List                                 volumeTypes = shipmentsSummary.getVolumeTypes();
        ListEnumerator                       volumesEnumerator = volumeTypes.getEnumerator();

        while (volumesEnumerator.moveNext())
        {
            shipment = shipmentsSummary.getShipmentForVolumeType(volumesEnumerator.current());

            inventTransferParmTableFiscalInfo.initFrom(shipmentsSummary.parmCarNumber(),
                                                       shipmentsSummary.parmCarState(),
                                                       _inventTransferParmTableRecId,
                                                       shipment.parmVolumeQuantity(),
                                                       shipment.parmVolumeType());

            inventTransferParmTableFiscalInfo.insert();

            inventTransferParmTableShipStat.initializeFrom(inventTransferParmTableFiscalInfo.RecId, shipment.parmGrossWeight(), shipment.parmItemNetWeight(), _loadId);
            inventTransferParmTableShipStat.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromParmTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the InventTransferParmTableFiscalInfo_BR with default values from master data.
    /// </summary>
    /// <param name = "_inventTransferParmTable">The InventTransferParmTable record.</param>
    /// <param name = "_inventTransferTable">The InventTransferTable related to InventTransferParmTable.</param>
    public void initFromParmTable(InventTransferParmTable _inventTransferParmTable, InventTransferTable _inventTransferTable)
    {
        this.InventTransferParmTable = _inventTransferParmTable.RecId;

        if (_inventTransferTable.inventTransferTableFiscalInfo_BR().InventTransferOrderType == InventTransferOrderType_BR::ThirdPartyReturn)
        {
            this.setModelAndSeriesFromLastFiscalDoc_BR(_inventTransferTable);
        }

        if (_inventTransferTable.inventTransferTableFiscalInfo_BR().canCreateShipmentFiscalDocument())
        {
            this.VolumeType_BR  = BrazilParameters::find().VolumeType_BR;
            this.VolumeQty_BR   = BrazilParameters::find().VolumeQty_BR;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setModelAndSeriesFromLastFiscalDoc_BR</Name>
				<Source><![CDATA[
    private void setModelAndSeriesFromLastFiscalDoc_BR(InventTransferTable _inventTransferTable)
    {
        FiscalDocument_BR       fiscalDocument;

        var inventLocation        = InventLocation::find(_inventTransferTable.InventLocationIdFrom);

        if (inventLocation.CustAccount_BR)
        {
            var inventSite            = InventSite::find(inventLocation.InventSiteId);
            var fiscalEstablishmentId = inventSite.fiscalEstablishment().FiscalEstablishmentId;

            fiscalDocument  = FiscalDocument_BR::findLastFiscalDocForCustByFiscalEstab(fiscalEstablishmentId, inventLocation.CustAccount_BR, FiscalDocDirection_BR::Incoming);
        }
        else if (inventLocation.VendAccount)
        {
            fiscalDocument  = FiscalDocument_BR::findLastPostedFiscalDocumentForVendor(inventLocation.VendAccount);
        }

        this.ThirdPartyFiscalDocumentModel  = fiscalDocument.Model;
        this.ThirdPartyFiscalDocumentSeries = fiscalDocument.FiscalDocumentSeries;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldCreateFiscalInfoParm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if InventTransferParmTableFiscalInfo_BR should be created or not.
    /// </summary>
    /// <param name = "_inventTransferTable">The InventTransferTable related to the parm.</param>
    /// <returns>true if InventTransferParmTableFiscalInfo_BR should be created, false otherwise.</returns>
    public static boolean shouldCreateFiscalInfoParm(InventTransferTable _inventTransferTable)
    {
        if (BrazilParameters::isEnabled())
        {
            return _inventTransferTable.inventTransferTableFiscalInfo_BR().canCreateShipmentFiscalDocument()
                || _inventTransferTable.inventTransferTableFiscalInfo_BR().canCreateReceiveFiscalDocument();
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventTransferOrders</ConfigurationKey>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@GLS222910</DeveloperDocumentation>
	<Label>@SYS78308</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>InventTransferParmTable</TitleField1>
	<TitleField2>RecId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>Inventory</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransferParmTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyFiscalDocumentModel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyFiscalDocumentNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyFiscalDocumentSeries</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyFiscalDocumentSpecie</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VehicleLicensePlateState_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VehicleLicensePlate_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VolumeType_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VolumeQty_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransferParmTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Shipments</Name>
			<Label>@SYS50395</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VolumeType_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VolumeQty_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ThirdPartyFiscalDocumentInfo</Name>
			<Label>@SYS50697</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyFiscalDocumentModel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyFiscalDocumentNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyFiscalDocumentSeries</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyFiscalDocumentSpecie</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyEFDocAccessKey_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyFiscalDocumentDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VehicleInformation_BR</Name>
			<Label>@GLS757</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VehicleLicensePlateState_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VehicleLicensePlate_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventTransferParmTable</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ThirdPartyEFDocAccessKey_BR</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>EFDocAccessKey_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ThirdPartyFiscalDocumentModel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FiscalDocumentModel_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ThirdPartyFiscalDocumentNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FiscalDocumentNumber_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ThirdPartyFiscalDocumentSeries</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FiscalDocumentSeries_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ThirdPartyFiscalDocumentSpecie</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>FiscalDocumentSpecie_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VehicleLicensePlate_BR</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DlvNoOfCarrier_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VehicleLicensePlateState_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DlvStateRegistered_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VolumeQty_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VolumeQty_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VolumeType_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VolumeType_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ThirdPartyFiscalDocumentDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DocumentDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTransferParmTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransferParmTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FiscalDocModel_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FiscalDocModel_BR</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ThirdPartyFiscalDocumentModel</Name>
					<Field>ThirdPartyFiscalDocumentModel</Field>
					<RelatedField>Model</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DocumentModelIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransferParmTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventTransferParmTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransferParmTable</Name>
					<Field>InventTransferParmTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>