<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxParameters extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkDataConnection</Name>
				<Source><![CDATA[
    private boolean checkDataConnection()
    {
        TaxTable    taxTable;
        ;
        if (this.CalculatePrinciple == TaxCalcPrin::Total)
        {
            select firstonly RecId from  taxTable
                where taxTable.TaxLimitBase == TaxLimitBase::UnitWithoutVAT
                   || taxTable.TaxLimitBase == TaxLimitBase::UnitInclVAT
                   || taxTable.TaxLimitBase == TaxLimitBase::LineWithoutVAT
                   || taxTable.TaxLimitBase == TaxLimitBase::LineInclVAT;

            if (taxTable.RecId)
            {
                return checkFailed(strfmt("@SYS23836", TaxCalcPrin::Total));
            }
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    void delete()
    {
        throw error("@SYS23721");
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    void initValue()
    {
        // <GIN>
        #ISOCountryRegionCodes
        // </GIN>
    
        super();
        this.JournalInclTax = NoYes::Yes;
    
        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
            && this.ServiceTax_IN)
        {
            this.updateTaxRecoverable_IN();
        }
        // </GIN>
        // <GMY>
        if (TaxGSTFeatureChecker_MY::isCountryRegionMY())
        {
            this.DefaultInvoiceType_MY = InvoiceType_MY::GST;
        }
        // </GMY>
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    void  insert()
    {
        if (TaxParameters::exist())
        {
            throw error("@SYS22108");
        }

        ttsbegin;

        super();

        this.updateCorrespondingParameters();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modified field value.
    /// </summary>
    /// <param name="_fieldName">
    /// The field name.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index.
    /// </param>
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        // <GIN>
        #ISOCountryRegionCodes
        // </GIN>

        super(_fieldName, _arrayIndex);

        // <GIN>
        switch (_fieldName)
        {
            case fieldStr(TaxParameters, CheckIntersection):
                if (this.CheckIntersection == CheckTaxGroups::None)
                {
                    this.CheckSalesTaxTransaction = NoYes::No;
                }
                break;

            case fieldStr(TaxParameters, Customs_IN):
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                {
                    if (this.Customs_IN)
                    {
                        TaxTable::insertTaxAccountGroup_IN();
                    }
                    else
                    {
                        this.EximIncentiveSchemes_IN = NoYes::No;
                    }
                }
                break;

            case fieldStr(TaxParameters, ServiceTax_IN):
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
                    && this.ServiceTax_IN)
                {
                    TaxTable::insertTaxAccountGroup_IN();
                }
                break;

            case fieldStr(TaxParameters, Excise_IN):
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
                    && this.Excise_IN)
                {
                    TaxTable::insertTaxAccountGroup_IN();
                }
                break;

            case fieldStr(TaxParameters, SalesTax_IN):
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
                    && this.SalesTax_IN)
                {
                    TaxTable::insertTaxAccountGroup_IN();
                }
                break;

            case fieldStr(TaxParameters, vat_in):
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
                    && this.vat_in)
                {
                    TaxTable::insertTaxAccountGroup_IN();
                }
                break;

            case fieldStr(TaxParameters, ServiceTaxACBasis_IN):
            case fieldStr(TaxParameters, ServiceTax_IN):
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
                    && this.ServiceTax_IN)
                {
                    this.updateTaxRecoverable_IN();
                }
                break;

            case fieldStr(TaxParameters, ReportUseVatDueDate_W):
                if (this.ReportUseVatDueDate_W)
                {
                    GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceEEU00041, funcName());
                }
                break;

            case fieldStr(TaxParameters, TaxCurConvPath):
                if (Box::okCancel("@TaxConversionRoutine:TaxCurrencyConvChangeWarningV2", DialogButton::Cancel) == DialogButton::Cancel)
                {
                    this.TaxCurConvPath = this.orig().TaxCurConvPath;
                }
                break;

            case fieldStr(TaxParameters, BankExchRate_W):
                if (FeatureStateProvider::isFeatureEnabled(TaxSpecificExchangeRateFeature::instance())
                    && !SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN, #isoBR]))
                {
                    TaxEnableTaxExchRateTypeInfoHelper infoHelper = new TaxEnableTaxExchRateTypeInfoHelper();
                    if ((this.BankExchRate_W && infoHelper.alertBeforeEnableTaxExchRateType() == DialogButton::Cancel)
                        || (!this.BankExchRate_W && infoHelper.alertBeforeDisableTaxExchRateType() == DialogButton::Cancel))
                    {
                        this.BankExchRate_W = this.orig().BankExchRate_W;
                    }
                    else
                    {
                        infoHelper.showActionRequiredAfterSwitchParameter();
                    }

                    this.update();
                }
                break;

            case fieldStr(TaxParameters, UseCommonSAFTReport):
                str text = this.UseCommonSAFTReport
                    ? strFmt(
                        "@StandardAuditFile_SAFT_W:SAFTGeneralElectronicReportFeatureValiationLabel3",
                        "@StandardAuditFile_SAFT_W:StandardAuditFileForTax",
                        SAFTERHelper_W::sAFTFormatName_NO())
                    : strFmt(
                        "@StandardAuditFile_SAFT_W:SAFTGeneralElectronicReportFeatureValiationLabel4",
                        "@StandardAuditFile_SAFT_W:StandardAuditFileForTax", SAFTERHelper_W::sAFTFormatName_NO(),
                        fieldPName(TaxParameters, SAFTERFormatMapping_W));

                if (Box::yesNo(text, DialogButton::Yes) == DialogButton::Yes)
                {
                    this.SAFTERFormatMapping_W = 0;
                }
                else
                {
                    this.UseCommonSAFTReport = this.orig().UseCommonSAFTReport;
                }
                break;

            default:
                break;
        }
        // </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxGroupName</Name>
				<Source><![CDATA[
    display Name       taxGroupName()
    {
        return TaxGroupHeading::find(this.TaxGroup).TaxGroupName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxItemGroupName</Name>
				<Source><![CDATA[
    display Name       taxItemGroupName()
    {
        return TaxItemGroupHeading::find(this.TaxItemGroup).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    void update()
    {
        // <GMY>
        boolean invoiceFormatChanged;
        boolean isCountryRegionMY = TaxGSTFeatureChecker_MY::isCountryRegionMY();
        // </GMY>
    
        ttsbegin;
    
        // <GMY>
        if (isCountryRegionMY)
        {
            invoiceFormatChanged = this.GSTInvoiceFormat_MY != this.orig().GSTInvoiceFormat_MY;
        }
        // </GMY>
    
        super();
        this.updateCorrespondingParameters();

        if (!this.TaxReportFormatMappingID_UK)
        {
            TaxAuthorityAddress taxAuthority;
            update_recordset taxAuthority
                setting UseDefaultLayout = NoYes::No;
        }

        flush TaxParameters;
    
        // <GMY>
        if (isCountryRegionMY && invoiceFormatChanged)
        {
            PrintMgmtReportFormat::populate();
        }
        // </GMY>

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCorrespondingParameters</Name>
				<Source><![CDATA[
    private void updateCorrespondingParameters()
    {
        CustParameters  custParameters;
        VendParameters  vendParameters;
        ;

        ttsbegin;

        if (this.TaxLessCashDisc)
        {
            select forupdate custParameters;
            custParameters.CashDiscVAT = NoYes::No;
            custParameters.write();

            select forupdate vendParameters;
            vendParameters.CashDiscVAT = NoYes::No;
            vendParameters.write();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTaxRecoverable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates tax recoverable status.
    /// </summary>
    public void updateTaxRecoverable_IN()
    {
        if (this.ServiceTax_IN
            && (this.ServiceTaxACBasis_IN == ServiceTaxACBasis_IN::PointOfTaxationOnly))
        {
            this.TaxRecoverable_IN = NoYes::No;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    boolean validateDelete()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldId)
    {
        #ISOCountryRegionCodes

        boolean ret = super(_fieldId);

        if (ret)
        {
            switch (_fieldId)
            {
                case (fieldNum(TaxParameters, IncomingVATPayment_RU)) :
                    if (this.orig().IncomingVATPayment_RU != this.IncomingVATPayment_RU &&
                        PurchBookTable_RU::findByClosingDate(dateNull()))
                    {
                        ret = checkFailed("@GLS102549");
                    }
                    break;

                case (fieldNum(TaxParameters, TaxObligationCompany)) :
                case (fieldNum(TaxParameters, PurchTaxOnOperations)) :
                    if (this.PurchTaxOnOperations && this.TaxObligationCompany == TaxObligationCompany::Source)
                    {
                        ret = checkFailed("@SYS4003093");
                    }
                    break;

                case fieldNum(TaxParameters, TaxSpecifyLine):
                    if (this.TaxSpecifyLine == NoYes::No && CustParameters::find().MarkOpenInvoiceLine == NoYes::Yes)
                    {
                        ret = checkFailed(strFmt("@SYS4001121", "@SYS134066", "@SYS76213", "@SYS21908"));
                    }
                    break;

                case (fieldNum(TaxParameters, ReportUseVatDueDate_W)):
                    if (this.orig().ReportUseVatDueDate_W != this.ReportUseVatDueDate_W)
                    {
                        ret = this.validateReportUseVatDueDateChange_W();
                    }
                    break;

                case fieldNum(TaxParameters, SAFTERFormatMapping_W):
                    if (this.SAFTERFormatMapping_W && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoNO]))
                    {
                        if (this.UseCommonSAFTReport
                            && SAFTERHelper_W::isEqualOrChildSolution(
                                str2Guid(SAFTConstants_W::ERSAFTFormatSolutionGuidStr_NO),
                                ERSolutionTable::find(ERFormatMappingTable::find(this.SAFTERFormatMapping_W).Solution).GUID))
                        {
                            ret = checkFailed(strFmt(
                                "@StandardAuditFile_SAFT_W:SAFTGeneralElectronicReportFeatureValiationLabel1",
                                "@StandardAuditFile_SAFT_W:StandardAuditFileForTax",
                                SAFTERHelper_W::sAFTFormatName_NO()));
                        }
                        else if (!this.UseCommonSAFTReport
                            && !SAFTERHelper_W::isEqualOrChildSolution(
                                str2Guid(SAFTConstants_W::ERSAFTFormatSolutionGuidStr_NO),
                                ERSolutionTable::find(ERFormatMappingTable::find(this.SAFTERFormatMapping_W).Solution).GUID))
                        {
                            ret = checkFailed(strFmt(
                                "@StandardAuditFile_SAFT_W:SAFTGeneralElectronicReportFeatureValiationLabel2",
                                "@StandardAuditFile_SAFT_W:StandardAuditFileForTax",
                                SAFTERHelper_W::sAFTFormatName_NO(),
                                fieldPName(TaxParameters, SAFTERFormatMapping_W)));
                        }
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates field value.
    /// </summary>
    /// <param name="_fieldName">
    /// The field name.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index.
    /// </param>
    /// <returns>
    /// Returns true if the validation succeed.
    /// </returns>
    public boolean validateFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;
        // <GIN>
        TaxItemGroupHeading taxItemGroupHeading;
        ServiceTaxBasis_IN  serviceTaxBasis;
        // </GIN>

        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                // <GIN>
                case fieldstr(TaxParameters, ServiceTaxACBasis_IN) :
                if (this.ServiceTaxACBasis_IN != ServiceTaxACBasis_IN::Both)
                {
                    if (this.ServiceTaxACBasis_IN != this.orig().ServiceTaxACBasis_IN)// Excecute logic if its really needed only.
                    {
                        serviceTaxBasis = (this.ServiceTaxACBasis_IN == ServiceTaxACBasis_IN::PointOfTaxationOnly) ?
                                            ServiceTaxBasis_IN::CashBasis : ServiceTaxBasis_IN::POTBasis;
                        select firstFast RecId from taxItemGroupHeading
                            where taxItemGroupHeading.ServiceTaxBasis_IN == serviceTaxBasis;
                        if (taxItemGroupHeading.RecId != 0)
                        {
                            ret = checkFailed("@GLS222481");
                        }
                    }
                }
                break;
                // <GIN>
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite()
    {
        boolean ret;
        ;

        ret = super();

        ret = ret && this.checkDataConnection();

        ret = ret && this.validateCrossCompany(tableMethodStr(TaxParameters, checkDataConnection));

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canApplyCashDiscOnInvoice_ES</Name>
				<Source><![CDATA[
    public static NoYesId canApplyCashDiscOnInvoice_ES()
    {
        return TaxParameters::find().CashDiscOnInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkParameter_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks parameters status.
    /// </summary>
    /// <param name="_taxType">
    /// The tax type.
    /// </param>
    /// <param name="_throwError">
    /// If true, the check procedure will throw error.
    /// </param>
    /// <returns>
    /// Returns true if the parameters are valid.
    /// </returns>
    public static boolean checkParameter_IN(TaxType_IN _taxType, boolean _throwError = false)
    {
        FieldId whereFieldId;
        boolean ret = true;

        switch (_taxType)
        {
            case TaxType_IN::VAT:
                whereFieldId = fieldNum(TaxParameters,vat_in);
                break;

            case TaxType_IN::SalesTax:
                whereFieldId = fieldNum(TaxParameters,SalesTax_IN);
                break;

            case TaxType_IN::ServiceTax:
                whereFieldId = fieldNum(TaxParameters,ServiceTax_IN);
                break;

            case TaxType_IN::Excise:
                whereFieldId = fieldNum(TaxParameters,Excise_IN);
                break;

            case TaxType_IN::Customs:
                whereFieldId = fieldNum(TaxParameters,Customs_IN);
                break;

            default:
                break;
        }

        if (whereFieldId != 0
            && TaxParameters::find().(whereFieldId) == NoYes::No)
        {
            ret = false;
            if (_throwError)
            {
                throw error(strFmt("@GLS5131", _taxType));
            }
            else
            {
                error(strFmt("@GLS5131", _taxType));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkParameterForPosting_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks parameters status for posting.
    /// </summary>
    /// <param name="_taxType">
    /// The tax type.
    /// </param>
    /// <returns>
    /// Returns true if the parameters are valid.
    /// </returns>
    static boolean checkParameterForPosting_IN(TaxType_IN _taxType)
    {
        FieldId whereFieldId;
        boolean ret = true;
        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return false;
        }

        switch (_taxType)
        {
            case TaxType_IN::VAT:
                whereFieldId = fieldNum(TaxParameters, vat_in);
                break;

            case TaxType_IN::SalesTax:
                whereFieldId = fieldNum(TaxParameters, SalesTax_IN);
                break;

            case TaxType_IN::ServiceTax:
                whereFieldId = fieldNum(TaxParameters, ServiceTax_IN);
                break;

            case TaxType_IN::Excise:
                whereFieldId = fieldNum(TaxParameters, Excise_IN);
                break;

            case TaxType_IN::Customs:
                whereFieldId = fieldNum(TaxParameters, Customs_IN);
                break;

            case TaxType_IN::None:
                return false;

            default:
                break;
        }

        if (TaxParameters::find().(whereFieldId) == NoYes::No)
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTaxParameters_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checking the ISO code associated with the primary address of the Legal Entity matches and Check to ensure that any of VAT, Service, Excise,Customs or Sales tax is checked.
    /// </summary>
    /// <returns>
    /// true if any one of the taxes is selected with Country region code.
    /// </returns>
    public static boolean checkTaxParameters_IN()
    {
        TaxParameters   taxParameters;
        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return false;
        }

        else
        {
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTaxParametersExcludingCustoms_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check to ensure that any of VAT, Service, Excise or Sales tax is checked. Check for
    /// Customs tax is not made
    /// </summary>
    /// <returns>
    /// true if any one of the taxes is selected
    /// </returns>

    public static boolean checkTaxParametersExcludingCustoms_IN()
    {
        TaxParameters       taxParameters;
        boolean             ret = false;

        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return false;
        }
        taxParameters = TaxParameters::find();

        if (taxParameters.vat_in
            || taxParameters.SalesTax_IN
            || taxParameters.Excise_IN
            || taxParameters.ServiceTax_IN)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkVatExciseParameters_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks vat excise parameters status.
    /// </summary>
    /// <returns>
    /// Returns true if the vat excise parameters are valid.
    /// </returns>
    public static boolean checkVatExciseParameters_IN()
    {
        TaxParameters   taxParameters;
        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return false;
        }

        taxParameters = TaxParameters::find();
        return taxParameters
                && (taxParameters.Excise_IN
                    || taxParameters.vat_in);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist()
    {
        return (select taxParameters).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existTaxParameter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the factor for Czech tax reporting is set.
    /// </summary>
    /// <returns>
    /// true if the factor for Czech tax reporting is set; otherwise, false.
    /// </returns>
    public static boolean existTaxParameter()
    {
        TaxParameters taxParam;

        select firstonly RecId, TaxReportFactor_CZ from taxParam;
        return (taxParam.RecId && taxParam.TaxReportFactor_CZ != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static TaxParameters find(boolean _forUpdate = false)
    {
        TaxParameters parameter;
    
        // Return empty record if the configuration key for the table is disabled.
        if (parameter.isTmp())
        {
            return parameter;
        }
    
        parameter.selectForUpdate(_forUpdate);
    
        select firstonly parameter
            index key
            where parameter.Key == 0;
    
        if (!parameter && !parameter.isTmp())
        {
           Company::createParameter(parameter);
        }
    
        return parameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBankExchRateEnabled_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if Bank Exchange rate feature is enabled.
    /// </summary>
    /// <returns>
    /// true if Bank Exchange rate feature is enabled, false otherwise.
    /// </returns>
    public static boolean isBankExchRateEnabled_W()
    {
        #ISOCountryRegionCodes

        return SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoCZ, #isoHU, #isoPL ])
            && TaxParameters::find().BankExchRate_W;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustomsEnable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checking the ISO code associated with the primary address of the Legal Entity matches and Check to ensure that any of Customs is checked.
    /// </summary>
    /// <param name="_taxType">
    ///    The indian tax type on taxcode to determine if the taxcode does match; optional.
    /// </param>
    /// <returns>
    /// true if Customs is selected with Country region code and the passed in taxtype does match.
    /// </returns>
    public static boolean isCustomsEnable_IN(TaxType_IN _taxType = TaxType_IN::Customs)
    {
        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return false;
        }
        return _taxType == TaxType_IN::Customs
                && TaxParameters::find().Customs_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isExciseEnable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checking the ISO code associated with the primary address of the Legal Entity matches and Check to ensure that any of Excise is checked.
    /// </summary>
    /// <param name="_taxType">
    ///    The indian tax type on taxcode to determine if the taxcode does match; optional.
    /// </param>
    /// <returns>
    /// true if Excise is selected with Country region code and the passed in taxtype does match.
    /// </returns>
    public static boolean isExciseEnable_IN(TaxType_IN _taxType = TaxType_IN::Excise)
    {
        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return false;
        }

        return _taxType == TaxType_IN::Excise
                && TaxParameters::find().Excise_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEximIncentiveSchemEnable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks the ISO code associated with the primary address of the Legal Entity matches and Check to ensure that any of EximIncentiveSchemes is checked.
    /// </summary>
    /// <returns>
    /// Returns true if EximIncentiveSchemes is selected with Country region code.
    /// </returns>
    public static boolean isEximIncentiveSchemEnable_IN()
    {
        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return false;
        }

        return TaxParameters::find().EximIncentiveSchemes_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSalesTaxEnable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checking the ISO code associated with the primary address of the Legal Entity matches and Check to ensure that India SalesTax is checked.
    /// </summary>
    /// <param name="_taxType">
    ///    The indian tax type on taxcode to determine if the taxcode does match; optional.
    /// </param>
    /// <returns>
    /// true if India SalesTax is selected with Country region code and the passed in taxtype does match.
    /// </returns>
    public static boolean isSalesTaxEnable_IN(TaxType_IN _taxType = TaxType_IN::SalesTax)
    {
        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return false;
        }

        return _taxType == TaxType_IN::SalesTax
                && TaxParameters::find().SalesTax_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isServiceTaxEnable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checking the ISO code associated with the primary address of the Legal Entity matches and Check to ensure that any of ServiceTax is checked.
    /// </summary>
    /// <param name="_taxType">
    ///    The indian tax type on taxcode to determine if the taxcode does match; optional.
    /// </param>
    /// <returns>
    /// true if ServiceTax is selected with Country region code and the passed in taxtype does match.
    /// </returns>
    public static boolean isServiceTaxEnable_IN(TaxType_IN _taxType = TaxType_IN::ServiceTax)
    {
        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return false;
        }

        return _taxType == TaxType_IN::ServiceTax
               && TaxParameters::find().ServiceTax_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isVATEnable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checking the ISO code associated with the primary address of the Legal Entity matches and Check to ensure that any of VAT is checked.
    /// </summary>
    /// <param name="_taxType">
    ///    The indian tax type on taxcode to determine if the taxcode does match; optional.
    /// </param>
    /// <returns>
    /// true if VAT is selected with Country region code and the passed in taxtype does match.
    /// </returns>
    public static boolean isVATEnable_IN(TaxType_IN _taxType = TaxType_IN::VAT)
    {
        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            return false;
        }

        return _taxType == TaxType_IN::VAT
                && TaxParameters::find().vat_in;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    public static NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::Tax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefChargeAsExpenseDocumentVoucher_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the number sequence reference object that is used for the EDT Charge as expense document voucher.
    /// </summary>
    /// <returns>
    /// Returns the number sequence reference object that is used for the EDT Charge as expense document voucher.
    /// </returns>
    /// <remarks>
    /// To retrieve the number sequence reference object that is used for the EDT Charge as expense document voucher.
    /// </remarks>

    static NumberSequenceReference numRefChargeAsExpenseDocumentVoucher_IN()
    {
        return NumberSeqReference::findReference(extendedTypeNum(ChargeAsExpenseDocumentVoucher_IN));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefIntervatId_BE</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefIntervatId_BE()
    {
        ;
        return NumberSeqReference::findReference(extendedtypenum(TaxIntervatID));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefTaxCustInvoiceXML_BE</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefTaxCustInvoiceXML_BE()
    {
        return NumberSeqReference::findReference(extendedtypenum(CustInvoiceXMLId_BE));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefTaxInvoicePurchId</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefTaxInvoicePurchId()
    {
        return NumberSeqReference::findReference(extendedtypenum(TaxInvoicePurchId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefTaxInvoiceSalesId</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefTaxInvoiceSalesId()
    {
        return NumberSeqReference::findReference(extendedtypenum(TaxInvoiceSalesId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefTaxReportingVoucher</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefTaxReportingVoucher()
    {
        return NumberSeqReference::findReference(extendedtypenum(TaxReportingVoucher));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefTaxReportingVoucherXML</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefTaxReportingVoucherXML()
    {
        return NumberSeqReference::findReference(extendedtypenum(TaxReportingVoucherXML));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefTaxSettoffDocumentVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the number sequence reference object that is used for the EDT Tax Settoff Document Voucher.
    /// </summary>
    /// <returns>
    /// Returns the number sequence reference object that is used for the EDT Tax Settoff Document Voucher.
    /// </returns>
    /// <remarks>
    /// To retrieve the number sequence reference object that is used for the EDT Tax Settoff Document Voucher.
    /// </remarks>

    static NumberSequenceReference numRefTaxSettoffDocumentVoucher()
    {
        return NumberSeqReference::findReference(extendedTypeNum(TaxSetoffDocumentVoucher_IN));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefTaxWithholdReportingVoucher</Name>
				<Source><![CDATA[
    public static NumberSequenceReference numRefTaxWithholdReportingVoucher()
    {
        return NumberSeqReference::findReference(extendedtypenum(TaxWithholdReportingVoucher));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefTaxYearlyComId_IT</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefTaxYearlyComId_IT()
    {
        return NumberSeqReference::findReference(extendedtypenum(TaxYearlyComId_IT));
    }

]]></Source>
			</Method>
			<Method>
				<Name>editDefaultInvoiceType_MY</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edits the default invoice type.
    /// </summary>
    /// <param name="_set">
    /// Set to true if the invoice type is set; otherwise, set to false.
    /// </param>
    /// <param name="_newInvoiceTypeText_MY">
    /// The new invoice type when <paramref name="set" /> is true.
    /// </param>
    /// <returns>
    /// The default invoice type.
    /// </returns>
    public edit InvoiceTypeText_MY editDefaultInvoiceType_MY(boolean _set, InvoiceTypeText_MY _newInvoiceTypeText_MY)
    {
        InvoiceType_MY      newInvoiceType_MY;
    
        if (_set)
        {
            newInvoiceType_MY = str2enum(newInvoiceType_MY, _newInvoiceTypeText_MY);
            // This default invoice type parameter is for AR and project.
            // So use any document table from these 2 parts to build the TaxGSTDocInvoiceType_MY instance is ok.
            if (TaxGSTDocInvoiceType_MY::construct(tableNum(SalesTable_W)).validate(newInvoiceType_MY))
            {
                this.DefaultInvoiceType_MY = newInvoiceType_MY;
            }
        }
    
        return enum2str(this.DefaultInvoiceType_MY);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAdvancedSalesTaxPaymentEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checking the ISO code associated with the primary address of the Legal Entity matches and Check to ensure that if Advanced sales tax payment is enabled.
    /// </summary>
    /// <returns>
    /// true if Advanced sales tax payment is selected with Country region code.
    /// </returns>
    // <GIN>
    public static boolean isAdvancedSalesTaxPaymentEnabled()
    {
        #ISOCountryRegionCodes

        if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]) && !TaxSolutionScopeIntegrationUtil::isCompanyEnabled())
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportUseVatDueDate_W</Name>
				<Source><![CDATA[
    // </GIN>

    /// <summary>
    /// Determines if "Date of VAT register" option is enabled.
    /// </summary>
    /// <returns>
    /// true if "Date of VAT register" option is enabled; otherwise, false.
    /// </returns>
    public static boolean reportUseVatDueDate_W()
    {
        #ISOCountryRegionCodes

        return TaxParameters::find().ReportUseVatDueDate_W
            && (   SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU, #isoPL, #isoCZ, #isoHU, #isoEE, #isoLT, #isoLV])
                || (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT]) && VatDueDateFeature::isEnabled()))
            || TaxParameters::reportUseVATDueDateByFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportUseVATDueDateByFeature</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if "Date of VAT register" option is enabled when feature "Sales tax settlement and reporting by date of VAT register" is enabled.
    /// </summary>
    /// <returns>
    /// true if "Date of VAT register" option is enabled; otherwise, false.
    /// </returns>
    public static boolean reportUseVATDueDateByFeature()
    {
        return TaxParameters::find().ReportUseVatDueDate_W
            && VatDueDateFeature::isEnabled()
            && FeatureStateProvider::isFeatureEnabled(TaxReportByVATDueDateFeature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEasternEuropeOrVatDueDateFeatureEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the current legal entity is in Eastern Europe or "Date of VAT register" feature is enabled.
    /// </summary>
    /// <returns>true if the current legal entity is in Eastern Europe or "Date of VAT register" feature is enabled; otherwise, false.</returns>
    public static boolean isEasternEuropeOrVatDueDateFeatureEnabled()
    {
        #EECountryRegionCodes
        return SysCountryRegionCode::isLegalEntityInCountryRegion(#easternEuropeAll) || VatDueDateFeature::isEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateReportUseVatDueDateChange_W</Name>
				<Source><![CDATA[
    private boolean validateReportUseVatDueDateChange_W()
    {
        #ISOCountryRegionCodes
        boolean ret = true;

        if (MultipleTaxIdReportingHelper::isLegalEntityOrAddressInCountryRegion([#isoIT], MultipleTaxIdScope::VATDeclaration)
            || TaxParameters::reportUseVATDueDateByFeature())
        {
            TaxTrans taxTrans;
            TaxTrans_W taxTrans_W;
            TaxReportPeriod taxReportPeriodTransDate, taxReportPeriodVatDueDate;

            if (this.ReportUseVatDueDate_W == NoYes::Yes)
            {
                select firstonly TaxPeriod, RecId from taxTrans
                join VatDueDate_W from taxTrans_W
                    where taxTrans_W.TaxTrans == taxTrans.RecId
                exists join taxReportPeriodVatDueDate
                    where taxReportPeriodVatDueDate.TaxPeriod == taxTrans.TaxPeriod
                        && taxReportPeriodVatDueDate.FromDate <= taxTrans_W.VatDueDate_W
                        && taxReportPeriodVatDueDate.ToDate >= taxTrans_W.VatDueDate_W
                        && taxReportPeriodVatDueDate.Closed == NoYes::Yes;

                if (taxTrans.RecId)
                {
                    ret = checkFailed(strFmt("@VatDueDate:ReportUseVatDueDateSwitchOnWarning", 
                                        fieldPName(TaxParameters, ReportUseVatDueDate_W), 
                                        fieldPName(TaxTrans_W, VatDueDate_W), 
                                        taxTrans.TaxPeriod));
                }
            }
            else if (!TaxParameters::reportUseVATDueDateByFeature())
            {
                select firstonly TaxPeriod, RecId from taxTrans
                join VatDueDate_W from taxTrans_W
                    where taxTrans_W.TaxTrans == taxTrans.RecId
                exists join taxReportPeriodTransDate
                    where taxReportPeriodTransDate.TaxPeriod == taxTrans.TaxPeriod
                        && taxReportPeriodTransDate.FromDate <= taxTrans.TransDate
                        && taxReportPeriodTransDate.ToDate >= taxTrans.TransDate
                        && taxReportPeriodTransDate.Closed == NoYes::No
                exists join taxReportPeriodVatDueDate
                    where taxReportPeriodVatDueDate.TaxPeriod == taxTrans.TaxPeriod
                        && taxReportPeriodVatDueDate.FromDate <= taxTrans_W.VatDueDate_W
                        && taxReportPeriodVatDueDate.ToDate >= taxTrans_W.VatDueDate_W
                        && taxReportPeriodVatDueDate.Closed == NoYes::Yes;

                if (taxTrans.RecId)
                {
                    ret = checkFailed(strFmt("@VatDueDate:ReportUseVatDueDateSwitchOffWarning", 
                                        fieldPName(TaxParameters, ReportUseVatDueDate_W),
                                        fieldPName(TaxTrans, TransDate),
                                        taxTrans.TaxPeriod,
                                        fieldPName(TaxTrans_W, VatDueDate_W)));
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxCalculationRetryNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the retry number (multiple) when tax calculation aquire lock.
    /// </summary>
    /// <returns>The retry number.</returns>
    public int getTaxCalculationRetryNumber()
    {
        return this.TaxCalculationRetryNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxObligationDestination</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the tax obligation company.
    /// </summary>
    /// <returns>True, if tax obligation is with destination; otherwise, false.</returns>
    public static boolean isTaxObligationDestination()
    {
        TaxParameters taxParamaters;
        boolean ret = false;

        select TaxObligationCompany from taxParamaters;

        if (taxParamaters.TaxObligationCompany == TaxObligationCompany::Destination)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCrossCompany</Name>
				<Source><![CDATA[
    private boolean validateCrossCompany(str _validateMethod)
    {
        switch (_validateMethod)
        {
            case tableMethodStr(TaxParameters, checkDataConnection):
                if (!TaxParametersCrossCompanyTaxTableCheckFlight::instance().isEnabled())
                {
                    return true;
                }
                break;

            default:
                return true;
        }

        SysDataSharingPolicy policy = SysDataSharingPolicy::findSharingPolicyByCompanyAndTable(curExt(), tableId2name(this.TableId));
        if (policy.RecId && policy.IsEnabled)
        {
            Query query = SysDataSharingCrossCompanyValidatorQueryBuilder::buildQuery(this, policy.RecId);
            QueryRun queryRun = new QueryRun(query);

            while (queryRun.Next())
            {
                TaxParameters taxParameters = queryRun.get(this.TableId);
                DataAreaId dataAreaId = taxParameters.DataAreaId;
                if (taxParameters && dataAreaId)
                {
                    changecompany(dataAreaId)
                    {
                        TaxParameters currentTaxParameters = TaxParameters::find();
                        if (currentTaxParameters.RecId)
                        {
                            buf2Buf(this, currentTaxParameters);
                            switch (_validateMethod)
                            {
                                case tableMethodStr(TaxParameters, checkDataConnection):
                                    if (!currentTaxParameters.checkDataConnection())
                                    {
                                        return false;
                                    }
                                    break;
                            }
                        }
                    }
                }
            }
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<DeveloperDocumentation>@SYS126035</DeveloperDocumentation>
	<Label>@SYS24231</Label>
	<TableGroup>Parameter</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>key</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Tax</Modules>
	<PrimaryIndex>key</PrimaryIndex>
	<ReplacementKey>key</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchTaxOnOperations</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalculatePrinciple</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalInclTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxSpecifyLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AdvancedSalesTaxPayment_IN</Name>
			<Label>@SYS4005580</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ApplyTaxes_IN</Name>
			<Label>@GLS5130</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VAT_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesTax_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Excise_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceTax_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Customs_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CashDiscount</Name>
			<Label>@SYS4376</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReverseOnCashDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxLessCashDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDiscOnInvoice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Excise_IN</Name>
			<Label>@GLS5005</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendorCalculationDateType_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerCalculationDateType_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Exim_IN</Name>
			<Label>@GLS61428</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EximIncentiveSchemes_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@sys2952</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalculatePrinciple</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalInclTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchTaxOnOperations</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxCalculationDateType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConditionalTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckIntersection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MandatoryTaxDirection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidateTaxCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRAutoTaxSearch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxSpecPosting_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncomingVATPayment_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxObligationCompany</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Invoice</Name>
			<Label>@SYS12128</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxSpecifyLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxOnOverpayment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RestoredVAT_RU</Name>
			<Label>@GLS113538</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RestoredVATGainCalcMethod_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RestoredVATCalcMethod_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ServiceTax_IN</Name>
			<Label>@GLS5006</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxRecoverable_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceTaxACBasis_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Settlement_RU</Name>
			<Label>@GLS103091</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IncomingVATPayment_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRateDiffDocType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReverseSettlementDatePrinciple_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SpecialReport</Name>
			<Label>@SYS10223</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReportAdjustment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportUseVatDueDate_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxBookSection</Name>
			<Label>@SYS79299</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllowDuplicates</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxBranch</Name>
			<Label>@SYS4082514</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxBranchEnabled</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxReport_CZ</Name>
			<Label>@GLS114633</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxpayerStatus_CZ</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxpayerType_CZ</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PersonTitle_CZ</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NaturalPersonFirstName_CZ</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NaturalPersonLastName_CZ</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MainEconomicActivityCode_CZ</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxReportFactor_CZ</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MainEconomicActivityCode_LT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeductionPercent_LT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxReport_HU</Name>
			<Label>@GLS114633</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemizedVATStatement_HU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemizedVATStatementLimit_HU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxReporting_JP</Name>
			<Label>@GLS60037</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxReport_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateForSecondTaxRaise_JP</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VATBook_ES</Name>
			<Label>@SYS91776</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CashAccountingRegime_ES</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VATExchRate_W</Name>
			<Label>@SYS22173</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesTaxReceivableExchangeRateType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesTaxPayableExchangeRateType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankExchRate_W</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GSTAuditFile_MY</Name>
			<Label>@SYP4860655</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GSTGAFVersion_MY</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GSTAuditFileFormatMapping_MY</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GSTInvoice_MY</Name>
			<Label>@SYP4860622</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>editDefaultInvoiceType_MY</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GSTInvoiceFormat_MY</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseSelfBilledInvoice_MY</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GSTSummary_MY</Name>
			<Label>@SYP4860808</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GSTExemptPrintCode_MY</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncludeDelimiterInGSTSummary_MY</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GSTSummaryDelimiter_MY</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncludeTaxCodeInGSTSummary_MY</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncludeTaxValueInGSTSummary_MY</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BAS_AU</Name>
			<Label>@SYS63092</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BASFormatMapping_AU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DomesticTax_IT</Name>
			<Label>@TaxLocalization:SelectOptionsForTheDomesticTaxReport</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DomesticTaxCancellationERFormatMapping_IT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DomesticTaxAggregatedERFormatMapping_IT</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DomesticTaxAnalyticERFormatMapping_IT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxYearlyCom_IT</Name>
			<Label>@TaxLocalization:SelectOptionsForTheYearlyTaxCommunicationReport</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxYearlyComERFormatMapping_IT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>QuarterlyVATCom_IT</Name>
			<Label>@QuarterlyVATCommunication:SelectOptionsForTheQuarterlyVATCommunicationReport</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>QuarterlyVATComERFormatMapping_IT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SAFT_ElectronicReporting_W</Name>
			<Label>@StandardAuditFile_SAFT_W:ElectronicReporting</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SAFTAccountingBooksERFormatMapping_PL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SAFTBankStatementERFormatMapping_PL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SAFTInventoryERFormatMapping_PL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SAFTVATSalesPurchERFormatMapping_PL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SAFTVATInvoicesERFormatMapping_PL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SAFTERFormatMapping_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseCommonSAFTReport</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FactureAccountingJournal</Name>
			<Label>@SYS4081815</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FactureJournalFormatMappingID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ElectronicReporting_UK</Name>
			<Label>@ElectronicReporting:ElectronicReporting</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxReportFormatMappingID_UK</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>IndirectTaxDeclJournal_RU</Name>
			<Label>@SYP4860018</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IndirectTaxERFormatMapping_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxCurConvPath</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxCurConvPath</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowDuplicates</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<FeatureClass>TaxBookToggle</FeatureClass>
			<Label>@SYS79215</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankExchRate_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@GLS110038</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CalculatePrinciple</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxCalcPrin</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CashAccountingRegime_ES</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxReportCashAccountingRegime_ES</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CashDiscOnInvoice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>ES</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS99045</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckIntersection</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CheckTaxGroups</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ConditionalTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS74689</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustomerCalculationDateType_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CustomerCalculationDateType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Customs_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS5007</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DeductionPercent_LT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DeductionPercent_LT</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExchRateDiffDocType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CustVendExchRateDiffDocType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Excise_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS5005</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EximIncentiveSchemes_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS61426</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IncomingVATPayment_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<Label>@GLS102547</Label>
			<SysSharingType>Never</SysSharingType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemizedVATStatement_HU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>HU</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS4002084</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ItemizedVATStatementLimit_HU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>HU</CountryRegionCodes>
			<ExtendedDataType>ItemizedVATStatementLimit_HU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JournalInclTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerJournalInclTax</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MainEconomicActivityCode_CZ</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>CZ</CountryRegionCodes>
			<ExtendedDataType>MainEconomicActivityCode_CZ</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MainEconomicActivityCode_LT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MainEconomicActivityCode_LT</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MandatoryTaxDirection</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MandatoryTaxDirection</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MCRAutoTaxSearch</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@MCR10419</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NaturalPersonFirstName_CZ</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>CZ</CountryRegionCodes>
			<ExtendedDataType>NaturalPersonFirstName_CZ</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NaturalPersonLastName_CZ</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>CZ</CountryRegionCodes>
			<ExtendedDataType>NaturalPersonLastName_CZ</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PersonTitle_CZ</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>CZ</CountryRegionCodes>
			<ExtendedDataType>PersonTitle</ExtendedDataType>
			<Label>@GLS114617</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PurchTaxOnOperations</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchTaxOnOperations</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReportAdjustment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
			<Label>@SYS65240</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReportUseVatDueDate_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerBasicVatDueDate_W</ConfigurationKey>
			<FeatureClass>TaxParametersReportUseVATDueDateToggle</FeatureClass>
			<HelpText>@VatDueDate:ReportUseVatDueDateHelpText</HelpText>
			<Label>@GLS109142</Label>
			<SysSharingType>Never</SysSharingType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RestoredVATCalcMethod_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RestoredVATCalcMethod_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RestoredVATGainCalcMethod_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RestoredVATGainCalcMethod_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReverseOnCashDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxReverseOnCashDisc</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReverseSettlementDatePrinciple_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>CZ</CountryRegionCodes>
			<Label>@GLS112099</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SalesTax_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS5878</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesTaxPayableExchangeRateType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExchangeRateTypeRecId</ExtendedDataType>
			<Label>@GLS221226</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesTaxReceivableExchangeRateType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExchangeRateTypeRecId</ExtendedDataType>
			<Label>@GLS221228</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ServiceTax_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS5006</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ServiceTaxACBasis_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ServiceTaxACBasis_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxBranchEnabled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxBranchEnabled</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxCalculationDateType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxCalculationDateType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxLessCashDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
			<Label>@SYS54791</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxObligationCompany</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxObligationCompany</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxOnOverpayment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS60040</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxpayerStatus_CZ</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>CZ</CountryRegionCodes>
			<EnumType>TaxPayerStatus_CZ</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxpayerType_CZ</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>CZ</CountryRegionCodes>
			<EnumType>TaxpayerType_CZ</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxRecoverable_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS5612</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxReport_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS60238</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxReportFactor_CZ</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>CZ</CountryRegionCodes>
			<ExtendedDataType>TaxReportFactor_CZ</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxSpecifyLine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxSpecifyLine</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxSpecPosting_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxSpecPosting_RU</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ValidateTaxCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS113285</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VAT_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS5004</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VendorCalculationDateType_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>VendorCalculationDateType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DefaultInvoiceType_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>InvoiceType_MY</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GSTExemptPrintCode_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>MY</CountryRegionCodes>
			<ExtendedDataType>TaxWriteCode</ExtendedDataType>
			<Label>@SYP4860817</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GSTGAFVersion_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGSTGAFVersion_MY</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>GSTInvoiceFormat_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxGSTInvoiceFormat_MY</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GSTSummaryDelimiter_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGSTSummaryDelimiter_MY</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IncludeDelimiterInGSTSummary_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGSTIncludeDelimiterInGSTSummary_MY</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IncludeTaxCodeInGSTSummary_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGSTIncludeTaxCodeInGSTSummary_MY</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IncludeTaxValueInGSTSummary_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGSTIncludeTaxValueInGSTSummary_MY</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseSelfBilledInvoice_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGSTUseSelfBilledInvoice_MY</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BASFormatMapping_AU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>AU</CountryRegionCodes>
			<ExtendedDataType>ERFormatMappingID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>GSTAuditFileFormatMapping_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>MY</CountryRegionCodes>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DateForSecondTaxRaise_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@Tax:DateForSecondTaxRaise</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DomesticTaxCancellationERFormatMapping_IT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IT</CountryRegionCodes>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
			<Label>@TaxLocalization:CancellationFormat</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DomesticTaxAggregatedERFormatMapping_IT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IT</CountryRegionCodes>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
			<Label>@TaxLocalization:AggregatedFormat</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DomesticTaxAnalyticERFormatMapping_IT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IT</CountryRegionCodes>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
			<Label>@TaxLocalization:AnalyticFormat</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxYearlyComERFormatMapping_IT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
			<FeatureClass>TaxBookToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>QuarterlyVATComERFormatMapping_IT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IT</CountryRegionCodes>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SAFTAccountingBooksERFormatMapping_PL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>PL</CountryRegionCodes>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
			<Label>@StandardAuditFile_SAFT_W:SAFAccountingBooks</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SAFTBankStatementERFormatMapping_PL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>PL</CountryRegionCodes>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
			<Label>@StandardAuditFile_SAFT_W:SAFBankStatements</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SAFTInventoryERFormatMapping_PL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>PL</CountryRegionCodes>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
			<Label>@StandardAuditFile_SAFT_W:SAFInventory</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SAFTVATSalesPurchERFormatMapping_PL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>PL</CountryRegionCodes>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
			<Label>@StandardAuditFile_SAFT_W:SAFVATSaleAndPurchaseRegisters</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SAFTVATInvoicesERFormatMapping_PL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>PL</CountryRegionCodes>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
			<Label>@StandardAuditFile_SAFT_W:SAFVATInvoices</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AdvancedSalesTaxPayment_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@SYS4005616</HelpText>
			<Label>@SYS4005580</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FactureJournalFormatMappingID</Name>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>ERFormatMappingID</ExtendedDataType>
			<Label>@AccountsReceivable:FormatMapping</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SAFTERFormatMapping_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
			<Label>@StandardAuditFile_SAFT_W:StandardAuditFileForTax</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxReportFormatMappingID_UK</Name>
			<ExtendedDataType>ERFormatMappingID</ExtendedDataType>
			<FeatureClass>VATDeclarationSetupToggle</FeatureClass>
			<HelpText>@VATDeclaration_UK:VATStatementFormatMappingHelpText</HelpText>
			<Label>@VATDeclaration_UK:VATStatementFormatMapping</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>IndirectTaxERFormatMapping_RU</Name>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>ERFormatMappingID</ExtendedDataType>
			<HelpText>@SYP4860069</HelpText>
			<Label>@ElectronicReporting:FormatMapping</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DelayTaxCalculation</Name>
			<HelpText>@TaxDelayTaxCalculation:DelayTaxCalculationDescription</HelpText>
			<Label>@TaxDelayTaxCalculation:DelayTaxCalculation</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxCurConvPath</Name>
			<HelpText>@TaxConversionRoutine:SalesTaxConvPathHelpV2</HelpText>
			<Label>@TaxConversionRoutine:SalesTaxConvPath</Label>
			<EnumType>TaxCurConvPath</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TaxCalculationRetryNumber</Name>
			<HelpText>@TaxCalculationConcurrencyCheck:TaxCalculationRetryNumberHelpText</HelpText>
			<Label>@TaxCalculationConcurrencyCheck:TaxCalculationRetryNumberLabel</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckSalesTaxTransaction</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<HelpText>@Tax:TaxParameter_CheckSalesTaxTransaction_Description</HelpText>
			<Label>@Tax:TaxParameter_CheckSalesTaxTransaction</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxReportCombineVoucherForGainLoss</Name>
			<HelpText>@TaxReport:TaxReportCombineVoucherForGainLossHelpText</HelpText>
			<Label>@TaxReport:TaxReportCombineVoucherForGainLossLabel</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UseCommonSAFTReport</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>NO</CountryRegionCodes>
			<ExtendedDataType>UseCommonSAFTReport</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxReportPopulateDimensionForGainLoss</Name>
			<HelpText>@TaxReport:TaxReportPopulateDimensionForGainLossHelpText</HelpText>
			<Label>@TaxReport:TaxReportPopulateDimensionForGainLossLabel</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>key</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTaxPayableExchangeRateType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ExchangeRateType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesTaxPayableExchangeRateType</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesTaxPayableExchangeRateType</Name>
					<Field>SalesTaxPayableExchangeRateType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTaxReceivableExchangeRateType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ExchangeRateType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesTaxReceivableExchangeRateType</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesTaxReceivableExchangeRateType</Name>
					<Field>SalesTaxReceivableExchangeRateType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroup</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>TaxGroup</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroup</Name>
					<SourceEDT>TaxItemGroup</SourceEDT>
					<Field>TaxItemGroup</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxItemGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BASFormatMapping_AU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BASFormatMapping_AU</Name>
					<Field>BASFormatMapping_AU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>GSTAuditFileFormatMapping_MY</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GSTAuditFileFormatMapping_MY</Name>
					<Field>GSTAuditFileFormatMapping_MY</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DomesticTaxCancellationERFormatMapping_IT</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DomesticTaxCancellationERFormatMapping_IT</Name>
					<Field>DomesticTaxCancellationERFormatMapping_IT</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DomesticTaxAggregatedERFormatMapping_IT</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DomesticTaxAggregatedERFormatMapping_IT</Name>
					<Field>DomesticTaxAggregatedERFormatMapping_IT</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DomesticTaxAnalyticERFormatMapping_IT</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DomesticTaxAnalyticERFormatMapping_IT</Name>
					<Field>DomesticTaxAnalyticERFormatMapping_IT</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxYearlyComERFormatMapping_IT</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxYearlyComERFormatMapping_IT</Name>
					<Field>TaxYearlyComERFormatMapping_IT</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>QuarterlyVATComERFormatMapping_IT</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>QuarterlyVATComERFormatMapping_IT</Name>
					<Field>QuarterlyVATComERFormatMapping_IT</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SAFTAccountingBooksERFormatMapping_PL</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SAFTAccountingBooksERFormatMapping_PL</Name>
					<Field>SAFTAccountingBooksERFormatMapping_PL</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SAFTBankStatementERFormatMapping_PL</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SAFTBankStatementERFormatMapping_PL</Name>
					<Field>SAFTBankStatementERFormatMapping_PL</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SAFTInventoryERFormatMapping_PL</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SAFTInventoryERFormatMapping_PL</Name>
					<Field>SAFTInventoryERFormatMapping_PL</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SAFTVATSalesPurchERFormatMapping_PL</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SAFTVATSalesPurchERFormatMapping_PL</Name>
					<Field>SAFTVATSalesPurchERFormatMapping_PL</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SAFTVATInvoicesERFormatMapping_PL</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SAFTVATInvoicesERFormatMapping_PL</Name>
					<Field>SAFTVATInvoicesERFormatMapping_PL</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ERFormatMappingTable</Name>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FactureJournalFormatMappingID</Name>
					<Field>FactureJournalFormatMappingID</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxReportFormatMapping_UK</Name>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxReportFormatMappingID_UK</Name>
					<Field>TaxReportFormatMappingID_UK</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IndirectTaxERFormatMapping_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>IndirectTaxERFormatMapping_RU</Name>
					<Field>IndirectTaxERFormatMapping_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SAFTERFormatMapping_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SAFTERFormatMapping_W</Name>
					<Field>SAFTERFormatMapping_W</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>