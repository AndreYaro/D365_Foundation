<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailOnlineChannelTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailOnlineChannelTable extends RetailChannelTable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        boolean ret = true;
        DialogButton dialogButton;

        //display Box to confirm delete Online store or Online marketplace.
        if (this.ChannelType == RetailChannelType::OnlineStore || this.ChannelType == RetailChannelType::OnlineMarketplace)
        {
            dialogButton = Box::yesNo("@RET260570", DialogButton::No, "@SYS24848");
            ret = dialogButton == DialogButton::Yes;
        }

        if (ret)
        {
            ttsBegin;

            super();

            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayFormMenuFunction</Name>
				<Source><![CDATA[
    public MenuFunction displayFormMenuFunction()
    {
        return new MenuFunction(menuitemDisplayStr(RetailSPOnlineStoreListView), MenuItemType::Display);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record in <c>RetailOnlineChannelTable</c> table.
    /// </summary>
    /// <param name="_sync">
    /// method parameter to support base class method which has been overridden
    /// </param>
    /// <remarks>
    /// If replication of the record is allowed for the table, action is inserted into the <c>RetailConnPreactionTable</c> table.
    /// </remarks>
    public void insert(boolean _sync = true)
    {
        RetailChannelProdAttrMetadataHandler metadataHandler;
        RetailChannelAttributeGroup channelAttributeGroup;
        RetailProvisionedChannelProdAttrGroup provisionedChannelProdAttrGroup;
        RetailProvisionedChannelProductAttribute provisionedChannelProductAttribute;
        EcoResAttributeGroupAttribute channelProductAttributeGroupAttribute;
        str defaultMetadata;
        int currentVersion;

        ttsBegin;

        super();

        if (this.needsDataReplicated())
        {
            // Create metadata handler
            metadataHandler = RetailChannelProdAttrMetaHandlerFactory::create(this.RecId);

            // Insert metadata
            if (metadataHandler != null)
            {
                currentVersion = metadataHandler.currentMetadataVersion();

                // Provisioned channel product attributes
                while select Channel, Modifier, AttributeGroup from channelAttributeGroup
                    where channelAttributeGroup.Channel == this.RecId &&
                          channelAttributeGroup.Modifier == RetailChannelAttributeModifier::Product
                    exists join provisionedChannelProdAttrGroup
                        where provisionedChannelProdAttrGroup.AttributeGroup == channelAttributeGroup.AttributeGroup &&
                              provisionedChannelProdAttrGroup.ChannelType == this.ChannelType
                {
                    while select AttributeGroup, Attribute from channelProductAttributeGroupAttribute
                        where channelProductAttributeGroupAttribute.AttributeGroup == channelAttributeGroup.AttributeGroup
                        join Attribute, ChannelProductAttributeID from provisionedChannelProductAttribute
                        where provisionedChannelProductAttribute.Attribute == channelProductAttributeGroupAttribute.Attribute
                    {
                        defaultMetadata = metadataHandler.defaultMetadata(RetailProductAttributeRelationType::Channel, RetailStandardAttributeID::None, provisionedChannelProductAttribute.ChannelProductAttributeID, currentVersion);

                        RetailProdAttributeInternalOrgMetadata::addUpdate(
                                RetailInternalOrganization::findByChannelId(this.RecId).RecId,
                                channelProductAttributeGroupAttribute.Attribute,
                                false,
                                RetailProductAttributeRelationType::Channel,
                                defaultMetadata,
                                currentVersion);
                    }
                }
            }
        }

        // Publish the current channel implicit and populates publishing data in the specified table.
        RetailPubRetailOnlineChannelTable::publishChannel(this.RecId);

        // Insert publish status.
        if (!RetailPreventAutoInsertingPublishStatusFlight::instance().isEnabled())
        {
            RetailOnlineChannelPublishStatus::publishAsInProgress(this.RecId);
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retailTitleFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets title fields of a record in the <c>RetailOnlineChannelTable</c> table.
    /// </summary>
    /// <returns>
    /// The title fields for display.
    /// </returns>
    display TitleFields retailTitleFields()
    {
        OMOperatingUnit omOperatingUnit;

        if (this.RecId == 0)
        {
            return "@RET5915";
        }
        else
        {
            select Name, OMOperatingUnitNumber from omOperatingUnit where omOperatingUnit.RecId == this.omOperatingUnitID;
            return strFmt("@RET5916", omOperatingUnit.OMOperatingUnitNumber, omOperatingUnit.Name);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update(boolean sync = true)
    {
        ttsbegin;

        super(sync);

        // Publish the current channel implicit and populates publishing data in the specified table.
        RetailPubRetailOnlineChannelTable::publishChannel(this.RecId);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record by RecId
    /// </summary>
    /// <param name="_recId">
    /// Channel Id
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailOnlineChannelTable</c> table; otherwise, an empty buffer.
    /// </returns>
    public static RetailOnlineChannelTable find(RefRecId _recId, boolean _forupdate = false)
    {
        RetailOnlineChannelTable onlineChannel;

        onlineChannel.selectForUpdate(_forupdate);

        if (_recId != 0)
        {
            select firstOnly onlineChannel
                where onlineChannel.RecId == _recId;
        }

        return onlineChannel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRetailChannelId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find <c>RetailOnlineChannelTable</c> by retail channel id.
    /// </summary>
    /// <param name="_retailChannelId">The retail channel id of the <c>RetailOnlineChannelTable</c>.</param>
    /// <param name="_forUpdate">True to select for update, otherwise false.</param>
    /// <returns>The <c>RetailOnlineChannelTabl</c> if found.</returns>
    public static RetailOnlineChannelTable findByRetailChannelId(RetailChannelId _retailChannelId, boolean _forUpdate = false)
    {
        RetailOnlineChannelTable onlineChannel;

        onlineChannel.selectForUpdate(_forupdate);

        if (_retailChannelId != '')
        {
            select firstonly onlineChannel where onlineChannel.RetailChannelId == _retailChannelId;
        }

        return onlineChannel;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260179</DeveloperDocumentation>
	<Label>@RET260180</Label>
	<TableGroup>Main</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Extends>RetailChannelTable</Extends>
	<Modules>OnlineStore</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OnlineCatalogName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OnlineStoreAzureB2CProfile</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OnlineCatalogName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOnlineCatalogName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OnlineFunctionalityProfile</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFunctionalityProfileId</ExtendedDataType>
			<Label>@RET3231</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustomerType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>OnlineStoreCustomerType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OnlineStoreAzureB2CProfile</Name>
			<ExtendedDataType>RecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableMultipleUnitsOfMeasure</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<HelpText>@Retail:EnableMultipleUnitsOfMeasureHelpText</HelpText>
			<Label>@Retail:EnableMultipleUnitsOfMeasureLabel</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OnlineChannel_RetailChannelTable_FK</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailChannelTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailOnlineChannelFunctionalityProfileTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailOnlineChannelFunctionalityProfileTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FunctionalityProfile1</Name>
					<SourceEDT>RetailFunctionalityProfileId</SourceEDT>
					<Field>OnlineFunctionalityProfile</Field>
					<RelatedField>profileId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>profileIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>OnlineStoreAzureB2CProfile</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailOnlineChannelAzureB2CConfigurationProfile</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OnlineStoreAzureB2CProfile</Name>
					<Field>OnlineStoreAzureB2CProfile</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>