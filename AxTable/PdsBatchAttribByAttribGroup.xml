<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsBatchAttribByAttribGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PdsBatchAttribByAttribGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkAttribCriteria</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether batch attribute value fits the batch attribute range.
    /// </summary>
    /// <returns>Whether batch attribute value fits the attribute range criteria.</returns>
    /// <remarks>
    /// <syntax>
    /// public boolean checkAttribCriteria()
    /// </syntax>
    /// </remarks>
    public boolean checkAttribCriteria()
    {
        #define.PointDecimalSeparator(1)

        boolean                         ret = true;

        PdsBatchAttribMin               batchAttribMin;
        PdsBatchAttribMax               batchAttribMax;
        PdsBatchAttribToleranceAction   batchAttribToleranceAction;

        PdsBatchAttrib                  batchAttrib = this.pdsBatchAttrib();

        switch (batchAttrib.PdsBatchAttribType)
        {
            case PdsBatchAttribType::Integer:

                [batchAttribMin, batchAttribMax, batchAttribToleranceAction] = batchAttrib.getAttribRange();

                ret =  ret
                    && PdsBatchAttrib::isValidAttribRange(
                                    batchAttribMin,
                                    batchAttribMax,
                                    num2Str0(this.PdsBatchAttribMin, 0));

                ret =  ret
                    && PdsBatchAttrib::isValidAttribRange(
                                    batchAttribMin,
                                    batchAttribMax,
                                    num2Str0(this.PdsBatchAttribMax, 0));
                break;
            case PdsBatchAttribType::Realnumber :
                [batchAttribMin, batchAttribMax, batchAttribToleranceAction] = batchAttrib.getAttribRange();

                ret = ret && PdsBatchAttrib::isValidAttribRange(
                                    batchAttribMin,
                                    batchAttribMax,
                                    num2Str0(this.PdsBatchAttribMin, 0, new SysDictType(extendedtypenum(PdsBatchAttribMin)).noOfDecimals(),#PointDecimalSeparator));

                ret = ret && PdsBatchAttrib::isValidAttribRange(
                                    batchAttribMin,
                                    batchAttribMax,
                                    num2Str0(this.PdsBatchAttribMax, 0, new SysDictType(extendedtypenum(PdsBatchAttribMax)).noOfDecimals(),#PointDecimalSeparator));
                break;
        }

        ret = ret || batchAttribToleranceAction == PdsBatchAttribToleranceAction::Warning;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        this.validatePdsBatchAttribByAttribGroup();
        
        this.validatePdsBatchAttribByAttribGroupCrossCompany();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePdsBatchAttribByAttribGroup</Name>
				<Source><![CDATA[
    public void validatePdsBatchAttribByAttribGroup()
    {
        PdsBatchAttribByItem    attribByItem;
        PdsBatchAttributes      attributes;

        //find items with current group id (pdsBatchAttribByItem)
        select firstonly RecId from attribByItem
            where attribByItem.PdsBatchAttribCode      == TableGroupAll::GroupId
                && attribByItem.PdsBatchAttribRelation == this.PdsBatchAttribGroupId
            join RecId from attributes
                where  attributes.PdsBatchAttribId  == this.PdsBatchAttribAttribId
                    && attributes.ItemId            == attribByItem.PdsBatchAttribItemId;

        if (attribByItem.RecId)
        {
            throw error("@PRO2024");
        }

        //find customers with items with current group id (pdsBatchAttribByItemCustomer)
        PdsBatchAttribByItemCustomer attribByItemCustomer;
        select firstonly RecId from  attribByItemCustomer
            where attribByItemCustomer.PdsBatchAttribCode      == TableGroupAll::GroupId
                && attribByItemCustomer.PdsBatchAttribRelation == this.PdsBatchAttribGroupId
            join RecId from attributes
            where  attributes.PdsBatchAttribId == this.PdsBatchAttribAttribId
                && attributes.ItemId           == attribByItemCustomer.PdsBatchAttribItemId;

        if (attribByItemCustomer.RecId)
        {
            throw error("@PRO2024");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePdsBatchAttribByAttribGroupCrossCompany</Name>
				<Source><![CDATA[
    private void validatePdsBatchAttribByAttribGroupCrossCompany()
    {
        SysDataSharingPolicy policy = SysDataSharingPolicy::findSharingPolicyByCompanyAndTable(curExt(), tableId2name(this.TableId));
        if (policy.RecId && policy.IsEnabled)
        {
            Query       query = SysDataSharingCrossCompanyValidatorQueryBuilder::buildQuery(this.orig(), policy.RecId);
            QueryRun    queryRun = new QueryRun(query);
        
            while (queryRun.Next())
            {
                PdsBatchAttribByAttribGroup companyBatchAttribByAttribGroup = queryRun.get(this.TableId);
                DataAreaId company = companyBatchAttribByAttribGroup.DataAreaId;

                if (companyBatchAttribByAttribGroup && company && company != curExt())
                {
                    changecompany(company)
                    {
                        PdsBatchAttribByAttribGroup batchAttribByAttribGroup = PdsBatchAttribByAttribGroup::find(
                            companyBatchAttribByAttribGroup.PdsBatchAttribGroupId, 
                            companyBatchAttribByAttribGroup.PdsBatchAttribAttribId);
                        if (batchAttribByAttribGroup.RecId)
                        {
                            batchAttribByAttribGroup.validatePdsBatchAttribByAttribGroup();
                        }
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPdsBatchAttrib</Name>
				<Source><![CDATA[
    /// <summary>
    /// Transfers batch attribute ranges from PdsBatchAttrib record to PdsBatchAttribByAttribGroup record.
    /// </summary>
    /// <param name="_batchAttrib">A PdsBatchAttrib record</param>
    /// <remarks>
    /// D-20-1499 Pds Batch attributes
    /// <syntax>
    /// public void initFromPdsBatchAttrib(PdsBatchAttrib _batchAttrib)
    /// </syntax>
    /// </remarks>
    public void initFromPdsBatchAttrib(
        PdsBatchAttrib _batchAttrib = null)
    {
        PdsBatchAttrib  batchAttrib = _batchAttrib;

        if (   prmisdefault(_batchAttrib)
            || !_batchAttrib)
        {
            batchAttrib = PdsBatchAttrib::find(this.PdsBatchAttribAttribId);
        }
        else
        {
            this.PdsBatchAttribAttribId = _batchAttrib.PdsBatchAttribId;
        }

        switch (batchAttrib.PdsBatchAttribType)
        {
            case PdsBatchAttribType::Integer:
            case PdsBatchAttribType::Realnumber:
                this.PdsBatchAttribMax              = batchAttrib.PdsBatchAttribMax;
                this.PdsBatchAttribMin              = batchAttrib.PdsBatchAttribMin;
                this.PdsBatchAttribMultiple         = batchAttrib.PdsBatchAttribMultiple;
                this.PdsBatchAttribToleranceAction  = batchAttrib.PdsBatchAttribToleranceAction;
                break;
            default:
                break;
        }

        this.PdsBatchAttribTarget           = batchAttrib.PdsBatchAttribTarget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribMultiple):
                if (this.isFieldSet(fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribAttribId)))
                {
                    this.PdsBatchAttribMultiple = this.pdsBatchAttrib().PdsBatchAttribMultiple;
                }
                break;

            case fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribTarget):
                if (this.isFieldSet(fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribAttribId)))
                {
                    this.PdsBatchAttribTarget = this.pdsBatchAttrib().PdsBatchAttribTarget;
                }
                break;

            case fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribToleranceAction):
                if (this.isFieldSet(fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribAttribId)))
                {
                    this.PdsBatchAttribToleranceAction = this.pdsBatchAttrib().PdsBatchAttribToleranceAction;
                }
                break;

            case fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribMax):
                if (this.isFieldSet(fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribAttribId)))
                {
                    this.PdsBatchAttribMax = this.pdsBatchAttrib().PdsBatchAttribMax;
                }
                break;

            case fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribMin):
                if (this.isFieldSet(fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribAttribId)))
                {
                    this.PdsBatchAttribMin = this.pdsBatchAttrib().PdsBatchAttribMin;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
                [fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribMultiple),
                    [fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribAttribId)]
        ],
                [fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribTarget),
                    [fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribAttribId)]
        ],
                [fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribToleranceAction),
                    [fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribAttribId)]
        ],
                [fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribMax),
                    [fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribAttribId)]
        ],
                [fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribMin),
                    [fieldNum(PdsBatchAttribByAttribGroup, PdsBatchAttribAttribId)]
        ]
              ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsBatchAttrib</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the corresponding PdsBatchAttrib record to current record.
    /// </summary>
    /// <param name="_forUpdate">Whether to select record for update or not</param>
    /// <returns>Return corresponding PdsBatchAttrib record to current record.</returns>
    /// <remarks>
    /// D-20-1499 Pds Batch attributes
    /// <syntax>
    /// public PdsBatchAttrib pdsBatchAttrib(boolean _forUpdate)
    /// </syntax>
    /// </remarks>
    public PdsBatchAttrib pdsBatchAttrib(boolean _forUpdate = false)
    {
        return PdsBatchAttrib::find(this.PdsBatchAttribAttribId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsBatchAttribTargetEdit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method used to edit the Batch attribute target value. Receives a string and saves as proper type.
    /// </summary>
    /// <param name="_set">
    /// Edit method called to set or view a value
    /// </param>
    /// <param name="_pdsBatchAttribTarget">
    /// Value to push if setting value.
    /// </param>
    /// <returns>
    /// Current batch attribute value, returned as string regardless of type.
    /// </returns>
    public edit PdsBatchAttribTarget pdsBatchAttribTargetEdit(
        boolean                 _set = false,
        PdsBatchAttribTarget    _pdsBatchAttribTarget = '')
    {
        if (_set && hasFieldAccess(
                tablenum(PdsBatchAttribByAttribGroup),
                fieldnum(PdsBatchAttribByAttribGroup, PdsBatchAttribTarget),
                AccessType::Edit))
        {
            if (this.pdsBatchAttrib().isValidAttribValueType(_pdsBatchAttribTarget,true))
            {
                this.PdsBatchAttribTarget = this.pdsBatchAttrib().locale2Storage(_pdsBatchAttribTarget);
            }
        }

        return this.pdsBatchAttrib().storage2Locale(this.PdsBatchAttribTarget);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(
        fieldName   _fieldName,
        int         _arrayIndex = 1)
    {
        PdsBatchAttrib  pdsBatchAttribLocal = this.pdsBatchAttrib();

        boolean ret = super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldstr(PdsBatchAttribByAttribGroup, PdsBatchAttribAttribId):

                if (pdsBatchAttribLocal.PdsBatchAttribType == PdsBatchAttribType::Enumerate)
                {
                    if (!PdsBatchAttribEnumValues::existBatchAttribId(this.PdsBatchAttribAttribId))
                    {
                        ret = checkFailed("@PDS1534");
                    }
                }
                break;

            case fieldstr(PdsBatchAttribByAttribGroup, PdsBatchAttribMin):
                ret = ret && pdsBatchAttribLocal.checkValueAgainstAttribRange(this.PdsBatchAttribMin);
                break;

            case fieldstr(PdsBatchAttribByAttribGroup, PdsBatchAttribMax):
                ret = ret && pdsBatchAttribLocal.checkValueAgainstAttribRange(this.PdsBatchAttribMax);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isNumberBatchAttribute</Name>
				<Source><![CDATA[
    private boolean isNumberBatchAttribute(PdsBatchAttrib _pdsBatchAttrib)
    {
        if (_pdsBatchAttrib)
        {
            return _pdsBatchAttrib.PdsBatchAttribType == PdsBatchAttribType::Integer
                    || _pdsBatchAttrib.PdsBatchAttribType == PdsBatchAttribType::Realnumber;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRangeValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the batch attribute range values.
    /// </summary>
    /// <returns>true if the validation succeeds; otherwise, false.</returns>
    private boolean validateRangeValues()
    {
        boolean ret = true;
        PdsBatchAttrib pdsBatchAttrib = this.pdsBatchAttrib();

        if (!this.isNumberBatchAttribute(pdsBatchAttrib)
            && (this.PdsBatchAttribMin != 0
                || this.PdsBatchAttribMax != 0
                || this.PdsBatchAttribMultiple != 0))
        {
            ret = checkFailed("@SCM:MessageError_RangeValuesSpecifiedForNonNumberAttributes");
        }

        if (pdsBatchAttrib
            && pdsBatchAttrib.PdsBatchAttribType == PdsBatchAttribType::Integer
            && (xInfo::getNumberOfDecimals(this.PdsBatchAttribMin) != 0
                || xInfo::getNumberOfDecimals(this.PdsBatchAttribMax) != 0
                || xInfo::getNumberOfDecimals(this.PdsBatchAttribMultiple) != 0))
        {
            ret = checkFailed("@SCM:MessageError_InvalidIntegerRangeValues");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if record can be written to db.
    /// </summary>
    /// <returns>Whether record validates properly.</returns>
    /// <remarks>
    /// D-20-1499 Pds Batch attributes
    /// <syntax>
    /// public boolean validateWrite()
    /// </syntax>
    /// </remarks>
    public boolean validateWrite()
    {
        boolean ret = super();

        ret = ret && this.validateRangeValues();

        ret = ret && PdsBatchAttrib::isValidAttribRange(this.PdsBatchAttribMin, this.PdsBatchAttribMax);

        ret =  ret && this.checkAttribCriteria();

        ret = ret && PdsBatchAttrib::isValidTargetValue(this.PdsBatchAttribAttribId,
                                                  this.PdsBatchAttribMin,
                                                  this.PdsBatchAttribMax,
                                                  this.PdsBatchAttribMultiple,
                                                  this.PdsBatchAttribTarget,
                                                  this.pdsBatchAttrib().PdsBatchAttribType);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(
        PdsBatchAttribGroupId   _pdsBatchAttribGroupId,
        PdsBatchAttribId        _pdsBatchAttribId)
    {
        return _pdsBatchAttribGroupId
            && (select pdsBatchAttribByAttribGroup
                    where  pdsBatchAttribByAttribGroup.PdsBatchAttribGroupId    == _pdsBatchAttribGroupId
                        && pdsBatchAttribByAttribGroup.PdsBatchAttribAttribId   == _pdsBatchAttribId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static PdsBatchAttribByAttribGroup find(
            PdsBatchAttribGroupId _pdsBatchAttribGroupId,
            PdsBatchAttribId _pdsBatchAttribId,
            boolean _forUpdate = false)
    {
        PdsBatchAttribByAttribGroup pdsBatchAttribByAttribGroup;

        if (!prmisdefault(_forUpdate))
        {
            pdsBatchAttribByAttribGroup.selectForUpdate(_forUpdate);
        }

        select firstonly pdsBatchAttribByAttribGroup
            where  pdsBatchAttribByAttribGroup.PdsBatchAttribGroupId    == _pdsBatchAttribGroupId
                && pdsBatchAttribByAttribGroup.PdsBatchAttribAttribId   == _pdsBatchAttribId;

        return pdsBatchAttribByAttribGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFirst</Name>
				<Source><![CDATA[
    public static PdsBatchAttribByAttribGroup findFirst()
    {
        PdsBatchAttribByAttribGroup pdsBatchAttribByAttribGroup;

        select firstonly pdsBatchAttribByAttribGroup;

        return pdsBatchAttribByAttribGroup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsBatchAttrib</ConfigurationKey>
	<DeveloperDocumentation>@PDS1062</DeveloperDocumentation>
	<Label>@PRO1599</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>PdsBatchAttribGroupId</TitleField1>
	<TitleField2>PdsBatchAttribAttribId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>PdsBatchAttribByAttribGroupIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>Inventory</Modules>
	<PrimaryIndex>PdsBatchAttribByAttribGroupIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsBatchAttribGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsBatchAttribAttribId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PdsBatchAttribByAtrribGroup</Name>
			<Label>@PRO1554</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsBatchAttribAttribId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsBatchAttribGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PdsBatchAttribRange</Name>
			<Label>@SYS24771</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PdsBatchAttribToleranceAction</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsBatchAttribMin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsBatchAttribMax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsBatchAttribMultiple</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsBatchAttribTarget</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PdsBatchAttribAttribId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsBatchAttribId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PdsBatchAttribGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsBatchAttribGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsBatchAttribMax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsBatchAttribMax</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsBatchAttribMin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsBatchAttribMin</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsBatchAttribMultiple</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsBatchAttribMultiple</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PdsBatchAttribTarget</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsBatchAttribTarget</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PdsBatchAttribToleranceAction</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PdsBatchAttribToleranceAction</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PdsBatchAttribByAttribGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PdsBatchAttribGroupId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsBatchAttribAttribId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>PdsBatchAttrib</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PdsBatchAttrib</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsBatchAttribAttribId</Name>
					<Field>PdsBatchAttribAttribId</Field>
					<RelatedField>PdsBatchAttribId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PdsBatchAttribGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PdsBatchAttribGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PdsBatchAttribGroupId</Name>
					<Field>PdsBatchAttribGroupId</Field>
					<RelatedField>PdsBatchAttribGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>