<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxWithholdTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTaxWithholdSectionCode_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Section code
    /// </summary>
    /// <returns>
    /// Section code
    /// </returns>
    Display  TaxWithholdSectionCode_IN getTaxWithholdSectionCode_IN()
    {
        return TaxWithholdComponentGroupTable_IN::find(TaxWithholdComponentTable_IN::find(this.TaxWithholdComponent_IN).TaxWithholdComponentGroup).SectionCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
        this.CurrencyCode = Ledger::accountingCurrency(CompanyInfo::current());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTCSTaxType_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true if the taxWithholdType is TCS.
    /// </summary>
    /// <returns>
    /// Returns true if the taxWithholdType is TCS.
    /// </returns>
    /// <remarks>
    /// Returns true if the taxWithholdType is TCS.
    /// </remarks>

    public boolean isTCSTaxType_IN()
    {
        return this.TaxType_IN == TaxWithholdCodeType_IN::TCS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTDSTaxType_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true if the taxWithholdType is TDS.
    /// </summary>
    /// <returns>
    /// Returns true if the taxWithholdType is TDS.
    /// </returns>
    /// <remarks>
    /// Returns true if the taxWithholdType is TDS.
    /// </remarks>

    public boolean isTDSTaxType_IN()
    {
        return this.TaxType_IN == TaxWithholdCodeType_IN::TDS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        #ISOCountryRegionCodes
        boolean ret;
        DimensionLedgerAccountType type;

        // <GIN>
        TaxWithholdComponentTable_IN    taxWithholdComponentTable;
        TaxWithholdPeriod_IN            taxWithholdPeriod;
        boolean                         isTaxWithHoldParameterEnabled = TaxWithholdParameters_IN::checkTaxParameters();
        // </GIN>

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case (fieldNum(TaxWithholdTable,TaxWithholdBaseType)):

                    if (this.TaxWithholdBaseType == TaxWithholdBaseType::PctPerNet && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoSA]))
                    {
                        ret = checkFailed(strfmt("@TAX:WithholdingTaxCodeOriginSA", enum2str(TaxWithholdBaseType::PctPerNet), "@SYS306252"));
                    }
                    else if (this.TaxWithholdBaseType == TaxWithholdBaseType::PctPerGross && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH, #isoGB]))
                    {
                        ret =  checkFailed(strfmt("@SYS328602", enum2str(TaxWithholdBaseType::PctPerGross)));
                    }
                    //<GIN>
                    if (isTaxWithHoldParameterEnabled
                        && (this.TaxType_IN == TaxWithholdCodeType_IN::TCS
                            || this.TaxType_IN == TaxWithholdCodeType_IN::TDS)
                        && this.TaxWithholdBaseType == TaxWithholdBaseType::PctPerNet)
                    {
                        ret = checkFailed(strfmt("@GLS5134", TaxWithholdBaseType::PctPerNet, "@SYS38159"));
                    }
                    // </GIN>

                    break;

                // <GIN>
                case fieldnum(TaxWithholdTable, TaxWithholdSettlementPeriod_IN):
                    if (isTaxWithHoldParameterEnabled
                        && this.TaxWithholdSettlementPeriod_IN)
                    {
                        taxWithholdPeriod = TaxWithholdHead_IN::find(this.TaxWithholdSettlementPeriod_IN).period;
                        if (this.TaxType_IN == TaxWithholdCodeType_IN::TDS  &&
                            !TaxWithholdHead_IN::findByTaxPeriodHead(taxWithholdPeriod, TaxWithholdType_IN::TDS))
                        {
                            ret = checkFailed(strfmt("@GLS5445", TaxWithholdHead_IN::find(this.TaxWithholdSettlementPeriod_IN).Period, TaxWithholdType_IN::TDS));
                        }

                        if (this.TaxType_IN == TaxWithholdCodeType_IN::TCS   &&
                            !TaxWithholdHead_IN::findByTaxPeriodHead(taxWithholdPeriod,TaxWithholdType_IN::TCS))
                        {
                            ret = checkFailed(strfmt("@GLS5445", TaxWithholdHead_IN::find(this.TaxWithholdSettlementPeriod_IN).Period, TaxWithholdType_IN::TCS));
                        }
                    }
                    break;

                case fieldnum(TaxWithholdTable, TaxWithholdComponent_IN):
                    if (isTaxWithHoldParameterEnabled
                        && this.TaxWithholdComponent_IN)
                    {
                        if (this.TaxType_IN == TaxWithholdCodeType_IN::TDS)
                        {
                            select firstonly Component, TaxType from taxWithholdComponentTable
                                where taxWithholdComponentTable.RecId   == this.TaxWithholdComponent_IN;

                            if (taxWithholdComponentTable.TaxType != TaxWithholdType_IN::TDS)
                            {
                                ret = checkFailed(strfmt("@GLS5459", taxWithholdComponentTable.Component, TaxWithholdType_IN::TDS));
                            }
                        }

                        if (this.TaxType_IN == TaxWithholdCodeType_IN::TCS)
                        {
                            select firstonly Component, TaxType from taxWithholdComponentTable
                                where taxWithholdComponentTable.RecId   == this.TaxWithholdComponent_IN;

                            if (taxWithholdComponentTable.TaxType != TaxWithholdType_IN::TCS)
                            {
                                ret = checkFailed(strfmt("@GLS5459", taxWithholdComponentTable.Component, TaxWithholdType_IN::TCS));
                            }
                        }
                    }
                    break;

                case fieldnum(TaxWithholdTable, LedgerDimension_IN):
                    if (isTaxWithHoldParameterEnabled
                        && this.LedgerDimension_IN)
                    {
                        if ((this.TaxType_IN == TaxWithholdCodeType_IN::TDS     ||
                            this.TaxType_IN == TaxWithholdCodeType_IN::TCS)    &&
                            MainAccount::findByMainAccountId(LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.LedgerDimension_IN).MainAccountId).PostingType  != LedgerPostingType::TaxWithhold)
                        {
                            ret = checkFailed(strfmt("@GLS5075", LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.LedgerDimension_IN).MainAccountId, LedgerPostingType::TaxWithhold));
                        }
                    }
                    break;
                    // </GIN>

                case (fieldnum(TaxWithholdTable, LedgerDimension)):
                    if (!SysCountryRegionCode::isLegalEntityInCountryRegion([#isoSA, #isoTH, #isoGB, #isoIE]))
                    {
                        type = LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.LedgerDimension).Type;
                        if (type != DimensionLedgerAccountType::BalanceSheet &&
                            type != DimensionLedgerAccountType::Liability)
                        {
                            ret = checkFailed("@SYS329225");
                        }
                    }
                    break;

                // <GBR>
                case (fieldNum(TaxWithholdTable, TaxIncomingLedgerDimension_BR)):
                    var taxIncomingLedgerDimensionAccount = MainAccount::findByMainAccountId(LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.TaxIncomingLedgerDimension_BR).MainAccountId);

                    if (taxIncomingLedgerDimensionAccount.PostingType != LedgerPostingType::TaxWithhold && taxIncomingLedgerDimensionAccount.ValidatePosting == FieldControl::FillIn)
                    {
                        info(strfmt("@GLS5075", taxIncomingLedgerDimensionAccount.MainAccountId, LedgerPostingType::TaxWithhold));
                    }
                    break;

                case (fieldNum(TaxWithholdTable, TaxReportLedgerDimension)):
                    var taxReportLedgerDimensionAccount = MainAccount::findByMainAccountId(LedgerDimensionFacade::getMainAccountFromLedgerDimension(this.TaxReportLedgerDimension).MainAccountId);

                    if (taxReportLedgerDimensionAccount.PostingType != LedgerPostingType::TaxWithhold && taxReportLedgerDimensionAccount.ValidatePosting == FieldControl::FillIn)
                    {
                        info(strfmt("@GLS5075", taxReportLedgerDimensionAccount.MainAccountId, LedgerPostingType::TaxWithhold));
                    }
                    break;
                // </GBR>

                // Currency code
                case fieldNum(TaxWithholdTable, CurrencyCode):
                    if (this.CurrencyCode
                        && this.CurrencyCode != Ledger::accountingCurrency(CompanyInfo::current())
                        && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
                    {
                        ret = checkFailed('@TaxWithholdParameters:WHTCodeCurrencyCheckLabel');
                    }

                    break;

                default:
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();
        #ISOCountryRegionCodes

        if (ret && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoTH]))
        {
            if (!this.TaxWithholdLedgerAccountGroup_TH)
            {
                ret = checkFailed(strfmt("@SYS116347", fieldpname(TaxWithholdTable, TaxWithholdLedgerAccountGroup_TH)));
            }
            if (!this.TaxWithholdPeriodHead_TH)
            {
                ret = checkFailed(strfmt("@SYS116347", fieldpname(TaxWithholdTable, TaxWithholdPeriodHead_TH)));
            }
        }

        // <GIN>
        if (TaxWithholdParameters_IN::checkTaxParameters())
        {
            switch (this.TaxType_IN)
            {
                case TaxWithholdCodeType_IN::TDS:
                    ret = TaxWithholdParameters_IN::checkParameter(TaxWithholdType_IN::TDS);
                    break;

                case TaxWithholdCodeType_IN::TCS:
                    ret = TaxWithholdParameters_IN::checkParameter(TaxWithholdType_IN::TCS);
                    break;

                default:
                    break;
            }

            if ((this.TaxType_IN == TaxWithholdCodeType_IN::TDS  ||
                this.TaxType_IN == TaxWithholdCodeType_IN::TCS) && !this.TaxWithholdSettlementPeriod_IN )
            {
                ret = checkFailed(strfmt("@SYS26332", "@SYS60050"));
            }
            if ((this.TaxType_IN == TaxWithholdCodeType_IN::TDS  ||
                this.TaxType_IN == TaxWithholdCodeType_IN::TCS )&&  !this.TaxWithholdComponent_IN)
            {
                ret = checkFailed(strfmt("@SYS26332", "@GLS5357"));
            }
        }
        // </GIN>

        // <GBR>
        if (BrazilParameters::isEnabled())
        {
            if (!this.TaxWithholdPeriod_BR)
            {
                ret = checkFailed(strFmt("@SYS26332", fieldId2pname(tableNum(TaxWithholdTable), fieldNum(TaxWithholdTable, TaxWithholdPeriod_BR))));
            }
        }
        // </GBR>

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(TaxWithholdCode _taxWithholdCode )
    {
        boolean ret = true;

        if (!TaxWithholdTable::exist(_taxWithholdCode))
        {
            ret = checkFailed(strFmt(TaxWithholdTable::txtNotExist(), _taxWithholdCode));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(TaxWithholdCode _taxWithholdCode )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     taxWithholdTable
                 where
                     taxWithholdTable.TaxWithholdCode == _taxWithholdCode).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static TaxWithholdTable find(
        TaxWithholdCode         _taxWithholdCode ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxWithholdTable taxWithholdTable;

        taxWithholdTable.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxWithholdTable.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            taxWithholdTable
            where
            taxWithholdTable.TaxWithholdCode == _taxWithholdCode;

        return taxWithholdTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupTaxCode_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and shows a lookup form for the <c>TaxWithholdCode</c> field.
    /// </summary>
    /// <param name="_formStringControl">
    /// The calling form control.
    /// </param>
    /// <param name="_taxType">
    /// Tax type used to filter the record based on tax type.
    /// </param>
    static void lookupTaxCode_IN(FormStringControl       _formStringControl,
                                        TaxWithholdCodeType_IN  _taxType)
    {
        Query                   query          = new Query();
        QueryBuildRange         queryBuildRange;
        QueryBuildDataSource    queryBuildDataSource;
        SysTableLookup          sysTableLookup;

        sysTableLookup = SysTableLookup::newParameters(tablenum(TaxWithholdTable), _formStringControl);

        sysTableLookup.addLookupfield(fieldnum(TaxWithholdTable, TaxWithholdCode));
        sysTableLookup.addLookupfield(fieldnum(TaxWithholdTable, TaxWithholdName));

        queryBuildDataSource = query.addDataSource(tablenum(TaxWithholdTable));

        queryBuildRange = queryBuildDataSource.addRange(fieldnum(TaxWithholdTable, TaxType_IN));
        queryBuildRange.value(enum2str(_taxType));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxWithholdVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>TaxWithholdVersion</c> for the given <c>TaxPeriod</c> and <c>TransDate</c>
    /// </summary>
    /// <param name="_taxPeriod">
    /// The <c>TaxPeriond</c>.
    /// </param>
    /// <param name="_date">
    /// The <c>TransDate</c>.
    /// </param>
    /// <returns>
    /// The <c>TaxWithholdVersion</c>.
    /// </returns>
    static TaxWithholdVersion taxWithholdVersion(TaxPeriod       _taxPeriod,
                                                 TransDate       _date)
    {
        return TaxReportPeriod::find(_taxPeriod, _date).TaxWithholdVersion_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102256";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicWithholdingTax</ConfigurationKey>
	<DeveloperDocumentation>@SYS126143</DeveloperDocumentation>
	<Label>@SYS81706</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>TaxWithholdCode</TitleField1>
	<TitleField2>TaxWithholdName</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>TaxWithholdIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Tax</Modules>
	<PrimaryIndex>TaxWithholdIdx</PrimaryIndex>
	<ReplacementKey>TaxWithholdIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>TaxValueThresholdProfile_IN</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>TaxValueThresholdProfile_IN</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>TaxWithholdData</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>TaxWithholdData</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>TaxWithholdGroupData</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>TaxWithholdGroupData</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>TaxWithholdLimit</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>TaxWithholdLimit</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>TaxWithholdTrans</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>TaxWithholdTrans</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdBaseType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdRoundOff</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdRoundOffType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdLedgerAccountGroup_TH</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdPeriodHead_TH</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ApplyThreshold_IN</Name>
			<Label>@SYS4003399</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ApplyThreshold_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CalculationParameters</Name>
			<Label>@SYS25887</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdBaseType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxCalcMethod_JP</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Classification</Name>
			<Label>@SYS81508</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdRecipient</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Currency</Name>
			<Label>@SYS7572</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdType_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS118908</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdSettlementPeriod_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS81755</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdPeriodHead_TH</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdLedgerAccountGroup_TH</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxReportLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxIncomingLedgerDimension_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterimAccount_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Report_BR</Name>
			<Label>@SYS10223</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdPeriod_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RoundOff</Name>
			<Label>@SYS8172</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdRoundOff</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdRoundOffType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxType_IN</Name>
			<Label>@SYS33553</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxType_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdComponent_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>YearlyDeclaration770</Name>
			<Label>@SYS81713</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdServiceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithhold770Form</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ApplyThreshold_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ApplyThreshold_IN</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TableApplyThresholdINHelpText</HelpText>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TableCurrencyCodeHelpText</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@GLS5360</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxIncomingLedgerDimension_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxReportLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS23812</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxType_IN</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<HelpText>@TaxWithholdParameters:TableTaxTypeINHelpText</HelpText>
			<EnumType>TaxWithholdCodeType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWithhold770Form</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IT</CountryRegionCodes>
			<ExtendedDataType>TaxWithhold770Form</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxWithholdBaseType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxWithholdBaseType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWithholdCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWithholdCode</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TableTaxWithholdCodeHelpText</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdComponent_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TableTaxWithholdComponentINHelpText</HelpText>
			<Label>@GLS5357</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdLedgerAccountGroup_TH</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWithholdAccountGroupId_TH</ExtendedDataType>
			<Label>@SYS59367</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWithholdName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWithholdName</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TableTaxWithholdNameHelpText</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWithholdPeriod_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdPeriod</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdPeriodHead_TH</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWithholdPeriodId_TH</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWithholdReasonCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IT</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdReasonCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxWithholdRecipient</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IT</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS81710</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxWithholdRoundOff</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWithholdRoundOff</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxWithholdRoundOffType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWithholdRoundOffType</ExtendedDataType>
			<EnumType>RoundOffType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWithholdServiceType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IT</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdServiceType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdSettlementPeriod_IN</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<HelpText>@TaxWithholdParameters:TableTaxWithholdSettlementPeriodINHelpText</HelpText>
			<Label>@SYS60050</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxWithholdSource</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IT</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS11258</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxWithholdType_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxWithholdType_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxCalcMethod_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<Label>@SYS21899</Label>
			<EnumType>TaxCalcMode</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PanBasedAccumulation_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerBasic</ConfigurationKey>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@Tax_WithholdTax:PANBasedAccumulationHelpText</HelpText>
			<Label>@Tax_WithholdTax:PANBasedAccumulation</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InterimAccount_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@GLS108995</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExcludeICMS_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<HelpText>@TaxCoreTax:ExcludeICMSHelpText</HelpText>
			<Label>@TaxCoreTax:ExcludeICMS</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExcludeISS_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<HelpText>@TaxCoreTax:ExcludeISSHelpText</HelpText>
			<Label>@TaxCoreTax:ExcludeISS</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxWithholdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxWithholdCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FK_DimensionAttributeValueCombination_Ta</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxWithholdLedgerAccountGroup_THIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxWithholdLedgerAccountGroup_TH</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxWithholdPeriodHead_THIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxWithholdPeriodHead_TH</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DimensionAttributeAccountIncoming_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueCombination_TaxWithholdTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension_IN</Name>
					<Field>LedgerDimension_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxIncomingLedgerDimension_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxIncomingLedgerDimension_BR</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxLedgerAccountGroup</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxIncomingLedgerDimension_BR</Name>
					<Field>TaxIncomingLedgerDimension_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxReportLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxReportLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxLedgerAccountGroup</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxReportLedgerDimension</Name>
					<Field>TaxReportLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdComponentTable_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxWithholdComponentTable_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdComponentTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdComponentTable_IN_TaxWithholdTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdComponent_IN</Name>
					<Field>TaxWithholdComponent_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdHead_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxWithholdHead_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdHead_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdHead_IN_TaxWithholdTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdSettlementPeriod_IN</Name>
					<Field>TaxWithholdSettlementPeriod_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdLedgerAccountGroup_TH</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxWithholdLedgerAccountGroup_TH</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdLedgerAccountGroup_TH</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdLedgerAccountGroup_TH_TaxWithholdTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdLedgerAccountGroup_TH</Name>
					<Field>TaxWithholdLedgerAccountGroup_TH</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdPeriodHead_TH</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxWithholdPeriodHead_TH</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdPeriodHead_TH</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdPeriodHead_TH_TaxWithholdTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdPeriodHead_TH</Name>
					<Field>TaxWithholdPeriodHead_TH</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DimensionAttributeAccountInterim_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombinationInterim</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdTableInterim</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InterimAccount_IN</Name>
					<Field>InterimAccount_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>