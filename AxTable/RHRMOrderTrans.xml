<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RHRMOrderTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RHRMOrderTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>businessTripTypeDescription</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display RHRMBusinessTripTypeName businessTripTypeDescription()
    {
        return RHRMBusinessTripType::find(this.BusinessTripTypeId).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calendarDayNumber</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RHRMPeriod calendarDayNumber()
    {
        return this.RHRMEmployee::calendarDayNumber();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkStaffListOrderTrans</Name>
				<Source><![CDATA[
    private boolean checkStaffListOrderTrans()
    {
        boolean ret = true;

        if (! this.OrganizationId)
        {
            ret = ret && checkFailed(strFmt("@GLS102641", fieldPName(RHRMOrderTrans, OrganizationId)));
        }

        if (! this.HcmTitle)
        {
            ret = ret && checkFailed(strFmt("@GLS102641", fieldPName(RHRMOrderTrans, HcmTitle)));
        }

        if (! this.StartDate)
        {
            ret = ret && checkFailed(strFmt("@RUP2419", this.titleId(), this.OrganizationId));
        }

        if (this.ValueSum && (! this.StaffListMinWage || ! this.StaffListMaxWage))
        {
            ret = ret && checkFailed(strFmt("@RUP2420", this.titleId(), this.OrganizationId));
        }

        if ( this.StaffListMinWage && this.StaffListMaxWage && this.StaffListMinWage > this.StaffListMaxWage )
        {
            ret = ret && checkFailed(strFmt("@RUP2421", this.titleId(), this.OrganizationId));
        }

        if (this.GradeScaleId && (! this.StaffListMinGradeId || ! this.StaffListMaxGradeId))
        {
            ret = ret && checkFailed(strFmt("@RUP2422", this.titleId(), this.OrganizationId));
        }

        if (this.StaffListMinGradeId && this.StaffListMaxGradeId && (this.StaffListMinGradeId > this.StaffListMaxGradeId))
        {
            ret = ret && checkFailed(strFmt("@RUP2423", this.titleId(), this.OrganizationId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dayAfterOrderFinished</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the next day after the resolution order is finished.
    /// </summary>
    /// <returns>
    /// The date if end date is specified in the resolution order, otherwise dateNull().
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public EndDate dayAfterOrderFinished()
    {
        if (this.EndDate)
        {
            return this.EndDate + 1;
        }
        else
        {
            return dateNull();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>docArgCode</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RHRMDocArgCode docArgCode()
    {
        return this.DocArgCode ?
               this.DocArgCode :
               RHRMOrderTable::find(this.OrderTableRecId).DocArgCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>docArgDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display DocumentDate docArgDate()
    {
        return RHRMDocArg::find(this.docArgCode()).DocArgDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>docArgName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display RHRMDocArgName docArgName()
    {
        return RHRMDocArg::find(this.docArgCode()).docArgName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>docArgNumber</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display RHRMDocArgNumber docArgNumber()
    {
        return RHRMDocArg::find(this.docArgCode()).DocArgNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emplName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display EmplName emplName()
    {
        return RHRMEmplTable::emplId2Name(this.EmplId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>employeeOrganization</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display RHRMOrganizationAll employeeOrganization()
    {
        return this.RHRMEmployee::employeeOrganization();
    }

]]></Source>
			</Method>
			<Method>
				<Name>employeePosition</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display HcmTitleId employeePosition()
    {
        return this.RHRMEmployee::employeePosition();
    }

]]></Source>
			</Method>
			<Method>
				<Name>employeeStaffList</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display RHRMStaffListNoYes employeeStaffList()
    {
        return this.RHRMEmployee::employeeStaffList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>employeeTradeCategory</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display RHRMTradeCategoryId employeeTradeCategory()
    {
        return this.RHRMEmployee::employeeTradeCategory();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRateValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the rate values from employee details.
    /// </summary>
    /// <param name="_rhrmEmplTable">
    /// The employee detail record.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initRateValue(RHRMEmplTable _rhrmEmplTable = RHRMEmplTable::find(this.EmplId))
    {
        if (this.EmplId)
        {
            if (_rhrmEmplTable.EmploymentFactorRate && !this.EmploymentFactor)
            {
                this.EmploymentFactor = RPayRateTable::find(_rhrmEmplTable.EmploymentFactorRate).rateValueReal(false, 0);
            }

            if (_rhrmEmplTable.WageRate && !this.ValueSum)
            {
                this.ValueSum = RPayRateTable::find(_rhrmEmplTable.WageRate).rateValueReal(false, 0);
            }

            if (_rhrmEmplTable.RiseInWages1Rate && !this.RiseInWages)
            {
                this.RiseInWages = RPayRateTable::find(_rhrmEmplTable.RiseInWages1Rate).rateValueReal(false, 0);
            }

            if (_rhrmEmplTable.RiseInWages2Rate && !this.RiseInWages2)
            {
                this.RiseInWages2 = RPayRateTable::find(_rhrmEmplTable.RiseInWages2Rate).rateValueReal(false, 0);
            }

            if (_rhrmEmplTable.RiseInWages3Rate && !this.RiseInWages3)
            {
                this.RiseInWages3 = RPayRateTable::find(_rhrmEmplTable.RiseInWages3Rate).rateValueReal(false, 0);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        if (! this.EmploymentFactor)
            this.EmploymentFactor = 1;
        this.PayVacationDuration = RPayVacationDuration::CalendarDays;
    }

]]></Source>
			</Method>
			<Method>
				<Name>labourContract</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display DocumentNum labourContract()
    {
        return RHRMEmplTable::find(this.EmplId).LabourContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>labourContractDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display RHRMLabourContractDate labourContractDate()
    {
        return RHRMEmplTable::find(this.EmplId).LabourContractDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>organizationDescription</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display RHRMOrganizationName organizationDescription()
    {
        return RPayHRMOrganization::find(this.OrganizationId).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>payVacationType</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display RPayVacationType payVacationType()
    {
        return RHRMVacationType::find(this.VacationTypeId).PayVacationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>period</Name>
				<Source><![CDATA[
    #define.zero("0")
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    edit RHRMDayNumber period(boolean _set, RHRMDayNumber _val)
    {
        int dayNumber;

        if (_set && this.StartDate)
        {
            this.EndDate = this.StartDate + str2int(_val) - 1;
        }

        dayNumber = this.EndDate - this.StartDate + 1;

        return dayNumber < 0 || ! this.StartDate ? #zero : int2str(dayNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reasonCodeDescription</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display RHRMReasonCodeName reasonCodeDescription()
    {
        if (RHRMOrderTable::find(this.OrderTableRecId).JournalType == RHRMJournalType::Dismiss)
        {
            return RHRMReasonCode::find(this.ReasonCodeId, RHRMReasonType::Resign).Description;
        }
        return RHRMReasonCode::find(this.ReasonCodeId, RHRMReasonType::Move).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDayNumber</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean setDayNumber()
    {
        Days      dayNumber;
        TransDate transDate;

        if (! RPayCalendarTable::getCalendarId(this.PayVacationDuration))
        {
            return checkFailed((strFmt("@GLS106104", this.PayVacationDuration == RPayVacationDuration::CalendarDays ?
                                                    enum2str(RPayCalendarType::SevenDays) :
                                                    enum2str(RPayCalendarType::SixDay))));
        }

        if (this.StartDate && this.EndDate)
        {
            dayNumber = RPayAverageEarnEngine_Vacation::numDaysBetweenDates(RPayCalendarTable::getCalendarId(this.PayVacationDuration),
                                                                            this.StartDate,
                                                                            this.EndDate,
                                                                            this.VacationTypeId);

            transDate = RPayAverageEarnEngine_Vacation::setEndDate(RPayCalendarTable::getCalendarId(this.PayVacationDuration),
                                                                   this.StartDate,
                                                                   dayNumber,
                                                                   this.VacationTypeId);
            if (transDate != this.EndDate)
            {
                info(strFmt("@GLS106104", this.PayVacationDuration == RPayVacationDuration::CalendarDays ?
                                         enum2str(RPayCalendarType::SevenDays) :
                                         enum2str(RPayCalendarType::SixDay)));
            }
            this.DayNumber = dayNumber;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEndDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean setEndDate()
    {
        TransDate   transDate;

        if (! RPayCalendarTable::getCalendarId(this.PayVacationDuration))
        {
            return checkFailed((strFmt("@GLS106104", this.PayVacationDuration == RPayVacationDuration::CalendarDays ?
                                                    enum2str(RPayCalendarType::SevenDays) :
                                                    enum2str(RPayCalendarType::SixDay))));
        }

        if (this.StartDate && this.DayNumber)
        {
            transDate = RPayAverageEarnEngine_Vacation::setEndDate(RPayCalendarTable::getCalendarId(this.PayVacationDuration),
                                                                   this.StartDate,
                                                                   this.DayNumber,
                                                                   this.VacationTypeId);

            if (transDate == dateNull())
            {
                return checkFailed(strFmt("@GLS106104", this.PayVacationDuration == RPayVacationDuration::CalendarDays ?
                                                       enum2str(RPayCalendarType::SevenDays) :
                                                       enum2str(RPayCalendarType::SixDay)));
            }
            else
            {
                this.EndDate = transDate;
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPeriodDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setPeriodDate()
    {
        container   con;
        #define.two(2)

        if (this.EmplId && this.StartDate && this.DayNumber && this.VacationTypeId)
        {
            con = RPayVacationDetermineTime::vacationPeriod(this.EmplId, this.StartDate, this.DayNumber, this.VacationTypeId);
            this.StartPeriodDate = conPeek(con, 1);
            this.EndPeriodDate   = conPeek(con, #two);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>titleId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the title.
    /// </summary>
    /// <returns>
    /// The title.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display public HcmTitleId titleId()
    {
        return HcmTitle::find(this.HcmTitle).TitleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vacationTypeDescription</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display RHRMVacationTypeName vacationTypeDescription()
    {
        return RHRMVacationType::find(this.VacationTypeId).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldId)
    {
        boolean        ret;
        RHRMOrderTable orderTable;
        FormRun        formRun;
        boolean        orderTableFound;
        FormDataSource formDataSource;

        ret = super(_fieldId);

        if (ret)
        {
            if (this.OrderTableRecId)
            {
                orderTable = RHRMOrderTable::find(this.OrderTableRecId);
                orderTableFound = true;
            }
            else if (FormDataUtil::isFormDataSource(this))
            {
                formRun = FormDataUtil::getFormDataSource(this).formRun();
                switch (formRun.name())
                {
                    case formStr(RHRMVirtualNetworkDismiss):
                    case formStr(RHRMVirtualNetworkEmploy):
                    case formStr(RHRMVirtualNetworkMove):

                        formDataSource = formRun.dataSource(1);
                        if (formDataSource && formDataSource.table() == tableNum(RHRMOrderTable))
                        {
                            orderTable = formDataSource.cursor();
                            orderTableFound = true;
                        }
                        else
                        {
                            orderTableFound = false;
                        }
                        break;

                    default:
                       orderTableFound = false;
                }
            }
            else
            {
                orderTableFound = false;
            }

            switch (_fieldId)
            {
                case fieldNum(RHRMOrderTrans, EmplId) :
                    if (orderTableFound)
                    {
                        if (orderTable.JournalType == RHRMJournalType::Receive  ||
                            orderTable.JournalType == RHRMJournalType::Transfer ||
                            orderTable.JournalType == RHRMJournalType::Dismiss)
                        {
                            if (RHRMOrderTrans::existOtherEmpl(this))
                               ret = ret && checkFailed(strFmt("@RUP1902", this.EmplId, RHRMEmplTable::emplId2Name(this.EmplId)));
                        }
                    }
                    break;

                case fieldNum(RHRMOrderTrans, DayNumber) :
                    if (this.DayNumber <= 0)
                        ret = ret && checkFailed("@RUP2225");
                    break;

                case fieldNum(RHRMOrderTrans, StartDate) :
                    if (orderTableFound)
                    {
                        switch (orderTable.JournalType)
                        {
                            case RHRMJournalType::Vacation:
                                if (this.StartDate == dateNull())
                                {
                                    ret = ret && checkFailed("@SYS59325");
                                }
                                break;

                            case RHRMJournalType::Transfer:
                            case RHRMJournalType::Receive:
                                if (this.StartDate > this.EndDate && this.EndDate != dateNull())
                                {
                                    ret = ret && checkFailed("@SYS21592");
                                }
                        }
                    }
                    break;

                case fieldNum(RHRMOrderTrans, EndDate) :
                    if (this.StartDate > this.EndDate && this.EndDate != dateNull())
                        ret = ret && checkFailed("@SYS21592");
                    break;

                case fieldNum(RHRMOrderTrans, StartPeriodDate) :
                    if (this.StartPeriodDate > this.EndPeriodDate && this.EndPeriodDate != dateNull())
                        ret = ret && checkFailed("@SYS21592");
                    break;

                case fieldNum(RHRMOrderTrans, EndPeriodDate) :
                    if (this.StartPeriodDate > this.EndPeriodDate && this.EndPeriodDate != dateNull())
                        ret = ret && checkFailed("@SYS21592");
                    break;

                case fieldNum(RHRMOrderTrans, ReasonCodeId) :
                    if (orderTableFound && this.ReasonCodeId)
                    {
                        if (orderTable.JournalType == RHRMJournalType::Transfer)
                        {
                            if (!(RHRMReasonCode::find(this.ReasonCodeId, RHRMReasonType::Move)))
                                ret = ret && checkFailed(strFmt("@RUP6331", this.ReasonCodeId, RHRMReasonType::Move, tableId2pname(tableNum(RHRMReasonCode))));
                        }
                        if (orderTable.JournalType == RHRMJournalType::Dismiss)
                        {
                            if (!(RHRMReasonCode::find(this.ReasonCodeId, RHRMReasonType::Resign)))
                                ret = ret && checkFailed(strFmt("@RUP6331", this.ReasonCodeId, RHRMReasonType::Resign, tableId2pname(tableNum(RHRMReasonCode))));
                        }
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean                             ret;
        RHRMEmplTable                       emplTable;
        RHRMOrderTable                      orderTable = RHRMOrderTable::find(this.OrderTableRecId);
        RHRMStaffListHistoryCheck           rhrmStaffListHistoryCheck;
        RHRMStaffListHistory                rhrmStaffListHistory;
        RHRMParameters                      rhrmParameters;
        RPayAverageEarnEmplPeriodTable      rPayAverageEarnEmplPeriodTable;
        TransLink_RU                        transLink;
        RPayAverageEarnEngine_Vacation      rPayAverageEarnEngine_Vacation;
        RPayAverageEarnEngine_BusinessTrip  rPayAverageEarnEngine_BusinessTrip;
        container                           con;
        int                                 i;
        StartDate                           startDateLocal;
        EndDate                             endDateLocal;

        boolean findCross()
        {
            RHRMOrderTrans hrmOrderTrans;
            RHRMOrderTable hrmOrderTable;

            while select StartDate, EndDate from hrmOrderTrans
                where hrmOrderTrans.EmplId == this.EmplId   &&
                      hrmOrderTrans.RecId  != this.RecId
            join hrmOrderTable
                where hrmOrderTable.RecId          == hrmOrderTrans.OrderTableRecId &&
                      ( (hrmOrderTable.JournalType == RHRMJournalType::Vacation && ! isConfigurationkeyEnabled(configurationKeyNum(RpayAverageEarn))) ||
                        (hrmOrderTable.JournalType == RHRMJournalType::Trip     && ! isConfigurationkeyEnabled(configurationKeyNum(RpayAverageEarn))) )
            {
                if ((hrmOrderTrans.StartDate >= this.StartDate && hrmOrderTrans.StartDate <= this.EndDate) ||
                   (this.StartDate >= hrmOrderTrans.StartDate && this.StartDate <= hrmOrderTrans.EndDate))
                {
                    return checkFailed(strFmt("@RUP1903", emplTable.EmployeeId, emplTable.name()));
                }
            }

            if (orderTable.JournalType == RHRMJournalType::Vacation || orderTable.JournalType == RHRMJournalType::Trip)
            {
                while select StartDate, EndDate from hrmOrderTrans
                    where hrmOrderTrans.EmplId          == this.EmplId   &&
                          hrmOrderTrans.RecId           != this.RecId    &&
                          hrmOrderTrans.OrderTableRecId == this.OrderTableRecId
                {
                    if ((hrmOrderTrans.StartDate >= this.StartDate && hrmOrderTrans.StartDate <= this.EndDate) ||
                        (this.StartDate >= hrmOrderTrans.StartDate && this.StartDate <= hrmOrderTrans.EndDate))
                    {
                        return checkFailed(strFmt("@RUP6169", emplTable.EmployeeId, emplTable.name()));
                    }
                }
            }

            if (isConfigurationkeyEnabled(configurationKeyNum(RpayAverageEarn)))
            {
                rPayAverageEarnEngine_Vacation = new RPayAverageEarnEngine_Vacation(rPayAverageEarnEmplPeriodTable.EmplId,
                                                                                    rPayAverageEarnEmplPeriodTable.rPayAverageEarnCode,
                                                                                    rPayAverageEarnEmplPeriodTable.AverageEarnCalcPeriod);

                while select rPayAverageEarnEmplPeriodTable
                    where rPayAverageEarnEmplPeriodTable.EmplId              == emplTable.EmployeeId             &&
                          rPayAverageEarnEmplPeriodTable.AverageEarnCodeType == RPayAverageEarnCodeType::Vacation &&
                          rPayAverageEarnEmplPeriodTable.StartDate           <= this.EndDate                      &&
                          rPayAverageEarnEmplPeriodTable.EndDate             >= this.StartDate                    &&
                          rPayAverageEarnEmplPeriodTable.VacationRecordType  == RPayVacationRecordType::Vacation
                    #transLinkNotExistsReversed_RU(transLink, rpayAverageEarnEmplPeriodTable)
                {
                    rPayAverageEarnEngine_Vacation.rPayAverageEarnEmplPeriodTable(rPayAverageEarnEmplPeriodTable);
                    con = rPayAverageEarnEngine_Vacation.getVacationIntervals();
                    for (i = 1 ; i <= conLen(con) ; i++)
                    {
                        startDateLocal = conPeek(conPeek(con,i),1);
                        endDateLocal   = conPeek(conPeek(con,i),2);

                        if (this.StartDate <= endDateLocal && this.EndDate >= startDateLocal)
                        {
                            return checkFailed(strFmt("@RUP1903", emplTable.EmployeeId, emplTable.name()));
                        }
                    }
                }
            }

            if (isConfigurationkeyEnabled(configurationKeyNum(RpayAverageEarn)))
            {
                rPayAverageEarnEngine_BusinessTrip = new RPayAverageEarnEngine_BusinessTrip(rPayAverageEarnEmplPeriodTable.EmplId,
                                                                                            rPayAverageEarnEmplPeriodTable.rPayAverageEarnCode,
                                                                                            rPayAverageEarnEmplPeriodTable.AverageEarnCalcPeriod);

                while select rPayAverageEarnEmplPeriodTable
                    where rPayAverageEarnEmplPeriodTable.EmplId                 == emplTable.EmployeeId                      &&
                          rPayAverageEarnEmplPeriodTable.AverageEarnCodeType    == RPayAverageEarnCodeType::BusinessTrip &&
                          rPayAverageEarnEmplPeriodTable.StartDate              <= this.EndDate                          &&
                          rPayAverageEarnEmplPeriodTable.EndDate                >= this.StartDate                        &&
                          rPayAverageEarnEmplPeriodTable.BusinessTripRecordType == RPayBusinessTripRecordType::BusinessTrip
                    #transLinkNotExistsReversed_RU(transLink, rpayAverageEarnEmplPeriodTable)
                {
                    rPayAverageEarnEngine_BusinessTrip.rPayAverageEarnEmplPeriodTable(rPayAverageEarnEmplPeriodTable);
                    con = rPayAverageEarnEngine_BusinessTrip.getBusinessTripIntervals();
                    for (i = 1 ; i <= conLen(con) ; i++)
                    {
                        startDateLocal = conPeek(conPeek(con,i),1);
                        endDateLocal   = conPeek(conPeek(con,i),2);

                        if (this.StartDate <= endDateLocal && this.EndDate >= startDateLocal)
                        {
                            return checkFailed(strFmt("@RUP1903", emplTable.EmployeeId, emplTable.name()));
                        }
                    }
                }
            }

            return true;
        }

        ret = super();

        emplTable = RHRMEmplTable::find(this.EmplId, true); //force flush the cashed data

        if (orderTable.JournalType != RHRMJournalType::StaffList && !this.EmplId)
        {
            ret = ret && checkFailed("@GLS106326");
        }

        switch (orderTable.JournalType)
        {
            case RHRMJournalType::Vacation:
                if (! this.VacationTypeId)
                {
                    ret = ret && checkFailed(strFmt("@RUP1833", emplTable.EmployeeId, emplTable.name()));
                }
                if (! this.StartDate)
                {
                    ret = ret && checkFailed(strFmt("@RUP1828", emplTable.EmployeeId, emplTable.name()));
                }
                if (! this.EndDate)
                {
                    ret = ret && checkFailed(strFmt("@RUP1829", emplTable.EmployeeId, emplTable.name()));
                }
                if (this.EndDate < this.StartDate)
                {
                    ret = ret && checkFailed(strFmt("@RUP1830", emplTable.EmployeeId, emplTable.name()));
                }
                if (this.EndPeriodDate < this.StartPeriodDate)
                {
                    ret = ret && checkFailed(strFmt("@RUP1831", emplTable.EmployeeId, emplTable.name()));
                }
                if (this.StartPeriodDate &&
                    ! RPayHistory::checkEmplWorkPeriod(this.EmplId,
                                                       this.StartPeriodDate,
                                                       this.EndPeriodDate))
                {
                    ret = ret && checkFailed(strFmt("@RUP1824", emplTable.EmployeeId, emplTable.name()));
                }

                if (this.StartDate &&
                    ! RPayHistory::checkEmplWorkPeriod(this.EmplId,
                                                       this.StartDate,
                                                       this.EndDate,
                                                       true))
                {
                    ret = ret && checkFailed(strFmt("@RUP1890", emplTable.EmployeeId, emplTable.name()));
                }

                ret = ret && findCross();
                break;

            case RHRMJournalType::Trip:
                if (! this.BusinessTripTypeId)
                {
                    ret = ret && checkFailed(strFmt("@RUP2606", emplTable.EmployeeId, emplTable.name()));
                }
                if (! this.StartDate)
                {
                    ret = ret && checkFailed(strFmt("@RUP1828", emplTable.EmployeeId, emplTable.name()));
                }
                if (this.EndDate < this.StartDate)
                {
                    ret = ret && checkFailed(strFmt("@RUP1830", emplTable.EmployeeId, emplTable.name()));
                }

                if (! RPayHistory::checkEmplWorkPeriod(this.EmplId,
                                                       this.StartDate,
                                                       this.EndDate))
                {
                    ret = ret && checkFailed(strFmt("@RUP1824", emplTable.EmployeeId, emplTable.name()));
                }
                ret = ret && findCross();
                break;

            case RHRMJournalType::Bonus:
                if (! RPayHistory::checkEmplWorkPeriod(this.EmplId,
                                                       this.StartDate,
                                                       this.StartDate))
                {
                    ret = ret && checkFailed(strFmt("@RUP1824", emplTable.EmployeeId, emplTable.name()));
                }
                break;

            case RHRMJournalType::Receive:
                if (emplTable.PayEmploymentDate && ! emplTable.PayResignedDate)
                    ret = ret && checkFailed(strFmt("@RUP1616", emplTable.EmployeeId, emplTable.name()));
                break;

            case RHRMJournalType::Transfer:
                if (! emplTable.PayEmploymentDate || emplTable.PayResignedDate)
                {
                    ret = ret && checkFailed(strFmt("@RUP1655", emplTable.EmployeeId, emplTable.name()));
                }
                break;

            case RHRMJournalType::Dismiss:
                if (emplTable.employmentStatus() != RHRMEmploymentStatus::Employed)
                {
                    ret = ret && checkFailed(strFmt("@RUP1655", emplTable.EmployeeId, emplTable.name()));
                }

                if (RPayHistory::findLast(this.EmplId).StartDate >= this.StartDate)
                {
                    ret = ret && checkFailed(strFmt("@RUP31", emplTable.EmployeeId, emplTable.name()));
                }

                break;
            case RHRMJournalType::StaffList :
                ret = ret && this.checkStaffListOrderTrans();
                break;
            case RHRMJournalType::VacationChildCancel:
                if (! this.PrevVacationStartDate)
                {
                    ret = ret && checkFailed(strFmt("@RUP6210", emplTable.EmployeeId, emplTable.name()));
                }
                if (! this.StartDate)
                {
                    ret = ret && checkFailed(strFmt("@RUP6211", emplTable.EmployeeId, emplTable.name()));
                }
                if (this.StartDate > this.PrevVacationEndDate)
                {
                    ret = ret && checkFailed(strFmt("@RUP6212", emplTable.EmployeeId, emplTable.name()));
                }
                if (this.StartDate <= this.PrevVacationStartDate)
                {
                    ret = ret && checkFailed(strFmt("@RUP6213", emplTable.EmployeeId, emplTable.name()));
                }
        }

        switch (orderTable.JournalType)
        {
            case RHRMJournalType::Receive,
                 RHRMJournalType::Transfer,
                 RHRMJournalType::Dismiss:

                if (RHRMOrderTrans::existOtherEmpl(this))
                {
                    ret = ret && checkFailed(strFmt("@RUP1902", emplTable.EmployeeId, emplTable.name()));
                }

                if (isConfigurationkeyEnabled(configurationKeyNum(RPayroll)))
                {
                    if (endmth(this.StartDate) < RPayParameters::payPeriod())
                    {
                        ret = ret && checkFailed(strFmt("@RUP2036", emplTable.EmployeeId, emplTable.name()));
                    }
                }

                if (orderTable.JournalType == RHRMJournalType::Receive ||
                    orderTable.JournalType == RHRMJournalType::Transfer)
                {
                    if (this.EmploymentFactor <= 0)
                    {
                        ret = ret && checkFailed("@GLS106597");
                    }

                    if (! this.OrganizationId)
                    {
                        ret = ret && checkFailed(strFmt("@RUP1713", emplTable.EmployeeId, emplTable.name()));
                    }

                    if (! RPayHRMOrganization::find(this.OrganizationId).Active)
                    {
                        ret = ret && checkFailed(strFmt("@RUP1328", emplTable.EmployeeId, emplTable.name()));
                    }

                    if (! this.HcmTitle)
                    {
                        ret = ret && checkFailed(strFmt("@RUP1712", emplTable.EmployeeId, emplTable.name()));
                    }

                    if (RPayHistory::findLast(this.EmplId).StartDate >= this.StartDate)
                    {
                        ret = ret && checkFailed(strFmt("@RUP31", emplTable.EmployeeId, emplTable.name()));
                    }

                    if (this.GradeScaleId && !RHRMGradeScaleTable::findActive(this.GradeScaleId, this.StartDate).RecId)
                    {
                        ret = ret && checkFailed(strFmt("@RUP2416", this.GradeScaleId, this.StartDate));
                    }

                    if (this.StaffListRefRecId)
                    {
                        rhrmParameters = RHRMParameters::find();

                        rhrmStaffListHistory = RHRMStaffListHistory::findLast(this.StaffListRefRecId, this.StartDate);

                        rhrmStaffListHistoryCheck = new RHRMStaffListHistoryCheck(this.StaffListRefRecId, maxDate());
                        rhrmStaffListHistoryCheck.insertHistory(this);

                        if (!rhrmParameters.AllowOverdraft)
                        {
                            if (!rhrmStaffListHistoryCheck.historyIsCorrect())
                            {
                                    ret = ret && checkFailed(strFmt("@RUP1835", emplTable.EmployeeId, emplTable.name(), this.OrganizationId, this.titleId()));
                            }
                        }

                        if (!rhrmParameters.AllowWagesMismatch)
                        {
                            if ((!this.GradeScaleId || !rhrmStaffListHistory.GradeScaleId) &&
                                (this.ValueSum < rhrmStaffListHistory.MinWage || this.ValueSum > rhrmStaffListHistory.MaxWage))
                            {
                                ret = ret && checkFailed(strFmt("@RUP2417",
                                                                emplTable.EmployeeId,
                                                                emplTable.name(),
                                                                this.OrganizationId,
                                                                this.titleId()));
                            }
                            if (this.GradeScaleId && rhrmStaffListHistory.GradeScaleId &&
                               (this.GradeId < rhrmStaffListHistory.MinGradeId || this.GradeId > rhrmStaffListHistory.MaxGradeId))
                            {
                                ret = ret && checkFailed(strFmt("@RUP2418",
                                                                emplTable.EmployeeId,
                                                                emplTable.name(),
                                                                this.OrganizationId,
                                                                this.titleId()));
                            }
                        }
                    }
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existOtherEmpl</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean existOtherEmpl(RHRMOrderTrans _hrmOrderTrans)
    {
        return (select RecId from rhrmOrderTrans
                where rhrmOrderTrans.EmplId          == _hrmOrderTrans.EmplId &&
                      rhrmOrderTrans.OrderTableRecId == _hrmOrderTrans.OrderTableRecId &&
                      rhrmOrderTrans.RecId           != _hrmOrderTrans.RecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RHRMOrderTrans find(RecId                 _recId,
                                      boolean               _update = false)
    {
        RHRMOrderTrans rhrmOrderTrans;

        rhrmOrderTrans.selectForUpdate(_update);
        select firstonly rhrmOrderTrans
            where rhrmOrderTrans.RecId           == _recId;

        return rhrmOrderTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RHRM</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@RUP6089</DeveloperDocumentation>
	<Label>@RUP1512</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>JournalId</TitleField1>
	<TitleField2>EmplId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>JournalLineIdx</ClusteredIndex>
	<Modules>Obsolete</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>JournalError</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>JournalError</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmplId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrganizationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HcmTitle</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValueSum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AttachDocument</Name>
			<Label>@GLS106416</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AttachDocDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttachDocNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BusinessTripDueToMeans</Name>
			<Label>@RUP1561</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TripAtCost</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BusinessTripPeriod</Name>
			<Label>@RUP1633</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BusinessTripPurpose</Name>
			<Label>@RUP1559</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TripObject</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ChangesForTheLabourContract</Name>
			<Label>@RUP1630</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AttachDocNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttachDocDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DateOfDismissal</Name>
			<Label>@RUP1648</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DepartmentPosition</Name>
			<Label>@RUP1667</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrganizationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TradeCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Division</Name>
			<Label>@RUP59</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StaffListNoYes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrganizationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HcmTitle</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TradeCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocArg</Name>
			<Label>@RUP1846</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocArgCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>docArgName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>docArgNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>docArgDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Employee</Name>
			<Label>@RUP1496</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EmplId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>emplName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ForAPeriod</Name>
			<Label>@RUP4</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartPeriodDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndPeriodDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GradeScaleGroup</Name>
			<Label>@RUP2401</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GradeScaleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GradeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Grid</Name>
			<Label>@SYS26263</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EmplId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrganizationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HcmTitle</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>KindOfWork</Name>
			<Label>@GLS106246</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>KindOfWork</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MonthProbation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LabourContract</Name>
			<Label>@RUP1660</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>labourContract</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>labourContractDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Occupation</Name>
			<Label>@RUP1656</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>HcmTitle</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TradeCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payroll</Name>
			<Label>@SYS2694</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EmploymentFactor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValueSum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RiseInWages</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RiseInWages2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RiseInWages3</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PeriodOfWork</Name>
			<Label>@RUP1495</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PreviousDepartment</Name>
			<Label>@RUP1662</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>employeeStaffList</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>employeeOrganization</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>employeePosition</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>employeeTradeCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReasonOfDismissal</Name>
			<Label>@RUP1632</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonCodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>reasonCodeDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReasonOfGranting</Name>
			<Label>@RUP1665</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonCodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>reasonCodeDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Relation</Name>
			<Label>@SYS80109</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrderTableRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LeaveScheduleTransRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalaryAndItsExtraCharges</Name>
			<Label>@RUP1657</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValueSum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RiseInWages</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>StaffList</Name>
			<Label>@GLS106431</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StaffListRefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferWithoutTermChanges</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>StaffListFactor</Name>
			<Label>@RUP2411</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValueSum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>StaffListGradeScale</Name>
			<Label>@RUP2401</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GradeScaleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StaffListMinGradeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StaffListMaxGradeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>StaffListOverview</Name>
			<Label>@GLS104385</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrganizationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HcmTitle</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TradeCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValueSum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StaffListMinWage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StaffListMaxWage</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>StaffListPosition</Name>
			<Label>@RUP2412</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrganizationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>organizationDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HcmTitle</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TradeCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>StaffListRiseInWages</Name>
			<Label>@RUP2413</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RiseInWages</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RiseInWages2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RiseInWages3</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>StaffListWage</Name>
			<Label>@RUP2414</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StaffListMinWage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StaffListMaxWage</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TermOfVacation</Name>
			<Label>@RUP1664</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>period</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TradeUnionDecision</Name>
			<Label>@RUP1661</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AttachDocNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AttachDocDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransferType</Name>
			<Label>@RUP1538</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReasonCodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>reasonCodeDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransferWithoutTermChanges</Name>
			<Label>@RUP1709</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferWithoutTermChanges</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TrialPeriod</Name>
			<Label>@RUP1658</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MonthProbation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TypeOfBusinessTrip</Name>
			<Label>@RUP2599</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BusinessTripTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>businessTripTypeDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TypeOfVacation</Name>
			<Label>@RUP1693</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VacationTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>vacationTypeDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VacationPeriod</Name>
			<Label>@RUP1663</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DayNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayVacationDuration</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrevVacationStartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrevVacationEndDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WorkConditions</Name>
			<Label>@RUP3514</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Class</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Certified</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SpecCond</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PositionList</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkCondClass</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WorkGroup</Name>
			<Label>@RUP1538</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReasonCodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>AttachDocDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DocumentDate</ExtendedDataType>
			<Label>@RUP1543</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AttachDocNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DocumentNum</ExtendedDataType>
			<Label>@RUP1542</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BusinessTripTypeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMBusinessTripTypeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Certified</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMCertifiedWorkplace</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Class</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RHRMClassOfWorkConditions</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DayNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMPeriod</ExtendedDataType>
			<Label>@GLS105826</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocArgCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMDocArgCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EmplId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RHRMEmplIdLookup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EmploymentFactor</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMEmploymentFactor</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EndDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EndDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EndPeriodDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EndDate</ExtendedDataType>
			<Label>@RUP1498</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>GradeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMGradeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GradeScaleId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMGradeScaleId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HcmTitle</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RHRMTitleRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMJournalNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>KindOfWork</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RHRMKindOfWork</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LeaveScheduleTransRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MonthProbation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMEmploymentMonthProbation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OrderTableRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrganizationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMOrganizationAll</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PayVacationDuration</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RPayVacationDuration</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PositionList</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMPositionList</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PrevVacationEndDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>StartDate</ExtendedDataType>
			<Label>@RUP3174</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PrevVacationStartDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>StartDate</ExtendedDataType>
			<Label>@RUP3180</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReasonCodeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMReasonCodeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RiseInWages</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMWage</ExtendedDataType>
			<Label>@RUP1549</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RiseInWages2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMWage</ExtendedDataType>
			<Label>@RUP1551</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RiseInWages3</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMWage</ExtendedDataType>
			<Label>@RUP1553</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SpecCond</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMSpecCond</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>StaffListMaxGradeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMMaxGradeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>StaffListMaxWage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMMaxWage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>StaffListMinGradeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMMinGradeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>StaffListMinWage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMMinWage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StaffListNoYes</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMStaffListNoYes</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>StaffListRefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RHRMStaffListRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>StartDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartPeriodDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>StartDate</ExtendedDataType>
			<Label>@SYS23633</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TradeCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMTradeCategoryId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransferType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RHRMTransferType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransferWithoutTermChanges</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMStaffWageChangeTransfer</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TripAtCost</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMBusinessTrip</ExtendedDataType>
			<Label>@RUP1560</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TripObject</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMBusinessTrip</ExtendedDataType>
			<Label>@SYS630</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VacationTypeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMVacationTypeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ValueSum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMWage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>WorkCondClass</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMWorkCondClass</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EmplIdTableRecIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>EmplId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OrderTableRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>JournalLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>JournalTransMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>JournalId</MapField>
					<MapFieldTo>JournalId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Voucher</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
					<MapFieldTo>StartDate</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>RHRMEmployee</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>StartDate</MapField>
					<MapFieldTo>StartDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EndDate</MapField>
					<MapFieldTo>EndDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PayVacationDuration</MapField>
					<MapFieldTo>PayVacationDuration</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DayNumber</MapField>
					<MapFieldTo>DayNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EmplId</MapField>
					<MapFieldTo>EmplId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VacationTypeId</MapField>
					<MapFieldTo>VacationTypeId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmTitle</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmTitle</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HcmTitle</Name>
					<Field>HcmTitle</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>JournalError</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>JournalError</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>JournalError</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RHRMOrderTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>RefTableId_Extern</Name>
					<RelatedField>RefTableId</RelatedField>
					<Value>16237</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LineNum</Name>
					<Field>LineNum</Field>
					<RelatedField>LineNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalId</Name>
					<Field>JournalId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RHRMBusinessTripType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RHRMBusinessTripType</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BusinessTripTypeId</Name>
					<SourceEDT>RHRMBusinessTripTypeId</SourceEDT>
					<Field>BusinessTripTypeId</Field>
					<RelatedField>BusinessTripTypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>IdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RHRMDocArg</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RHRMDocArg</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DocArgCode</Name>
					<SourceEDT>RHRMDocArgCode</SourceEDT>
					<Field>DocArgCode</Field>
					<RelatedField>DocArgCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DocArgCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RHRMEmplTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RHRMEmplTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RHRMEmplTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RHRMOrderTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EmplId</Name>
					<Field>EmplId</Field>
					<RelatedField>EmployeeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RHRMGradeScaleName</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RHRMGradeScaleName</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GradeScaleId</Name>
					<SourceEDT>RHRMGradeScaleId</SourceEDT>
					<Field>GradeScaleId</Field>
					<RelatedField>GradeScaleId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GradeScaleIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RHRMOrderTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RHRMOrderTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RHRMOrderTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RHRMOrderTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderTableRecId</Name>
					<Field>OrderTableRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RHRMOrderTable_JournalId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RHRMOrderTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>JournalId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RHRMOrderTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalId</Name>
					<SourceEDT>RHRMJournalNum</SourceEDT>
					<Field>JournalId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>JournalIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RHRMReasonCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RHRMReasonCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReasonCodeId</Name>
					<SourceEDT>RHRMReasonCodeId</SourceEDT>
					<Field>ReasonCodeId</Field>
					<RelatedField>ReasonCodeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RHRMSpecConditions</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RHRMSpecConditions</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SpecCond</Name>
					<SourceEDT>RHRMSpecCond</SourceEDT>
					<Field>SpecCond</Field>
					<RelatedField>SpecCondId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SpecCondIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RHRMStaffList</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RHRMStaffList</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RHRMStaffList</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RHRMOrderTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>StaffListNoYes</Name>
					<Field>StaffListNoYes</Field>
					<Value>1</Value>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrganizationId</Name>
					<Field>OrganizationId</Field>
					<RelatedField>OrganizationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>HcmTitle</Name>
					<Field>HcmTitle</Field>
					<RelatedField>HcmTitle</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TradeCategory</Name>
					<Field>TradeCategory</Field>
					<RelatedField>TradeCategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RHRMStaffList_StaffListRefRecId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RHRMStaffList</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>StaffListRefRecId</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RHRMOrderTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StaffListRefRecId</Name>
					<SourceEDT>RHRMStaffListRefRecId</SourceEDT>
					<Field>StaffListRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RHRMTradeCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RHRMTradeCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TradeCategory</Name>
					<SourceEDT>RHRMTradeCategoryId</SourceEDT>
					<Field>TradeCategory</Field>
					<RelatedField>TradeCategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RHRMVacationType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RHRMVacationType</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VacationTypeId</Name>
					<SourceEDT>RHRMVacationTypeId</SourceEDT>
					<Field>VacationTypeId</Field>
					<RelatedField>VacationTypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>IdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RPayHRMOrganization</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RPayHRMOrganization</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrganizationId</Name>
					<SourceEDT>RHRMOrganizationAll</SourceEDT>
					<Field>OrganizationId</Field>
					<RelatedField>hrmOrganizationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>IdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RPayVacationTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RPayVacationTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RPayVacationTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RHRMOrderTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LeaveScheduleTransRecId</Name>
					<Field>LeaveScheduleTransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WorkCondClassRate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RPayRateEnumValue</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>WorkCondClassRate</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RHRMOrderTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkCondClass</Name>
					<Field>WorkCondClass</Field>
					<RelatedField>Element</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>