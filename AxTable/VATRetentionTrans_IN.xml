<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VATRetentionTrans_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VATRetentionTrans_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcVATAmt</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to calulate the VAT amount.
    /// </summary>
    /// <param name="_inventTransLine">
    /// A buffer of the <c>InventTransferLine</c> table.
    /// </param>
    /// <returns>
    /// Returns the VAT retention amount.
    /// </returns>
    public real calcVATAmt(InventTransferLine _inventTransLine)
    {
        real    retPercent;
        real    vatRetAmount;
        InventTransferLine_IN inventTransferLineIN = _inventTransLine.inventTransferLine_IN();

        if (inventTransferLineIN.NetAmount != 0)
        {
            retPercent = inventTransferLineIN.Retention / 100 ;

            if ((inventTransferLineIN.PriceType     == PriceType_IN::CostPrice &&
                inventTransferLineIN.vatPriceType  == PriceType_IN::CostPrice  ) ||
               (inventTransferLineIN.PriceType     == PriceType_IN::TransferPrice &&
                inventTransferLineIN.vatPriceType  == PriceType_IN::TransferPrice ))
            {
                vatRetAmount = inventTransferLineIN.NetAmount;
            }

            if (inventTransferLineIN.PriceType    == PriceType_IN::TransferPrice &&
                inventTransferLineIN.vatPriceType == PriceType_IN::CostPrice      )
            {
                vatRetAmount = _inventTransLine.itemCostPrice_IN() * _inventTransLine.QtyTransfer  ;
            }
            else if (inventTransferLineIN.PriceType    == PriceType_IN::CostPrice   &&
                     inventTransferLineIN.vatPriceType == PriceType_IN::TransferPrice )
            {
                vatRetAmount = _inventTransLine.updateTransferPrice_IN() * _inventTransLine.QtyTransfer ;
            }
        }

        return vatRetAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkFormType</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to check the form type.
    /// </summary>
    /// <param name="_inventTransferLine">
    /// A buffer of <c>InventTransferLine</c> table.
    /// </param>
    /// <returns>
    /// Returns the tax value.
    /// </returns>
    public TaxValue checkFormType(InventTransferLine _inventTransferLine)
    {
        TaxGroupData    taxGroupData;
        TaxOnItem       taxOnItem;
        TaxValue        taxValue;
        TaxData         taxData;
        TransTaxInformation transTaxInformation;
        InventTransferLine_IN inventTransferLineIN = _inventTransferLine.inventTransferLine_IN();
        transTaxInformation = TransTaxInformationHelper::findOrCreateTransTaxInformationByRecord(_inventTransferLine);

        while select TaxCode from taxGroupData
            index hint TaxGroupIdx
            where taxGroupData.TaxGroup    == inventTransferLineIN.TaxGroup
            join RecId from taxOnItem
            index hint TaxItemGroupIdx
            where taxOnItem.TaxItemGroup   == inventTransferLineIN.TaxItemGroup &&
                  taxOnItem.TaxCode        == taxGroupData.TaxCode
        {
            taxData = TaxData::findFormType_IN(taxGroupData.TaxCode,
                                               transTaxInformation.SalesTaxFormTypes,
                                               DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                               inventTransferLineIN.NetAmount);
            if (!taxData)
            {
                taxValue = 1;
            }
            else if (taxData)
            {
                return taxData.TaxValue;
            }
        }

        return taxValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTransferLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to initialize the <c>VATRetentionTrans_IN</c> table.
    /// </summary>
    /// <param name="_inventTransId">
    /// A invent trans ID.
    /// </param>
    /// <param name="_callerForm">
    /// A form caller.
    /// </param>
    /// <param name="_shipNow">
    /// A quantity to ship.
    /// </param>
    public void initFromInventTransferLine(InventTransIdShipment    _inventTransId,
                                           str                      _callerForm = '',
                                           InventTransferQtyShipped _shipNow    = 0.0)
    {
        VATRetentionTrans_IN    vatRetTrans;
        InventTransferLine      inventTransLine;
        TaxValue                taxVal;
        TransTaxInformation     transTaxInformation;

        select firstonly vatRetTrans
            where vatRetTrans.vatTransId == _inventTransId ;

        inventTransLine = InventTransferLine::findTransIdShip(_inventTransId,false);
        InventTransferLine_IN inventTransferLineIN = inventTransLine.inventTransferLine_IN();
        taxVal          = this.checkFormType(inventTransLine);

        transTaxInformation = TransTaxInformationHelper::findOrCreateTransTaxInformationByRecord(inventTransLine);

        ttsbegin;

        if (taxVal == 0 && inventTransferLineIN.Retention > 0)
        {
            if (transTaxInformation.SalesTaxFormTypes != 0)
            {
                if (!vatRetTrans)
                {
                    vatRetTrans.vatTransferID = inventTransLine.TransferId;
                    vatRetTrans.vatTransId    = inventTransLine.InventTransId;
                    vatRetTrans.Percent       = inventTransferLineIN.Retention;
                    if (_callerForm)
                    {
                        inventTransferLineIN.NetAmount = inventTransferLineIN.UnitPrice * _shipNow;
                        inventTransLine.QtyTransfer  = _shipNow;
                    }

                    vatRetTrans.AmountOrigin = this.calcVATAmt(inventTransLine);
                    vatRetTrans.TaxAmount    = (vatRetTrans.AmountOrigin) * (inventTransferLineIN.Retention / 100);
                    vatRetTrans.insert();
                }
                else if (vatRetTrans)
                {
                    vatRetTrans.selectForUpdate(true);
                    vatRetTrans.vatTransferID = inventTransLine.TransferId;
                    vatRetTrans.vatTransId    = inventTransLine.InventTransId;
                    vatRetTrans.Percent       = inventTransferLineIN.Retention;
                    if (_callerForm)
                    {
                        inventTransferLineIN.NetAmount = inventTransferLineIN.UnitPrice * _shipNow;
                        inventTransLine.QtyTransfer  = _shipNow;
                    }

                    vatRetTrans.AmountOrigin  = this.calcVATAmt(inventTransLine);
                    vatRetTrans.TaxAmount     = (vatRetTrans.AmountOrigin) * (inventTransferLineIN.Retention / 100);
                    vatRetTrans.update();
                }
            }
            else if (vatRetTrans  &&  transTaxInformation.SalesTaxFormTypes == 0)
            {
                vatRetTrans.selectForUpdate(true);
                vatRetTrans.AmountOrigin = 0;
                vatRetTrans.Percent      = 0;
                vatRetTrans.TaxAmount    = 0;

                vatRetTrans.update();
            }
        }
        else if ((taxVal != 0  &&  inventTransferLineIN.Retention > 0) || inventTransferLineIN.Retention == 0)
        {
            if (vatRetTrans)
            {
                vatRetTrans.selectForUpdate(true);
                vatRetTrans.AmountOrigin = 0;
                vatRetTrans.Percent      = 0;
                vatRetTrans.TaxAmount    = 0;
                vatRetTrans.update();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTransferTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to initialize the <c>VATRetentionTrans_IN</c> table.
    /// </summary>
    /// <param name="_inventTransferId">
    /// A invent transfer ID.
    /// </param>
    /// <param name="_callerForm">
    /// A form caller.
    /// </param>
    public void initFromInventTransferTable(InventTransferId    _inventTransferId = '',
                                            str                 _callerForm = '')
    {
        InventTransferParmLine  inventTransferParmLine;
        InventTransferParmTable inventTransferParmTable;

        select reverse firstonly ParmId
            from inventTransferParmTable
            where inventTransferParmTable.TransferId == _inventTransferId;

        while select InventTransId, QtyShipNow
            from inventTransferParmLine
            where inventTransferParmLine.TransferId == _inventTransferId
               && inventTransferParmLine.ParmId     == inventTransferParmTable.ParmId
        {
            this.initFromInventTransferLine(inventTransferParmLine.InventTransId, _callerForm, inventTransferParmLine.QtyShipNow);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to build and return the query.
    /// </summary>
    /// <param name="_inventTransferParmTable">
    /// A buffer of <c>InventTransferParmTable</c> table.
    /// </param>
    /// <returns>
    /// Returns the query.
    /// </returns>
    public static Query getQuery(InventTransferParmTable _inventTransferParmTable)
    {
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource;
        InventTransferParmLine  inventTransferParmLine;

        queryBuildDataSource = query.addDataSource(tableNum(VATRetentionTrans_IN));

        select firstonly inventTransferParmLine
            where inventTransferParmLine.ParmId == _inventTransferParmTable.ParmId;
        if (!inventTransferParmLine)
        {
            queryBuildDataSource.addRange(fieldNum(VATRetentionTrans_IN, vatTransId)).value(queryValue(inventTransferParmLine.InventTransId));
        }
        else
        {
            while select InventTransId
                from inventTransferParmLine
                where inventTransferParmLine.ParmId == _inventTransferParmTable.ParmId
            {
                queryBuildDataSource.addRange(fieldNum(VATRetentionTrans_IN, vatTransId)).value(queryValue(inventTransferParmLine.InventTransId));
            }
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vatRetentionCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used sum up the tax amount.
    /// </summary>
    /// <param name="_transferId">
    /// A invent transfer ID.
    /// </param>
    /// <returns>
    /// Returns the tax amount.
    /// </returns>
    public static Amount vatRetentionCalc(InventTransferId _transferId)
    {
        VATRetentionTrans_IN    vatRetentionTrans;

        select sum(TaxAmount) from vatRetentionTrans
            where vatRetentionTrans.vatTransferID == _transferId;

        return vatRetentionTrans.TaxAmount;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS64195</DeveloperDocumentation>
	<Label>@GLS5926</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>VATTransferID</TitleField1>
	<TitleField2>VATTransId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS6928</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VATId</Name>
			<Label>@GLS5004</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VATTransferID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATTransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountOrigin</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NetAmount_IN</ExtendedDataType>
			<Label>@SYS21950</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percent</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxValue</ExtendedDataType>
			<Label>@SYS15774</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NetAmount_IN</ExtendedDataType>
			<Label>@SYS76123</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VATTransferID</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventTransferId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VATTransId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventTransIdShipment</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTransferTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VATTransferID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VATTransId</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VATTransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransferLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventTransferLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VATTransId</Name>
					<Field>VATTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransferTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransferTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransferTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransferTable_VATRetentionTrans_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VATTransferID</Name>
					<SourceEDT>InventTransferId</SourceEDT>
					<Field>VATTransferID</Field>
					<RelatedField>TransferId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransferIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VATTransId</Name>
					<SourceEDT>InventTransIdShipment</SourceEDT>
					<Field>VATTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>