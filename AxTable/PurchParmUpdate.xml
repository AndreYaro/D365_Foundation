<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchParmUpdate</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchParmUpdate extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>clearBillOfEntryNumber_IN</Name>
				<Source><![CDATA[
    // Updates all PurchParmTable lines with the BillOfEntry number specified on PurchParmUpdate
    private void clearBillOfEntryNumber_IN()
    {
        PurchParmTable  purchParmTableLoc;
        PurchParmLine   purchParmLineLoc;
        PurchParmLine_IN   purchParmLineIN;

        ttsbegin;

        update_recordset purchParmTableLoc
            setting CustomsBillOfEntryNumberTable_IN = 0
                where purchParmTableLoc.ParmId == this.ParmId;

        update_recordset purchParmLineIN
            setting CustomsBillOfEntryNumberTable = 0
            exists join purchParmLineLoc
                where purchParmLineLoc.ParmId == this.ParmId
                    && purchParmLineIN.PurchParmLine == purchParmLineLoc.RecId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearParmTableTotals</Name>
				<Source><![CDATA[
    void  clearParmTableTotals()
    {
        PurchParmTable  purchParmTable;
        VendInvoiceInfoTable vendInvoiceInfoTable;
        VendParameters vendParameters;

        ttsbegin;

        if (this.DocumentStatus == DocumentStatus::Invoice || this.DocumentStatus == DocumentStatus::ApproveJournal
        // <GEERU>
         || this.DocumentStatus == DocumentStatus::Facture_RU
        // </GEERU>
        // <GEEPL>
         || this.DocumentStatus == DocumentStatus::PlSAD
        // </GEEPL>
            )
        {
            vendParameters = VendParameters::find();

            while select forupdate vendInvoiceInfoTable
                where vendInvoiceInfoTable.ParmId == this.ParmId
            {
                vendInvoiceInfoTable.CashDisc               = 0.0;
                vendInvoiceInfoTable.CashDiscDate           = dateNull();
                vendInvoiceInfoTable.EndDisc                = 0.0;
                vendInvoiceInfoTable.InvoiceRoundOff        = 0.0;
                vendInvoiceInfoTable.ReCalculate            = NoYes::Yes;
                vendInvoiceInfoTable.TransportationDocument = 0;

                if (vendParameters.UseTotalPriceMatching == NoYes::Yes)
                {
                    vendInvoiceInfoTable.approveVariance(false, false);
                }

                vendInvoiceInfoTable.doUpdate();
            }
        }
        else
        {
            update_recordset purchParmTable
                setting
                    CashDisc         = 0.0,
                    CashDiscDate     = dateNull(),
                    EndDisc          = 0.0,
                    InvoiceRoundOff  = 0.0,
                    ReCalculate      = NoYes::Yes
                where purchParmTable.ParmId == this.ParmId;
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSysLastValue</Name>
				<Source><![CDATA[
    void initFromSysLastValue(PurchParmUpdate _purchParmUpdate)
    {
        this.SpecQty    = _purchParmUpdate.SpecQty;
        this.Proforma   = _purchParmUpdate.Proforma;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCreditCheckEligible</Name>
				<Source><![CDATA[
    boolean isCreditCheckEligible()
    {
        return  this.DocumentStatus == DocumentStatus::PackingSlip      ||
                this.DocumentStatus == DocumentStatus::Invoice          ||
                this.DocumentStatus == DocumentStatus::ProjectInvoice   ||
                // <GEERU>
                this.DocumentStatus == DocumentStatus::Facture_RU       ||
                // </GEERU>
                // <GEEPL>
                this.DocumentStatus == DocumentStatus::PlSAD            ||
                // </GEEPL>
                this.DocumentStatus == DocumentStatus::ProjectPackingSlip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies a specified field.
    /// </summary>
    /// <param name="_fieldName">
    /// The field Name of the field to modify.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index of the field.
    /// </param>
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);
        // <GIN>
        switch (_fieldName)
        {
            case fieldStr(PurchParmUpdate, CustomsBillOfEntry_IN) :
                if (TaxParameters::isCustomsEnable_IN())
                {
                    if (this.CustomsBillOfEntry_IN == NoYes::No)
                    {
                        this.CustomsBillOfEntryNumberTable_IN = 0;
                    }
                    else
                    {
                        this.clearBillOfEntryNumber_IN();
                    }
                }
                break;
        }
        // </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfLines</Name>
				<Source><![CDATA[
    display Lines  numberOfLines()
    {
        PurchParmLine           purchParmLine;
        VendInvoiceInfoLine     vendInvoiceInfoLine;

        if (this.DocumentStatus == DocumentStatus::Invoice || this.DocumentStatus == DocumentStatus::ApproveJournal
        // <GEERU>
         || this.DocumentStatus == DocumentStatus::Facture_RU
        // </GEERU>
        // <GEEPL>
         || this.DocumentStatus == DocumentStatus::PlSAD
        // </GEEPL>
            )
        {
            select count(RecId) from vendInvoiceInfoLine
                where vendInvoiceInfoLine.ParmId == this.ParmId;

            return any2int(vendInvoiceInfoLine.RecId);
        }
        else
        {
            select count(RecId) from purchParmLine
                where purchParmLine.ParmId == this.ParmId;

            return any2int(purchParmLine.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfSubTables</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the number of rows in the appropriate SubTable associated with the current <c>PurchParmUpdate</c> record.
    /// </summary>
    /// <returns>
    /// The number of rows in the SubTable associated with the current <c>PurchParmUpdate</c> record.
    /// </returns>
    public Counter numberOfSubTables()
    {
        PurchParmSubTable  purchParmSubTable;
        VendInvoiceInfoSubTable vendInvoiceInfoSubTable;

        if (this.DocumentStatus == DocumentStatus::Invoice || this.DocumentStatus == DocumentStatus::ApproveJournal
             || this.DocumentStatus == DocumentStatus::Facture_RU
             || this.DocumentStatus == DocumentStatus::PlSAD
            )
        {
            select count(RecId) from vendInvoiceInfoSubTable
                where vendInvoiceInfoSubTable.ParmId == this.ParmId;

            return any2int(vendInvoiceInfoSubTable.RecId);
        }
        else
        {
            select count(RecId) from purchParmSubTable
                where purchParmSubTable.ParmId == this.ParmId;

            return any2int(purchParmSubTable.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfTables</Name>
				<Source><![CDATA[
    public display Counter  numberOfTables()
    {
        PurchParmTable  purchParmTable;
        VendInvoiceInfoTable vendInvoiceInfoTable;

        if (this.DocumentStatus == DocumentStatus::Invoice || this.DocumentStatus == DocumentStatus::ApproveJournal
        // <GEERU>
         || this.DocumentStatus == DocumentStatus::Facture_RU
        // </GEERU>
        // <GEEPL>
         || this.DocumentStatus == DocumentStatus::PlSAD
        // </GEEPL>
            )
        {
            select count(RecId) from vendInvoiceInfoTable
                where vendInvoiceInfoTable.ParmId == this.ParmId;

            return any2int(vendInvoiceInfoTable.RecId);
        }
        else
        {
            select count(RecId) from purchParmTable
                where purchParmTable.ParmId == this.ParmId;

            return any2int(purchParmTable.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>processingTime</Name>
				<Source><![CDATA[
    display SysInt64  processingTime()
    {
        return DateTimeUtil::getDifference(this.EndDateTime,this.StartDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateNow</Name>
				<Source><![CDATA[
    edit boolean  updateNow(boolean  set, boolean  _updateNow)
    {
        if (set)
            this.Proforma = ! this.Proforma;

        return ! this.Proforma;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
        boolean custParameterMarked = TaxParameters::checkParameterForPosting_IN(TaxType_IN::Customs);

        ret = super(_fieldIdToCheck);
        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(PurchParmUpdate, CustomsBillOfEntryNumberTable_IN):
                    if (custParameterMarked
                        && this.CustomsBillOfEntryNumberTable_IN
                        && !CustomsBillOfEntryNumberTable_IN::checkBillOfEntryNumber(CustomsBillOfEntryNumberTable_IN::find(this.CustomsBillOfEntryNumberTable_IN).BillOfEntryNumber))
                    {
                        ret = checkFailed(strFmt("@GLS5649",this.CustomsBillOfEntryNumberTable_IN));
                    }
                    break;

                default:
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteWithoutUpdate</Name>
				<Source><![CDATA[
    static void  deleteWithoutUpdate(ParmId  parmId)
    {
        PurchParmUpdate  purchParmUpdate;

        ttsbegin;

        delete_from purchParmUpdate
            index hint ParmIdIdx
            where purchParmUpdate.ParmId == parmId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean  exist(Num  parmId)
    {
        if (parmId)
        {
            return (select firstonly RecId from purchParmUpdate
                        index hint ParmIdIdx
                        where purchParmUpdate.ParmId == parmId
                   ).RecId != 0;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static PurchParmUpdate  find(Num        parmId,
                                 boolean    update = false)
    {
        PurchParmUpdate  purchParmUpdate;

        if (parmId)
        {
            purchParmUpdate.selectForUpdate(update);

            select firstonly purchParmUpdate
                index hint ParmIdIdx
                where purchParmUpdate.ParmId == parmId;
        }

        return purchParmUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBillOfEntryNumber_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the CustomsBillOfEntryNumberTable_IN field of PurchParmTable with the PurchParmUpdate table CustomsBillOfEntryNumberTable_IN field.
    /// </summary>
    /// <param name="_purchParmUpdate">PurchParmUpdate table buffer</param>

    // This method updates the all PurchParmTable lines with the BillOfEntry number specified on PurchParmUpdate
    public static void setBillOfEntryNumber_IN(PurchParmUpdate _purchParmUpdate)
    {
        PurchParmTable  purchParmTableLoc;

        ttsbegin;

        update_recordset purchParmTableLoc
           setting CustomsBillOfEntryNumberTable_IN = _purchParmUpdate.CustomsBillOfEntryNumberTable_IN
           where purchParmTableLoc.ParmId == _purchParmUpdate.ParmId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProformaValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sets the value of the proforma field on a purchparmupdate record.
    /// </summary>
    /// <param name="_parmId">
    /// The parmId of the PurchParmUpdate record to be updated.
    /// </param>
    /// <param name="_proforma">
    /// The boolean value of the Proforma field.
    /// </param>
    public static void setProformaValue(ParmId _parmId, boolean _proforma)
    {
        PurchParmUpdate purchParmUpdate = PurchParmUpdate::find(_parmId, true);

        ttsBegin;
        purchParmUpdate.Proforma = _proforma;
        purchParmUpdate.update();
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasEGAISItems_RU</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the current update involves EGAIS items.
    /// </summary>
    /// <returns>
    ///    true, if the current update involves EGAIS items; otherwise, false.
    /// </returns>
    public boolean hasEGAISItems_RU()
    {
        PurchParmLine               purchParmLine;
        VendInvoiceInfoLine         vendInvoiceInfoLine;
        InventDim                   inventDim;
        EGAISAlcoholProduction_RU   alcoholProduction;
        #ISOCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            if (   this.DocumentStatus == DocumentStatus::Invoice
                || this.DocumentStatus == DocumentStatus::ApproveJournal
                || this.DocumentStatus == DocumentStatus::Facture_RU)
            {
                select firstonly RecId from vendInvoiceInfoLine
                    where vendInvoiceInfoLine.ParmId == this.ParmId
                exists join inventDim
                    where inventDim.inventDimId == vendInvoiceInfoLine.InventDimId
                exists join alcoholProduction
                    where alcoholProduction.ItemId          == vendInvoiceInfoLine.ItemId
                       && alcoholProduction.ConfigId        == inventDim.configId
                       && alcoholProduction.InventSizeId    == inventDim.InventSizeId
                       && alcoholProduction.InventColorId   == inventDim.InventColorId
                       && alcoholProduction.InventVersionId == inventDim.InventVersionId
                       && alcoholProduction.InventStyleId   == inventDim.InventStyleId;

                return (vendInvoiceInfoLine.RecId != 0);
            }
            else
            {
                select firstonly RecId from purchParmLine
                    where purchParmLine.ParmId == this.ParmId
                exists join inventDim
                    where inventDim.inventDimId == purchParmLine.InventDimId
                exists join alcoholProduction
                    where alcoholProduction.ItemId          == purchParmLine.ItemId
                       && alcoholProduction.ConfigId        == inventDim.configId
                       && alcoholProduction.InventSizeId    == inventDim.InventSizeId
                       && alcoholProduction.InventColorId   == inventDim.InventColorId
                       && alcoholProduction.InventStyleId   == inventDim.InventStyleId
                       && alcoholProduction.InventVersionId == inventDim.InventVersionId;

                return (purchParmLine.RecId != 0);
            }
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124540</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS78610</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>DocumentStatus</TitleField1>
	<TitleField2>ParmId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ParmIdIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>ParmIdIdx</PrimaryIndex>
	<ReplacementKey>ParmIdIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>PurchParmTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>PurchParmTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SpecQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Proforma</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckCreditMax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Storno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreditRemaining</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumPurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Customs_IN</Name>
			<Label>@GLS5007</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustomsImportOrderType_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomsBillOfEntry_IN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomsBillOfEntryNumberTable_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Proforma</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Parameters</Name>
			<Label>@SYS26953</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SpecQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Proforma</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckCreditMax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Storno</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StornoPhysical_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreditRemaining</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumPurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LateSelection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumIncludePending</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SplitPostingProfile_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SplitInventProfileType_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProcessingTime</Name>
			<Label>@SYS28567</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>processingTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>numberOfLines</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SplitDeliveryInformation_IN</Name>
			<Label>@SYS26953</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SplitDeliveryInformation_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Zakat_SA</Name>
			<Label>@SYS321586</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchId_SA</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckCreditMax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCreditMaxCheck</ExtendedDataType>
			<Label>@SYS13905</Label>
			<EnumType>TypeOfCreditmaxCheck</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreditRemaining</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS25785</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustomsBillOfEntry_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS5641</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustomsBillOfEntryNumberTable_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS36260</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustomsImportOrderType_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CustomsImportOrderType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DocumentStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>DocumentStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>EndDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EndDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LateSelection</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LateSelection</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>LateSelectionQuery</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LateSelectionQuery</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParmId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Proforma</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS71007</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchId_SA</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>SA</CountryRegionCodes>
			<ExtendedDataType>PurchId</ExtendedDataType>
			<Label>@SYS322165</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SpecQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS14578</Label>
			<EnumType>PurchUpdate</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SplitDeliveryInformation_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SplitInventProfileType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS113777</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SplitPostingProfile_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS113776</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>StartDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>StartDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Storno</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS6054</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StornoPhysical_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<Label>@GLS114781</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SumBy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS25665</Label>
			<EnumType>AccountOrder</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SumIncludePending</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS122793</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SumNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SumPurchId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ParmIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CustomsBillOfEntryNumberTable_INIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CustomsBillOfEntryNumberTable_IN</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>FormletterParmUpdate</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ParmId</MapField>
					<MapFieldTo>ParmId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StartDateTime</MapField>
					<MapFieldTo>StartDateTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EndDateTime</MapField>
					<MapFieldTo>EndDateTime</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustomsBillOfEntryNumberTable_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustomsBillOfEntryNumberTable_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustomsBillOfEntryNumberTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomsBillOfEntryNumberTable_IN_PurchParmUpdate</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustomsBillOfEntryNumberTable_IN</Name>
					<Field>CustomsBillOfEntryNumberTable_IN</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchTable_SA</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchTable_SA</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchParmUpdate</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchId_SA</Name>
					<SourceEDT>PurchId</SourceEDT>
					<Field>PurchId_SA</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PurchIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SummaryPurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SummaryPurchTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchParmUpdate</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SumPurchId</Name>
					<SourceEDT>PurchId</SourceEDT>
					<Field>SumPurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>