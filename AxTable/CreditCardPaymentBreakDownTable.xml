<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CreditCardPaymentBreakDownTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class CreditCardPaymentBreakDownTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    internal static CreditCardPaymentBreakDownTable findByRecId(RecId _recId, boolean _forUpdate = false)
    {
        CreditCardPaymentBreakDownTable creditCardPaymentBreakDownTable;
        creditCardPaymentBreakDownTable.selectForUpdate(_forUpdate);
        select firstonly creditCardPaymentBreakDownTable
            where creditCardPaymentBreakDownTable.RecId == _recId;
        return creditCardPaymentBreakDownTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByExecutionId</Name>
				<Source><![CDATA[
    internal static CreditCardPaymentBreakDownTable findByExecutionId(CreditCardPaymentExecutionId _creditCardPaymentExecutionId)
    {
        CreditCardPaymentBreakDownTable creditCardPaymentBreakDownTable;
        select firstonly creditCardPaymentBreakDownTable
            where creditCardPaymentBreakDownTable.CreditCardPaymentExecutionId == _creditCardPaymentExecutionId;
        return creditCardPaymentBreakDownTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBySalesIdAndInvoiceJourId</Name>
				<Source><![CDATA[
    internal static CreditCardPaymentBreakDownTable findBySalesIdAndInvoiceJourId(SalesId _salesId, SalesInvoiceId _salesInvoiceId)
    {
        CreditCardPaymentBreakDownTable creditCardPaymentBreakDownTable;
        select firstonly creditCardPaymentBreakDownTable
            where creditCardPaymentBreakDownTable.SalesId == _salesId
                && creditCardPaymentBreakDownTable.SalesInvoiceId == _salesInvoiceId;
        return creditCardPaymentBreakDownTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInActiveBatchJob</Name>
				<Source><![CDATA[
    internal boolean isInActiveBatchJob()
    {
        BatchJob batchJob;

        select firstonly batchJob
            where batchJob.caption == CreditCardBreakDownRunnerHelper::getCaptionStr(this.RecId)
                && batchJob.Company == curExt()
                && (batchJob.Status == BatchStatus::Ready
                    || batchJob.Status == BatchStatus::Waiting
                    || batchJob.Status == BatchStatus::Scheduled
                    || batchJob.Status == BatchStatus::Executing);

        return batchJob.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renderCreditCardPaymentStatus</Name>
				<Source><![CDATA[
    display str renderCreditCardPaymentStatus()
    {
        if (this.isInActiveBatchJob())
        {
            return '';
        }
        else
        {
            switch (this.CreditCardPaymentStatus)
            {
                case CreditCardPaymentStatus::Calculated:
                    return "@CashManagement:CreditCardPaymentBreakDownErrorCategoryCalculated";
                case CreditCardPaymentStatus::Captured:
                    return "@CashManagement:CreditCardPaymentBreakDownErrorCategoryCaptured";
                case CreditCardPaymentStatus::PaymentPosted:
                    return "@CashManagement:CreditCardPaymentBreakDownErrorCategoryPaymentPosted";
                case CreditCardPaymentStatus::Finalized:
                    return "@CashManagement:CreditCardPaymentBreakDownErrorCategoryFinalized";
                case CreditCardPaymentStatus::Finished:
                    return "@CashManagement:CreditCardPaymentBreakDownErrorCategoryFinished";
                default:
                    return '';
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>retryCount</Name>
				<Source><![CDATA[
    display int retryCount()
    {
        CreditCardPaymentBreakDownExecutionLog creditCardPaymentBreakDownExecutionLog;
        Set executionIdSet = new Set(Types::Guid);

        while select CreditCardPaymentExecutionId from creditCardPaymentBreakDownExecutionLog
            group by CreditCardPaymentExecutionId
            where creditCardPaymentBreakDownExecutionLog.CreditCardPaymentBreakDownTable == this.RecId
        {
            executionIdSet.add(creditCardPaymentBreakDownExecutionLog.CreditCardPaymentExecutionId);
        }
        
        return executionIdSet.elements();
    }

]]></Source>
			</Method>
			<Method>
				<Name>connectorName</Name>
				<Source><![CDATA[
    display str connectorName()
    {
        RecId processorRecId = CreditCardCust::find(SalesTable::find(this.SalesId).CreditCardCustRefId).CreditCardProcessors;
        
        return CreditCardAccountSetUp::find(processorRecId).ConnectorName;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@CashManagement:CreditCardPaymentBreakDownTable</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>SalesId</TitleField1>
	<TitleField2>SalesInvoiceId</TitleField2>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Payments</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreditCardSalesOrderType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CreditCardSalesOrderType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreditCardPaymentProcessingStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CreditCardPaymentProcessingState</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesInvoiceId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesInvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreditCardPaymentOperation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CreditCardPaymentOperation</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreditCardPaymentStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CreditCardPaymentStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>CreditCardPaymentExecutionId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CreditCardPaymentExecutionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>CustInvoiceJourContainer</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CreditCardPaymentInfoContainer</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>SalesTableContainer</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CreditCardPaymentInfoContainer</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>MCRCustPaymTableContainer</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CreditCardPaymentInfoContainer</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>Amount</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CreditCardPaymentProcessingStatus</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CreditCardPaymentProcessingStatus</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SalesId</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SalesInvoiceId</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesInvoiceId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesId</Name>
					<Field>SalesId</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustInvoiceJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesInvoiceId</Name>
					<Field>SalesInvoiceId</Field>
					<RelatedField>InvoiceId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>