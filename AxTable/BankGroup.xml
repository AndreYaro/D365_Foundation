<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankGroup extends common
{
 
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkRegistrationNum</Name>
				<Source><![CDATA[
    public boolean checkRegistrationNum()
    {
        BankAccountMap  bankAccountMap;

        Bank bank = Bank::construct(SysCountryRegionCode::locationCountryInfo(this.Location));

        bankAccountMap.initFromBankGroup(this);

        return bank.checkBankRegNum(this.RegistrationNum, this.BankCodeType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkVendAccountNum_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks vendor account num correctness.
    /// </summary>
    /// <param name="_vendAccountFrom">
    /// The old vendor account num value.
    /// </param>
    /// <param name="_vendAccountTo">
    /// The new vendor account num value; optional.
    /// </param>
    /// <returns>
    /// true if vendor account num is correct; false otherwise.
    /// </returns>
    public boolean checkVendAccountNum_RU(
        VendAccount _vendAccountFrom,
        VendAccount _vendAccountTo = '')
    {
        boolean     ret = true;
        VendTrans   vendTrans;
        VendTrans_W vendTrans_W;
        BankGroup   bankGroup;

        select firstonly RecId from vendTrans
                where vendTrans.AccountNum == _vendAccountFrom
            exists join vendTrans_W
                where vendTrans_W.VendTrans == vendTrans.RecId &&
                      vendTrans_W.BankCurrencyTransferId_RU;

        if (vendTrans.RecId)
        {
            ret = checkFailed(strFmt("@GLS114408", _vendAccountFrom));
        }

        if (ret && _vendAccountTo)
        {
            select firstonly BankGroupId, Name, RecId from bankGroup
                where bankGroup.VendAccountNum_RU == _vendAccountTo &&
                      bankGroup.RecId             != this.RecId;

            if (bankGroup.RecId)
            {
                ret = checkFailed(strFmt("@GLS114409", _vendAccountTo,  bankGroup.BankGroupId, bankGroup.Name));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromBaseBank_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes current record from the main bank.
    /// </summary>
    public void initFromBaseBank_RU()
    {
        BankGroup bankGroup = BankGroup::find(this.BaseBankId_RU);

        this.BankBIC_RU        = bankGroup.BankBIC_RU;
        this.BankCorrAccount_W = bankGroup.BankCorrAccount_W;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        //<GEERU>
        #isoCountryRegionCodes
        //</GEERU>
        super(_fieldId);

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            switch (_fieldId)
            {
                case fieldNum(BankGroup, BankType_RU)   :
                    if (this.BankType_RU == BankType_RU::Main)
                    {
                        this.BaseBankId_RU = '';
                        this.initFromBaseBank_RU();
                    }
                    break;

                case fieldNum(BankGroup, BaseBankId_RU) :
                    this.initFromBaseBank_RU();
                    break;
            }
        }
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>shortAddressing_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the bank location (in abbreviated form).
    /// </summary>
    /// <returns>
    /// Bank location (in abbreviated form).
    /// </returns>
    public BankShortAddressing_RU shortAddressing_RU()
    {
        return this.BankShortAddressing_RU ? this.BankShortAddressing_RU : LogisticsPostalAddress::findByLocation(this.Location).City;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean             ret;
        // <GEERU>
        BankGroup           bankGroupLocal;
        #isoCountryRegionCodes
        // </GEERU>
        ;

        ret = super(_fieldIdToCheck);
        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(BankGroup, url) :

                    if (this.url)
                    {
                        ret = isValidURL(this.url);
                        if (!ret)
                        {
                            ret = checkFailed("@SYS91305");
                        }
                    }

                    break;
                case fieldNum(BankGroup, RegistrationNum) :
                    ret = this.checkRegistrationNum();
                    break;
                // <GEERU>
                case fieldNum(BankGroup, BankType_RU) :
                    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                    {
                        select firstonly BankGroupId from bankGroupLocal
                            where bankGroupLocal.BaseBankId_RU == this.BankGroupId;

                        if (bankGroupLocal.BankGroupId)
                        {
                            ret = checkFailed(strFmt("@GLS103484", bankGroupLocal.BankGroupId));
                        }
                    }
                    break;

                case fieldNum(BankGroup, VendAccountNum_RU) :
                    ret = ret && this.checkVendAccountNum_RU(this.orig().VendAccountNum_RU, this.VendAccountNum_RU);
                    break;
                // </GEERU>
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
        // <GEERU>
        #isoCountryRegionCodes
        // </GEERU>

        ret = super();
        if (ret)
        {
            ret = this.checkRegistrationNum();
        }

        // <GEERU>
        if (ret && SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            if (this.BankGroupId == this.BaseBankId_RU)
            {
                ret = checkFailed("@GLS103481");
            }
            if (this.BankType_RU == BankType_RU::Branch && ! this.BaseBankId_RU)
            {
                ret = checkFailed("@GLS103482");
            }
            if (this.BankType_RU                                == BankType_RU::Branch &&
                BankGroup::find(this.BaseBankId_RU).BankType_RU == BankType_RU::Branch)
            {
                ret = checkFailed("@GLS103483");
            }
        }
        // </GEERU>

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(BankGroupId _bankGroupId )
    {
        boolean ret = true;
        ;

        if (!BankGroup::exist(_bankGroupId))
        {
            ret = checkFailed(strfmt(BankGroup::txtNotExist(), _bankGroupId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(BankGroupId _bankGroupId )
    {
        boolean found;
        ;

        found = (select firstonly
                     RecId
                from
                     bankGroup
                 where
                     bankGroup.BankGroupId == _bankGroupId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static BankGroup find(
        BankGroupId _bankGroupId ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        BankGroup bankGroup;
        ;

        bankGroup.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            bankGroup.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            bankGroup
            where
            bankGroup.BankGroupId == _bankGroupId;

        return bankGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByBic_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds <c>BankGroup</c> record by the specified BIC.
    /// </summary>
    /// <param name="_bic">
    /// Bank identification number.
    /// </param>
    /// <param name="_forupdate">
    /// A <c>Boolean</c> determining whether to select the record for update.
    /// </param>
    /// <returns>
    /// <c>BankGroup</c> record found by the given BIC.
    /// </returns>
    public static BankGroup findByBic_RU(
        BankBIC_RU _bic,
        boolean    _forupdate = false)
    {
        BankGroup bankGroup;

        bankGroup.selectForUpdate(_forupdate);

        select firstonly bankGroup
            where bankGroup.BankBIC_RU == _bic;

        return bankGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCompany_W</Name>
				<Source><![CDATA[
    public static BankGroup findByCompany_W(
        CompanyId        _companyId,
        BankGroupId      _bankGroupId,
        boolean          _forupdate        = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        BankGroup bankGroup;

        changecompany(_companyId)
        {
            bankGroup = BankGroup::find(_bankGroupId, _forupdate, _concurrencyModel);
        }

        return bankGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupBankGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides a lookup for the <c>BankGroup</c> table.
    /// </summary>
    /// <param name="_ctrl">
    /// The form string control object with which to perform the lookup.
    /// </param>
    public static void lookupBankGroup(FormStringControl _ctrl)
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tablenum(BankGroup),_ctrl);
        Query                   query = new Query();

        query.addDataSource(tablenum(BankGroup));

        sysTableLookup.addLookupfield(fieldnum(BankGroup,BankGroupId));
        sysTableLookup.addLookupfield(fieldnum(BankGroup,Name));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupBankType_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs Bank group lookup fileted by bank type.
    /// </summary>
    /// <param name="_bankType">
    /// Bank type to filter by.
    /// </param>
    /// <param name="_lookupControl">
    /// The control which called the lookup.
    /// </param>
    public static void lookupBankType_RU(BankType_RU _bankType, FormControl _lookupControl)
    {
        SysTableLookup       sysTableLookup = SysTableLookup::newParameters(tablenum(BankGroup), _lookupControl, true);
        Query                query          = new Query();
        QueryBuildDataSource qbds           = query.addDataSource(tablenum(BankGroup));
        ;

        sysTableLookup.addLookupfield(fieldnum(BankGroup, BankGroupId), true);
        sysTableLookup.addLookupfield(fieldnum(BankGroup, Name));
        sysTableLookup.addLookupfield(fieldnum(BankGroup, BankType_RU));

        findOrCreateRange_W(qbds, fieldnum(BankGroup, BankType_RU), queryValue(_bankType));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS28261";
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkBankNameKanaMatchesJBAFormat_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if the bank kana name matches JBA format.
    /// </summary>
    /// <returns>
    /// True if bank kana name matches JBA format; otherwise, false.
    /// </returns>
    public boolean checkBankNameKanaMatchesJBAFormat_JP()
    {
        boolean doesNameKanaMatchJBAFormat = true;

        if (Bank_JP::nameKanaValidatePaymentFileNeeded())
        {
            doesNameKanaMatchJBAFormat = Bank_JP::validateBankNameKana(this.NameKana_JP);
        }

        return doesNameKanaMatchJBAFormat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkBranchNameKanaMatchesJBAFormat_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if the branch kana name matches JBA format.
    /// </summary>
    /// <returns>
    /// True if branch kana name matches JBA format; otherwise, false.
    /// </returns>
    public boolean checkBranchNameKanaMatchesJBAFormat_JP()
    {
        boolean doesNameKanaMatchJBAFormat = true;

        if (Bank_JP::nameKanaValidatePaymentFileNeeded())
        {
            doesNameKanaMatchJBAFormat = Bank_JP::validateBankNameKana(this.BranchNameKana_JP);
        }

        return doesNameKanaMatchJBAFormat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkNameKanaMatchesJBAFormat_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if the bank kana name and branch kana name matches JBA format.
    /// </summary>
    /// <returns>
    /// True if bank kana name and branch kana name matches JBA format; otherwise, false.
    /// </returns>
    public boolean checkNameKanaMatchesJBAFormat_JP()
    {
        boolean doesNameKanaMatchJBAFormat = true;

        if (Bank_JP::nameKanaValidatePaymentFileNeeded())
        {
            doesNameKanaMatchJBAFormat = Bank_JP::validateBankNameKana(this.NameKana_JP) && Bank_JP::validateBankNameKana(this.BranchNameKana_JP);
        }

        return doesNameKanaMatchJBAFormat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupTemplateReference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides values for template lookups.
    /// </summary>
        public Common lookupTemplateReference(FormReferenceControl _formControl)
    {
        Query query = new Query();
        QueryBuildDataSource docuRefDs = query.addDataSource(tableNum(DocuRef));
        docuRefDs.addRange(fieldNum(DocuRef, RefTableId)).value(queryValue(this.TableId));
        docuRefDs.addRange(fieldNum(DocuRef, RefRecId)).value(queryValue(this.RecId));

        QueryBuildDataSource docuValueDs = docuRefDs.addDataSource(tableNum(DocuValue));
        docuValueDs.relations(true);
        docuValueDs.addRange(fieldNum(DocuValue, filetype)).value('docx');

        SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(DocuRef), _formControl);
        sysTableLookup.addLookupfield(fieldNum(DocuRef, Name));
        sysTableLookup.addLookupfield(fieldNum(DocuRef, Notes));
        sysTableLookup.addLookupfield(fieldNum(DocuRef, CreatedDateTime));
        sysTableLookup.parmQuery(query);
        
        DocuRef selectedRecord = sysTableLookup.performFormLookup();
        return selectedRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DocuRefOnDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if attachment is in use before deleting.
    /// </summary>
    [SubscribesTo(tablestr(DocuRef), delegatestr(DocuRef, OnValidateDelete))]
    static void DocuRefOnDelete(DocuRef _docuRef)
    {
        BankGroup bankGroup;
        select firstonly BankGroupId  from bankGroup
            where bankGroup.TemplateRefRecId == _docuRef.RecId
            || bankGroup.CurrencyTemplateRefRecId == _docuRef.RecId;

        if (bankGroup)
        {
            throw error(strFmt("@CashManagement:AttachmentInUseByBankGroup", bankGroup.BankGroupId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankLogisticsPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>LogisticPostalAddress</c> record related to the current location.
    /// </summary>
    /// <returns>
    /// The <c>LogisticPostalAddress</c> record.
    /// </returns>
    public LogisticsPostalAddress getBankLogisticsPostalAddress()
    {
        return LogisticsPostalAddress::findByLocation(this.Location);
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>LogisticsAddressCityName</c> related to the current city.
    /// </summary>
    /// <returns>
    /// The <c>LogisticsAddressCityName</c> object.
    /// </returns>
    public display LogisticsAddressCityName displayCity()
    {
        return this.getBankLogisticsPostalAddress().City;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Bank</ConfigurationKey>
	<DeveloperDocumentation>@SYS127026</DeveloperDocumentation>
	<FormRef>BankGroup</FormRef>
	<Label>@SYS54424</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>RegistrationNum</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>BankGroupIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>Bank</Modules>
	<PrimaryIndex>BankGroupIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>BankAccountTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>BankAccountTable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>CustBankAccount</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>CustBankAccount</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>LogisticsLocation</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>LogisticsLocation</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>VendBankAccount</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>VendBankAccount</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankDescription_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankBIC_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BankDetails</Name>
			<Label>@GLS60008</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Code_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NameKana_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BranchCode_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BranchName_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BranchNameKana_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankName_JP</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BankReconciliation</Name>
			<Label>@SYS69067</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankStatementName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankStatementFormat</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BankShortAddressing_RU</Name>
			<Label>@GLS103103</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankShortAddressing_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BankType_RU</Name>
			<Label>@GLS103099</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankArchive_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BaseBankId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ContactInfo</Name>
			<Label>@SYS21663</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContactPerson</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Phone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhoneLocal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CellularPhone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Pager</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Telefax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Email</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SMS</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>URL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Telex</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CorrespondenceAccount_RU</Name>
			<Label>@GLS103604</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankCorrAccount_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccountOpenedIn_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankDescription_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankCodeType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegistrationNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyPaymId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankBIC_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankShortAddressing_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification_RU</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegistrationNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankBIC_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankShortAddressing_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccountNum_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegistrationNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankBIC_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankCorrAccount_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccountOpenedIn_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BaseBankId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaymentManagement</Name>
			<Label>@SYS57540</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankSuffix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankTransferCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaymentOrderInCurrency_RU</Name>
			<Label>@GLS102327</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateFileName_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchaseOfFundsInHardCurrency_RU</Name>
			<Label>@GLS102989</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyOrder_TemplateName_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Setup</Name>
			<Label>@SYS2186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankContractAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SWIFTNo_EE</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EnhancedBankSetup</Name>
			<Label>@ExtendedItallianLocalization:EnhancedBankSetupGroupName</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BranchName_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayCity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankAccountOpenedIn_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankAccountOpenedIn_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankArchive_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankArchive_RU</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankBIC_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankBIC_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankCodeType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BankCodeType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankContractAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>GiroContractAccount</ExtendedDataType>
			<Label>@SYS60305</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankCorrAccount_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankCorrAccount_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankDescription_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankDescription_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankShortAddressing_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankShortAddressing_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BankStatementFormat</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankStatementFormatRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankStatementName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankStatementName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankSuffix</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankSuffix</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankTransferCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankTransferCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BankType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BaseBankId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>BankGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@GLS103109</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BranchCode_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BranchCode_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BranchName_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BranchName_JP</ExtendedDataType>
			<Label>@ExtendedItallianLocalization:BankBranchName</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BranchNameKana_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BranchNameKana_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CellularPhone</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>PhoneMobile</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Code_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankCode_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyPaymId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyPaymId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPerson</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>PersonName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyOrder_TemplateName_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>Filename</ExtendedDataType>
			<Label>@GLS102339</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Email</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Email</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Location</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NameKana_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankNameKana_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Pager</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Pager</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Phone</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Phone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PhoneLocal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PhoneLocal</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RegistrationNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankRegNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SMS</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SMS</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SWIFTNo_EE</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SWIFTNo</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Telefax</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TeleFax</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Telex</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Telex</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TemplateFileName_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>Filename</ExtendedDataType>
			<Label>@GLS102339</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>URL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>URL</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccountNum_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<SysSharingType>Optional</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrganizationNumber_MY</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>MY</CountryRegionCodes>
			<ExtendedDataType>DirOrganizationNumber</ExtendedDataType>
			<Label>@SYS79995</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BankName_JP</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@SYS22737</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TemplateRefRecId</Name>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS102339</Label>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CurrencyTemplateRefRecId</Name>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS102339</Label>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BankGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BankGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>LogisticsLocationMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Location</MapField>
					<MapFieldTo>Location</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankGroup_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BankGroup_FK</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BranchBankGroup_FK</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BaseBankId_RU</Name>
					<Field>BaseBankId_RU</Field>
					<RelatedField>BankGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>BankGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankStatementFormat</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>BankStatementFormat</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankStatementFormat</Name>
					<Field>BankStatementFormat</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Location_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Location_FK</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BankGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Location</Name>
					<Field>Location</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable_FK</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BankGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccountNum_RU</Name>
					<Field>VendAccountNum_RU</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TemplateDocuRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DocuRef</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TemplateRefRecId</Name>
					<Field>TemplateRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CurrencyTemplateDocuRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DocuRef</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyTemplateRefRecId</Name>
					<Field>CurrencyTemplateRefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>