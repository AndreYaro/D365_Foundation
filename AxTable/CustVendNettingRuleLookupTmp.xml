<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendNettingRuleLookupTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustVendNettingRuleLookupTmp extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>performLookupForAgreements</Name>
				<Source><![CDATA[
    internal static void performLookupForAgreements(Name _ruleName, FormControl _control)
    {
        CustVendNettingRuleLookupTmp agreements = CustVendNettingRuleLookupTmp::findAgreements(_ruleName);
        CustVendNettingRuleLookupTmp::buildLookup(_control, fieldNum(CustVendNettingRuleLookupTmp, AgreementName), fieldNum(CustVendNettingRuleLookupTmp, AgreementDescription), agreements).performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>performLookupForRules</Name>
				<Source><![CDATA[
    internal static void performLookupForRules(FormControl _control)
    {
        CustVendNettingRuleLookupTmp rules = CustVendNettingRuleLookupTmp::findRules();
        CustVendNettingRuleLookupTmp::buildLookup(_control, fieldNum(CustVendNettingRuleLookupTmp, RuleName), fieldNum(CustVendNettingRuleLookupTmp, RuleDescription), rules).performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>performLookupForCriteria</Name>
				<Source><![CDATA[
    internal static void performLookupForCriteria(CustVendNettingRuleNettingCriteriaType _type, FormControl _control)
    {
        switch (_type)
        {
            case CustVendNettingRuleNettingCriteriaType::InvCurrency:
                CustVendNettingRuleLookupTmp::buildLookupForCurrencies(_control).performFormLookup();
                break;

            case CustVendNettingRuleNettingCriteriaType::VendAccount:
                CustVendNettingRuleLookupTmp::buildLookupForVendors(_control).performFormLookup();
                break;

            case CustVendNettingRuleNettingCriteriaType::CustAccount:
                CustVendNettingRuleLookupTmp::buildLookupForCustomers(_control).performFormLookup();
                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildLookup</Name>
				<Source><![CDATA[
    private static SysTableLookup buildLookup(FormControl _control, FieldId _returnFieldId, FieldId _descriptionFieldId, CustVendNettingRuleLookupTmp _buffer)
    {
        Query query = new Query();
        query.addDataSource(tableNum(CustVendNettingRuleLookupTmp));

        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(CustVendNettingRuleLookupTmp), _control);
        sysTableLookup.parmQuery(query);
        sysTableLookup.addLookupfield(_returnFieldId, true);
        if (_descriptionFieldId)
        {
            sysTableLookup.addLookupfield(_descriptionFieldId);
        }
        sysTableLookup.parmTmpBuffer(_buffer);
        return sysTableLookup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildLookupForCurrencies</Name>
				<Source><![CDATA[
    private static SysTableLookup buildLookupForCurrencies(FormControl _control)
    {
        CustVendNettingRuleLookupTmp currencies = CustVendNettingRuleLookupTmp::findCurrencies();
        return CustVendNettingRuleLookupTmp::buildLookup(_control, fieldNum(CustVendNettingRuleLookupTmp, CriteriaCurrencyCode), fieldNum(CustVendNettingRuleLookupTmp, CriteriaCurrencyName), currencies);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildLookupForCustomers</Name>
				<Source><![CDATA[
    private static SysTableLookup buildLookupForCustomers(FormControl _control)
    {
        CustVendNettingRuleLookupTmp customers = CustVendNettingRuleLookupTmp::findCustomers();
        return CustVendNettingRuleLookupTmp::buildLookup(_control, fieldNum(CustVendNettingRuleLookupTmp, CustAccountNum), fieldNum(CustVendNettingRuleLookupTmp, CustName), customers);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildLookupForVendors</Name>
				<Source><![CDATA[
    private static SysTableLookup buildLookupForVendors(FormControl _control)
    {
        CustVendNettingRuleLookupTmp vendors = CustVendNettingRuleLookupTmp::findVendors();
        return CustVendNettingRuleLookupTmp::buildLookup(_control, fieldNum(CustVendNettingRuleLookupTmp, VendAccountNum), fieldNum(CustVendNettingRuleLookupTmp, VendName), vendors);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExistingAgreements</Name>
				<Source><![CDATA[
    private static Set getExistingAgreements(Name _ruleName)
    {
        Set existingAgreements = new Set(Types::String);
        CustVendNettingRuleAgreement ruleAgreement;
        while select AgreementName from ruleAgreement
            where ruleAgreement.RuleName == _ruleName
        {
            existingAgreements.add(ruleAgreement.AgreementName);
        }
        return existingAgreements;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAgreements</Name>
				<Source><![CDATA[
    private static CustVendNettingRuleLookupTmp findAgreements(Name _ruleName)
    {
        CustVendNettingRuleLookupTmp tmp;
        CustVendNettingAgreement agreement;
        Set existingAgreements = CustVendNettingRuleLookupTmp::getExistingAgreements(_ruleName);

        while select Name, Description from agreement
        {
            if (!existingAgreements.in(agreement.Name))
            {
                tmp.AgreementName = agreement.Name;
                tmp.AgreementDescription = agreement.Description;
                tmp.insert();
            }
        }

        select tmp;
        return tmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCurrencies</Name>
				<Source><![CDATA[
    private static CustVendNettingRuleLookupTmp findCurrencies()
    {
        CustVendNettingRuleLookupTmp tmp;
        Currency currency;

        while select CurrencyCode, Txt from currency
        {
            tmp.CriteriaCurrencyCode = currency.CurrencyCode;
            tmp.CriteriaCurrencyName = currency.Txt;
            tmp.insert();
        }

        select tmp;
        return tmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCustomers</Name>
				<Source><![CDATA[
    private static CustVendNettingRuleLookupTmp findCustomers()
    {
        CustVendNettingRuleLookupTmp tmp;
        CustTable custTable;

        while select custTable
        {
            tmp.CustAccountNum = custTable.AccountNum;
            tmp.CustName = custTable.name();
            tmp.insert();
        }

        select tmp;
        return tmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findVendors</Name>
				<Source><![CDATA[
    private static CustVendNettingRuleLookupTmp findVendors()
    {
        CustVendNettingRuleLookupTmp tmp;
        VendTable vendTable;

        while select vendTable
        {
            tmp.VendAccountNum = vendTable.AccountNum;
            tmp.VendName = vendTable.name();
            tmp.insert();
        }

        select tmp;
        return tmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRules</Name>
				<Source><![CDATA[
    private static CustVendNettingRuleLookupTmp findRules()
    {
        CustVendNettingRuleLookupTmp tmp;
        CustVendNettingRule rule;

        while select Name, Description from rule
            where rule.Active == NoYes::Yes
        {
            tmp.RuleName = rule.Name;
            tmp.RuleDescription = rule.Description;
            tmp.insert();
        }

        select tmp;
        return tmp;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AgreementName</Name>
			<ExtendedDataType>CustVendNettingAgreementName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AgreementDescription</Name>
			<ExtendedDataType>CustVendNettingAgreementDescription</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CriteriaCurrencyCode</Name>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CriteriaCurrencyName</Name>
			<ExtendedDataType>CurrencyName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccountNum</Name>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustName</Name>
			<ExtendedDataType>DirPartyName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccountNum</Name>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendName</Name>
			<ExtendedDataType>DirPartyName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RuleName</Name>
			<ExtendedDataType>Name</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RuleDescription</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>