<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSNumberSequenceExtReference</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSNumberSequenceExtReference extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findReference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>WHSNumberSequenceReferenceExt</c> record with given parameters.
    /// </summary>
    /// <param name="_numberSequenceReference">
    /// The RecId of the Number sequence reference.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static WHSNumberSequenceExtReference findReference(RecId   _numberSequenceReference,
                                                              boolean _forupdate = false)
    {
        WHSNumberSequenceExtReference numberSequenceExtReference;

        if (_numberSequenceReference)
        {
            numberSequenceExtReference.selectForUpdate(_forupdate);

            select firstonly numberSequenceExtReference
                where numberSequenceExtReference.NumberSequenceReference == _numberSequenceReference;
        }

        return numberSequenceExtReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existReference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a specific <c>WHSNumberSequenceReferenceExt</c> record exists.
    /// </summary>
    /// <param name="_numberSequenceReference">
    /// The RecId of the Number sequence reference.
    /// </param>
    /// <returns>
    /// True if the record exists; otherwise, false.
    /// </returns>
    public static boolean existReference(RecId _numberSequenceReference)
    {
        return (_numberSequenceReference) &&
               (select firstonly RecId from whsNumberSequenceExtReference
                where whsNumberSequenceExtReference.NumberSequenceReference == _numberSequenceReference).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateReference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the current number sequence extension reference record with the provided number sequence reference record.
    /// </summary>
    /// <param name = "_numberSequenceReference">Number sequence reference record.</param>
    /// <returns>True if the record is valid; otherwise, false.</returns>
    [Hookable(false)]
    public boolean validateReference(NumberSequenceReference _numberSequenceReference)
    {
        if (!_numberSequenceReference.NumberSequenceId || !this.NumberSequenceExtId)
        {
            return true;
        }

        WHSNumberSequenceExt numberSequenceExt = WHSNumberSequenceExt::find(this.NumberSequenceExtId);

        if (!numberSequenceExt)
        {
            throw error(strFmt("@WAX:NumberSequenceExtensionDoesNotExist", this.NumberSequenceExtId));
        }

        Integer extentionLength = strLen(WHSNumberSeqExt::createAnnotatedFormatFromSegments(WHSNumberSeqExt::parseAnnotatedFormat(numberSequenceExt.AnnotatedFormat), false));
        NumberSequenceDatatype datatype = NumberSequenceDatatype::find(_numberSequenceReference.NumberSequenceDatatype);

        if (new DictType(datatype.DatatypeId).stringLen() < extentionLength)
        {
            return checkFailed(strFmt("@WAX:NumberSequenceExtensionLongerThanAssignedTypeLengthWarning", this.NumberSequenceExtId));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:Table_WHSNumberSequenceExtReference_DeveloperDocumantation</DeveloperDocumentation>
	<Label>@WAX:NumberSequenceExtensionReferences</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Reference</TableGroup>
	<TitleField1>NumberSequenceReference</TitleField1>
	<TitleField2>NumberSequenceExtId</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>NumberSequenceReferenceIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>NumberSequenceReferenceIdx</PrimaryIndex>
	<ReplacementKey>NumberSequenceReferenceIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceReference</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceReference</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>NumberSequenceReference</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS319207</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NumberSequenceExtId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSNumberSequenceExtId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NumberSequenceReferenceIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>NumberSequenceReference</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>NumberSequenceReference</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>NumberSequenceReference</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NumberSequenceReference</Name>
					<Field>NumberSequenceReference</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSNumberSequenceExt</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSNumberSequenceExt</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NumberSequenceExtId</Name>
					<Field>NumberSequenceExtId</Field>
					<RelatedField>NumberSequenceExtId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>