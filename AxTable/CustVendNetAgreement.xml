<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendNetAgreement</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustVendNetAgreement extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean isValid = super()
            && this.validatePartyHasAtLeastCustomerAndVendorInSameCompany()
            && this.validateCurrencySelectedIfRequired();

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePartyHasAtLeastCustomerAndVendorInSameCompany</Name>
				<Source><![CDATA[
    private boolean validatePartyHasAtLeastCustomerAndVendorInSameCompany()
    {
        boolean isValid = true;
        DirPartyTable dirPartyTable;
        VendTable vendTable;
        CustTable custTable;

        select firstonly crosscompany RecId from dirPartyTable
            where dirPartyTable.RecId == this.Party
            join vendTable
                where vendTable.Party == this.Party
            join custTable
                where custTable.Party == this.Party
                    && custTable.DataAreaId == vendTable.DataAreaId;

        if (!dirPartyTable)
        {
            isValid = checkFailed(strFmt("@CashManagement:CustVendNetAgreementPartyMustHaveCustomerAndVendor", DirPartyTable::getName(this.Party)));
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCurrencySelectedIfRequired</Name>
				<Source><![CDATA[
    private boolean validateCurrencySelectedIfRequired()
    {
        boolean isValid = true;

        if (this.CurrencyType == CustVendNetAgreementCurrencyType::SpecificCurrency && this.CurrencyCode == '')
        {
            isValid = checkFailed("@SYS25991");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePartyHasRelationships</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the netting agreement has a related
    /// <c>CustVendNetAgreementRelationship</c> table record.
    /// </summary>
    /// <returns>true if a relationship exists; otherwise, false.</returns>
    public boolean validatePartyHasRelationships()
    {
        boolean isValid = true;

        CustVendNetAgreementRelationship custVendNetAgreementRelationship;

        select firstonly custVendNetAgreementRelationship
            where custVendNetAgreementRelationship.Party == this.Party;

        if (!custVendNetAgreementRelationship)
        {
            isValid = checkFailed("@CashManagement:CustVendNetAgreementNoRelationshipOffsetAccountFound");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>CustVendNetAgreement</c> table based on party.
    /// </summary>
    /// <param name = "_party">The party ID of the record.</param>
    /// <param name = "_forUpdate">A Boolean value that indicates whether to read the record for update.</param>
    /// <returns>The <c>CustVendNetAgreement</c> record found, if any.</returns>
    public static CustVendNetAgreement find(DirPartyRecId _party, boolean _forUpdate = false)
    {
        CustVendNetAgreement custVendNetAgreement;

        custVendNetAgreement.selectForUpdate(_forUpdate);

        select firstonly custVendNetAgreement
            where custVendNetAgreement.Party == _party;

        return custVendNetAgreement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupDirPartyWithCustVendFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the lookup instance for a party selection with filtering to customers and vendors.
    /// </summary>
    /// <param name="_control">A form reference group control from which the lookup is called.</param>
    /// <param name="_callerRecord">The current record buffer.</param>
    /// <returns>A common buffer that contains the selected record.</returns>
    /// <remarks>The lookup will display any party with a customer or vendor included in the set of roles.</remarks>
    public static Common lookupDirPartyWithCustVendFilter(FormReferenceControl _formReferenceControl, Common _callerRecord)
    {
        Common selectedRecord;

        DirPartyLookupEntitiesFilter dirPartyLookupEntitiesFilter = dirPartyLookupEntitiesFilter::generateDirPartyLookupEntitiesFilter(
            NoYes::No,
            FilterStatus::Set,
            FilterStatus::Set);

        Args args = new Args(formStr(DirPartyLookup));

        args.parmEnumType(enumNum(DirPartyType));
        args.parmObject(dirPartyLookupEntitiesFilter);
        args.record(_callerRecord);
        args.caller(_formReferenceControl);

        if (_formReferenceControl.handle() == classNum(FormReferenceGroupControl))
        {
            FormRun lookupForm = FormAutoLookupFactory::buildReferenceLookupFromCustomForm(_formReferenceControl, new Form(formStr(DirPartyLookup)), args);
            FormAutoLookupFactory::performFormLookup(lookupForm, true, _formReferenceControl);
            selectedRecord = lookupForm.selectRecordModeSelectedRecord();
        }

        return selectedRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(CustVendNetAgreement, CurrencyType):
                if (this.CurrencyType == CustVendNetAgreementCurrencyType::NetPerCurrency)
                {
                    this.CurrencyCode = '';
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean isValid = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(CustVendNetAgreement, Status):
                if (this.Status == CustVendNetAgreementStatus::Active)
                {
                    isValid = isValid && this.validatePartyHasRelationships();
                }
                break;
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@CashManagement:CustVendNetAgeementDeveloperDoc</DeveloperDocumentation>
	<IsObsolete>Yes</IsObsolete>
	<Label>@CashManagement:CustVendNetAgreement</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Party</TitleField1>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>PartyIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Bank</Modules>
	<PrimaryIndex>PartyIdx</PrimaryIndex>
	<ReplacementKey>PartyIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DeleteAction1</Name>
			<DeleteAction>CascadeRestricted</DeleteAction>
			<Relation></Relation>
			<Table>CustVendNetAgreementRelationship</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Party</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>DirPartyRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CustVendNetAgreementStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CurrencyType</Name>
			<AssetClassification>Customer content</AssetClassification>
			<EnumType>CustVendNetAgreementCurrencyType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PartyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Party</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DirPartyTable_FK</Name>
			<Cardinality>ZeroOne</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DirPartyTable_FK</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustVendNetAgreement</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustVendNetAgreementAvailable_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustVendNetAgreementAvailable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CustVendNetAgreementAvailable_FK</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustVendNetAgreementAvailable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Party</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustVendNetAgreementSelected_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustVendNetAgreementSelected</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CustVendNetAgreementSelected_FK</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustVendNetAgreementSelected</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Party</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>