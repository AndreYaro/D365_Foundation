<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CLMIntegrationContractTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CLMIntegrationContractTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.LegalEntity = CompanyInfo::current();
        this.ContactPersonDataAreaId = appl.company().dataArea(tableNum(ContactPerson));
        this.initContractAccountDataAreaId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(CLMIntegrationContractTable, ContractAccountDataAreaId):
                this.initContractAccountDataAreaId();
                break;

            case fieldNum(CLMIntegrationContractTable, Party):
                if (!this.Party)
                {
                    this.resolveDirPartyReference();
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(CLMIntegrationContractTable, ContractAccountDataAreaId),
                [fieldNum(CLMIntegrationContractTable, ContractAccountType)]
            ],
            [fieldNum(CLMIntegrationContractTable, Party),
                [fieldNum(CLMIntegrationContractTable, ContractAccountRelation)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (!this.Party)
        {
            this.resolveDirPartyReference();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        if (this.ContractAccountRelation != this.orig().ContractAccountRelation)
        {
            this.resolveDirPartyReference();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        ret = this.checkContactPerson() && ret;

        return super() && ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkContactPerson</Name>
				<Source><![CDATA[
    private boolean checkContactPerson()
    {
        if (this.ContactPersonId)
        {
            this.resolveDirPartyReference();

            ContactPerson contactPerson = ContactPerson::find(this.ContactPersonId);

            if (contactPerson.ContactForParty != this.Party)
            {
                switch (this.ContractAccountType)
                {
                    case CLMIntegrationContractAccountType::Vend:
                        return checkFailed(strFmt(
                            "@SYS114308",
                            this.ContactPersonId,
                            contactPerson.personName(),
                            VendTable::findRecId(this.ContractAccountRelation).AccountNum));

                    case CLMIntegrationContractAccountType::Cust:
                        return checkFailed(strFmt(
                            "@SYS92800",
                            this.ContactPersonId,
                            contactPerson.personName(),
                            CustTable::findRecId(this.ContractAccountRelation).AccountNum));

                    case CLMIntegrationContractAccountType::Party:
                        return checkFailed(strFmt(
                            "@CLMIntegration:ContactPartyValidationMessage",
                            this.ContactPersonId,
                            contactPerson.personName(),
                            DirPartyTable::findRec(this.ContractAccountRelation).PartyNumber));
                }
            }
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetContractAccountRelation</Name>
				<Source><![CDATA[
    private void resetContractAccountRelation()
    {
        this.ContractAccountRelation = 0;
        this.initContractAccountDataAreaId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initContractAccountDataAreaId</Name>
				<Source><![CDATA[
    private void initContractAccountDataAreaId()
    {
        switch (this.ContractAccountType)
        {
            case CLMIntegrationContractAccountType::Vend:
                this.ContractAccountDataAreaId = appl.company().dataArea(tableNum(VendTable));
                break;

            case CLMIntegrationContractAccountType::Cust:
                this.ContractAccountDataAreaId =  appl.company().dataArea(tableNum(CustTable));
                break;

            case CLMIntegrationContractAccountType::Party:
                this.ContractAccountDataAreaId =  appl.company().dataArea(tableNum(DirPartyTable));
                break;

            default:
                this.ContractAccountDataAreaId =  '';
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveDirPartyReference</Name>
				<Source><![CDATA[
    private void resolveDirPartyReference()
    {
        switch (this.ContractAccountType)
        {
            case CLMIntegrationContractAccountType::Vend:
                this.Party = VendTable::findRecId(this.ContractAccountRelation).Party;
                break;

            case CLMIntegrationContractAccountType::Cust:
                this.Party = CustTable::findRecId(this.ContractAccountRelation).Party;
                break;

            case CLMIntegrationContractAccountType::Party:
                this.Party = this.ContractAccountRelation;
                break;

            default:
                this.Party = 0;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByContractId</Name>
				<Source><![CDATA[
    public static CLMIntegrationContractTable findByContractId(CLMIntegrationContractId _contractId, DataAreaId _legalEntity = curExt(), boolean _forUpdate = false)
    {
        CLMIntegrationContractTable contract;
        Companyinfo companyinfo;

        if (_contractId && _legalEntity)
        {
            if (_forUpdate)
            {
                contract.selectForUpdate(_forUpdate);
            }

            select firstonly * from contract
                exists join companyinfo
                where contract.ContractId == _contractId
                   && contract.LegalEntity == companyinfo.RecId
                   && companyinfo.DataArea == _legalEntity;
        }

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByExternalContractId</Name>
				<Source><![CDATA[
    public static CLMIntegrationContractTable findByExternalContractId(CLMIntegrationExternalContractId _externalContractId, DataAreaId _legalEntity = curExt(), boolean _forUpdate = false)
    {
        CLMIntegrationContractTable contract;
        Companyinfo companyinfo;

        if (_externalContractId && _legalEntity)
        {
            if (_forUpdate)
            {
                contract.selectForUpdate(_forUpdate);
            }

            select firstonly * from contract
                exists join companyinfo
                where contract.ExternalContractId == _externalContractId
                   && contract.LegalEntity == companyinfo.RecId
                   && companyinfo.DataArea == _legalEntity;

        }

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    public static CLMIntegrationContractTable findByRecId(CLMIntegrationContractTableRefRecId _contractRecId, boolean _forUpdate = false)
    {
        CLMIntegrationContractTable contract;

        if (_contractRecId)
        {
            if (_forUpdate)
            {
                contract.selectForUpdate(_forUpdate);
            }

            select firstonly * from contract
                where contract.RecId == _contractRecId;
        }

        return contract;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CLMIntegration</ConfigurationKey>
	<DeveloperDocumentation>@CLMIntegration:ContractTableDevDoc</DeveloperDocumentation>
	<Label>@CLMIntegration:ContractTable</Label>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>ContractId</TitleField1>
	<TitleField2>ContractName</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ReplacementKey>ContractIdIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpirationDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequesterWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequesterWorkerEmail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractAccountType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractAccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestAmendmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmendmentInProcess</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContractId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CLMIntegrationContractId</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LegalEntity</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<Label>@CLMIntegration:ContractLegalEntity</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExternalContractId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CLMIntegrationExternalContractId</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ContractType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CLMIntegrationContractTypeRefRecId</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContractStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<EnumType>CLMIntegrationContractStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContractName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CLMIntegrationContractName</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EffectiveDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EffectiveDate</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ExpirationDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExpirationDate</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RequesterWorker</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<Label>@CLMIntegration:ContractRequesterWorker</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RequesterWorkerEmail</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Email</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContractAccountType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<EnumType>CLMIntegrationContractAccountType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ContractAccountRelation</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CLMIntegrationContractAccountRelation</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContractAccountDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Party</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DirPartyRecId</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPersonId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ContactPersonId</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContactPersonDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LatestAmendmentId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CLMIntegrationLatestAmendmentId</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LatestExternalAmendmentId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CLMIntegrationLatestExternalAmendmentId</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AmendmentInProcess</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CLMIntegrationAmendmentInProcess</ExtendedDataType>
			<FeatureClass>CLMIntegrationFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ContractIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ContractId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LegalEntity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CompanyInfoIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LegalEntity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ExternalContractIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ExternalContractId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LegalEntity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CompanyInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CompanyInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LegalEntity</Name>
					<Field>LegalEntity</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ContractType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>CLMIntegrationContractType</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContractType</Name>
					<Field>ContractType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RequesterWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RequesterWorker</Name>
					<Field>RequesterWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ContractAccount_VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ContractAccount_VendTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ContractAccountType</Name>
					<Field>ContractAccountType</Field>
					<ValueStr>CLMIntegrationContractAccountType::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContractAccountRelation</Name>
					<Field>ContractAccountRelation</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContractAccountDataAreaId</Name>
					<Field>ContractAccountDataAreaId</Field>
					<RelatedField>DataAreaId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ContractAccount_CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ContractAccount_CustTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ContractAccountType</Name>
					<Field>ContractAccountType</Field>
					<ValueStr>CLMIntegrationContractAccountType::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContractAccountRelation</Name>
					<Field>ContractAccountRelation</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContractAccountDataAreaId</Name>
					<Field>ContractAccountDataAreaId</Field>
					<RelatedField>DataAreaId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ContractAccount_DirPartyTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ContractAccount_DirPartyTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DirPartyTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ContractAccountType</Name>
					<Field>ContractAccountType</Field>
					<ValueStr>CLMIntegrationContractAccountType::Party</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContractAccountRelation</Name>
					<Field>ContractAccountRelation</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DirPartyTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DirPartyTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DirPartyTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ContactPerson</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ContactPerson</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContactPersonDataAreaId</Name>
					<Field>ContactPersonDataAreaId</Field>
					<RelatedField>DataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContactPersonId</Name>
					<SourceEDT>ContactPersonId</SourceEDT>
					<Field>ContactPersonId</Field>
					<RelatedField>ContactPersonId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ContactPersonId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>