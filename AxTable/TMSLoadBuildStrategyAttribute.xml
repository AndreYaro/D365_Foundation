<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSLoadBuildStrategyAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSLoadBuildStrategyAttribute extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>reinitializeAttributes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reinitializes attribute data specific for a particular load build strategy class.
    /// </summary>
    /// <param name="_tmsLoadBuildStrategyClassId">
    /// The record ID of load build strategy class for which to define the attribute data.
    /// </param>
    /// <param name="_tmsILoadBuildStrategy">
    /// The instance of load build strategy class for which to define the attribute data.
    /// </param>
    public static void reinitializeAttributes(TMSLoadBuildStrategyClassId _tmsLoadBuildStrategyClassId, TMSILoadBuildStrategy _tmsILoadBuildStrategy)
    {
        #TMSLoadBuild
        TMSLoadBuildStrategyAttribute       tmsLoadBuildStrategyAttribute;
        EcoResAttribute                     ecoResAttribute;
        RefRecId                            ecoResAttributeTypeRecId;
        RefRecId                            ecoResAttributeRecId;
        TMSLoadBuildStrategyParamMap        tmsLoadBuildStrategyParamMap = TMSLoadBuildStrategyParamMap::construct();
        MapIterator                         tmsLoadBuildStrategyParamMapIterator;
        TMSLoadBuildStrategyParam           tmsLoadBuildStrategyParam;
        ClassName                           tmsILoadBuildStrategyClassName = classId2Name(classIdGet(_tmsILoadBuildStrategy));
        Name                                attributeTypeName;
        TMSLoadBuildStrategyParameterName   parameterName;

        _tmsILoadBuildStrategy.populateParameterCollection(tmsLoadBuildStrategyParamMap);

        ttsBegin;

        // Remove the parameters from the collection, that are already existing in database
        // These will be excluded from update.
        while select forUpdate tmsLoadBuildStrategyAttribute
            where tmsLoadBuildStrategyAttribute.LoadBuildStrategyClass == _tmsLoadBuildStrategyClassId
            join ecoResAttribute
                where tmsLoadBuildStrategyAttribute.EcoResAttribute == ecoResAttribute.RecId
        {
            if (!tmsLoadBuildStrategyParamMap.remove(ecoResAttribute.Name))
            {
                // If parameter exists in the database, but was not found in the map
                // then it is a parameter that was removed, for example in the next version of the strategy class
                warning(strFmt("@SYP4860902", ecoResAttribute.Name, tmsILoadBuildStrategyClassName));
            }
        }

        tmsLoadBuildStrategyParamMapIterator = new MapIterator(tmsLoadBuildStrategyParamMap);

        // The remaining elements in tmsLoadBuildStrategyParamMap are to be added.
        // These are the parameters that were added since last regeneration.
        while (tmsLoadBuildStrategyParamMapIterator.more())
        {
            tmsLoadBuildStrategyParam = tmsLoadBuildStrategyParamMapIterator.value();

            if (tmsLoadBuildStrategyParam)
            {
                parameterName = tmsLoadBuildStrategyParam.parmAttributeName();
                attributeTypeName = tmsILoadBuildStrategyClassName + #AttributeTypeNameDelimiter + parameterName;

                // Find or create attribute type RecId - cross company
                ecoResAttributeTypeRecId = ecoResAttributeType::findOrCreateAttributeType(
                        attributeTypeName,
                        tmsLoadBuildStrategyParam.getAttributeDataType(),
                        false,
                        false);

                // Find or create attribute RecId - cross company
                ecoResAttributeRecId = EcoResAttribute::findOrCreateAttribute(parameterName, ecoResAttributeTypeRecId);

                // Create TMS attribute - cross company
                tmsLoadBuildStrategyAttribute.clear();
                tmsLoadBuildStrategyAttribute.EcoResAttribute = ecoResAttributeRecId;
                tmsLoadBuildStrategyAttribute.LoadBuildStrategyClass = _tmsLoadBuildStrategyClassId;
                tmsLoadBuildStrategyAttribute.insert();

                info(strFmt("@SYP4860903", parameterName, tmsILoadBuildStrategyClassName));
            }

            tmsLoadBuildStrategyParamMapIterator.next();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@SYP4860886</DeveloperDocumentation>
	<Label>@SYP4860885</Label>
	<TitleField1>EcoResAttribute</TitleField1>
	<TitleField2>LoadBuildStrategyClass</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>LoadBuildStrategyClassAttributeIdx</ClusteredIndex>
	<Modules>Transportation</Modules>
	<ReplacementKey>LoadBuildStrategyClassAttributeIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EcoResAttribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadBuildStrategyClass</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EcoResAttribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadBuildStrategyClass</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LoadBuildStrategyClass</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EcoResAttribute</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>EcoResAttribute</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResAttributeId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LoadBuildStrategyClass</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSLoadBuildStrategyClassId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LoadBuildStrategyClassAttributeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LoadBuildStrategyClass</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EcoResAttribute</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResAttribute</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResAttribute</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EcoResAttribute</Name>
					<Field>EcoResAttribute</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TMSLoadBuildStrategyClass</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TMSLoadBuildStrategyClass</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoadBuildStrategyClass</Name>
					<Field>LoadBuildStrategyClass</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>