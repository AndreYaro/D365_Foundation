<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceInfoLine_Asset</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendInvoiceInfoLine_Asset extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ICMSReceivableLongTerm_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the <c>ICMS</c> asset is receivable long term.
    /// </summary>
    /// <returns>
    /// True if the <c>ICMS</c> asset is receivable long term; otherwise, false.
    /// </returns>
    public NoYes ICMSReceivableLongTerm_BR()
    {
        if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        {
            return false;
        }

        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR00017, funcName());
        if (!this.CreateFixedAsset)
        {
            return AssetTable::find(this.AssetId).TaxICMSOutgoing_BR;
        }
        else
        {
            return AssetGroup::find(this.AssetGroup).TaxICMSOutgoing_BR;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromActiveLine_Asset</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>VendInvoiceInfoLine_Asset</c> table asset related field values.
    /// </summary>
    /// <param name="_parmLineAsset">
    /// An active invoice line table buffer which will be used to set asset related field values in saved invoice line buffer.
    /// </param>
    public void initFromActiveLine_Asset(VendInvoiceInfoLine_Asset _parmLineAsset)
    {
        this.CreateFixedAsset    = _parmLineAsset.CreateFixedAsset;
        this.AssetGroup          = _parmLineAsset.AssetGroup;
        this.AssetId             = _parmLineAsset.AssetId;
        this.AssetBookId         = _parmLineAsset.AssetBookId;
        this.AssetTransTypePurch = _parmLineAsset.AssetTransTypePurch;
        this.AssetAcquired       = _parmLineAsset.AssetAcquired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>VendInvoiceInfoLine_Asset</c> table field values.
    /// </summary>
    /// <param name="_purchLine">
    ///    A <c>PurchLine</c> table buffer which will be used to set the <c>VendInvoiceInfoLine_Asset</c>
    ///    field values.
    /// </param>
    public void initFromPurchLine(PurchLine _purchLine)
    {
        boolean assetParamAllowCreate;

        assetParamAllowCreate = AssetParameters::find().AssetAllowCreate;
        if (assetParamAllowCreate)
        {
            this.CreateFixedAsset = _purchLine.CreateFixedAsset;
            this.AssetGroup       = _purchLine.AssetGroup;
        }

        this.AssetId     = _purchLine.AssetId;
        this.AssetBookId = _purchLine.AssetBookId;

        // If AllowCreate is false, but they assigned an Asset, copy group in.
        if ((!assetParamAllowCreate) && (this.AssetId))
        {
            this.AssetGroup  = _purchLine.AssetGroup;
        }

        if (_purchLine.invoicedInTotal() > 0)
        {
            if (AssetParameters::find().MultiAcquisition == NoYes::No)
            {
                this.AssetTransTypePurch = AssetTransTypePurch::AcquisitionAdj;
            }
            else
            {
               this.AssetTransTypePurch = AssetTransTypePurch::Acquisition;
            }
        }
        else
        {
            this.AssetTransTypePurch = _purchLine.AssetTransTypePurch;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSavedLine_Asset</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>VendInvoiceInfoLine_Asset</c> table field values.
    /// </summary>
    /// <param name="_vendInvoiceInfoLine_Asset">
    ///    A <c>VendInvoiceInfoLine_Asset</c> table buffer which will be used to set the
    ///    <c>initFromVendInvoiceInfoLine_Asset</c> field values.
    /// </param>
    public void initFromSavedLine_Asset(VendInvoiceInfoLine_Asset _vendInvoiceInfoLine_Asset)
    {
        this.CreateFixedAsset    = _vendInvoiceInfoLine_Asset.CreateFixedAsset;
        this.AssetGroup          = _vendInvoiceInfoLine_Asset.AssetGroup;
        this.AssetId             = _vendInvoiceInfoLine_Asset.AssetId;
        this.AssetTransTypePurch = _vendInvoiceInfoLine_Asset.AssetTransTypePurch;
        this.AssetBookId         = _vendInvoiceInfoLine_Asset.AssetBookId;
        this.AssetAcquired       = _vendInvoiceInfoLine_Asset.AssetAcquired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendInvoiceInfoLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>VendInvoiceInfoLine_Asset</c> table asset related to the <c>VendInvoiceInfoLine</c>
    ///    table.
    /// </summary>
    /// <param name="_vendInvoiceInfoLine">
    ///    A <c>VendInvoiceInfoLine</c> table buffer which will be used to set the
    ///    <c>VendInvoiceInfoLine_Asset</c> asset related field values.
    /// </param>
    public void initFromVendInvoiceInfoLine(VendInvoiceInfoLine _vendInvoiceInfoLine)
    {
        this.VendDocumentLineAssetMap::initFromLine(_vendInvoiceInfoLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether extra logic has to be performed when a field value changes.
    /// </summary>
    /// <param name="_fieldId">
    ///    The field ID of a <c>VendInvoiceInfoLine_Asset</c> record.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        // <GJP>
        boolean isAssetDocumentEnabled = AssetDocumentUtility_JP::isAssetDocumentEnabled();
        // </GJP>
        ;

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(VendInvoiceInfoLine_Asset, AssetId):
                this.modifyAssetId();
                // <GJP>
                if (isAssetDocumentEnabled)
                {
                    AssetDocumentReductionEntryPurchLnk_JP::deleteDocumentExtensionsByRef(this.TableId, this.RecId);
                }
                // </GJP>
                this.deletefromvendInvoiceInfoLine_Project();
                break;
            case fieldNum(VendInvoiceInfoLine_Asset, CreateFixedAsset):
                this.modifyCreateFixedAsset();
                // <GJP>
                if (isAssetDocumentEnabled)
                {
                    AssetDocumentReductionEntryPurchLnk_JP::deleteDocumentExtensionsByRef(this.TableId, this.RecId);
                }
                // </GJP>
                this.deletefromvendInvoiceInfoLine_Project();
                break;
            // <GJP>
            case fieldNum(VendInvoiceInfoLine_Asset, AssetBookId):
                if (isAssetDocumentEnabled)
                {
                    AssetDocumentReductionEntryPurchLnk_JP::deleteDocumentExtensionsByRef(this.TableId, this.RecId);
                }
                this.deletefromvendInvoiceInfoLine_Project();
                break;
            // </GJP>
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyAssetId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the values of the <c>VendInvoiceInfoLine_Asset</c> fields based on the value of the
    ///    <c>AssedId</c> field.
    /// </summary>
    /// <remarks>
    ///    When the <c>AssetId</c> field value changes, the values of the <c>AssetGroup</c> and
    ///    <c>AssetBookId</c> fields may have to be updated.
    /// </remarks>
    public void modifyAssetId()
    {
        AssetTable  assetTable;
        AssetBook   assetBook;
        AssetBookId bookIdDefault;

        assetTable = AssetTable::find(this.AssetId);
        if (assetTable)
        {
            this.AssetGroup = assetTable.AssetGroup;
        }
        else
        {
            this.AssetGroup = "";
        }

        bookIdDefault = AssetParameters::find().BookIdDefault;
        assetBook     = AssetBook::find(this.AssetId, bookIdDefault);

        if (assetBook
            && assetBook.assetBookTable().CurrentOperationsTax == CurrentOperationsTax::Current
            && (assetBook.Status == AssetStatus::NoAcquisition
                || assetBook.Status == AssetStatus::Open))
        {
            this.AssetBookId = bookIdDefault;
        }
        else
        {
            assetBook = AssetBook::findOpenOrNotAcquiredAssetBookByAssetIdLayer(this.AssetId, CurrentOperationsTax::Current);

            if (assetBook)
            {
                this.AssetBookId = assetBook.BookId;
            }
            else
            {
                this.AssetBookId = "";
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyCreateFixedAsset</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Clears the values of <c>VendInvoiceInfoLine_Asset</c> fields based on the value of the
    ///    <c>CreateFixedAsset</c> field.
    /// </summary>
    /// <remarks>
    ///    If the value of the <c>CreateFixedAsset</c> field is changed, clear out the values in the
    ///    <c>AssetId</c>, <c>AssetGroup</c>, and <c>AssetTransTypePurch</c> fields.
    /// </remarks>
    public void modifyCreateFixedAsset()
    {
        ;

        if (this.CreateFixedAsset == NoYes::Yes)
        {
            this.AssetId = "";
        }

        this.AssetGroup = "";
        this.AssetBookId = "";
        this.AssetTransTypePurch = AssetTransTypePurch::Acquisition;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PISCOFINSReceivableLongTerm_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the <c>PISCONFINS</c> asset is receivable long term.
    /// </summary>
    /// <returns>
    /// True if the <c>PISCOFINS</c> asset is receivable long term; otherwise, false.
    /// </returns>
    public NoYes PISCOFINSReceivableLongTerm_BR()
    {
        if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        {
            return false;
        }

        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR00014, funcName());
        if (!this.CreateFixedAsset)
        {
            return AssetTable::find(this.AssetId).PISCOFINSReceivableLongTerm_BR;
        }
        else
        {
            return AssetGroup::find(this.AssetGroup).PISCOFINSReceivableLongTerm_BR;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>reductionEntryAmount_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the asset reduction entry amount
    /// </summary>
    /// <param name="_set">
    /// Set or get the reduction entry amount
    /// </param>
    /// <param name="_amount">
    /// Instance of <c>AssetReductionEntryAmount_JP</c>
    /// </param>
    /// <returns>
    /// The reduction entry amount for asset
    /// </returns>
    public edit AssetReductionEntryAmount_JP reductionEntryAmount_JP(
        boolean                            _set,
        AssetReductionEntryAmount_JP       _amount)
    {
        VendInvoiceInfoLine                      vendInvoiceInfoLine;
        AssetReductionEntryAmount_JP             amountLoc;
        AssetDocumentReductionEntry_JP           reductionEntryDocumentLoc;
        AssetDocumentReductionEntryInvoiceLnk_JP assetDocumentLnk  = AssetDocumentLink_JP::construct(
                                                                        AssetDocumentLinkType_JP::Invoice,
                                                                        AssetDocumentType_JP::AssetReductionEntry_DirectOff);

        if (this.AssetId && this.AssetBookId)
        {
            reductionEntryDocumentLoc = AssetReductionEntryManager_JP::getAssetReductionEntryDocByAssetBook(
                                            this.AssetId,
                                            this.AssetBookId);
            vendInvoiceInfoLine = VendInvoiceInfoLine::findRecId(this.VendInvoiceInfoLineRecId);

            if (reductionEntryDocumentLoc != null)
            {
                assetDocumentLnk.findByReference(this.TableId, this.RecId, reductionEntryDocumentLoc.parmAssetDocumentEntry().RecId);
                if (_set)
                {
                    if (_amount)
                    {
                        if (assetDocumentLnk.parmRecId())
                        {
                            // update
                            assetDocumentLnk.parmReductionEntryAmount(_amount * -1);
                            assetDocumentLnk.parmReductionEntryCurrencyCode(vendInvoiceInfoLine.currencyCode);
                            assetDocumentLnk.update();
                        }
                        else
                        {
                            // new
                            assetDocumentLnk.parmVendInvoiceInfoLineAsset(this);
                            assetDocumentLnk.parmAssetDocumentEntryRecId(reductionEntryDocumentLoc.parmAssetDocumentEntry().RecId);
                            assetDocumentLnk.parmReductionEntryAmount(_amount * -1);
                            assetDocumentLnk.parmReductionEntryCurrencyCode(vendInvoiceInfoLine.currencyCode);
                            assetDocumentLnk.create();
                        }
                    }
                    else
                    {
                        // remove
                        assetDocumentLnk.delete();
                    }
                }
                else
                {
                    amountLoc = assetDocumentLnk.parmReductionEntryAmount() * -1;
                }
            }
        }

        return amountLoc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reductionEntryDocumentId_JP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the asset reduction entry document id
    /// </summary>
    /// <returns>
    /// The document id for asset reduction entry
    /// </returns>
    public display AssetReductionEntryProfileId_JP reductionEntryDocumentId_JP()
    {
        AssetReductionEntryProfileId_JP    reductionEntryDocumentIdLoc;
        AssetDocumentReductionEntry_JP     reductionEntryDocumentLoc;

        if (this.AssetId && this.AssetBookId)
        {
            reductionEntryDocumentLoc = AssetReductionEntryManager_JP::getAssetReductionEntryDocByAssetBook(
                this.AssetId,
                this.AssetBookId);
            if (reductionEntryDocumentLoc != null)
            {
                reductionEntryDocumentIdLoc = reductionEntryDocumentLoc.parmAssetDocumentTable().DocumentId;
            }
        }

        return reductionEntryDocumentIdLoc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        VendInvoiceInfoLine     invoiceLine;
        VendInvoiceInfoTable    invoiceTable;

        super();

        invoiceLine = VendInvoiceInfoLine::findRecId(this.VendInvoiceInfoLineRecId);

        // if the item type of invoice line is different from po line, then update the invoice line distribution.
        if (!invoiceLine.isNonPO() &&
            (invoiceLine.purchLine().hasAssetAssociated() != (this.AssetId || this.AssetGroup || this.CreateFixedAsset)))
        {
            invoiceTable = invoiceLine.vendInvoiceInfoTable();
            invoiceLine.updateDistribution();
            TaxUncommitted::deleteForDocumentHeader(invoiceTable.TableId, invoiceTable.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ;

        ret = super();

        if ((ret) && (this.CreateFixedAsset == NoYes::Yes) && (this.AssetGroup == ""))
        {
            ret = checkFailed("@SYS71123");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createVendInvoiceInfoLine_Asset</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts a new <c>VendInvoiceInfoLine_Asset</c> record, based on a saved
    ///    <c>VendInvoiceInfoLine_Asset</c> record and connected to a particular <c>VendInvoiceInfoLine</c>
    ///    record.
    /// </summary>
    /// <param name="_vendInvoiceInfoLine">
    ///    The parent <c>VendInvoiceInfoLine</c> record for the new <c>VendInvoiceInfoLine_Asset</c> record.
    /// </param>
    /// <param name="_vendInvoiceInfoLine_Asset">
    ///    The saved <c>VendInfoInfoLine_Asset</c> record to use to create the active
    ///    <c>VendInfoInfoLine_Asset</c> record; optional.
    /// </param>
    /// <returns>
    ///    The new <c>VendInfoInfoLine_Asset</c> table record.
    /// </returns>
    public static VendInvoiceInfoLine_Asset createVendInvoiceInfoLine_Asset(VendInvoiceInfoLine _vendInvoiceInfoLine, VendInvoiceInfoLine_Asset _vendInvoiceInfoLine_Asset = null)
    {
        VendInvoiceInfoLine_Asset     vendInvoiceInfoLine_Asset;

        vendInvoiceInfoLine_Asset.clear();
        vendInvoiceInfoLine_Asset.initValue();
        vendInvoiceInfoLine_Asset.initFromVendInvoiceInfoLine(_vendInvoiceInfoLine);
        vendInvoiceInfoLine_Asset.initFromSavedLine_Asset(_vendInvoiceInfoLine_Asset);

        return vendInvoiceInfoLine_Asset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if any of the <c>VendInvoiceInfoLine_Asset</c> lines occur in the table for a given
    ///    record ID.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID value to check.
    /// </param>
    /// <returns>
    ///    true if any records exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        return (select firstonly RecId from vendInvoiceInfoLine_Asset
                    where vendInvoiceInfoLine_Asset.RecId == _recId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the VendInvoiceInfoLine_Asset line for the given RecId field, if a line exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID value to check.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that determines whether the record should be selected for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    A Concurrency Model value that specifies the locking scheme; optional.
    /// </param>
    /// <returns>
    ///    A single <c>VendInvoiceInfoLine_Asset</c> table record if it exists.
    /// </returns>
    /// <remarks>
    ///    If the record does not exist, an empty <c>VendInvoiceInfoLine_Asset</c> table record is returned.
    /// </remarks>
    public static VendInvoiceInfoLine_Asset find(RecId            _recId,
                                           boolean          _forUpdate = false,
                                           ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        VendInvoiceInfoLine_Asset vendInvoiceInfoLine_Asset;
        ;

        if (_recId != 0)
        {
            if (_forUpdate)
            {
                vendInvoiceInfoLine_Asset.selectForUpdate(_forUpdate);

                if (_concurrencyModel != ConcurrencyModel::Auto)
                {
                    vendInvoiceInfoLine_Asset.concurrencyModel(_concurrencyModel);
                }
            }

            select firstonly vendInvoiceInfoLine_Asset
                where vendInvoiceInfoLine_Asset.RecId == _recId;
        }

        return vendInvoiceInfoLine_Asset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByVendInvoiceInfoLineRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the VendInvoiceInfoLine_Asset line for the given <c>VendInvoiceInfoLineRecID</c> field, if a
    ///    line exists.
    /// </summary>
    /// <param name="_vendInvoiceInfoLineRecID">
    ///    The <c>VendInvoiceInfoLineRecID</c> value to check.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that determines whether the record should be selected for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    A Concurrency Model value that specifies the locking scheme; optional.
    /// </param>
    /// <returns>
    ///    A single <c>VendInvoiceInfoLine_Asset</c> table record if it exists.
    /// </returns>
    /// <remarks>
    ///    If the record does not exist, an empty <c>VendInvoiceInfoLine_Asset</c> table record is returned.
    /// </remarks>
    public static VendInvoiceInfoLine_Asset findByVendInvoiceInfoLineRecId(PurchLineRefRecId _vendInvoiceInfoLineRecID,
                                           boolean          _forUpdate = false,
                                           ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        VendInvoiceInfoLine_Asset vendInvoiceInfoLine_Asset;
        ;

        if (_vendInvoiceInfoLineRecID != 0)
        {
            if (_forUpdate)
            {
                vendInvoiceInfoLine_Asset.selectForUpdate(_forUpdate);

                if (_concurrencyModel != ConcurrencyModel::Auto)
                {
                    vendInvoiceInfoLine_Asset.concurrencyModel(_concurrencyModel);
                }
            }

            select firstonly vendInvoiceInfoLine_Asset
                where vendInvoiceInfoLine_Asset.VendInvoiceInfoLineRecId == _vendInvoiceInfoLineRecID;
        }

        return vendInvoiceInfoLine_Asset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ICMSCreditInstallments_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates the number of installments of the <c>PIS/COFINS</c> credit appropriation.
    /// </summary>
    /// <returns>
    /// True if the <c>ICMS</c> asset is receivable long term; otherwise, false.
    /// </returns>
    public ICMSCreditInstallments_BR ICMSCreditInstallments_BR()
    {
        if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        {
            return false;
        }

        if (!this.CreateFixedAsset)
        {
            return AssetTable::find(this.AssetId).icmsCreditInstallments_BR;
        }
        else
        {
            return AssetGroup::find(this.AssetGroup).icmsCreditInstallments_BR;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>PISCOFINSFixedAssetCreditAppropMethod_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates the asset group appropriation method of the PIS/COFINS.
    /// </summary>
    /// <returns>
    /// The asset group appropriation method of the PIS/COFINS.
    /// </returns>
    public FBPISCOFINSFixedAssetAppropMethod_BR PISCOFINSFixedAssetCreditAppropMethod_BR()
    {
        if (!(BrazilParameters::isEnabled() && (this.AssetId || this.AssetGroup)))
        {
            return FBPISCOFINSFixedAssetAppropMethod_BR::None;
        }

        if (this.CreateFixedAsset)
        {
            return AssetGroup::find(this.AssetGroup).PISCOFINSAppropriationMethod_BR;
        }

        return AssetTable::find(this.AssetId).PISCOFINSAppropriationMethod_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PISCOFINSFixedAssetCreditGroup_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates the asset group classification of the PIS/COFINS credit appropriation.
    /// </summary>
    /// <returns>
    /// The asset group classification of the PIS/COFINS credit appropriation.
    /// </returns>
    public FBPISCOFINSFixedAssetCreditGroup_BR PISCOFINSFixedAssetCreditGroup_BR()
    {
        if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        {
            return FBPISCOFINSFixedAssetCreditGroup_BR::None;
        }

        if (!this.CreateFixedAsset)
        {
            return AssetTable::find(this.AssetId).PISCOFINSCreditGroup_BR;
        }
        else
        {
            return AssetGroup::find(this.AssetGroup).PISCOFINSCreditGroup_BR;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>PISCOFINSFixedAssetCreditInstallments_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates the number of installments of the PIS/COFINS credit appropriation.
    /// </summary>
    /// <returns>
    /// The number of installments of the PIS/COFINS credit appropriation.
    /// </returns>
    public FBPisCofinsFixedAssetCreditInstls_BR PISCOFINSFixedAssetCreditInstallments_BR()
    {
        if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        {
            return 0;
        }

        if (!this.CreateFixedAsset)
        {
            return AssetTable::find(this.AssetId).PISCOFINSCreditInstallments_BR;
        }
        else
        {
            return AssetGroup::find(this.AssetGroup).PISCOFINSCreditInstallments_BR;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>PISCOFINSFixedAssetCreditPurpose_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates the asset utilization purpose of the PIS/COFINS credit appropriation.
    /// </summary>
    /// <returns>
    /// The asset utilization purpose of the PIS/COFINS credit appropriation.
    /// </returns>
    public FBPISCOFINSFixedAssetCreditPurpose_BR PISCOFINSFixedAssetCreditPurpose_BR()
    {
        if (!BrazilParameters::isEnabled() || (!this.AssetId && !this.AssetGroup))
        {
            return FBPISCOFINSFixedAssetCreditPurpose_BR::None;
        }

        if (!this.CreateFixedAsset)
        {
            return AssetTable::find(this.AssetId).PISCOFINSCreditPurpose_BR;
        }
        else
        {
            return AssetGroup::find(this.AssetGroup).PISCOFINSCreditPurpose_BR;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAssetGroupBasedOnAssetRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the fixed asset group if fixed asset business rules are applied to the procurement product of the purchase line
    /// and the price threshold is met.
    /// </summary>
    /// <param name="_assetGroup">
    /// The asset group value.
    /// </param>
    public void setAssetGroupBasedOnAssetRule(AssetGroupId _assetGroup)
    {
        this.AssetGroup = _assetGroup;
        this.CreateFixedAsset = NoYes::Yes;

        ttsBegin;
        this.write();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssetBookDefaultDimension</Name>
				<Source><![CDATA[
    internal LedgerDefaultDimensionValueSet getAssetBookDefaultDimension()
    {
        AssetBook assetBook;

        select DefaultDimension 
            from assetBook
            where assetBook.AssetId == this.AssetId
                && assetBook.BookId ==  this.AssetBookId;

        return assetBook.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deletefromvendInvoiceInfoLine_Project</Name>
				<Source><![CDATA[
    private void deletefromvendInvoiceInfoLine_Project()
    {
        VendInvoiceInfoLine_Project vendInvoiceInfoLine_Project;
        unchecked(Uncheck::TableSecurityPermission)
        {
            delete_from vendinvoiceinfoline_Project
                where vendinvoiceinfoline_Project.VendInvoiceInfoLineRefRecId == this.VendInvoiceInfoLineRecId;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS126253</DeveloperDocumentation>
	<Label>@SYS120364</Label>
	<TableGroup>TransactionLine</TableGroup>
	<TitleField1>AssetId</TitleField1>
	<TitleField2>AssetGroup</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>VendInvoiceInfoLineRecIdIdx</ClusteredIndex>
	<Modules>AccountsPayable</Modules>
	<PrimaryIndex>VendInvoiceInfoLineRecIdIdx</PrimaryIndex>
	<ReplacementKey>VendInvoiceInfoLineRecIdIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CreateFixedAsset</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetTransTypePurch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetBookId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CreateFixedAsset</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetTransTypePurch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetBookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetAcquired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendInvoiceInfoLineRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendInvoiceInfoLineRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AssetAcquired</Name>
			<Label>@SYS120365</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetAcquired</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FixedAssets</Name>
			<Label>@SYS12578</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CreateFixedAsset</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetTransTypePurch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetBookId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VendInvoiceInfoLineRecId</Name>
			<Label>@SYS120366</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendInvoiceInfoLineRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssetAcquired</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetBookId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetBookIdPurchSalesInvent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AssetId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetIdOpen</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssetTransTypePurch</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetTransTypePurchEDT</ExtendedDataType>
			<EnumType>AssetTransTypePurch</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreateFixedAsset</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS115671</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendInvoiceInfoLineRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PurchParmLineRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendInvoiceInfoLineRecIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>VendInvoiceInfoLineRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ParmTableRefIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AssetAcquired</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AssetTransTypePurch</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>VendDocumentLineAssetMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CreateFixedAsset</MapField>
					<MapFieldTo>CreateFixedAsset</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetGroup</MapField>
					<MapFieldTo>AssetGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetId</MapField>
					<MapFieldTo>AssetId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetTransTypePurch</MapField>
					<MapFieldTo>AssetTransTypePurch</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetBookId</MapField>
					<MapFieldTo>AssetBookId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssetAcquired</MapField>
					<MapFieldTo>AssetAcquired</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>VendDocumentLineRecId</MapField>
					<MapFieldTo>VendInvoiceInfoLineRecId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>AssetBook</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetBook</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AssetBook</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendInvoiceInfoLine_Asset</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetBookId</Name>
					<Field>AssetBookId</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetId</Name>
					<Field>AssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetBookTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetBookTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetBookId</Name>
					<SourceEDT>AssetBookIdPurchSalesInvent</SourceEDT>
					<Field>AssetBookId</Field>
					<RelatedField>BookId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>BookIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>AssetGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetGroup</Name>
					<SourceEDT>AssetGroupId</SourceEDT>
					<Field>AssetGroup</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetId</Name>
					<SourceEDT>AssetIdOpen</SourceEDT>
					<Field>AssetId</Field>
					<RelatedField>AssetId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupAssetIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendInvoiceInfoLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<EntityRelationshipRole>@SYS125149</EntityRelationshipRole>
			<RelatedTable>VendInvoiceInfoLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendInvoiceInfoLine</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>VendInvoiceInfoLine_Asset</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendInvoiceInfoLineRecId</Name>
					<Field>VendInvoiceInfoLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>