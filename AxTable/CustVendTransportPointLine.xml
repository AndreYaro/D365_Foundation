<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendTransportPointLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustVendTransportPointLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        this.LogisticsPostalAddressMap::modifiedField(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (this.ToTransportPointType == CustVendTransportPointType::Address && strLRTrim(this.ToCountryRegionId) == '')
            {
                ret = checkFailed("@SYS88237");
            }
            else if (this.ToTransportPointType == CustVendTransportPointType::Warehouse && strLRTrim(this.ToInventLocation) == '')
            {
                ret = checkFailed("@SYS89557");
            }
        }

        if (ret && this.TransportDays != this.orig().TransportDays)
        {
            CustVendTransportTime transportTime = CustVendTransportTime::defaultTransportTime(this.RecId);

            if (transportTime && transportTime.TransportDays != this.TransportDays)
            {
                ret = checkFailed(strFmt("@SCM:CustVendTransportPointLineFieldChangeDefaultDeliveryModeExistsError",
                    new SysDictField(tableNum(CustVendTransportPointLine), fieldNum(CustVendTransportPointLine, TransportDays)).label()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDeliveryMode</Name>
				<Source><![CDATA[
    static DlvModeId defaultDeliveryMode(InventLocationId          _fromInventLocation = '',
                                         AddressCountryRegionId    _toCountryRegion    = '',
                                         AddressStateId            _toState            = '',
                                         AddressCountyId           _toCounty           = '',
                                         AddressZipCodeId          _toZipCode          = '',
                                         InventLocationId          _toInventLocation   = '')
    {
        CustVendTransportPointLine  transportPointLine;
        CustVendTransportTime       transportTime;

        transportPointLine = CustVendTransportPointLine::findDefaultValue(_fromInventLocation,
                                                                          _toCountryRegion,
                                                                          _toState,
                                                                          _toCounty,
                                                                          _toZipCode,
                                                                          _toInventLocation);
        if (transportPointLine)
        {
            transportTime = CustVendTransportTime::defaultTransportTime(transportPointLine.RecId);
        }

        return (transportTime ? transportTime.DlvMode : '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultTransportDays</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the number of transport days between a shipping point and a receiving point for a
    ///    specified mode of delivery.
    /// </summary>
    /// <param name="_toDlvMode">
    ///    The mode of delivery; optional.
    /// </param>
    /// <param name="_fromInventLocation">
    ///    The shipping point; the company is considered the shipping point when blank; optional.
    /// </param>
    /// <param name="_toCountryRegion">
    ///    The country receiving point; optional.
    /// </param>
    /// <param name="_toState">
    ///    The state receiving point; optional.
    /// </param>
    /// <param name="_toCounty">
    ///    The county receiving point; optional.
    /// </param>
    /// <param name="_toZipCode">
    ///    The ZIP Code receiving point; optional.
    /// </param>
    /// <param name="_toInventLocation">
    ///    The receiving point; optional.
    /// </param>
    /// <returns>
    ///    The number of transport days between a shipping point and a receiving point for a specified mode of
    ///    delivery.
    /// </returns>
    static CustVendTransportDays defaultTransportDays(
        DlvModeId                 _toDlvMode          = '',
        InventLocationId          _fromInventLocation = '',
        AddressCountryRegionId    _toCountryRegion    = '',
        AddressStateId            _toState            = '',
        AddressCountyId           _toCounty           = '',
        AddressZipCodeId          _toZipCode          = '',
        InventLocationId          _toInventLocation   = '')
    {
        CustVendTransportPointLine  transportPointLine;
        CustVendTransportTime       transportTime;

        [_fromInventLocation, _toInventLocation] = CustVendTransportPointLine::transportLocations(_fromInventLocation,_toCountryRegion,_toInventLocation);

        transportPointLine = CustVendTransportPointLine::findDefaultValue(_fromInventLocation,
                                                                          _toCountryRegion,
                                                                          _toState,
                                                                          _toCounty,
                                                                          _toZipCode,
                                                                          _toInventLocation,
                                                                          _toDlvMode);
        if (transportPointLine)
        {
            if (_toDlvMode)
            {
                select firstonly transportTime
                    where transportTime.TransportPointLineRecId == transportPointLine.RecId &&
                        transportTime.DlvMode                   == _toDlvMode;
            }
            else
            {
                transportTime = CustVendTransportTime::defaultTransportTime(transportPointLine.RecId);
            }
        }

        return (transportTime ? transportTime.TransportDays : transportPointLine.TransportDays);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static CustVendTransportPointLine find(InventLocationId          _fromInventLocation = '',
                                           AddressCountryRegionId    _toCountryRegion    = '',
                                           AddressStateId            _toState            = '',
                                           AddressCountyId           _toCounty           = '',
                                           AddressZipCodeId          _toZipCode          = '',
                                           InventLocationId          _toInventLocation   = '')
    {
        CustVendTransportPointLine  transportPointLine;

        select firstonly transportPointLine
            where transportPointLine.FromInventLocation == _fromInventLocation  &&
                  transportPointLine.ToInventLocation   == _toInventLocation    &&
                  transportPointLine.ToCountryRegionId  == _toCountryRegion     &&
                  transportPointLine.ToState            == _toState             &&
                  transportPointLine.ToCounty           == _toCounty            &&
                  transportPointLine.ToZipCode          == _toZipCode;

        return transportPointLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDefaultValue</Name>
				<Source><![CDATA[
    static CustVendTransportPointLine findDefaultValue(InventLocationId          _fromInventLocation = '',
                                                       AddressCountryRegionId    _toCountryRegion    = '',
                                                       AddressStateId            _toState            = '',
                                                       AddressCountyId           _toCounty           = '',
                                                       AddressZipCodeId          _toZipCode          = '',
                                                       InventLocationId          _toInventLocation   = '',
                                                       DlvModeId                 _toDlvMode          = '')
    {
        CustVendTransportPointLine  transportPointLine;
        CustVendTransportPointLine  transportPointLineTemp;
        boolean                     found = false;
        boolean                     foundLocAddrSpecific;

        void checktransportPointLineTemp()
        {
            CustVendTransportTime transportTime;

            if (transportPointLineTemp)
            {
                if (_toDlvMode)
                {
                    //If DlvMode is specified then the Transport days for the DlvMode is checked.
                    select firstonly TransportDays from transportTime
                        where transportTime.TransportPointLineRecId == transportPointLineTemp.RecId &&
                            transportTime.DlvMode                   == _toDlvMode;

                    if (!transportTime.TransportDays)
                    {
                        //If the corresponding TransportDays was not defined for the DlvMode,
                        //then the first(i.e. the most specific) match for the Location and Address would be the return record.
                        if (!foundLocAddrSpecific)
                        {
                            transportPointLine = transportPointLineTemp;
                            foundLocAddrSpecific = true;
                        }
                    }
                    else
                    {
                        //If the corresponding TransportDays was defined for the DlvMode in any of the nearest parent matches, that would be the return record.
                        found = true;
                        transportPointLine = transportPointLineTemp;
                    }
                }
                else
                {
                    //If DlvMode is not specified, then the most specific match for the Location and Address is returned
                    found = true;
                    transportPointLine = transportPointLineTemp;
                }
            }
        }

        if (_toInventLocation)
        {
            transportPointLineTemp =  CustVendTransportPointLine::find(_fromInventLocation,'','','','',_toInventLocation);

            if (!transportPointLineTemp)
            {
                transportPointLineTemp =  CustVendTransportPointLine::find('','','','','',_toInventLocation);
            }

            if (!transportPointLineTemp && _fromInventLocation)
            {
                transportPointLineTemp =  CustVendTransportPointLine::find(_toInventLocation,'','','','',_fromInventLocation);
            }

            checktransportPointLineTemp();
        }
        else
        {
            if (_toZipCode)
            {
                transportPointLineTemp =  CustVendTransportPointLine::find(_fromInventLocation,_toCountryRegion,_toState,_toCounty,_toZipCode,'');
                checktransportPointLineTemp();

                if (!found)
                {
                    transportPointLineTemp =  CustVendTransportPointLine::find('',_toCountryRegion,_toState,_toCounty,_toZipCode,'');
                    checktransportPointLineTemp();
                }
            }

            if (!found && _toCounty)
            {
                transportPointLineTemp =  CustVendTransportPointLine::find(_fromInventLocation,_toCountryRegion,_toState,_toCounty,'','');
                checktransportPointLineTemp();

                if (!found)
                {
                    transportPointLineTemp =  CustVendTransportPointLine::find('',_toCountryRegion,_toState,_toCounty,'','');
                    checktransportPointLineTemp();
                }
            }

            if (!found && _toState)
            {
                transportPointLineTemp =  CustVendTransportPointLine::find(_fromInventLocation,_toCountryRegion,_toState,'','','');
                checktransportPointLineTemp();

                if (!found)
                {
                    transportPointLineTemp =  CustVendTransportPointLine::find('',_toCountryRegion,_toState,'','','');
                    checktransportPointLineTemp();
                }
            }

            if (!found && _toCountryRegion)
            {
                transportPointLineTemp =  CustVendTransportPointLine::find(_fromInventLocation,_toCountryRegion,'','','','');
                checktransportPointLineTemp();

                if (!found)
                {
                    transportPointLineTemp =  CustVendTransportPointLine::find('',_toCountryRegion,'','','','');
                    checktransportPointLineTemp();
                }
            }
        }

        return transportPointLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transportLocations</Name>
				<Source><![CDATA[
    static container transportLocations(
        InventLocationId          _fromInventLocationId = '',
        AddressCountryRegionId    _toCountryRegionId    = '',
        InventLocationId          _toInventLocationId   = '')
    {
        CustVendTransportPointLine  transportPointLine;
        InventLocationId            fromFallbackWarehouse;
        InventLocationId            toFallbackWarehouse;

        void selectTransportPointLine(InventLocationId _fromInventLocation, InventLocationId _toInventLocation)
        {
            select firstonly RecId from transportPointLine
                where transportPointLine.FromInventLocation == _fromInventLocation
                   && transportPointLine.ToInventLocation   == _toInventLocation;
        }

        if (_fromInventLocationId)
        {
            if (_toCountryRegionId)
            {
                select firstonly RecId from transportPointLine
                    where transportPointLine.FromInventLocation == _fromInventLocationId
                       && transportPointLine.ToCountryRegionId  == _toCountryRegionId;

                if (!transportPointLine.RecId)
                {
                    _fromInventLocationId = InventFallbackWarehouse::transportWarehouse(InventLocation::find(_fromInventLocationId).InventSiteId);
                }
            }
            if (_toInventLocationId)
            {
                //check from Warehouse - to Warehouse is setup
                selectTransportPointLine(_fromInventLocationId, _toInventLocationId);

                if (!transportPointLine.RecId)
                {
                    toFallbackWarehouse   = InventFallbackWarehouse::transportWarehouse(InventLocation::find(_toInventLocationId).InventSiteId);
                    //Check from Warehouse - to fallback warehouse is setup
                    selectTransportPointLine(_fromInventLocationId, toFallbackWarehouse);

                    if (transportPointLine.RecId)
                    {
                        _toInventLocationId = toFallbackWarehouse;
                    }
                    else
                    {
                        fromFallbackWarehouse = InventFallbackWarehouse::transportWarehouse(InventLocation::find(_fromInventLocationId).InventSiteId);
                        // check from fallback warehouse - to warehouse is setup
                        selectTransportPointLine(fromFallbackWarehouse, _toInventLocationId);

                        if (!transportPointLine.RecId)
                        {
                            _toInventLocationId = toFallbackWarehouse;
                        }
                        _fromInventLocationId = fromFallbackWarehouse;
                    }
                }
            }
        }

        return [_fromInventLocationId,_toInventLocationId];
    }

]]></Source>
			</Method>
			<Method>
				<Name>receivingPointString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the formatted string containing the details about the receiving point:
    /// - receiving warehouse - for relation of type Warehouse
    /// - receiving country (+ zip code) - for relation of type Address
    /// </summary>
    public display str receivingPointString()
    {
        str result;

        if ( this.toInventLocation != '')
        {
            result = this.ToInventLocation;
        }
        else
        {
            if (this.toZipCode != '')
            {
                result = strfmt( '@WAX:ReceivingPointFormat', this.ToCountryRegionId, this.ToZipCode, this.ToCity);
            }
            else
            {
                result = this.ToCountryRegionId;
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logisticsPostalAddressMapInterface</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>LogisticsPostalAddressMapInterface</c> object associated with the current table record.
    /// </summary>
    /// <returns>
    /// A <c>LogisticsPostalAddressMapInterface</c> object.
    /// </returns>
    public LogisticsPostalAddressMapInterface logisticsPostalAddressMapInterface()
    {
        return LogisticsPostalAddressMapInterface::createInstance(this);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124487</DeveloperDocumentation>
	<FormRef>CustVendtransportpoint2Point</FormRef>
	<Label>@SYS88255</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>FromInventLocation</TitleField1>
	<TitleField2>ToInventLocation</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>SortIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>SortIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromInventLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToCounty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToZipCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToInventLocation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromInventLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToInventLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToCounty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToZipCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReceivingPoint</Name>
			<Label>@SYS88253</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ToInventLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToZipCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToCity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToCounty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToCountryRegionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReceivingPoint_RU</Name>
			<Label>@SYS88253</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ToInventLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToZipCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToCounty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToTownId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToSettlementId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToStreetId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToEstate_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToBuilding_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToFlat_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ShippingPoint</Name>
			<Label>@SYS88254</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromInventLocation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TableGroup</Name>
			<Label>@SYS21958</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ToAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToStreet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToTransportPointType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transport</Name>
			<Label>@SYS50385</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransportDays</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FromInventLocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS88252</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToAddress</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsAddressing</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToBuilding_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AddressBuilding_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToCity</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsAddressCityName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToCountryRegionId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsAddressCountryRegionId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToCounty</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsAddressCountyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToEstate_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AddressEstate_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToFlat_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AddressFlat_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToInventLocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>InventTransferOrders</ConfigurationKey>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS88251</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToSettlementId_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AddressSettlementId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToState</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsAddressStateId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToStreet</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsAddressStreet</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToStreetId_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AddressStreetId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToTownId_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AddressTownId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ToTransportPointType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CustVendTransportPointType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ToZipCode</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsAddressZipCodeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TransportDays</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustVendTransportDays</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SortIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FromInventLocation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToInventLocation</DataField>
					<Optional>Yes</Optional>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToCountryRegionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToState</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToCounty</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToZipCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>LogisticsPostalAddressMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Address</MapField>
					<MapFieldTo>ToAddress</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Attention</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ZipCode</MapField>
					<MapFieldTo>ToZipCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>County</MapField>
					<MapFieldTo>ToCounty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CountryRegionId</MapField>
					<MapFieldTo>ToCountryRegionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>State</MapField>
					<MapFieldTo>ToState</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>City</MapField>
					<MapFieldTo>ToCity</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Street</MapField>
					<MapFieldTo>ToStreet</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CityRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>District</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StreetNumber</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BuildingCompliment</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PostBox</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ZipCodeRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DistrictName</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StreetId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>HouseId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FlatId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Apartment_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Building_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CityKana_JP</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>InventLocationFrom</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventLocationFrom</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustVendTransportPointLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FromInventLocation</Name>
					<Field>FromInventLocation</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventLocationTo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventLocationTo</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustVendTransportPointLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToInventLocation</Name>
					<Field>ToInventLocation</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToCountryRegionId</Name>
					<Field>ToCountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LogisticsAddressCounty</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCounty</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToCountryRegionId</Name>
					<Field>ToCountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToState</Name>
					<Field>ToState</Field>
					<RelatedField>StateId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToCounty</Name>
					<Field>ToCounty</Field>
					<RelatedField>CountyId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LogisticsAddressState</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressState</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToCountryRegionId</Name>
					<Field>ToCountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToState</Name>
					<Field>ToState</Field>
					<RelatedField>StateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LogisticsAddressZipCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressZipCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToZipCode</Name>
					<SourceEDT>LogisticsAddressZipCodeId</SourceEDT>
					<Field>ToZipCode</Field>
					<RelatedField>ZipCode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToState</Name>
					<Field>ToState</Field>
					<RelatedField>State</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToCounty</Name>
					<Field>ToCounty</Field>
					<RelatedField>County</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ToCountryRegionId</Name>
					<Field>ToCountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>