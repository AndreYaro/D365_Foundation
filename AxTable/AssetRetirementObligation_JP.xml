<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetRetirementObligation_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetRetirementObligation_JP extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the asset retirement obligation setting is valid
    /// </summary>
    /// <param name="_assetDocumentEntry">
    /// <c>AssetDocumentEntry_JP</c> record, optional.
    /// </param>
    /// <returns>
    /// True if the retirement obligation setting is valid.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean check(AssetDocumentEntry_JP _assetDocumentEntry = null)
    {
        AssetDepBookMap_JP          depBookMap;
        AssetDepreciationProfile    depProfile;
        boolean                     ret = true;

        if (prmisDefault(_assetDocumentEntry))
        {
            _assetDocumentEntry = AssetDocumentEntry_JP::find(this.AssetDocumentEntry_JP);
        }

        depBookMap = AssetDepBookMap_JP::findByAssetIdBookId(_assetDocumentEntry.AssetId, _assetDocumentEntry.BookId);
        depProfile = depBookMap.depreciationProfile();

        if (depProfile.DepreciationYear == AssetDepreciationYear::Calendar)
        {
            ret = checkFailed(strFmt("@FixedAssets:FA_MessageValidation_YouCannotAssignRetirementObligationCorCurrentDepreciationYear", depBookMap.AssetId, depBookMap.AssetBookId));
        }
        else if (depProfile.Accrual == AssetAccrual::Yearly && this.PostingFrequency == AssetRetirementPostingFrequency_JP::Quarterly)
        {
            ret = checkFailed(strFmt("@FixedAssets:FA_MessageValidation_PostingFrequencyForRetirementObligationMustBeLower", depBookMap.AssetId, depBookMap.AssetBookId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayEstimatedRetirementCost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the estimated retirement cost.
    /// </summary>
    /// <returns>
    /// The estimated retirement cost.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display AssetRetirementCostValue_JP displayEstimatedRetirementCost()
    {
        AssetRetirementCostValue_JP ret;

        ret = AssetRetirementCostSchedule_JP::getEstimatedRetirementCost(this.RecId);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEndDayOfAROServiceLife</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the end day of service life for current retirement obligation.
    /// </summary>
    /// <returns>
    /// The end day of service life.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AssetTransDate getEndDayOfAROServiceLife()
    {
        AssetTransDate              ret;
        AssetDocumentEntry_JP       assetDocumentEntry = this.AssetDocumentEntry_JP();
        AssetTableIntervalExt_JP    assetTableIntervalExt;
        AssetDepreciationProfile    assetDepreciationProfile;
        AssetDepBookTableMap_JP     assetDepBookTableMap;
        AssetDepBookMap_JP          assetDepBookMap;

        assetDepBookMap = AssetDepBookMap_JP::findByAssetIdBookId(
            assetDocumentEntry.AssetId,
            assetDocumentEntry.BookId);
        assetDepreciationProfile = assetDepBookMap.AssetDepBookMap_JP::depreciationProfileOnDate(assetDepBookMap.DepreciationStartDate);
        if (assetDepreciationProfile)
        {
            if (assetDepreciationProfile.DepreciationYear == AssetDepreciationYear::Fiscal)
            {
                assetDepBookTableMap = AssetDepBookTableMap_JP::find(
                    AssetDepCalculationHelper_JP::determineAssetBookType(assetDepBookMap.TableId),
                    assetDocumentEntry.BookId);
                assetTableIntervalExt = AssetTableIntervalExt_JP::constructFromCalendarSchedule(
                    assetDepreciationProfile,
                    assetDepBookTableMap.TableId,
                    assetDepBookTableMap.RecId);

                ret = assetTableIntervalExt.endDayOfServiceLife(assetDepBookMap.DepreciationStartDate, this.ServiceLife);
            }
            else
            {
                throw warning(strFmt("@FixedAssets:FA_MessageValidation_YouCannotAssignRetirementObligationCorCurrentDepreciationYear", assetDocumentEntry.AssetId, assetDocumentEntry.BookId));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromAssetDepBookMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize from <C>AssetDepBookMap_JP</C> record.
    /// </summary>
    /// <param name="_assetDepBookMap">
    /// An record of <C>AssetDepBookMap_JP</C>.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromAssetDepBookMap(AssetDepBookMap_JP _assetDepBookMap)
    {
        this.ServiceLife = _assetDepBookMap.ServiceLife;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes from asset document table.
    /// </summary>
    /// <param name="_assetDocumentTable">
    /// The asset document table.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromDocument(AssetDocumentTable_JP _assetDocumentTable)
    {
        this.DocumentDate = _assetDocumentTable.DocumentDate;
        this.Name = _assetDocumentTable.Description;
        this.PostingFrequency = AssetRetirementObligationTable_JP::findByDocument(_assetDocumentTable.RecId).PostingFrequency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(AssetRetirementObligation_JP, PostingFrequency):
                if (ret && this.RecId && !this.check())
                {
                    ret = false;
                }

                if (ret
                    && this.RecId
                    && this.orig().PostingFrequency == AssetRetirementPostingFrequency_JP::Quarterly
                    && this.PostingFrequency == AssetRetirementPostingFrequency_JP::Yearly
                    && hasGUI())
                {
                    if (Box::okCancel(
                        "@SYS4005529",
                        DialogButton::Cancel,
                        "@SYS4004974") == DialogButton::Cancel)
                    {
                        ret = false;
                    }
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the value of the field.
    /// </summary>
    /// <param name="_fieldName">
    /// The field name.
    /// </param>
    /// <param name="_arrayIndex">
    /// The index of the array.
    /// </param>
    /// <returns>
    /// Returns true if valid.
    /// </returns>
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;

        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(AssetRetirementObligation_JP, ServiceLife):
                    if (this.ServiceLife < 0)
                    {
                        ret = checkFailed("@SYS107866");
                    }
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkDocumentEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the asset retirement obligation setting on the asset document entry is valid
    /// </summary>
    /// <param name="_documentEntryRecId">
    /// The document entry record id.
    /// </param>
    /// <returns>
    /// True if the retirement obligation setting is valid.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean checkDocumentEntry(RefRecId _documentEntryRecId)
    {
        boolean                         ret = true;
        AssetDocumentEntry_JP           assetDocumentEntry;
        AssetRetirementObligation_JP    retirementObligation;

        assetDocumentEntry = AssetDocumentEntry_JP::find(_documentEntryRecId);
        retirementObligation = AssetRetirementObligation_JP::findByDocumentEntry(_documentEntryRecId);
        ret = retirementObligation.check(assetDocumentEntry);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExistingRetirementObligation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks duplicate retirement obligation.
    /// </summary>
    /// <param name="_assetId">
    /// The asset id.
    /// </param>
    /// <param name="_bookId">
    /// The value model id.
    /// </param>
    /// <returns>
    /// True if there is Existing ARO; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean checkExistingRetirementObligation(AssetId _assetId, AssetBookId _bookId)
    {
        AssetDocumentTable_JP           assetDocumentTable;
        AssetDocumentEntry_JP           assetDocumentEntry;
        boolean                         result = true;

        //No more than 1 Retirement Obligation
        select count(Recid) from assetDocumentEntry
            where  assetDocumentEntry.AssetId == _assetId
                && assetDocumentEntry.BookId  == _bookId
        exists join assetDocumentTable
            where assetDocumentEntry.AssetDocumentTable_JP == assetDocumentTable.RecId
                && assetDocumentTable.Type == AssetDocumentType_JP::AssetRetirementObligation;

        if (assetDocumentEntry.RecId > 0)
        {
            result = checkFailed("@SYS4005455");
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByDocumentEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the retirement obligation document  by document entry.
    /// </summary>
    /// <param name="_documentEntryRecId">
    /// The document entry record id.
    /// </param>
    /// <param name="_forupdate">
    /// Whether to update.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model.
    /// </param>
    /// <returns>
    /// The retirement obligation document.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AssetRetirementObligation_JP findByDocumentEntry(
        RefRecId            _documentEntryRecId,
        boolean             _forupdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetRetirementObligation_JP   retirementObligation;

        retirementObligation.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            retirementObligation.concurrencyModel(_concurrencyModel);
        }

        if (_documentEntryRecId)
        {
            select firstonly
                retirementObligation
            where
                retirementObligation.AssetDocumentEntry_JP == _documentEntryRecId;
        }

        return retirementObligation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLastTransactionOfTypePostingDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the last posting date of specific transaction types for the specific asset retirement obligation document
    /// </summary>
    /// <param name="_documentEntryRecId">
    /// Asset retirement obligation document record id.
    /// </param>
    /// <param name="_fromType">
    /// The from transaction type to be included.
    /// </param>
    /// <param name="_toType">
    /// The to transaction type to be included.
    /// </param>
    /// <param name="_allType">
    /// Indicates whether to include all transaction types.
    /// </param>
    /// <returns>
    /// Last interest posting date.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TransDate getLastTransactionOfTypePostingDate(
        RefRecId _documentEntryRecId,
        AssetTransType _fromType,
        AssetTransType _toType = AssetTransType::None,
        boolean _allType = false)
    {
        AssetTrans                  assetTrans;
        AssetDocumentTrans_JP       assetDocumentTrans;
        TransactionReversalTrans    transactionReversalTrans;
        AssetTransType              toAssetTransType = _toType;

        if (toAssetTransType == AssetTransType::None)
        {
            toAssetTransType = _fromType;
        }

        select firstOnly TransDate from assetTrans
            order by assetTrans.TransDate desc
            join AssetDocumentEntry_JP from assetDocumentTrans
            where assetDocumentTrans.RefTableId == assetTrans.TableId
                && assetDocumentTrans.RefRecId == assetTrans.RecId
                && assetDocumentTrans.AssetDocumentEntry_JP == _documentEntryRecId
                && (_allType
                    || (assetTrans.TransType == _fromType
                        || assetTrans.TransType == toAssetTransType))
            notExists join transactionReversalTrans
                where transactionReversalTrans.Reversed == NoYes::Yes
                    && transactionReversalTrans.RefTableId == tableNum(AssetTrans)
                    && transactionReversalTrans.RefRecId == assetTrans.RecId;

        return assetTrans.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLastTransactionPostingDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the last interest posting date for the specific asset retirement obligation document
    /// </summary>
    /// <param name="_documentEntryRecId">
    /// Asset retirement obligation document record id.
    /// </param>
    /// <returns>
    /// Last interest posting date.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TransDate getLastTransactionPostingDate(RefRecId _documentEntryRecId)
    {
        return AssetRetirementObligation_JP::getLastTransactionOfTypePostingDate(
            _documentEntryRecId,
            AssetTransType::None,
            AssetTransType::None,
            true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAcquired</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the asset retirement obligation is acquired
    /// </summary>
    /// <param name="_documentEntryRecId">
    /// Asset retirement obligation document record id.
    /// </param>
    /// <returns>
    /// True if acquired
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean isAcquired(RefRecId _documentEntryRecId)
    {
        AssetTransDate                      lastAcquisitionDate;

        lastAcquisitionDate = AssetRetirementObligation_JP::getLastTransactionOfTypePostingDate(
            _documentEntryRecId,
            AssetTransType::Acquisition,
            AssetTransType::AcquisitionAdj);

        return (lastAcquisitionDate != dateNull());
    }

]]></Source>
			</Method>
			<Method>
				<Name>AssetDocumentEntry_JP</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public AssetDocumentEntry_JP AssetDocumentEntry_JP(AssetDocumentEntry_JP _relatedTable = null)
        {
            if (prmIsDefault(_relatedTable))
            {
                return this.setLink('AssetDocumentEntry_JP');
            }
            else
            {
                return this.setLink('AssetDocumentEntry_JP', _relatedTable);
            }
        }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<DeveloperDocumentation>@FixedAssets:FA_MessageDeveloper_AssetRetirementObligation_JP</DeveloperDocumentation>
	<Label>@SYS4005475</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>AssetDocumentEntry_JP</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>FixedAssets</Modules>
	<ReplacementKey>AssetDocumentEntryIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetDocumentEntry_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceLife</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetDocumentEntry_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingFrequency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceLife</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetDocumentEntry_JP</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AssetRetirementObligation</Name>
			<Label>@SYS4005475</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetDocumentEntry_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingFrequency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceLife</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetDocumentEntry_JP</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DocumentDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDocumentDate_JP</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostingFrequency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS78055</Label>
			<EnumType>AssetRetirementPostingFrequency_JP</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ServiceLife</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetServiceLife</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AssetDocumentEntryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetDocumentEntry_JP</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetDocumentEntry_JP</Name>
			<Cardinality>ZeroOne</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>AssetDocumentEntry_JP</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>AssetDocumentEntry_JP</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetRetirementCost_JP</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetDocumentEntry_JP</Name>
					<Field>AssetDocumentEntry_JP</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>