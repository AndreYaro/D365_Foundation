<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Plafond_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class Plafond_IT extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>closePlafond</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns values related to plafond closure.
    /// </summary>
    public void closePlafond()
    {
        this.ClosedDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        this.Status = PlafondStatus_IT::Closed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ImageStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Translates the message type of the row to an icon element resource.
    /// </summary>
    /// <returns>
    ///    An icon element that identifies the message type.
    /// </returns>
    public display imageRes ImageStatus()
    {
        #ResAppl
        imageRes ret;
        if (!this.InitialAmount)
        {
            ret = 10809;
        }

        if (!ret && this.CurrentAmount > this.InitialAmount)
        {
            ret = #imageError;
        }

        if (!ret && this.CurrentAmount > this.WarningAmount())
        {
            ret = #imageWarning;
        }

        return ret;

    }

]]></Source>
			</Method>
			<Method>
				<Name>warningAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the plafond warning amount.
    /// </summary>
    /// <returns>The plafond warning amount value.</returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display PlafondWarningAmount_IT warningAmount()
    {
        PlafondWarningAmount_IT amount;

        if (this.LimitType == PlafondLimitType_IT::Amount)
        {
            amount = this.LimitAmount;
        }
        else
        {
            amount = (this.InitialAmount * this.LimitPercent / 100);
        }

        return amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPlafond</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and inserts <c>Plafond_IT</c> record.
    /// </summary>
    /// <param name = "_fromDate">The start date of validity.</param>
    /// <param name = "_toDate">The end date of validity.</param>
    /// <param name = "_initialAmount">The plafond initial amount value.</param>
    /// <param name = "_limitType">The type of remaining amount warning.</param>
    /// <param name = "_limitAmount">The remaining amount value to raise warning.</param>
    /// <param name = "_limitPercent">The percentage of plafond remaining amount to raise warning.</param>
    /// <param name = "_description">The plafond description.</param>
    /// <param name = "_taxPeriod">The tax period.</param>
    /// <param name = "_validateOnly">Determines if created record is for validation purpose only.</param>
    /// <returns>true if the <c>Plafond_IT</c> can be created, otherwise false.</returns>
    public static boolean createPlafond(
        FromDate _fromDate,
        ToDate _toDate,
        AmountMST _initialAmount,
        PlafondLimitType_IT _limitType,
        AmountMST _limitAmount,
        Percent _limitPercent,
        Description _description,
        TaxPeriod _taxPeriod,
        boolean _validateOnly = false)
    {
        Plafond_IT plafond;

        NumberSeq numberSeq = NumberSeq::newGetNum(NumberSeqReference::findReference(extendedTypeNum(PlafondId_IT)));
        plafond.PlafondId = numberSeq.num();
        plafond.Description = _description;
        plafond.InitialAmount = _initialAmount;
        plafond.CurrentAmount = 0;
        plafond.LimitType = _limitType;
        plafond.LimitAmount = _limitAmount;
        plafond.LimitPercent = _limitPercent;
        plafond.FromDate = _fromDate;
        plafond.ToDate = _toDate;
        plafond.TaxPeriod = _taxPeriod;
        plafond.ClosedDate = DateNull();
        plafond.Status = PlafondStatus_IT::Open;

        boolean ret = plafond.validateWrite();

        if (!_validateOnly && ret)
        {
            plafond.insert();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existTransactions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the plafond has related tax transactions.
    /// </summary>
    /// <param name = "_plafondId">The Id of plafond to check.</param>
    /// <returns>true if transactions exist, otherwise false.</returns>
    public static boolean existTransactions(PlafondId_IT _plafondId)
    {
        TaxTrans_IT taxTrans;
        select nofetch firstonly RecId from taxTrans
            where taxTrans.PlafondId == _plafondId;

        return (taxTrans.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>Plafond_IT</c> record.
    /// </summary>
    /// <param name = "_plafondId">The <c>PlafondId_IT</c> to search for.</param>
    /// <param name = "_forUpdate">Determines if found record must be selected for update or not.</param>
    /// <returns>The <c>Plafond_IT</c> record.</returns>
    public static Plafond_IT find(PlafondId_IT _plafondId, boolean _forUpdate = false)
    {
        Plafond_IT plafond;

        if (_plafondId)
        {
            plafond.selectForUpdate(_forUpdate);
            select firstonly plafond
                where plafond.PlafondId == _plafondId;
        }

        return plafond;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findActivePlafond</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the active <c>Plafond_IT</c> for specified date. 
    /// </summary>
    /// <param name = "_currentDate">The date to perform search for.</param>
    /// <param name = "_forUpdate">Determines if found record must be selected for update or not.</param>
    /// <returns>The <c>Plafond_IT</c> record.</returns>
    public static Plafond_IT findActivePlafond(TransDate _currentDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()), boolean _forUpdate = false)
    {
        Plafond_IT plafond;
        plafond.selectForUpdate(_forUpdate);

        select firstonly plafond
            order by ToDate desc
            where plafond.FromDate <= _currentDate
                && plafond.ToDate >= _currentDate
                && ((plafond.Status == PlafondStatus_IT::Open)
                   ||(_currentDate <= plafond.ClosedDate ));

        return plafond;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkDatesInterval</Name>
				<Source><![CDATA[
    private static boolean checkDatesInterval(
        FromDate _fromDate,
        ToDate _toDate,
        FromDate _fromDateCheck,
        ToDate _toDateCheck)
    {
        return (_fromDateCheck >= _fromDate || _toDateCheck >= _fromDate)
            && (_fromDateCheck <= _toDate || _toDateCheck <= _toDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPlafondInPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the active plafond for the specified interval of dates. 
    /// </summary>
    /// <param name = "_fromDate">The beginning date.</param>
    /// <param name = "_toDate">The end date.</param>
    /// <param name = "taxPeriod">The tax period.</param>
    /// <returns>The <c>Plafond_IT</c> record.</returns>
    public static Plafond_IT findPlafondInPeriod(
        FromDate _fromDate,
        ToDate _toDate,
        TaxPeriod taxPeriod = '')
    {
        Plafond_IT plafond;
        Plafond_IT ret;

        while select plafond
        {
            if (plafond.Status == PlafondStatus_IT::Open)
            {
                // Check if there is an open plafond in the same period.
                if (Plafond_IT::checkDatesInterval(
                    _fromDate,
                    _toDate,
                    plafond.FromDate,
                    plafond.ToDate)
                    && (taxPeriod == '' || plafond.TaxPeriod == taxPeriod))
                {
                    ret = plafond;
                    break;
                }
            }
            else
            {
                TransDate endDate = (plafond.ToDate <= plafond.ClosedDate) ? plafond.ToDate : plafond.ClosedDate;
                // If endDate is not later than _fromDate the plafond has never been used.
                if (plafond.FromDate <= endDate)
                {
                    // Check if there is a closed plafond that was active in the same period.
                    if (Plafond_IT::checkDatesInterval(
                        _fromDate,
                        _toDate,
                        plafond.FromDate,
                        endDate)
                        && (taxPeriod == '' || plafond.TaxPeriod == taxPeriod))
                    {
                        ret = plafond;
                        break;
                    }
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the record can be written.
    /// </summary>
    /// <returns>true if the record can be written, otherwise false.</returns>
    public boolean validateWrite()
    {
        boolean ret = super();
        
        if (!TaxReportPeriod::existIntervalInDates(this.TaxPeriod, this.FromDate - 1, this.ToDate + 1))
        {
            ret = checkFailed("@ExtendedItallianLocalization:TaxSettlementPeriodsMustBeDefinedForDateRange");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IT</CountryRegionCodes>
	<DeveloperDocumentation>@ExtendedItallianLocalization:PlafondTableDevDoc</DeveloperDocumentation>
	<FormRef>Plafond_IT</FormRef>
	<Label>@ExtendedItallianLocalization:Plafond</Label>
	<TitleField1>PlafondId</TitleField1>
	<TitleField2>Status</TitleField2>
	<ClusteredIndex>PlafondIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<PrimaryIndex>PlafondIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>PlafondPeriodTrans</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>PlafondPeriodTrans_IT</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LimitAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InitialAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClosedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlafondId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LimitType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LimitPercent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PlafondId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amouts</Name>
			<Label>@ExtendedItallianLocalization:PlafondAmounts</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InitialAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrentAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PlafondId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LimitCheck</Name>
			<Label>@ExtendedItallianLocalization:LimitCheck</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NoLimitCheck</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PlafondComposition</Name>
			<Label>@ExtendedItallianLocalization:OperationsContributingPlafond</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PlafondType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATDeclarationPresented</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Exportation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EUSales</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SanMarinoSales</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssimilatedOperations</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SpecialOperations</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ValidityPeriod</Name>
			<Label>@SYS29148</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClosedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxPeriod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WarningLimits</Name>
			<Label>@ExtendedItallianLocalization:PlafondLimit</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LimitType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LimitAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LimitPercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WarningAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssimilatedOperations</Name>
			<HelpText>@ExtendedItallianLocalization:AssimilatedOperationsHelpText</HelpText>
			<Label>@ExtendedItallianLocalization:AssimilatedOperations</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ClosedDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<HelpText>@ExtendedItallianLocalization:CloosingDateOfValidity</HelpText>
			<Label>@SYS22065</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CurrentAmount</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<HelpText>@ExtendedItallianLocalization:PlafondCurrentAmountHelpText</HelpText>
			<Label>@ExtendedItallianLocalization:PlafondCurrentAmount</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EUSales</Name>
			<HelpText>@ExtendedItallianLocalization:EuSalesHelpText</HelpText>
			<Label>@ExtendedItallianLocalization:EuSales</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Exportation</Name>
			<HelpText>@ExtendedItallianLocalization:ExportHelpText</HelpText>
			<Label>@ExtendedItallianLocalization:Export</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>FromDate</ExtendedDataType>
			<HelpText>@ExtendedItallianLocalization:StartingDayOfValidity</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InitialAmount</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<HelpText>@ExtendedItallianLocalization:PlafondInitialAmountHelpText</HelpText>
			<Label>@ExtendedItallianLocalization:InitialPlafondAmount</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LimitAmount</Name>
			<ExtendedDataType>PlafondAmount_IT</ExtendedDataType>
			<HelpText>@ExtendedItallianLocalization:PlafondWarningAmountHelpText</HelpText>
			<Label>@ExtendedItallianLocalization:PlafondWarningAmount</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LimitPercent</Name>
			<ExtendedDataType>Percent</ExtendedDataType>
			<HelpText>@ExtendedItallianLocalization:PlafondWarningPercentHelpText</HelpText>
			<Label>@ExtendedItallianLocalization:PlafondWarningPercent</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LimitType</Name>
			<HelpText>@ExtendedItallianLocalization:PlafondLimitTypeHelpText</HelpText>
			<EnumType>PlafondLimitType_IT</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NoLimitCheck</Name>
			<HelpText>@ExtendedItallianLocalization:AllowExceedPlafondLimitHelpText</HelpText>
			<Label>@ExtendedItallianLocalization:AllowExceedPlafondLimit</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PlafondId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>PlafondId_IT</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PlafondType</Name>
			<EnumType>PlafondType_IT</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SanMarinoSales</Name>
			<HelpText>@ExtendedItallianLocalization:AllowPlafondSalesHelpText</HelpText>
			<Label>@ExtendedItallianLocalization:SanMarinoSales</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SpecialOperations</Name>
			<HelpText>@ExtendedItallianLocalization:SpecialOperationsHelpText</HelpText>
			<Label>@ExtendedItallianLocalization:SpecialOperations</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>PlafondStatus_IT</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxPeriod</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>TaxPeriod</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>ToDate</ExtendedDataType>
			<HelpText>@ExtendedItallianLocalization:EndingDayOfValidity</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VATDeclarationPresented</Name>
			<HelpText>@ExtendedItallianLocalization:VatDeclarationPresentedHelpText</HelpText>
			<Label>@ExtendedItallianLocalization:VatDeclarationPresented</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PlafondIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PlafondId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>TaxPeriodHead</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxPeriodHead</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxPeriodHead</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxPeriod</Name>
					<SourceEDT>TaxPeriod</SourceEDT>
					<Field>TaxPeriod</Field>
					<RelatedField>TaxPeriod</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>