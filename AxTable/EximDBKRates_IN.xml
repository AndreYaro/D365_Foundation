<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EximDBKRates_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EximDBKRates_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>productGroupDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays product group description.
    /// </summary>
    /// <returns>
    /// The product group description.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display Description productGroupDescription()
    {
        return EximProductGroupTable_IN::find(this.ProductGroupTableRecId).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
        public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (ret && EximDBKRates_IN::checkDBKSchemesLine(this.RecId))
        {
            ret = checkFailed(strfmt("@SYS75284", tablepname(EximDBKSchemesLine_IN)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean                  ret;
        EximDBKRates_IN          dbkRates;
        EximProductGroupTable_IN productGroupTable;

        ret = super();

        if (ret)
        {
            if (!this.RecId)
            {
                select firstonly RecId from dbkRates
                    where dbkRates.ProductGroupTableRecId == this.ProductGroupTableRecId
                    join ProductGroup from productGroupTable
                        where productGroupTable.RecId == this.ProductGroupTableRecId;

                if (dbkRates.RecId)
                {
                    ret = checkFailed(strfmt("@GLS62038", productGroupTable.ProductGroup));
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkDBKSchemesLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if EximDBKRates has used in any shipping Bill transaction.
    /// </summary>
    /// <param name="_dbkRatesRecId">EximDBKRates_IN table recId</param>
    /// <returns>returns true/false based record found.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean checkDBKSchemesLine(RefRecId _dbkRatesRecId)
    {
        CustomsShippingBillTrans_IN customsShippingBillTrans;
        EximShippingBillTrans_IN    eximShippingBillTrans;
        EximProductGroupTable_IN    productGroupTable;
        EximDBKSchemesLine_IN       dbkSchemesLine;
        EximDBKValues_IN            dbkValues;
        boolean                     ret;
        UtcDateTime                 minDateTime, maxDateTime;

        TransDate convertDateTime2Date(TransDateTime _transDateTime)
        {
            return DateTimeUtil::date(DateTimeUtil::applyTimeZoneOffset(_transDateTime, DateTimeUtil::getUserPreferredTimeZone()));
        }
        minDateTime = DateTimeUtil::minValue();
        maxDateTime = DateTimeUtil::maxValue();

        while select ValidTimeState(minDateTime, maxDateTime) CustomsTariffCodeTable, CenvatStatus, RateType, ValidFrom, ValidTo
            from dbkValues
                where dbkValues.dbkRatesRecId == _dbkRatesRecId
        join CustomsTariffCodeTable, dbkCenvatStatus, dbkRateType, ShippingBillTransRecId, EximProductGroupTable
            from eximShippingBillTrans
            where eximShippingBillTrans.CustomsTariffCodeTable  == dbkValues.CustomsTariffCodeTable
                   && eximShippingBillTrans.dbkCenvatStatus     == dbkValues.CenvatStatus
                   && eximShippingBillTrans.dbkRateType         == dbkValues.RateType
        join ShippingBillDate
            from customsShippingBillTrans
            where customsShippingBillTrans.RecId == eximShippingBillTrans.ShippingBillTransRecId
        join ProductGroup
            from productGroupTable
                where productGroupTable.RecId == eximShippingBillTrans.EximProductGroupTable
        join ShippingBillTransRecId
            from dbkSchemesLine
                where dbkSchemesLine.ShippingBillTransRecId == customsShippingBillTrans.RecId
        {
            if (customsShippingBillTrans.ShippingBillDate >= convertDateTime2Date(dbkValues.ValidFrom)
                && customsShippingBillTrans.ShippingBillDate <= convertDateTime2Date(dbkValues.ValidTo))
            {
                ret = true;
                break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if EximDBKRates_IN record exists for given EximproductGroupTable_IN table
    /// </summary>
    /// <param name="_productGroupTableRecId">RecId of the EximProductGroupTable_IN record</param>
    /// <returns>true, if the record is found in EximDBKRates_IN, otherwise false</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(RefRecId _productGroupTableRecId)
    {
        return _productGroupTableRecId
            && (select firstonly RecId from eximDBKRates_IN
                    where eximDBKRates_IN.ProductGroupTableRecId == _productGroupTableRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the EximDBKRates_IN table for the specified id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing EximDBKRates_IN table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximDBKRates_IN find(
        RefRecId            _recId,
        boolean             _forUpdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        EximDBKRates_IN    eximDBKRates;

        eximDBKRates.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            eximDBKRates.concurrencyModel(_concurrencyModel);
        }

        select firstonly eximDBKRates
            where eximDBKRates.RecId == _recId;

        return eximDBKRates;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProductGroupTableRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the EximDBKRates_IN table for the specified EximProductGroupTable_IN recId.
    /// </summary>
    /// <param name="_productGroupTableRecId">RecId of EximProductGroupTable_IN</param>
    /// <param name="_forUpdate">boolean selectForUpdate</param>
    /// <returns>EximDBKRates_IN table record</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximDBKRates_IN findByProductGroupTableRecId(
        RefRecId _productGroupTableRecId,
        boolean  _forUpdate = false)
    {
        EximDBKRates_IN dbkRates;

        if (_productGroupTableRecId)
        {
            dbkRates.selectForUpdate(_forUpdate);

            select firstonly dbkRates
                where dbkRates.ProductGroupTableRecId == _productGroupTableRecId;
        }

        return dbkRates;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS62429</DeveloperDocumentation>
	<FormRef>EximDBKRates_IN</FormRef>
	<Label>@GLS62036</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ProductGroupTableRecId</TitleField1>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>ExportImportIndia</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>EximDBKValues_IN</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>EximDBKValues_IN</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductGroupTableRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductGroupTableRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProductGroupTableRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProductGroupTableRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EximProductGroupTableRecId_IN</ExtendedDataType>
			<Label>@SYS58238</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProductGroupTableRecIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProductGroupTableRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EximProductGroupTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>EximProductGroupTable_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EximProductGroupTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EximProductGroupTable_IN_EximDBKRates_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductGroupTableRecId</Name>
					<Field>ProductGroupTableRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>