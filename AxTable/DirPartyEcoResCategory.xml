<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DirPartyEcoResCategory</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DirPartyEcoResCategory extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activateFutureRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Activates a selected future record in a <c>DirPartyEcoResCategory</c> table.
    /// </summary>
    /// <param name="_dirPartyCategoryRecId">
    /// The record in the <c>DirPartyEcoResCategory</c> table to make active.
    /// </param>
    /// <remarks>
    /// If the <c>DirPartyEcoResCategory.activateFutureRecord</c> method is called by using the version
    /// record in the past, an error will be thrown.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void activateFutureRecord(RefRecId _dirPartyCategoryRecId)
    {
        DirPartyEcoResCategory  dirPartyCategoryActivate;

        ttsbegin;
        dirPartyCategoryActivate = DirPartyEcoResCategory::findVersion(_dirPartyCategoryRecId, true);
        if (dirPartyCategoryActivate.RecId)
        {
            dirPartyCategoryActivate.validTimeStateUpdateMode(ValidTimeStateUpdate::Correction);
            dirPartyCategoryActivate.ValidFrom = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
            dirPartyCategoryActivate.update();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNewVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new version to a specified record in the <c>DirPartyEcoResCategory</c> table.
    /// </summary>
    /// <param name="_dirPartyCategoryRecId">
    /// The record in the <c>DirPartyEcoResCategory</c> table of which a new version will be created.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void createNewVersion(RefRecId _dirPartyCategoryRecId)
    {
        DirPartyEcoResCategory dirPartyEcoResCategoryNew;

        dirPartyEcoResCategoryNew = DirPartyEcoResCategory::findVersion(_dirPartyCategoryRecId, true);
        dirPartyEcoResCategoryNew.ValidFrom = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        dirPartyEcoResCategoryNew.ValidTo = maxDate();
        dirPartyEcoResCategoryNew.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides delete method of <c>DirPartyEcoResCategory</c> table, to delete any
    /// future records, and retire any past records.
    /// </summary>
    public void delete()
    {
        date currentDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());

        ttsbegin;
            if (this.ValidFrom >= currentDate)
            {
                super();
            }
            else
            {
                this.validTimeStateUpdateMode(ValidTimeStateUpdate::Correction);
                this.ValidTo = currentDate - 1;
                this.update();
            }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>expireActiveRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Expires a current active record in a <c>DirPartyEcoResCategory</c> table.
    /// </summary>
    /// <param name="_dirPartyRecId">
    /// The record ID of the record in the <c>DirPartyTable</c> table to find.
    /// </param>
    /// <param name="_ecoResCategoryRecId">
    /// The record ID of the record in the  <c>EcoResCategory</c> table to find.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void expireActiveRecord(RefRecId _dirPartyRecId, RefRecId _ecoResCategoryRecId)
    {
        DirPartyEcoResCategory dirPartyEcoResCategoryExpire;
        date                   systemDate  = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());

        ttsbegin;
        dirPartyEcoResCategoryExpire = DirPartyEcoResCategory::findCategoryAsOfDate(_dirPartyRecId, _ecoResCategoryRecId, systemDate, true);
        if (dirPartyEcoResCategoryExpire.RecId)
        {
            dirPartyEcoResCategoryExpire.delete();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);
        switch (_fieldId)
        {
            case fieldNum(DirPartyEcoResCategory, CategoryHierarchy):
                if (this.orig().CategoryHierarchy != this.CategoryHierarchy)
                {
                    // Category hierarchy is changed
                    // therefore Procurement Category must be selected.
                    this.Category = 0;
                }
            break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(DirPartyEcoResCategory, Category):
                    if (EcoResCategory::find(this.Category).CategoryHierarchy != this.CategoryHierarchy)
                    {
                        // Category '%1' is not found in '%2' category type
                        ret = checkFailed(strFmt("@SYS189981",
                                                  EcoResCategory::find(this.Category).Name,
                                                  EcoResCategoryHierarchy::find(this.CategoryHierarchy).Name));
                    }
                    break;
                case fieldNum(DirPartyEcoResCategory, CategoryHierarchy):
                    if (EcoResCategoryHierarchyRole::existRoleHierarchyPair(EcoResCategoryNamedHierarchyRole::Procurement,this.CategoryHierarchy))
                    {
                        // Category hierarchy in Procurement role cannot be selected.
                        ret = checkFailed("@SYS310810");
                    }
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCategoryAsOfDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record that is valid as of a specified date in the <c>DirPartyEcoResCategory</c>
    /// table.
    /// </summary>
    /// <param name="_party">
    /// The record ID of a record in a <c>DirPartyTable</c> table.
    /// </param>
    /// <param name="_category">
    /// The record ID of a record in a <c>EcoRecCategory</c> table.
    /// </param>
    /// <param name="_asOfDate">
    /// The specified as of date.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether the record should be selected for an update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>DirPartyEcoResCategory</c> table; otherwise, an empty buffer.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static DirPartyEcoResCategory findCategoryAsOfDate(RecId _party,
                                                            RecId   _category,
                                                            date    _asOfDate  = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                                            boolean _forUpdate = false )
    {
        DirPartyEcoResCategory dirPartyEcoResCategory;

        if (_category)
        {
            dirPartyEcoResCategory.selectForUpdate(_forUpdate);

            select firstonly validTimeState(_asOfDate) dirPartyEcoResCategory
                where dirPartyEcoResCategory.Category == _category
                    && dirPartyEcoResCategory.Party == _party;
        }
        return dirPartyEcoResCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified version in the <c>DirPartyEcoResCategory</c> table.
    /// </summary>
    /// <param name="_dirPartyCategoryRecId">
    /// The record to find in the <c>DirPartyEcoResCategory</c> table.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for an update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>DirPartyEcoResCategory</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static DirPartyEcoResCategory findVersion(RecId _dirPartyCategoryRecId, boolean _forUpdate = false)
    {
        DirPartyEcoResCategory dirPartyEcoResCategory = null;
        date dtMin = dateNull();
        date dtMax = maxDate();

        if (_dirPartyCategoryRecId)
        {
            dirPartyEcoResCategory.selectForUpdate(_forUpdate);
            select ValidTimeState(dtMin, dtMax) dirPartyEcoResCategory
                where dirPartyEcoResCategory.RecId    == _dirPartyCategoryRecId;
        }

        return dirPartyEcoResCategory;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS318714</DeveloperDocumentation>
	<Label>@SYS153234</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Party</TitleField1>
	<TitleField2>relationType</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ValidCategory_AK</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>ValidCategory_AK</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<ValidTimeStateFieldType>Date</ValidTimeStateFieldType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CategoryHierarchy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CategorySetup</Name>
			<Label>@SYS69780</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CategoryHierarchy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Party</Name>
			<Label>@SYS126057</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Party</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Category</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategoryId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CategoryHierarchy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategoryHierarchyId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Party</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DirPartyRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidFromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>ValidToDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ValidCategory_AK</Name>
			<AlternateKey>Yes</AlternateKey>
			<ValidTimeStateKey>Yes</ValidTimeStateKey>
			<ValidTimeStateMode>Gap</ValidTimeStateMode>
			<Fields>
				<AxTableIndexField>
					<DataField>Party</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Category</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidFrom</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EcoResCategoryHierarchyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CategoryHierarchy</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EcoResCategoryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Category</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DirPartyTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DirPartyTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>DirPartyTable_DirPartyEcoResCategory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Party</Name>
					<Field>Party</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategory</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>EcoResCategory_DirPartyEcoResCategory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Category</Name>
					<Field>Category</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategoryHierarchy</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategoryHierarchy</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategoryHierarchy</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>EcoResCategoryHierarchy_DirPartyEcoResCategory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryHierarchy</Name>
					<Field>CategoryHierarchy</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>