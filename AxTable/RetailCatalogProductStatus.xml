<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCatalogProductStatus</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailCatalogProductStatus extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findOrCreateByCatalogProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or creates the record in the <c>RetailCatalogProductStatus</c> by a catalog product.
    /// </summary>
    /// <param name="_catalogProductRecId">
    /// The catalog product record ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean value.
    /// </param>
    /// <returns>
    /// A record in the RetailCatalogProductStatus if a catalog product can be found; otherwise, an empty record.
    /// </returns>
    public static RetailCatalogProductStatus findOrCreateByCatalogProduct(RefRecId _catalogProductRecId, boolean _forUpdate = false)
    {
        RetailCatalogProductStatus catalogProductStatus;
        CatalogProduct catalogProduct;

        if (_catalogProductRecId)
        {
            catalogProductStatus.selectForUpdate(_forUpdate);

            select firstonly Catalog, Product from catalogProduct
                where catalogProduct.RecId == _catalogProductRecId
                outer join catalogProductStatus
                    where catalogProductStatus.Catalog == catalogProduct.Catalog
                        && catalogProductStatus.Product == catalogProduct.Product;
            if (catalogProduct && !catalogProductStatus)
            {
                catalogProductStatus.Catalog = catalogProduct.Catalog;
                catalogProductStatus.Product = catalogProduct.Product;
                catalogProductStatus.insert();
            }
        }

        return catalogProductStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHasUnpublishedChange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set <c>HasUnpublishedChange</c> flag by <c>_CatalogProductRecId</c>.
    /// </summary>
    /// <param name="_catalogProductRecId">
    /// The catalog product record ID.
    /// </param>
    /// <param name="_hasUnpublishedChange">
    /// Whether the catalog product has any unpublished changes.
    /// </param>
    public static void setHasUnpublishedChange(RefRecId _catalogProductRecId, NoYesId _hasUnpublishedChange)
    {
        RetailCatalogProductStatus catalogProductStatus;

        ttsBegin;

        catalogProductStatus = RetailCatalogProductStatus::findOrCreateByCatalogProduct(_catalogProductRecId, true);
        if (catalogProductStatus)
        {
            catalogProductStatus.HasUnpublishedChange = _hasUnpublishedChange;
            catalogProductStatus.update();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@REX4160578</DeveloperDocumentation>
	<Label>@REX4160577</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Catalog</TitleField1>
	<TitleField2>Product</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>CatalogProductIdx</ClusteredIndex>
	<Modules>Merchandising</Modules>
	<ReplacementKey>CatalogProductIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Catalog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HasUnpublishedChange</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Catalog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Catalog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HasUnpublishedChange</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Catalog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatalogRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HasUnpublishedChange</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@REX4160579</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Product</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CatalogProductIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Catalog</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Product</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Catalog</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>Catalog</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Catalog</Name>
					<Field>Catalog</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Product</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResProduct</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Product</Name>
					<Field>Product</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>