<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradeBLWILines</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TradeBLWILines extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcAmountCur</Name>
				<Source><![CDATA[
    private void calcAmountCur()
    {
        this.AmountCur = CurrencyExchangeHelper::curAmount(this.AmountMST, this.CurrencyCode, this.TransDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcAmountMST</Name>
				<Source><![CDATA[
    private void calcAmountMST()
    {
        this.AmountMst = CurrencyExchangeHelper::amountCur2MST(this.AmountCur, this.CurrencyCode, 0, this.TransDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Searches for all split transactions and calls the <c>checkInvoice</c> method to check them.
    /// </summary>
    /// <param name="_lines">
    ///    The _lines parameter contains the base record to check the whole invoice and its split
    ///    transactions.
    ///    Also used to check whether the purpose code and the currency code are filled in.
    /// </param>
    /// <returns>
    ///    The <c>checkLine</c> method returns a Boolean value to indicate if the lines are correct.
    /// </returns>
    public boolean checkLine(TradeBLWILines _lines)
    {
        TradeBLWILines transfer;
        SetEnumerator se = TradeBLWILines::getSourceLines(_lines).getEnumerator();
        AmountMST invoiceTotal = _lines.invoiceTotal();
        boolean ret = true;

        while (se.moveNext())
        {
            transfer = se.current();
            if (transfer.AmountMSTOrig != invoiceTotal)
            {
                ret = false;
                break;
            }
        }

        if (ret && !_lines.CurrencyCode)
        {
            ret = false;
        }

        if (ret && !_lines.PurposeCode)
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustVendTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes record from the customer or vendor transaction.
    /// </summary>
    /// <param name="_custVendTrans">
    /// The customer or vendor transaction.
    /// </param>
    public void initFromCustVendTrans(CustVendTrans _custVendTrans)
    {
        this.Voucher = _custVendTrans.Voucher;
        this.TransDate = _custVendTrans.TransDate;
        this.AccountNum = _custVendTrans.AccountNum;
        this.Invoice = _custVendTrans.Invoice;
        this.CurrencyCode = _custVendTrans.CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTradeBLWIJournalPurposeCodes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes record from the purpose code journal.
    /// </summary>
    /// <param name="_journalPurposeCodes">
    /// The purpose code journal.
    /// </param>
    public void initFromTradeBLWIJournalPurposeCodes(TradeBLWIJournalPurposeCodes _journalPurposeCodes)
    {
        this.PurposeCode = _journalPurposeCodes.PurposeCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceTotal</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calculates the sum of the <c>amountMst</c> data type for an invoice.
    /// </summary>
    /// <returns>
    ///    The sum value of the <c>amountMst</c> data type for an invoice.
    /// </returns>
    public AmountMST invoiceTotal()
    {
        return
            (select sum(AmountMst) from TradeBLWILines
                where TradeBLWILines.CustVend == this.CustVend
                    && TradeBLWILines.AccountNum == this.AccountNum
                    && TradeBLWILines.TransDate == this.TransDate
                    && TradeBLWILines.Voucher == this.Voucher
                    && TradeBLWILines.Invoice == this.Invoice).AmountMst;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(TradeBLWILines, CountryRegionId):
                this.setAddressCountryRegionGroupBLWI();
                break;

            case fieldNum(TradeBLWILines, AmountCur):
                this.calcAmountMST();
                break;

            case fieldNum(TradeBLWILines, AmountMST):
            case fieldNum(TradeBLWILines, CurrencyCode):
                this.calcAmountCur();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressCountryRegionGroupBLWI</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets BLWI country/region id.
    /// </summary>
    public void setAddressCountryRegionGroupBLWI()
    {
        this.AddressCountryRegionGroupBLWI = AddressCountryRegionBLWI::findByCountryRegionId(this.CountryRegionId).AddressCountryRegionGroupBLWI;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCountryRegionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates country/region id.
    /// </summary>
    /// <returns>
    /// true if country/region is valid; otherwise, false.
    /// </returns>
    public boolean validateCountryRegionId()
    {
        boolean ret = true;

        if (!AddressCountryRegionBLWI::exist(this.CountryRegionId))
        {
            ret = false;
            error(strfmt("@TaxLocalization:BLWICountryRegionGroup", this.CountryRegionId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(TradeBLWILines, CountryRegionId):
                ret = this.validateCountryRegionId();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets all lines related to the one source.
    /// </summary>
    /// <param name="_tradeLine">
    /// The current <c>TradeBLWILines</c> record.
    /// </param>
    /// <returns>
    /// The set with lines related to the one source.
    /// </returns>
    public static Set getSourceLines(TradeBLWILines _tradeLine)
    {
        TradeBLWILines sourceLine;
        Set sourceLinesSet = new Set(Types::Record);

        while select sourceLine
        where sourceLine.CustVend == _tradeLine.CustVend
            && sourceLine.AccountNum == _tradeLine.AccountNum
            && sourceLine.TransDate == _tradeLine.TransDate
            && sourceLine.Voucher == _tradeLine.Voucher
            && sourceLine.Invoice == _tradeLine.Invoice
        {
            sourceLinesSet.add(sourceLine);
        }

        return sourceLinesSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether a record exists for the given record identification.
    /// </summary>
    /// <param name="_recId">
    ///    The <c>_recId</c> parameter contains the record identification to check on.
    /// </param>
    /// <returns>
    ///    An error message is displayed if a record for the given record identification is not available.
    ///    A
    ///    Boolean value indicates that a record exists or not for the given record identification.
    /// </returns>
    public static boolean checkExist(RecId _recId )
    {
        boolean ret = true;

        if (!TradeBLWILines::exist(_recId))
        {
            ret = checkFailed(strfmt(TradeBLWILines::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if a record exists for the given parameters.
    /// </summary>
    /// <param name="_recId">
    ///    The <c>_recId</c> parameter contains the identification of the record.
    /// </param>
    /// <returns>
    ///    true if the record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     tradeBLWILines
                 where
                     tradeBLWILines.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Searches for a record with specific parameters and returns that record.
    /// </summary>
    /// <param name="_recId">
    ///    The <c>_recId</c> parameter contains the record identification for which records have to be found.
    /// </param>
    /// <param name="_forupdate">
    ///    The <c>_forupdate</c> parameter indicates if the found data record is selected for update or
    ///    not.
    ///    Default set to false; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The <c>_concurrencyModel</c> contains the indication of which concurrency model should be
    ///    applied.
    ///    Default set to automatic; optional.
    /// </param>
    /// <returns>
    ///    A record of table <c>TradeBLWILines</c>.
    /// </returns>
    public static TradeBLWILines find(
        RecId _recId ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        TradeBLWILines tradeBLWILines;

        tradeBLWILines.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            tradeBLWILines.concurrencyModel(_concurrencyModel);
        }

        select firstonly tradeBLWILines
            where tradeBLWILines.RecId == _recId;

        return tradeBLWILines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a message that the record does not exist.
    /// </summary>
    /// <returns>
    ///    A text value is returned.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCharges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns charges.
    /// </summary>
    /// <returns>Charges for the transaction.</returns>
    public AmountCur getCharges()
    {
        AmountCur creditAmount;

        if (BankPaymBalanceSurvey::find(this.BankPaymBalanceSurvey).SurveyCalcType == BankPaymBalanceSurveyCalcType::Turnover)
        {
            if (this.AmountCur < 0)
            {
                creditAmount = this.AmountCur;
            }
        }

        return creditAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRevenue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns revenue.
    /// </summary>
    /// <returns>Revenue for the transaction.</returns>
    public AmountCur getRevenue()
    {
        AmountCur debitAmount;
        AmountCur creditAmount;

        if (BankPaymBalanceSurvey::find(this.BankPaymBalanceSurvey).SurveyCalcType == BankPaymBalanceSurveyCalcType::Balance)
        {
            if (this.CustVend == TradeBLWICustVend::Customer)
            {
                debitAmount = this.AmountCur;
            }
            else if (this.CustVend == TradeBLWICustVend::Vendor)
            {
                creditAmount = -1 * this.AmountCur;
            }
        }
        else
        {
            if (this.AmountCur > 0)
            {
                debitAmount = this.AmountCur;
            }
        }

        return debitAmount + creditAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCountryCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns country code.
    /// </summary>
    /// <returns>Country code.</returns>
    public str getCountryCode()
    {
        str countryCode = BankPaymBalanceSurvey::find(this.BankPaymBalanceSurvey).CountryRegionSummary;

        if (! countryCode)
        {
            countryCode = AddressCountryRegionGroupBLWI::find(this.AddressCountryRegionGroupBLWI).GroupID;
        }

        return countryCode;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ForeignTrade</ConfigurationKey>
	<CountryRegionCodes>BE</CountryRegionCodes>
	<DeveloperDocumentation>@SYS123522</DeveloperDocumentation>
	<FormRef>TradeBLWILines</FormRef>
	<Label>@SYS92158</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>CustVend</TitleField1>
	<TitleField2>Voucher</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>SourceIdx</ClusteredIndex>
	<Modules>APARShared</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustVend</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurposeCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS53072</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMst</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMSTOrig</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BLWI</Name>
			<Label>@SYS92163</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankPaymBalanceSurvey</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurposeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoGenerated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Included</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportingDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CountryRegion</Name>
			<Label>@SYS7437</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryRegionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustVend</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Miscellaneous</Name>
			<Label>@SYS73543</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AddressCountryRegionGroupBLWI</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Voucher</Name>
			<Label>@SYS12371</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Invoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustVendAC</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AddressCountryRegionGroupBLWI</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AddressCountryRegionGroupBLWIRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMst</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMSTOrig</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS81979</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoGenerated</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TradeBLWIAutoGenerated</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BankPaymBalanceSurvey</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PaymBalanceSurveyCodeRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryRegionId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AddressCountryRegionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustVend</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TradeBLWICustVend</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Included</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TradeBLWIIncluded</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Invoice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurposeCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BankCentralBankPurposeCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ReportingDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS23896</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AddressCountryRegionGroupBLWIIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AddressCountryRegionGroupBLWI</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BankPaymBalanceSurveyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BankPaymBalanceSurvey</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SourceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CustVend</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Invoice</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AddressCountryRegionGroupBLWI</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AddressCountryRegionGroupBLWI</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CountryRegionGroupBLWI</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BLWITransactions</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AddressCountryRegionGroupBLWI</Name>
					<Field>AddressCountryRegionGroupBLWI</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankCentralBankPurpose</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BankCentralBankPurpose</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BankCentralBankPurpose</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TradeBLWILines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurposeCode</Name>
					<SourceEDT>BankCentralBankPurposeCode</SourceEDT>
					<Field>PurposeCode</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankPaymBalanceSurvey</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BankPaymBalanceSurvey</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SurveyCode</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BLWITransactions</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankPaymBalanceSurvey</Name>
					<Field>BankPaymBalanceSurvey</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Currency</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TradeBLWILines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123523</EntityRelationshipRole>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustTableAccountNum</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustTradeBLWITrasactions</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CustVend</Name>
					<Field>CustVend</Field>
					<ValueStr>TradeBLWICustVend::Customer</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountNum</Name>
					<Field>AccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsAddressCountryRegion</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TradeBLWILines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryRegionId</Name>
					<SourceEDT>AddressCountryRegionId</SourceEDT>
					<Field>CountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123524</EntityRelationshipRole>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendTableAccountNum</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendTradeBLWITrasactions</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CustVend</Name>
					<Field>CustVend</Field>
					<ValueStr>TradeBLWICustVend::Vendor</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountNum</Name>
					<Field>AccountNum</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>