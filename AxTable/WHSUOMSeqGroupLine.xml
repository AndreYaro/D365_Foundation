<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSUOMSeqGroupLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSUOMSeqGroupLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();

        if (this.DefaultProdUnitId)
        {
            this.resetOtherDefaultProdUnitId();
        }

        if (this.DefaultPurchUnitId)
        {
            this.resetOtherDefaultPurchUnitId();
        }

        if (this.DefaultMaterialConsumpUnitId)
        {
            this.resetOtherDefaultMaterialConsumpUnitId();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetOtherDefaultMaterialConsumpUnitId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Resets the <c>DefaultMaterialConsumpUnitId</c> to <c>NoYes::No</c> on lines other than the current line.
    /// </summary>
    private void resetOtherDefaultMaterialConsumpUnitId()
    {
        WHSUOMSeqGroupLine  otherUOMSeqGroupLine;

        if (this.DefaultProdUnitId)
        {
            ttsbegin;

            update_recordset otherUOMSeqGroupLine
                setting DefaultMaterialConsumpUnitId = NoYes::No
                    where otherUOMSeqGroupLine.uomSeqGroupId    == this.uomSeqGroupId
                    &&    otherUOMSeqGroupLine.RecId            != this.RecId;

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetOtherDefaultProdUnitId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Resets the <c>DefaultProdUnitId</c> to <c>NoYes::No</c> on lines other than the current line.
    /// </summary>
    private void resetOtherDefaultProdUnitId()
    {
        WHSUOMSeqGroupLine  otherUOMSeqGroupLine;

        if (this.DefaultProdUnitId)
        {
            ttsbegin;

            update_recordset otherUOMSeqGroupLine
                setting DefaultProdUnitId = NoYes::No
                where otherUOMSeqGroupLine.uomSeqGroupId    == this.uomSeqGroupId
                   && otherUOMSeqGroupLine.RecId            != this.RecId;

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetOtherDefaultPurchUnitId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Resets the <c>DefaultPurchUnitId</c> to <c>NoYes::No</c> on lines other than the current line.
    /// </summary>
    private void resetOtherDefaultPurchUnitId()
    {
        WHSUOMSeqGroupLine  otherUOMSeqGroupLine;

        if (this.DefaultPurchUnitId)
        {
            ttsbegin;

            update_recordset otherUOMSeqGroupLine
                setting DefaultPurchUnitId = NoYes::No
                where otherUOMSeqGroupLine.uomSeqGroupId    == this.uomSeqGroupId
                   && otherUOMSeqGroupLine.RecId            != this.RecId;

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        WHSUOMSeqGroupLine  seqGroupLine;
        boolean             resetOtherDefaultProdUnitId             = this.DefaultProdUnitId && this.DefaultProdUnitId != this.orig().DefaultProdUnitId;
        boolean             resetOtherDefaultPurchUnitId            = this.DefaultPurchUnitId && this.DefaultPurchUnitId != this.orig().DefaultPurchUnitId;
        boolean             resetOtherDefaultMaterialConsumpUnitId  = this.DefaultMaterialConsumpUnitId && this.DefaultMaterialConsumpUnitId != this.orig().DefaultMaterialConsumpUnitId;

        super();

        if (this.UnitizationGrouping)
        {
            update_recordset seqGroupLine
                setting UnitizationGrouping = NoYes::Yes
                where seqGroupLine.uomSeqGroupId == this.uomSeqGroupId    &&
                      seqGroupLine.LineNum           < this.LineNum;
        }
        else
        {
            update_recordset seqGroupLine
                setting UnitizationGrouping = NoYes::No
                where seqGroupLine.uomSeqGroupId == this.uomSeqGroupId    &&
                      seqGroupLine.LineNum           > this.LineNum;
        }

        if (resetOtherDefaultProdUnitId)
        {
            this.resetOtherDefaultProdUnitId();
        }

        if (resetOtherDefaultPurchUnitId)
        {
            this.resetOtherDefaultPurchUnitId();
        }

        if (resetOtherDefaultMaterialConsumpUnitId)
        {
            this.resetOtherDefaultMaterialConsumpUnitId();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks if a specific <c>whsuomSeqGroupLine</c> record exists.
	/// </summary>
	/// <param name="_seqGroupId">
	/// UOM sequence group id of the record.
	/// </param>
	/// <param name="_lineNum">
	/// Line number of the record.
	/// </param>
	/// <returns>
	/// True if the record exists.
	/// </returns>
    static boolean exist(WHSUOMSeqGroupId _seqGroupId, LineNum _lineNum)
    {
        return _seqGroupId && _lineNum && (select firstonly RecId from whsuomSeqGroupLine
             where whsuomSeqGroupLine.uomSeqGroupId == _seqGroupId   &&
                   whsuomSeqGroupLine.LineNum == _lineNum).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByItemId</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks if a specific <c>WHSUOMSeqGroupLine</c> record exists for an item.
	/// </summary>
	/// <param name="_itemId">
	/// Id of the item.
	/// </param>
	/// <param name="_unit">
	/// UOM of the record.
	/// </param>
	/// <returns>
	/// True if the record exists.
	/// </returns>
    public static boolean existByItemId(ItemId _itemId, UnitOfMeasureSymbol _unit)
    {
        WHSUOMSeqGroupId    seqGroupId;
        WHSUOMSeqGroupLine  seqGroupLine;

        seqGroupId = WHSInventTable::find(_itemId).uomSeqGroupId;

        select firstonly RecId from seqGroupLine
            where seqGroupLine.uomSeqGroupId    == seqGroupId   &&
                  seqGroupLine.UnitId           == _unit;

        return seqGroupLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isUnitEnabledForCycleCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a unit ID is enabled for cycle count on a sequence group.
    /// </summary>
    /// <param name = "_seqGroupId">
    /// The sequence group ID.
    /// </param>
    /// <param name = "_unitId">
    /// The unit ID to check.
    /// </param>
    /// <returns>
    /// true, if sequence group has cycle count enabled for unit ID; otherwise, false.
    /// </returns>
    public static boolean isUnitEnabledForCycleCount(
        WHSUOMSeqGroupId    _seqGroupId,
        UnitOfMeasureSymbol _unitId)
    {
        WHSUOMSeqGroupLine  seqGroupLine;
        
        select firstonly RecId from seqGroupLine
            where seqGroupLine.uomSeqGroupId    == _seqGroupId
            &&    seqGroupLine.UnitId           == _unitId
            &&    seqGroupLine.CycleCountUOM    == NoYes::Yes;

        return seqGroupLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>WHSUOMSeqGroupLine</c> record with given parameters.
	/// </summary>
	/// <param name="_seqGroupId">
	/// Sequence group id of the record.
	/// </param>
	/// <param name="_lineNum">
	/// Line number of the record.
	/// </param>
	/// <param name="_update">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
    static WHSUOMSeqGroupLine find(WHSUOMSeqGroupId _seqGroupId, LineNum _lineNum, boolean _update = false)
    {
        WHSUOMSeqGroupLine seqGroupLine;

        if (_seqGroupId && _lineNum)
        {
            seqGroupLine.selectForUpdate(_update);

            select firstonly seqGroupLine
                where seqGroupLine.uomSeqGroupId == _seqGroupId &&
                      seqGroupLine.LineNum == _lineNum;
        }

        return seqGroupLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByUnitId</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>WHSUOMSeqGroupLine</c> record with given parameters.
	/// </summary>
	/// <param name="_seqGroupId">
	/// Sequence group id of the record.
	/// </param>
	/// <param name="_unitId">
	/// Unit id of the record.
	/// </param>
	/// <param name="_update">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
    static WHSUOMSeqGroupLine findByUnitId(WHSUOMSeqGroupId _seqGroupId, UnitOfMeasureSymbol _unitId, boolean _update = false)
    {
        WHSUOMSeqGroupLine seqGroupLine;

        if (_seqGroupId && _unitId)
        {
            seqGroupLine.selectForUpdate(_update);

            select firstonly seqGroupLine
                where seqGroupLine.uomSeqGroupId    == _seqGroupId &&
                      seqGroupLine.UnitId           == _unitId;
        }

        return seqGroupLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (ret && this.WaveLabelTypeId)
        {
            WHSUOMSeqGroupLine seqGroupLine;

            select firstonly TableId from seqGroupLine
                where seqGroupLine.uomSeqGroupId   == this.uomSeqGroupId
                &&    seqGroupLine.WaveLabelTypeId == this.WaveLabelTypeId
                &&    seqGroupLine.RecId           != this.RecId;

            if (seqGroupLine)
            {
                ret = checkFailed("@WAX:TheSameWaveLabelTypeOnUnitSequenceGroupLineWarning");
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4473</DeveloperDocumentation>
	<FormRef>WHSUOMSeqGroupTable</FormRef>
	<Label>@WAX325</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>UOMSeqGroupId</TitleField1>
	<TitleField2>LineNum</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>UOMSeqGroupIdLineNumIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>UOMSeqGroupIdLineNumIdx</PrimaryIndex>
	<ReplacementKey>UOMSeqGroupIdLineNumIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UOMSeqGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicensePlatePackType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitizationGrouping</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CycleCountUOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultPurchUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultProdUnitId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UOMSeqGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UOMSeqGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicensePlatePackType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitizationGrouping</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CycleCountUOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultPurchUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultProdUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultContainerTypeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultMaterialConsumpUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveLabelTypeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CycleCountUOM</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCycleCountUOM</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DefaultProdUnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultProdUnitId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DefaultPurchUnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultPurchUnitId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>LicensePlatePackType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLicensePlatePackType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UnitizationGrouping</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSUnitizationGrouping</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UOMSeqGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSUOMSeqGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultContainerTypeCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultContainerTypeCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DefaultMaterialConsumpUnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSDefaultMaterialConsumpUnitId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaveLabelTypeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveLabelTypeId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>UOMSeqGroupIdLineNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>UOMSeqGroupId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>UOMSeqGroupIdUnitIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>UOMSeqGroupId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UnitId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitId</Name>
					<SourceEDT>UnitOfMeasureSymbol</SourceEDT>
					<Field>UnitId</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSUOMSeqGroupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSUOMSeqGroupTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UOMSeqGroupId</Name>
					<SourceEDT>WHSUOMSeqGroupId</SourceEDT>
					<Field>UOMSeqGroupId</Field>
					<RelatedField>UOMSeqGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSContainerTypeCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSContainerType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultContainerTypeCode</Name>
					<SourceEDT>WHSDefaultContainerTypeCode</SourceEDT>
					<Field>DefaultContainerTypeCode</Field>
					<RelatedField>ContainerTypeCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSWaveLabelType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSWaveLabelType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WaveLabelTypeId</Name>
					<Field>WaveLabelTypeId</Field>
					<RelatedField>TypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>