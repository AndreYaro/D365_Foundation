<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailConnSCMonOutgoingMessages</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailConnSCMonOutgoingMessages extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>RetailConnSCMonOutgoingMessages</c> table exists.
    /// </summary>
    /// <param name="_packageNum">
    /// The store connect package number.
    /// </param>
    /// <param name="_serviceName">
    /// The store connect service name.
    /// </param>
    /// <param name="_connStr">
    /// The connection string.
    /// </param>
    /// <param name="_messageGuid">
    /// The store connect message GUID.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RetailConnPackageNum _packageNum, RetailConnSCServiceName _serviceName, RetailConnProfileConnectionString _connStr, RetailConnSCMessageGUID _messageGuid)
    {
        RetailConnSCMonOutgoingMessages outgoingMessages;
        ;

        select firstonly PackageNo, ServiceName, ConnectString, MessageGUID, RecId from outgoingMessages
                index hint OutgoingMessagesIdx
                where outgoingMessages.PackageNo == _packageNum
                   && outgoingMessages.ServiceName == _serviceName
                   && outgoingMessages.ConnectString == _connStr
                   && outgoingMessages.MessageGUID == _messageGuid;

        return (outgoingMessages.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailConnSCMonOutgoingMessages</c> table.
    /// </summary>
    /// <param name="_packageNum">
    /// The store connect package number.
    /// </param>
    /// <param name="_serviceName">
    /// The store connect service name.
    /// </param>
    /// <param name="_connStr">
    /// The connection string.
    /// </param>
    /// <param name="_messageGuid">
    /// The store connect message GUID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailConnSCMonOutgoingMessages</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailConnSCMonOutgoingMessages find(RetailConnPackageNum _packageNum, RetailConnSCServiceName _serviceName, RetailConnProfileConnectionString _connStr, RetailConnSCMessageGUID _messageGuid, boolean _forUpdate = false)
    {
        RetailConnSCMonOutgoingMessages outgoingMessages;
        ;

        outgoingMessages.selectForUpdate(_forUpdate);

        select firstonly outgoingMessages
                index hint OutgoingMessagesIdx
                where outgoingMessages.PackageNo == _packageNum
                   && outgoingMessages.ServiceName == _serviceName
                   && outgoingMessages.ConnectString == _connStr
                   && outgoingMessages.MessageGUID == _messageGuid;

        return outgoingMessages;
    }

]]></Source>
			</Method>
			<Method>
				<Name>upload</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record into the <c>RetailConnSCMonOutgoingMessages</c> table.
    /// </summary>
    /// <param name="_packageNum">
    /// The store connect package number.
    /// </param>
    /// <param name="_serviceName">
    /// A store connect service name.
    /// </param>
    /// <param name="_destServiceName">
    /// A store connect service name.
    /// </param>
    /// <param name="_destServerName">
    /// A store connect server name.
    /// </param>
    /// <param name="_destPort">
    /// A TCP/IP Port.
    /// </param>
    /// <param name="_connectString">
    /// A value of connection string.
    /// </param>
    /// <param name="_status">
    /// A store connect incoming message status.
    /// </param>
    /// <param name="_tryCount">
    /// A value of store connect package processing count.
    /// </param>
    /// <param name="_remotePkg">
    /// A store connect package number.
    /// </param>
    /// <param name="_errorNo">
    /// A store connect error number.
    /// </param>
    /// <param name="_serverMsg">
    /// A store connect server message.
    /// </param>
    /// <param name="_finishedDateTimeStr">
    /// A store connect message processing finished date time.
    /// </param>
    /// <param name="_jobId">
    /// A store connect job ID.
    /// </param>
    /// <param name="_forwarder">
    /// A store connect service name.
    /// </param>
    /// <param name="_messageGuid">
    /// A store connect message GUID.
    /// </param>
    /// <param name="cancelledByUser">
    /// The value indicating the cancellation status.
    /// </param>
    public static void upload(
        RetailConnPackageNum _packageNum,
        RetailConnSCServiceName _serviceName,
        RetailConnSCServiceName _destServiceName,
        RetailConnSCServerName _destServerName,
        RetailConnProfileTCPIPPort _destPort,
        RetailConnProfileConnectionString _connectString,
        RetailConnSCPackageStatus _status,
        RetailConnSCTryCount _tryCount,
        RetailConnPackageNum _remotePkg,
        RetailConnSCErrorNo _errorNo,
        RetailConnSCServerMessage _serverMsg,
        str _finishedDateTimeStr,
        RetailConnJobId _jobId,
        RetailConnSCServiceName _forwarder,
        RetailConnSCMessageGUID _messageGuid,
        RetailConnSCCancelledByUser cancelledByUser
        )
    {
        RetailConnSCMonOutgoingMessages msg;
        RetailConnConnectionProfile connectionProfile;
        RetailConnSCFinishedDateTime finishedDateTime;
        RetailConnAOSProfile aosProfile;
        RetailConnDatabaseProfile dbProfile;

        int pos;
        RetailConnProfileConnectionString connStr;
        ;

        finishedDateTime = DateTimeUtil::parse(_finishedDateTimeStr);

        ttsbegin;

        msg = RetailConnSCMonOutgoingMessages::find(_packageNum, _serviceName, _connectString, _messageGuid, true);

        if (msg)
        {
            // update
            msg.DestServiceName = _destServiceName;
            msg.DestServerName = _destServerName;
            msg.DestPort = _destPort;
            msg.Status = _status;
            msg.Trycount = _tryCount;
            msg.RemotePkg = _remotePkg;
            msg.ErrorNo = _errorNo;
            msg.ServerMsg = _serverMsg;
            msg.FinishedDateTime = finishedDateTime;
            msg.JobID = _jobId;
            msg.Forwarder = _forwarder;
            msg.CancelledByUser = cancelledByUser;
            msg.update();
        }
        else
        {
            // insert
            msg.PackageNo = _packageNum;
            msg.ServiceName = _serviceName;
            msg.ConnectString = _connectString;
            msg.MessageGUID = _messageGuid;

            msg.DestServiceName = _destServiceName;
            msg.DestServerName = _destServerName;
            msg.DestPort = _destPort;
            msg.Status = _status;
            msg.Trycount = _tryCount;
            msg.RemotePkg = _remotePkg;
            msg.ErrorNo = _errorNo;
            msg.ServerMsg = _serverMsg;
            msg.FinishedDateTime = finishedDateTime;
            msg.JobID = _jobId;
            msg.Forwarder = _forwarder;
            msg.CancelledByUser = cancelledByUser;

            // Action, Data target
            if (_serviceName != _destServiceName)
            {
                msg.Action = RetailConnSCMonActionEnum::Forward;
                msg.DataTarget = _destServiceName;
            }
            else
            {
                if (_connectString)
                {
                    // search with "ChannelLocation=XXX;" prefix removed
                    pos = strFind(_connectString, ';', 1, strLen(_connectString));
                    connStr = subStr(_connectString, pos+1, strLen(_connectString) - pos);

                    select firstonly connectionProfile
                    where connectionProfile.ConnectionString == _connectString
                       || connectionProfile.ConnectionString == connStr;

                    if (connectionProfile)
                    {
                        if (connectionProfile.Type == RetailConnProfileConnectionTypeEnum::AOS)
                        {
                            select aosProfile where aosProfile.RecId == connectionProfile.Profile;

                            if (aosProfile)
                            {
                                msg.Action = RetailConnSCMonActionEnum::Write;
                                msg.DataTarget = aosProfile.Name;
                            }
                        }
                        else if (connectionProfile.Type == RetailConnProfileConnectionTypeEnum::Database)
                        {
                            select dbProfile where dbProfile.RecId == connectionProfile.Profile;

                            if (dbProfile)
                            {
                                msg.Action = RetailConnSCMonActionEnum::Write;
                                msg.DataTarget = dbProfile.Name;
                            }
                        }
                    }
                }
            }

            msg.insert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4040245</DeveloperDocumentation>
	<Label>@RET631</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>PackageNo</TitleField1>
	<TitleField2>ServiceName</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>OutgoingMessagesIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>NotApplicable</Modules>
	<PrimaryIndex>OutgoingMessagesIdx</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JobID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MessageGUID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackageNo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConnectString</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ErrorNo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServerMsg</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CancelledByUser</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MessageGUID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Forwarder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FinishedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackageNo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServiceName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConnectString</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Trycount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RemotePkg</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ErrorNo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ServerMsg</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestPort</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestServerName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestServiceName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CancelledByUser</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Action</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DataTarget</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Action</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSCMonAction</ExtendedDataType>
			<EnumType>RetailConnSCMonActionEnum</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CancelledByUser</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSCCancelledByUser</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConnectString</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnProfileConnectionString</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DataTarget</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSCDataTarget</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DestPort</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnProfileTCPIPPort</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DestServerName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSCServerName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DestServiceName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSCServiceName</ExtendedDataType>
			<Label>@RET663</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ErrorNo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSCErrorNo</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>FinishedDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSCFinishedDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Forwarder</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSCServiceName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JobID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnJobId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>MessageGUID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSCMessageGUID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PackageNo</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnPackageNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RemotePkg</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnPackageNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServerMsg</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSCServerMessage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ServiceName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSCServiceName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSCPackageStatus</ExtendedDataType>
			<EnumType>RetailConnSCPackageStatusEnum</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Trycount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSCTryCount</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>OutgoingMessagesIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PackageNo</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ServiceName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ConnectString</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MessageGUID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailConnSchedulerJobTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailConnSchedulerJobTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JobID</Name>
					<SourceEDT>RetailConnJobId</SourceEDT>
					<Field>JobID</Field>
					<RelatedField>jobId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>jobIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>