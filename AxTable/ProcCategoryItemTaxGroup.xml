<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProcCategoryItemTaxGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProcCategoryItemTaxGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>ProcCategoryItemTaxGroup</c> table.
    /// </summary>
    /// <param name="_procCategoryItemTaxGroup">
    ///    The ID of the <c>ProcCategoryItemTaxGroup</c> record to check for existance.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, it displays an error message and returns false.
    /// </returns>
    public static boolean checkExist(RefRecId _procCategoryItemTaxGroup)
    {
        if (_procCategoryItemTaxGroup && ProcCategoryItemTaxGroup::exist(_procCategoryItemTaxGroup))
        {
            return true;
        }

        return checkFailed(strFmt(ProcCategoryItemTaxGroup::txtNotExist(), _procCategoryItemTaxGroup));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>ProcCategoryItemTaxGroup</c> table.
    /// </summary>
    /// <param name="_procCategoryItemTaxGroup">
    /// The ID of the <c>ProcCategoryItemTaxGroup</c> record to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _procCategoryItemTaxGroup)
    {
        return (ProcCategoryItemTaxGroup::find(_procCategoryItemTaxGroup).RecId !=0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>ProcCategoryItemTaxGroup</c> table.
    /// </summary>
    /// <param name="_procCategoryItemTaxGroup">
    ///    The ID of the <c>ProcCategoryItemTaxGroup</c> record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>ProcCategoryItemTaxGroup</c> table; otherwise, an empty record.
    /// </returns>
    public static ProcCategoryItemTaxGroup find(RefRecId _procCategoryItemTaxGroup, boolean _forupdate = false)
    {
        ProcCategoryItemTaxGroup procCategoryItemTaxGroup = null;

        if (_procCategoryItemTaxGroup)
        {
            procCategoryItemTaxGroup.selectForUpdate(_forupdate);
            select firstonly procCategoryItemTaxGroup
                where procCategoryItemTaxGroup.RecId == _procCategoryItemTaxGroup;
        }

        return procCategoryItemTaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProcCategoryItemTaxGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the item tax group that is associated with the specified category and for the specified
    /// organization.
    /// </summary>
    /// <param name="_procurementCategoryId">
    /// The category ID, which is the <c>recId</c> value, in the <c>EcoResCategoryId</c> table for which to
    /// retrieve the tax item group.
    /// </param>
    /// <param name="_buyingLegalEntity">
    /// The legal entity,which is the <c>RefRecId</c> value.
    /// </param>
    /// <returns>
    /// A record of the <c>TaxItemGroupHeading</c> table that is associated with the specified category for
    /// the specified organization if it iis found; otherwise, an empty buffer.
    /// </returns>
    public static TaxItemGroupHeading getProcCategoryItemTaxGroup(EcoResCategoryId _procurementCategoryId, RefRecId _buyingLegalEntity)
    {
        ProcCategoryItemTaxGroup        procCategoryItemTaxGroup;
        TaxItemGroupHeading             taxItemGroupHeading = null;
        CompanyInfo                     companyInfo         = null;
        EcoResCategory                  selectedCategory    = EcoResCategory::find(_procurementCategoryId);
        EcoResCategory                  ecoResCategory;

        if (Global::isConfigurationkeyEnabled(configurationKeyNum(ProcCategory)))
        {
            select firstonly RecId, DataArea from companyInfo
                where companyInfo.RecId == _buyingLegalEntity;

            if (companyInfo.RecId !=0 && selectedCategory.RecId !=0)
            {
                changecompany (companyInfo.DataArea)
                {
                    select firstonly taxItemGroupHeading
                        join TaxItemGroupDataAreaId, ProcurementCategory from procCategoryItemTaxGroup
                            where procCategoryItemTaxGroup.TaxItemGroup == taxItemGroupHeading.TaxItemGroup
                                && procCategoryItemTaxGroup.TaxItemGroupDataAreaId == taxItemGroupHeading.DataAreaId
                        //this join walks up the category tree
                        join ecoResCategory
                            order by ecoResCategory.Level desc
                                where ecoResCategory.RecId == procCategoryItemTaxGroup.ProcurementCategory
                                    && ecoResCategory.NestedSetLeft  <= selectedCategory.NestedSetLeft
                                    && ecoResCategory.NestedSetRight >= selectedCategory.NestedSetRight
                                    && ecoResCategory.CategoryHierarchy == selectedCategory.CategoryHierarchy;
                }
            }
        }

        return taxItemGroupHeading;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProcCategoryTaxItemWithholdItemGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the item tax group that is associated with the specified category and for the specified
    /// organization.
    /// </summary>
    /// <param name="_procurementCategoryId">
    /// The category ID, which is the <c>RecId</c> value in the <c>EcoResCategoryId</c> table for which to
    /// retrieve the tax item group.
    /// </param>
    /// <returns>
    /// A record of the <c>TaxItemGroupHeading</c> table that is associated with the specified category for
    /// the specified organization if it is found; otherwise, an empty buffer.
    /// </returns>
    public static ProcCategoryItemTaxGroup getProcCategoryTaxItemWithholdItemGroup(EcoResCategoryId _procurementCategoryId)
    {
        ProcCategoryItemTaxGroup    procCategoryItemTaxGroup;
        EcoResCategory              selectedCategory = EcoResCategory::find(_procurementCategoryId);

        select procCategoryItemTaxGroup
            where  procCategoryItemTaxGroup.ProcurementCategory     == selectedCategory.RecId
                && procCategoryItemTaxGroup.TaxItemGroupDataAreaId  == getCompany(tableNum(TaxItemGroupHeading), curext());

        return procCategoryItemTaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static str txtNotExist()
    {
        return "@SYS302890";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcCategory</ConfigurationKey>
	<DeveloperDocumentation>@SYS309791</DeveloperDocumentation>
	<FormRef>EcoResCategoryHierarchyListPage</FormRef>
	<Label>@SYS303392</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ProcurementCategory</TitleField1>
	<TitleField2>TaxItemGroup</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>EcoResCategoryDataAreaIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroupDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroupDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS303404</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroupDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdItemGroupHeadingId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdCalculate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProcurementCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS139028</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroupDataAreaId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxWithholdCalculate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>GB,IE,SA</CountryRegionCodes>
			<ExtendedDataType>TaxWithholdCalculate</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdItemGroupHeadingId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxWithholdItemGroupId_TH</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxItemGroupHeadingIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxItemGroupDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxItemGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EcoResCategoryDataAreaIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProcurementCategory</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxItemGroupDataAreaId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DataArea</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>DataArea</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DataArea</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>ProcCategoryItemTaxGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroupDataAreaId</Name>
					<SourceEDT>DataAreaId</SourceEDT>
					<Field>TaxItemGroupDataAreaId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Id</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategory</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>EcoResCategory_ProcCategoryItemTaxGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProcurementCategory</Name>
					<Field>ProcurementCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxItemGroupHeading</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>TaxItemGroupHeading_ProcCategoryItemTaxGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroupDataAreaId</Name>
					<Field>TaxItemGroupDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroup</Name>
					<SourceEDT>TaxItemGroup</SourceEDT>
					<Field>TaxItemGroup</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxItemGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxWithholdItemGroupHeading_TH</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdItemGroupHeadingId</Name>
					<Field>TaxWithholdItemGroupHeadingId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>