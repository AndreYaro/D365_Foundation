<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpFiscalReference_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpFiscalReference_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillExternalFiscalDocumentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the fiscal document data from a record to the <c>ExternalFiscalDocument_BR</c> record entry.
    /// </summary>
    /// <param name="_externalFiscalDocument">
    /// The record to be filled.
    /// </param>
    public void fillExternalFiscalDocumentRecord(ExternalFiscalDocument_BR _externalFiscalDocument)
    {
        _externalFiscalDocument.FiscalDocumentNumber = this.FiscalDocumentNumberRef;
        _externalFiscalDocument.FiscalDocumentSeries = this.FiscalDocumentSeriesRef;
        _externalFiscalDocument.IssueDate = this.FiscalDocumentDateRef;
        _externalFiscalDocument.FiscalDocumentAccountType = this.FiscalDocumentAccountTypeRef;
        _externalFiscalDocument.FiscalDocumentAccountNum = this.FiscalDocumentAccountNumRef;
        _externalFiscalDocument.Model = this.FiscalDocumentModelRef;
        _externalFiscalDocument.FiscalDocumentIssuer = this.FiscalDocumentIssuerRef;
        _externalFiscalDocument.Direction = this.FiscalDocumentDirectionRef;
        _externalFiscalDocument.RetailFiscalPrinterSerialNumber = this.RetailFiscalPrinterSerialNumber;
        _externalFiscalDocument.RetailTerminalNumber = this.RetailTerminalNumber;
        _externalFiscalDocument.FiscalDocumentAccessKey = this.FiscalDocumentAccessKeyRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillFiscalReferenceRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the fiscal reference data from a record to the <c>FiscalReference_BR</c> type.
    /// </summary>
    /// <param name="_fiscalReference">
    /// The record to be filled.
    /// </param>
    public void fillFiscalReferenceRecord(FiscalReferenceParm_BR _fiscalReference)
    {
        _fiscalReference.RefRecID = this.RefRecId;
        _fiscalReference.RefTableId = this.RefTableId;
        _fiscalReference.LegalTextID = this.LegalTextId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromReferenceMap</Name>
				<Source><![CDATA[
    public void initFromReferenceMap(InvoicesReferencedByMap_BR _invoiceMap)
    {
        ExternalFiscalDocument_BR   externalFiscalDocument;

        this.FiscalDocumentAccessKeyRef   = _invoiceMap.AccessKey;
        this.FiscalDocumentNumberRef      = _invoiceMap.Number;
        this.FiscalDocumentSeriesRef      = _invoiceMap.Series;
        this.FiscalDocumentModelRef       = _invoiceMap.FiscalDocuModel;
        this.FiscalDocumentAccountNumRef  = _invoiceMap.InvoiceAccount;
        this.FiscalDocumentDateRef        = _invoiceMap.IssueDate;
        this.FiscalDocumentAccountTypeRef = _invoiceMap.AccountType;
        this.FiscalDocumentIssuerRef      = _invoiceMap.Issuer;
        this.FiscalDocumentDirectionRef   = _invoiceMap.InOut;
        this.RefRecId                     = _invoiceMap.RecId;
        this.RefTableId                   = _invoiceMap.TableId;

        if (_invoiceMap.TableId == tableNum(ExternalFiscalDocument_BR))
        {
            externalFiscalDocument                  = _invoiceMap;
            this.RetailFiscalPrinterSerialNumber    = externalFiscalDocument.RetailFiscalPrinterSerialNumber;
            this.RetailTerminalNumber               = externalFiscalDocument.RetailTerminalNumber;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(TmpFiscalReference_BR, FiscalDocumentAccountTypeRef):
                this.FiscalDocumentAccountNumRef = '';
                break;

            case fieldNum(TmpFiscalReference_BR, FiscalDocumentAccessKeyRef):
                this.FiscalDocumentAccessKeyRef = strKeep(this.FiscalDocumentAccessKeyRef, '0123456789');
                this.FiscalDocumentNumberRef = EFDocAccessKeyBase_BR::getInvoiceNumber(this.FiscalDocumentAccessKeyRef);
                this.FiscalDocumentSeriesRef = EFDocAccessKeyBase_BR::getInvoiceSeries(this.FiscalDocumentAccessKeyRef);
                break;

            case fieldNum(TmpFiscalReference_BR, FiscalDocumentModelRef):
                this.FiscalDocumentNumberRef = "";
                this.FiscalDocumentSeriesRef = "";
                this.FiscalDocumentAccessKeyRef = "";
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(TmpFiscalReference_BR, FiscalDocumentAccessKeyRef):
                if (FiscalDocModel_BR::find(this.FiscalDocumentModelRef).IsForNFeFederal)
                {
                    if (!EFDocAccessKeyBase_BR::validate(this.FiscalDocumentAccessKeyRef))
                    {
                        ret = checkFailed("@SYS4110579");
                    }
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        #FiscalDocumentModels_BR

        boolean ret;

        ret = super();

        switch (this.FiscalDocumentAccountTypeRef)
        {
            case CustVendType_BR::Customer:
                if (!CustTable::find(this.FiscalDocumentAccountNumRef).RecId)
                {
                    ret = checkFailed(strFmt("@SYS119849", this.FiscalDocumentAccountNumRef));
                }
                break;

            case CustVendType_BR::Vendor:
                if (!VendTable::find(this.FiscalDocumentAccountNumRef).RecId)
                {
                    ret = checkFailed(strFmt("@SYS99851", this.FiscalDocumentAccountNumRef));
                }
                break;
        }

        if (this.RetailFiscalPrinterSerialNumber || this.RetailTerminalNumber)
        {
            if (this.FiscalDocumentModelRef != #FiscalDocModel_2D)
            {
                ret = checkFailed("@RET4040048");
            }
        }

        if (FiscalDocModel_BR::find(this.FiscalDocumentModelRef).IsForNFeFederal && !this.FiscalDocumentAccessKeyRef)
        {
            ret = checkFailed("@SYS4110579");
        }

        if (this.FiscalDocumentAccessKeyRef && this.FiscalDocumentDateRef)
        {
            int accessKeyYear = EFDocAccessKeyBase_BR::getYear(this.FiscalDocumentAccessKeyRef);
            int accessKeyMonth = EFDocAccessKeyBase_BR::getMonth(this.FiscalDocumentAccessKeyRef);

            boolean invalidYear = accessKeyYear != year(this.FiscalDocumentDateRef);
            boolean invalidMonth = accessKeyMonth != mthOfYr(this.FiscalDocumentDateRef);

            if (invalidYear || invalidMonth)
            {
                ret = checkFailed(strFmt("@Brazil:FiscalReference_FiscalDocumentDateNotCompatibleWithAccessKey", mthName(accessKeyMonth), accessKeyYear));
            }
        }

        if (this.FiscalDocumentAccessKeyRef && this.FiscalDocumentAccountNumRef)
        {
            CustVendFiscalEstablishmentMap custVendFiscalEstablishmentMap;

            if (this.IsReturnOrder == NoYes::Yes)
            {
                FiscalReferenceParm_BR fiscalReference = FiscalReferenceParm_BR::find(this.FiscalReferenceRecId);
                FiscalDocument_BR fiscalDocument;

                switch (fiscalReference.RefTableId)
                {
                    case tableNum(FiscalDocument_BR):
                        fiscalDocument = FiscalDocument_BR::find(fiscalReference.RefRecID);
                        break;

                    case tableNum(ExternalFiscalDocument_BR):
                        FiscalDocumentReferenced_BR fiscalDocumentReferenced;
                        select firstonly fiscalDocument
                            exists join fiscalDocumentReferenced
                                where fiscalDocumentReferenced.ExternalReferencedFiscalDocument == fiscalReference.RefRecID
                                    && fiscalDocumentReferenced.FiscalDocument == fiscalDocument.RecId;
                        break;
                }

                FiscalEstablishment_BR fiscalEstablishment = FiscalEstablishment_BR::findById(fiscalDocument.FiscalEstablishment);
                custVendFiscalEstablishmentMap = fiscalEstablishment;
            }
            else
            {
                switch (this.FiscalDocumentAccountTypeRef)
                {
                    case CustVendType_BR::Customer:
                        CustTable custTable = CustTable::find(this.FiscalDocumentAccountNumRef);
                        if (custTable.isForeigner_BR())
                        {
                            // In this case we should get FE from order's Site
                            custVendFiscalEstablishmentMap = InventSite::find(this.SiteId).fiscalEstablishment();
                        }
                        else
                        {
                            custTable.clear();
                            custVendFiscalEstablishmentMap = custTable;
                        }
                        break;

                    case CustVendType_BR::Vendor:
                        VendTable vendTable;
                        custVendFiscalEstablishmentMap = vendTable;
                        break;

                    case CustVendType_BR::FiscalEstablishment:
                        FiscalEstablishment_BR fiscalEstablishment;
                        custVendFiscalEstablishmentMap = fiscalEstablishment;
                        break;
                }
            }

            if (!custVendFiscalEstablishmentMap)
            {
                select firstonly custVendFiscalEstablishmentMap
                            where custVendFiscalEstablishmentMap.Account == this.FiscalDocumentAccountNumRef;
            }

            str accessKeyCNPJ = EFDocAccessKeyBase_BR::getCNPJNumber(this.FiscalDocumentAccessKeyRef);
            if (accessKeyCNPJ != strKeep(custVendFiscalEstablishmentMap.CNPJCPFNum, '0123456789'))
            {
                ret = checkFailed(strFmt("@Brazil:FiscalReference_AccountCNPJNotCompatibleWithAccessKey", FiscalInformationUtil_BR::formatCNPJ(accessKeyCNPJ)));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<Label>@GLS51007</Label>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AccountInfo</Name>
			<Label>@SYS120808</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FiscalDocumentAccountTypeRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalDocumentAccountNumRef</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FiscalDocumentInfo</Name>
			<Label>@GLS51007</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FiscalDocumentModelRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalDocumentAccessKeyRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalDocumentNumberRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalDocumentSeriesRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalDocumentDateRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalDocumentDirectionRef</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalDocumentIssuerRef</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LegalText</Name>
			<Label>@GLS63725</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LegalTextId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReferencedFiscalDocument</Name>
			<Label>@GLS51007</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Retail</Name>
			<Label>@RET3014</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetailFiscalPrinterSerialNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailTerminalNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SourceFiscalDocument</Name>
			<Label>@GLS51017</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SourceDocument</Name>
			<Label>@FiscalServices:FieldGroupSourceDocument</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsReturnOrder</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FiscalDocumentAccessKeyRef</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EFDocAccessKey_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FiscalDocumentAccountNumRef</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>FiscalDocumentAccountNumber_BR</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FiscalDocumentAccountTypeRef</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>CustVendType_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FiscalDocumentDateRef</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>FiscalDocumentDate_BR</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FiscalDocumentDirectionRef</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>FiscalDocDirection_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FiscalDocumentIssuerRef</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Label>@GLS221480</Label>
			<Mandatory>Yes</Mandatory>
			<EnumType>FiscalDocumentIssuer_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FiscalDocumentModelRef</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>FiscalDocumentModel_BR</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FiscalDocumentNumberRef</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>FiscalDocumentNumber_BR</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FiscalDocumentSeriesRef</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>FiscalDocumentSeries_BR</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FiscalReferenceRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LegalTextId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>FiscalDocumentTextID_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RetailFiscalPrinterSerialNumber</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RetailFiscalPrinterSerialNumber_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RetailTerminalNumber</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RetailTerminalNumber_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SiteId</Name>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsReturnOrder</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>FiscalDocumentAccountTypeRef</Name>
					<Field>FiscalDocumentAccountTypeRef</Field>
					<ValueStr>CustVendType_BR::Customer</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalDocumentAccountNumRef</Name>
					<Field>FiscalDocumentAccountNumRef</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FiscalDocModel_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FiscalDocModel_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalDocumentModelRef</Name>
					<Field>FiscalDocumentModelRef</Field>
					<RelatedField>Model</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DocumentModelIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>FiscalEstablsihment</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>FiscalEstablishment_BR</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>FiscalDocumentAccountTypeRef</Name>
					<Field>FiscalDocumentAccountTypeRef</Field>
					<ValueStr>CustVendType_BR::FiscalEstablishment</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalDocumentAccountNumRef</Name>
					<Field>FiscalDocumentAccountNumRef</Field>
					<RelatedField>FiscalEstablishmentId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LegalText</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FiscalDocumentSourceText_BR</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>FiscalDocumentSourceText_BR</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TmpFiscalReference_BR</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LegalTextId</Name>
					<Field>LegalTextId</Field>
					<RelatedField>TextID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>FiscalDocumentAccountTypeRef</Name>
					<Field>FiscalDocumentAccountTypeRef</Field>
					<ValueStr>CustVendType_BR::Vendor</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalDocumentAccountNumRef</Name>
					<Field>FiscalDocumentAccountNumRef</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>