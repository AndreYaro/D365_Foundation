<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanLayoutMapping</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetPlanLayoutMapping extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>existsForLayout</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if a <c>BudgetPlanLayoutMapping</c> record exists for the given <c>BudgetPlanLayout</c> association record ID.
    /// </summary>
    /// <param name = "_layoutRecId"> The associated <c>BudgetPlanLayout</c> record ID. </param>
    /// <param name = "_languageId"> The <c>LanguageTable</c> language ID to use to lookup the record; optional. </param>
    /// <returns> true if a record is found; otherwise, false. </returns>
    public static boolean existsForLayout(BudgetPlanLayoutRecId _layoutRecId, LanguageId _languageId = currentUserLanguage())
    {
        boolean recordExists;

        if (_layoutRecId)
        {
            recordExists = BudgetPlanLayoutMapping::findFirstByLayout(_layoutRecId, _languageId) != null;
        }

        return recordExists;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFirstByLayout</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the first <c>BudgetPlanLayoutMapping</c> record for a given <c>BudgetPlanLayout</c> association record ID.
    /// </summary>
    /// <param name = "_layoutRecId"> The associated <c>BudgetPlanLayout</c> record ID. </param>
    /// <param name = "_languageId"> The <c>LanguageTable</c> language ID to use to lookup the record; optional. </param>
    /// <returns> The first <c>BudgetPlanLayoutMapping</c> record found. </returns>
    public static BudgetPlanLayoutMapping findFirstByLayout(BudgetPlanLayoutRecId _layoutRecId, LanguageId _languageId = currentUserLanguage())
    {
        BudgetPlanLayoutMapping budgetPlanlayoutMapping;

        if (_layoutRecId)
        {
            select firstonly budgetPlanlayoutMapping
                where budgetPlanlayoutMapping.Layout     == _layoutRecId
                   && budgetPlanlayoutMapping.LanguageId == _languageId;
        }

        return budgetPlanlayoutMapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLayoutFieldNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanLayoutMapping</c> table for the given <c>BudgetPlanLayout</c> record ID
    /// and field ID.
    /// </summary>
    /// <param name = "_layoutRecId"> The <c>BudgetPlanLayout</c> record ID to use to the lookup the record. </param>
    /// <param name = "_fieldNum"> The field ID to use to lookup the record. </param>
    /// <param name = "_languageId"> The <c>LanguageTable</c> language ID to use to lookup the record; optional. </param>
    /// <returns> The <c>BudgetPlanLayoutMapping</c> record found. </returns>
    public static BudgetPlanLayoutMapping findByLayoutFieldNum(
        BudgetPlanLayoutRecId   _layoutRecId,
        FieldId                 _fieldNum,
        LanguageId              _languageId = currentUserLanguage())
    {
        BudgetPlanLayoutMapping budgetPlanlayoutMapping;

        if (_layoutRecId && _fieldNum)
        {
            select firstOnly budgetPlanlayoutMapping
                where budgetPlanlayoutMapping.Layout        == _layoutRecId
                    && budgetPlanlayoutMapping.FieldId      == _fieldNum
                    && budgetPlanlayoutMapping.LanguageId   == _languageId;
        }

        return budgetPlanlayoutMapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLayoutOrdinal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanLayoutMapping</c> table for the given <c>BudgetPlanLayout</c> record ID
    /// and field ordinal.
    /// </summary>
    /// <param name = "_layoutRecId"> The <c>BudgetPlanLayout</c> record ID to use to lookup the record. </param>
    /// <param name = "_ordinal"> The field ordinal to use to lookup the record. </param>
    /// <param name = "_languageId"> The <c>LanguageTable</c> language ID to use to lookup the record; optional. </param>
    /// <returns> The <c>BudgetPlanLayoutMapping</c> record found. </returns>
    public static BudgetPlanLayoutMapping findByLayoutOrdinal(
        BudgetPlanLayoutRecId       _layoutRecId,
        BudgetPlanElementOrdinal    _ordinal,
        LanguageId                  _languageId = currentUserLanguage())
    {
        BudgetPlanLayoutMapping budgetPlanlayoutMapping;

        if (_layoutRecId && _ordinal)
        {
            select firstOnly budgetPlanlayoutMapping
                where budgetPlanlayoutMapping.Layout        == _layoutRecId
                    && budgetPlanlayoutMapping.Ordinal      == _ordinal
                    && budgetPlanlayoutMapping.LanguageId   == _languageId;
        }

        return budgetPlanlayoutMapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLayoutColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanLayoutMapping</c> table for the given <c>BudgetPlanColumn</c> record ID.
    /// </summary>
    /// <param name = "_layoutRecId"> The <c>BudgetPlanLayout</c> record ID to use to lookup the record. </param>
    /// <param name = "_columnRecId"> The <c>BudgetPlanColumn</c> record ID to use to lookup the record. </param>
    /// <param name = "_languageId"> The <c>LanguageTable</c> language ID to use to lookup the record; optional. </param>
    /// <returns> The <c>BudgetPlanLayoutMapping</c> record found. </returns>
    public static BudgetPlanLayoutMapping findByLayoutColumn(
        BudgetPlanLayoutRecId   _layoutRecId,
        BudgetPlanColumnRecId   _columnRecId,
        LanguageId              _languageId = currentUserLanguage())
    {
        BudgetPlanLayoutMapping budgetPlanlayoutMapping;

        if (_layoutRecId && _columnRecId)
        {
            select firstOnly budgetPlanlayoutMapping
                where budgetPlanlayoutMapping.Layout        == _layoutRecId
                    && budgetPlanlayoutMapping.Column       == _columnRecId
                    && budgetPlanlayoutMapping.LanguageId   == _languageId;
        }

        return budgetPlanlayoutMapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLayoutLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>BudgetPlanLayoutMapping</c> table for the given <c>BudgetPlanLayout</c> record ID and <c>LanguageTable</c> language ID.
    /// </summary>
    /// <param name = "_layoutRecId"> The <c>BudgetPlanLayout</c> record ID to use to lookup the record. </param>
    /// <param name = "_languageId"> The <c>LanguageTable</c> language ID to use to lookup the record. </param>
    /// <returns> The <c>BudgetPlanLayoutMapping</c> record found. </returns>
    public static BudgetPlanLayoutMapping findByLayoutLanguage(
        BudgetPlanLayoutRecId   _layoutRecId,
        LanguageId              _languageId)
    {
        BudgetPlanLayoutMapping budgetPlanlayoutMapping;

        if (_layoutRecId && _languageId)
        {
            select firstOnly budgetPlanlayoutMapping
                where budgetPlanlayoutMapping.Layout        == _layoutRecId
                    && budgetPlanlayoutMapping.LanguageId   == _languageId;
        }

        return budgetPlanlayoutMapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteByLayout</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all related <c>BudgetPlanLayoutMapping</c> records for a given <c>BudgetPlanLayout</c> record ID and given language.
    /// </summary>
    /// <param name = "_languageId"> The <c>LanguageTable</c> language ID to use to lookup the record; optional. </param>
    /// <param name = "_layoutRecId"> The <c>BudgetPlanLayout</c> record ID. </param>
    public static void deleteByLayout(BudgetPlanLayoutRecId _layoutRecId, LanguageId _languageId = currentUserLanguage())
    {
        BudgetPlanLayoutMapping budgetPlanlayoutMapping;

        if (_layoutRecId)
        {
            delete_from budgetPlanlayoutMapping
                where budgetPlanlayoutMapping.Layout        == _layoutRecId
                   && budgetPlanlayoutMapping.LanguageId    == _languageId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteByColumnLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes all related <c>BudgetPlanLayoutMapping</c> records for a given column and language.
    /// </summary>
    /// <param name = "_columnRecId"> The <c>BudgetPlanColumn</c> record ID to use to lookup the record. </param>
    /// <param name = "_languageId"> The <c>LanguageTable</c> language ID to use to lookup the record. </param>
    public static void deleteByColumnLanguage(
        BudgetPlanColumnRecId _columnRecId,
        LanguageId            _languageId)
    {
        BudgetPlanLayoutMapping budgetPlanlayoutMapping;
        BudgetPlanLayoutElement layoutElement;

        if (_columnRecId && _languageId)
        {
            delete_from budgetPlanlayoutMapping
                where budgetPlanlayoutMapping.LanguageId == _languageId
                    exists join layoutElement
                        where layoutElement.Layout              == budgetPlanlayoutMapping.Layout
                            && layoutElement.ElementDefinition  == _columnRecId;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
	<DeveloperDocumentation>@Budget:BudgetPlanLayoutMappingDeveloperDocumentation</DeveloperDocumentation>
	<Label>@Budget:BudgetPlanLayoutMappingDisplayName</Label>
	<SingularLabel>@Budget:BudgetPlanLayoutMappingSingular</SingularLabel>
	<TableGroup>Reference</TableGroup>
	<Visible>No</Visible>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>Budget</Modules>
	<ReplacementKey>LayoutFieldIdIndexAK</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Layout</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ElementIndex</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Layout</Name>
			<AssetClassification>System metadata</AssetClassification>
			<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
			<ExtendedDataType>BudgetPlanLayoutRecId</ExtendedDataType>
			<Label>@Budget:LayoutDisplayNameSingular</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>FieldId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldId</ExtendedDataType>
			<Label>@SYS28466</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldName</ExtendedDataType>
			<Label>@SYS16033</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DescriptionFieldName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldName</ExtendedDataType>
			<Label>@Budget:DescriptionFieldName</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldLabel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldLabel</ExtendedDataType>
			<Label>@SYS28364</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ElementIndex</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ElementIndex</ExtendedDataType>
			<Label>@Budget:BudgetPlanElementIndex</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Column</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
			<ExtendedDataType>BudgetPlanColumnRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EstimateType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>BudgetPlanEstimateType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Ordinal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
			<ExtendedDataType>BudgetPlanElementOrdinal</ExtendedDataType>
			<Label>@Budget:ElementOrdinalLabel</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsEditable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ApplyMultiplier</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS1187</Label>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageIdAll</ExtendedDataType>
			<Label>@SYS66040</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsRow</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InWorksheet</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HasDimensionFilter</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LayoutFieldIdIndexAK</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Layout</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FieldId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ElementIndex</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LanguageId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LayoutIndex</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Layout</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Column</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Ordinal</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Layout</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BudgetPlanLayout</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Layout</Name>
					<Field>Layout</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Column</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BudgetPlanColumn</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Column</Name>
					<Field>Column</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Language</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LanguageId</Name>
					<Field>LanguageId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>