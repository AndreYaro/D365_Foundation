<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TAMPromotionItem</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TAMPromotionItem extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayItemGTIN</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Displays the GTIN of the promotion item.
    /// </summary>
    /// <returns>
    /// The GTIN of the promotion item.
    /// </returns>
    public display GlobalTradeItemNumber displayItemGTIN()
    {
        return InventItemGTIN::find(this.ItemID,
                        this.InventDimID,
                        this.UnitID).GlobalTradeItemNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayItemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the name of the promotion item.
    /// </summary>
    /// <returns>
    /// The name of the promotion item.
    /// </returns>
    public display ItemName displayItemName()
    {
        return InventTable::find(this.ItemID).itemName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayNetWeight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the net weight of the promotion item.
    /// </summary>
    /// <returns>
    /// The net weight of the promotion item.
    /// </returns>
    public display ItemNetWeight displayNetWeight()
    {
        return InventTable::find(this.ItemID).NetWeight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
        this.Weighting = 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the promotion price of an item if the field being modified is the item field.
    /// </summary>
    /// <param name="_fieldId">
    /// The field's ID being modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        if (_fieldId == fieldNum(TAMPromotionItem, ItemID))
        {
            this.PromoPrice = InventTableModule::find(this.ItemID,
                                                        ModuleInventPurchSales::Sales).price();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>TAMPromotionItem</c> record based on the passed parameters.
    /// </summary>
    /// <param name="_promotionID">
    /// The <c>TAMPromtionId</c> for which to search the <c>TAMPrmotionItem</c> table.
    /// </param>
    /// <param name="_merchandisingEventID">
    /// The The <c>TAMMerchandisingEventId</c> for which to search the <c>TAMPrmotionItem</c> table.
    /// </param>
    /// <param name="_itemId">
    /// The The <c>ItemId</c> for which to search the <c>TAMPrmotionItem</c> table.
    /// </param>
    /// <param name="_inventDimId">
    /// The The <c>InventDimId</c> for which to search the <c>TAMPrmotionItem</c> table.
    /// </param>
    /// <param name="_unitId">
    /// The The <c>UnitId</c> for which to search the <c>TAMPrmotionItem</c> table.
    /// </param>
    /// <param name="_tamPromotionCustAccount">
    /// The The <c>TAMPromotionCustAccount</c> for which to search the <c>TAMPrmotionItem</c> table.
    /// </param>
    /// <param name="_forUpdate">
    /// A <c>boolean</c> used to determine whether or not a record should be selected for update; optional.
    /// </param>
    /// <returns>
    /// The <c>TAMPromotionItem</c> record that was found based on the passed parameters.
    /// </returns>
    public static TAMPromotionItem find(TAMPromotionID _promotionID,
                                        MCRMerchandisingEventID _merchandisingEventID,
                                        ItemId _itemId,
                                        InventDimId _inventDimId,
                                        UnitOfMeasureSymbol _unitId,
                                        TAMPromotionCustAccount _tamPromotionCustAccount = '',
                                        boolean          _forUpdate = false)
    {
        TAMPromotionItem  tamPromotionItem;

        if (_promotionID
            && _itemId
            && _inventDimId
            && _unitId)
        {
            tamPromotionItem.selectForUpdate(_forUpdate);

            select firstonly tamPromotionItem
                where tamPromotionItem.PromotionID == _promotionID
                    && tamPromotionItem.MerchandisingEventID == _merchandisingEventID
                    && tamPromotionItem.ItemID == _itemId
                    && tamPromotionItem.InventDimID == _inventDimId
                    && tamPromotionItem.UnitID == _unitId
                    && tamPromotionItem.PromotionCust == _tamPromotionCustAccount;
        }

        return tamPromotionItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>TAMPromotionItem</c> record based on the passed parameters.
    /// </summary>
    /// <param name="_recId">
    /// The <c>RecId</c> for which to search the <c>TAMPromotionItem</c> table.
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean value that defines whether to select the record for update or not; optional.
    /// </param>
    /// <returns>
    /// The <c>TAMPromotionItem</c> record that was found based on the passed parameters.
    /// </returns>
    public static TAMPromotionItem findByRecId(RecId _recId,
                                          boolean          _forUpdate = false)
    {
        TAMPromotionItem  tamPromotionItem;

        if (_recId)
        {
            tamPromotionItem.selectForUpdate(_forUpdate);

            select firstonly tamPromotionItem
                where tamPromotionItem.RecId == _recId;
        }

        return tamPromotionItem;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPriceDiscTradePromo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the price discount record based on the passed parameters.
    /// </summary>
    /// <param name="_priceDisc_LineDisc">
    /// The <c>PriceDisc_LineDisc</c> object instance used to find the desired price discount record.
    /// </param>
    /// <returns>
    /// A container of discount values for the price discount.
    /// </returns>
    public static container findPriceDiscTradePromo(PriceDisc_LineDisc _priceDisc_LineDisc)
    {
        TAMOffInvoiceComponentCriteria tamOffInvoiceCriteria
            = new TAMOffInvoiceComponentCriteria();

        PriceComponentCacheProvider componentCacheProvider = new PriceComponentCacheFactory().getPriceComponentCacheProvider(classStr(TAMOffInvoiceComponentCriteria));

        TAMPromotionItem::parmTAMOffInvoiceComponentCriteria(tamOffInvoiceCriteria, _priceDisc_LineDisc);

        TAMOffInvoiceComponentResult result = componentCacheProvider.getComponent(tamOffInvoiceCriteria);

        container merchEventRecIds = result.parmMerchEventIds();

        if (merchEventRecIds != conNull())
        {
            for (int i = 1; i <= conLen(merchEventRecIds); i++)
            {
                // Add to price history for an off invoice
                _priceDisc_LineDisc.mcrAddTAMMerchEventPricing(TAMMerchEventPricing::findByRecId(conPeek(merchEventRecIds, i)));
            }
        }

        container discValues;

        discValues = conIns(discValues, 1, result.parmDiscAmount());
        discValues = conIns(discValues, 2, result.parmDiscPct());

        return discValues;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTAMOffInvoiceComponentCriteria</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets parameters for <c>TAMOffInvoiceComponentCriteria</c> object instance.
    /// </summary>
    /// <param name = "_tamOffInvoiceCriteria">
    /// The <c>TAMOffInvoiceComponentCriteria</c> object instance.
    /// </param>
    /// <param name = "_priceDisc_LineDisc">
    /// The <c>PriceDisc_LineDisc</c> object instance used to find the desired price discount record.
    /// </param>
    public static void parmTAMOffInvoiceComponentCriteria(TAMOffInvoiceComponentCriteria _tamOffInvoiceCriteria, PriceDisc_LineDisc _priceDisc_LineDisc)
    {
        _tamOffInvoiceCriteria.parmItemId(_priceDisc_LineDisc.parmItemId());
        _tamOffInvoiceCriteria.parmInventDimId(_priceDisc_LineDisc.parmInventDim().inventDimId);
        _tamOffInvoiceCriteria.parmQty(_priceDisc_LineDisc.parmQty());
        _tamOffInvoiceCriteria.parmCurCode(_priceDisc_LineDisc.parmCurrencyCode());
        _tamOffInvoiceCriteria.parmAccount(_priceDisc_LineDisc.parmAccountNum());
        _tamOffInvoiceCriteria.parmDiscDate(_priceDisc_LineDisc.parmDiscDate());
        _tamOffInvoiceCriteria.parmUnitId(_priceDisc_LineDisc.parmUnitID());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromItemId</Name>
				<Source><![CDATA[
    public void initFromItemId()
    {
        this.UnitID = InventTableModule::find(this.ItemID, ModuleInventPurchSales::Sales).UnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertTAMPromotionItemFromProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a trade promotion item record from the product provided.
    /// </summary>
    /// <param name="_productContainer">
    /// A container of the products to be inserted into the <c>TAMPromotionItem</c> table.
    /// </param>
    /// <param name="_tamTradePromotion">
    /// The trade promotion record used to get the promotion ID and customer account.
    /// </param>
    /// <param name="_isMerchandisingEvent">
    /// Specifies whether the promotion item record being created is a merchandising event.
    /// </param>
    /// <param name="_merchandisingEventID">
    /// The merchandising event ID to set on the promotion item.
    /// </param>
    /// <returns>
    /// true if no errors occurred; otherwise, false.
    /// </returns>
    public static boolean insertTAMPromotionItemFromProduct(Container               _productContainer,
                                                                   TAMTradePromotion       _tamTradePromotion,
                                                                   boolean                 _isMerchandisingEvent = false,
                                                                   MCRMerchandisingEventID _merchandisingEventID = '')
    {
        TAMPromotionItem        tamPromotionItem;
        TmpRetailProductsToAdd  tmpProductTable;
        InventDim               inventDim;
        List                    listProducts;
        ListEnumerator          listEnumerator;
        boolean                 ret = true;

        if (_productContainer)
        {
            listProducts = List::create(_productContainer);
            listEnumerator = listProducts.getEnumerator();

            while (listEnumerator.moveNext())
            {
                tmpProductTable = listEnumerator.current();

                tamPromotionItem.PromotionID    = _tamTradePromotion.PromotionID;
                tamPromotionItem.ItemID         = tmpProductTable.ItemId;

                // Check for PromotionId and ItemId before processing.
                if (tamPromotionItem.PromotionID && tamPromotionItem.ItemID)
                {
                    inventDim = InventDim::find(tmpProductTable.InventDim);
                    inventDim.clearNotProductDim(InventDimGroupSetup::newItemIdProductDimensionsOnly(tamPromotionItem.ItemID));
                    inventDim = InventDim::findOrCreate(inventDim);

                    tamPromotionItem.InventDimID    = inventDim.InventDimId;
                    tamPromotionItem.initFromItemId();
                    tamPromotionItem.Weighting      = 1;
                    if (_isMerchandisingEvent)
                    {
                        tamPromotionItem.MerchandisingEventID = _merchandisingEventID;
                    }

                    if (!TAMPromotionItem::find(tamPromotionItem.PromotionID,
                                    tamPromotionItem.MerchandisingEventID,
                                    tamPromotionItem.ItemID,
                                    tamPromotionItem.InventDimID,
                                    tamPromotionItem.UnitID,
                                    tamPromotionItem.PromotionCust))
                    {
                        if (tamPromotionItem.validateWrite())
                        {
                            tamPromotionItem.insert();
                        }
                        else
                        {
                            throw error("@SYS104318");
                        }
                    }
                }
                else
                {
                    error(strFmt("@MCR38748", tmpProductTable.EcoResProductName));
                    ret = false;
                }
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupItemIdByPromo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Looks up the item id based on the trade allowance.
    /// </summary>
    /// <param name="_formControl">
    /// The form control for which to lookup the <c>ItemId</c> values.
    /// </param>
    /// <param name="_promotionID">
    /// The <c>TAMPromotionId</c> for which to lookup items.
    /// </param>
    public static void lookupItemIdByPromo(FormStringControl _formControl, str _promotionID)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(TAMPromotionItem), _formControl);
        Query query = new Query();
        QueryBuildDataSource queryBuildDataSourcePromotionItem;
        QueryBuildDataSource queryBuildDataSourceMerchandisingEvent;

        queryBuildDataSourcePromotionItem = query.addDataSource(tableNum(TAMPromotionItem));
        queryBuildDataSourceMerchandisingEvent = queryBuildDataSourcePromotionItem.addDataSource(tableNum(TAMMerchandisingEvent));

        queryBuildDataSourcePromotionItem.relations(false);
        queryBuildDataSourceMerchandisingEvent.relations(false);

        queryBuildDataSourcePromotionItem.addRange(fieldNum(TAMPromotionItem, PromotionID)).value(SysQuery::value(_promotionID));
        queryBuildDataSourcePromotionItem.addRange(fieldNum(TAMPromotionItem, MerchandisingEventID)).value(SysQuery::valueNotEmptyString());
        queryBuildDataSourcePromotionItem.addSortField(fieldNum(TAMPromotionItem, PromotionID));
        queryBuildDataSourcePromotionItem.addSortField(fieldNum(TAMPromotionItem, ItemID));
        queryBuildDataSourcePromotionItem.addSortField(fieldNum(TAMPromotionItem, MerchandisingEventID));
        queryBuildDataSourcePromotionItem.orderMode(OrderMode::GroupBy);

        sysTableLookup.addLookupfield(fieldNum(TAMPromotionItem, ItemID));
        sysTableLookup.addLookupfield(fieldNum(TAMPromotionItem, PromotionID));
        sysTableLookup.addLookupfield(fieldNum(TAMPromotionItem, MerchandisingEventID));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the TAMPromotionItem into the database.
    /// </summary>
    public void insert()
    {
        if (!this.PromotionID && this.MerchandisingEventID)
        {
            this.PromotionID = TAMMerchandisingEvent::find(this.MerchandisingEventID).PromotionID;
        }

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TAMPromotionsManagement</ConfigurationKey>
	<DeveloperDocumentation>@MCR10226</DeveloperDocumentation>
	<FormRef>TAMPromotionsManagmentMenu</FormRef>
	<Label>@MCR10226</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>PromotionID</TitleField1>
	<TitleField2>ItemID</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>PromotionID</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ModifiedTransactionId>Yes</ModifiedTransactionId>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PromotionID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MerchandisingEventID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PromotionID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MerchandisingEventID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeviatedPosting</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Contracts</Name>
			<Label>@SYS54592</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PromotionCust</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PriceWeighting</Name>
			<Label>@SYS11865</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Weighting</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DeviatedPosting</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@MCR39284</Label>
			<EnumType>NoYesCombo</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MerchandisingEventID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRMerchandisingEventID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PromoPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TAMPromoPrice</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PromotionCust</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TAMPromotionCustAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PromotionID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TAMPromotionID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ShelfPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRShelfPrice</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Weighting</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRWeighting</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PromotionID</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>PromotionID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PromotionIDItemDIM</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>MerchandisingEventID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PromotionID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UnitID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PromotionCust</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CustTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>TAMPromotionItem</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PromotionCust</Name>
					<SourceEDT>TAMPromotionCustAccount</SourceEDT>
					<Field>PromotionCust</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimID</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDimID</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemID</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemID</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TAMMerchandisingEvent</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TAMMerchandisingEvent</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MerchandisingEventID</Name>
					<SourceEDT>MCRMerchandisingEventID</SourceEDT>
					<Field>MerchandisingEventID</Field>
					<RelatedField>MerchandisingEventID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TAMTradePromotion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TAMTradePromotion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PromotionID</Name>
					<SourceEDT>TAMPromotionID</SourceEDT>
					<Field>PromotionID</Field>
					<RelatedField>PromotionID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>