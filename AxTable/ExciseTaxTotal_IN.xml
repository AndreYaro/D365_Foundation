<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ExciseTaxTotal_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ExciseTaxTotal_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getBaseCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the accounting currency of the <c>Ledger</c> record for the current legal entity.
    /// </summary>
    /// <returns>
    /// The accounting currency code of the record.
    /// </returns>
    display CurrencyCode getBaseCurrency()
    {
        return Ledger::accountingCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSecondaryCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the reporting currency code of the <c>Ledger</c> record for current legal entity.
    /// </summary>
    /// <returns>
    /// The reporting currency code.
    /// </returns>
    display CurrencyCode getSecondaryCurrency()
    {
        return Ledger::reportingCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertIntoExciseTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts data into excise total.
    /// </summary>
    /// <param name="_selectQuery">
    /// The select query.
    /// </param>
    /// <param name="_fieldName">
    /// The field name.
    /// </param>
    public void insertIntoExciseTotal(
        SelectQuery_IN     _selectQuery,
        FieldLabel         _fieldName)
    {
        this.FieldName      = _fieldName;
        this.SelectQuery    = _selectQuery;
        this.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteBySelectQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes data by select query.
    /// </summary>
    /// <param name="_selectQuery">
    /// The select query.
    /// </param>
    public static void deleteBySelectQuery(SelectQuery_IN _selectQuery)
    {
        ExciseTaxTotal_IN exciseTaxTotal;

        ttsbegin;

        delete_from  exciseTaxTotal
            where exciseTaxTotal.SelectQuery == _selectQuery;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertExciseData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts excise data.
    /// </summary>
    /// <param name="_callerTmpTable">
    /// The caller temporary table.
    /// </param>
    /// <param name="_selectQry">
    /// The select query.
    /// </param>
    /// <param name="_fieldNames">
    /// The field name.
    /// </param>
    /// <param name="_exciseInquiry">
    /// The excise inquiry.
    /// </param>
    /// <param name="_setAmountsToZero">
    /// If 'True', the excise amount is zero.
    /// </param>
    public static void insertExciseData(
        TmpExciseInquiryTable_IN    _callerTmpTable,
        SelectQuery_IN              _selectQry,
        container                   _fieldNames,
        ExciseTaxInquiry_IN         _exciseInquiry,
        boolean                     _setAmountsToZero = false)
    {
        ExciseTaxTotal_IN       exciseTaxTotal;
        Counter                 position;
        fieldId                 fieldId;
        CurrencyExchangeHelper  currencyHelper = CurrencyExchangeHelper::newExchangeDate(Ledger::primaryLedger(CompanyInfo::findDataArea(curext()).RecId),
                                                                                         _callerTmpTable.TransDate);
        while select forupdate exciseTaxTotal
            where exciseTaxTotal.SelectQuery == _selectQry
        {
            if (_setAmountsToZero)
            {
                ttsbegin;
                exciseTaxTotal.AmountMST                  = 0;
                exciseTaxTotal.AccumulatedAmountMST       = 0;
                exciseTaxTotal.AmountSecondary            = 0;
                exciseTaxTotal.AccumulatedAmountSecondary = 0;
                exciseTaxTotal.update();
                ttscommit;
            }
            else
            {
                fieldId = 0;
                if (confind(_fieldNames, exciseTaxTotal.FieldName))
                {
                    position = confind(_fieldNames, exciseTaxTotal.FieldName);
                    if (position)
                    {
                        fieldId  = TmpExciseInquiryTable_IN::getFieldIdFromPosition(position);
                    }
                }
                ttsbegin;
                if (fieldId)
                {
                    exciseTaxTotal.AmountMST                  = CurrencyExchangeHelper::amount(str2num_RU(_callerTmpTable.(fieldId)), _callerTmpTable.SourceCurrencyCode);

                    exciseTaxTotal.AmountSecondary            = currencyHelper.calculateAccountingToTransaction(Ledger::reportingCurrency(),
                                                                                                str2num_RU(_callerTmpTable.(fieldId)),
                                                                                                true);
                    exciseTaxTotal.AccumulatedAmountMST       = TmpExciseInquiryTable_IN::getTotalAccumulatedAmount(_exciseInquiry.tmpExciseInquiryTable(),
                                                                                                                    fieldId,
                                                                                                                    exciseTaxTotal.FieldName);
                    exciseTaxTotal.AccumulatedAmountSecondary = currencyHelper.calculateAccountingToTransaction(
                                                                                            Ledger::reportingCurrency(),
                                                                                            exciseTaxTotal.AccumulatedAmountMST,
                                                                                            true);
                    exciseTaxTotal.TaxComponentTable    = _callerTmpTable.TaxComponentTable;
                    exciseTaxTotal.TransDate            = _callerTmpTable.TransDate;
                    exciseTaxTotal.TaxAmount            = _callerTmpTable.TaxAmount;
                    exciseTaxTotal.update();
                }
                ttscommit;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS64115</DeveloperDocumentation>
	<Label>@SYS58659</Label>
	<TitleField1>FieldName</TitleField1>
	<TitleField2>SelectQuery</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>APARShared</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>NameTypeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxComponentTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SelectQuery</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Misc</Name>
			<Label>@SYS80069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxComponentTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountSecondary</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccumulatedAmountSecondary</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SelectQuery</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccumulatedAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AccumulatedAmountMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS25443</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AccumulatedAmountSecondary</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@GLS6075</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountSecondary</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS83899</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldLabel</ExtendedDataType>
			<Label>@SYS16033</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SelectQuery</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SelectQuery_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxComponentTable</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS5042</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameTypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FieldName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SelectQuery</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxComponentTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxComponentTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SelectQueryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SelectQuery</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxComponentTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxComponentTable_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxComponentTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxComponentTable_IN_ExciseTaxTotal_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxComponentTable</Name>
					<Field>TaxComponentTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>