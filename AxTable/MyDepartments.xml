<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MyDepartments</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MyDepartments extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>xds</Name>
				<Source><![CDATA[
    public RefreshFrequency xds()
    {
        MyDepartments                       myDepartments;
        OMOperatingUnit                     omOperatingUnit;
        OMExplodedOrganizationSecurityGraph omExplodedGraph;
        OMHierarchyType                     omHierarchyType;
        OMHierarchyPurpose                  omHierarchyPurpose;
        HcmPositionWorkerAssignment         workerAssignment;
        HcmPositionDetail                   positionDetail;
        utcDateTime                         now = DateTimeUtil::utcNow();

        // Get the hierarchy used to track department structure
        select firstonly RecId from omHierarchyType
            exists join omHierarchyPurpose
            where omHierarchyPurpose.IsImmutable == NoYes::Yes
                && omHierarchyPurpose.HierarchyPurpose == HierarchyPurpose::OrganizationChart
                && omHierarchyPurpose.HierarchyType == omHierarchyType.RecId;

        // Add all departments below the departments associated with the current worker's positions
        insert_recordset myDepartments(DepartmentRecId, OperatingUnitNumber)
            select validTimeState(now) recId, omOperatingUnitNumber from omOperatingUnit
            exists join omExplodedGraph where
                omExplodedGraph.Organization == omOperatingUnit.RecId &&
                omExplodedGraph.OMHierarchyType == omHierarchyType.RecId
            exists join positionDetail where
                positionDetail.Department == omExplodedGraph.AncestorOrganization
            exists join workerAssignment where
                workerAssignment.Position == positionDetail.Position &&
                workerAssignment.Worker == HcmWorkerLookup::currentWorker();

        // If no org hierarchy was set up, ensure that at least departments associated
        // with the current worker's positions are included
        insert_recordset myDepartments(DepartmentRecId, OperatingUnitNumber)
            select validTimeState(now) recId, OMOperatingUnitNumber from omOperatingUnit
            exists join positionDetail where
               omOperatingUnit.RecId == positionDetail.Department
            exists join workerAssignment where
                workerAssignment.Position == positionDetail.Position &&
                workerAssignment.Worker == HcmWorkerLookup::currentWorker()
            notExists join omExplodedGraph where
                omExplodedGraph.AncestorOrganization == omOperatingUnit.RecId &&
                omExplodedGraph.OMHierarchyType == omHierarchyType.RecId;

        // This is static data, so only refresh when session is restarted
        return RefreshFrequency::PerSession;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS344570</DeveloperDocumentation>
	<Label>@SYS344564</Label>
	<TitleField1>OperatingUnitNumber</TitleField1>
	<TitleField2>DepartmentRecId</TitleField2>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DepartmentRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OperatingUnitNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DepartmentRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OperatingUnitNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DepartmentRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OperatingUnitNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OperatingUnitNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DepartmentRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>OMDepartmentRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OperatingUnitNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>OMOperatingUnitNumber</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>