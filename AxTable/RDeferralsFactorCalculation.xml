<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RDeferralsFactorCalculation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RDeferralsFactorCalculation extends common
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>endDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets period end date.
    /// </summary>
    /// <returns><c>RDeferralsEndDatePeriod</c> object.</returns>
    public RDeferralsEndDatePeriod endDate()
    {
        const int Value2 = 2;
        const int Value3 = 3;

        return this.PeriodType == RTax25PeriodType::Month ?
                                  endmth(this.StartDate) :
                                  endmth(mkdate(1,
                                         real2int(Value3 * power(Value2, (this.PeriodType - 1)) + mthofyr(this.StartDate) - 1),
                                         year(this.StartDate)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        RDeferralsFactorCalculation rDeferralsFactorCalculation;

        super();

        select firstonly StartDate, EndDate from rDeferralsFactorCalculation
            order StartDate desc;

        if (rDeferralsFactorCalculation.StartDate)
            this.StartDate = rDeferralsFactorCalculation.EndDate + 1;
        else
            this.StartDate = dateStartMth(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));

        this.EndDate = this.endDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean                     ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldnum(RDeferralsFactorCalculation, StartDate):
                if (RDeferralsFactorCalculation::existPeriod(this.StartDate))
                    ret = ret && checkFailed(strfmt("@GLS107186", this.StartDate));
                this.StartDate  = dateStartMth(this.StartDate);
                this.PeriodType = RTax25PeriodType::Month;
                this.EndDate    = this.endDate();
                if (RDeferralsFactorCalculation::existPeriod(this.EndDate))
                    ret = ret && checkFailed(strfmt("@GLS107186", this.EndDate));
                break;

            case fieldnum(RDeferralsFactorCalculation, PeriodType):
                this.EndDate = this.endDate();
                if (RDeferralsFactorCalculation::existPeriod(this.EndDate))
                    ret = ret && checkFailed(strfmt("@GLS107186", this.EndDate));
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if factor calculation exists.
    /// </summary>
    /// <param name = "_startDate">Period start date.</param>
    /// <returns>True, if calculation exists, othervise false.</returns>
    public static boolean exist(TransDate _startDate)
    {
        return _startDate && (select firstonly RecId from rDeferralsFactorCalculation
                                  index StartDateIdx
                                  where rDeferralsFactorCalculation.StartDate == _startDate).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if factor calculation exists.
    /// </summary>
    /// <param name = "_startDate">Date within period.</param>
    /// <returns>True, if calculation exists, othervise false.</returns>
    public static boolean existPeriod(TransDate _startDate)
    {
        return _startDate && (select firstonly RecId from rDeferralsFactorCalculation
                                  where rDeferralsFactorCalculation.StartDate <= _startDate &&
                                        rDeferralsFactorCalculation.EndDate   >= _startDate).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Selects calculation record.
    /// </summary>
    /// <param name = "_startDate">Start date.</param>
    /// <param name = "_forUpdate">Select mode.</param>
    /// <returns><c>RDeferralsFactorCalculation</c> object.</returns>
    public static RDeferralsFactorCalculation find(TransDate _startDate,
                                                   boolean   _forUpdate = false)
    {
        RDeferralsFactorCalculation rDeferralsFactorCalculation;

        if (_startDate)
        {
            rDeferralsFactorCalculation.selectForUpdate(_forUpdate);
            select firstonly rDeferralsFactorCalculation
                index StartDateIdx
                where rDeferralsFactorCalculation.StartDate == _startDate;
        }

        return rDeferralsFactorCalculation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findNextPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets next period calculation.
    /// </summary>
    /// <param name = "_runDate">Date to search after.</param>
    /// <returns><c>RDeferralsFactorCalculation</c> object.</returns>
    public static RDeferralsFactorCalculation findNextPeriod(TransDate _runDate)
    {
        RDeferralsFactorCalculation rDeferralsFactorCalculation;

        if (_runDate)
        {
            select firstonly rDeferralsFactorCalculation
                order by StartDate asc
                where rDeferralsFactorCalculation.StartDate  >  _runDate &&
                      rDeferralsFactorCalculation.Calculated;
        }

        return rDeferralsFactorCalculation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets calculation.
    /// </summary>
    /// <param name = "_runDate">Date within period.</param>
    /// <param name = "_forUpdate">Select mode.</param>
    /// <returns><c>RDeferralsFactorCalculation</c> object.</returns>
    public static RDeferralsFactorCalculation findPeriod(TransDate _runDate,
                                                         boolean   _forUpdate = false)
    {
        RDeferralsFactorCalculation rDeferralsFactorCalculation;

        if (_runDate)
        {
            rDeferralsFactorCalculation.selectForUpdate(_forUpdate);
            select firstonly rDeferralsFactorCalculation
                order by StartDate desc
                where rDeferralsFactorCalculation.StartDate  <= _runDate &&
                      rDeferralsFactorCalculation.EndDate    >= _runDate;
        }

        return rDeferralsFactorCalculation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets calculation.
    /// </summary>
    /// <param name = "_recId">Record Id.</param>
    /// <param name = "_forUpdate">Selection mode.</param>
    /// <returns><c>RDeferralsFactorCalculation</c> object.</returns>
    public static RDeferralsFactorCalculation findRecId(RefRecId _recId,
                                                        boolean  _forUpdate = false)
    {
        RDeferralsFactorCalculation rDeferralsFactorCalculation;

        if (_recId)
        {
            rDeferralsFactorCalculation.selectForUpdate(_forUpdate);
            select firstonly rDeferralsFactorCalculation
                where rDeferralsFactorCalculation.RecId == _recId;
        }

        return rDeferralsFactorCalculation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>RDeferralsFactorCalculation</FormRef>
	<Label>@GLS111294</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>StartDate</TitleField1>
	<TitleField2>PeriodType</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>RDeferrals</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>StartDateIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RDeferralsWritingOffFactor</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RDeferralsWritingOffFactor</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Calculated</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Calculated</Name>
			<Label>@GLS101412</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Calculated</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@SYS40</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Calculated</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@GLS103738</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EndDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RDeferralsEndDatePeriod</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PeriodType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RTax25PeriodType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS2168</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>StartDateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>StartDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>