<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayParmEmplTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RPayParmEmplTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCheckParm</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public NoYes getCheckParm()
    {
        RPayParmTable payParmTable;
        ;
        select firstonly Check, PayFieldType from payParmTable
            where (payParmTable.PayField == this.PayField);

        return (payParmTable.Check || payParmTable.PayFieldType == RpayPayFieldType::DateField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDescriptionParm</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display Name getDescriptionParm()
    {
        RPayParmTable payParmTable;
        ;

        select firstonly Name from payParmTable
            where (payParmTable.PayField == this.PayField);

        return  payParmTable.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPayFieldType</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public RpayPayFieldType getPayFieldType()
    {
        RPayParmTable payParmTable;
        ;

        select firstonly PayFieldType from  payParmTable
            where (payParmTable.PayField == this.PayField);

        return  payParmTable.PayFieldType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupButton</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void lookupButton(FormStringControl _contentsControl)
    {
        _contentsControl.lookupButton(FormLookupButton::Never);
        if (this.getCheckParm())
        {
            _contentsControl.lookupButton(FormLookupButton::Always);
        }
        else
        {
            _contentsControl.lookupButton(FormLookupButton::Never);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupContents</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void lookupContents(FormStringControl _lookupCtrl)
    {
        Query query = new Query();
        QueryBuildDataSource  queryBuildDataSource;
        QueryBuildRange       queryBuildRange;
        SysTableLookup sysTableLookup;
        TableId tableId;
        FieldId fieldId;

        if (this.getPayFieldType() == RpayPayFieldType::DateField)
        {
            RPayParmEmplTrans::lookupDate(_lookupCtrl);
        }
        else
        {
            tableId = tableNum(RPayParmTrans) ;
            sysTableLookup = SysTableLookup::newParameters(tableId,_lookupCtrl);
            fieldId = fieldNum(RPayParmTrans,Contents);
            sysTableLookup.addLookupfield(fieldId);
            queryBuildDataSource = query.addDataSource(tableId);
            queryBuildDataSource.orderMode(OrderMode::OrderBy);
            queryBuildDataSource.addSortField(fieldId);
            queryBuildRange = queryBuildDataSource.addRange(fieldNum(RPayParmTrans, PayField));
            queryBuildRange.value(queryValue(this.PayField));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean ret;
        str strPrintableFileName;

        ret = super();
        if (ret && this.getCheckParm())
        {
            switch (this.getPayFieldType())
            {
                case RpayPayFieldType::DateField:
                    if (str2DateDMY(this.Contents) == dateNull())
                    {
                        checkFailed("@RUP810");
                        ret = false;
                    }
                    else
                    {
                        this.Contents = strFmt("@GLS106745", str2DateDMY(this.Contents));
                    }
                break;
                case RpayPayFieldType::StringField:
                    ret = RPayParmEmplTrans::isSuitableContents(this.PayField, this.Contents);
                    if (! ret)
                    {
                        strPrintableFileName = fieldId2pname(tableNum(RPayParmEmplTrans), fieldNum(RPayParmEmplTrans,Contents));
                        warning(strFmt("@RUP188", strPrintableFileName, this.Contents));
                    }
                break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static RPayParmEmplTrans find(RHRMEmplId _emplId , RPayField _payField, boolean _forUpdate = false)
    {
        RPayParmEmplTrans payParmEmplTrans;
        ;

        if (_emplId && _payField)
        {
            payParmEmplTrans.selectForUpdate(_forUpdate);

            select firstonly payParmEmplTrans
                    index hint PayFieldEmplIdx
                    where payParmEmplTrans.EmplId   == _emplId &&
                          payParmEmplTrans.PayField == _payField ;
        }

        return payParmEmplTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSuitableContents</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static boolean isSuitableContents(RPayField _payField, RPayParmContent _contents)
    {
        RPayParmTrans payParmTrans;
        ;
        select firstonly RecId from payParmTrans
            where ((payParmTrans.PayField == _payField)
                &&(payParmTrans.Contents  == _contents));

        return  (payParmTrans.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the lookup for dates.
    /// </summary>
    /// <param name="_lookupCtrl">
    /// The form control to perform lookup for.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void lookupDate(FormStringControl _lookupCtrl)
    {
        FormRun formRun;
        Args    args        = new Args(formStr(SysDateLookup));
        args.caller(_lookupCtrl);

        formRun     = classfactory.formRunClass(args);
        formRun.init();
        _lookupCtrl.performFormLookup(formRun);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RPayHRMCommon</ConfigurationKey>
	<DeveloperDocumentation>@RUP6185</DeveloperDocumentation>
	<FormRef>RPayParmTable</FormRef>
	<Label>@GLS105328</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>EmplId</TitleField1>
	<TitleField2>PayField</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>PayFieldEmplIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Obsolete</Modules>
	<PrimaryIndex>PayFieldEmplIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EmplId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Contents</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayField</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Contents</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmplId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Contents</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayParmContent</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EmplId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>RHRMEmplId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayField</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayField</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PayFieldEmplIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>EmplId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PayField</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RHRMEmplTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RHRMEmplTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RHRMEmplTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RPayParmEmplTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EmplId</Name>
					<SourceEDT>RHRMEmplId</SourceEDT>
					<Field>EmplId</Field>
					<RelatedField>EmployeeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RPayParmTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>RPayParmTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RPayParmTrans</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RPayParmEmplTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Contents</Name>
					<SourceEDT>RPayParmContent</SourceEDT>
					<Field>Contents</Field>
					<RelatedField>Contents</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PayField</Name>
					<SourceEDT>RPayField</SourceEDT>
					<Field>PayField</Field>
					<RelatedField>PayField</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>