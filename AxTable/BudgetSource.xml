<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetSource</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetSource extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>existBudgetTransactionLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the budget transaction line that is referenced by the current budget source
    /// exists.
    /// </summary>
    /// <returns>
    /// true if the budget transaction line reference exists; otherwise, false.
    /// </returns>
    public boolean existBudgetTransactionLine()
    {
        boolean found;

        if (this.BudgetTransactionLine)
        {
            found = BudgetTransactionLine::exist(this.BudgetTransactionLine);
        }

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existGeneralJournalEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the general journal entry that is referenced by the current budget source exists.
    /// </summary>
    /// <returns>
    /// true if the general journal entry reference exists; otherwise, false.
    /// </returns>
    public boolean existGeneralJournalEntry()
    {
        boolean found;

        if (this.LedgerEntryGeneralJournalEntry)
        {
            found = GeneralJournalEntry::exist(this.LedgerEntryGeneralJournalEntry);
        }

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existLedgerJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the ledger journal trans that is referenced by the current budget source exists.
    /// </summary>
    /// <returns>
    /// true if the ledger journal trans reference exists; otherwise, false.
    /// </returns>
    public boolean existLedgerJournalTrans()
    {
        boolean found;
        CompanyInfo legalEntity;

        if (this.LedgerEntryJournalLegalEntity &&
            this.LedgerEntryJournalNumber &&
            this.LedgerEntryJournalReferenceNumber)
        {
            legalEntity = CompanyInfo::find(false, this.LedgerEntryJournalLegalEntity);

            if (curext() == legalEntity.DataArea)
            {
                found = LedgerJournalTrans::existVoucher(
                    this.LedgerEntryJournalNumber,
                    this.LedgerEntryJournalReferenceNumber);
            }
            else
            {
                changeCompany(legalEntity.DataArea)
                {
                    found = LedgerJournalTrans::existVoucher(
                        this.LedgerEntryJournalNumber,
                        this.LedgerEntryJournalReferenceNumber);
                }
            }
        }

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existSourceDocumentLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the source document line that is referenced by the current budget source exists.
    /// </summary>
    /// <returns>
    /// true if the source document line reference exists; otherwise, false.
    /// </returns>
    public boolean existSourceDocumentLine()
    {
        boolean found;

        if (this.SourceDocumentLine)
        {
            found = SourceDocumentLine::exist(this.SourceDocumentLine);
        }

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existSourceIntegratorReference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the source integrator that is referenced by the current budget source exists.
    /// </summary>
    /// <returns>
    /// true if the source integrator reference exists; otherwise, false.
    /// </returns>
    public boolean existSourceIntegratorReference()
    {
        boolean referenceExist;

        switch (this.BudgetSourceType)
        {
            case BudgetSourceType::BudgetTransactionLine:
                referenceExist = this.existBudgetTransactionLine();
                break;

            case BudgetSourceType::SourceDocumentLine:
                referenceExist = this.existSourceDocumentLine();
                break;

            case BudgetSourceType::LedgerEntry:
                referenceExist = this.existGeneralJournalEntry();
                break;

            case BudgetSourceType::LedgerJournalEntry:
                referenceExist = this.existLedgerJournalTrans();
                break;

            default:
                // Not supported.
                throw error(Error::wrongUseOfFunction(funcname()));
        }

        return referenceExist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>BudgetSource</c> table exists and displays an error if it does not exist.
    /// </summary>
    /// <param name="_recId">
    /// The record Id of the record to find.
    /// </param>
    /// <param name="_userConnection">
    /// The <c>UserConnection</c> that is used to determine whether the specified record in the <c>BudgetSource</c> table exists; optional, default is null.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(recId _recId, UserConnection _userConnection = null)
    {
        boolean ret = true;

        if (!BudgetSource::exist(_recId, _userConnection))
        {
            ret = checkFailed(strFmt(BudgetSource::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>BudgetSource</c> table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record Id of the record to find.
    /// </param>
    /// <param name="_userConnection">
    /// The <c>UserConnection</c> that is used to determine whether the specified record in the <c>BudgetSource</c> table exists; optional, default is null.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(recId _recId, UserConnection _userConnection = null)
    {
        BudgetSource budgetSource;

        if (_userConnection)
        {
            budgetSource.setConnection(_userConnection);
        }

        select firstonly RecId from budgetSource
            where (budgetSource.RecId == _recId);

        return (budgetSource.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>BudgetSource</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record Id of the record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <param name="_userConnection">
    /// The <c>UserConnection</c> that is used to find the specified record in the <c>BudgetSource</c> table; optional, default is null.
    /// </param>
    /// <returns>
    /// A record in the <c>BudgetSource</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetSource find(
        recId _recId ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto,
        UserConnection          _userConnection = null)
    {
        BudgetSource budgetSource;

        budgetSource.selectForUpdate(_forupdate);

        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            budgetSource.concurrencyModel(_concurrencyModel);
        }

        if (_userConnection)
        {
            budgetSource.setConnection(_userConnection);
        }

        select firstonly budgetSource
            where budgetSource.RecId == _recId;

        return budgetSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetCtrl</ConfigurationKey>
	<DeveloperDocumentation>@SYS127837</DeveloperDocumentation>
	<Label>@SYS127829</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>CheckResultErrorWarning</TitleField1>
	<TitleField2>CheckResult</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>Budget</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>BudgetCheckResultErrorWarningDetail</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>BudgetCheckResultErrorWarningDetail</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CheckResult</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckResultErrorWarningType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckResultErrorWarning</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsOverrunApproved</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BudgetControlSourceIntegrator</Name>
			<Label>@SYS327687</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetControlSourceIntegrator</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BudgetSourceTypes</Name>
			<Label>@SYS312579</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetSourceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceDocumentLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetTransactionLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerEntryJournalReferenceNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerEntryJournalNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerEntryJournalLegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerEntryGeneralJournalEntry</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CheckResult</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckResultErrorWarningType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckResultErrorWarning</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsOverrunApproved</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetCheckGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SequenceNum</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetCheckGroupSequence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SequenceNum</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BudgetControlSourceIntegrator</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>BudgetControlSourceIntegrator</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BudgetSourceType</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>BudgetSourceType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetTransactionLine</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckResult</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>BudgetCheckResult</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckResultErrorWarning</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>BudgetControlErrorWarning</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckResultErrorWarningType</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>BudgetControlErrorWarningType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDeletePending</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsOverrunApproved</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Label>@SYS133480</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerEntryGeneralJournalEntry</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerEntryJournalLegalEntity</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerEntryJournalNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerJournalId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerEntryJournalReferenceNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceDocumentLine</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BudgetTransactionLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetTransactionLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SourceDocumentLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceDocumentLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LegalEntityIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerEntryJournalLegalEntity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>GeneralJournalEntryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerEntryGeneralJournalEntry</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BudgetSourceIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetSourceType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetTransactionLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceDocumentLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LedgerEntryGeneralJournalEntry</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LedgerEntryJournalNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LedgerEntryJournalReferenceNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LedgerEntryJournalLegalEntity</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CheckResult</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BudgetCheckGroupIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>BudgetCheckGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetCheckGroupSequence</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetControlSourceIntegrator</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>IsOverrunApproved</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CheckResultErrorWarningType</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IsDeletePendingIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>IsDeletePending</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetTransactionLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>BudgetTransactionLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>BudgetTransactionLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetTransactionLine_BudgetSource</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetTransactionLine</Name>
					<Field>BudgetTransactionLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>GeneralJournalEntry</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>GeneralJournalEntry</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>GeneralJournalEntry</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>GeneralJournalEntry_BudgetSource</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerEntryGeneralJournalEntry</Name>
					<Field>LedgerEntryGeneralJournalEntry</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LegalEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CompanyInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CompanyInfo</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CompanyInfo_BudgetSource</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerEntryJournalLegalEntity</Name>
					<Field>LedgerEntryJournalLegalEntity</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SourceDocumentLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>SourceDocumentLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SourceDocumentLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SourceDocumentLine_BudgetSource</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceDocumentLine</Name>
					<Field>SourceDocumentLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>