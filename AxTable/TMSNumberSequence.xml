<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSNumberSequence</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSNumberSequence extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a specific <c>TMSNumberSequence</c> record exists.
    /// </summary>
    /// <param name="_tmsNumberSequenceCode">
    /// Number sequence code of the record.
    /// </param>
    /// <returns>
    /// True if the record exists.
    /// </returns>
    public static boolean exist(TMSNumberSequenceCode _tmsNumberSequenceCode)
    {
        return (_tmsNumberSequenceCode) &&
               (select firstonly TMSNumberSequence
                    where tmsNumberSequence.NumberSequenceCode == _tmsNumberSequenceCode).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSNumberSequence</c> record with given parameters.
    /// </summary>
    /// <param name="_tmsNumberSequenceCode">
    /// Number sequence code of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static TMSNumberSequence find(TMSNumberSequenceCode _tmsNumberSequenceCode,
                                         boolean               _forupdate = false)
    {
        TMSNumberSequence    tmsNumberSequence;

        if (_tmsNumberSequenceCode)
        {
            tmsNumberSequence.selectForUpdate(_forupdate);

            select firstonly tmsNumberSequence
                where tmsNumberSequence.NumberSequenceCode == _tmsNumberSequenceCode;
        }

        return tmsNumberSequence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextProNumberForCarrier</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the Pro Number and updates the related NextSequence field on <c>TMSNumberSequence</c> table record.
    /// </summary>
    /// <param name="_carrierCode">
    /// The shipping carrier.
    /// </param>
    /// <returns>
    /// The new Pro Number; otherwise empty string.
    /// </returns>
    public static WHSProNum getNextProNumberForCarrier(TMSCarrierCode _carrierCode)
    {
        TMSCarrier         tMSCarrier;

        if (!_carrierCode)
        {
            return '';
        }

        return TMSNumberSequence::getNextProNumber(TMSCarrier::find(_carrierCode).ProNumberCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextProNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>TMSNumberSequence</c> record with the newly generated number sequence and returns the next number.
    /// </summary>
    /// <param name = "_tmsNumSeqCode">The transportation number sequence code.</param>
    /// <returns>the newly generated number; otherwise a blank string</returns>
    /// <remarks>It is assumed that the <c>TMSNumberSequence</c> record is already selected for update.</remarks>
    public static WHSProNum getNextProNumber(TMSNumberSequenceCode _tmsNumSeqCode)
    {
        TMSNumberSequence tmsNumberSequence;
        
        if (NumberSequenceConnection::isApplicationInTransaction())
        {
            return TMSNumberSequence::getNextProNumberWithinTTS(tmsNumberSequence, _tmsNumSeqCode);
        }

        WHSProNum                   ret;
        NumberSequenceConnection    numberSequenceConnection;

        try
        {
            numberSequenceConnection = NumberSequenceConnection::construct();
            numberSequenceConnection.tts_begin();
            numberSequenceConnection.setConnection(tmsNumberSequence);

            ret = TMSNumberSequence::getNextProNumberWithinTTS(tmsNumberSequence, _tmsNumSeqCode);

            numberSequenceConnection.tts_commit();
        }
        catch
        {
            numberSequenceConnection.tts_abort();
            
            ret = '';
        }
        finally
        {
            // Call finalize to release sql connection, otherwise it's kept alive until GC collects.
            numberSequenceConnection.finalize();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextProNumberWithinTTS</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>TMSNumberSequence</c> record within the current application transaction
    /// with the newly generated number sequence and returns the next number.
    /// </summary>
    /// <param name = "_tmsNumberSequence">The transportation number sequence record.</param>
    /// <param name = "_tmsNumSeqCode">The transportation number sequence code.</param>
    /// <returns>The newly generated number; otherwise a blank string</returns>
    /// <remarks>It is assumed that the <c>TMSNumberSequence</c> record is already selected for update.</remarks>
    private static WHSProNum getNextProNumberWithinTTS(TMSNumberSequence _tmsNumberSequence, TMSNumberSequenceCode _tmsNumSeqCode)
    {
        WHSProNum ret;

        select firstonly forupdate _tmsNumberSequence
            where _tmsNumberSequence.NumberSequenceCode == _tmsNumSeqCode;

        if (_tmsNumberSequence.RecId != 0
            && _tmsNumberSequence.NextSequence >= _tmsNumberSequence.StartSequence
            && (!_tmsNumberSequence.EndSequence || _tmsNumberSequence.NextSequence < _tmsNumberSequence.EndSequence))
        {
            _tmsNumberSequence.NextSequence ++;
            _tmsNumberSequence.update();

            if (_tmsNumberSequence.NextSequence >= _tmsNumberSequence.ThresholdSequence)
            {
                warning(strFmt("@TRX2635", _tmsNumberSequence.NumberSequenceCode));
            }

            ret = _tmsNumberSequence.getNextFormattedProNumber();
        }
        else
        {
            if (_tmsNumberSequence.RecId && _tmsNumberSequence.NextSequence >= _tmsNumberSequence.EndSequence)
            {
                warning(strFmt("@SYS17478", _tmsNumberSequence.NumberSequenceCode));
            }

            ret = '';
        }


        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextFormattedProNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the full qualified number from the given <c>TMSNumberSequence</c> table.
    /// </summary>
    /// <returns>the constructed string.</returns>
    public WHSProNum getNextFormattedProNumber()
    {
        // get the sequence and pad it with zeroes
        str nextSequence = int2str(this.NextSequence);
        if (this.SequenceLength > strLen(nextSequence))
        {
            nextSequence = strRFix(nextSequence, this.SequenceLength - strLen(nextSequence), '0');
        }

        WHSProNum ret = strFmt("%1%2%3", this.Prefix, nextSequence, this.Postfix);

        // suffix the check digit sequence
        TMSEngineType engineType = TMSGenericEngine::find(this.CheckDigitEngineCode).EngineType;
        DictClass checkDigitClass = SysDictClass::newName(engineType);
        if (checkDigitClass != null)
        {
            var engine = checkDigitClass.makeObject();
            if (engine)
            {
                TMSICheckDigitEngine checkDigitEngine = engine as TMSICheckDigitEngine;
                if (checkDigitEngine)
                {
                    str suffix = checkDigitEngine.Calculate(ret);
                    ret = strFmt("%1%2", ret, suffix);
                }
                else
                {
                    throw error(strFmt("@TRX:EngineClassDoesNotImplementInterface", engineType, classStr(TMSICheckDigitEngine)));
                }
            }
            else
            {
                throw error(strFmt("@SYS19384", engine));
            }
        }
        else
        {
            throw error(strFmt("@TRX:EngineClassNotLoaded", engineType));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super()
                        && this.validateField(fieldNum(TMSNumberSequence, CheckDigitEngineCode));

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        switch(_fieldIdToCheck)
        {
            case fieldNum(TMSNumberSequence, CheckDigitEngineCode):
                if (TMSGenericEngine::find(this.CheckDigitEngineCode).Engine != TMSEngine::CheckDigit)
                {
                    ret = checkFailed("@TRX:ValidateFieldWarning_TMSNumberSequence_GenericEngineNotCheckDigit");
                }
                break;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX1940</DeveloperDocumentation>
	<Label>@WAX326</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>NumberSequenceCode</TitleField1>
	<TitleField2>Name</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>NumberSequenceCodeIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Transportation</Modules>
	<PrimaryIndex>NumberSequenceCodeIdx</PrimaryIndex>
	<ReplacementKey>NumberSequenceCodeIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Prefix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Postfix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartSequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndSequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NextSequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThresholdSequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SequenceLength</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckDigitEngineCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Prefix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Postfix</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartSequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndSequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NextSequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThresholdSequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SequenceLength</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CheckDigitEngineCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CheckDigitEngineCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSCheckDigitEngineCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>EndSequence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSEndSequence</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NextSequence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSNextSequence</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NumberSequenceCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSNumberSequenceCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NumberSequenceType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TMSNumberSequenceType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Postfix</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSPostfix</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Prefix</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSPrefix</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SequenceLength</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSSequenceLength</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>StartSequence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSStartSequence</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ThresholdSequence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSThresholdSequence</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NumberSequenceCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>NumberSequenceCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>TMSGenericEngine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TMSGenericEngine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Engine_Extern</Name>
					<SourceEDT>TMSCheckDigitEngineCode</SourceEDT>
					<RelatedField>Engine</RelatedField>
					<ValueStr>TMSEngine::CheckDigit</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CheckDigitEngineCode</Name>
					<SourceEDT>TMSCheckDigitEngineCode</SourceEDT>
					<Field>CheckDigitEngineCode</Field>
					<RelatedField>GenericEngineCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>