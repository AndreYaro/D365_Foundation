<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmPositionForecastBudgetDefaultValue</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HcmPositionForecastBudgetDefaultValue extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the specified <c>HcmPositionForecastBudgetDefaultRecId</c> record exists in the
    ///    <c>HcmPositionForecastBudgetDefault</c> table; if not, an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    ///    The <c>HcmPositionForecastBudgetDefaultRecId</c> value of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(HcmPositionForecastBudgetDefaultValRecId _recId)
    {
        boolean ret = true;

        if (!HcmPositionForecastBudgetDefaultValue::exist(_recId))
        {
            ret = checkFailed(strFmt(HcmPositionForecastBudgetDefaultValue::txtNotExist(), tableStr(HcmPositionForecastBudgetDefaultValue)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromHcmPositionForecastScenario</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a record in table <c>HcmPositionBudgetDefaultValue</c> with the help of given parameters
    /// </summary>
    /// <param name="_forecastScenario">
    /// The <c>HcmForecastScenarioRecId</c> that is associated with the position forecast scenario
    /// </param>
    /// <param name="_positionForecast">
    /// The <c>HcmPositionForecastRecId</c> that is associated with the position forecast scenario
    /// </param>

    public static void createFromHcmPositionForecastScenario(HcmForecastScenarioRecId _forecastScenario, HcmPositionForecastRecId _positionForecast)
    {
        HcmForecastScenario hcmForecastScenario;
        HcmPositionForecastBudgetDefaultValue hcmPositionForecastBudgetDefaultValue;

        hcmForecastScenario                   = HcmForecastScenario::find(_forecastScenario);
        hcmPositionForecastBudgetDefaultValue = HcmPositionForecastBudgetDefaultValue::findByPositionForecastLegalEntity(_positionForecast, hcmForecastScenario.LegalEntity);

        if (hcmPositionForecastBudgetDefaultValue.RecId == 0)
        {
            hcmPositionForecastBudgetDefaultValue.LegalEntity = hcmForecastScenario.LegalEntity;
            hcmPositionForecastBudgetDefaultValue.CurrencyCode = Ledger::accountingCurrency(hcmForecastScenario.LegalEntity);
            hcmPositionForecastBudgetDefaultValue.PositionForecast = _positionForecast;

            hcmPositionForecastBudgetDefaultValue.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified <c>HcmPositionForecastBudgetDefaultValRecId</c> record occurs in
    /// the <c>HcmPositionForecastBudgetDefaultValue</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The <c>HcmPositionForecastBudgetDefaultValue</c> value of the record to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false .
    /// </returns>
    public static boolean exist(HcmPositionForecastBudgetDefaultValRecId _recId)
    {
        return _recId && (select firstonly RecId from hcmPositionForecastBudgetDefaultValue
                    where hcmPositionForecastBudgetDefaultValue.RecId == _recId).RecId!= 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>HcmPositionForecastBudgetDefaultValue</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>HcmPositionForecastBudgetDefaultValue</c> table.
    /// </returns>
    public static HcmPositionForecastBudgetDefaultValue find(
    HcmPositionForecastBudgetDefaultValRecId _recId,
    boolean _forUpdate = false,
    ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        HcmPositionForecastBudgetDefaultValue hcmPositionForecastBudgetDefaultValue;

        hcmPositionForecastBudgetDefaultValue.selectForUpdate(_forUpdate );

        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hcmPositionForecastBudgetDefaultValue.concurrencyModel(_concurrencyModel);
        }

        select firstonly hcmPositionForecastBudgetDefaultValue
            where hcmPositionForecastBudgetDefaultValue.RecId == _recId;

        return hcmPositionForecastBudgetDefaultValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByPositionForecastLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>HcmPositionForecastBudgetDefaultValue</c> table.
    /// </summary>
    /// <param name="_positionForecast">
    /// The value of the <c>PositionForecast</c> field of the record to find.
    /// </param>
    /// <param name="_legalEntity">
    /// The value of the <c>RefRecId</c> field of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    /// A record in <c>HcmPositionForecastBudgetDefaultValue</c> table; otherwise, an empty buffer.
    /// </returns>
    public static HcmPositionForecastBudgetDefaultValue findByPositionForecastLegalEntity(
    HcmPositionForecastRecId _positionForecast,
    RefRecId _legalEntity,
    boolean _forUpdate = false,
    ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        HcmPositionForecastBudgetDefaultValue hcmPositionForecastBudgetDefaultValue;

        hcmPositionForecastBudgetDefaultValue.selectForUpdate(_forUpdate );

        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hcmPositionForecastBudgetDefaultValue.concurrencyModel(_concurrencyModel);
        }

        select firstonly hcmPositionForecastBudgetDefaultValue
            where hcmPositionForecastBudgetDefaultValue.PositionForecast == _positionForecast
            &&    hcmPositionForecastBudgetDefaultValue.LegalEntity == _legalEntity;

        return hcmPositionForecastBudgetDefaultValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS321009";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
	<DeveloperDocumentation>@GLS190149</DeveloperDocumentation>
	<Label>@GLS190166</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>PositionForecast</TitleField1>
	<TitleField2>LegalEntity</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Budget</Modules>
	<ReplacementKey>PositionForecastLegalEntityIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PositionForecast</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PositionForecast</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BudgetDefaults</Name>
			<Label>@GLS190012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PositionForecast</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LegalEntity</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS322242</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PositionForecast</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HcmPositionForecastRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PositionForecastLegalEntityIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PositionForecast</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LegalEntity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CompanyInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CompanyInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LegalEntity</Name>
					<Field>LegalEntity</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PositionForecast</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>HcmPositionForecast</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PositionForecast</Name>
					<Field>PositionForecast</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>