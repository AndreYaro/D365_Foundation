<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventItemSetupSupplyType</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventItemSetupSupplyType extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkDefaultOrderType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if the specified default order type is valid.
    /// </summary>
    /// <param name="_silent">
    ///    A Boolean value that indicates whether to show user warnings; optional.
    /// </param>
    /// <returns>
    ///    true if the specified default order type is valid; otherwise, false.
    /// </returns>
    public boolean checkDefaultOrderType(boolean    _silent = false)
    {
        InventItemType      inventItemType;
        boolean             ok;

        switch (this.DefaultOrderType)
        {
            case ReqPOType::Kanban:
            case ReqPOType::Production:
                inventItemType = InventItemType::newInventTable(this.inventTable());
                ok = inventItemType.canBeProduced();
                break;

            case ReqPOType::Transfer:
                ok = false;
                break;

            default:
                ok = true;
        }

        if (   ! ok
            && ! _silent)
        {
            return checkFailed(strFmt("@SYS190033",this.DefaultOrderType));
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDefaultOrderType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a <c>InventItemSetupSupplyType</c> record for the specified planned order type.
    /// </summary>
    /// <param name="_reqPOType">
    ///    The planned order type.
    /// </param>
    public void initDefaultOrderType(ReqPOType _reqPOType)
    {
        this.DefaultOrderType = _reqPOType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a <c>InventItemSetupSupplyType</c> record for the specified item record.
    /// </summary>
    /// <param name="_inventTable">
    ///    The item record from which the values should be taken.
    /// </param>
    public void initFromInventTable(InventTable _inventTable)
    {
        this.ItemId         = _inventTable.ItemId;
        this.ItemDataAreaId = _inventTable.DataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        this.initDefaultOrderType(ReqPOType::Purch);
        this.ItemDataAreaId = curext();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the related <c>InventTable</c> record.
    /// </summary>
    /// <returns>
    ///    The related <c>InventTable</c> record.
    /// </returns>
    public InventTable inventTable()
    {
        return InventTable::findInLegalEntity(this.ItemId,this.ItemDataAreaId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pmfCheckDefaultOrderType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified default order type is valid based on the item production type.
    /// </summary>
    /// <returns>
    /// true if the specified default order type is valid; otherwise, false.
    /// </returns>
    public boolean pmfCheckDefaultOrderType()
    {
        boolean             ok;

        switch (this.DefaultOrderType)
        {
            case ReqPOType::Kanban:
                ok = this.inventTable().pmfInventProductType().canBeDefaultOrderTypeKanban();
                break;

            case ReqPOType::Purch:
                ok = this.inventTable().pmfInventProductType().canBeDefaultOrderTypePurchase();
                break;

            default:
                ok = true;
        }

        if (!ok)
        {
            return checkFailed(strfmt("@PRO2629",this.DefaultOrderType));
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(
        fieldName   _fieldName,
        int         _arrayIndex = 1)
    {
        boolean             ret;

        ret = super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldstr(InventItemSetupSupplyType,DefaultOrderType):

                ret = ret && this.checkDefaultOrderType(false) && this.pmfCheckDefaultOrderType();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a default <c>InventItemSetupSupplyType</c> record for an item and inserts it into the database.
    /// </summary>
    /// <param name="_itemId">
    /// An item ID.
    /// </param>
    /// <param name="_itemDataAreaId">
    /// A company ID.
    /// </param>
    /// <returns>
    /// A default <c>InventItemSetupSupplyType</c> record for an item and inserts it into the database.
    /// </returns>
    public static InventItemSetupSupplyType createDefault(
        ItemId      _itemId,
        DataAreaId  _itemDataAreaId)
    {
        InventItemSetupSupplyType   inventItemSetupSupplyType;

        ttsbegin;
        inventItemSetupSupplyType.initValue();
        inventItemSetupSupplyType.ItemId            = _itemId;
        inventItemSetupSupplyType.ItemDataAreaId    = _itemDataAreaId;
        inventItemSetupSupplyType.insert();
        ttscommit;

        return inventItemSetupSupplyType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>InventItemSetupSupplyType</c> table.
    /// </summary>
    /// <param name="_itemId">
    ///    The ID of the record to find.
    /// </param>
    /// <param name="_dataAreaId">
    ///    The legal entity of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>InventItemSetupSupplyType</c> table; otherwise, an empty record.
    /// </returns>
    static public InventItemSetupSupplyType find(
        ItemId          _itemId,
        DataAreaId      _dataAreaId,
        boolean         _forUpdate = false )
    {
        InventItemSetupSupplyType inventItemSetupSupplyType;

        inventItemSetupSupplyType.selectForUpdate(_forUpdate);

        if (_itemId)
        {
            select firstonly inventItemSetupSupplyType
                where   inventItemSetupSupplyType.ItemId            == _itemId &&
                        inventItemSetupSupplyType.ItemDataAreaId    == _dataAreaId;
        }

        return inventItemSetupSupplyType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultOrderType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get requested planned order type.
    /// </summary>
    /// <param name="_itemId">
    /// The item Id.
    /// </param>
    /// <param name="_dataAreaId">
    /// The company Id.
    /// </param>
    /// <returns>
    /// The requested planned order type.
    /// </returns>
    public static ReqPOType getDefaultOrderType(ItemId _itemId, DataAreaId _dataAreaId)
    {
        return InventItemSetupSupplyType::find(_itemId, _dataAreaId).DefaultOrderType;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS323954</DeveloperDocumentation>
	<Label>@SYS183804</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>DefaultOrderType</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>InventTableIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<ReplacementKey>InventTableIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultOrderType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DefaultOrderType</Name>
			<Label>@SYS17041</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultOrderType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DefaultOrderType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS190034</Label>
			<EnumType>ReqPOType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemDataAreaId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTableIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DefaultOrderType</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefaultOrderType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemDataAreaId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InventTable_1</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>InventTable_1_InventItemSetupSupplyType</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemDataAreaId</Name>
					<Field>ItemDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>