<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocRecXmlMapToViLineTmp_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EFDocRecXmlMapToViLineTmp_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createFromFiscalDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a mapping between Vendor Invoice lines and Received Xml lines by fiscal document.
    /// </summary>
    /// <param name="_xmlViewRecId">
    /// ID of the <c>EFDocumentReceivedXmlView_BR</c> table record from which the map will be created.
    /// </param>
    /// <param name="_fiscalDocument">
    /// Instance of the <c>FiscalDocument_BR</c> table.
    /// </param>
    /// <returns>
    /// An instance of <c>EFDocMapXmlToVendInvoiceLineTmp_BR</c> containing the mapped lines.
    /// </returns>
    public static EFDocRecXmlMapToViLineTmp_BR createFromFiscalDocument(RecId _xmlViewRecId, FiscalDocument_BR _fiscalDocument)
    {
        EFDocRecXmlMapToViLineTmp_BR map;
        
        EFDocRecXmlMapToViLineTmp_BR::createRowsXmlAndFiscalDocLinesMap(map, _xmlViewRecId, _fiscalDocument);
        
        return map;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRowsXmlAndFiscalDocLinesMap</Name>
				<Source><![CDATA[
    private static void createRowsXmlAndFiscalDocLinesMap(EFDocRecXmlMapToViLineTmp_BR _map, RecId _xmlViewRecId, FiscalDocument_BR _fiscalDocument)
    {
        EFDocumentReceivedXmlViewLine_BR    xmlViewLine;
        FiscalDocumentLine_BR               fiscalDocLine;
        Set xmlLinesAlreadyMapped       = new Set(Types::Int64);
        Set fiscalDocLinesAlreadyMapped = new Set(Types::Int64);
        
        while select xmlViewLine
            where xmlViewLine.EFDocumentReceivedXmlView_BR == _xmlViewRecId
        {
            if (!xmlLinesAlreadyMapped.in(xmlViewLine.RecId))
            {
                select firstOnly fiscalDocLine
                    where fiscalDocLine.FiscalDocument == _fiscalDocument.RecId
                        &&  fiscalDocLine.ItemId == CustVendExternalItem::getItemIdForInvoiceAccount_BR(xmlViewLine.ItemId, _fiscalDocument.FiscalDocumentAccountNum);
                
                if (fiscalDocLine && !fiscalDocLinesAlreadyMapped.in(fiscalDocLine.RecId))
                {
                    _map.initFromReceivedXml(xmlViewLine);
                    
                    _map.initFromFiscalDocLine(fiscalDocLine);
                    
                    _map.insert();
                    
                    xmlLinesAlreadyMapped.add(xmlViewLine.RecId);
                    fiscalDocLinesAlreadyMapped.add(fiscalDocLine.RecId);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRowsVendorInvoiceLinesDontMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts new buffers at the mapping temporary table. The buffers inserted are the ones that could not be automatically
    /// mapped to a received xml line, so, just the vendor invoice fields of the new buffers will be set.
    /// </summary>
    /// <param name="_map">
    /// Mapping where the new buffers will be inserted
    /// </param>
    /// <param name="_vendInvoice">
    /// Vendor invoice table that contains the vendor invoice lines that must be mapped
    /// </param>
    /// <remarks>
    /// The _map parameter is a temporary table
    /// </remarks>
    private void createRowsVendorInvoiceLinesDontMap(EFDocRecXmlMapToViLineTmp_BR _map, VendInvoiceInfoTable _vendInvoice)
    {
        VendInvoiceInfoLine     vendLine;

        while select RecId, itemId, ReceiveNow, PurchPrice, LineNum from vendLine
            where vendLine.ParmId       == _vendInvoice.ParmId
                &&  vendLine.TableRefId == _vendInvoice.TableRefId
            notexists join _map
                where _map.VendInvoiceInfoLine == vendLine.RecId
        {
            _map.initFromVendorInvoice(vendLine);

            _map.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRowsXmlAndVendorInvoiceLinesMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts new buffers at the mapping temporary table.
    /// The buffers inserted are the ones where the vendor invoice line could be automatically mapped to a received xml line
    /// </summary>
    /// <param name="_map">
    /// Mapping where the new buffers will be inserted
    /// </param>
    /// <param name="_xmlViewRecId">
    /// Record id of the received xml that contains the lines that must be mapped against the vendor invoice
    /// </param>
    /// <param name="_vendInvoice">
    /// Vendor invoice table that contains the vendor invoice lines that must be mapped
    /// </param>
    private void createRowsXmlAndVendorInvoiceLinesMap(EFDocRecXmlMapToViLineTmp_BR _map, RecId _xmlViewRecId, VendInvoiceInfoTable _vendInvoice)
    {
        EFDocumentReceivedXmlViewLine_BR    xmlViewLine;
        VendInvoiceInfoLine                 vendLine;
        Set                                 xmlLinesAlreadyMapped           = new Set(Types::Int64);
        Set                                 vendorInvoiceLinesAlreadyMapped = new Set(Types::Int64);

        while select xmlViewLine
            where xmlViewLine.EFDocumentReceivedXmlView_BR == _xmlViewRecId
        {
            if (xmlLinesAlreadyMapped.in(xmlViewLine.RecId) == false)
            {
                select firstOnly vendLine
                    where vendLine.ParmId       == _vendInvoice.ParmId
                        &&  vendLine.TableRefId == _vendInvoice.TableRefId
                        &&  vendLine.ItemId     == CustVendExternalItem::getItemIdForInvoiceAccount_BR(xmlViewLine.ItemId, _vendInvoice.InvoiceAccount);

                if (vendLine && vendorInvoiceLinesAlreadyMapped.in(vendLine.RecId) == false)
                {
                    _map.initFromReceivedXml(xmlViewLine);

                    _map.initFromVendorInvoice(vendLine);

                    _map.insert();

                    xmlLinesAlreadyMapped.add(xmlViewLine.RecId);
                    vendorInvoiceLinesAlreadyMapped.add(vendLine.RecId);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRowsXmlLinesDontMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts new buffers at the mapping temporary table. The buffers inserted are the ones that could not be automatically
    /// mapped to a received vendor invoice line, so, just the received xml line fields of the new buffers will be set.
    /// </summary>
    /// <param name="_map">
    /// Mapping where the new buffers will be inserted
    /// </param>
    /// <param name="_xmlViewRecId">
    /// Recid of the xml view that contains the lines
    /// </param>
    private void createRowsXmlLinesDontMap(EFDocRecXmlMapToViLineTmp_BR _map, RecId _xmlViewRecId)
    {
        EFDocumentReceivedXmlViewLine_BR    xmlViewLine;

        while select xmlViewLine
            where xmlViewLine.EFDocumentReceivedXmlView_BR == _xmlViewRecId
            notexists join _map
                where _map.EFDocumentReceivedXmlViewLine_BR == xmlViewLine.RecId
        {
            _map.initFromReceivedXml(xmlViewLine);

            _map.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromFiscalDocLine</Name>
				<Source><![CDATA[
    private void initFromFiscalDocLine(FiscalDocumentLine_BR _fiscalDocumentLine)
    {
        this.VendInvoiceInfoLine                = _fiscalDocumentLine.RecId;
        this.InternalItemId                     = _fiscalDocumentLine.itemId;
        this.VendInvoiceQuantity                = _fiscalDocumentLine.Quantity;
        this.VendInvoicePrice                   = _fiscalDocumentLine.UnitPrice;
        this.VendInvoiceLineNum                 = _fiscalDocumentLine.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromReceivedXml</Name>
				<Source><![CDATA[
    private void initFromReceivedXml(EFDocumentReceivedXmlViewLine_BR _receivedXmlViewLine)
    {
        this.EFDocumentReceivedXmlViewLine_BR    = _receivedXmlViewLine.RecId;
        this.ExternalItemId                      = _receivedXmlViewLine.ItemId;
        this.XmlQuantity                         = _receivedXmlViewLine.Quantity;
        this.XmlUnit                             = _receivedXmlViewLine.Unit;
        this.XmlUnitPrice                        = _receivedXmlViewLine.UnitPrice;
        this.XmlLineDisc                         = _receivedXmlViewLine.Discount;
        this.XmlLineNum                          = _receivedXmlViewLine.LineNum;
        this.XmlOrigin                           = _receivedXmlViewLine.getTaxationOrigin();
        this.XmlTaxFiscalClassification          = _receivedXmlViewLine.TaxFiscalClassification;
        this.XmlICMSTaxAmount                    = _receivedXmlViewLine.IcmsAmount;
        this.XmlICMSSTTaxAmount                  = _receivedXmlViewLine.IcmsStAmount;
        this.XmlICMSSTTaxBaseAmount              = _receivedXmlViewLine.IcmsStBaseAmount;
        this.XmlICMSSTTaxValue                   = _receivedXmlViewLine.IcmsStValue;
        this.XmlFCPSTTaxAmount                   = _receivedXmlViewLine.FcpStAmount;
        this.XmlFCPSTTaxBaseAmount               = _receivedXmlViewLine.FcpStBaseAmount;
        this.XmlFCPSTTaxValue                    = _receivedXmlViewLine.FcpStValue;
        this.XmlCST                              = _receivedXmlViewLine.Cst;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendorInvoice</Name>
				<Source><![CDATA[
    private void initFromVendorInvoice(VendInvoiceInfoLine _vendInvoiceLine)
    {
        InventTable                             inventTable;

        inventTable                             = _vendInvoiceLine.inventTable();
        this.VendInvoiceInfoLine                = _vendInvoiceLine.RecId;
        this.InternalItemId                     = _vendInvoiceLine.itemId;
        this.VendInvoiceQuantity                = _vendInvoiceLine.ReceiveNow;
        this.VendInvoicePrice                   = _vendInvoiceLine.PurchPrice;
        this.VendInvoiceLineNum                 = _vendInvoiceLine.LineNum;
        this.VendInvoiceOrigin                  = inventTable.TaxationOrigin_BR;
        this.VendInvoiceTaxFiscalClassification = inventTable.TaxFiscalClassification_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isMapped</Name>
				<Source><![CDATA[
    /// <summary>
    /// indicates whether the vendor invoice line has been mapped against a NF-e XML line or not
    /// </summary>
    /// <returns>
    /// True if the vendor invoice line has been mapped against a NF-e XML line, false otherwise.
    /// </returns>
    public boolean isMapped()
    {
        return this.ExternalItemId && this.InternalItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mappingStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the status of the mapping between the vendor invoice line and NF-e XML line
    /// </summary>
    /// <returns>
    /// An enum indicating the mapping status of the record
    /// </returns>
    public display EFDocRecXmlMapToViLineStatus_BR mappingStatus()
    {
        EFDocRecXmlMapToViLineStatus_BR status;

        if (this.isMapped())
        {
            status = EFDocRecXmlMapToViLineStatus_BR::Mapped;
        }
        else
        {
            status = EFDocRecXmlMapToViLineStatus_BR::NotMapped;
        }

        return status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a mapping between Vendor Invoice lines and Received Xml lines
    /// A mapping line will be created for each one of the below scenarios:
    /// - Xml line item code matches the vendor invoice line item code through the external code. In this case, a mapping line will be created linking the xml line and the vendor invoice line.
    /// - A xml line could not be found for a given vendor invoice line. In this case, a mapping line will be created, but it will just contain information for the vendor invoice line. The xml line information on this mapping line will be blank.
    /// - A vendor invoice line could not be found for a given xml line. In this case, a mapping line will be created, but it will just contain information for the xml line. The vendor invoice line information on this mapping line will be blank.
    /// </summary>
    /// <param name="_xmlViewRecId">
    /// ID of the <c>EFDocumentReceivedXmlView_BR</c> table record from which the map will be created
    /// </param>
    /// <param name="_vendInvoiceInfoTable">
    /// Instance of the <c>VendInvoiceInfoTable</c> table from which the map will be created
    /// </param>
    /// <returns>
    /// An instance of <c>EFDocMapXmlToVendInvoiceLineTmp_BR</c> containing the mapped lines
    /// </returns>
    public static EFDocRecXmlMapToViLineTmp_BR create(RecId _xmlViewRecId, VendInvoiceInfoTable _vendInvoiceInfoTable)
    {
        EFDocRecXmlMapToViLineTmp_BR  map;

        map.createRowsXmlAndVendorInvoiceLinesMap(map, _xmlViewRecId, _vendInvoiceInfoTable);
        map.createRowsVendorInvoiceLinesDontMap(map, _vendInvoiceInfoTable);
        map.createRowsXmlLinesDontMap(map, _xmlViewRecId);

        return map;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4010066</DeveloperDocumentation>
	<Label>@SYS4010065</Label>
	<TitleField1>InternalItemId</TitleField1>
	<TitleField2>ExternalItemId</TitleField2>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>EFDocumentReceivedXmlViewLine_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ExternalItemId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EFDocRecXmlLineItemId_BR</ExtendedDataType>
			<Label>@SYS4010067</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InternalItemId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EFDocRecXmlLineItemId_BR</ExtendedDataType>
			<Label>@SYS4010068</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendInvoiceInfoLine</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VendInvoiceLineNum</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LineNumber</ExtendedDataType>
			<Label>@SYS4010069</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VendInvoiceOrigin</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Label>@SYS4010070</Label>
			<EnumType>FITaxationOrigin_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VendInvoicePrice</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PriceCur</ExtendedDataType>
			<Label>@SYS4010072</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>VendInvoiceQuantity</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>UnitQty</ExtendedDataType>
			<Label>@SYS4010073</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendInvoiceTaxFiscalClassification</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxFiscalClassificationId_BR</ExtendedDataType>
			<Label>@SYS4010074</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>XmlLineDisc</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>XmlLineNum</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LineNumber</ExtendedDataType>
			<Label>@SYS4010075</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>XmlOrigin</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Label>@SYS4010076</Label>
			<EnumType>FITaxationOrigin_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>XmlQuantity</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>UnitQty</ExtendedDataType>
			<Label>@SYS4010077</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>XmlTaxFiscalClassification</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxFiscalClassificationId_BR</ExtendedDataType>
			<Label>@SYS4010078</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>XmlUnitPrice</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PriceCur</ExtendedDataType>
			<Label>@SYS4010079</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>XmlICMSSTTaxAmount</Name>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>XmlICMSSTTaxBaseAmount</Name>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>XmlICMSSTTaxValue</Name>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>XmlFCPSTTaxAmount</Name>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>XmlFCPSTTaxBaseAmount</Name>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>XmlFCPSTTaxValue</Name>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>XmlICMSTaxAmount</Name>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>XmlUnit</Name>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>XmlCST</Name>
			<ExtendedDataType>TaxationCode_BR</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendInvoiceLineRecIdWithXmlLineRecIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendInvoiceInfoLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EFDocumentReceivedXmlViewLine_BR</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EFDocumentReceivedXmlViewLine_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EFDocumentReceivedXmlViewLine_BR</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EFDocumentReceivedXmlViewLine_BR</Name>
					<Field>EFDocumentReceivedXmlViewLine_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InternalItemId</Name>
					<Field>InternalItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendInvoiceInfoLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendInvoiceInfoLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendInvoiceInfoLine</Name>
					<Field>VendInvoiceInfoLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TableRefIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>