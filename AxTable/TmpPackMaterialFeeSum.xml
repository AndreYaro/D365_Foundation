<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpPackMaterialFeeSum</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpPackMaterialFeeSum extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcPackMaterialFeeSum</Name>
				<Source><![CDATA[
    static RecordSortedList calcPackMaterialFeeSum(
        TransDate   _fromDate,
        TransDate   _toDate,
        container   _packedQuery)
    {
        // This method is used for summing up the weights and fees per PackagingMaterialCode,
        // e.g. for the reports PackagingMaterialFeeCalc and PackagingMaterialFeeARA.
        // PackagingMaterialTrans and PackMaterialTransPurch records are considered.

        TmpPackMaterialFeeSum               tmpPackMaterialFeeSum;
        InventPackagingMaterialCode         inventPackagingMaterialCode;
        InventPackagingMaterialFee          inventPackagingMaterialFee;
        InventPackagingMaterialTrans        inventPackagingMaterialTrans;
        InventPackagingMaterialTransPurch   inventPackagingMaterialTransPurch;
        RecordSortedList                    recordSortedList;
        QueryRun                            queryRun;

        if (!SysQuery::isPackedOk(_packedQuery))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        recordSortedList = new RecordSortedList(tableNum(TmpPackMaterialFeeSum));
        recordSortedList.sortOrder(fieldNum(TmpPackMaterialFeeSum,PackMaterialCode));

        queryRun = new QueryRun(_packedQuery);

        while (queryRun.next())
        {
            inventPackagingMaterialCode = queryRun.get(tableNum(InventPackagingMaterialCode)) as InventPackagingMaterialCode;

            tmpPackMaterialFeeSum.clear();

            tmpPackMaterialFeeSum.PackMaterialCode = inventPackagingMaterialCode.PackMaterialCode;
            tmpPackMaterialFeeSum.Name = inventPackagingMaterialCode.Name;
            tmpPackMaterialFeeSum.Unit = inventPackagingMaterialCode.Unit;

            select firstonly PriceCur, CurrencyCode
                   from inventPackagingMaterialFee
                   index hint PackagingMaterialFeeIdx
                   where inventPackagingMaterialFee.PackMaterialCode == tmpPackMaterialFeeSum.PackMaterialCode &&
                         inventPackagingMaterialFee.FromDate         <= _fromDate        &&
                         inventPackagingMaterialFee.ToDate           >= _toDate;

            tmpPackMaterialFeeSum.PriceCur   = inventPackagingMaterialFee.PriceCur;
            tmpPackMaterialFeeSum.CurrencyCode = inventPackagingMaterialFee.CurrencyCode;

            select sum(PackagingWeight) from inventPackagingMaterialTrans
                   index hint PackagingMaterialTransIdx
                   where inventPackagingMaterialTrans.PackMaterialCode == tmpPackMaterialFeeSum.PackMaterialCode &&
                         inventPackagingMaterialTrans.FeeIsCalculated == NoYes::Yes &&
                         inventPackagingMaterialTrans.InvoiceDate >= _fromDate &&
                         inventPackagingMaterialTrans.InvoiceDate <= _toDate;

            tmpPackMaterialFeeSum.PackagingWeight = inventPackagingMaterialTrans.PackagingWeight;

           select sum(PackagingWeight) from inventPackagingMaterialTransPurch
                   index hint PackMaterialTransPurchIdx
                   where inventPackagingMaterialTransPurch.PackMaterialCode == tmpPackMaterialFeeSum.PackMaterialCode &&
                         inventPackagingMaterialTransPurch.FeeIsCalculated == NoYes::Yes &&
                         inventPackagingMaterialTransPurch.InvoiceDate >= _fromDate &&
                         inventPackagingMaterialTransPurch.InvoiceDate <= _toDate;

            tmpPackMaterialFeeSum.PackagingWeight += inventPackagingMaterialTransPurch.PackagingWeight;

            tmpPackMaterialFeeSum.AmountCur  = tmpPackMaterialFeeSum.PackagingWeight * tmpPackMaterialFeeSum.PriceCur;
            tmpPackMaterialFeeSum.insert();
            recordSortedList.ins(tmpPackMaterialFeeSum);
        }
        return recordSortedList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcPackMaterialWeights</Name>
				<Source><![CDATA[
    static RecordSortedList calcPackMaterialWeights(
        InvoiceId   _invoiceId,
        InvoiceDate _invoiceDate)
    {
        TmpPackMaterialFeeSum           tmpPackMaterialFeeSum;
        InventPackagingMaterialCode     inventPackagingMaterialCode;
        InventPackagingMaterialTrans    inventPackagingMaterialTrans;
        RecordSortedList                recordSortedList;

        recordSortedList = new RecordSortedList(tableNum(TmpPackMaterialFeeSum));
        recordSortedList.sortOrder(fieldNum(TmpPackMaterialFeeSum,PackMaterialCode));

        while select * from inventPackagingMaterialCode
              index PackagingMaterialCodeIdx
        {
            tmpPackMaterialFeeSum.clear();

            tmpPackMaterialFeeSum.PackMaterialCode = inventPackagingMaterialCode.PackMaterialCode;
            tmpPackMaterialFeeSum.Name = inventPackagingMaterialCode.Name;
            tmpPackMaterialFeeSum.Unit = inventPackagingMaterialCode.Unit;

            select sum(PackagingWeight) from inventPackagingMaterialTrans
                   index hint PackagingMaterialTransIdx
                   where inventPackagingMaterialTrans.PackMaterialCode == tmpPackMaterialFeeSum.PackMaterialCode &&
                         inventPackagingMaterialTrans.InvoiceId == _invoiceId &&
                         inventPackagingMaterialTrans.InvoiceDate == _invoiceDate;

            tmpPackMaterialFeeSum.PackagingWeight = inventPackagingMaterialTrans.PackagingWeight;
            tmpPackMaterialFeeSum.insert();
            recordSortedList.ins(tmpPackMaterialFeeSum);
        }
        return recordSortedList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventPackaging</ConfigurationKey>
	<Label>@SYS72996</Label>
	<ClusteredIndex>PackagingMaterialCodeIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex>PackagingMaterialCodeIdx</PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@SYS72995</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PackagingWeight</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventPackagingWeight</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackMaterialCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventPackingMaterialCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PriceCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventPackingMaterialFeePriceCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Unit</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PackagingMaterialCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PackMaterialCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventPackagingMaterialCode</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventPackagingMaterialCode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackMaterialCode</Name>
					<Field>PackMaterialCode</Field>
					<RelatedField>PackMaterialCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PackagingMaterialCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Unit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Unit</Name>
					<Field>Unit</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>