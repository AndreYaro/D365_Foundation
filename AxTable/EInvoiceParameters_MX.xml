<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceParameters_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EInvoiceParameters_MX extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// throew error message when deleting the record.
    /// </summary>
    public void  delete()
    {
        throw error("@SYS23721");
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// flush the EInvoiceParameters_MX when updating the record.
    /// </summary>
    public void update()
    {
        super();

        flush EInvoiceParameters_MX;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified field is valid.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field ID of the field to validate.
    /// </param>
    /// <returns>
    /// True if the field is valid; otherwise, false.
    /// </returns>
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(EInvoiceParameters_MX, CertificateSubject):
                if (this.EnabledCFD && !this.CertificateSubject)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldPName(EInvoiceParameters_MX, CertificateSubject)));
                }
                break;

            case fieldNum(EInvoiceParameters_MX, cfdVersion):
                if (this.EnabledCFD && !this.CFDVersion)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldPName(EInvoiceParameters_MX, cfdVersion)));
                }
                if (this.CFDVersion == Einvoiceversion_MX::V2)
                {
                    ret = checkFailed("@SYS4001806");
                }
                break;

            case fieldNum(EInvoiceParameters_MX, cfdXsdFile):
                if (this.EnabledCFD && !this.cfdXsdFile)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldPName(EInvoiceParameters_MX, cfdXsdFile)));
                }
                break;

            case fieldNum(EInvoiceParameters_MX, EmailId):
                if (this.EnabledCFD && !this.EmailId)
                {
                    ret = checkFailed(strFmt("@SYS26332", fieldPName(EInvoiceParameters_MX, EmailId)));
                }
                break;

            default:
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMandatoryFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the mandatory fields are valid and ready to written to the database.
    /// </summary>
    /// <returns>
    /// true if the fields are filled otherwise, false.
    /// </returns>
    public boolean validateMandatoryFields()
    {
        boolean ret = true;

        if (this.EnabledCFD)
        {
            if (!this.CertificateSubject)
            {
                ret = checkFailed(strFmt("@SYS26332", fieldPName(EInvoiceParameters_MX, CertificateSubject)));
            }

            if (!this.cfdVersion)
            {
                ret = checkFailed(strFmt("@SYS26332", fieldPName(EInvoiceParameters_MX, cfdVersion)));
            }

            if (!this.cfdXsdFile)
            {
                ret = checkFailed(strFmt("@SYS26332", fieldPName(EInvoiceParameters_MX, cfdXsdFile)));
            }

            if (!this.EmailId)
            {
                ret = checkFailed(strFmt("@SYS26332", fieldPName(EInvoiceParameters_MX, EmailId)));
            }

            if (!this.cfdDigestAlgorithm)
            {
                ret = checkFailed(strFmt("@SYS26332", fieldPName(EInvoiceParameters_MX, cfdDigestAlgorithm)));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the mandatory fields current record before it is written to the database.
    /// </summary>
    /// <returns>
    ///    true if the fields are filled otherwise, false
    /// </returns>
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ret = this.validateMandatoryFields();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the current record in the <c>EInvoiceParameters_MX</c> table exists.
    /// </summary>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist()
    {
        return (select firstonly RecId from eInvoiceParameters_MX).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>EInvoiceParameters_MX</c> table.
    /// </summary>
    /// <param name="_forUpdate">
    ///   A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EInvoiceParameters_MX</c> table; otherwise, an empty record.
    /// </returns>
    public static EInvoiceParameters_MX find(boolean _forUpdate = false)
    {
        EInvoiceParameters_MX    eInvoiceParam;

        if (_forUpdate)
        {
            eInvoiceParam.selectForUpdate(_forUpdate);
        }

        select firstonly eInvoiceParam
            where eInvoiceParam.Key == 0;

        if (!eInvoiceParam && !eInvoiceParam.isTmp())
        {
            Company::createParameter(eInvoiceParam);
        }

        return eInvoiceParam;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isElectronicInvoiceEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the electronic invoice is set.
    /// </summary>
    /// <returns>
    /// <c>NoYes::Yes</c> if the electronic invoice is set; otherwise, <c>NoYes::No</c>.
    /// </returns>
    public static NoYes isElectronicInvoiceEnabled()
    {
        #ISOCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
        {
            return EInvoiceParameters_MX::find().EnabledCFD;
        }
        else
        {
            return NoYes::No;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>schemaFileExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the CFD schema file exists in the server file system.
    /// </summary>
    /// <returns>
    /// true if the CFD schema file exists in the server file system; otherwise, false.
    /// </returns>
    public static boolean schemaFileExists()
    {
        #file
        str fileName = EInvoiceParameters_MX::find().CFDXsdFile;
        boolean returnValue = false;

        new FileIOPermission(fileName, #io_read).assert();
        returnValue = WinAPIServer::fileExists(fileName);
        CodeAccessPermission::revertAssert();

        return returnValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>MX</CountryRegionCodes>
	<DeveloperDocumentation>@SYS341165</DeveloperDocumentation>
	<Label>@SYS341124</Label>
	<TableGroup>Parameter</TableGroup>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>Key</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>EInvoice</Modules>
	<PrimaryIndex>Key</PrimaryIndex>
	<ReplacementKey>Key</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EnabledCFD</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CFDVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CFDXsdFile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmailId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CFD</Name>
			<Label>@SYS341961</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CFDVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CFDXsdFile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CertificateSubject</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CFDDigestAlgorithm</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EInvoiceEnabled</Name>
			<Label>@SYS341138</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EnabledCFD</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Email</Name>
			<Label>@SYS107616</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EmailId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SendReportFile</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Key</Name>
			<Label>@SYS5468</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CertificateSubject</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DigitalCertificateSubject</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CFDDigestAlgorithm</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CFDDigestAlgorithm_MX</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CFDVersion</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>EInvoiceVersion_MX</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CFDXsdFile</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FilenameOpen</ExtendedDataType>
			<Label>@SYS341117</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EmailId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SysEmailId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnabledCFD</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS341166</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SendReportFile</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SendReportFile_MX</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Key</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DigitalCertificateTmp_MXIdx1</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CertificateSubject</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SysEmailTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>SysEmailTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EmailId</Name>
					<SourceEDT>SysEmailId</SourceEDT>
					<Field>EmailId</Field>
					<RelatedField>EmailId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>emailIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>