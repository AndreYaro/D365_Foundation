<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailUsers</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailUsers extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>GetChannelId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the channel record for the default store.
    /// </summary>
    /// <returns>
    /// The store record ID number.
    /// </returns>
    public display str GetChannelId()
    {
        RetailUsers             userTable;
        RetailStoreTable        storeTable;

        select firstOnly EPDefaultStore from userTable where userTable.User == curUserId();

        select firstOnly RecId from storeTable where storeTable.StoreNumber == userTable.EPDefaultStore;

        return int642str(storeTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the primary store and inserts a record in <c>RetailUsers</c> table.
    /// </summary>
    public void insert()
    {
        RetailUserStoreTable rboUserStoreTable;
        ;

        select User, PrimaryStore, StoreNumber from rboUserStoreTable
                where rboUserStoreTable.User == this.User
                   && rboUserStoreTable.PrimaryStore == NoYes::Yes;

        this.PrimaryStore = rboUserStoreTable.StoreNumber;
        super();

        this.updateStoreList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStoreList</Name>
				<Source><![CDATA[
        private void updateStoreList()
    {
        RetailUserStoreTable rboUserStoreTable, rboUserStoreTable_loc;
        ;

        select User from rboUserStoreTable_loc
            where rboUserStoreTable_loc.User == this.User;

        if (this.epDefaultStore && !RetailUserStoreTable::exist(this.epDefaultStore, this.User))
        {
            ttsbegin;
            rboUserStoreTable.clear();
            rboUserStoreTable.initValue();
            rboUserStoreTable.User = this.User;
            rboUserStoreTable.StoreNumber = this.epDefaultStore;
            rboUserStoreTable.insert();
            ttscommit;
        }
        if (this.PrimaryStore && !RetailUserStoreTable::exist(this.PrimaryStore, this.User))
        {
            ttsbegin;
            rboUserStoreTable.clear();
            rboUserStoreTable.initValue();
            rboUserStoreTable.User = this.User;
            rboUserStoreTable.StoreNumber = this.PrimaryStore;
            rboUserStoreTable.insert();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>epDefaultStore</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the default store in the EP.
    /// </summary>
    /// <param name="_user">
    /// The value of the current user.
    /// </param>
    /// <returns>
    /// The default store in EP.
    /// </returns>
    public static RetailStoreId epDefaultStore(UserId    _user = curUserId())
    {
        RetailUsers rboUsers;
        ;

        select firstonly User, epDefaultStore from rboUsers
           where rboUsers.User == _user;

        return rboUsers.epDefaultStore;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record occurs in the <c>RetailPRCountingTable</c> table.
    /// </summary>
    /// <param name="_user">
    /// The ID number of the Retail user.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false
    /// </returns>
    public static boolean exist(RetailUserId  _user)
    {
        ;

        return _user && (select firstonly RecId from retailUsers
                            where retailUsers.User == _user).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailUsers</c> table.
    /// </summary>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailUsers</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailUsers find(boolean _forUpdate = false)
    {
        RetailUsers rboUsers;
        ;

        rboUsers.selectForUpdate(_forUpdate);

        select firstonly rboUsers
            where rboUsers.User == curUserId();

        return rboUsers;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260416</DeveloperDocumentation>
	<Label>@RET5108</Label>
	<TitleField1>User</TitleField1>
	<TitleField2>EPDefaultStore</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>UserIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>CommerceEmployees</Modules>
	<PrimaryIndex>UserIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailUserStoreTable</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation>
      </Relation>
			<Table>RetailUserStoreTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>User</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryStore</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EPDefaultStore</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DefaultStore</Name>
			<Label>@RET5109</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EPDefaultStore</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@RET3040</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>User</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryStore</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EPDefaultStore</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStoreId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PrimaryStore</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStoreId</ExtendedDataType>
			<Label>@RET5106</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>User</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>End User Identifiable Information (EUII)</AssetClassification>
			<ExtendedDataType>UserId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>UserIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>User</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailStoreTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailStoreTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EPDefaultStore</Name>
					<SourceEDT>RetailStoreId</SourceEDT>
					<Field>EPDefaultStore</Field>
					<RelatedField>StoreNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StoreNumIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailStoreTable1</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailStoreTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RetailStoreTable1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PrimaryStore</Name>
					<SourceEDT>RetailStoreId</SourceEDT>
					<Field>PrimaryStore</Field>
					<RelatedField>StoreNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StoreNumIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>