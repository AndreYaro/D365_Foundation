<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CommReportJour_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CommReportJour_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>agencyAgreement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays agreement agency type.
    /// </summary>
    /// <returns>
    /// Agreement agency type.
    /// </returns>
    [SysClientCacheDataMethodAttribute, Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display AgencyAgreement_RU agencyAgreement()
    {
        return AgreementHeaderExt_RU::findByAgreementId(this.AgreementId).AgencyAgreement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>agreementDocumentTitle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays agreement document title.
    /// </summary>
    /// <returns>
    /// Agreement document title.
    /// </returns>
    [SysClientCacheDataMethodAttribute, Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display AgreementDocumentTitle agreementDocumentTitle()
    {
        return AgreementHeader::find(
        AgreementHeaderExt_RU::findByAgreementId(this.AgreementId).AgreementHeader).DocumentTitle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>agreementHeaderExt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds <c>AgreementHeaderExt_RU</c> by current record agreement Id.
    /// </summary>
    /// <returns>
    /// <c>AgreementHeaderExt_RU</c> instance appropriate to current agreement.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public AgreementHeaderExt_RU agreementHeaderExt()
    {
        return AgreementHeaderExt_RU::findByAgreementId(this.AgreementId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>approve</Name>
				<Source><![CDATA[
    /// <summary>
    /// Approves or rejects all report lines.
    /// </summary>
    /// <param name="_approve">
    /// NoYes::Yes if all lines should be approved.
    /// NoYes::No if all lines should be rejected.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void approve(NoYes _approve = NoYes::Yes)
    {
        CommReportTransItem_RU          reportTransItem;
        CommReportTransPrepayment_RU    reportTransPrepay;

        ttsbegin;

        update_recordset reportTransItem
        setting Approved = _approve
        where reportTransItem.ReportId == this.ReportId;

        update_recordset reportTransPrepay
        setting Approved = _approve
        where reportTransPrepay.ReportId == this.ReportId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsApproved</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if any approved\disapproved line exists in report.
    /// </summary>
    /// <param name="_approvedYesNo">
    /// NoYes::Yes if any approved line should be found
    /// NoYes::No if any disapproved line should be found
    /// </param>
    /// <returns>
    /// True if any line with desired approval status was found; otherwise false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean existsApproved(NoYes _approvedYesNo = NoYes::Yes)
    {
        return (select firstonly RecId from commReportTransItem_RU
                where commReportTransItem_RU.ReportId == this.ReportId
                   && commReportTransItem_RU.Approved == _approvedYesNo).RecId != 0 ||
           (select firstonly RecId from commReportTransPrepayment_RU
                where commReportTransPrepayment_RU.ReportId == this.ReportId
                   && commReportTransPrepayment_RU.Approved == _approvedYesNo).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createJournals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create report for principal journal.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static server void createJournals()
    {
        Query                   q, qInt;
        QueryRun                qr, qrInt;
        QueryBuildDataSource    qbds;
        QueryBuildDataSource    dsInvoiceTrans;
        QueryBuildDataSource    dsContractTable;
        AgreementHeaderExt_RU   agreementHeaderExt;
        AgreementHeader         agreementHeader;
        SalesAgreementHeader    salesAgreementHeader;
        PurchAgreementHeader    purchAgreementHeader;
        CommReportJour_RU       jour;
        NumberSeq               numberSeq;
        RecId                   dimAttrRecId = AgreementHeaderExt_RU::getAgreementDimensionAttribute();

        #localmacro.DateRangeValue
        '((\%1.StartDate <= \%2.InvoiceDate) && (\%1.EndDate >= \%2.InvoiceDate))'
        #endmacro

        void createHeader()
        {
            agreementHeader = AgreementHeader::find(agreementHeaderExt.AgreementHeader);

            switch (agreementHeader.getModuleType())
            {
                case  ModuleSalesPurch::Sales:
                    salesAgreementHeader = agreementHeader as SalesAgreementHeader;
                    jour.PartnerCode = salesAgreementHeader.CustAccount;
                    jour.PartnerType = ModuleCustVend::Cust;
                    break;
                case ModuleSalesPurch::Purch:
                    purchAgreementHeader = agreementHeader as PurchAgreementHeader;
                    jour.PartnerCode = purchAgreementHeader.VendAccount;
                    jour.PartnerType = ModuleCustVend::Vend;
                    break;
            }

            jour.ReportId    = numberSeq.num();
            jour.AgreementId = agreementHeaderExt.AgreementId;
            jour.EndDate     = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
            jour.insert();
        }
        ;

        ttsbegin;

        numberSeq = NumberSeq::newGetNum( NumberSeqReference::findReference(extendedTypeNum(CommReportId_RU)));

        q = new Query();
        dsContractTable = q.addDataSource(tableNum(AgreementHeaderExt_RU));

        findOrCreateRange_W(dsContractTable, fieldNum(AgreementHeaderExt_RU, AgencyAgreement), queryValue(AgencyAgreement_RU::SaleCommission));

        qbds = dsContractTable.addDataSource(tableNum(PurchAgreementHeader));
        qbds.addLink(fieldNum(AgreementHeaderExt_RU, AgreementHeader), fieldNum(PurchAgreementHeader, RecId));
        qbds.joinMode(JoinMode::ExistsJoin);

        qbds = dsContractTable.addDataSource(tableNum(InventOwner_RU));
        qbds.addLink(fieldNum(AgreementHeaderExt_RU, RecId), fieldNum(InventOwner_RU, AgreementHeaderExt));
        qbds.joinMode(JoinMode::ExistsJoin);

        findOrCreateRange_W(qbds, fieldNum(InventOwner_RU, AccountType), queryValue(InventOwnerAccountType_RU::Vend));

        qbds = qbds.addDataSource(tableNum(InventDim));
        qbds.addLink(fieldNum(InventOwner_RU, InventOwnerId), fieldNum(InventDim, InventOwnerId_RU));
        qbds.joinMode(JoinMode::ExistsJoin);

        qbds = qbds.addDataSource(tableNum(InventTrans));
        qbds.addLink(fieldNum(InventDim, InventDimId), fieldNum(InventTrans, InventDimId));
        qbds.joinMode(JoinMode::ExistsJoin);

        qbds = qbds.addDataSource(tableNum(InventTransOrigin));
        qbds.addLink(fieldNum(InventTrans, InventTransOrigin), fieldNum(InventTransOrigin, RecId));
        qbds.joinMode(JoinMode::ExistsJoin);

        dsInvoiceTrans = qbds.addDataSource(tableNum(CustInvoiceTrans));
        dsInvoiceTrans.addLink(fieldNum(InventTransOrigin, InventTransId), fieldNum(CustInvoiceTrans, InventTransId));
        dsInvoiceTrans.joinMode(JoinMode::ExistsJoin);

        qbds = dsInvoiceTrans.addDataSource(tableNum(CommReportTransItem_RU));
        qbds.addLink(fieldNum(CustInvoiceTrans, RecId), fieldNum(CommReportTransItem_RU, RefInvoiceTrans));
        qbds.joinMode(JoinMode::NoExistsJoin);

        qbds = dsInvoiceTrans.addDataSource(tableNum(CommReportJour_RU));
        qbds.addLink(fieldNum(AgreementHeaderExt_RU, AgreementId), fieldNum(CommReportJour_RU, AgreementId), dsContractTable.name());
        qbds.joinMode(JoinMode::NoExistsJoin);

        findOrCreateRange_W(qbds, fieldNum(CommReportJour_RU, Closed), queryValue(NoYes::No));
        findOrCreateRange_W(qbds, fieldNum(CommReportJour_RU, TableId), strFmt(#DateRangeValue, qbds.name(), dsInvoiceTrans.name()));

        qr = new QueryRun(q);

        while (qr.next())
        {
            agreementHeaderExt = qr.get(tableNum(AgreementHeaderExt_RU));
            createHeader();
        }

        q = new Query();
        dsContractTable = q.addDataSource(tableNum(AgreementHeaderExt_RU));

        findOrCreateRange_W(dsContractTable, fieldNum(AgreementHeaderExt_RU, AgencyAgreement), queryValue(AgencyAgreement_RU::PurchaseCommission));

        qbds = dsContractTable.addDataSource(tableNum(SalesAgreementHeader));
        qbds.addLink(fieldNum(AgreementHeaderExt_RU, AgreementHeader), fieldNum(SalesAgreementHeader, RecId));
        qbds.joinMode(JoinMode::ExistsJoin);

        qr = new QueryRun(q);

        while (qr.next())
        {
            agreementHeaderExt = qr.get(tableNum(AgreementHeaderExt_RU));

            qInt = new Query();
            qbds = qInt.addDataSource(tableNum(CustInvoiceJour));
            qbds.firstOnly(true);

            SysQuery::addDimensionAttributeRange(qInt,
            qbds.name(),
            fieldStr(CustInvoiceJour, DefaultDimension),
            DimensionComponent::DimensionAttribute,
            agreementHeaderExt.AgreementId,
            DimensionAttribute::find(dimAttrRecId).Name);

            dsInvoiceTrans = qbds.addDataSource(tableNum(CustInvoiceTrans));
            dsInvoiceTrans.name(tableStr(CustInvoiceTrans));
            dsInvoiceTrans.addLink(fieldNum(CustInvoiceJour, SalesId),              fieldNum(CustInvoiceTrans, SalesId));
            dsInvoiceTrans.addLink(fieldNum(CustInvoiceJour, InvoiceId),            fieldNum(CustInvoiceTrans, InvoiceId));
            dsInvoiceTrans.addLink(fieldNum(CustInvoiceJour, InvoiceDate),          fieldNum(CustInvoiceTrans, InvoiceDate));
            dsInvoiceTrans.addLink(fieldNum(CustInvoiceJour, NumberSequenceGroup),  fieldNum(CustInvoiceTrans, NumberSequenceGroup));
            dsInvoiceTrans.joinMode(JoinMode::ExistsJoin);

            qbds = dsInvoiceTrans.addDataSource(tableNum(CommReportTransItem_RU));
            qbds.addLink(fieldNum(CustInvoiceTrans, RecId), fieldNum(CommReportTransItem_RU, RefInvoiceTrans));
            qbds.joinMode(JoinMode::NoExistsJoin);

            qbds = dsInvoiceTrans.addDataSource(tableNum(CommReportJour_RU));
            qbds.joinMode(JoinMode::NoExistsJoin);

            findOrCreateRange_W(qbds, fieldNum(CommReportJour_RU, AgreementId), queryValue(agreementHeaderExt.AgreementId));
            findOrCreateRange_W(qbds, fieldNum(CommReportJour_RU, Closed), queryValue(NoYes::No));
            findOrCreateRange_W(qbds, fieldNum(CommReportJour_RU, TableId), strFmt(#DateRangeValue, qbds.name(), dsInvoiceTrans.name()));

            qrInt = new QueryRun(qInt);
            if (qrInt.next())
            {
                createHeader();
            }
        }


        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find <c>CommReportJour_RU</c> by report Id.
    /// </summary>
    /// <param name="_reportId">
    /// <c>CommReportJour_RU</c> report Id.
    /// </param>
    /// <param name="_forUpdate">
    /// True if record will be updated; otherwise false.
    /// </param>
    /// <returns>
    /// <c>CommReportJour_RU</c> record with desired report Id.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static CommReportJour_RU find(CommReportId_RU  _reportId,
                                  boolean          _forUpdate = false)
    {
        CommReportJour_RU commReportJour;

        if (_reportId)
        {
            commReportJour.selectForUpdate(_forUpdate);

            select firstonly commReportJour
            where commReportJour.ReportId == _reportId;
        }

        return commReportJour;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SalesPurchBook:CommReportJour_RU_DevDoc</DeveloperDocumentation>
	<Label>@SalesPurchBook:ReportForPrincipal</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>ReportId</TitleField1>
	<TitleField2>AgreementId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ReportIdIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>ReportIdIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DeleteAction1</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CommReportTransItem_RU</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>DeleteAction2</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CommReportTransPrepayment_RU</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReportId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Agreement</Name>
			<Label>@GLS105065</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>agencyAgreement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartnerType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartnerCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AgreementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>agreementDocumentTitle</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReportId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Misc</Name>
			<Label>@SYS80069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Closed</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@GLS105298</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AgreementId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>AgreementId_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Closed</Name>
			<HelpText>@SalesPurchBook:ReportForPrincipalClosed</HelpText>
			<Label>@GLS101810</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EndDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>ToDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PartnerCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>CustVendAC</ExtendedDataType>
			<Label>@GLS104645</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PartnerType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@GLS104635</Label>
			<EnumType>ModuleCustVend</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReportId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>CommReportId_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>FromDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReportIdIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ReportId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>AgreementHeaderExt_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AgreementHeaderExt_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AgreementId</Name>
					<Field>AgreementId</Field>
					<RelatedField>AgreementId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PartnerType</Name>
					<Field>PartnerType</Field>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartnerCode</Name>
					<Field>PartnerCode</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>PartnerType</Name>
					<Field>PartnerType</Field>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartnerCode</Name>
					<Field>PartnerCode</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>