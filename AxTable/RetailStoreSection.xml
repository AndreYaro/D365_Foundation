<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailStoreSection</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailStoreSection extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the caption for the <c>RetailStoreSection</c> table, based on store number, name, and
    /// section ID.
    /// </summary>
    /// <returns>
    /// The caption for the <c>RetailStoreSection</c> table.
    /// </returns>
    public str caption()
    {
        RetailStoreTable   storeTable;
        str ret;

        ret = super();

        storeTable = RetailStoreTable::find(this.storeId);

        if (storeTable)
            ret = storeTable.StoreNumber + " " + storeTable.Name() + " " + this.sectionId;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>costAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the total cost amount for the current store ID, section ID, current date, and time.
    /// </summary>
    /// <returns>
    /// The total cost amount for the current store ID, section ID, current date, and time.
    /// </returns>
    display CostAmount costAmount()
    {
        ;
        return RetailTransactionSalesTrans::totalCostAmount(this.storeId,this.sectionId,DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),DateTimeUtil::getTimeNow(DateTimeUtil::getUserPreferredTimeZone()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>discountAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the total discount amount for the current store ID, Section ID, current date, and time.
    /// </summary>
    /// <returns>
    /// The total discount amount for the current store ID, section ID, current date, and time.
    /// </returns>
    display DiscAmount discountAmount()
    {
        ;
        return RetailTransactionSalesTrans::totalDiscountAmount(this.storeId,this.sectionId,DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),DateTimeUtil::getTimeNow(DateTimeUtil::getUserPreferredTimeZone()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtySold</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the total quantity sold per section for the current store ID, section ID, current date,
    /// and time.
    /// </summary>
    /// <returns>
    /// The total quantity sold per section for the current store ID, section ID, current date, and time.
    /// </returns>
    display RetailSoldQty qtySold()
    {
        return RetailTransactionSalesTrans::totalQtySoldPrSection(this.storeId,this.sectionId,DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </summary>
    public void renamePrimaryKey()
    {
        ;
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the total net amount for the current store ID, section ID, current date, and time.
    /// </summary>
    /// <returns>
    /// The total net amount for the current store ID, section ID, current date, and time.
    /// </returns>
    display RetailNetAmount salesAmount()
    {
        ;
        return RetailTransactionSalesTrans::totalNetAmount(this.storeId,this.sectionId,DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),DateTimeUtil::getTimeNow(DateTimeUtil::getUserPreferredTimeZone()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>storeName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the store name of the current store Id.
    /// </summary>
    /// <returns>
    /// The store name of the current store Id.
    /// </returns>
    display name storeName()
    {
        return RetailStoreTable::find(this.storeId).Name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the given store and section already occurs in the <c>RetailStoreSection</c> table.
    /// </summary>
    /// <param name="_storeId">
    /// The current value of store ID.
    /// </param>
    /// <param name="_sectionId">
    /// The current value of section ID.
    /// </param>
    /// <returns>
    /// The store and section ID.
    /// </returns>
    public static boolean exist(RetailStoreId _storeId,
                                RetailSectionId _sectionId)
    {
        return _storeId && _sectionId && (select firstonly recId from RetailStoreSection
                                          index hint storeSectionIdx
                                          where RetailStoreSection.storeId == _storeId
                                          &&    RetailStoreSection.sectionId == _sectionId).recId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailStoreSection</c> table.
    /// </summary>
    /// <param name="_storeId">
    /// The current value of store ID.
    /// </param>
    /// <param name="_sectionId">
    /// The current value of section ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailStoreSection</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailStoreSection find(RetailStoreId _storeId, RetailSectionId _sectionId, boolean _forUpdate = false)
    {
        RetailStoreSection storeSection;

        if (_storeId && _sectionId)
        {
            storeSection.selectForUpdate(_forUpdate);

            select firstonly storeSection
                index hint storeSectionIdx
                where storeSection.storeId == _storeId
                   && storeSection.sectionId == _sectionId;
        }

        return storeSection;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260335</DeveloperDocumentation>
	<FormRef>RetailStoreSection</FormRef>
	<Label>@RET3223</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>storeId</TitleField1>
	<TitleField2>sectionId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>storeSectionIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>InventoryAndAdvancedWarehouse</Modules>
	<PrimaryIndex>storeSectionIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailInventItemSectionLocation</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailInventItemSectionLocation</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailStoreShelf</Name>
			<Relation></Relation>
			<Table>RetailStoreShelf</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>storeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>sectionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Section</Name>
			<Label>@RET3119</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>sectionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Size</Name>
			<Label>@RET3224</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>size</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>sizeUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Stock</Name>
			<Label>@RET3225</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>lastCheckedStock</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Store</Name>
			<Label>@RET3088</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>storeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>storeName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Totals</Name>
			<Label>@RET3226</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>qtySold</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>salesAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>discountAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>lastCheckedStock</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailLastCheckedStock</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>sectionId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSectionId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>size</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSectionSize</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>sizeUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailSectionSizeUnit</ExtendedDataType>
			<EnumType>RetailSizeUnit</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>storeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailStoreId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>storeSectionIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>storeId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>sectionId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailStoreTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailStoreTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>storeId</Name>
					<SourceEDT>RetailStoreId</SourceEDT>
					<Field>storeId</Field>
					<RelatedField>StoreNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StoreNumIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>