<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchTableVersion</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchTableVersion extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>previousVersionValidTo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the valid to date and time of the previous version based on the current version.
    /// </summary>
    /// <returns>
    /// The calculated valid to date.
    /// </returns>
    /// <remarks>
    /// The calculation does not consider whether a previous version actually exists, but calculates the 
    /// valid to date and time based on the version information from the current record.
    /// </remarks>
    public ValidToDateTime previousVersionValidTo()
    {
        return DateTimeUtil::addSeconds(this.VersionDateTime, -1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        super();

        VersioningPurchaseOrder::doesHistoryExistCacheRemove(this.PurchId, this.PurchIdDataAreaId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();

        VersioningPurchaseOrder::doesHistoryExistCacheInsert(this.PurchId, this.PurchIdDataAreaId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>PurchTableVersion</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    A record identifier of the record to find.
    /// </param>
    /// <returns>
    ///    A record in the <c>PurchTableVersion</c> table; otherwise, an empty record.
    /// </returns>
    public static PurchTableVersion find(RecId _recId)
    {
        PurchTableVersion purchTableVersion;

        select firstonly purchTableVersion
            where purchTableVersion.RecId == _recId;

        return purchTableVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLatest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the most recent version of a purchase order.
    /// </summary>
    /// <param name="_purchId">
    /// The purchase order ID for which to find the latest version.
    /// </param>
    /// <param name="_purchIdDateAreaId">
    /// The <c>DataAreaId</c> of the purchase order.
    /// </param>
    /// <param name="_update">
    /// A <c>Boolean</c> value that indicates whether to select for update; optional.
    /// </param>
    /// <param name="_areProformaVersionsAllowed">
    /// A <c>Boolean</c> value that indicates whether to also retrieve proforma versions; optional. Defaults to false.
    /// </param>
    /// <returns>
    /// The most recent version of the purchase order.
    /// </returns>
    static PurchTableVersion findLatest(PurchId _purchId,
    									 DataAreaId _purchIdDateAreaId,
    									 boolean _update = false,
    									 boolean _areProformaVersionsAllowed = false)
    {
        PurchTableVersion purchTableVersion;

        if (_purchId)
        {
            purchTableVersion.selectForUpdate(_update);

            select firstonly purchTableVersion
                order by purchTableVersion.VersionDateTime desc
                where purchTableVersion.PurchId           == _purchId
                   && purchTableVersion.PurchIdDataAreaId == _purchIdDateAreaId
                   && (_areProformaVersionsAllowed || !purchTableVersion.Proforma);
        }

        return purchTableVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findConfirmationRequestJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the purchase order confirmation request journal for the current purchase order version.
    /// </summary>
    /// <returns><c>PurchConfirmationRequestJour</c> record for the current purchase order version.</returns>
    public PurchConfirmationRequestJour findConfirmationRequestJour()
    {
        PurchConfirmationRequestJour _purchConfirmationRequestJour;

        select firstonly _purchConfirmationRequestJour
            where _purchConfirmationRequestJour.PurchTableVersion == this.RecId;

        return _purchConfirmationRequestJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLatestResponseVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the latest purchase order response version for the currrent purchase order version.
    /// </summary>
    /// <param name = "_forUpdate">Determines if the record should be selected for update.</param>
    /// <returns><c>PurchaseOrderResponseVersion</c> record for the current purchase order version.</returns>
    public PurchaseOrderResponseVersion findLatestResponseVersion(boolean _forUpdate = false)
    {
        PurchaseOrderResponseVersion responseVersion;

        responseVersion.selectForUpdate(_forUpdate);

        select firstonly responseVersion order by VersionDateTime desc
            where responseVersion.PurchTableVersion == this.RecId;

        return responseVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFirstResponseVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the first purchase order response version for the currrent purchase order version.
    /// </summary>
    /// <param name = "_forUpdate">Determines if the record should be selected for update.</param>
    /// <returns><c>PurchaseOrderResponseVersion</c> record for the current purchase order version.</returns>
    public PurchaseOrderResponseVersion findFirstResponseVersion(boolean _forUpdate = false)
    {
        PurchaseOrderResponseVersion responseVersion;

        responseVersion.selectForUpdate(_forUpdate);

        select firstonly responseVersion order by VersionDateTime
            where responseVersion.PurchTableVersion == this.RecId;

        return responseVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchTable</Name>
				<Source><![CDATA[
    public PurchTable purchTable(boolean _forUpdate = false)
    {
        PurchTable purchTable;

        purchTable.selectForUpdate(_forUpdate);

        select firstonly purchTable order by RecId desc
            where purchTable.DataAreaId == this.PurchIdDataAreaId
               && purchTable.PurchId    == this.PurchId;

        return purchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePurchaseOrderIsNotSubsequentlyConfirmed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the current PO version or a more recent PO version has not been confirmed.
    /// </summary>
    /// <returns>False if the current PO version or a more recent PO version has been confirmed, otherwise true.</returns>
    public boolean validatePurchaseOrderIsNotSubsequentlyConfirmed()
    {
        PurchTableVersion  anotherPurchTableVersion;
        VendPurchOrderJour confirmationJournal;
        boolean            ok = true;

        select firstonly RecId from anotherPurchTableVersion
                order by anotherPurchTableVersion.VersionDateTime desc
                where anotherPurchTableVersion.PurchId           == this.PurchId
                   && anotherPurchTableVersion.PurchIdDataAreaId == this.PurchIdDataAreaId
                   && anotherPurchTableVersion.VersionDateTime   >= this.VersionDateTime
                exists join confirmationJournal
                    where confirmationJournal.PurchTableVersion == anotherPurchTableVersion.RecId;

        if (anotherPurchTableVersion)
        {
            ok = checkFailed("@SCM:PurchaseOrderResponseErrorOrderAlreadyConfirmed");
        }

        return ok;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS325275</DeveloperDocumentation>
	<Label>@SYS184149</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>PurchId</TitleField1>
	<TitleField2>VersionDateTime</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>PurchVersionIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VersionDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchIdDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VersionDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsArchived</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VersioningIsVersionArchived</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Proforma</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS71007</Label>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchIdBase</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchIdDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>VersionDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VersioningTimeStamp</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PurchVersionIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PurchIdDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VersionDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>VersioningVersionMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>VersionDateTime</MapField>
					<MapFieldTo>VersionDateTime</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchaseOrder</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PurchTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchTable_PurchTableVersion</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchIdDataAreaId</Name>
					<Field>PurchIdDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchId</Name>
					<Field>PurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PurchIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>