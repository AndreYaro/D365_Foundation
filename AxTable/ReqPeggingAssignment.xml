<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqPeggingAssignment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqPeggingAssignment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>assignmentOrigin</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the origin of the current <c>ReqPeggingAssignment</c> record based on its source document line.
    /// </summary>
    /// <returns>
    ///    A <c>Common</c> table record; otherwise an empty buffer.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Common assignmentOrigin()
    {
        SourceDocumentLine  sourceDocumentLine;
        Common              common;

        if (this.SourceDocumentLine)
        {
            sourceDocumentLine = SourceDocumentLine::find(this.SourceDocumentLine);

            if (sourceDocumentLine)
            {
                switch (sourceDocumentLine.SourceRelationType)
                {
                    case tableNum(SalesLine):
                        // salesLine is not in the SourceDocumentLineImplementation map
                        common = SalesLine::findSourceDocumentLine(sourceDocumentLine.RecId);
                        break;
                    default:
                        common = sourceDocumentLine.getSourceDocumentLineImplementation();
                }
            }
        }

        return common;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existSourceDocumentLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a specified record in the <c>ReqPeggingAssignment</c> table exists.
    /// </summary>
    /// <param name="_sourceDocumentLineRefRecId">
    /// The record ID of the related source document line to find.
    /// </param>
    /// <param name="_reqPeggingAssignmentType">
    /// A <c>ReqPeggingAssignmentType</c> enumeration value.
    /// </param>
    /// <returns>
    /// A record in the <c>ReqPeggingAssignment</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean existSourceDocumentLine(
        SourceDocumentLineRefRecId _sourceDocumentLineRefRecId,
        ReqPeggingAssignmentType   _reqPeggingAssignmentType)
    {
        ReqPeggingAssignment  reqPeggingAssignment;

        if (_sourceDocumentLineRefRecId)
        {
            select firstonly RecId from reqPeggingAssignment
                where reqPeggingAssignment.SourceDocumentLine       == _sourceDocumentLineRefRecId
                   && reqPeggingAssignment.ReqPeggingAssignmentType == _reqPeggingAssignmentType;
        }

        return reqPeggingAssignment.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>ReqPeggingAssignment</c> table.
    /// </summary>
    /// <param name="_refRecId">
    /// The record ID of the requirement pegging assignment table to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>ReqPeggingAssignment</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ReqPeggingAssignment find(
        RefRecId _refRecId,
        boolean  _forUpdate = false)
    {
        ReqPeggingAssignment  reqPeggingAssignment;

        if (_refRecId)
        {
            reqPeggingAssignment.selectForUpdate(_forUpdate);

            select firstonly reqPeggingAssignment
                where reqPeggingAssignment.RecId == _refRecId;
        }

        return reqPeggingAssignment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateRequirement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record into the <c>ReqPeggingAssignment</c> table.
    /// </summary>
    /// <param name="_sourceDocumentLineRefRecId">
    /// A record ID in the <c>SourceDocumentLine</c> table.
    /// </param>
    /// <param name="_quantity">
    /// A quantity.
    /// </param>
    /// <param name="_unitOfMeasureRecId">
    /// A record ID of the <c>UnitOfMeasure</c> table.
    /// </param>
    /// <param name="_deleteIfZero">
    /// Removes the record if the quantity is zero.
    /// </param>
    /// <returns>
    /// A <c>ReqPeggingAssignment</c> record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ReqPeggingAssignment findOrCreateRequirement(
        SourceDocumentLineRefRecId _sourceDocumentLineRefRecId,
        InventQty                  _quantity,
        UnitOfMeasureRecId         _unitOfMeasureRecId,
        boolean                    _deleteIfZero = true)
    {
        ReqPeggingAssignment    reqPeggingAssignment;

        ttsbegin;
        reqPeggingAssignment = ReqPeggingAssignment::findSourceDocumentLine(_sourceDocumentLineRefRecId,
                                                                            ReqPeggingAssignmentType::Requirement,
                                                                            true);

        reqPeggingAssignment.SourceDocumentLine       = _sourceDocumentLineRefRecId;
        reqPeggingAssignment.ReqPeggingAssignmentType = ReqPeggingAssignmentType::Requirement;
        reqPeggingAssignment.Quantity                 = _quantity;
        reqPeggingAssignment.UnitOfMeasure            = _unitOfMeasureRecId;

        if (   reqPeggingAssignment.Quantity == 0
            && _deleteIfZero)
        {
            if (reqPeggingAssignment.RecId)
            {
                reqPeggingAssignment.delete();
            }
        }
        else
        {
            reqPeggingAssignment.write();
        }
        ttscommit;

        return reqPeggingAssignment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSourceDocumentLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>ReqPeggingAssignment</c> table.
    /// </summary>
    /// <param name="_sourceDocumentLineRefRecId">
    ///    The record ID of the related source document line to find.
    /// </param>
    /// <param name="_reqPeggingAssignmentType">
    ///    A <c>ReqPeggingAssignmentType</c> enumeration value.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>ReqPeggingAssignment</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ReqPeggingAssignment findSourceDocumentLine(
        SourceDocumentLineRefRecId _sourceDocumentLineRefRecId,
        ReqPeggingAssignmentType   _reqPeggingAssignmentType,
        boolean                    _forUpdate = false)
    {
        ReqPeggingAssignment  reqPeggingAssignment;

        if (_sourceDocumentLineRefRecId)
        {
            reqPeggingAssignment.selectForUpdate(_forUpdate);

            select firstonly reqPeggingAssignment
                where reqPeggingAssignment.SourceDocumentLine       == _sourceDocumentLineRefRecId
                   && reqPeggingAssignment.ReqPeggingAssignmentType == _reqPeggingAssignmentType;
        }

        return reqPeggingAssignment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || ReqEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS319602</DeveloperDocumentation>
	<Label>@sys312664</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ReqPeggingAssignmentType</TitleField1>
	<TitleField2>SourceDocumentLine</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>MasterPlanning</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceDocumentLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReqPeggingAssignmentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitOfMeasure</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Quantity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Quantity</Name>
			<Label>@sys3065</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Quantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitOfMeasure</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@sys15217</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReqPeggingAssignmentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceDocumentLine</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Quantity</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReqPeggingAssignmentType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
			<EnumType>ReqPeggingAssignmentType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceDocumentLine</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SourceDocumentLineRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>UnitOfMeasure</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SourceDocumentLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceDocumentLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SourceDocumentLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>SourceDocumentLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>SourceDocumentLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReqPeggingTransaction</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceDocumentLine</Name>
					<Field>SourceDocumentLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Unit</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReqPeggingAssignment</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitOfMeasure</Name>
					<Field>UnitOfMeasure</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>