<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetRetirementCostSchedule_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetRetirementCostSchedule_JP extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getRawMarketDiscountRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the raw market discount rate.
    /// </summary>
    /// <returns>
    /// The raw market discount rate.
    /// </returns>
    public RealBase getRawMarketDiscountRate()
    {
        return this.MarketDiscountRate / 100;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        AssetDiscountRate_JP                    discountRate;

        super();

        this.EffectiveDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        discountRate = AssetDiscountRate_JP::findByDate(this.EffectiveDate);
        if (discountRate)
        {
            this.MarketDiscountRate = discountRate.DiscountRate;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modified field value.
    /// </summary>
    /// <param name="_fieldName">
    /// The field name.
    /// </param>
    /// <param name="_arrayIndex">
    /// The index of the array.
    /// </param>
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        AssetDiscountRate_JP discountRate;

        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(AssetRetirementCostSchedule_JP, EffectiveDate):
                discountRate = AssetDiscountRate_JP::findByDate(this.EffectiveDate);
                if (discountRate)
                {
                    this.MarketDiscountRate = discountRate.DiscountRate;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
        AssetRetirementCostSchedule_JP  lastCostSchedule;

        ret = super();

        if (ret)
        {
            lastCostSchedule = AssetRetirementCostSchedule_JP::lastCostSchedule(this.AssetRetirementObligation_JP);

            if (lastCostSchedule
                && this.EffectiveDate < lastCostSchedule.EffectiveDate)
            {
                ret = checkFailed(
                    strFmt("@SYS4005456", this.EffectiveDate));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createCostSchedule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new cost schedule.
    /// </summary>
    /// <param name="_costSchedule">
    /// A cost schedule buffer.
    /// </param>
    /// <param name="_retirementObligation">
    /// The asset retirement obligation.
    /// </param>
    public static void createCostSchedule(
        AssetRetirementCostSchedule_JP  _costSchedule,
        AssetRetirementObligation_JP    _retirementObligation)
    {
        AssetRetirementCostSchedule_JP::doCreateCostSchedule([_costSchedule], _retirementObligation.AssetDocumentEntry_JP);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doCreateCostSchedule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates cost schedule in server side.
    /// </summary>
    /// <param name="_bufferData">
    /// The buffer data.
    /// </param>
    /// <param name="_assetDocumentEntryRecId">
    /// The record id of asset document.
    /// </param>
    private static void doCreateCostSchedule(
        container _bufferData,
        RefRecId _assetDocumentEntryRecId)
    {
        AssetDocumentPresentValueResult_JP      resultLocal;
        Array                                   result;
        AssetRetirementCostSchedule_JP          costSchedule;
        AssetRetirementCostSchedule_JP          lastCostSchedule;

        [costSchedule] = _bufferData;
        ttsBegin;
        if (costSchedule.validateWrite())
        {
            lastCostSchedule = AssetRetirementCostSchedule_JP::lastCostSchedule(costSchedule.AssetRetirementObligation_JP);
            if (lastCostSchedule)
            {
                costSchedule.LineNum = lastCostSchedule.LineNum + 1;
            }
            //default value for EffectiveDiscountRate
            costSchedule.EffectiveDiscountRate = costSchedule.MarketDiscountRate;
            costSchedule.insert();

            result = AssetRetirementPresentValueProvider_JP::calculate(
                _assetDocumentEntryRecId,
                dateMax());

            if (result.lastIndex() > 0)
            {
                resultLocal = result.value(result.lastIndex());
                if (resultLocal.parmTransactionDate() >= costSchedule.EffectiveDate)
                {
                    costSchedule.selectForUpdate(true);
                    costSchedule.EffectiveDiscountRate = resultLocal.parmEffectiveDiscountRate();
                    costSchedule.update();
                }
            }
        }
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRetirementObligation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds cost plan for the specified retirement obligation record id.
    /// </summary>
    /// <param name="_retirementObligationRecId">
    /// The retirement obligation record id.
    /// </param>
    /// <returns>
    /// The cost plan.
    /// </returns>
    public static AssetRetirementCostSchedule_JP findByRetirementObligation(RefRecId _retirementObligationRecId)
    {
        AssetRetirementCostSchedule_JP costSchedule;

        if (_retirementObligationRecId)
        {
            select costSchedule
                order by EffectiveDate, Linenum
                where costSchedule.AssetRetirementObligation_JP == _retirementObligationRecId;
        }

        return costSchedule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEstimatedRetirementCost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets estimated retirement cost for the specific asset retirement obligation
    /// </summary>
    /// <param name="_retirementObligationRecId">
    /// Asset retirement obligation record id.
    /// </param>
    /// <returns>
    /// Estimated retirement cost.
    /// </returns>
    public static AssetRetirementCostValue_JP getEstimatedRetirementCost(RefRecId _retirementObligationRecId)
    {
        AssetRetirementCostSchedule_JP  schedule;

        select sum(AccountingCurrencyAmount) from schedule
            where schedule.AssetRetirementObligation_JP == _retirementObligationRecId;

        return schedule.AccountingCurrencyAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastCostSchedule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the last cost plan of the document.
    /// </summary>
    /// <param name="_retirementObligationRecId">
    /// The asset retirement obligation record id.
    /// </param>
    /// <returns>
    /// The last cost plan of the document.
    /// </returns>
    public static AssetRetirementCostSchedule_JP lastCostSchedule(RefRecId _retirementObligationRecId)
    {
        AssetRetirementCostSchedule_JP costSchedule;

        if (_retirementObligationRecId)
        {
            select firstOnly costSchedule
                order by EffectiveDate desc, Linenum desc
                where costSchedule.AssetRetirementObligation_JP == _retirementObligationRecId;
        }

        return costSchedule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>revertLastCostSchedule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reverts the last cost plan.
    /// </summary>
    /// <param name="_documentRecid">
    /// The document record id.
    /// </param>
    public static void revertLastCostSchedule(RefRecId _documentRecid)
    {
        AssetRetirementCostSchedule_JP costSchedule;

        ttsBegin;

        costSchedule = AssetRetirementCostSchedule_JP::lastCostSchedule(_documentRecid);
        if (costSchedule)
        {
            costSchedule.selectForUpdate(true);
            costSchedule.delete();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<DeveloperDocumentation>@FixedAssets:FA_MessageDeveloper_AssetRetirementCostSchedule_JP</DeveloperDocumentation>
	<Label>@SYS4005496</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>EffectiveDate</TitleField1>
	<TitleField2>AccountingCurrencyAmount</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>FixedAssets</Modules>
	<ReplacementKey>AssetRetirementCostLineIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountingCurrencyAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetRetirementObligation_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDiscountRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MarketDiscountRate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountingCurrencyAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetRetirementObligation_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDiscountRate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetRetirementObligation_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AssetRetirementCostSchedule</Name>
			<Label>@SYS4005496</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountingCurrencyAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetRetirementObligation_JP</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDiscountRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MarketDiscountRate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AccountingCurrencyAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetRetirementCostValue_JP</ExtendedDataType>
			<Label>@SYS4005524</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetRetirementObligation_JP</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EffectiveDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EffectiveDate</ExtendedDataType>
			<Label>@SYS4005513</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EffectiveDiscountRate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDiscountRateValue_JP</ExtendedDataType>
			<Label>@SYS4005535</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MarketDiscountRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDiscountRateValue_JP</ExtendedDataType>
			<Label>@SYS4005491</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AssetRetirementCostLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetRetirementObligation_JP</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>EffectiveDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetRetirementObligation_JP</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AssetRetirementObligation_JP</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>AssetRetirementObligation_JP</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AssetRetirementCostSchedule_JP</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetRetirementObligation_JP</Name>
					<Field>AssetRetirementObligation_JP</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>