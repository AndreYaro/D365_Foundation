<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSOrderCommittedReservation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSOrderCommittedReservation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>movement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an <c>InventMovement</c> object for the current Order-committed reservation record.
    /// </summary>
    /// <returns>
    /// The <c>InventMovement</c> object.
    /// </returns>
    private InventMovement movement()
    {
        InventMovement movement = InventMovement::construct(this);

        return movement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdateTransaction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates the Order-committed reservation transaction.
    /// </summary>
    /// <returns>
    /// <c>InventUpd_Estimated</c> class instance that was used to create or update transactions.
    /// </returns>
    private InventUpd_Estimated createOrUpdateTransaction()
    {
        InventUpd_Estimated estimated = InventUpd_Estimated::newInventMovement(this.movement());

        estimated.updateNow();

        return estimated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteTransaction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the Order-committed reservation transaction.
    /// </summary>
    private void deleteTransaction()
    {
        InventUpd_DeleteMovement::newMovement(InventMovement::construct(this.orig()), false).updateNow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a Order-committed reservation record and corresponding inventory transactions.
    /// </summary>
    public void insert()
    {
        if (appl.ttsLevel() == 0)
        {
            throw error(strFmt("@SCM:TransactionExpected", funcName()));
        }

        if (this.QtyRemain < 0)
        {
            throw error("@SYS6144");
        }

        // create InventTransId for a transaction
        this.InventTransId = NumberSeq::newGetNum(InventParameters::numRefInventTransId()).num();

        // create transaction
        InventUpd_Estimated estimatedIssue = this.createOrUpdateTransaction();

        super();

        if (estimatedIssue)
        {
            estimatedIssue.updateOwnerRelationship();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the Order-committed reservation record and corresponding inventory transactions.
    /// </summary>
    public void update()
    {
        if (appl.ttsLevel() == 0)
        {
            throw error(strFmt("@SCM:TransactionExpected", funcName()));
        }

        if (this.QtyRemain < 0)
        {
            throw error("@SYS6144");
        }

        // Create or update transaction
        this.createOrUpdateTransaction();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the Order-committed reservation record and corresponding inventory transactions.
    /// </summary>
    public void delete()
    {
        if (appl.ttsLevel() == 0)
        {
            throw error(strFmt("@SCM:TransactionExpected", funcName()));
        }
        
        // Delete transaction
        this.deleteTransaction();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>WHSOrderCommittedReservation</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>WHSOrderCommittedReservation</c> table if it exists; otherwise, an empty record.
    /// </returns>
    public static WHSOrderCommittedReservation find(RecId _recId, boolean _forUpdate = false)
    {
        WHSOrderCommittedReservation orderCommittedReservation;

        if (_recId)
        {
            orderCommittedReservation.selectForUpdate(_forUpdate);

            select firstonly orderCommittedReservation
                where orderCommittedReservation.RecId == _recId;
        }

        return orderCommittedReservation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTransId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>WHSOrderCommittedReservation</c> table.
    /// </summary>
    /// <param name="_inventTransId">
    /// The identifier of the transaction.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>WHSOrderCommittedReservation</c> table if it exists; otherwise, an empty record.
    /// </returns>
    public static WHSOrderCommittedReservation findByTransId(InventTransId _inventTransId, boolean _forUpdate = false)
    {
        WHSOrderCommittedReservation orderCommittedReservation;

        if (_inventTransId)
        {
            orderCommittedReservation.selectForUpdate(_forUpdate);

            select firstonly orderCommittedReservation
                where orderCommittedReservation.InventTransId == _inventTransId;
        }

        return orderCommittedReservation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCommittingOriginInventTransId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>WHSOrderCommittedReservation</c> table.
    /// </summary>
    /// <param name="_committingOriginInventTransId">
    /// The identifier of the parent transaction.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>WHSOrderCommittedReservation</c> table if it exists; otherwise, an empty record.
    /// </returns>
    public static WHSOrderCommittedReservation findByCommittingOriginInventTransId(InventTransId _committingOriginInventTransId, boolean _forUpdate = false)
    {
        WHSOrderCommittedReservation orderCommittedReservation;

        if (_committingOriginInventTransId)
        {
            orderCommittedReservation.selectForUpdate(_forUpdate);

            select firstonly orderCommittedReservation
                where orderCommittedReservation.CommittingOriginInventTransId == _committingOriginInventTransId;
        }

        return orderCommittedReservation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventMovement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the current Order-committed reservation record from an <c>InventMovement</c> object.
    /// </summary>
    /// <param name = "_movement">The <c>InventMovement</c> object.</param>
    public void initFromInventMovement(InventMovement _movement)
    {
        this.initCommittingOriginInventTransIdFromInventMovement(_movement);
        this.initDataFromInventMovement(_movement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCommittingOriginInventTransIdFromInventMovement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the current Order-committed reservation record from an <c>InventMovement</c> object.
    /// </summary>
    /// <param name = "_movement">The <c>InventMovement</c> object.</param>
    private void initCommittingOriginInventTransIdFromInventMovement(InventMovement _movement)
    {
        this.CommittingOriginInventTransId   = _movement.transId();
        this.CommittingOriginInventTransType = _movement.transType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDataFromInventMovement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes data-fields of the current Order-committed reservation record from an <c>InventMovement</c> object.
    /// </summary>
    /// <param name = "_movement">The <c>InventMovement</c> object.</param>
    [Hookable(false)]
    internal void initDataFromInventMovement(InventMovement _movement)
    {
        this.ItemId                          = _movement.itemId();
        this.CommittingOriginInventDimId     = _movement.inventDimId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:Table_WHSOrderCommittedReservation_DeveloperDocumentation</DeveloperDocumentation>
	<Label>@WAX:OrderCommittedReservations</Label>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>QtyRemain</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>Inventory</Modules>
	<ReplacementKey>InventTransIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CommittingOriginInventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CommittingOriginInventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QtyRemain</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CommittingOriginInventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CommittingOriginInventTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>OII</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CommittingOriginInventTransType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>OII</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QtyRemain</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Label>@WAX1189</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTransIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventTransIdParentIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>CommittingOriginInventTransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CommittingOriginInventDimId</Name>
					<Field>CommittingOriginInventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>OrderCommittedReservation</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOriginParent</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOriginParent</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>OrderCommittedReservation</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CommittingOriginInventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>CommittingOriginInventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CommittingOriginInventTransType</Name>
					<Field>CommittingOriginInventTransType</Field>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CommittingOriginInventTransId</Name>
					<Field>CommittingOriginInventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>