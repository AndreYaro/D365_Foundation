<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveTemplateGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWaveTemplateGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>groupFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the associated Field Name.
    /// </summary>
    /// <returns>The associated Field Name.</returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display WHSGroupFieldLabel groupFieldName()
    {
        return fieldId2PName(this.GroupTableId, this.GroupFieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>groupTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the associated Table Name.
    /// </summary>
    /// <returns>The associated Table Name.</returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display WHSGroupTableLabel groupTableName()
    {
        return tableId2PName(this.GroupTableId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        WHSWaveTemplateGroup waveTemplateGroup;
    
        super();
    
        ttsBegin;
    
        waveTemplateGroup.skipDataMethods(true);

        if (this.WaveGroupBy)
        {
            update_recordset waveTemplateGroup
                setting WaveGroupBy = NoYes::Yes
                where waveTemplateGroup.WaveTemplate == this.WaveTemplate 
					&& waveTemplateGroup.LineNumber < this.LineNumber;
        }
        else
        {
            update_recordset waveTemplateGroup
                setting WaveGroupBy = NoYes::No
                where waveTemplateGroup.WaveTemplate == this.WaveTemplate 
					&& waveTemplateGroup.LineNumber > this.LineNumber;
        }
    
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createGroups</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create Wave Template groupings.
    /// </summary>
    /// <param name = "_refRecId">The <c>WhsWaveTemplateTableRecId</c> of the <c>WHSWaveTemplateTable</c> to create the groupings for.</param>
    /// <param name = "_queryRun">The <c>QueryRun</c> object to use for creating the grouping.</param>
    public static void createGroups(WhsWaveTemplateTableRecId _refRecId, QueryRun _queryRun)
    {
        if (_queryRun)
        {
            ttsBegin;
    
            WHSWaveTemplateGroup    waveTemplateGroup;

            delete_from waveTemplateGroup
                where waveTemplateGroup.WaveTemplate == _refRecId;
    
            int sortCount = _queryRun.query().orderByFieldCount();
    
            var rilWaveTemplateGroup = new RecordInsertList(tableNum(WHSWaveTemplateGroup));

            LineNum lineNum;
    
            for (int i = 1; i <= sortCount; ++i)
            {
                QueryOrderByField qobf = _queryRun.query().orderByField(i);
    
                if (qobf)
                {
                    ++lineNum;
    
                    waveTemplateGroup = WHSWaveTemplateGroup::find(_refRecId, qobf.dataSource().table(), qobf.fieldID(), true);
                    waveTemplateGroup.clear();
                    waveTemplateGroup.LineNumber = lineNum;
                    waveTemplateGroup.WaveTemplate = _refRecId;
                    waveTemplateGroup.GroupTableId = qobf.dataSource().table();
                    waveTemplateGroup.GroupFieldId = qobf.fieldID();
    
                    rilWaveTemplateGroup.add(waveTemplateGroup);
                }
            }
    
            if (lineNum > 0)
            {
                rilWaveTemplateGroup.insertDatabase();
            }
    
            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(
        WhsWaveTemplateTableRecId	_waveTemplateTableRecId,
        RefTableId					_groupTableId,
        RefFieldId					_groupFieldId)
    {
        return (_waveTemplateTableRecId && _groupTableId && _groupFieldId)
            && (select firstOnly RecId from WHSWaveTemplateGroup
                where WHSWaveTemplateGroup.WaveTemplate == _waveTemplateTableRecId
                    && WHSWaveTemplateGroup.GroupTableId == _groupTableId
                    && WHSWaveTemplateGroup.GroupFieldId == _groupFieldId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static WHSWaveTemplateGroup find(
        WhsWaveTemplateTableRecId   _waveTemplateTableRecId,
        RefTableId					_groupTableId,
        RefFieldId					_groupFieldId,
        boolean						_forUpdate = false)
    {
        WHSWaveTemplateGroup    waveTemplateGroup;
    
        if (_waveTemplateTableRecId && _groupTableId && _groupFieldId)
        {
            if (_forupdate)
            {
                waveTemplateGroup.selectForUpdate(_forUpdate);
            }
    
            select firstOnly waveTemplateGroup
                where waveTemplateGroup.WaveTemplate == _waveTemplateTableRecId
                    && waveTemplateGroup.GroupTableId == _groupTableId
                    && waveTemplateGroup.GroupFieldId == _groupFieldId;
        }
    
        return waveTemplateGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<FormRef>WHSWaveTemplateGroup</FormRef>
	<Label>@WAX:WHSWaveTemplateGrouping</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>GroupTableId</TitleField1>
	<TitleField2>GroupFieldId</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>WaveTemplateLineNumber</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>WaveTemplateLineNumber</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupFieldId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveGroupBy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveTemplate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupFieldId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveGroupBy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WaveTemplate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveTemplateTableRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>GroupTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>GroupFieldId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefFieldId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WaveGroupBy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveGroupBy</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WaveTemplateGroupFieldIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>WaveTemplate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>GroupTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>GroupFieldId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WaveTemplateLineNumber</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>WaveTemplate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>WHSWaveTemplateTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSWaveTemplateTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WaveTemplate</Name>
					<Field>WaveTemplate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>