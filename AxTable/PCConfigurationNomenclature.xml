<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCConfigurationNomenclature</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PCConfigurationNomenclature extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static PCConfigurationNomenclature find(PCConfigurationNomenclatureRecId _recId)
    {
        PCConfigurationNomenclature pcConfigurationNomenclature;

        select pcConfigurationNomenclature
            where pcConfigurationNomenclature.recid == _recId;

        return pcConfigurationNomenclature;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInUse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the nomenclature is in use.
    /// </summary>
    /// <returns>True if the nomenclature is in use; otherwise, false.</returns>
    /// <remarks>Overriding method on parent table.</remarks>
    public boolean isInUse()
    {
        PCComponentConfigurationNomenclature pcComponentConfigurationNomenclature;

        select firstonly RecId from pcComponentConfigurationNomenclature
            where pcComponentConfigurationNomenclature.PCConfigurationNomenclature == this.RecId;

        return pcComponentConfigurationNomenclature.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accept</Name>
				<Source><![CDATA[
    /// <summary>
    /// Accepts a product configuration model visitor.
    /// </summary>
    /// <param name="_visitor">
    ///  A product configuration model visitor.
    /// </param>
    public void accept(PCModelVisitor _visitor)
    {
        _visitor.visitStart(this);

        EcoResNomenclatureSegment nomenclatureSegment;

        while select nomenclatureSegment
            where nomenclatureSegment.Nomenclature == this.RecId
        {
            nomenclatureSegment.accept(_visitor);
        }

        _visitor.visitEnd(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PC</ConfigurationKey>
	<DeveloperDocumentation>@SCM:EcoResPCConfigNomenclatureDevDoc</DeveloperDocumentation>
	<Label>@SCM:EcoResPCConfigNomenclature</Label>
	<TableGroup>Group</TableGroup>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Extends>EcoResNomenclature</Extends>
	<Modules>ProductInformationManagement</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields />
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResNomenclature</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>EcoResNomenclature</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>