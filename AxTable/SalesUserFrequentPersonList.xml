<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesUserFrequentPersonList</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesUserFrequentPersonList extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addUserFrequentPersonListEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds an entry to the user frequent contact person List.
    /// </summary>
    /// <param name = "_person">A specified person</param>
    /// <param name = "_currentUser">A specified user</param>
    public static void addUserFrequentPersonListEntry(DirPersonRecId _person, UserId _currentUser)
    {
        SalesUserFrequentPersonList userFrequentPersonList;

        ttsbegin;

        userFrequentPersonList.User = _currentUser;
        userFrequentPersonList.Person = _person;
        userFrequentPersonList.insert();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>userFrequentPersonListEntryExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verifies if an entry exist in from the user frequent contact person List.
    /// </summary>
    /// <param name = "_person">A specified person</param>
    /// <param name = "_currentUser">A specified user</param>
    /// <returns>true if entry exists; otherwise - false</returns>
    public static boolean userFrequentPersonListEntryExists(DirPersonRecId _person, UserId _currentUser)
    {
        SalesUserFrequentPersonList userFrequentPersonList;

        select firstonly RecId from userFrequentPersonList
            where userFrequentPersonList.User == _currentUser
            && userFrequentPersonList.Person == _person;

        return userFrequentPersonList.RecId !=0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>personLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs a person lookup
    /// </summary>
    /// <param name = "_control">A specified <c>FormStringControl</c> control to perform lookup action.</param>
    /// <returns>A reference to the selected person in the lookup</returns>
    public static DirPersonRecId personLookup(FormStringControl _control)
    {
        FormRun                     lookupForm;
        Args                        args;
        DirPersonName               personName;
        DirPersonRecId              personFound;
        DirIPersonNameLookupForm    IPersonNameLookupForm;

        args = new Args(formStr(DirPartyLookup));

        args.parmEnumType(enumNum(DirPartyType));
        args.parmEnum(enum2int(DirPartyType::Person));

        args.record(personName);
        args.caller(_control);

        lookupForm = classfactory.formRunClass(args);
        lookupForm.init();

        _control.performFormLookup(lookupForm);

        lookupForm.wait();

        if (lookupForm.closedOk())
        {
            if (lookupForm is DirIPersonNameLookupForm)
            {
                IPersonNameLookupForm = lookupForm as DirIPersonNameLookupForm;

                personName.data(IPersonNameLookupForm.getPersonName());

                personFound = personName.Person;
            }
        }

        return personFound;
    }

]]></Source>
			</Method>
			<Method>
				<Name>personImage</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Retrieves the photo of the specified person or a default user image.
    /// </summary>
    /// <returns>A container contains image of the specified person</returns>
    public display container personImage()
    {
        HcmPersonImage  personImage;
        container       imageContainer;

        personImage = HcmPersonImage::findByPerson(this.Person);

        if (personImage.RecId)
        {
            imageContainer = personImage.Image;
        }
        else
        {
            imageContainer = ImageReference::constructForSymbol(ImageReferenceSymbol::Person).pack();
        }

        return imageContainer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>personTitle</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the title of the associated worker.
    /// </summary>
    /// <returns>A tile of the associated worker</returns>
    public display HcmTitleId personTitle()
    {
        return HcmWorker::findByPerson(this.Person).title();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:MyFrequentContactsDevDoc</DeveloperDocumentation>
	<Label>@SCM:MyFrequentContacts</Label>
	<TitleField1>User</TitleField1>
	<TitleField2>Person</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>UserPerson</PrimaryIndex>
	<ReplacementKey>UserPerson</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>User</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Person</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS11696</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>User</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Person</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>User</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UserId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Person</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DirPersonRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>UserPerson</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>User</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Person</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DirPerson</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DirPerson</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DirPerson</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DirPerson_SalesuserFrequentPersonList</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Person</Name>
					<Field>Person</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UserInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UserInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>UserInfo</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>User</Name>
					<Field>User</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>