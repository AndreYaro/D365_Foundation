<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EximSetOffRulesLine_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EximSetOffRulesLine_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets balance amount for specified EximSetOffRulesTable_IN table RecId and EximProductGroupTable_IN table RecId.
    /// </summary>
    /// <returns>balance amount in company currency</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display AmountMST displayBalance()
    {
        return EximSetOffRulesLine_IN::balance(this.SetOffRulesRecId, this.EximProductGroupTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayDutyAvailed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets dutyAvailed amount for Specified EximSetOffRulesTable_IN table RecId and EximProductGroupTable_IN table recId.
    /// </summary>
    /// <returns>dutyAvailed amount in company currency</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display AmountMST displayDutyAvailed()
    {
        return EximSetOffRulesLine_IN::dutyAvailed(this.SetOffRulesRecId, this.EximProductGroupTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayDutyEntitlement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets dutyEntitiled amount for Specified EximSetOffRulesTable_IN table RecId and EximProductGroupTable_IN table recId.
    /// </summary>
    /// <returns>dutyEntitiled amount in company currency</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display AmountMST displayDutyEntitlement()
    {
        return EximSetOffRulesLine_IN::dutyEntitlement(this.SetOffRulesRecId, this.EximProductGroupTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displaySold</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets sold amount for Specified EximSetOffRulesTable_IN table RecId and EximProductGroupTable_IN table recId.
    /// </summary>
    /// <returns>sold amount in company currency</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display AmountMST displaySold()
    {
        return EximSetOffRulesLine_IN::sold(this.SetOffRulesRecId, this.EximProductGroupTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>productDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets product description for specified EximProductGroupTable_IN table recId.
    /// </summary>
    /// <returns>product description</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display Description  productDescription()
    {
        return EximProductGroupTable_IN::find(this.EximProductGroupTable).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>balance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the balance amount from the difference of DutyEntitlement and sum of DutyAvailed and Sold amounts.
    /// </summary>
    /// <param name="_setOffRulesRecId">EximSetOffRulesTable_IN RecId</param>
    /// <param name="_productGroup">EximProductGroupTable_IN table RecId</param>
    /// <returns>balance amount in company currency</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountMST balance(
        EximSetOffRulesTableRecId_IN _setOffRulesRecId,
        RefRecId                      _productGroup)
    {
        EximDEPBDetailsTable_IN eximDEPBDetails;
        EximDEPBSchemesTable_IN eximDEPBSchemesTable;
        EximSetOffRulesTable_IN eximSetOffRulesTable;

        select EximDEPBSchemesTable
            from eximSetOffRulesTable
                where eximSetOffRulesTable.RecId == _setOffRulesRecId
            join RecId
                from eximDEPBSchemesTable
                    where eximDEPBSchemesTable.RecId == eximSetOffRulesTable.EximDEPBSchemesTable
                join sum(DutyEntitlement), sum(DutyAvailed), sum(Sold)
                    from eximDEPBDetails
                        where eximDEPBDetails.SchemesTableRecId     == eximDEPBSchemesTable.RecId
                           && eximDEPBDetails.EximProductGroupTable == _productGroup;

        return eximDEPBDetails.DutyEntitlement - (eximDEPBDetails.DutyAvailed + eximDEPBDetails.Sold);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canMoveDown</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if any EximSetOffRulesLine_IN record exists with column value greater than specified EximSetOffRulesLine_IN record Column value.
    /// </summary>
    /// <param name="_eximSetOffRuleLine">EximSetOffRulesLine_IN table record</param>
    /// <returns>true if EximSetOffRulesLine_IN record is found otherwise, false</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean canMoveDown(EximSetOffRulesLine_IN _eximSetOffRuleLine)
    {
        return _eximSetOffRuleLine
                && (select firstonly RecId from eximSetOffRulesLine_IN
                       where eximSetOffRulesLine_IN.SetOffRulesRecId == _eximSetOffRuleLine.SetOffRulesRecId
                           && eximSetOffRulesLine_IN.Column > _eximSetOffRuleLine.Column).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canMoveUp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if any EximSetOffRulesLine_IN record exists with column value less than specified EximSetOffRulesLine_IN record Column value.
    /// </summary>
    /// <param name="_eximSetOffRuleLine">EximSetOffRulesLine_IN table record</param>
    /// <returns>true if EximSetOffRulesLine_IN record is found otherwise, false</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean canMoveUp(EximSetOffRulesLine_IN _eximSetOffRuleLine)
    {
        return _eximSetOffRuleLine
                && (select firstonly RecId from eximSetOffRulesLine_IN
                       where eximSetOffRulesLine_IN.SetOffRulesRecId == _eximSetOffRuleLine.SetOffRulesRecId
                           && eximSetOffRulesLine_IN.Column < _eximSetOffRuleLine.Column).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dutyAvailed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets dutyAvailed amount from EximDEPBDetailsTable_IN table for specified EximSetOffRulesTableRecId_IN and EximProductGroupTable_IN table RecId.
    /// </summary>
    /// <param name="_setOffRulesRecId">EximSetOffRulesTableRecId_IN</param>
    /// <param name="_productGroup">EximProductGroupTable_IN table RecId</param>
    /// <returns>dutyAvailed amount in company currency</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountMST dutyAvailed(
        EximSetOffRulesTableRecId_IN _setOffRulesRecId,
        RefRecId                     _productGroup)
    {
        EximDEPBDetailsTable_IN eximDEPBDetails;
        EximDEPBSchemesTable_IN eximDEPBSchemesTable;
        EximSetOffRulesTable_IN eximSetOffRulesTable;

        select EximDEPBSchemesTable
            from eximSetOffRulesTable
                where eximSetOffRulesTable.RecId == _setOffRulesRecId
            join RecId
                from eximDEPBSchemesTable
                    where eximDEPBSchemesTable.RecId == eximSetOffRulesTable.EximDEPBSchemesTable
                join sum(DutyAvailed)
                    from eximDEPBDetails
                        where eximDEPBDetails.SchemesTableRecId     == eximDEPBSchemesTable.RecId
                          && eximDEPBDetails.EximProductGroupTable  == _productGroup;

        return eximDEPBDetails.DutyAvailed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dutyEntitlement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets dutyAvailed amount from EximDEPBDetailsTable_IN table for specified EximSetOffRulesTableRecId_IN and EximProductGroupTable_IN table RecId.
    /// </summary>
    /// <param name="_setOffRulesRecId">EximSetOffRulesTableRecId_IN</param>
    /// <param name="_productGroup">EximProductGroupTable_IN table RecId</param>
    /// <returns>dutyAvailed amount in company currency</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountMST dutyEntitlement(
        EximSetOffRulesTableRecId_IN _setOffRulesRecId,
        RefRecId                     _productGroup)
    {
        EximDEPBDetailsTable_IN eximDEPBDetails;
        EximDEPBSchemesTable_IN eximDEPBSchemesTable;
        EximSetOffRulesTable_IN eximSetOffRulesTable;

        select EximDEPBSchemesTable
            from eximSetOffRulesTable
                where eximSetOffRulesTable.RecId == _setOffRulesRecId
            join RecId
                from eximDEPBSchemesTable
                    where eximDEPBSchemesTable.RecId == eximSetOffRulesTable.EximDEPBSchemesTable
                join sum(DutyEntitlement)
                    from eximDEPBDetails
                        where eximDEPBDetails.SchemesTableRecId     == eximDEPBSchemesTable.RecId
                           && eximDEPBDetails.EximProductGroupTable == _productGroup;

        return eximDEPBDetails.DutyEntitlement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the EximSetOffRulesLine_IN table for the specified id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing EximSetOffRulesLine_IN table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximSetOffRulesLine_IN find(
        RefRecId            _recId,
        boolean             _forUpdate        = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        EximSetOffRulesLine_IN  eximSetOffRulesLine;

        eximSetOffRulesLine.selectForUpdate(_forUpdate);
        if (_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            eximSetOffRulesLine.concurrencyModel(_concurrencyModel);
        }

        select firstonly eximSetOffRulesLine
            where eximSetOffRulesLine.RecId == _recId;

        return eximSetOffRulesLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFirstColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the EximSetOffRulesLine_IN table for the specified EximSetOffRulesTable_IN table Recid and Column value.
    /// </summary>
    /// <param name="_setOffRulesRecId">EximSetOffRulesTable_IN table Recid</param>
    /// <param name="_column">Column value</param>
    /// <returns>EximSetOffRulesLine_IN table record</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximSetOffRulesLine_IN findFirstColumn(
        RefRecId _setOffRulesRecId,
        Column   _column)
    {
        EximSetOffRulesLine_IN eximSetOffRuleLineUpdate;

        select firstonly eximSetOffRuleLineUpdate
            order by Column desc
               where eximSetOffRuleLineUpdate.SetOffRulesRecId == _setOffRulesRecId
               && eximSetOffRuleLineUpdate.Column              <= _column;

        return eximSetOffRuleLineUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findMaxColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds maximum column number for specified EximSetOffRulesTable_IN table recId.
    /// </summary>
    /// <param name="_setOffRulesRecId">EximSetOffRulesTable_IN table recId</param>
    /// <returns>Max Column number</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static Column findMaxColumn(RefRecId _setOffRulesRecId)
    {
        EximSetOffRulesLine_IN eximSetOffMaximum;

        select maxof(Column) from eximSetOffMaximum
            where eximSetOffMaximum.SetOffRulesRecId   == _setOffRulesRecId;

        return eximSetOffMaximum.Column;
    }

]]></Source>
			</Method>
			<Method>
				<Name>maxColumnNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds maximum column number plus one for specified EximSetOffRulesTable_IN table recId.
    /// </summary>
    /// <param name="_setOffRulesTableRecId">EximSetOffRulesTable_IN table recId</param>
    /// <returns>Max Column number plus one</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static Column maxColumnNumber(EximSetOffRulesTableRecId_IN _setOffRulesTableRecId)
    {
        EximSetOffRulesLine_IN eximSetOffRuleLine;

        select maxof(Column) from eximSetOffRuleLine
            where eximSetOffRuleLine.SetOffRulesRecId   == _setOffRulesTableRecId;

        return (eximSetOffRuleLine.Column ? eximSetOffRuleLine.Column + 1 : 1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveDown</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the column field for specified EximSetOffRulesLine_IN table record by recuding one and updates the previous record column with add one
    /// </summary>
    /// <param name="_eximSetOffRules">EximSetOffRulesLine_IN table recid</param>
    /// <returns>Updated EximSetOffRulesLine_IN table record</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public  static EximSetOffRulesLine_IN moveDown(EximSetOffRulesLine_IN _eximSetOffRules)
    {
        EximSetOffRulesLine_IN eximSetOffRuleBufferPrevious;
        EximSetOffRulesLine_IN eximSetOffRuleBufferCurrent;
        Column                 columnBuffer;

        ttsbegin;
        select firstonly forupdate eximSetOffRuleBufferPrevious
            order by Column
            where eximSetOffRuleBufferPrevious.SetOffRulesRecId == _eximSetOffRules.SetOffRulesRecId
               && eximSetOffRuleBufferPrevious.Column           >  _eximSetOffRules.Column;

        select firstonly forupdate eximSetOffRuleBufferCurrent
            where eximSetOffRuleBufferCurrent.SetOffRulesRecId == _eximSetOffRules.SetOffRulesRecId
               && eximSetOffRuleBufferCurrent.Column           == _eximSetOffRules.Column;

        if (eximSetOffRuleBufferPrevious && eximSetOffRuleBufferCurrent)
        {
            columnBuffer = eximSetOffRuleBufferPrevious.Column;
            eximSetOffRuleBufferPrevious.Column = _eximSetOffRules.Column;

            eximSetOffRuleBufferCurrent.Column = -1;
            eximSetOffRuleBufferCurrent.update();
            eximSetOffRuleBufferPrevious.update();

            eximSetOffRuleBufferCurrent.Column = columnBuffer;
            eximSetOffRuleBufferCurrent.update();
        }
        ttscommit;

        return eximSetOffRuleBufferCurrent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveUp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the column field for specified EximSetOffRulesLine_IN table record by recuding one and updates the previous record column with add one in descending order.
    /// </summary>
    /// <param name="_eximSetOffRules">EximSetOffRulesLine_IN table recid</param>
    /// <returns>Updated EximSetOffRulesLine_IN table record</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public  static EximSetOffRulesLine_IN moveUp(EximSetOffRulesLine_IN _eximSetOffRules)
    {
        EximSetOffRulesLine_IN eximSetOffRuleBufferPrevious;
        EximSetOffRulesLine_IN eximSetOffRuleBufferCurrent;
        Column                 columnBuffer;

        ttsbegin;
        select firstonly forupdate eximSetOffRuleBufferPrevious
            order by Column desc
            where eximSetOffRuleBufferPrevious.SetOffRulesRecId == _eximSetOffRules.SetOffRulesRecId
               && eximSetOffRuleBufferPrevious.Column           <  _eximSetOffRules.Column;

        select firstonly forupdate eximSetOffRuleBufferCurrent
            where eximSetOffRuleBufferCurrent.SetOffRulesRecId == _eximSetOffRules.SetOffRulesRecId
               && eximSetOffRuleBufferCurrent.Column           == _eximSetOffRules.Column;

        if (eximSetOffRuleBufferPrevious && eximSetOffRuleBufferCurrent)
        {
            columnBuffer = eximSetOffRuleBufferPrevious.Column;
            eximSetOffRuleBufferPrevious.Column = _eximSetOffRules.Column;

            eximSetOffRuleBufferCurrent.Column = -1;
            eximSetOffRuleBufferCurrent.update();
            eximSetOffRuleBufferPrevious.update();

            eximSetOffRuleBufferCurrent.Column = columnBuffer;
            eximSetOffRuleBufferCurrent.update();
        }
        ttscommit;

        return eximSetOffRuleBufferCurrent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sold</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets sold amount for specified EximSetOffRulesTableRecId_IN.
    /// </summary>
    /// <param name="_setOffRulesRecId">EximSetOffRulesTableRecId_IN</param>
    /// <param name="_productGroup">EximProductGroupTable_IN recId</param>
    /// <returns>sold amount in company currency</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountMST sold(
        EximSetOffRulesTableRecId_IN _setOffRulesRecId,
        RefRecId                     _productGroup)
    {
        EximDEPBDetailsTable_IN eximDEPBDetails;
        EximDEPBSchemesTable_IN eximDEPBSchemesTable;
        EximSetOffRulesTable_IN eximSetOffRulesTable;

        select EximDEPBSchemesTable
            from eximSetOffRulesTable
                where eximSetOffRulesTable.RecId                == _setOffRulesRecId
            join RecId
                from eximDEPBSchemesTable
                    where eximDEPBSchemesTable.RecId         == eximSetOffRulesTable.EximDEPBSchemesTable
                join sum(Sold)
                    from eximDEPBDetails
                        where eximDEPBDetails.SchemesTableRecId == eximDEPBSchemesTable.RecId
                            && eximDEPBDetails.EximProductGroupTable      == _productGroup;

        return eximDEPBDetails.Sold;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the column field for specified EximSetOffRulesTable_IN table recId and column value.
    /// </summary>
    /// <param name="_setOffRulesRecId">EximSetOffRulesTable_IN table recId</param>
    /// <param name="_column">column</param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void updateColumn(
        RefRecId _setOffRulesRecId,
        Column   _column)
    {
        EximSetOffRulesLine_IN        eximSetOffRuleLineUpdate;

        ttsbegin;
        update_recordset eximSetOffRuleLineUpdate
            setting Column = eximSetOffRuleLineUpdate.Column - 1
            where eximSetOffRuleLineUpdate.SetOffRulesRecId == _setOffRulesRecId
               && eximSetOffRuleLineUpdate.Column           >  _column;
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS62471</DeveloperDocumentation>
	<FormRef>EximsetOffRules_IN</FormRef>
	<Label>@GLS61834</Label>
	<TitleField1>Column</TitleField1>
	<TitleField2>EximProductGroupTable</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>ExportImportIndia</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>SetOffRulesColumnIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Column</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EximProductGroupTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>productDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SetOffRulesRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Column</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Lines</Name>
			<Label>@SYS15451</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SetOffRulesRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Column</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EximProductGroupTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Column</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EximSetOffColumn_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>EximProductGroupTable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS58238</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SetOffRulesRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EximSetOffRulesTableRecId_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SetOffRulesColumnIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SetOffRulesRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Column</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProductGroupSetOffRulesIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>EximProductGroupTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SetOffRulesRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EximProductGroupTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EximProductGroupTable_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EximProductGroupTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EximProductGroupTable_IN_EximSetOffRulesLine_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EximProductGroupTable</Name>
					<Field>EximProductGroupTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>EximSetOffRulesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EximSetOffRulesTable_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EximSetOffRulesTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EximSetOffRulesTable_IN_EximSetOffRulesLine_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SetOffRulesRecId</Name>
					<Field>SetOffRulesRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>