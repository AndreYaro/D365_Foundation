<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpDirectTaxComponentTotals_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpDirectTaxComponentTotals_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAmountMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax amount.
    /// </summary>
    /// <param name="_taxComponent">
    /// The withhold tax component used to compare.
    /// </param>
    /// <param name="_taxType">
    /// The tax type that is used to compare.
    /// </param>
    /// <param name="_directTaxTotal">
    /// The buffer of the <c>TmpDirectTaxInquiryTable_IN</c> table.
    /// </param>
    /// <returns>
    /// The tax amount.
    /// </returns>
    public AmountMST getAmountMST(
        TaxComponent_IN               _taxComponent,
        TaxWithholdCodeType_IN        _taxType,
        TmpDirectTaxInquiryTable_IN   _directTaxTotal)
    {
        AmountMST amount;

        if (_taxComponent == _directTaxTotal.TaxComponent &&
            _taxType      == _directTaxTotal.TaxType)
        {
                amount = _directTaxTotal.TaxAmount;
        }
        else
        {
            amount = 0;
        }

        return amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAmountSecondary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the secondary tax amount.
    /// </summary>
    /// <param name="_taxComponent">
    /// The withhold tax component used to compare.
    /// </param>
    /// <param name="_taxType">
    /// Withold tax type is used to compare.
    /// </param>
    /// <param name="_directTaxTotal">
    /// Buffer of  <c> TmpDirectTaxInquiryTable_IN </c>
    /// </param>
    /// <returns>
    /// Tax amount.
    /// </returns>
    public AmountMST getAmountSecondary(
        TaxComponent_IN                 _taxComponent,
        TaxWithholdCodeType_IN          _taxType,
        TmpDirectTaxInquiryTable_IN     _directTaxTotal)
    {
        AmountMST               amount;
        CurrencyExchangeHelper  currencyHelper = CurrencyExchangeHelper::newExchangeDate(Ledger::primaryLedger(CompanyInfo::findDataArea(curext()).RecId),
                                                                                         _directTaxTotal.TransDate);

        if (_taxComponent == _directTaxTotal.TaxComponent &&
            _taxType      == _directTaxTotal.TaxType)
        {
            amount = currencyHelper.calculateAccountingToReportingAdjustment(_directTaxTotal.SourceCurrencyCode,
                                                                             _directTaxTotal.TaxAmount,
                                                                             true);
        }
        else
        {
            amount = 0;
        }

        return amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBaseCurrency</Name>
				<Source><![CDATA[
    display CurrencyCode getBaseCurrency()
    {
        return  Ledger::accountingCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSecondaryCurrency</Name>
				<Source><![CDATA[
    display CurrencyCode getSecondaryCurrency()
    {
        return  Ledger::reportingCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertIntoTmpDirectTaxComponentTotals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record into the <c>TmpDirectTaxComponentTotals_IN </c> table.
    /// </summary>
    /// <param name="_directTaxTotal">
    /// The buffer of the <c>TmpDirectTaxInquiryTable_IN</c> table.
    /// </param>
    /// <param name="_tmpDirectTaxInquiryTable">
    /// The buffer of the <c> TmpDirectTaxInquiryTable_IN </c>  table.
    /// </param>
    /// <returns>
    /// The buffer of the <c>TmpDirectTaxComponentTotals_IN </c> table.
    /// </returns>
    public static TmpDirectTaxComponentTotals_IN insertIntoTmpDirectTaxComponentTotals(
        TmpDirectTaxInquiryTable_IN  _directTaxTotal,
        TmpDirectTaxInquiryTable_IN  _tmpDirectTaxInquiryTable)
    {
        TmpDirectTaxInquiryTable_IN       tmpDirectTaxInquiryTable;
        TmpDirectTaxComponentTotals_IN    tmpDirectTaxComponentTotals;
        TmpDirectTaxInquiryTable_IN       tmpDirectTaxInquiryTableLoc;
        TmpDirectTaxInquiryTable_IN       tmpDirectTaxInquiryTableCpy;

        tmpDirectTaxInquiryTable.setTmpData(_tmpDirectTaxInquiryTable);
        tmpDirectTaxInquiryTableLoc.setTmpData(_tmpDirectTaxInquiryTable);
        tmpDirectTaxInquiryTableCpy.setTmpData(_tmpDirectTaxInquiryTable);

        while select sum(TaxAmount), sum(TaxAmountSecondary), TaxComponent, TaxType from tmpDirectTaxInquiryTable
            group by TaxComponent, TaxType
        {
            tmpDirectTaxComponentTotals.TaxComponent               = tmpDirectTaxInquiryTable.TaxComponent;
            tmpDirectTaxComponentTotals.TaxType                    = tmpDirectTaxInquiryTable.TaxType;
            tmpDirectTaxComponentTotals.AmountMST                  = tmpDirectTaxComponentTotals.getAmountMST(tmpDirectTaxInquiryTable.TaxComponent,
                                                                                          tmpDirectTaxInquiryTable.TaxType,
                                                                                          _directTaxTotal);
            tmpDirectTaxComponentTotals.AmountSecondary            = tmpDirectTaxComponentTotals.getAmountSecondary(tmpDirectTaxInquiryTable.TaxComponent,
                                                                                                  tmpDirectTaxInquiryTable.TaxType,
                                                                                                  _directTaxTotal);

            tmpDirectTaxComponentTotals.AccumulatedAmountMST       = tmpDirectTaxInquiryTable.TaxAmount;
            tmpDirectTaxComponentTotals.AccumulatedAmountSecondary = tmpDirectTaxInquiryTable.TaxAmountSecondary;

            tmpDirectTaxComponentTotals.insert();
        }

        return tmpDirectTaxComponentTotals;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<Label>@GlobalAddressBook:TaxComponentDirectTax</Label>
	<TitleField1>TaxComponent</TitleField1>
	<TitleField2>TaxType</TitleField2>
	<ClusteredIndex></ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex></PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxComponent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccumulatedAmountMST</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AccumulatedAmountMST</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS25443</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AccumulatedAmountSecondary</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@GlobalAddressBook:AccumulatedAmountInReportingCurrency</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMST</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountSecondary</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS83899</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxComponent</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxComponent_IN</ExtendedDataType>
			<Label>@GlobalAddressBook:WithholdingTaxComponent</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxType</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Visible>No</Visible>
			<EnumType>TaxWithholdCodeType_IN</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>