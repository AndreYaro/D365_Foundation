<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PlanSequenceConstraintValue</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PlanSequenceConstraintValue extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean result;

        result = super(_fieldIdToCheck);

        if (result)
        {
            switch (_fieldIdToCheck)
            {
                case fieldnum(PlanSequenceConstraintValue, UnitOfMeasure):
                    result = result && UnitOfMeasure::isUnitOfClass(this.UnitOfMeasure, UnitOfMeasureClass::Time);
                    break;
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>PlanSequenceConstraintValue</c> table exists.
    /// </summary>
    /// <param name="_refRecId">
    ///    The record ID of the <c>PlanSequenceConstraintValue</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(RefRecId _refRecId)
    {
        return _refRecId &&
               (select firstonly RecId from planSequenceConstraintValue
                    where planSequenceConstraintValue.RecId == _refRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>PlanSequenceConstraintValue</c> table.
    /// </summary>
    /// <param name="_refRecId">
    ///    The record ID of the <c>PlanSequenceConstraintValue</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>PlanSequenceConstraintValue</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PlanSequenceConstraintValue find(
        RefRecId _refRecId,
        boolean  _forUpdate = false)
    {
        PlanSequenceConstraintValue    planSequenceConstraintValue;

        if (_refRecId)
        {
            planSequenceConstraintValue.selectForUpdate(_forUpdate);

            select firstonly planSequenceConstraintValue
                where planSequenceConstraintValue.RecId == _refRecId;
        }

        return planSequenceConstraintValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findConstraintRoleType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>PlanSequenceConstraintValue</c> table.
    /// </summary>
    /// <param name="_planConstraint">
    /// The record ID of the parent <c>PlanConstraint</c> record to find.
    /// </param>
    /// <param name="_constraintRoleType">
    /// The type of constraint value to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>PlanSequenceConstraintValue</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PlanSequenceConstraintValue findConstraintRoleType(
        RefRecId           _planConstraint,
        ConstraintRoleType _constraintRoleType,
        boolean            _forUpdate = false)
    {
        PlanSequenceConstraintValue    planSequenceConstraintValue;

        if (_planConstraint)
        {
            planSequenceConstraintValue.selectForUpdate(_forUpdate);

            select firstonly planSequenceConstraintValue
                where planSequenceConstraintValue.PlanConstraint == _planConstraint
                   && planSequenceConstraintValue.ConstraintValueRole == _constraintRoleType;
        }

        return planSequenceConstraintValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS320527</DeveloperDocumentation>
	<FormRef>LeanProductionFlow</FormRef>
	<Label>@SYS152590</Label>
	<SingularLabel>@SYS152589</SingularLabel>
	<TableGroup>Main</TableGroup>
	<TitleField1>PlanConstraint</TitleField1>
	<TitleField2>Value</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>MasterPlanning</Modules>
	<ReplacementKey>PlanConstraintIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PlanConstraint</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConstraintValueRole</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitOfMeasure</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PlanConstraint</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConstraintValueRole</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PlanConstraint</Name>
			<Label>@SYS152588</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PlanConstraint</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConstraintValueRole</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>UnitOfMeasure</Name>
			<Label>@SYS11959</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UnitOfMeasure</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ConstraintValueRole</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConstraintRoleType</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<EnumType>ConstraintRoleTypes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PlanConstraint</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlanConstraintRefRecid</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>UnitOfMeasure</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS96151</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Value</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ConstraintValue</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PlanConstraintIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PlanConstraint</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ConstraintValueRole</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>UnitOfMeasureIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>UnitOfMeasure</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PlanConstraint</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PlanConstraint</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Constraint</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SequenceConstraintValue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PlanConstraint</Name>
					<Field>PlanConstraint</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>UnitOfMeasure</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PlanSequenceConstraintUnit</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitOfMeasure</Name>
					<Field>UnitOfMeasure</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>