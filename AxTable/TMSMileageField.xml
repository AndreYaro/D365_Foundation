<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSMileageField</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSMileageField extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getNextSequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the next sequence id to be set to a mileage engine detail field.
    /// </summary>
    /// <param name="_mileageEngineCode">
    /// Code of the mileage engine record.
    /// </param>
    /// <returns>
    /// The next sequence id to be set a detail field.
    /// </returns>
    TMSSequence getNextSequence(TMSMileageEngineCode _mileageEngineCode)
    {
        return (select firstonly Sequence
                    from TMSMileageField
                    order by Sequence desc
                    where TMSMileageField.MileageEngineCode  == _mileageEngineCode).Sequence + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tmsMileageEngine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>TMSMileageEngine</c> record of the field.
    /// </summary>
    /// <returns>
    /// The <c>TMSMileageEngine</c> record that field belongs to.
    /// </returns>
    TMSMileageEngine tmsMileageEngine()
    {
        return TMSMileageEngine::find(this.MileageEngineCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a specific <c>TMSMileageField</c> record exists.
    /// </summary>
    /// <param name="_recId">
    /// Id of the record.
    /// </param>
    /// <returns>
    /// True if the record exists.
    /// </returns>
    public static boolean exist(RecId   _recId)
    {
        return (_recId) &&
               (select firstonly TMSMileageField
                    where tmsMileageField.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSMileageField</c> record by id.
    /// </summary>
    /// <param name="_recId">
    /// Id of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static TMSMileageField find(RecId   _recId,
                                       boolean _forupdate = false)
    {
        TMSMileageField    tmsMileageField;

        if (_recId)
        {
            tmsMileageField.selectForUpdate(_forupdate);

            select firstonly tmsMileageField
                where tmsMileageField.RecId == _recId;
        }

        return tmsMileageField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCodeSequenceAndFieldType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSMileageField</c> record by mileage engine code and sequence id.
    /// </summary>
    /// <param name="_tmsMileageEngineCode">
    /// Mileage engine code of the record.
    /// </param>
    /// <param name="_tmsSequence">
    /// Sequence of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static TMSMileageField findByCodeSequenceAndFieldType(TMSMileageEngineCode   _tmsMileageEngineCode,
                                                                 TMSSequence            _tmsSequence,
                                                                 boolean                _forupdate = false)
    {
        TMSMileageField tmsMileageField;

        if (_tmsMileageEngineCode &&
            _tmsSequence)
        {
            tmsMileageField.selectForUpdate(_forupdate);

            select firstonly tmsMileageField
                where tmsMileageField.MileageEngineCode  == _tmsMileageEngineCode &&
                      tmsMileageField.Sequence           == _tmsSequence;
        }

        return tmsMileageField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        return super() && this.validateField(fieldNum(TMSMileageField, Sequence));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);
    
        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(TMSMileageField, Sequence):
                    const int MaximumNumberOfParametersAllowed = 8;
                    if (this.Sequence > MaximumNumberOfParametersAllowed)
                    {
                        ret = checkFailed(strfmt("@TRX241", MaximumNumberOfParametersAllowed));
                    }
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.Sequence = this.getNextSequence(this.MileageEngineCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX1933</DeveloperDocumentation>
	<Label>@TRX239</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>MileageEngineCode</TitleField1>
	<TitleField2>Sequence</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Transportation</Modules>
	<PrimaryIndex>MileageEngineCodeSequenceIdx</PrimaryIndex>
	<ReplacementKey>MileageEngineCodeSequenceIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MileageEngineCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Sequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DataType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Mandatory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LookupType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MileageEngineCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Sequence</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MileageEngineCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Sequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DataType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Mandatory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LookupType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DataType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TMSDataType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LookupType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TMSLookupType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Mandatory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSMandatory</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MileageEngineCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSMileageEngineCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Sequence</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSSequence</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>MileageEngineCodeSequenceIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>MileageEngineCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Sequence</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>TMSMileageEngine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TMSMileageEngine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MileageEngineCode</Name>
					<SourceEDT>TMSMileageEngineCode</SourceEDT>
					<Field>MileageEngineCode</Field>
					<RelatedField>MileageEngineCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>