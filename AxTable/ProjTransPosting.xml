<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTransPosting</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjTransPosting extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>absRevenue</Name>
				<Source><![CDATA[
    real absRevenue()
{
    return abs(this.AmountMst);
}

]]></Source>
			</Method>
			<Method>
				<Name>costAmount</Name>
				<Source><![CDATA[
    display CostAmount costAmount()
{
    if (this.CostSales == ProjCostSales::Cost)
    {
        return this.AmountMst;
    }
    return 0;
}

]]></Source>
			</Method>
			<Method>
				<Name>costIndirectComponentGroup</Name>
				<Source><![CDATA[
    // Description:     Display method for getting the indirect component group
display PSAIndirectComponentGroupId costIndirectComponentGroup()
{
    PSAIndirectComponentTrans   tIndirectComponentTrans;

    if (isConfigurationkeyEnabled(configurationKeyNum(Project)) && this.Qty > 0)
    {
        tIndirectComponentTrans = PSAIndirectComponentTrans::findByTransId(this.TransId, PSAIndirectComponentType::Cost);
        return tIndirectComponentTrans.IndirectComponentGroup;
    }

    return '';
}

]]></Source>
			</Method>
			<Method>
				<Name>displayCategoryId</Name>
				<Source><![CDATA[
    display ProjCategoryId displayCategoryId()
{
    ProjCategoryId  projCategoryId;

    switch (this.ProjTransType)
    {
        case ProjTransType::Revenue:
            projCategoryId = ProjRevenueTrans::find(this.TransId).CategoryId;
            break;

        case ProjTransType::Hour:
            projCategoryId = ProjEmplTrans::find(this.TransId).CategoryId;
            break;

        case ProjTransType::Cost:
            projCategoryId = ProjCostTrans::find(this.TransId).CategoryId;
            break;

        case ProjTransType::Item:
            projCategoryId = InventTrans::findTransId(this.TransId).ProjCategoryId;
            break;

        default:
            projCategoryId = '';
            break;
    }

    return projCategoryId;
}

]]></Source>
			</Method>
			<Method>
				<Name>displayEmplItemId</Name>
				<Source><![CDATA[
    display ProjEmplItemId displayEmplItemId()
{
    ProjEmplItemId      emplItemId;

    switch (this.ProjTransType)
    {
        case ProjTransType::Revenue:
            if (this.TransactionOrigin == ProjOrigin::Subscription)
            {
                emplItemId  = ProjRevenueTrans::find(this.TransId).smaSubscriptionId;
            }
            else
            {
                emplItemId  = ResourceFacade::getID(ProjRevenueTrans::find(this.TransId).Resource);
            }
            break;

        case ProjTransType::Hour:
            emplItemId = ResourceFacade::getID(ProjEmplTrans::find(this.TransId).Resource);
            break;

        case ProjTransType::Cost:
            emplItemId = ResourceFacade::getID(ProjCostTrans::find(this.TransId).Resource);
            break;

        case ProjTransType::Item:
            emplItemId = InventTransOrigin::findByInventTransId(this.TransId).ItemId;
            break;

        default:
            emplItemId = '';
            break;
    }

    return emplItemId;
}

]]></Source>
			</Method>
			<Method>
				<Name>displayQty</Name>
				<Source><![CDATA[
    display ProjQty displayQty()
{
    DictTable   dictTable;
    ProjQty     projQty = 0;

    switch (this.ProjTransType)
    {
        case ProjTransType::Revenue:
            projQty = 0;
            break;

        case ProjTransType::Hour:
            dictTable = new DictTable(tableNum(ProjEmplTrans));
            if (dictTable.rights() >= AccessType::View)
            {
                projQty = ProjEmplTrans::find(this.TransId).Qty;
            }
            break;

        case ProjTransType::Cost:
            dictTable = new DictTable(tableNum(ProjCostTrans));
            if (dictTable.rights() >= AccessType::View)
            {
                projQty = ProjCostTrans::find(this.TransId).Qty;
            }
            break;

        case ProjTransType::Item:
            dictTable = new DictTable(tableNum(InventTrans));
            if (dictTable.rights() >= AccessType::View)
            {
                projQty = InventTrans::findTransId(this.TransId).Qty;
            }
            break;

        default:
            projQty = 0;
            break;
    }

    return projQty;
}

]]></Source>
			</Method>
			<Method>
				<Name>initFromLedgerPosting</Name>
				<Source><![CDATA[
    public void initFromLedgerPosting(LedgerVoucherObject _ledgerPostingReference,
                                  LedgerVoucherTransObject _ledgerPostingTransaction)
    {
        if (!this.ProjTransDate)
        {
            this.ProjTransDate = _ledgerPostingReference.parmAccountingDate();
        }

        this.LedgerTransDate = _ledgerPostingReference.parmAccountingDate();

        AmountCur transAmount;
        ProjItemTrans projItemTrans = ProjItemTrans::findInvent(this.InventTransId, this.ProjAdjustRefId);

        if (projItemTrans.AdjRefTransId
            && this.costSales == ProjCostSales::Cost
            && InventModelGroupItem::isStandardCost(projItemTrans.ItemId))
        {
            container transIdAmountContainer;

            if (projItemTrans.Qty > 0 && !projItemTrans.PSAProjOrigTransId)
            {
                SysTransactionScopeCache::clear(tableStr(ProjTransPosting));

                // Gets the original transaction amount based on reversal transaction adjustment reference Id.
                ProjItemTrans origProjItemTrans = ProjItemTrans::find(projItemTrans.AdjRefTransId);
                transAmount = abs(ProjItemTrans::costAmountTotalStatic(origProjItemTrans.InventTransId, origProjItemTrans.ProjAdjustRefId));

                transIdAmountContainer = [origProjItemTrans.ProjTransId, origProjItemTrans.Qty, transAmount, _ledgerPostingTransaction.parmAccountingCurrencyAmount()];
                SysTransactionScopeCache::set(tableStr(ProjTransPosting), projItemTrans.AdjRefTransId, transIdAmountContainer);
            }
            else if (projItemTrans.Qty < 0 && projItemTrans.PSAProjOrigTransId)
            {
                ProjItemTransId origTransId;
                AmountCur origTransAmount;
                AmountCur newTransAmount;
                Qty origQty;

                [origTransId, origQty, origTransAmount, newTransAmount] = SysTransactionScopeCache::get(tableStr(ProjTransPosting), projItemTrans.AdjRefTransId, transIdAmountContainer);

                // Correct the amounts if the original transaction Id matches on newly created adjusted transaction.
                if (origTransId && projItemTrans.PSAProjOrigTransId == origTransId)
                {
                    AmountCur costPriceVariance = (newTransAmount - origTransAmount) / abs(origQty);
                    transAmount = _ledgerPostingTransaction.parmAccountingCurrencyAmount() + (costPriceVariance * projItemTrans.Qty);
                }
                else
                {
                    transAmount = _ledgerPostingTransaction.parmAccountingCurrencyAmount();
                }
            }
            else
            {
                transAmount = _ledgerPostingTransaction.parmAccountingCurrencyAmount();
            }
        }
        else
        {
            transAmount = _ledgerPostingTransaction.parmAccountingCurrencyAmount();
        }

        if (ProjItemTrans::isStocked(this.InventTransId))
        {
            transAmount = ProjectSourceDocumentLineItemHelper::calcProjectVendorInvoiceRetentionForStockedItem(projItemTrans.VendInvoiceTransRecId, transAmount);
        }

        this.AmountMst = transAmount;

        if (!(this.TransactionOrigin == ProjOrigin::BeginningBalance && this.LedgerOrigin == ProjOrigin::Adjustment))
        {
            this.Voucher = _ledgerPostingReference.parmReferenceNumber();
        }

        this.LedgerDimension=LedgerDefaultAccountHelper::getDefaultAccountFromLedgerDimension(_ledgerPostingTransaction.parmLedgerDimensionId());

        if (_ledgerPostingTransaction.parmPostingType() == LedgerPostingType::Tax)
        {
            if (this.ProjTransType  == ProjTransType::Item && ProjRevRecHelper::getItemLedgerStatus(ProjTable::find(this.ProjId)) == ProjLedgerStatus::BalanceSheet)
            {
                this.PostingType = LedgerPostingType::ProjStatusAccountItem;
            }
            else if (this.ProjTransType == ProjTransType::Cost
                && ProjRevRecHelper::getCostLedgerStatus(ProjTable::find(this.ProjId)) == ProjLedgerStatus::BalanceSheet
                && this.checkToBeCapitalizedCostWhenTaxIsIncluded())
            {
                this.PostingType = LedgerPostingType::ProjWIPCostvalue;
            }
            else
            {
                this.PostingType = LedgerPostingType::ProjCost;
            }
        }
        else if (_ledgerPostingTransaction.parmPostingType() == LedgerPostingType::IntercompanyCost)
        {
            this.PostingType = LedgerPostingType::ProjCost;
        }
        else
        {
            this.PostingType = _ledgerPostingTransaction.parmPostingType();
        }

        this.DefaultDimension = LedgerDimensionFacade::getDefaultDimensionFromLedgerDimension(_ledgerPostingTransaction.parmLedgerDimensionId());
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProjLedger</Name>
				<Source><![CDATA[
    public void initFromProjLedger(ProjLedger projLedger)
{
    ProjRevenueTrans        projRevenueTrans;

    if (projLedger.parmProjTransType() == ProjTransType::Item &&
        projLedger.parmProjAdjustRefId() &&
        projLedger.parmInventTransId()  &&
        !ProjItemTrans::isStocked(projLedger.parmInventTransId()))
    {
        this.TransId            = ProjItemTrans::findInvent(projLedger.parmInventTransId(), projLedger.parmProjAdjustRefId()).ProjTransId;
    }
    else if (projLedger.parmProjTransType() == ProjTransType::Hour)
    {
        ProjEmplTrans           projEmplTrans;
        ProjEmplTransCost       projEmplTransCost;

        ProjEmplTransId transId = projLedger.parmProjTransId();

        select firstonly TransId from projEmplTrans
            where projEmplTrans.AdjRefTransId == transId
        exists join projEmplTransCost
            where projEmplTrans.TransId == projEmplTransCost.TransId &&
                projEmplTransCost.TransStatus == ProjTransStatus::Adjusted;

        if (projEmplTrans.TransId)
        {
            this.TransId = projEmplTrans.TransId;
        }
        else
        {
            this.TransId = transId;
        }
    }
    else
    {
        this.TransId           = projLedger.parmProjTransId();
    }

    this.ProjId            = projLedger.parmProjId();
    this.ProjType          = ProjTable::find(this.ProjId).Type;
    this.CategoryId        = projLedger.parmProjCategoryId();
    this.EmplItemId        = projLedger.parmProjEmplItemId();
    this.Resource          = projLedger.parmResource();
    this.ResourceCategory  = projLedger.parmResourceCategory();
    this.ActivityNumber    = projLedger.parmActivityNumber();
    this.ProjFundingSource = projLedger.parmfundingSourceID();

    if (! projLedger.parmTransEqualLedgerDate())
    {
        this.ProjTransDate  = projLedger.parmProjTransDate();
    }

    this.CostSales      = projLedger.parmCostSales();
    this.ProjTransType  = projLedger.parmProjTransType();

    if (this.ProjTransType  == ProjTransType::Hour)
    {
        this.Qty          = projLedger.parmProjQty();
    }

    this.InventTransId    = projLedger.parmInventTransId();
    this.ProjAdjustRefId  = projLedger.parmProjAdjustRefId();

    projRevenueTrans = ProjRevenueTrans::find(this.TransId);

    this.TransactionOrigin  = projLedger.parmTransactionOrigin();
    this.LedgerOrigin       = projLedger.parmLedgerOrigin();

    if (this.TransactionOrigin == ProjOrigin::Subscription)
    {
        this.SubscriptionId = projRevenueTrans.smaSubscriptionId;
        this.EmplItemId = projRevenueTrans.smaSubscriptionId;
    }
}

]]></Source>
			</Method>
			<Method>
				<Name>inventPostedProfitLoss</Name>
				<Source><![CDATA[
    display CostAmountProject inventPostedProfitLoss()
{
    return ProjTransPosting::inventPostedProfitLossStatic(this.TransId, this.ProjAdjustRefId);
}

]]></Source>
			</Method>
			<Method>
				<Name>projectPostedBalance</Name>
				<Source><![CDATA[
    display AmountMST projectPostedBalance()
{
    return ProjTransPosting::projectPostedBalanceStatic(this.TransId);
}

]]></Source>
			</Method>
			<Method>
				<Name>projectPostedProfitLoss</Name>
				<Source><![CDATA[
    display CostAmountProject projectPostedProfitLoss()
{
    return (select sum(AmountMst) from projTransPosting
            where projTransPosting.TransId          == this.TransId                                     &&
                  projTransPosting.PostingType      == LedgerPostingType::ProjOffsetAccountItem         &&
                  projTransPosting.ProjTransType    == ProjTransType::Item).AmountMst;
}

]]></Source>
			</Method>
			<Method>
				<Name>salesAmount</Name>
				<Source><![CDATA[
    display ProjSalesAmount salesAmount()
{
    if (this.CostSales == ProjCostSales::Sales)
    {
        return this.AmountMst;
    }

    return 0;
}

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
{
    boolean ret;

    ret = super();

    if (ret)
    {
        ret = ProjTransPosting::checkProjPostingType(this.PostingType);
    }

    if (ret && this.PaymentStatus == ProjPaymentStatus::ExpectedPayment && !this.PaymentDate)
    {
        ret = checkFailed("@SYS112956");
    }

    return ret;
}

]]></Source>
			</Method>
			<Method>
				<Name>balanceLedgerDimensionDate</Name>
				<Source><![CDATA[
    public static AmountMST balanceLedgerDimensionDate(ProjTransIdBase                  _transId,
                                                   LedgerDimensionDefaultAccount    _ledgerDimension,
                                                   TransDate                        _transDate = dateMax())
{
    return (select sum(AmountMst) from projTransPosting
                where projTransPosting.TransId          == _transId &&
                      projTransPosting.LedgerDimension  == _ledgerDimension &&
                      projTransPosting.LedgerTransDate  <= _transDate).AmountMst;
}

]]></Source>
			</Method>
			<Method>
				<Name>checkActivated</Name>
				<Source><![CDATA[
    public static boolean checkActivated(LedgerPostingType _postingType)
{
    return (_postingType == LedgerPostingType::ProjWIPCostvalue          ||
            _postingType == LedgerPostingType::ProjStatusAccountItem     ||
            _postingType == LedgerPostingType::ProjWIPProduction         ||
            _postingType == LedgerPostingType::ProjWIPProfit             ||
            _postingType == LedgerPostingType::ProjSalesvalueOffset      ||
            _postingType == LedgerPostingType::ProjWIPInvoicedOnAccount  ||
            _postingType == LedgerPostingType::ProjWIPSubscription       ||
            _postingType == LedgerPostingType::ProjWIPCost);
}

]]></Source>
			</Method>
			<Method>
				<Name>checkCostTransaction</Name>
				<Source><![CDATA[
    public static boolean checkCostTransaction(LedgerPostingType _postingType)
{
    return (_postingType == LedgerPostingType::ProjCost                ||
            _postingType == LedgerPostingType::ProjOffsetAccountItem   ||
            _postingType == LedgerPostingType::ProjStatusAccountItem   ||
            _postingType == LedgerPostingType::ProjWIPCostvalue);
}

]]></Source>
			</Method>
			<Method>
				<Name>checkOnAccount</Name>
				<Source><![CDATA[
    public static boolean checkOnAccount(LedgerPostingType _postingType)
{
    return (_postingType == LedgerPostingType::ProjOnAccount ||
        _postingType == LedgerPostingType::ProjWIPInvoicedOnAccount ||
        _postingType == LedgerPostingType::ProjAccruedRevenueOnAccount);
}

]]></Source>
			</Method>
			<Method>
				<Name>checkOperations</Name>
				<Source><![CDATA[
    public static boolean checkOperations(LedgerPostingType _postingType, boolean _exclPayRoll = false)
{
    return (_postingType == LedgerPostingType::ProjCost                                  ||
            _postingType == LedgerPostingType::ProjTurnover                              ||
            _postingType == LedgerPostingType::ProjSalesvalue                            ||
            _postingType == LedgerPostingType::ProjOnAccount                             ||
            _postingType == LedgerPostingType::ProjOffsetAccountItem                     ||
            _postingType == LedgerPostingType::ProjAccruedTurnoverProd                   ||
           (_postingType == LedgerPostingType::ProjPayrollAllocation && !_exclPayRoll)   ||
            _postingType == LedgerPostingType::ProJAccruedTurnoverProfit                 ||
            _postingType == LedgerPostingType::ProjAccruedRevenueOnAccount               ||
            _postingType == LedgerPostingType::ProjAccruedRevenueSubscription            ||
            _postingType == LedgerPostingType::ProjAccruedCost);
}

]]></Source>
			</Method>
			<Method>
				<Name>checkPayRollTrans</Name>
				<Source><![CDATA[
    public static boolean checkPayRollTrans(LedgerPostingType _postingType)
{
    return (_postingType == LedgerPostingType::ProjPayrollAllocation);
}

]]></Source>
			</Method>
			<Method>
				<Name>checkProfitLossLedgerDimension</Name>
				<Source><![CDATA[
    public static boolean checkProfitLossLedgerDimension(LedgerDimensionDefaultAccount _ledgerDimension)
{
    MainAccount             mainAccount;

    mainAccount = MainAccount::findByMainAccountId(LedgerDimensionFacade::getMainAccountIdFromLedgerDimension(_ledgerDimension));

    return (mainAccount.isProfitAndLossAccount());
}

]]></Source>
			</Method>
			<Method>
				<Name>checkProjPostingType</Name>
				<Source><![CDATA[
    static boolean checkProjPostingType(LedgerPostingType _postingType)
{
    return (_postingType        == LedgerPostingType::ProjCost                       ||
            _postingType        == LedgerPostingType::ProjTurnover                   ||
            _postingType        == LedgerPostingType::ProjSalesvalue                 ||
            _postingType        == LedgerPostingType::ProjOnAccount                  ||
            _postingType        == LedgerPostingType::ProjOffsetAccountItem          ||
            _postingType        == LedgerPostingType::ProjAccruedTurnoverProd        ||
            _postingType        == LedgerPostingType::ProJAccruedTurnoverProfit      ||
            _postingType        == LedgerPostingType::ProjWIPCostvalue               ||
            _postingType        == LedgerPostingType::ProjStatusAccountItem          ||
            _postingType        == LedgerPostingType::ProjWIPProduction              ||
            _postingType        == LedgerPostingType::ProjWIPProfit                  ||
            _postingType        == LedgerPostingType::ProjSalesvalueOffset           ||
            _postingType        == LedgerPostingType::ProjPayrollAllocation          ||
            _postingType        == LedgerPostingType::ProjNeverLedger                ||
            _postingType        == LedgerPostingType::ProjAccruedCost                ||
            _postingType        == LedgerPostingType::ProjWIPCost                    ||
            _postingType        == LedgerPostingType::ProjAccruedRevenueOnAccount    ||
            _postingType        == LedgerPostingType::ProjWIPInvoicedOnAccount       ||
            _postingType        == LedgerPostingType::ProjNoLedger                   ||
            _postingType        == LedgerPostingType::ProjAccruedRevenueSubscription ||
            (isConfigurationkeyEnabled(configurationKeyNum(Project)) ? _postingType == LedgerPostingType::PSAProjRetain: true) ||
            _postingType        == LedgerPostingType::ProjWIPSubscription);
}

]]></Source>
			</Method>
			<Method>
				<Name>checkStatusLedgerDimension</Name>
				<Source><![CDATA[
    public static boolean checkStatusLedgerDimension(LedgerDimensionDefaultAccount _ledgerDimension)
{
    MainAccount             mainAccount;

    mainAccount = MainAccount::findByMainAccountId(LedgerDimensionFacade::getMainAccountIdFromLedgerDimension(_ledgerDimension));

    return (mainAccount.isBalanceSheetAccount());
}

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean exist(TransDate _transDate, Voucher _voucher, InventTransId _transId)
{
    return (select firstonly RecId from projTransPosting
                where projTransPosting.ProjTransDate    == _transDate   &&
                      projTransPosting.Voucher          == _voucher     &&
                      projTransPosting.TransId          == _transId
           ).RecId != 0;
}

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static ProjTransPosting find(TransDate         _transDate,
                             Voucher           _voucher,
                             InventTransId     _transId,
                             boolean           _forUpdate = false)
{
    ProjTransPosting  projTransPosting = null;

    projTransPosting.selectForUpdate(_forUpdate);
    projTransPosting.selectLocked(_forUpdate);

    if (_transDate && _voucher && _transId)
    {
        select firstonly projTransPosting
            where projTransPosting.ProjTransDate       == _transDate   &&
                  projTransPosting.Voucher             == _voucher     &&
                  projTransPosting.TransId             == _transId;
    }

    return projTransPosting;
}

]]></Source>
			</Method>
			<Method>
				<Name>findTransId</Name>
				<Source><![CDATA[
    public static ProjTransPosting findTransId(ProjTransIdBase _transId, boolean _forupdate = false)
{
    ProjTransPosting  projTransPosting = null;

    projTransPosting.selectForUpdate(_forupdate);
    projTransPosting.selectLocked(_forupdate);

    if (_transId)
    {
        select firstonly projTransPosting where projTransPosting.TransId == _transId;
    }

    return projTransPosting;
}

]]></Source>
			</Method>
			<Method>
				<Name>inventPostedProfitLossStatic</Name>
				<Source><![CDATA[
    static CostAmountProject inventPostedProfitLossStatic(InventTransId      _inventTransId,
                                                             ProjAdjustRefId    _projAdjustRefId)
{
    return (select sum(AmountMst) from projTransPosting
            where projTransPosting.InventTransId    == _inventTransId               &&
                  projTransPosting.ProjAdjustRefId  == _projAdjustRefId             &&
                  projTransPosting.PostingType      == LedgerPostingType::ProjCost  &&
                  projTransPosting.ProjTransType    == ProjTransType::Item).AmountMst;
}

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefVoucher</Name>
				<Source><![CDATA[
    static void jumpRefVoucher(ProjTransPosting _projTransPosting, Object _caller)
{
    Args args = new Args();

    args.caller(_caller);
    args.record(_projTransPosting);
    args.parmEnum(NoYes::Yes);

    new MenuFunction(menuitemDisplayStr(LedgerTransVoucher), MenuItemType::Display).run(args);
}

]]></Source>
			</Method>
			<Method>
				<Name>projectPostedBalanceStatic</Name>
				<Source><![CDATA[
    public static AmountMST projectPostedBalanceStatic(Num _transId)
{
    return (select sum(AmountMst) from projTransPosting
            where projTransPosting.TransId          == _transId                                 &&
                  projTransPosting.PostingType      == LedgerPostingType::ProjStatusAccountItem &&
                  projTransPosting.ProjTransType    == ProjTransType::Item).AmountMst;
}

]]></Source>
			</Method>
			<Method>
				<Name>resourceDataArea</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display method used to display the data area ID of a resource.
    /// </summary>
    /// <returns>
    /// Returns the data area ID of a resource.
    /// </returns>
    display DataAreaId resourceDataArea()
    {
        if (this.Resource)
        {
            return ResourceFacade::getLegalEntityId(this.Resource);
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkToBeCapitalizedCostWhenTaxIsIncluded</Name>
				<Source><![CDATA[
    private boolean checkToBeCapitalizedCostWhenTaxIsIncluded()
    {
        if (this.TransId
            && this.ProjTransType == ProjTransType::Cost)
        {
            ProjLineProperty projLineProperty;
            ProjCostTrans projCostTrans;

            select firstonly ToBeCapitalize from projLineProperty
                exists join projCostTrans
                    where projCostTrans.TransId == this.TransId
                        && projLineProperty.LinePropertyId == projCostTrans.LinePropertyId;

            return projLineProperty.ToBeCapitalize == NoYes::Yes ? true : false;
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS124927</DeveloperDocumentation>
	<Label>@SYS70093</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ProjId</TitleField1>
	<TitleField2>Voucher</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>TransIdx</ClusteredIndex>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMst</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS53072</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>costSales</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMst</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjTransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActivityNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmplItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubscriptionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Items</Name>
			<Label>@SYS15649</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjAdjustRefId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Ledger</Name>
			<Label>@SYS13356</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerTransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerOrigin</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS55132</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Project</Name>
			<Label>@SYS4534</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmplItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjTransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjFundingSource</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transaction</Name>
			<Label>@SYS15191</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionOrigin</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ActivityNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjActivityNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMst</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>costSales</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjCostSales</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EmplItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjEmplItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LedgerOrigin</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjLedgerOrigin</ExtendedDataType>
			<EnumType>ProjOrigin</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>LedgerTransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS23410</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PaymentDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjPaymentDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PaymentStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjPaymentStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostingType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>LedgerPostingType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjAdjustRefId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjAdjustRefId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProjFundingSource</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjFundingSourceRefId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ProjTransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjTransDate</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProjTransType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProjType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjQtyEmpl</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Resource</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ResourceRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ResourceCategory</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ResourceCategoryRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ResourceLegalEntity</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>CompanyInfoRecId</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SubscriptionId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMASubscriptionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransactionOrigin</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjTransactionOrigin</ExtendedDataType>
			<EnumType>ProjOrigin</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS25395</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>ProjWorkerRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkerLegalEntity</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>CompanyInfoRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VoucherDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProjIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CategoryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CategoryId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EmplItemIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>EmplItemId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DefaultDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefaultDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProjFundingSourceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjFundingSource</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SubscriptionIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SubscriptionId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReportOptionsIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LedgerTransDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjTransDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjTransType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PostingType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DefaultDimension</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Qty</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AmountMst</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BudgetIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TransId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProjTransTypeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjTransType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventTransIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueSet</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueSet_ProjTransPosting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124930</EntityRelationshipRole>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::Item</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Item</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124931</EntityRelationshipRole>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::Item</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>EmplItemId</Name>
					<Field>EmplItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueCombination_ProjTransPosting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryId</Name>
					<SourceEDT>ProjCategoryId</SourceEDT>
					<Field>CategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>projControlPeriodTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124932</EntityRelationshipRole>
			<RelatedTable>ProjControlPeriodTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::WIP</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransId</Name>
					<Field>TransId</Field>
					<RelatedField>TransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjCostTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124933</EntityRelationshipRole>
			<RelatedTable>ProjCostTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::Cost</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransId</Name>
					<Field>TransId</Field>
					<RelatedField>TransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjEmplTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124933</EntityRelationshipRole>
			<RelatedTable>ProjEmplTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::Hour</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransId</Name>
					<Field>TransId</Field>
					<RelatedField>TransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjFundingSource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjFundingSource</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjFundingSource</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjFundingSource_ProjTransPosting</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjFundingSource</Name>
					<Field>ProjFundingSource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>projInvoiceCost</Name>
			<EntityRelationshipRole>@SYS124934</EntityRelationshipRole>
			<RelatedTable>ProjInvoiceCost</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::Cost</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransId</Name>
					<Field>TransId</Field>
					<RelatedField>TransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>projInvoiceEmpl</Name>
			<EntityRelationshipRole>@SYS124935</EntityRelationshipRole>
			<RelatedTable>ProjInvoiceEmpl</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::Hour</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransId</Name>
					<Field>TransId</Field>
					<RelatedField>TransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>projInvoiceItem</Name>
			<EntityRelationshipRole>@SYS124936</EntityRelationshipRole>
			<RelatedTable>ProjInvoiceItem</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransId</Name>
					<Field>TransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::Item</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>projInvoiceOnAcc</Name>
			<EntityRelationshipRole>@SYS124937</EntityRelationshipRole>
			<RelatedTable>ProjInvoiceOnAcc</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::OnAccount</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransId</Name>
					<Field>TransId</Field>
					<RelatedField>TransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>projInvoiceRevenue</Name>
			<EntityRelationshipRole>@SYS124938</EntityRelationshipRole>
			<RelatedTable>ProjInvoiceRevenue</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::Revenue</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransId</Name>
					<Field>TransId</Field>
					<RelatedField>TransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjItemTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124933</EntityRelationshipRole>
			<RelatedTable>ProjItemTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::Item</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransId</Name>
					<Field>TransId</Field>
					<RelatedField>ProjTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjOnAccTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124933</EntityRelationshipRole>
			<RelatedTable>ProjOnAccTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::OnAccount</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransId</Name>
					<Field>TransId</Field>
					<RelatedField>TransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProjRevenueTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124933</EntityRelationshipRole>
			<RelatedTable>ProjRevenueTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::Revenue</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransId</Name>
					<Field>TransId</Field>
					<RelatedField>TransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<SourceEDT>ProjId</SourceEDT>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProjectIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Resource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResourceView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Resource</Name>
					<Field>Resource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ResourceCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResourceCategoryView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ResourceCategory</Name>
					<Field>ResourceCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmActivities</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>smmActivities</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ActivityNumber</Name>
					<SourceEDT>ProjActivityNumber</SourceEDT>
					<Field>ActivityNumber</Field>
					<RelatedField>ActivityNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ActivityNumberIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Subscription</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124940</EntityRelationshipRole>
			<RelatedTable>SMASubscriptionTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SubscriptionId</Name>
					<SourceEDT>SMASubscriptionId</SourceEDT>
					<Field>SubscriptionId</Field>
					<RelatedField>SubscriptionId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ProjTransType</Name>
					<Field>ProjTransType</Field>
					<ValueStr>ProjTransType::Revenue</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>LedgerOrigin</Name>
					<Field>LedgerOrigin</Field>
					<ValueStr>ProjOrigin::Subscription</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>