<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqDemPlanModelVariables</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqDemPlanModelVariables extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>aggregateVariables</Name>
				<Source><![CDATA[
    /// <summary>
    /// Aggregates the demand forecast model variable information based on the specified criteria.
    /// </summary>
    /// <param name = "_aggregatedForecast">The aggregated forecast record that defines the filter criteria for model variables.</param>
    /// <param name = "_attributeManager">The attribute manager that provides the list of the pivot attributes that should be taken into account when filtering data.</param>
    /// <returns>The results of the aggregation.</returns>
    public static ReqDemPlanAggregateModelVariables aggregateVariables(
        ReqDemPlanAggregatedForecast        _aggregatedForecast,
        ReqDemPlanForecastAttributeManager  _attributeManager = ReqDemPlanForecastAttributeManager::construct())
    {
        var query = new Query();
        query.allowCrossCompany(true);
        var dataSource = query.addDataSource(tableNum(ReqDemPlanModelVariables));

        var pivotAttributes = _attributeManager.getAllPivotAttributes();
        var aggregationFields = _attributeManager.getAttributeFields(_aggregatedForecast.TableId, pivotAttributes);
        var modelVarFields = _attributeManager.getAttributeFields(tableNum(ReqDemPlanModelVariables), pivotAttributes);

        var aggregationEnumerator = aggregationFields.getEnumerator();
        var modelVarEnumerator = modelVarFields.getEnumerator();

        while (aggregationEnumerator.moveNext() && modelVarEnumerator.moveNext())
        {
            var aggregationValue = _aggregatedForecast.(aggregationEnumerator.current());
            var fieldId = modelVarEnumerator.current();
            if (fieldId == fieldnum(ReqDemPlanModelVariables, DataAreaId))
            {
                query.addCompanyRange(aggregationValue);
            }
            else
            {
                query.addQueryFilter(dataSource, fieldId2Name(tableNum(ReqDemPlanModelVariables), fieldId))
                    .value(queryValue(aggregationValue));
            }
        }

        dataSource.fields().clearFieldList();
        dataSource.fields().addField(fieldNum(ReqDemPlanModelVariables, RecId), SelectionField::Count);
        dataSource.fields().addField(fieldNum(ReqDemPlanModelVariables, ErrorPercentage), SelectionField::Sum);
        dataSource.addGroupByField(fieldNum(ReqDemPlanModelVariables, ForecastModelName));

        int64 aggregateRowsCount = 0;
        ReqDemPlanErrorPercentage errorPercentageSum = 0;
        ReqDemPlanModelNames modelNames = '';
        str modelNamesSeparator = '';
        int64 modelsCount = 0;
        boolean forecastGenerationFailed = false;

        var queryRun = new QueryRun(query);
        while (queryRun.next())
        {
            ReqDemPlanModelVariables modelVariables = queryRun.get(tableNum(ReqDemPlanModelVariables));

            int64 groupRecordsCount = modelVariables.RecId;
            aggregateRowsCount += groupRecordsCount;
            errorPercentageSum += modelVariables.ErrorPercentage;

            if (modelVariables.isForecastGenerationFailed())
            {
                forecastGenerationFailed = true;
            }
            else
            {
                modelNames += modelNamesSeparator + modelVariables.ForecastModelName;
                modelNamesSeparator = ', ';
                modelsCount++;
            }
        }

        var result = ReqDemPlanAggregateModelVariables::construct();

        result.parmAggregateRowsCount(aggregateRowsCount);
        result.parmErrorPercentage(aggregateRowsCount > 0 ? errorPercentageSum / aggregateRowsCount : 0);
        result.parmForecastModelNames(modelNames);
        result.parmForecastModelsCount(modelsCount);
        result.parmForecastGenerationFailed(forecastGenerationFailed);

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isForecastGenerationFailed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether forecast generation failed.
    /// </summary>
    /// <returns>True if forecast generation failed; otherwhise false</returns>
    public boolean isForecastGenerationFailed()
    {
        return this.ForecastModelName == '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || ReqEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ReqDemandPlanning</ConfigurationKey>
	<Label>@DMP:TableModelVariables</Label>
	<TitleField1>AllocationKey</TitleField1>
	<TitleField2>ErrorPercentage</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>MasterPlanning</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ErrorPercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllocationKey</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Color</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Configuration</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogisticsAddressStateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LogisticsCountryRegionCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Site</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Size</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Style</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Warehouse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ErrorPercentage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqDemPlanErrorPercentage</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Color</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResColorName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AllocationKey</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ForecastItemAllocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Configuration</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResConfigurationName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Label>@SYS7407</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LogisticsAddressStateId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressStateId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LogisticsCountryRegionCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressCountryRegionId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Site</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Size</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResSizeName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StatusId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSInventStatusId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Style</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResItemStyleName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProductVersion</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResItemVersionName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Warehouse</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ForecastModelName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReqDemPlanModelName</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResVersion</Name>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>EcoResVersion</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProductVersion</Name>
					<Field>ProductVersion</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>