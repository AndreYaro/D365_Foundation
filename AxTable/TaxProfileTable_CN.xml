<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxProfileTable_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxProfileTable_CN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.Separator = TaxSeparator_CN::DoubleTilde;
        this.IsAddMiscCharges = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDirectlyExport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether to do direct export.
    /// </summary>
    /// <returns>
    /// True if we do direct export; otherwise, false.
    /// </returns>
    public boolean isDirectlyExport()
    {
        return this.IsValidateAmountLimit && this.DirectExport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSplitDuringPosting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether to split during posting.
    /// </summary>
    /// <returns>
    /// True if split during posting; otherwise, false.
    /// </returns>
    public boolean isSplitDuringPosting()
    {
        return this.IsValidateAmountLimit && this.IsSplitDuringPosting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValidatingAmountLimit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether amount limitation is validated.
    /// </summary>
    /// <returns>
    /// True if amount limitation is validated; otherwise, false.
    /// </returns>
    public boolean isValidatingAmountLimit()
    {
        return this.IsValidateAmountLimit && !this.IsSplitDuringPosting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the field value when the specific field is modified.
    /// </summary>
    /// <param name="_fieldName">
    /// A string that contains the field name.
    /// </param>
    /// <param name="_arrayIndex">
    /// An integer that contains the array index, which applies only if the field has array elements.
    /// </param>
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldStr(TaxProfileTable_CN, DirectExport) :
                if (this.orig().DirectExport != this.DirectExport
                    && !this.ExportFormatMapping)
                {
                    // Tax integration export format has not been setup.
                    checkFailed("@GLS222757");
                }
                break;

            case fieldStr(TaxProfileTable_CN, IsValidateAmountLimit) :
                if (!this.IsValidateAmountLimit)
                {
                    this.IsSplitDuringPosting = false;
                    this.DirectExport = false;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the TaxProfileTable_CN table; if not, an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the TaxProfileTable_CN record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RecId _recId)
    {
        boolean isExisting = true;

        if (!TaxProfileTable_CN::exist(_recId))
        {
            isExisting = checkFailed(strFmt(TaxProfileTable_CN::txtNotExist(), _recId));
        }

        return isExisting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the TaxProfileId_CN table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the TaxProfileId_CN record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        boolean found;

        found = (select firstonly RecId
                    from taxProfileTable_CN
                    where taxProfileTable_CN.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByProfileId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the TaxProfileTable_CN table exists based on Natural key profileId.
    /// </summary>
    /// <param name="_profileId">
    /// The profile ID of the TaxProfileTable_CN record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean existByProfileId(TaxProfileId_CN _profileId)
    {
        boolean found;

        found = (select firstOnly RecId
                    from taxProfileTable_CN
                    where taxProfileTable_CN.ProfileId == _profileId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existByTaxCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the TaxProfileTable_CN table exists based on param _taxCode.
    /// </summary>
    /// <param name="_taxCode">
    /// Sales tax code
    /// </param>
    /// <returns>
    /// return true if record is found.
    /// </returns>
    /// <remarks>
    /// This is used by display method "TaxIntegrated_CN" on Table "TaxTable".
    /// </remarks>
    public static boolean existByTaxCode(TaxCode  _taxCode)
    {
        boolean found;

        found = (select firstonly RecId
                    from taxProfileTable_CN
                    where taxProfileTable_CN.TaxCode == _taxCode).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the TaxProfileTable_CN table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the TaxProfileTable_CN record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the TaxProfileTable_CN table; otherwise, an empty record.
    /// </returns>
    public static TaxProfileTable_CN find(
        RecId            _recId,
        boolean          _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxProfileTable_CN taxProfileTable;

        taxProfileTable.selectForUpdate(_forUpdate);
        if (_forUpdate
            && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxProfileTable.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxProfileTable
            where taxProfileTable.RecId == _recId;

        return taxProfileTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCustInvoiceTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the TaxProfileTable_CN table based on Natural Key ProfileId.
    /// </summary>
    /// <param name="_custInvoiceTableId">
    /// The CustInvoiceJour id of the TaxProfileTable_CN record.
    /// </param>
    /// <returns>
    /// A record in the TaxProfileTable_CN table; otherwise, an empty record.
    /// </returns>
    static public TaxProfileTable_CN findByCustInvoiceTable(RecId _custInvoiceTableId)
    {
        CustInvoiceLine         custInvoiceLine;
        TaxGroupData            localTaxGroupData;
        TaxOnItem               localTaxOnItem;
        TaxProfileTable_CN      taxProfileTable;

        select firstonly taxProfileTable
            exists join TaxCode, TaxGroup from localTaxGroupData
                where localTaxGroupData.TaxCode == taxProfileTable.TaxCode
                exists join TaxItemGroup, TaxCode from localTaxOnItem
                    where localTaxOnItem.TaxCode    == localTaxGroupData.TaxCode
                    exists join custInvoiceLine
                        where custInvoiceLine.ParentRecId    == _custInvoiceTableId
                            && custInvoiceLine.TaxGroup      == localTaxGroupData.TaxGroup
                            &&  custInvoiceLine.TaxItemGroup == localTaxOnItem.TaxItemGroup;

        return taxProfileTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProfileId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the TaxProfileTable_CN table based on Natural Key ProfileId.
    /// </summary>
    /// <param name="_profileId">
    /// The profile id of the TaxProfileTable_CN record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the TaxProfileTable_CN table; otherwise, an empty record.
    /// </returns>
    public static TaxProfileTable_CN findByProfileId(
        TaxProfileId_CN _profileId,
        boolean         _forUpdate = false)
    {
        TaxProfileTable_CN taxProfileTable;

        taxProfileTable.selectForUpdate(_forUpdate);

        select firstonly taxProfileTable
            where taxProfileTable.ProfileId == _profileId;

        return taxProfileTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProjInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the TaxProfileTable_CN table based on Natural Key ProfileId.
    /// </summary>
    /// <param name="_projInvoiceId">
    /// The projProposalJour id of the TaxProfileTable_CN record.
    /// </param>
    /// <returns>
    /// A record in the TaxProfileTable_CN table; otherwise, an empty record.
    /// </returns>
    static public TaxProfileTable_CN findByProjInvoiceJour(ProjInvoiceId _projInvoiceId)
    {
        ProjInvoiceItem         projInvoiceItem;
        TaxGroupData            localTaxGroupData;
        TaxOnItem               localTaxOnItem;
        TaxProfileTable_CN      taxProfileTable;

        select firstonly taxProfileTable
            exists join TaxCode, TaxGroup from localTaxGroupData
                where localTaxGroupData.TaxCode == taxProfileTable.TaxCode
                exists join TaxItemGroup, TaxCode from localTaxOnItem
                    where localTaxOnItem.TaxCode    == localTaxGroupData.TaxCode
                    exists join ProjInvoiceId, TaxGroupId, TaxItemGroupId from projInvoiceItem
                        where projInvoiceItem.ProjInvoiceId    == _projInvoiceId
                            && projInvoiceItem.TaxGroupId      == localTaxGroupData.TaxGroup
                            &&  projInvoiceItem.TaxItemGroupId == localTaxOnItem.TaxItemGroup;

        return taxProfileTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTaxCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds record that contains the parameter values: taxCode.
    /// </summary>
    /// <param name="_taxCode">
    /// Sales tax code
    /// </param>
    /// <param name="_forupdate">
    /// Sets table variable for no data modification.
    /// </param>
    /// <returns>
    /// return found record.
    /// </returns>
    public static TaxProfileTable_CN findByTaxCode(
        TaxCode                    _taxCode,
        boolean                    _forupdate = false)
    {
        TaxProfileTable_CN  taxProfileTable;

        if (_forupdate)
        {
            taxProfileTable.selectForUpdate(_forupdate);
        }

        select firstonly taxProfileTable
            where taxProfileTable.TaxCode == _taxCode;

        return taxProfileTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the message to use when a specific record in the TaxProfileTable_CN table does not exist.
    /// </summary>
    /// <returns>
    /// The message that indicates a record does not exists.
    /// </returns>
    static TxtNotExist txtNotExist()
    {
        //Profile '%1' does not exist.
        return "@GLS54819";
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupCommodityCodeHierarchy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the lookup of commodity code category hierarchy.
    /// </summary>
    /// <param name="_caller">
    /// Control to perform the lookup on.
    /// </param>
    /// <returns>
    /// The selected record.
    /// </returns>
    public static Common lookupCommodityCodeHierarchy(FormReferenceControl _caller)
    {
        Query query = new Query();
        QueryBuildDataSource qbds = query.addDataSource(tablenum(EcoResCategoryHierarchy), tablestr(EcoResCategoryHierarchy));

        QueryBuildRange qbr = qbds.addRange(fieldnum(EcoResCategoryHierarchy, HierarchyModifier));
        qbr.value(queryValue(EcoResCategoryHierarchyModifier::Category));
        qbr.status(RangeStatus::Hidden);

        qbds = qbds.addDataSource(tableNum(EcoResCategoryHierarchyRole));
        qbds.relations(true);
        qbds.joinMode(JoinMode::ExistsJoin);

        qbr = qbds.addRange(fieldnum(EcoResCategoryHierarchyRole, NamedCategoryHierarchyRole));
        qbr.value(queryValue(EcoResCategoryNamedHierarchyRole::Commodity));
        qbr.status(RangeStatus::Hidden);

        SysReferenceTableLookup lookup = SysReferenceTableLookup::newParameters(tablenum(EcoResCategoryHierarchy), _caller);
        lookup.parmQuery(query);
        lookup.addLookupfield(fieldnum(EcoResCategoryHierarchy, Name));

        return lookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveCommodityCodeHierarchy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a record in the <c>EcoResCategoryHierarchy</c> table that is referenced in the form reference control.
    /// </summary>
    /// <param name="_caller">
    /// The calling form reference control.
    /// </param>
    /// <returns>
    /// The <c>EcoResCategoryHierarchy</c> record that is referenced in the form reference control.
    /// </returns>
    public static Common resolveCommodityCodeHierarchy(FormReferenceControl _caller)
    {
        EcoResCategoryHierarchy categoryHierarchy;
        EcoResCategoryHierarchyRole categoryHierarchyRole;
        EcoResCategoryHierarchyName name;

        name = _caller.filterValue(AbsoluteFieldBinding::construct(fieldStr(EcoResCategoryHierarchy, Name), tableStr(EcoResCategoryHierarchy))).value();

        select firstonly categoryHierarchy where categoryHierarchy.Name == name
            exists join categoryHierarchyRole
                where categoryHierarchyRole.CategoryHierarchy == categoryHierarchy.RecId
                    && categoryHierarchyRole.NamedCategoryHierarchyRole == EcoResCategoryNamedHierarchyRole::Commodity;

        return categoryHierarchy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<CountryRegionCodes>CN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS63930</DeveloperDocumentation>
	<Label>@GLS54834</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ProfileId</TitleField1>
	<TitleField2>Name</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>Tax</Modules>
	<ReplacementKey>ProfileIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProfileId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Export</Name>
			<Label>@SYS26056</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IncludeTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultCommodity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAuditorWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentCollectorWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExportFormatMapping</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CommodityHierachy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CommodityCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ExportFileFormat</Name>
			<Label>@GLS220689</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IncludeTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateFormat</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Setup</Name>
			<Label>@SYS26269</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxInvoiceAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaxInvoiceLines</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsValidateAmountLimit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSplitDuringPosting</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DirectExport</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Statistic</Name>
			<Label>@SYS15560</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxRate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Symbol</Name>
			<Label>@SYS8483</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DisplaySign</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CommentSymbol</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Separator</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DateFormat</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Others</Name>
			<Label>@SYS118908</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsNonDeductibleVATInvoice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsDuplicatedVATInvNumAllowed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreditNoteMemo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsAddMiscCharges</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Import</Name>
			<Label>@ApplicationFoundation:DMFImportOperation</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ImportModelMapping</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CommentSymbol</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxCommentSymbol_CN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DateFormat</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxDateFormat_CN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultCommodity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemCodeStr</ExtendedDataType>
			<Label>@GLS220690</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DirectExport</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxExportDirect_CN</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DisplaySign</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxDisplaySign_CN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IncludeTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxIncludeAmount_CN</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InvoiceAuditorWorker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
			<Label>@SYS4002244</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsSplitDuringPosting</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS4002241</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsValidateAmountLimit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS4002208</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaxInvoiceAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
			<Label>@GLS60716</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MaxInvoiceLines</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Integer</ExtendedDataType>
			<Label>@GLS60714</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@GLS54821</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PaymentCollectorWorker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
			<Label>@SYS4002245</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProfileId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxProfileId_CN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Separator</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxSeparator_CN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreditNoteMemo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYP4880691</Label>
			<EnumType>CreditNoteMemo_CN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDuplicatedVATInvNumAllowed</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYP4880693</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsNonDeductibleVATInvoice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYP4880684</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ExportFormatMapping</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ERFormatMappingId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsAddMiscCharges</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@TaxIntgr:AddMiscChargesHelpText</HelpText>
			<Label>@TaxIntgr:AddMiscChargesLabel</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CommodityHierachy</Name>
			<ExtendedDataType>EcoResCategoryHierarchyId</ExtendedDataType>
			<Label>@SYS130813</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ImportModelMapping</Name>
			<ExtendedDataType>ERModelMappingId</ExtendedDataType>
			<Label>@TaxIntgr:ImportFormatConfiguration</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CommodityCode</Name>
			<ExtendedDataType>TaxProfileCommodityCode_CN</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProfileIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProfileId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InvoiceAuditor</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>InvoiceAuditor</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxProfile</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceAuditorWorker</Name>
					<Field>InvoiceAuditorWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymentCollector</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PaymentCollector</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxProfile</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymentCollectorWorker</Name>
					<Field>PaymentCollectorWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxProfileTable_CN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxCode</Name>
					<SourceEDT>TaxCode</SourceEDT>
					<Field>TaxCode</Field>
					<RelatedField>TaxCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ExportFormatMapping</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ERFormatMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ExportFormatMapping</Name>
					<Field>ExportFormatMapping</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CommodityHierarchy</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategoryHierarchy</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CommodityHierachy</Name>
					<Field>CommodityHierachy</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ImportModelMapping</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ERModelMappingTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ImportModelMapping</Name>
					<Field>ImportModelMapping</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>