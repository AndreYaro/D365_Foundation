<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSiteGate_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventSiteGate_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record exists in the <c>InventSiteGate_IN</c> table; if not,
    ///    an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>InventSiteGate_IN</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>

    public static boolean checkExist(RecId _recId)
    {
        boolean doesExist = true;

        if (!InventSiteGate_IN::exist(_recId))
        {
            doesExist = checkFailed(strFmt("@SPS1280", _recId));
        }

        return doesExist;
    }
]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the specified record in the <c>InventSiteGate_IN</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///     The record ID of the <c>InventSiteGate_IN</c> table to check for existence.
    /// </param>
    /// <returns>
    ///     true if the specified record exists; otherwise, false.
    /// </returns>

    public static boolean exist(RecId _recId)
    {
        InventSiteGate_IN inventSiteGate;

        select firstonly RecId from inventSiteGate
            where inventSiteGate.RecId == _recId;

        return inventSiteGate.RecId != 0;
    }
]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <C>InventSiteGate_IN</C> record based on record ID of <C>InventSiteGate_IN</C> record.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of <C>InventSiteGate_IN</C> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <C>InventSiteGate_IN</C> record.
    /// </returns>
    static public InventSiteGate_IN find(RecId _recId, boolean _forUpdate = false)
    {
        InventSiteGate_IN  inventSiteGate;
        if (_recId)
        {
            inventSiteGate.selectForUpdate(_forUpdate);
            select firstOnly inventSiteGate
                where inventSiteGate.RecId == _recId;
        }

        return inventSiteGate;
    }
]]></Source>
			</Method>
			<Method>
				<Name>lookupInventSiteGate</Name>
				<Source><![CDATA[
    /// <summary>
    /// To generate customized lookup when user selects gate table field.
    /// </summary>
    /// <param name="_formReferenceControl">
    /// The control on which to perform lookup.
    /// </param>
    /// <param name="_inventSiteGateType">
    /// Show lookup based on the selected InventSiteGateType_IN enum value.
    /// </param>
    /// <returns>
    /// Selected <c>InventSiteGate_IN</c> record.
    /// </returns>
    static public Common lookupInventSiteGate(FormReferenceControl _formReferenceControl, InventSiteGateType_IN _inventSiteGateType)
    {
        SysReferenceTableLookup sysTableLookup  = SysReferenceTableLookup::newParameters(tablenum(InventSiteGate_IN), _formReferenceControl);
        QueryBuildDataSource    queryBuildDataSource;
        Query                   query;
        Common                  selectedRecord;

        sysTableLookup.addLookupfield(fieldnum(InventSiteGate_IN, GateId));
        sysTableLookup.addLookupfield(fieldnum(InventSiteGate_IN, SiteId));
        sysTableLookup.addLookupfield(fieldnum(InventSiteGate_IN, Description));

        query = new Query();
        queryBuildDataSource = query.addDataSource(tableNum(InventSiteGate_IN));
        queryBuildDataSource.addRange(fieldNum(InventSiteGate_IN, Type)).value(SysQuery::value(_inventSiteGateType));

        sysTableLookup.parmQuery(query);
        selectedRecord = sysTableLookup.performFormLookup();
        return selectedRecord;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@SYP4860417</DeveloperDocumentation>
	<Label>@SYP4860416</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>GateId</TitleField1>
	<TitleField2>SiteId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>Inventory</Modules>
	<ReplacementKey>GateIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GateId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SiteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS4003319</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GateInformation</Name>
			<Label>@SYP4860369</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GateId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Site</Name>
			<Label>@SYS122446</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SiteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GateId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventSiteGateId_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SiteId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>InventSiteGateType_IN</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>GateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Type</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>GateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SiteId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SiteId</Name>
					<Field>SiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SiteIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>