<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EximEPCGExportObligationPeriod_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EximEPCGExportObligationPeriod_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the EximEPCGExportObligationPeriod_IN table for the specified id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing EximEPCGExportObligationPeriod_IN table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximEPCGExportObligationPeriod_IN find(
        RecId               _recId,
        boolean             _forUpdate        = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        EximEPCGExportObligationPeriod_IN eximEPCGExportObligationPeriod;

        eximEPCGExportObligationPeriod.selectForUpdate(_forUpdate);
        if (_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            eximEPCGExportObligationPeriod.concurrencyModel(_concurrencyModel);
        }

        select firstonly eximEPCGExportObligationPeriod
            where eximEPCGExportObligationPeriod.RecId == _recId;

        return eximEPCGExportObligationPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEPCGExportObligationPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets container with EximEPCGBlockExtension_IN record and EximEPCGSchemeTable_IN table RecId.
    /// </summary>
    /// <param name="_sourceTableId">RefTableId</param>
    /// <param name="_record">Common</param>
    /// <returns>container with boolean value and EximEPCGSchemeTable_IN table RecId</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static container findEPCGExportObligationPeriod(
        RefTableId _sourceTableId,
        Common     _record)
    {
        EximEPCGExportObligationPeriod_IN epcgExportObligationPeriod;
        EximEPCGSchemeApprove_IN          epcgSchemeApproval;
        EximEPCGSchemeTable_IN            epcgSchemeTable;
        EximIncentiveSchemeData_IN        eximIncentiveSchemeData;
        EximSalesLine_IN                  eximSalesLine;
        SalesLine                         salesLine;
        boolean                           epcgBlockExt;

        switch (_sourceTableId)
        {
            case tablenum(EximEPCGSchemeTable_IN) :
                epcgSchemeTable = _record;

                select firstonly RecId, SchemeTableRecId
                   from epcgSchemeApproval
                   where epcgSchemeApproval.SchemeTableRecId == epcgSchemeTable.RecId
                join SchemeApproveRecId, RecId from epcgExportObligationPeriod
                   where epcgExportObligationPeriod.SchemeApproveRecId == epcgSchemeApproval.RecId;

               break;

            case tablenum(SalesLine) :
                salesLine = _record;

                select firstonly RecId, SalesLineRecId, EximIncentiveSchemeGroup
                   from eximSalesLine
                   where eximSalesLine.SalesLineRecId == salesLine.RecId
                join EximIncentiveSchemeGroup, AuthorizationId
                   from eximIncentiveSchemeData
                   where eximIncentiveSchemeData.EximIncentiveSchemeGroup == eximSalesLine.EximIncentiveSchemeGroup
                join SchemeId, RecId
                   from epcgSchemeTable
                   where epcgSchemeTable.SchemeId == eximIncentiveSchemeData.AuthorizationId
                join SchemeTableRecId, RecId
                   from epcgSchemeApproval
                   where epcgSchemeApproval.SchemeTableRecId == epcgSchemeTable.RecId
                join SchemeApproveRecId, RecId from epcgExportObligationPeriod
                   where epcgExportObligationPeriod.SchemeApproveRecId == epcgSchemeApproval.RecId;

               break;
        }

        if (EximEPCGBlockExtension_IN::exist(epcgExportObligationPeriod.RecId))
        {
            epcgBlockExt = true;
        }

        return [epcgBlockExt, epcgSchemeTable.RecId];
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the EximEPCGExportObligationPeriod_IN table for the specified EximEPCGSchemeApproveRecId_IN.
    /// </summary>
    /// <param name="_schemeApproveRecId">EximEPCGSchemeApproveRecId_IN</param>
    /// <param name="_forUpdate">boolean</param>
    /// <returns>EximEPCGExportObligationPeriod_IN table record</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static EximEPCGExportObligationPeriod_IN findRefRecId(
        EximEPCGSchemeApproveRecId_IN _schemeApproveRecId,
        boolean                       _forUpdate = false)
    {
        EximEPCGExportObligationPeriod_IN eximEPCGExportObligationPeriod;

        if (_schemeApproveRecId)
        {
            eximEPCGExportObligationPeriod.selectForUpdate(_forUpdate);

            select firstonly eximEPCGExportObligationPeriod
                where eximEPCGExportObligationPeriod.SchemeApproveRecId == _schemeApproveRecId;
        }
        return eximEPCGExportObligationPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertTmpExportObligationPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// inserts records to TmpEximEPCGExportObligationPeriod_IN table from EximEPCGExportObligationPeriod_IN table based on EximEPCGSchemeTableRecId_IN.
    /// </summary>
    /// <param name="_schemeTableRecId">EximEPCGSchemeTableRecId_IN</param>
    /// <returns>TmpEximEPCGExportObligationPeriod_IN</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TmpEximEPCGExportObligationPeriod_IN insertTmpExportObligationPeriod(EximEPCGSchemeTableRecId_IN _schemeTableRecId)
    {
        Query                                query = new Query();
        QueryRun                             queryRun;
        QueryBuildDataSource                 queryBuildDataSource;
        QueryBuildDataSource                 dataSourceEPCGSchemeApproval;
        EximEPCGExportObligationPeriod_IN    epcgExportObligationPeriod;
        TmpEximEPCGExportObligationPeriod_IN tmpEPCGExportObligationPeriod;

        dataSourceEPCGSchemeApproval = query.addDataSource(tablenum(EximEPCGSchemeApprove_IN));
        dataSourceEPCGSchemeApproval.addRange(fieldnum(EximEPCGSchemeApprove_IN, SchemeTableRecId)).value(queryValue(_schemeTableRecId));

        queryBuildDataSource = dataSourceEPCGSchemeApproval.addDataSource(tablenum(EximEPCGExportObligationPeriod_IN));
        queryBuildDataSource.addLink(fieldnum(EximEPCGSchemeApprove_IN, RecId), fieldnum(EximEPCGExportObligationPeriod_IN, SchemeApproveRecId));
        queryBuildDataSource.joinMode(JoinMode::InnerJoin);

        queryBuildDataSource.addSortField(fieldnum(EximEPCGExportObligationPeriod_IN, Block));

        queryRun = new QueryRun(query);

        while (queryRun.next())
        {
            epcgExportObligationPeriod = queryRun.get(tablenum(EximEPCGExportObligationPeriod_IN));

            tmpEPCGExportObligationPeriod.Block                       = epcgExportObligationPeriod.Block;
            tmpEPCGExportObligationPeriod.Percentage                  = epcgExportObligationPeriod.Percentage;
            tmpEPCGExportObligationPeriod.Description                 = epcgExportObligationPeriod.Description;
            tmpEPCGExportObligationPeriod.FromDateTime                = epcgExportObligationPeriod.FromDateTime;
            tmpEPCGExportObligationPeriod.ToDateTime                  = epcgExportObligationPeriod.ToDateTime;
            tmpEPCGExportObligationPeriod.ExportObligationAchieved    = TmpEximEPCGExportObligationPeriod_IN::exportObligationAmt(epcgExportObligationPeriod.RecId) * epcgExportObligationPeriod.Percentage / 100;
            tmpEPCGExportObligationPeriod.DiffExportObligation        = TmpEximEPCGExportObligationPeriod_IN::totalExpObligationAmt(_schemeTableRecId, epcgExportObligationPeriod.RecId) - tmpEPCGExportObligationPeriod.ExportObligationAchieved;
            tmpEPCGExportObligationPeriod.CumulativeExpObligation     += tmpEPCGExportObligationPeriod.DiffExportObligation;
            tmpEPCGExportObligationPeriod.ExportObligationPeriodRecId = epcgExportObligationPeriod.RecId;
            tmpEPCGExportObligationPeriod.SchemeTableRecId            = _schemeTableRecId;
            tmpEPCGExportObligationPeriod.insert();
        }

        return tmpEPCGExportObligationPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalExpObligationAmountMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Cumulative ExportObligationAmount from EximEPCGExportObligationPeriod_IN for specified EximEPCGSchemeApproveRecId_IN.
    /// </summary>
    /// <param name="_schemeApproveRecId">EximEPCGSchemeApproveRecId_IN</param>
    /// <returns>Cumulative ExportObligationAmount</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AmountMST totalExpObligationAmountMST(EximEPCGSchemeApproveRecId_IN _schemeApproveRecId)
    {
        return (select sum(ExportObligationAmount)
                   from  eximEPCGExportObligationPeriod_IN
                   where eximEPCGExportObligationPeriod_IN.SchemeApproveRecId == _schemeApproveRecId).ExportObligationAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalPercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets Cumulative Percentage from EximEPCGExportObligationPeriod_IN table for specified EximEPCGSchemeApproveRecId_IN.
    /// </summary>
    /// <param name="_schemeApproveRecId">EximEPCGSchemeApproveRecId_IN</param>
    /// <returns>Cumulative Percentage</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static Percent totalPercent(EximEPCGSchemeApproveRecId_IN _schemeApproveRecId)
    {
        return (select sum(Percentage)
                    from  eximEPCGExportObligationPeriod_IN
                    where eximEPCGExportObligationPeriod_IN.SchemeApproveRecId == _schemeApproveRecId).Percentage;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS62447</DeveloperDocumentation>
	<Label>@GLS62069</Label>
	<TitleField1>Block</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>ExportImportIndia</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>SchemeApproveBlockIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>EximEPCGExportObligationDetails_IN</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation>
      </Relation>
			<Table>EximEPCGExportObligationDetails_IN</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Block</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Units</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExportObligationAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SchemeApproveRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Block</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Block</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Miscellaneous</Name>
			<Label>@SYS80069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SchemeApproveRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExportObligationAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Units</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@SYS40858</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Block</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EximBlockNum_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExportObligationAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@GLS62079</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>FromDateTime</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>FromDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percentage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Percent</ExtendedDataType>
			<Label>@SYS67344</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PeriodInterval</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS23339</Label>
			<EnumType>PaymentPer_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SchemeApproveRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ToDateTime</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ToDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Units</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EximBlockUnit_IN</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SchemeApproveBlockIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SchemeApproveRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Block</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EximEPCGSchemeApprove</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EximEPCGSchemeApprove_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EximEPCGSchemeApprove_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EximEPCGSchemeApprove_IN_EximEPCGExportObligationPeriod_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SchemeApproveRecId</Name>
					<Field>SchemeApproveRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>