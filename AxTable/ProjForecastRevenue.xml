<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjForecastRevenue</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjForecastRevenue extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkActivity</Name>
				<Source><![CDATA[
    private boolean checkActivity()
    {
        boolean ret = true;

        if (this.ActivityNumber)
        {
            ret = ProjActivityHelper::validateProjActivityParentLinkV2(this.ProjId, this.ActivityNumber);

            if (ret && !ProjParameters::allowParentActivitySelection(this.ActivityNumber))
            {
                ret = checkFailed("@Proj:ParentActivityError");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>blankDateFields</Name>
				<Source><![CDATA[
    private void blankDateFields()
    {
        this.InvoiceDate        = dateNull();
        this.EliminationDate    = dateNull();
        this.SalesPaymDate      = dateNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkModel</Name>
				<Source><![CDATA[
    private boolean checkModel()
    {
        ForecastModel   budgetModel;

        select budgetModel where budgetModel.Type == HeadingSub::Heading  && budgetModel.ModelId == this.ModelId;

        if (!budgetModel)
        {
            return checkFailed(strFmt("@SYS25942", this.ModelId));
        }

        if (budgetModel.Blocked)
        {
            return checkFailed(strFmt("@SYS25943", budgetModel.ModelId));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>CompanyInfo</c> record associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>CompanyInfo</c> record.
    /// </returns>
    public CompanyInfo companyInfo()
    {
        return CompanyInfo::findDataArea(this.company());
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a dimension set that can be applied to the <c>ProjForecastEmpl.dimension</c> field.
    /// </summary>
    /// <param name="_dimension">
    /// A dimension set that should be applied to the <c>ProjForecastEmpl.dimension</c> field.
    /// </param>
    /// <param name="_dimensionCopy">
    /// A <c>dimensionCopy</c> object that was previously initialized by using the current
    /// <c>ProjForecastEmpl</c> buffer; optional.
    /// </param>
    /// <returns>
    /// A dimension set that can be applied to the <c>ProjForecastEmpl.dimension</c> field.
    /// </returns>
    /// <remarks>
    /// This method makes sure that potential linked dimensions are not overwritten.
    /// </remarks>
    public DimensionDefault copyDimension(DimensionDefault _dimension, DimensionCopy _dimensionCopy = DimensionCopy::newFromTable(this, CompanyInfo::findDataArea(curext()).RecId))
    {
        return _dimensionCopy.copy(_dimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defBudget</Name>
				<Source><![CDATA[
    private ProjForecastRevenue defBudget()
    {
        ProjForecastRevenue projForecastRevenue = null;

        return projForecastRevenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        this.BudgetMap::deleting();

        super();

        this.BudgetMap::deleted();
    }

]]></Source>
			</Method>
			<Method>
				<Name>derived</Name>
				<Source><![CDATA[
    display ProjDerived derived()
    {
        return (this.ExpandId ? NoYes::Yes: NoYes::No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCategory</Name>
				<Source><![CDATA[
    private void initFromCategory()
    {
        ProjCategory projCategory = ProjCategory::find(this.CategoryId);

        if (projCategory.SetupEstimate)
        {
            this.LinePropertyId = '';
        }
        else
        {
            this.LinePropertyId = ProjLinePropertySetup::findLinePropertyId(this.ProjId, this.CategoryId);
        }

        this.Txt = projCategory.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromEstimate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes values from a project estimate.
    /// </summary>
    /// <param name = "_psaActivityEstimates">A <c>PSAActivityEstimates</c> record from which to initialize the fields.</param>
    public void initFromEstimate(PSAActivityEstimates _psaActivityEstimates)
    {
        this.CategoryId         = _psaActivityEstimates.ProjCategoryId;
        this.LinePropertyId     = _psaActivityEstimates.LinePropertyId;
        this.Qty                = _psaActivityEstimates.Quantity;
        this.Resource           = _psaActivityEstimates.Resource;
        this.ResourceCategory   = _psaActivityEstimates.ResourceCategory;
        this.Txt                = _psaActivityEstimates.Description;
        this.ActivityNumber     = _psaActivityEstimates.ActivityNumber;
        this.initFromTransDate(false);
        this.SalesPrice         = _psaActivityEstimates.UnitSalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInvoiceDate</Name>
				<Source><![CDATA[
    public void initFromInvoiceDate(boolean _setSalesPrice  = true)
    {
        PaymTermId          paymentTermsID;
        ProjFundingSource   projFundingSource;
        ProjTable           projTable       = this.projTable();
        ProjParameters      projParameters  = ProjParameters::find();

        // Sales payment date
        if (projTable && ProjMultipleContractLinesForProjectFeatureHelper::isTimeMaterialBillingMethod(projTable, ProjTransType::Revenue))
        {
            if (this.ProjFundingSource)
            {
                paymentTermsID = ProjFundingSource::find(this.ProjFundingSource).PaymentTermsId;
            }
            else
            {
                if (ProjFundingSource::numberOfFundingSources(projTable.ProjInvoiceProjId) == 1)
                {
                    select PaymentTermsId from projFundingSource
                    where projFundingSource.ContractId == projTable.ProjInvoiceProjId &&
                          projFundingSource.FundingType == ProjFundingType::Customer;

                    paymentTermsID = projFundingSource.PaymentTermsId;
                }
            }

            if (paymentTermsID)
            {
                this.SalesPaymDate = PaymTerm::advanceDate(paymentTermsID, this.InvoiceDate) + projParameters.ForecastBufferDays;
            }
            else
            {
                this.SalesPaymDate = this.InvoiceDate+ projParameters.ForecastBufferDays;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProjActivity</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the category of the journal line with the default category of the project activity passed in as a parameter.
    /// </summary>
    /// <param name="_projActivity">
    ///    The project activity used to initialize the category of the journal line.
    /// </param>
    public void initFromProjActivity(ProjActivity _projActivity)
    {
        if (!_projActivity || !_projActivity.CategoryDefault ||
            ProjCategory::find(_projActivity.CategoryDefault).CategoryType != ProjCategoryType::Revenue)
        {
            return;
        }

        this.CategoryId = _projActivity.CategoryDefault;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProjTable</Name>
				<Source><![CDATA[
    public void initFromProjTable(ProjTable _projTable)
    {
        if (!_projTable)
        {
            return;
        }

        boolean isFixedPrice = ProjMultipleContractLinesForProjectFeatureHelper::isFixedPriceBillingMethod(_projTable, ProjTransType::Revenue);

        if (isFixedPrice)
        {
            this.CurrencyId     = Ledger::accountingCurrency(CompanyInfo::current());
            this.ExchRate       = ExchangeRateHelper::exchRate(this.CurrencyId, this.StartDate ? this.StartDate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        }
        else
        {
            this.CurrencyId     = _projTable.currencyId();
            this.ExchRate       = _projTable.exchRateSales(this.StartDate ? this.StartDate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()), this.CurrencyId);
        }

        this.TaxGroupId         = _projTable.TaxGroupId;

        if (! this.ModelId)
        {
            this.ModelId        = ProjTable::modelId(this.ProjId);
        }

        this.DefaultDimension   = _projTable.DefaultDimension;

        if (!ProjValProjCategorySetUp::checkProjCategory(this.ProjId, this.CategoryId))
        {
            this.CategoryId = '';
        }

        if (isFixedPrice)
        {
            this.LinePropertyId = "";
        }
        else
        {
            this.LinePropertyId = ProjLinePropertySetup::findLinePropertyId(this.ProjId, this.CategoryId);
        }
        this.setSalesPrice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesQuotationLine</Name>
				<Source><![CDATA[
    public void initFromSalesQuotationLine(SalesQuotationLine _salesQuotationLine)
    {
        this.ProjId         = _salesQuotationLine.salesQuotationTable().ProjIdRef;

        this.initFromProjTable(ProjTable::find(this.ProjId));

        this.ModelId        = _salesQuotationLine.salesQuotationTable().ModelId;

        this.CategoryId     = _salesQuotationLine.ProjCategoryId;
        this.Resource       = _salesQuotationLine.ProjectResource;
        this.LinePropertyId = _salesQuotationLine.LinePropertyId;
        this.Qty            = _salesQuotationLine.SalesQty;
        this.DefaultDimension      = _salesQuotationLine.DefaultDimension;
        this.Txt            = _salesQuotationLine.ProjDescription;
        this.CurrencyId     = _salesQuotationLine.CurrencyCode;
        this.SalesPrice     = _salesQuotationLine.SalesPrice;
        this.StartDate      = _salesQuotationLine.TransDate;
        this.EndDate        = _salesQuotationLine.EndDate;
        this.initFromTransDate(false);

        if (!_salesQuotationLine.SalesPrice && _salesQuotationLine.LineAmount && _salesQuotationLine.SalesQty)
        {
            this.SalesPrice     = _salesQuotationLine.LineAmount / _salesQuotationLine.SalesQty;
        }
        else
        {
            this.SalesPrice     = _salesQuotationLine.SalesPrice;
        }

        if (_salesQuotationLine.SalesQty < 0)
        {
            this.SalesPrice = -1 * abs(this.SalesPrice);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTransDate</Name>
				<Source><![CDATA[
    public void initFromTransDate(boolean _setSalesPrice  = true)
    {
        ProjTable       projTable       = this.projTable();
        ProjParameters  projParameters  = ProjParameters::find();

        if (! this.CurrencyId)
        {
            this.CurrencyId         = projTable.currencyId();
        }

        if (! this.CurrencyId)
        {
            this.CurrencyId         = Ledger::accountingCurrency(CompanyInfo::findDataArea(curext()).RecId);
        }

        boolean isTM = ProjMultipleContractLinesForProjectFeatureHelper::isTimeMaterialBillingMethod(projTable, ProjTransType::Revenue);
        boolean isFixedPrice = ProjMultipleContractLinesForProjectFeatureHelper::isFixedPriceBillingMethod(projTable, ProjTransType::Revenue);

        if (isFixedPrice)
        {
            this.ExchRate = ExchangeRateHelper::exchRate(this.CurrencyId, this.StartDate ? this.StartDate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
        }
        else
        {
            this.ExchRate = projTable.exchRateSales(this.StartDate,this.CurrencyId);
        }

        // Invoice date
        if (isTM)
        {
            if (projTable.projInvoice().ForecastInvoiceFrequency)
            {
                this.InvoiceDate = ProjInvoiceTable::forecastInvoiceDate(this.StartDate, this.ProjId);
            }
            else
            {
                this.InvoiceDate = this.StartDate;
            }
        }
        else if (isFixedPrice || projTable.Type == ProjType::Investment || ProjMultipleContractLinesForProjectFeatureHelper::isInternalProject(projTable))
        {
            // Invoice date is not used for Fixed price or Investment or Internal projects
            this.InvoiceDate = dateNull();
        }

        this.initFromInvoiceDate();

        // Elimination date
        if (isFixedPrice || projTable.Type == ProjType::Investment)
        {
            if (ProjTable::exist(projTable.wipProject))
            {
                this.EliminationDate = ProjTable::find(projTable.wipProject).EndDate;
            }
            else
            {
                this.EliminationDate = projTable.EndDate;
            }

            if (!this.EliminationDate)
            {
                this.EliminationDate = this.StartDate;
            }
        }

        if (_setSalesPrice)
        {
            this.setSalesPrice();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue(boolean _costBudget = false)
    {
        NumberSeq           numberSeq;
        ProjTable           projTable;

        ttsbegin;

        if (!this.TransId)
        {
            numberSeq       = NumberSeq::newGetNum(ProjParameters::numRefProjTransIdBase());
            this.TransId    = numberSeq.num();
        }

        ttscommit;

        super();
        this.BudgetMap::initBudgetValues(_costBudget);
        projTable          = this.projTable();
        this.StartDate     = projTable.returnForecastDate();
        this.initFromTransDate();

        this.Qty = 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        ttsbegin;

        if (!this.TransId)
        {
            NumberSeq numberSeq = NumberSeq::newGetNum(ProjParameters::numRefProjTransIdBase());
            this.TransId = numberSeq.num();
        }

        this.BudgetMap::inserting();

        super();

        this.BudgetMap::inserted();

        ProjForecastPost::newPostForecastRevenue(this).run();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isForecastModelStopped</Name>
				<Source><![CDATA[
    private boolean isForecastModelStopped()
    {
        return ForecastModel::find(HeadingSub::Heading, this.ModelId).Blocked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a set of dimensions that hold the merged combination of the current
    ///    <c>defaultDimension</c> field on this table and the provided dimension set.
    /// </summary>
    /// <param name="_primaryDefaultDimension">
    ///    A first dimension set to merge with the current <c>defaultDimension</c> field on this table.
    /// </param>
    /// <param name="_secondaryDefaultDimension">
    ///    A second dimension set to merge with the current <c>defaultDimension</c> field on this table;
    ///    optional.
    /// </param>
    /// <param name="_dimensionMerge">
    ///    A <c>dimensionMerge</c> object that was instantiated with the current buffer; optional.
    /// </param>
    /// <returns>
    ///    A set of dimensions that holds the merged combination of the current <c>defaultDimension</c> field
    ///    on this table and the provided dimension set.
    /// </returns>
    /// <remarks>
    ///    This method makes sure that potential linked dimensions are not overwritten when they are merged.
    /// </remarks>

    public DimensionDefault mergeDimension(
    DimensionDefault _primaryDefaultDimension,
    DimensionDefault _secondaryDefaultDimension = 0,
    DimensionMerge   _dimensionMerge = DimensionMerge::newFromTable(this,
                                                                    this.companyInfo().RecId
                                                                    )
    )
    {
        return _dimensionMerge.merge(_primaryDefaultDimension, _secondaryDefaultDimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeResourceDimensionDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Merges the default dimension for the forecast line with default dimension.
    /// </summary>
    private void mergeResourceDimensionDefault()
    {
        if (this.Resource)
        {
            this.DefaultDimension = this.mergeDimension(ProjTable::find(this.ProjId).DefaultDimension,
                                        ResourceFacade::getDefaultDimensionByDate(this.Resource, this.StartDate));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ProjForecastRevenue, ProjId) :
                this.initFromProjTable(ProjTable::find(this.ProjId));
                // blank and reinitialize the date fields
                this.blankDateFields();
                this.initFromTransDate(true);
                this.mergeResourceDimensionDefault();
                break;

            case fieldNum(ProjForecastRevenue, CategoryId) :
                this.initFromCategory();
                this.setSalesPrice();
                break;

            case fieldNum(ProjForecastRevenue, CurrencyId) :
            if (! this.CurrencyId)
                {
                    this.CurrencyId         = ProjTable::find(this.ProjId).currencyId();
                }
                this.setSalesPrice();
                this.ExchRate   = this.projTable().exchRateSales(this.StartDate,this.CurrencyId);
                break;

            case fieldNum(ProjForecastRevenue, StartDate) :
                this.initFromTransDate();
                break;

            case fieldNum(ProjForecastRevenue, InvoiceDate) :
                this.initFromInvoiceDate();
                break;

            case fieldNum(ProjForecastRevenue, Qty) :
                this.setSalesPrice();
                break;

            case fieldNum(ProjForecastRevenue, Resource) :
                this.setResourceCategory();
                this.setSalesPrice();
                this.mergeResourceDimensionDefault();
                break;

            case fieldNum(ProjForecastRevenue, ResourceCategory) :
                this.setSalesPrice();
                break;

            case fieldNum(ProjForecastRevenue, ActivityNumber) :                             
                this.setSchedFromDateToSourceActivity();
                break;                
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTable</Name>
				<Source><![CDATA[
    public ProjTable projTable()
    {
        return ProjTable::find(this.ProjId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>psAeditActivityPurpose</Name>
				<Source><![CDATA[
    public edit smmActivityPurpose psAeditActivityPurpose(boolean _set, ProjActivityNumber _activityNumber)
    {
        smmActivities smmActivities;
        str           name;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            if (_set)
            {
                this.ActivityNumber = _activityNumber;
                this.initFromProjActivity(ProjActivity::find(_activityNumber));
            }
            else
            {
                smmActivities = smmActivities::find(this.ActivityNumber);
                name = smmActivities.Purpose;
            }
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setResourceCategory</Name>
				<Source><![CDATA[
    public void setResourceCategory()
    {
        this.ResourceCategory = ResourceFacade::getResourceCategory(this.Resource,
        (this.StartDate ? this.StartDate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesPrice</Name>
				<Source><![CDATA[
    private void setSalesPrice()
    {
        [this.SalesPrice] = ProjRevenueSalesPrice::findProjRevenueSalesPrice(this.ProjId, this.Resource, this.CategoryId, this.CurrencyId, this.StartDate, '', false, this.ResourceCategory);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        ProjForecastRevenue this_Orig = this.orig();

        ttsbegin;

        ProjForecastPost::newPostForecastRevenue(this).deleteTransBudget();

        this.BudgetMap::updating();

        super();

        this.BudgetMap::updated(this_Orig);

        ProjForecastPost::newPostForecastRevenue(this).run();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean         ok;
        ForecastModel   budgetModel = ForecastModel::find(HeadingSub::Heading, this.ModelId);

        if (!budgetModel.checkOpen())
        {
            ok = checkFailed("@SYS23721");
        }
        else
        {
            ok = super();
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _p1)
    {
        boolean         ret = super(_p1);

        switch (_p1)
        {
            case(fieldNum(ProjForecastRevenue, CategoryId)):
            if (this.CategoryId)
                {
                    ProjCategory projCategory = ProjCategory::find(this.CategoryId);

                    if (projCategory.CategoryType != ProjCategoryType::Revenue)
                    {
                        ret = checkFailed(strFmt("@SYS54897", this.CategoryId));
                    }
                    else
                    {
                        ProjTable projTableLocal = this.projTable();

                        if (ProjMultipleContractLinesForProjectFeatureHelper::isTimeMaterialBillingMethod(projTableLocal, ProjTransType::Revenue))
                        {
                            if (projCategory.SetupEstimate)
                            {
                                ret = checkFailed("@SYS88801");
                            }
                        }
                        else if (ProjMultipleContractLinesForProjectFeatureHelper::isFixedPriceBillingMethod(projTableLocal, ProjTransType::Revenue))
                        {
                            if (!projCategory.SetupEstimate)
                            {
                                ret = checkFailed("@SYS88802");
                            }
                            else
                            {
                                ProjMatchingPrincip matchingPrincip;
                                ProjCategoryId salesvalueCategoryId, productionCategoryId, profitCategoryId;

                                if (ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled())
                                {
                                    ProjRevenueProfile revProfile = ProjRevRecHelper::getRevProfile(this.projTable(), ProjContractBillingMethod::FixedPrice);
                                    matchingPrincip = revProfile.MatchingPrinciple;
                                    salesvalueCategoryId = revProfile.SalesvalueCategoryId;
                                    productionCategoryId = revProfile.ProductionCategoryId;
                                    profitCategoryId = revProfile.ProfitCategoryId;
                                }
                                else
                                {
                                    ProjGroup projGroup = this.projTable().projGroup();
                                    matchingPrincip = projGroup.MatchingPrincip;
                                    salesvalueCategoryId = projGroup.SalesvalueCategoryId;
                                    productionCategoryId = projGroup.ProductionCategoryId;
                                    profitCategoryId = projGroup.ProfitCategoryId;
                                }

                                if (matchingPrincip == ProjMatchingPrincip::SalesValue)
                                {
                                    if (this.CategoryId != salesvalueCategoryId)
                                    {
                                        ret = checkFailed("@SYS88802");
                                    }
                                }
                                else if (matchingPrincip == ProjMatchingPrincip::ProductionProfit)
                                {
                                    if (!(this.CategoryId == productionCategoryId ||
                                       this.CategoryId == profitCategoryId))
                                    {
                                        ret = checkFailed("@SYS88802");
                                    }
                                }
                                else
                                {
                                    ret = checkFailed("@SYS88802");
                                }
                            }
                        }
                    }
                }
                break;

            case(fieldNum(ProjForecastRevenue, ModelId)):
            if (this.ModelId != this.orig().ModelId)
                {
                    ForecastModel oldBudgetModel = ForecastModel::find(HeadingSub::Heading, this.orig().ModelId);

                    if (oldBudgetModel.Blocked)
                    {
                        ret = checkFailed(strFmt("@SYS25943", oldBudgetModel.ModelId));
                    }
                    ForecastModel forecastModel = ForecastModel::find(HeadingSub::Heading, this.ModelId);
                    if (forecastModel.Blocked)
                    {
                        ret = checkFailed(strFmt("@SYS25943", forecastModel.ModelId));
                    }
                }
                break;

            case fieldNum(ProjForecastRevenue, ExchRate):
            if (this.CurrencyId && ! this.ExchRate)
                {
                    ret = checkFailed(strFmt("@SYS20792", this.CurrencyId));
                }
                break;

            case fieldNum(ProjForecastRevenue, ActivityNumber):
                ret = this.checkActivity();
                break;

        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSchedFromDateToSourceActivity</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Sets the scheduled date to source activity.
    /// </summary>
    public void initSchedFromDateToSourceActivity()
    {
        if (this.isNewRecord() && this.ActivityNumber)
        {
            this.setSchedFromDateToSourceActivity();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        ProjValCheckTrans   projValCheckTrans = new ProjValCheckTrans();
        boolean             ret;
        ForecastModel       forecastModel;

        ret = this.BudgetMap::validateWrite();
        ret = ProjTable::find(this.ProjId).status().validateWriteBudgetRevenue() && ret;
        ret = projValCheckTrans.validateMandatory(this) && ret;
        ret = ProjForecastPost::newPostForecastRevenue(this).runCheck() && ret;

        if (ret)
        {
            if (this.InvoiceDate != dateNull())
            {
                if (this.InvoiceDate < this.StartDate)
                {
                    ret = checkFailed("@SYS96098") && ret;
                }
            }
            if (this.EliminationDate != dateNull())
            {
                if (this.ModelId)
                {
                    forecastModel = ForecastModel::find(HeadingSub::Heading,this.ModelId);
                    if (forecastModel)
                    {
                        ProjTable projTableLocal = ProjTable::find(this.ProjId);

                        //Check WIP is being used by model
                        switch (projTableLocal.Type)
                        {
                            case ProjType::FixedPrice :
                                if (forecastModel.ProjForecastWIPFixedPrice)
                                {
                                    if (this.EliminationDate < this.StartDate)
                                    {
                                        ret = checkFailed("@SYS96097") && ret;
                                    }
                                }
                                break;

                            case ProjType::TimeMaterial :
                                if (forecastModel.ProjForecastWIPTimeMaterial)
                                {
                                    if (this.EliminationDate < this.StartDate)
                                    {
                                        ret = checkFailed("@SYS96097") && ret;
                                    }
                                }
                                break;

                            case ProjType::None:
                                if (forecastModel.ProjForecastWIPFixedPrice &&
                                    this.EliminationDate < this.StartDate &&
                                    ProjMultipleContractLinesForProjectFeatureHelper::isTransTypeIncludedByBillingMethod(projTableLocal.ProjId, projTableLocal.ProjInvoiceProjId, ProjTransType::Revenue, ProjContractBillingMethod::FixedPrice))
                                {
                                    ret = checkFailed("@SYS96097") && ret;
                                }
                                else if (forecastModel.ProjForecastWIPTimeMaterial &&
                                    this.EliminationDate < this.StartDate &&
                                    ProjMultipleContractLinesForProjectFeatureHelper::isTransTypeIncludedByBillingMethod(projTableLocal.ProjId, projTableLocal.ProjInvoiceProjId, ProjTransType::Revenue, ProjContractBillingMethod::TimeMaterial))
                                {
                                    ret = checkFailed("@SYS96097") && ret;
                                }
                                break;

                            default :
                        }
                    }
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(ProjId _projId)
    {
        return (select projForecastRevenue where projForecastRevenue.ProjId == _projId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static ProjForecastRevenue find(ProjRevenueTransId _transId, boolean _forUpdate = false)
    {
        ProjForecastRevenue    projForecastRevenue = null;

        projForecastRevenue.selectForUpdate(_forUpdate);

        if (_transId)
        {
            select projForecastRevenue where projForecastRevenue.TransId == _transId;
        }

        return projForecastRevenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findProjectBudgetForecast</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>ProjForecastRevenue</c> table.
    /// </summary>
    /// <param name="_projId">
    ///    A <c>ProjId</c> value that specifies the project ID of the record to find.
    /// </param>
    /// <param name="_categoryId">
    ///    A <c>CategoryId</c> value that specifies the category ID of the record to find.
    /// </param>
    /// <param name="_projForecastBudgetType">
    ///    A <c>CategoryId</c> value that specifies the forecast budget type of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A <c>ForecastSales</c> table buffer that contains the budget forecast row.
    /// </returns>
    public static ProjForecastRevenue findProjectBudgetForecast(  ProjId _projId, CategoryId _categoryId,
                                                        ProjForecastBudgetType _projForecastBudgetType,
                                                        boolean _forUpdate = false)
    {
        ProjForecastRevenue projForecastRevenue;

        if (_projId && _categoryId && _projForecastBudgetType)
        {
            projForecastRevenue.selectForUpdate(_forUpdate);

            select firstonly projForecastRevenue
        where projForecastRevenue.ProjId == _projId
        &&  projForecastRevenue.CategoryId == _categoryId
        &&  projForecastRevenue.ProjForecastBudgetType == _projForecastBudgetType;
        }

        return projForecastRevenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canCreateTransBudget</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>ProjForecastRevenue</c> table that has expand id and allocate method fields set.
    /// </summary>
    /// <param name = "_projForecastRevenue">A <c>ProjForecastRevenue</c> buffer.</param>
    /// <returns>true if the value is set;false otherwise.</returns>
    public static boolean canCreateTransBudget(ProjForecastRevenue _projForecastRevenue)
    {
        boolean ret = false;

        if ((_projForecastRevenue.ExpandId == 0 && _projForecastRevenue.AllocateMethod == BudgetAllocateMethod::None) ||
            (_projForecastRevenue.ExpandId != 0))
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSchedFromDateToSourceActivity</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Updates the enddate of PSAActivitySetup to ProjForecastRevenue for calculation of invoicedate
    /// </summary>
    private void setSchedFromDateToSourceActivity()
    {
        boolean isSchedFromModified = false;

        PSAActivitySetup psaActivitySetup = PSAActivitySetup::findActivityNumber(this.ActivityNumber);

        if (psaActivitySetup && psaActivitySetup.psaSchedEnd)
        {
            this.StartDate = psaActivitySetup.psaSchedEnd;
            isSchedFromModified = true;
        }

        if (isSchedFromModified)
        {
            this.initFromTransDate(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS124887</DeveloperDocumentation>
	<FormRef>ProjForecastRevenue</FormRef>
	<Label>@SYS78796</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ModelId</TitleField1>
	<TitleField2>StartDate</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>TransIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ModifiedTransactionId>Yes</ModifiedTransactionId>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryIndex>TransIdx</PrimaryIndex>
	<ReplacementKey>TransIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>ProjTransBudget</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>ProjTransBudget</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModelId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Active</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>modifiedBy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Allocation</Name>
			<Label>@SYS12895</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllocateMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Freq</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FreqCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodAllocateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Stop</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BudgetRevision</Name>
			<Label>@PSA2281</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BudgetType</Name>
			<Label>@SYS153332</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjForecastBudgetType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dates</Name>
			<Label>@SYS80293</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EliminationDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPaymDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ModelId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjFundingSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePropertyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@SYS40</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Project</Name>
			<Label>@SYS4534</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePropertyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PSAActivityIdentification</Name>
			<Label>@PSA2456</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActivityNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesPrice</Name>
			<Label>@SYS5755</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExchRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPrice</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SpecialReport</Name>
			<Label>@SYS10223</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Report</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CovStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpandId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transaction</Name>
			<Label>@SYS15191</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Active</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BudgetActive</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ActivityNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjActivityNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllocateMethod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BudgetAllocateMethod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CategoryId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CovStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CovStatus</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjSalesCurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EliminationDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjForecastEliminationDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>EndDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EndDate</ExtendedDataType>
			<GroupPrompt>@SYS14401</GroupPrompt>
			<Label>@SYS101261</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExchRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ExchRate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ExpandId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjForecastRevenueExpandId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Freq</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Periods</ExtendedDataType>
			<Label>@SYS14578</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FreqCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>PeriodUnit</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>InvoiceDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjForecastInvoiceDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LinePropertyId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjLinePropertyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ModelId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjForecastModelId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PeriodAllocateId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerAllocateKeyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProjForecastBudgetType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProjForecastBudgetType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProjFundingSource</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ProjFundingSourceRefId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProjId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Qty</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Report</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReportType</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Resource</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ResourceRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ResourceCategory</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ResourceCategoryRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SalesPaymDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjForecastSalesPaymDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SalesPrice</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjSalesPriceRevenue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS54242</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Stop</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS12348</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjTaxGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjRevenueForecastTransId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransTxt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>ProjWorkerRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProjModelIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>ProjId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ModelId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReportIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>Report</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProjId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ModelId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CreatedTransactionIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>CreatedTransactionId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>BudgetMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AccountNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Active</MapField>
					<MapFieldTo>Active</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AllocateMethod</MapField>
					<MapFieldTo>AllocateMethod</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AllocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Amount</MapField>
					<MapFieldTo>SalesPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CategoryId</MapField>
					<MapFieldTo>CategoryId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Comment</MapField>
					<MapFieldTo>Txt</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CostPaymDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CostPrice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CovStatus</MapField>
					<MapFieldTo>CovStatus</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Currency</MapField>
					<MapFieldTo>CurrencyId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>defaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DiscAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DiscPercent</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EliminationDate</MapField>
					<MapFieldTo>EliminationDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>EndDate</MapField>
					<MapFieldTo>EndDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExpandId</MapField>
					<MapFieldTo>ExpandId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Freq</MapField>
					<MapFieldTo>Freq</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FreqCode</MapField>
					<MapFieldTo>FreqCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventQty</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceDate</MapField>
					<MapFieldTo>InvoiceDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemGroupId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Key</MapField>
					<MapFieldTo>PeriodAllocateId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LinePropertyId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Markup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ModelNum</MapField>
					<MapFieldTo>ModelId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PdsCWQty</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Price</MapField>
					<MapFieldTo>SalesPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjId</MapField>
					<MapFieldTo>ProjId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Qty</MapField>
					<MapFieldTo>Qty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Report</MapField>
					<MapFieldTo>Report</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Resource</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPaymDate</MapField>
					<MapFieldTo>SalesPaymDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPrice</MapField>
					<MapFieldTo>SalesPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StartDate</MapField>
					<MapFieldTo>StartDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransId</MapField>
					<MapFieldTo>TransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UnitId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>DimensionDefaultMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DefaultDimension</MapField>
					<MapFieldTo>DefaultDimension</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>PSAProjBudgetTrans</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ActivityNumber</MapField>
					<MapFieldTo>ActivityNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CategoryId</MapField>
					<MapFieldTo>CategoryId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CostPrice</MapField>
					<MapFieldTo>SalesPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyId</MapField>
					<MapFieldTo>CurrencyId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ModelId</MapField>
					<MapFieldTo>ModelId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProjId</MapField>
					<MapFieldTo>ProjId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Qty</MapField>
					<MapFieldTo>Qty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesPrice</MapField>
					<MapFieldTo>SalesPrice</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StartDate</MapField>
					<MapFieldTo>StartDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Txt</MapField>
					<MapFieldTo>Txt</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Currency</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>ProjForecastRevenue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyId</Name>
					<SourceEDT>ProjSalesCurrencyCode</SourceEDT>
					<Field>CurrencyId</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueSet</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueSet_ProjForecastRevenue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ForecastModel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ForecastModel</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>HeadingSub::Heading</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ModelId</Name>
					<SourceEDT>ProjForecastModelId</SourceEDT>
					<Field>ModelId</Field>
					<RelatedField>ModelId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FundingSource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjFundingSource</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjFundingSource</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjFundingSource_ProjForecastRevenue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjFundingSource</Name>
					<Field>ProjFundingSource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerAllocateKey</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LedgerAllocateKey</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerAllocateKey</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjForecastRevenue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PeriodAllocateId</Name>
					<SourceEDT>LedgerAllocateKeyId</SourceEDT>
					<Field>PeriodAllocateId</Field>
					<RelatedField>Key</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>KeyIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ProjCategory</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>ProjForecastRevenue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CategoryId</Name>
					<SourceEDT>ProjCategoryId</SourceEDT>
					<Field>CategoryId</Field>
					<RelatedField>CategoryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CategoryIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjForecastRevenue</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjForecastRevenue</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjForecastRevenue</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjForecastRevenue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ExpandId</Name>
					<SourceEDT>ProjForecastRevenueExpandId</SourceEDT>
					<Field>ExpandId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjLineProperty</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjLineProperty</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProjLineProperty</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjForecastRevenue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LinePropertyId</Name>
					<SourceEDT>ProjLinePropertyId</SourceEDT>
					<Field>LinePropertyId</Field>
					<RelatedField>LinePropertyId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>StatusIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProjTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>ProjTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ProjTable_1</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ProjForecastRevenue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<SourceEDT>ProjId</SourceEDT>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProjectIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Resource</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResourceView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Resource</Name>
					<Field>Resource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ResourceCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ResourceCategoryView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ResourceCategory</Name>
					<Field>ResourceCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>smmActivities</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>smmActivities</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ActivityNumber</Name>
					<SourceEDT>ProjActivityNumber</SourceEDT>
					<Field>ActivityNumber</Field>
					<RelatedField>ActivityNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ActivityNumberIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxGroupHeading</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjForecastRevenue</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroupId</Name>
					<SourceEDT>ProjTaxGroup</SourceEDT>
					<Field>TaxGroupId</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ResourceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ResResourceIdentifier</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Resource</Name>
					<Field>Resource</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WbsEstimates</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>CostForecast</EntityRelationshipRole>
			<RelatedTable>ProjWBSEstimatesView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>WbsActivities</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ActivityNumber</Name>
					<Field>ActivityNumber</Field>
					<RelatedField>ActivityNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WbsActivityNumber</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProjWBSActivityNumberView</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProjId</Name>
					<Field>ProjId</Field>
					<RelatedField>ProjId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ActivityNumber</Name>
					<Field>ActivityNumber</Field>
					<RelatedField>ActivityNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>