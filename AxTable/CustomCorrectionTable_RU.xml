<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustomCorrectionTable_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustomCorrectionTable_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>customJournalTable</Name>
				<Source><![CDATA[
        CustomJournalTable_RU customJournalTable(boolean _forupdate = false)
    {
        return CustomJournalTable_RU::find(this.JournalId, _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
        public void delete()
    {
        NumberSeq::releaseNumber(InventParameters::numRefCustomCorrectionId_RU().NumberSequenceId, this.CorrectionJournalId);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustomJournalTable</Name>
				<Source><![CDATA[
        void initFromCustomJournalTable(CustomJournalTable_RU _customJournalTable)
    {
        this.JournalId          = _customJournalTable.CustomJournalId;
        this.CounteragentType   = _customJournalTable.CounteragentType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
        public void initValue()
    {
        super();

        this.CorrectionJournalId = NumberSeq::newGetNumFromId(InventParameters::numRefCustomCorrectionId_RU().NumberSequenceId).num();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventGTDId</Name>
				<Source><![CDATA[
    display InventGTDId_RU inventGTDId()
    {
        return this.customJournalTable().InventGTDId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
        public boolean validateDelete()
    {
        CustomCorrectionTrans_RU    customCorrectionTrans;
        boolean                     ret;

        ret = super();

        select count(RecId) from customCorrectionTrans
            where customCorrectionTrans.CorrectionJournalId == this.CorrectionJournalId;

        if (customCorrectionTrans.RecId)
        {
            ret = checkFailed(strfmt("@GLS115450", this.CorrectionJournalId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean                     ret;

        ret = super();

        if (ret && this.Storno)
        {
            if ((select firstonly customCorrectionTrans_RU where customCorrectionTrans_RU.CorrectionJournalId == this.CorrectionJournalId &&
                                                                 customCorrectionTrans_RU.CorrectionCost > 0).RecId != 0)
            {
                ret = checkFailed("@GLS115314");
                this.Storno = NoYes::No;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
        public static CustomCorrectionTable_RU find(CustomCorrectionJournalId_RU   _customCorrectionJournalId,
                                                boolean                        _forupdate = false)
    {
        CustomCorrectionTable_RU customCorrectionTable;

        customCorrectionTable.selectForUpdate(_forupdate);

        if (_customCorrectionJournalId)
        {
            select firstonly customCorrectionTable
                where customCorrectionTable.CorrectionJournalId == _customCorrectionJournalId;
        }

        return customCorrectionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByFactureId</Name>
				<Source><![CDATA[
        public static CustomCorrectionTable_RU findByFactureId(FactureId_RU _factureId,
                                                           boolean      _forupdate = false)
    {
        CustomCorrectionTable_RU customCorrectionTable;

        customCorrectionTable.selectForUpdate(_forupdate);

        if (_factureId)
        {
            select firstonly customCorrectionTable
                where customCorrectionTable.FactureId == _factureId;
        }

        return customCorrectionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findNotPosted</Name>
				<Source><![CDATA[
        public static CustomCorrectionTable_RU findNotPosted(CustomJournalId_RU _customJournalId)
    {
        CustomCorrectionTable_RU customCorrectionTable;

        if (_customJournalId)
        {
            select firstonly customCorrectionTable
                where customCorrectionTable.JournalId           == _customJournalId  &&
                      customCorrectionTable.CorrectionStatus    != CustomCorrectionStatus_RU::Posted;
        }

        return customCorrectionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOnDate</Name>
				<Source><![CDATA[
        public static CustomCorrectionTable_RU findOnDate(CustomJournalId_RU    _customJournalId,
                                                      TransDate             _correctionDate,
                                                      boolean               _forupdate = false)
    {
        CustomCorrectionTable_RU customCorrectionTable;

        customCorrectionTable.selectForUpdate(_forupdate);

        if (_customJournalId && _correctionDate)
        {
            select firstonly customCorrectionTable
                where customCorrectionTable.JournalId      == _customJournalId &&
                      customCorrectionTable.CorrectionDate >  _correctionDate;
        }

        return customCorrectionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTransLink</Name>
				<Source><![CDATA[
    /// <summary>
    /// Associates voucher transactions with a reporting date.
    /// </summary>

    public void createTransLink()
    {
        SubledgerVoucherGeneralJournalEntry ledgerTransOrig;
        SubledgerVoucherGeneralJournalEntry ledgerTransCorr;
        LedgerTransLink_RU      ledgerTransLink;
        CustomJournalTable_RU   customJournalTable = CustomJournalTable_RU::find(this.JournalId);

        ledgerTransOrig.Voucher         = customJournalTable.LedgerVoucher;
        ledgerTransOrig.AccountingDate  = customJournalTable.PlanArrivalDate;

        ledgerTransCorr.Voucher         = this.LedgerVoucher;
        ledgerTransCorr.AccountingDate  = this.CorrectionDate;

        ledgerTransLink = LedgerTransLink_RU::newTrans(ledgerTransCorr, ledgerTransOrig);
        ledgerTransLink.parmReportingDate(customJournalTable.PlanArrivalDate);
        ledgerTransLink.run();

        TransLink_RU::createGeneralJourTransLink(ledgerTransOrig.Voucher, 
            ledgerTransOrig.AccountingDate,
            ledgerTransCorr.Voucher,
            ledgerTransCorr.AccountingDate);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>CustomCorrectionTable_RU</FormRef>
	<Label>@GLS115146</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>CorrectionId</TitleField1>
	<TitleField2>CorrectionDate</TitleField2>
	<ClusteredIndex>IdIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>IdIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>CustomCorrectionTrans_RU</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CustomCorrectionTrans_RU</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>CustomJournalCharge_RU</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CustomJournalCharge_RU</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CorrectionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ChargeCorrection</Name>
			<Label>@GLS115147</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CorrectionAdminCharge</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Correction</Name>
			<Label>@SYS596</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CorrectionDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectionStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectionReason</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostCorrection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CounteragentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectionJournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Storno</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS80392</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CorrectionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS14018</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FactureId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerVoucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CorrectionAdminCharge</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustomAmount_RU</ExtendedDataType>
			<Label>@GLS115125</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CorrectionDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@GLS115164</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CorrectionId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustomCorrectionId_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CorrectionJournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustomCorrectionJournalId_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CorrectionReason</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CustomCorrectionReason_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CorrectionStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CustomCorrectionStatus_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CostCorrection</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS114505</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CounteragentType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CustomPartnerType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FactureId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FactureId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustomJournalId_RU</ExtendedDataType>
			<Label>@GLS115008</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerVoucher</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<Label>@GLS115137</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Storno</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS6054</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CorrectionIdIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>CorrectionId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CorrectionJournalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustomJournalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustomJournalTable_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalId</Name>
					<Field>JournalId</Field>
					<RelatedField>CustomJournalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>FactureId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FactureJour_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FactureId</Name>
					<SourceEDT>FactureId_RU</SourceEDT>
					<Field>FactureId</Field>
					<RelatedField>FactureId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SubledgerVoucherGeneralJournalEntry</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SubledgerVoucherGeneralJournalEntry</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerVoucher</Name>
					<Field>LedgerVoucher</Field>
					<RelatedField>Voucher</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>dataAreaId</Name>
					<Field>dataAreaId</Field>
					<RelatedField>VoucherDataAreaId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>