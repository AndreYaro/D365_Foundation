<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjGrantType</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjGrantType extends common
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (_fieldIdToCheck == fieldnum(ProjGrantType, WorkerContact))
        {
            ret = ProJWorkerValidation::isWorkerInCurrentCompany(this.WorkerContact);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ret = ret && ProjWorkerValidation::isWorkerInCurrentCompany(this.WorkerContact);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the specified record exists in the <c>ProjGrantType</c> table; if not, an error
    ///    message is displayed.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>ProjGrantType</c> table record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>

    public static boolean checkExist(RecId _recId)
    {
        boolean ret = true;

        if (!ProjGrantType::exist(_recId))
        {
            ret = checkFailed(strfmt(ProjGrantType::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>ProjGrantType</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>ProjGrantType</c> record to check for existence.
    /// </param>
    /// <returns>
    ///    <c>true</c> if the specified record exists; otherwise, <c>false</c>.
    /// </returns>

    public static boolean exist(RecId _recId)
    {
        boolean found;

        found = (select firstonly
                     RecId
                 from
                     projGrantType
                 where
                     projGrantType.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>ProjGrantType</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>ProjGrantType</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record of the <c>ProjGrantType</c> table; otherwise, an empty buffer.
    /// </returns>

    public static ProjGrantType find(RecId _recId,
                                        boolean _forUpdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        ProjGrantType projGrantType;

        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            projGrantType.concurrencyModel(_concurrencyModel);
        }

        if (_recId)
        {
            projGrantType.selectForUpdate(_forUpdate);

            select firstonly projGrantType
                        where projGrantType.RecId == _recId;
        }

        return projGrantType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByGrantType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>ProjGrantType</c> table by the <c>GrantType</c> field.
    /// </summary>
    /// <param name="_grantType">
    ///    The <c>ProjGrantType</c> value of the <c>ProjGrantType</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record of the <c>ProjGrantType</c> table; otherwise, an empty buffer.
    /// </returns>

    public static ProjGrantType findByGrantType(ProjGrantTypeCode _grantType,
                                        boolean _forUpdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        ProjGrantType projGrantType;

        projGrantType.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            projGrantType.concurrencyModel(_concurrencyModel);
        }

        select firstonly projGrantType
                    where projGrantType.GrantType == _grantType;

        return projGrantType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS94719";
    }

]]></Source>
			</Method>
			<Method>
				<Name>OMOperatingUnit_updated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the foreign key relation to OMOperatingUnit when the OperatingUnitNumber is updated.
    /// </summary>
    /// <param name="_original">The original record from the <c>OMOperatingUnit</c> table.</param>
    /// <param name="_updated">The updated record from the <c>OMOperatingUnit</c> table.</param>
    [SubscribesTo(tableStr(OMOperatingUnit), delegateStr(OMOperatingUnit, updated))]
    public static void OMOperatingUnit_updated(OMOperatingUnit _original, OMOperatingUnit _updated)
    {
        if (_original.OMOperatingUnitNumber != _updated.OMOperatingUnitNumber)
        {
            // Build a list of data areas to update, since Operating unit is a shared table but we aren't. Do this outside of XDS scope so that we catch everything.
            container companies = conNull();

            unchecked(Uncheck::XDS)
            {
                DataArea dataAreas;
                while select id from dataAreas
                {
                    companies += dataAreas.id;
                }

                ProjGrantType grantTypes;
                grantTypes.skipDatabaseLog(true);
                grantTypes.skipAosValidation(true);
                grantTypes.skipDataMethods(true);
                grantTypes.skipEvents(true);
                grantTypes.skipPostLoad(true);
                grantTypes.skipTTSCheck(true);
                grantTypes.skipNumberSequenceCheck(true);

                update_recordset crosscompany:companies grantTypes
                    setting OrganizationUnitId = _updated.OMOperatingUnitNumber
                    where grantTypes.OrganizationUnitId == _original.OMOperatingUnitNumber;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS323676</DeveloperDocumentation>
	<FormRef>ProjGrantType</FormRef>
	<Label>@SYS152801</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>GrantType</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ProjGrantTypeIdx</ClusteredIndex>
	<Modules>ProjectManagementAndAccounting</Modules>
	<ReplacementKey>ProjGrantTypeIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>ProjGrant</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>ProjGrant</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>ProjGrantTypeFrequency</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>ProjGrantTypeFrequency</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GrantType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkerContact</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GrantType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkerContact</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GrantType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS80655</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkerContact</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GrantManagerWorker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrganizationUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StateMandate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FederalMandate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubGrantor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExcludeFromSEFA</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>GrantType</Name>
			<Label>@SYS152725</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GrantType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Type</Name>
			<Label>@SYS81228</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GrantType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjGrantTypeDescription</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FederalMandate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjGrantFederalMandate</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>GrantManagerWorker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ProjGrantManagerWorker</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>GrantType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjGrantTypeCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrganizationUnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>OMOperatingUnitNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StateMandate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjGrantStateMandate</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SubGrantor</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjGrantSubGrantor</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkerContact</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>ProjGrantWorkerContact</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExcludeFromSEFA</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProjGrantTypeExcludeFromSEFA</ExtendedDataType>
			<FeatureClass>ProjSEFAInquiryFeature</FeatureClass>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProjGrantTypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>GrantType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HcmWorkerIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkerContact</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>HcmWorkerIdx1</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>GrantManagerWorker</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>GrantManagerWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker_1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_1_ProjGrantType</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>GrantManagerWorker</Name>
					<Field>GrantManagerWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OMOperatingUnit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>OMOperatingUnit</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrganizationUnitId</Name>
					<Field>OrganizationUnitId</Field>
					<RelatedField>OMOperatingUnitNumber</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>OMOperatingUnitNumber</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkerContact</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_ProjGrantType</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkerContact</Name>
					<Field>WorkerContact</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>