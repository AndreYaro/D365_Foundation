<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HRPLimitAgreementAttestation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HRPLimitAgreementAttestation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getActiveLimitAgreementRule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>RecId</c> value of the active limit agreement rule.
    /// </summary>
    /// <returns>
    /// A <c>RefRecId</c> value of <c>ruleId</c> limit agreement.
    /// </returns>
    public static RefRecId getActiveLimitAgreementRule()
    {
        SysPolicyRuleType policyRuleType;
        CompanyInfo companyInfo;

        policyRuleType = SysPolicyRuleType::findByRuleTypePolicyType(SysPolicyRuleTypeEnum::LimitAgreement, SysPolicyTypeEnum::ApprovalPolicy);

        //fetch organization details
        select firstonly RecId from companyInfo where companyInfo.DataArea == curext();
        int64 orgID[1];
        orgID[1] = companyInfo.RecId;

        //fetch active policy rule
        int64 ruleID = SysPolicies::getPolicyRuleID(orgID, policyRuleType.RecId, SysPolicyTypeEnum::ApprovalPolicy);

        return ruleID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record exists in the <c>HRPLimitAgreementAttestation</c> table.
    /// </summary>
    /// <param name="_signingLimitAgreementAttestation">
    /// A <c>RefRecId</c> value that specifies the limit agreement attestation.
    /// </param>
    /// <returns>
    /// true if the record was found; otherwise, false.
    /// </returns>
    public static boolean checkExist(RefRecId _signingLimitAgreementAttestation)
    {
        if (!HRPLimitAgreementAttestation::exist(_signingLimitAgreementAttestation))
        {
            return checkFailed(HRPLimitAgreementAttestation::txtNotExist());
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>HRPLimitAgreementAttestation</c> table exists.
    /// </summary>
    /// <param name="_signingLimitAgreementAttestation">
    /// A <c>RefRecId</c> value that indicates the  limit agreement attestation.
    /// </param>
    /// <returns>
    /// true if the record was found; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _signingLimitAgreementAttestation)
    {
        return HRPLimitAgreementAttestation::find(_signingLimitAgreementAttestation).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>HRPLimitAgreementAttestation</c> table.
    /// </summary>
    /// <param name="_signingLimitAgreementAttestation">
    /// A <c>RefRecId</c> value that indicates the limit agreement attestation.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether the selected record is for update; optional.
    /// </param>
    /// <returns>
    /// An instance of the <c>HRPLimitAgreementAttestation</c> table.
    /// </returns>
    public static HRPLimitAgreementAttestation find(RefRecId _signingLimitAgreementAttestation, boolean _forUpdate = false)
    {
        HRPLimitAgreementAttestation signingLimitAgreementAttestation;

        if (_signingLimitAgreementAttestation)
        {
            signingLimitAgreementAttestation.selectForUpdate(_forUpdate);
            select firstonly signingLimitAgreementAttestation
                where signingLimitAgreementAttestation.RecId == _signingLimitAgreementAttestation;
        }
        return signingLimitAgreementAttestation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAgreementAttestationCountByLimitRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the count of Agreement records in the <c>HRPLimitAgreementAttestation</c> table
    /// for the specified signing limit request.
    /// </summary>
    /// <param name="_limitRequest">
    /// A <c>RecId</c> value that indicates the signing limit request.
    /// </param>
    /// <param name="_validFrom">
    /// A <c>ValidFrom</c> value.
    /// </param>
    /// <param name="_validTo">
    /// A <c>ValidTo</c> value.
    /// </param>
    /// <returns>
    /// Number of attested agreements.
    /// </returns>
    /// <remarks>
    ///  If <c>_validFrom</c> is set to min value and <c>_validTo</c> is defaulted from <c>_validFrom</c>, we will fallback to default behavior
    /// </remarks>
    public static int getAgreementAttestationCountByLimitRequest(RecId _limitRequest,
        utcdatetime _validFrom = DateTimeUtil::utcNow(),
        utcdatetime _validTo = _validFrom)
    {
        HRPLimitAgreementAttestation limitAgreementAttestation;

        if (_validFrom == DateTimeUtil::minValue() && prmisDefault(_validTo))
        {
            select count(RecId) from limitAgreementAttestation
                where limitAgreementAttestation.SigningLimitRequest == _limitRequest;
        }
        else
        {
            //Get the count of records in HRPLimitAgreementAttestation table for the specific limit request.
            select ValidTimeState(_validFrom, _validTo) count(RecId) from limitAgreementAttestation
                where limitAgreementAttestation.SigningLimitRequest == _limitRequest;
        }

        return int642int(limitAgreementAttestation.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static str txtNotExist()
    {
        return "@SYS302328";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS317807</DeveloperDocumentation>
	<Label>@SYS302249</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>SigningLimitRequest</TitleField1>
	<TitleField2>LimitAgreementDetail</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>HumanResource</Modules>
	<ReplacementKey>HRPLimitAgreementDetailIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<ValidTimeStateFieldType>UtcDateTime</ValidTimeStateFieldType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AttestationDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SigningLimitRequest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LimitAgreementDetail</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LimitAgreementDetail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SigningLimitRequest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SigningLimitAgreementAttestation</Name>
			<Label>@SYS302249</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AttestationDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SigningLimitRequest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LimitAgreementDetail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>AttestationDateTime</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ValidFromDateTime</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LimitAgreementDetail</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SigningLimitRequest</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ValidFrom</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ValidFromDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ValidTo</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ValidToDateTime</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>HRPLimitAgreementDetailIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<ValidTimeStateKey>Yes</ValidTimeStateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LimitAgreementDetail</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SigningLimitRequest</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidTo</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HRPLimitAgreementDetail</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HRPLimitAgreementDetail</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>HRPLimitAgreementDetail</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>HRPLimitAgreementDetail_HRPLimitAgreementAttestation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LimitAgreementDetail</Name>
					<Field>LimitAgreementDetail</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HRPLimitRequest</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HRPLimitRequest</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>HRPLimitRequest</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>HRPLimitRequest_HRPLimitAgreementAttestation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SigningLimitRequest</Name>
					<Field>SigningLimitRequest</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>