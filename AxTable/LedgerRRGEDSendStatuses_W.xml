<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGEDSendStatuses_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerRRGEDSendStatuses_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>configName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Displays the configuration name of electronic document sending status.
    /// </summary>
    /// <returns>
    ///     The configuration name of electronic document sending status.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public display LedgerRRGEDConfigName_W configName()
    {
        return LedgerRRGEDConfigurations_W::find(this.ConfigId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (!this.Code && this.Type != LedgerRRGEDSendStatusType_W::Sent && this.Type != LedgerRRGEDSendStatusType_W::Unknown)
        {
            ret = checkFailed("@SYS4081573");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>LedgerRRGEDSendStatuses_W</c> table.
    /// </summary>
    /// <param name="_statusId">
    ///    The rec ID of the status record.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>LedgerRRGEDSendStatuses_W</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGEDSendStatuses_W find(LedgerRRGEDStatusRefRecId_W _statusId, boolean _forupdate = false)
    {
        LedgerRRGEDSendStatuses_W status;

        status.selectForUpdate(_forupdate);

        if (_statusId)
        {
            select firstonly status
                where status.RecId == _statusId;
        }

        return status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findStatusCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>LedgerRRGEDSendStatuses_W</c> table.
    /// </summary>
    /// <param name="_code">
    ///    The code ID of the status record.
    /// </param>
    /// <param name="_configId">
    ///    The configuration Rec ID of the status record.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>LedgerRRGEDSendStatuses_W</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGEDSendStatuses_W findStatusCode(LedgerRRGEDStatusCode_W _code, LedgerRRGEDConfigRefRecId_W _configId = LedgerRRGEDConfigurations_W::activeConfigId(), boolean _forupdate = false)
    {
        LedgerRRGEDSendStatuses_W status;

        status.selectForUpdate(_forupdate);

        if (_code)
        {
            select firstonly status
                where status.ConfigId    == _configId
                   && status.Code        == _code;
        }

        return status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findStatusType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>LedgerRRGEDSendStatuses_W</c> table.
    /// </summary>
    /// <param name="_type">
    ///    The type value of the status record.
    /// </param>
    /// <param name="_configId">
    ///    The configuration Rec ID of the status record.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>LedgerRRGEDSendStatuses_W</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LedgerRRGEDSendStatuses_W findStatusType(LedgerRRGEDSendStatusType_W _type, LedgerRRGEDConfigRefRecId_W _configId = LedgerRRGEDConfigurations_W::activeConfigId(), boolean _forupdate = false)
    {
        LedgerRRGEDSendStatuses_W status;

        status.selectForUpdate(_forupdate);

        select firstonly status
            where status.ConfigId    == _configId
               && status.Type        == _type;

        return status;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4081599</DeveloperDocumentation>
	<Label>@SYS4081618</Label>
	<TitleField1>Type</TitleField1>
	<TitleField2>Description</TitleField2>
	<ClusteredIndex>CodeIdx</ClusteredIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>LedgerRRGEDSendRecvLog_W</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>LedgerRRGEDSendRecvLog_W</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@SYS80127</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>configName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Code</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Code</Name>
			<ExtendedDataType>LedgerRRGEDStatusCode_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ConfigId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>LedgerRRGEDConfigRefRecId_W</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Type</Name>
			<AllowEdit>No</AllowEdit>
			<Mandatory>Yes</Mandatory>
			<EnumType>LedgerRRGEDSendStatusType_W</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TypeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ConfigId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Type</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CodeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ConfigId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Code</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerRRGEDConfigurations_W</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LedgerRRGEDConfigurations_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ConfigId</Name>
					<SourceEDT>LedgerRRGEDConfigRefRecId_W</SourceEDT>
					<Field>ConfigId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>