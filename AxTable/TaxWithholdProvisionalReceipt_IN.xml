<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdProvisionalReceipt_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxWithholdProvisionalReceipt_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates record post validateWrite method
    /// </summary>
    /// <returns>
    ///    Returns false with error message if validation fails else returns true.
    /// </returns>
    public boolean validateWrite()
    {
        boolean ret;

         //The date from which the receipt number should be set as per provided by TIN was defined in macro #Taxwithhold_IN.
        #TaxWithhold_IN

        ret = super();

        if (ret && this.FromDate >= str2date(#ReceiptNotNullFrom, 321))
        {
            if (this.ReceiptNumber && !this.ProvisionalReceiptNumber)
            {
                // Token number should be provided together with receipt number.
                ret = checkFailed("@SYS4082438");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the TaxWithholdProvisionalReceipt_IN table for the specified record id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forupdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing TaxWithholdProvisionalReceipt_IN table.
    /// </returns>
    public static TaxWithholdProvisionalReceipt_IN find(RefRecId            _recId,
                                                        boolean             _forupdate        = false,
                                                        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxWithholdProvisionalReceipt_IN taxWithholdProvisionalReceipt;

        taxWithholdProvisionalReceipt.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxWithholdProvisionalReceipt.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxWithholdProvisionalReceipt
            where taxWithholdProvisionalReceipt.RecId == _recId;

        return taxWithholdProvisionalReceipt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStatementGeneratedForPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if statement has been generated for the given withhold tax registrationNumber for the period.
    /// </summary>
    /// <param name="_taxWhtRegistrationNumber">
    /// TaxWithholdRegistrationNumber_IN number
    /// </param>
    /// <param name="_statement1">
    /// Tax Withhold statement(TaxWithholdStatement_IN::Form26Q).
    /// </param>
    /// <param name="_statement2">
    /// Tax Withhold statement(TaxWithholdStatement_IN::Form27Q).
    /// </param>
    /// <param name="_periodStart">
    /// Period start date.
    /// </param>
    /// <param name="_periodEnd">
    /// Period end date.
    /// </param>
    /// <returns>
    /// Returns boolean true/false, if statement has been generated for the given withhold tax registrationNumber for the period.
    /// </returns>
    public static boolean isStatementGeneratedForPeriod(
        TaxWithholdRegistrationNumber_IN    _taxWhtRegistrationNumber,
        TaxWithholdStatement_IN             _statement1,
        TaxWithholdStatement_IN             _statement2,
        TransDate                           _periodStart,
        TransDate                           _periodEnd)
    {

        TaxWithholdProvisionalReceipt_IN    taxWithholdProvisionalReceipt;
        TaxWithholdRegNumbers_IN            taxWithholdRegNumbers;

        select firstOnly RecId from taxWithholdProvisionalReceipt
        where taxWithholdProvisionalReceipt.FromDate <= _periodEnd
            && taxWithholdProvisionalReceipt.ToDate  >= _periodStart
            && (taxWithholdProvisionalReceipt.Statement    == _statement1
                || taxWithholdProvisionalReceipt.Statement == _statement2)
        exists join taxWithholdRegNumbers
            where taxWithholdRegNumbers.RecId               == taxWithholdProvisionalReceipt.TaxWithholdRegNumber
                && taxWithholdRegNumbers.RegistrationNumber == _taxWhtRegistrationNumber;


        return (taxWithholdProvisionalReceipt.RecId != 0);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS63783</DeveloperDocumentation>
	<Label>@SYS4082441</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>TaxWithholdRegNumber</TitleField1>
	<TitleField2>ProvisionalReceiptNumber</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdRegNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Others</Name>
			<Label>@GLS5530</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PeriodEnd</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Statement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProvisionalReceiptNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdRegNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CorrectionType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxWithholdCorrectionType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS24050</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PeriodEnd</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TaxWithholdPeriodEnd_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PrintingDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS4082439</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProvisionalReceiptNumber</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TaxWithholdProvisionalReceiptNumber_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReceiptNumber</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TaxWithholdReceiptNum_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Statement</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxWithholdStatement_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxWithholdEStatus_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>TaxWithholdType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdRegNumber</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxWithholdRegNumberRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS35904</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxWithholdRegNumberTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxWithholdRegNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdRegNumber</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxWithholdRegNumbers_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdRegNumbers_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdRegNumbers_IN_TaxWithholdProvisionalReceipt_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdRegNumber</Name>
					<Field>TaxWithholdRegNumber</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>