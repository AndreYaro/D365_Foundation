<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesTaxFormTypes_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesTaxFormTypes_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the <c>SalesTaxForTypes_IN</c> record exists for the given formtype.
    /// </summary>
    /// <param name="_formType">
    /// FormType of the record
    /// </param>
    /// <returns>
    /// True if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(FormType_IN  _formType)
    {
        return _formType && (select firstonly RecId from salesTaxFormTypes_IN
                                index hint FormTypeidx
                                where salesTaxFormTypes_IN.FormType == _formType).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the SalesTaxFormTypes_IN table for the specified record id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forupdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing SalesTaxFormTypes_IN table.
    /// </returns>
    public static SalesTaxFormTypes_IN find(RefRecId            _recId,
                                            boolean             _forupdate = false,
                                            ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        SalesTaxFormTypes_IN salesTaxFormTypes;

        salesTaxFormTypes.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            salesTaxFormTypes.concurrencyModel(_concurrencyModel);
        }

        select firstonly salesTaxFormTypes
            where salesTaxFormTypes.RecId == _recId;

        return salesTaxFormTypes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findbyFormType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the SalesTaxFormTypes_IN table for the specified record id.
    /// </summary>
    /// <param name="_formType">
    /// FormType of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <returns>
    /// A buffer containing SalesTaxFormTypes_IN table.
    /// </returns>
    public static SalesTaxFormTypes_IN findbyFormType(FormType_IN _formType,
                                                      boolean     _forUpdate = false)
    {
        SalesTaxFormTypes_IN    salesTaxFormTypes;

        if (_formType)
        {
            salesTaxFormTypes.selectForUpdate(_forUpdate);

            select firstonly salesTaxFormTypes
                index hint FormTypeidx
                where salesTaxFormTypes.FormType == _formType;
        }

        return salesTaxFormTypes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFormReferenceType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the form reference type with the specified name and tax type.
    /// </summary>
    /// <param name="_formType">
    /// Name of the form reference type.
    /// </param>
    /// <param name="_taxType">
    /// The tax type.
    /// </param>
    /// <returns>
    /// The <c>SalesTaxFormTypes_IN</c> record.
    /// </returns>
    public static SalesTaxFormTypes_IN findFormReferenceType(
        FormType_IN _formType, TaxType_IN  _taxType)
    {
        SalesTaxFormTypes_IN    type;

        select firstOnly type
            where type.FormType  == _formType
                && type.TaxType  == _taxType;

        return type;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS64201</DeveloperDocumentation>
	<Label>@GLS5168</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>FormType</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<DataSharingType>Single</DataSharingType>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>FormTypeidx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FormType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FormType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FormType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS41042</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FormType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxType</Name>
			<Label>@SYS33553</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FormType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>FormType_IN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxType_IN</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FormTypeidx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FormType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalLineExtension_IN</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AssessableValue</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CompanyLocation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomsTariffCodeTable</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DirectSettlement</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DSA</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseRecordType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseTariffCodes</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesTaxFormTypes</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ServiceCodeRefRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxWithholdTCSGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxWithholdTDSGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssessableValueAccountingCurrency</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxInformation</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalLine</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryLocation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryState</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventTransId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations />
	<StateMachines />
</AxTable>