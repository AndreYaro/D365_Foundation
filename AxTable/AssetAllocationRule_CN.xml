<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetAllocationRule_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetAllocationRule_CN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
        public boolean validateDelete()
    {
        boolean ret;
        AssetLedgerAccounts         postingprofile;

        ret = super();

        if (ret && this.RecId)
        {
            select firstOnly RecId from postingprofile where postingprofile.AssetAllocationRule == this.RecId;

            if (postingprofile)
            {
                // @SYS4002352 - %1 is being used by posting profiles.
                checkFailed(strFmt("@SYS4002352", this.RuleId));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a <c>AssetAllocationRule_CN</c> by its record id.
    /// </summary>
    /// <param name="_recId">
    /// The record id.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>AssetAllocationRule_CN</c> table; otherwise, an empty record.
    /// </returns>

    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AssetAllocationRule_CN find(
                    RefRecId            _recId,
                    boolean             _forUpdate = false,
                    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetAllocationRule_CN rule;

        rule.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            rule.concurrencyModel(_concurrencyModel);
        }

        if (_recId)
        {
            select firstOnly rule where rule.RecId == _recId;
        }

        return rule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRuleId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a <c>AssetAllocationRule_CN</c> by its record id.
    /// </summary>
    /// <param name="_id">
    /// The rule id.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>AssetAllocationRule_CN</c> table; otherwise, an empty record.
    /// </returns>

    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AssetAllocationRule_CN findByRuleId(
                    AllocationRuleId_CN    _id,
                    boolean             _forUpdate = false,
                    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        AssetAllocationRule_CN rule;

        rule.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            rule.concurrencyModel(_concurrencyModel);
        }

        if (_id)
        {
            select firstOnly
                rule
            where
                rule.RuleId == _id;
        }

        return rule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAllAllocationRule_CN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate all asset allocation rules of a company.
    /// </summary>
    /// <returns>
    /// If all rules are valid.
    /// </returns>
    /// <remarks>
    /// This method checks two points for each rule.
    /// Check if the selected dimension is valid in current account structure.
    /// Check if the total percentage is 100%.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean validateAllAllocationRule_CN()
    {
        AssetAllocationRule_CN rule;
        boolean ret = true;

        while select rule
        {
            ret = ret && AssetAllocationRule_CN::validateAllocationRule_CN(rule);
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAllocationRule_CN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate a asset allocation rule.
    /// </summary>
    /// <param name="rule">
    /// A <c>AssetAllocationRule_CN</c> typed record.
    /// </param>
    /// <returns>
    /// If the given rule is valid.
    /// </returns>
    /// <remarks>
    /// This method checks two points.
    /// Check if the selected dimension is valid in current account structure.
    /// Check if the total percentage is 100%.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean validateAllocationRule_CN(AssetAllocationRule_CN rule)
    {
        AssetAllocationRuleLine_CN  line;

        DimensionAttribute          attr;
        DimensionAttributeSetItem   attrItem;
        str                         errMsg;

        real                        totalPercent = 0.0;

        if (!rule)
        {
            // @SYS4002364 - Invalid rule.
            return checkFailed("@SYS4002364");
        }

        // validate the dimension of the rule
        select firstOnly RecId from attr
                where attr.Type != DimensionAttributeType::MainAccount
                    && attr.RecId == rule.DimensionAttribute
            exists join RecId from attrItem
                where attr.recid == attrItem.DimensionAttribute
                    && attrItem.DimensionAttributeSet == DimensionCache::getDimensionAttributeSetForLedger();

        if (!attr)
        {
            select firstOnly Name from attr
                where attr.RecId == rule.DimensionAttribute;
            if (attr)
            {
                // @SYS4002362 - Invalid rule %1 - Dimension %2 is invalid in current account structure.
                errMsg = strFmt("@SYS4002362", rule.RuleId, attr.Name);
            }
            else
            {
                // @SYS4002356 - Invalid allocation rule %1.
                errMsg = strFmt("@SYS4002356", rule.RuleId);
            }
            return checkFailed(errMsg);
        }

        while select Percentage from line
            where line.AssetAllocationRule == rule.RecId
        {
            if (line.Percentage <= 0)
            {
                // @SYS78966 - The value in field %1 is invalid.
                // @SYS4002371 - Percentage
                return checkFailed(strFmt("@SYS78966", "@SYS4002371"));
            }
            totalPercent += line.Percentage;
        }

        // validate the sum of the percentages is 100%
        if (totalPercent != 100)
        {
            return checkFailed(strFmt("@SYS4002363", rule.RuleId));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAllocationRuleFromId_CN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate a asset allocation rule.
    /// </summary>
    /// <param name="ruleId">
    /// The record id of the rule.
    /// </param>
    /// <returns>
    /// If the given rule is valid.
    /// </returns>
    /// <remarks>
    /// This method checks two points.
    /// Check if the selected dimension is valid in current account structure.
    /// Check if the total percentage is 100%.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean validateAllocationRuleFromId_CN(RefRecId ruleId)
    {
        AssetAllocationRule_CN      rule;

        rule = AssetAllocationRule_CN::find(ruleId);

        return AssetAllocationRule_CN::validateAllocationRule_CN(rule);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>CN,JP</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4002369</DeveloperDocumentation>
	<FormRef>AssetallocationRuleSetup_CN</FormRef>
	<Label>@SYS4002351</Label>
	<TableGroup>Reference</TableGroup>
	<TitleField1>RuleId</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>FixedAssets</Modules>
	<ReplacementKey>RuleIdIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RuleId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RuleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RuleId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DimensionGrp</Name>
			<Label>@SYS4002366</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DimensionAttribute</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DimensionAttribute</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>DimensionAttributeRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RuleId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AllocationRuleId_CN</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RuleIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RuleId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DimensionAttribute</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttribute</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DimensionAttribute</Name>
					<Field>DimensionAttribute</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>