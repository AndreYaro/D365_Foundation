<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustPrepaymentCustInvoice</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustPrepaymentCustInvoice extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static CustPrepaymentCustInvoice find(recId _recId, boolean _forUpdate = false)
    {
        CustPrepaymentCustInvoice custPrepaymentCustInvoice;

        custPrepaymentCustInvoice.selectForUpdate(_forUpdate);

        select firstOnly custPrepaymentCustInvoice
            where custPrepaymentCustInvoice.RecId == _recId;

        return custPrepaymentCustInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecIdPrepaymentInvoiceId</Name>
				<Source><![CDATA[
    public static CustPrepaymentCustInvoice findByRecIdPrepaymentInvoiceId(RecId _RecId, RecId _prepaymentInvoiceId, RefTableId _tableId , boolean _forUpdate = false)
    {
        CustPrepaymentCustInvoice custPrepaymentCustInvoice;
        custPrepaymentCustInvoice.selectForUpdate(_forUpdate);

        select firstonly custPrepaymentCustInvoice
            where custPrepaymentCustInvoice.CustPrepaymentInvoiceTable == _prepaymentInvoiceId
            && custPrepaymentCustInvoice.SourceRecId == _RecId
            && custPrepaymentCustInvoice.SourceTableId == _tableId;

        return custPrepaymentCustInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPrepaymentRelationExists</Name>
				<Source><![CDATA[
    public static boolean findPrepaymentRelationExists(RecId _prepaymentInvoiceId)
    {
        CustPrepaymentCustInvoice custPrepaymentCustInvoice;
        
        select count(RecId) from custPrepaymentCustInvoice
            where custPrepaymentCustInvoice.CustPrepaymentInvoiceTable == _prepaymentInvoiceId;

        return custPrepaymentCustInvoice.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByInvoiceJourIdPrepaymentInvoiceId</Name>
				<Source><![CDATA[
    public static CustPrepaymentCustInvoice findByInvoiceJourIdPrepaymentInvoiceId(RecId _invoiceId, RecId _prepaymentInvoiceId, boolean _forUpdate = false)
    {
        CustPrepaymentCustInvoice custPrepaymentCustInvoice;
        custPrepaymentCustInvoice.selectForUpdate(_forUpdate);

        select firstonly custPrepaymentCustInvoice
            where custPrepaymentCustInvoice.CustPrepaymentInvoiceTable == _prepaymentInvoiceId
            && custPrepaymentCustInvoice.CustInvoiceJour == _invoiceId;

        return custPrepaymentCustInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyAutomaticPrepayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Automatically applies the prepayment invoice to the standard invoice.
    /// </summary>
    /// <param name = "_custPrepaymentInvoiceTable">invoice table entry</param>
    /// <returns> true if the prepayment is applied </returns>
    internal static boolean applyAutomaticPrepayment(CustPrepaymentInvoiceTable _custPrepaymentInvoiceTable)
    {

        SalesTable salesTable = SalesTable::findSalesIdSalesType(_custPrepaymentInvoiceTable.SalesId, SalesType::Sales);

        CustPrepaymentCustInvoice custPrepaymentCustInvoice;

        boolean isPrepaymentApplied = false;
        custPrepaymentCustInvoice = CustPrepaymentCustInvoice::findByRecIdPrepaymentInvoiceId(salesTable.RecId, _custPrepaymentInvoiceTable.RecId, salesTable.TableId, false);

        if (!custPrepaymentCustInvoice)
        {
            CustPrepaymentCustInvoice::insertPrepaymentApplicationTrans(salesTable.RecId, _custPrepaymentInvoiceTable.RecId, salesTable.TableId, _custPrepaymentInvoiceTable.InvoiceDate, false);
            
            CustPrepaymentCustInvoice::updateAdvanceAppliedAmount(_custPrepaymentInvoiceTable.RecId, salesTable.RecId, _custPrepaymentInvoiceTable.InvoiceAmount, salesTable.TableId, false);
            isPrepaymentApplied = true;
        }

        return isPrepaymentApplied;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertPrepaymentApplicationTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the entry to denote a applcation of prepayment invoice to the standard invoice.
    /// </summary>
    /// <param name = "_standardInvoiceId">recid of the standrd invoice</param>
    /// <param name = "_advanceInvoiceId">redid of custprepaymentInvoice</param>
    /// <param name = "_TableId">tabelid of standard invoice</param>
    /// <param name = "_settlementPostingDate">date of settlement</param>
    /// <param name = "_isInvoicePosted">boolean to indicate caller form</param>
    internal static void insertPrepaymentApplicationTrans(RecId _standardInvoiceId, RecId _advanceInvoiceId, RefTableId _TableId, TransDate _settlementPostingDate = dateNull(), boolean _isInvoicePosted = false)
    {
        CustPrepaymentCustInvoice custPrepaymentCustInvoice;

        if (!_isInvoicePosted)
        {
            custPrepaymentCustInvoice.SourceRecId = _standardInvoiceId;
            custPrepaymentCustInvoice.SourceTableId = _TableId;
        }
        else
        {
            custPrepaymentCustInvoice.CustInvoiceJour = _standardInvoiceId;
        }

        custPrepaymentCustInvoice.CustPrepaymentInvoiceTable = _advanceInvoiceId;
        custPrepaymentCustInvoice.SettlementPostingDate = _settlementPostingDate;

        custPrepaymentCustInvoice.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAdvanceAppliedAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the applied amount in the table.
    /// </summary>
    /// <param name = "_appliedAdvanceInvoice">RecId of prepaymentInvoice</param>
    /// <param name = "_standardInvoice">ReciId of the standard invoice</param>
    /// <param name = "_appliedAmount">Amount that is applied</param>
    /// <param name = "_TableId">Table Id of the standard invoice</param>
    /// <param name = "_isInvoicePosted">boolean to indicate the caller form</param>
    static void updateAdvanceAppliedAmount(RecId _appliedAdvanceInvoice, RecId _standardInvoice, AmountCur _appliedAmount, RefTableId _TableId, boolean _isInvoicePosted)
    {
        CustPrepaymentCustInvoice custPrepaymentCustInvoiceLoc;

        if (!_isInvoicePosted)
            select firstonly forupdate custPrepaymentCustInvoiceLoc
                where custPrepaymentCustInvoiceLoc.CustPrepaymentInvoiceTable == _appliedAdvanceInvoice
                    && custPrepaymentCustInvoiceLoc.SourceRecId == _standardInvoice
                    && custPrepaymentCustInvoiceLoc.SourceTableId == _TableId;
        else
        {
            select firstonly forupdate custPrepaymentCustInvoiceLoc
                where custPrepaymentCustInvoiceLoc.CustPrepaymentInvoiceTable == _appliedAdvanceInvoice
                    && custPrepaymentCustInvoiceLoc.CustInvoiceJour == _standardInvoice;
        }

        if (custPrepaymentCustInvoiceLoc)
        {
            custPrepaymentCustInvoiceLoc.AmountCur = _appliedAmount;
            custPrepaymentCustInvoiceLoc.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalAdvanceAppliedAmountForSalesOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the total advance applied amount for the sales order.
    /// </summary>
    /// <param name = "_salesTable">
    /// The sales order record.
    /// </param>
    /// <returns>
    /// The total advance applied amount.
    /// </returns>
    public static AmountCur totalAdvanceAppliedAmountForSalesOrder(SalesTable _salesTable)
    {
        AmountCur totalAdvanceAppliedAmount = 0;
        CustPrepaymentCustInvoice custPrepaymentCustInvoiceLoc;

        select sum(AmountCur) from custPrepaymentCustInvoiceLoc
            where custPrepaymentCustInvoiceLoc.SourceRecId == _salesTable.RecId
            && custPrepaymentCustInvoiceLoc.SourceTableId == tablenum(SalesTable);

        return custPrepaymentCustInvoiceLoc.AmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalAdvanceAppliedAmountForInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the total prepayment applied amount for the invoice journal.
    /// </summary>
    /// <param name = "_custInvoiceJour">
    /// The invoice journal record.
    /// </param>
    /// <returns>
    /// The total advance applied amount.
    /// </returns>
    public static AmountCur totalAdvanceAppliedAmountForInvoiceJour(CustInvoiceJour _custInvoiceJour)
    {
        AmountCur totalAdvanceAppliedAmount = 0;

        if (_custInvoiceJour.RecId)
        {
            CustPrepaymentCustInvoice custPrepaymentCustInvoiceLoc;

            select sum(AmountCur) from custPrepaymentCustInvoiceLoc
            where custPrepaymentCustInvoiceLoc.CustInvoiceJour == _custInvoiceJour.RecId;

            totalAdvanceAppliedAmount = custPrepaymentCustInvoiceLoc.AmountCur;
        }

        return totalAdvanceAppliedAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteRefEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the record from the <c>CustPrepaymentCustInvoice</c> table.
    /// </summary>
    /// <param name = "_RecId">
    /// The reference record ID
    /// </param>
    /// <param name = "_prepaymentInvoiceId">
    /// The prepayment invoice record ID
    /// </param>
    /// <param name = "_tableid">
    /// The reference table ID
    /// </param>
    public static void deleteRefEntry(RecId _RecId, RecId _prepaymentInvoiceId, RefTableId _tableid)
    {
        CustPrepaymentCustInvoice custPrepaymentCustInvoice;

        delete_from custPrepaymentCustInvoice
            where custPrepaymentCustInvoice.SourceRecId == _RecId
                && custPrepaymentCustInvoice.CustPrepaymentInvoiceTable == _prepaymentInvoiceId
                && custPrepaymentCustInvoice.SourceTableId == _tableid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteInvoiceRefEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the record from the <c>CustPrepaymentCustInvoice</c> table.
    /// </summary>
    /// <param name = "_RecId">
    /// The reference record ID
    /// </param>
    /// <param name = "_prepaymentInvoiceId">
    /// The prepayment invoice record ID
    /// </param>
    public static void deleteInvoiceRefEntry(RecId _RecId, RecId _prepaymentInvoiceId)
    {
        CustPrepaymentCustInvoice custPrepaymentCustInvoice;

        delete_from custPrepaymentCustInvoice
            where custPrepaymentCustInvoice.CustInvoiceJour == _RecId
                && custPrepaymentCustInvoice.CustPrepaymentInvoiceTable == _prepaymentInvoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deletedAllInvoicedRefEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the record from the <c>CustPrepaymentCustInvoice</c> table.
    /// </summary>
    /// <param name = "_recId">
    /// The reference record ID for which the prepayment relation is to be deleted
    /// </param>
    /// <param name = "_refTableId">
    /// The reference table ID
    /// </param>
    public static void deletedAllInvoicedRefEntry(RecId _recId, RefTableId _refTableId)
    {
        CustPrepaymentCustInvoice custPrepaymentCustInvoice;

        select count(RecId) from custPrepaymentCustInvoice
            where custPrepaymentCustInvoice.SourceRecId == _recId
                && custPrepaymentCustInvoice.SourceTableId == _refTableId;

        if (custPrepaymentCustInvoice.RecId > 0)
        {
            ttsbegin;

            delete_from custPrepaymentCustInvoice
            where custPrepaymentCustInvoice.SourceRecId == _recId
                && custPrepaymentCustInvoice.SourceTableId == _refTableId;

            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>WorksheetHeader</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<PrimaryIndex>PrepaymentIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustPrepaymentInvoiceTable</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>SettlementPostingDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS114020</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustInvoiceJour</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceTableId</Name>
			<ExtendedDataType>PrepaymentRefTableId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PrepaymentRefIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>CustPrepaymentInvoiceTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PrepaymentInvJourIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>CustPrepaymentInvoiceTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CustInvoiceJour</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RefIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InvJourIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CustInvoiceJour</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PrepaymentIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>CustPrepaymentInvoiceTable</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustPrepaymentInvoiceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustPrepaymentInvoiceTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustPrepaymentInvoiceTable</Name>
					<Field>CustPrepaymentInvoiceTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecIdCopy1</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustInvoiceJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustInvoiceJour</Name>
					<Field>CustInvoiceJour</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>