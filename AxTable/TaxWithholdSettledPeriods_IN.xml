<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdSettledPeriods_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxWithholdSettledPeriods_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether <c>TaxWithholdSettledPeriods_IN</c> record exists or not for specified parameter.
    /// </summary>
    /// <param name="_taxWithholdPeriodRecId">
    /// Record Id of Withhold tax settlement period on the basis check operation will perform.
    /// </param>
    /// <param name="_taxType">
    /// Tax type used to find the record.
    /// </param>
    /// <param name="_taxWithholdRegNumberRecId">
    /// Record Id of <c>TaxInformation </c>
    /// </param>
    /// <param name="_fromDate">
    /// From date to find the record .
    /// </param>
    /// <param name="_toDate">
    /// To date find the record.
    /// </param>
    /// <returns>
    /// Return true if record exists otherwise false.
    /// </returns>
    public static boolean exist(TaxWithholdPeriodRecId_IN    _taxWithholdPeriodRecId,
                                TaxWithholdType_IN           _taxType,
                                TaxWithholdRegNumberRecId_IN _taxWithholdRegNumberRecId,
                                TransDate                    _fromDate,
                                TransDate                    _toDate)
    {
        return (select firstonly RecId from taxWithholdSettledPeriods_IN
                    index hint TaxPeriodIdx
                    where taxWithholdSettledPeriods_IN.TaxWithholdSettlementPeriod == _taxWithholdPeriodRecId
                       && taxWithholdSettledPeriods_IN.TaxType                     == _taxType
                       && taxWithholdSettledPeriods_IN.TaxWithholdRegNumber        == _taxWithholdRegNumberRecId
                       && taxWithholdSettledPeriods_IN.FromDate                    == _fromDate
                       && taxWithholdSettledPeriods_IN.ToDate                      == _toDate).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the <c>TaxWithholdSettledPeriods_IN</c> table for the specified record id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forupdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing <c>TaxWithholdSettledPeriods_IN</c> table.
    /// </returns>
    public static TaxWithholdSettledPeriods_IN find(RefRecId            _recId,
                                                    boolean             _forupdate        = false,
                                                    ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxWithholdSettledPeriods_IN taxWithholdSettledPeriods;

        taxWithholdSettledPeriods.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxWithholdSettledPeriods.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxWithholdSettledPeriods
            where taxWithholdSettledPeriods.RecId == _recId;

        return taxWithholdSettledPeriods;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTaxPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the <c>TaxWithholdSettledPeriods_IN</c> table for the specified parameters.
    /// </summary>
    /// <param name="_taxWithholdPeriodRecId">
    /// The record Id of <c>TaxWithholdHead_IN</c> table
    /// </param>
    /// <param name="_taxType">
    /// Tax type used to find the record.
    /// </param>
    /// <param name="_date">
    /// To find the record equal to this date .
    /// </param>
    /// <param name="_taxWithholdRegNumberRecId">
    /// Record Id of <c>TaxInformation_IN</c>
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <returns>
    /// A buffer containing <c>TaxWithholdSettledPeriods_IN</c> table.
    /// </returns>
    static public TaxWithholdSettledPeriods_IN findByTaxPeriod(TaxWithholdPeriodRecId_IN    _taxWithholdPeriodRecId,
                                                               TaxWithholdType_IN           _taxType,
                                                               TransDate                    _date,
                                                               TaxWithholdRegNumberRecId_IN _taxWithholdRegNumberRecId,
                                                               boolean                    _forUpdate = false)
    {
        TaxWithholdSettledPeriods_IN     taxWithholdSettledPeriods;

        if (_taxWithholdPeriodRecId && _date)
        {
            taxWithholdSettledPeriods.selectForUpdate(_forUpdate);
            select firstonly taxWithholdSettledPeriods
                where taxWithholdSettledPeriods.TaxWithholdSettlementPeriod == _taxWithholdPeriodRecId
                   && taxWithholdSettledPeriods.TaxType                     == _taxType
                   && taxWithholdSettledPeriods.TaxWithholdRegNumber        == _taxWithholdRegNumberRecId
                   && taxWithholdSettledPeriods.FromDate                    <= _date
                   && taxWithholdSettledPeriods.ToDate                      >= _date;
        }

        return taxWithholdSettledPeriods;
    }

]]></Source>
			</Method>
			<Method>
				<Name>versionSumUp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Increases the <c>TaxWithholdSettledPeriods_IN</c> table version number
    /// </summary>
    /// <param name="_taxWithholdPeriodRecId_IN">
    /// Record id <c>TaxWithholdHead_IN</c> table
    /// </param>
    /// <param name="_taxType">
    ///  Withhold tax type.
    /// </param>
    /// <param name="_taxWithholdRegNumberRecId">
    ///  Record Id of <c>TaxInformation_IN</c>
    /// </param>
    /// <param name="_date">
    ///  To find the record equal to this date .
    /// </param>
    public static void versionSumUp(TaxWithholdPeriodRecId_IN     _taxWithholdPeriodRecId_IN,
                                           TaxWithholdType_IN            _taxType,
                                           TaxWithholdRegNumberRecId_IN  _taxWithholdRegNumberRecId,
                                           TransDate                     _date)
    {
        TaxWithholdSettledPeriods_IN     taxWithholdSettledPeriods;

        ttsbegin;
        select forupdate taxWithholdSettledPeriods
            where taxWithholdSettledPeriods.TaxWithholdSettlementPeriod == _taxWithholdPeriodRecId_IN
               && taxWithholdSettledPeriods.TaxWithholdRegNumber        == _taxWithholdRegNumberRecId
               && taxWithholdSettledPeriods.FromDate                    <= _date
               && taxWithholdSettledPeriods.ToDate                      >= _date;

        taxWithholdSettledPeriods.VersionNum += 1;
        taxWithholdSettledPeriods.update();
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS63788</DeveloperDocumentation>
	<FormRef>TaxWithholdPeriods_IN</FormRef>
	<Label>@GLS5483</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>FromDate</TitleField1>
	<TitleField2>ToDate</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>TaxPeriodIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdSettlementPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdRegNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VersionNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Misc</Name>
			<Label>@SYS130398</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxWithholdRegNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@SYS40</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS24050</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>TaxWithholdType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdRegNumber</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxWithholdRegNumberRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdSettlementPeriod</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxWithholdPeriodRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS35904</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>VersionNum</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxWithholdVersion_IN</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxPeriodIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxWithholdSettlementPeriod</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxWithholdRegNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ToDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxWithholdHeadIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxWithholdSettlementPeriod</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxWithholdRegNumberIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxWithholdRegNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdHead</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxWithholdHead_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdHead_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdHead_IN_TaxWithholdSettledPeriods_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdSettlementPeriod</Name>
					<Field>TaxWithholdSettlementPeriod</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdRegNumber</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxWithholdRegNumbers_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdRegNumbers_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdRegNumbers_IN_TaxWithholdSettledPeriods_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxWithholdRegNumber</Name>
					<Field>TaxWithholdRegNumber</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>