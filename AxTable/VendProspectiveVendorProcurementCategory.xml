<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendProspectiveVendorProcurementCategory</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendProspectiveVendorProcurementCategory extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified <c>VendProspectiveVendorProcurementCategory</c>.
    /// </summary>
    /// <param name="_prospectiveVendorProcurementCategoryRecId">
    /// The <c>RefRecId</c> of the <c>VendProspectiveVendorProcurementCategory</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to select the record for update.
    /// </param>
    /// <returns>
    /// A <c>VendProspectiveVendorProcurementCategory</c> table buffer.
    /// </returns>
    public static VendProspectiveVendorProcurementCategory find(VendProspectiveVendorProcurementCategoryRecId  _prospectiveVendorProcurementCategoryRecId,
                                                                boolean _forUpdate = false)
    {
        VendProspectiveVendorProcurementCategory prospectiveVendorProcurementCategory;

        if (_prospectiveVendorProcurementCategoryRecId)
        {
            prospectiveVendorProcurementCategory.selectForUpdate(_forUpdate);

            select firstOnly prospectiveVendorProcurementCategory
                where prospectiveVendorProcurementCategory.RecId  == _prospectiveVendorProcurementCategoryRecId;
        }

        return prospectiveVendorProcurementCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a <c>VendProspectiveVendorProcurementCategory</c> record if it does not already exist.
    /// </summary>
    /// <param name = "_ecoResCategory">The associated <c>EcoResCategory</c> record.</param>
    /// <param name = "_vendProspectiveVendorRegistration">The associated <c>VendProspectiveVendorRegistration</c> record.</param>
    /// <returns>A <c>VendProspectiveVendorProcurementCategory</c> table buffer.</returns>
    public static VendProspectiveVendorProcurementCategory addCategory(EcoResCategory _ecoResCategory, VendProspectiveVendorRegistration _vendProspectiveVendorRegistration)
    {
        VendProspectiveVendorProcurementCategory vendProspectiveVendorProcurementCategory;

        if (_ecoResCategory && _vendProspectiveVendorRegistration)
        {
            if (!VendProspectiveVendorProcurementCategory::findByCategoryAndProspectiveVendorRegistration(_ecoResCategory.RecId, _vendProspectiveVendorRegistration.RecId))
            {
                ttsbegin;
                vendProspectiveVendorProcurementCategory.Category = _ecoResCategory.RecId;
                vendProspectiveVendorProcurementCategory.ProspectiveVendorRegistration = _vendProspectiveVendorRegistration.RecId;
                vendProspectiveVendorProcurementCategory.ValidFrom = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
                vendProspectiveVendorProcurementCategory.ValidTo = maxDate();
                vendProspectiveVendorProcurementCategory.insert();
                ttscommit;
            }
            else
            {
                warning(strFmt("@SCM:ProspectiveVendorRegistrationDuplicateCategory", _ecoResCategory.Name));
            }
        }

        return vendProspectiveVendorProcurementCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCategoryAndProspectiveVendorRegistration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified <c>VendProspectiveVendorProcurementCategory</c> by its associated <c>EcoResCategory</c> and <c>VendProspectiveVendorRegistration</c> record.
    /// </summary>
    /// <param name="_ecoResCategoryRecId">
    /// The associated <c>VendProspectiveVendorEcoResCategoryRecId</c> record.
    /// </param>
    /// <param name="_prospectiveVendorRegistrationRecId">
    /// The associated <c>VendProspectiveVendorRegistration</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to select the record for update.
    /// </param>
    /// <returns>
    /// A <c>VendProspectiveVendorProcurementCategory</c> table buffer.
    /// </returns>
    public static VendProspectiveVendorProcurementCategory findByCategoryAndProspectiveVendorRegistration(VendProspectiveVendorEcoResCategoryRecId  _ecoResCategoryRecId,
                                                                                                          VendProspectiveVendorRegistrationRecId  _prospectiveVendorRegistrationRecId,
                                                                                                          boolean _forUpdate = false)
    {
        VendProspectiveVendorProcurementCategory prospectiveVendorProcurementCategory;

        if (_ecoResCategoryRecId && _prospectiveVendorRegistrationRecId)
        {
            prospectiveVendorProcurementCategory.selectForUpdate(_forUpdate);

            select firstOnly prospectiveVendorProcurementCategory
                where prospectiveVendorProcurementCategory.Category  == _ecoResCategoryRecId
                    && prospectiveVendorProcurementCategory.ProspectiveVendorRegistration == _prospectiveVendorRegistrationRecId;
        }

        return prospectiveVendorProcurementCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupProcurementCategoriesForVendor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Setup procurement categories on vendor.
    /// </summary>
    /// <param name="_prospectiveVendorRegistrationRecId">
    /// The associated <c>VendProspectiveVendorRegistration</c> record.
    /// </param>
    /// <param name="_vendAccount">
    /// The <c>VendAccount</c> number of the <c>VendTable</c> record.
    /// </param>
    public static void setupProcurementCategoriesForVendor(VendAccount _vendAccount, VendProspectiveVendorRegistrationRecId  _prospectiveVendorRegistrationRecId)
    {
        if (!_vendAccount || !VendProspectiveVendorRegistration::find(_prospectiveVendorRegistrationRecId))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        VendProspectiveVendorProcurementCategory prospectiveVendorProcurementCategory;
        RecordInsertList                         vendCategoryStatusList                     = new RecordInsertList(tableNum(VendProcurementCategoryStatus));
        Set                                      vendCategoryToAddSet                       = new Set(Types::Int64);

        while select prospectiveVendorProcurementCategory
            where prospectiveVendorProcurementCategory.ProspectiveVendorRegistration == _prospectiveVendorRegistrationRecId
        {
            if  (!vendCategoryToAddSet.in(prospectiveVendorProcurementCategory.Category)
                && !VendCategory::exist(_vendAccount, prospectiveVendorProcurementCategory.Category, prospectiveVendorProcurementCategory.DataAreaId))
            {
                vendCategoryToAddSet.add(prospectiveVendorProcurementCategory.Category);

                VendCategory vendCategory;
                vendCategory.Category       = prospectiveVendorProcurementCategory.Category;
                vendCategory.VendorAccount  = _vendAccount;
                vendCategory.VendorDataArea = prospectiveVendorProcurementCategory.DataAreaId;
                // The insert method of VendCategory will create a VendProcurementCategoryStatus record
                // This should be avoided since the correct ValidFrom, ValidTo and CategoryStatus values should be used
                vendCategory.doInsert();

                VendProcurementCategoryStatus vendCategoryStatus;
                vendCategoryStatus.VendorCategory        = vendCategory.RecId;
                vendCategoryStatus.ValidFrom             = prospectiveVendorProcurementCategory.ValidFrom;
                vendCategoryStatus.ValidTo               = prospectiveVendorProcurementCategory.ValidTo;
                vendCategoryStatus.VendorCategoryStatus  = prospectiveVendorProcurementCategory.CategoryStatus;
                vendCategoryStatusList.add(vendCategoryStatus);
            }
        }

        vendCategoryStatusList.insertDatabase();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>VendorPortal</ConfigurationKey>
	<Label>@SCM:ProspectiveVendorProcurementCategory</Label>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>Category</TitleField1>
	<TitleField2>ProspectiveVendorRegistration</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>Registration_CategoryIdx</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>Registration_CategoryIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProspectiveVendorRegistration</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProspectiveVendorRegistration</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProspectiveVendorRegistration</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CategoryStatus</Name>
			<Label>@SYS335335</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProspectiveVendorRegistration</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>VendProspectiveVendorRegistrationRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Category</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>VendProspectiveVendorEcoResCategoryRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CategoryStatus</Name>
			<EnumType>VendCategoryStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<ExtendedDataType>ValidFromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<ExtendedDataType>ValidToDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Registration_CategoryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProspectiveVendorRegistration</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Category</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategory</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Category</Name>
					<Field>Category</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendProspectiveVendorRegistration</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendProspectiveVendorRegistration</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProspectiveVendorRegistration</Name>
					<Field>ProspectiveVendorRegistration</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>