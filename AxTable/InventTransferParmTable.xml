<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferParmTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransferParmTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkIfLineRefExists</Name>
				<Source><![CDATA[
    public display container checkIfLineRefExists()
    {
        container imageContainer;

        if (InventTransferParmLine::existTableRefId(this.ParmId,this.TransferId))
        {
            imageContainer = ImageReference::constructForSymbol(ImageReferenceSymbol::Accept, "@SCM:InventTransferParm_checkLinesReferenceImage_Exists").pack();
        }
        else
        {
            imageContainer = ImageReference::constructForSymbol(ImageReferenceSymbol::Warning, "@SCM:InventTransferParm_checkLinesReferenceImage_DoesNotExist").pack();
        }

        return imageContainer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCFDIApplicable_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if CFDI is applicable for the current transfer order.
    /// </summary>
    /// <returns>
    /// true if CFDI applicable for the current <c>InventTransferTable</c>; otherwise, false.
    /// </returns>
    public boolean checkCFDIApplicable_MX()
    {
        boolean ret = InventTransferTable::find(this.TransferId).checkCFDIApplicable_MX();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates <c>InventTransferParmLine</c> records based on the update type.
    /// </summary>
    /// <param name="_createLines">
    /// A <c>NoYes::Yes</c> enumeration value when line creation is forced; otherwise, a <c>NoYes::No</c> enumeration value.
    /// </param>
    /// <returns>
    /// true if related <c>InventTransferParmLine</c> records where deleted; otherwise, false.
    /// </returns>
    /// <remarks>
    /// The default value for the _createLines parameter is the value of the <c>EditLines</c> field.
    /// </remarks>
    public boolean createLines(NoYes _createLines = this.EditLines)
    {
        boolean wasParmLinesDeleted;

        if (_createLines)
        {
            //delete existing parm lines since new ones will be created
            InventTransferParmLine::deleteParmId(this.ParmId, this.TransferId);
            wasParmLinesDeleted = true;

            switch (this.UpdateType)
            {
                case InventTransferUpdateType::PickingList :
                    InventTransferParmLine::createPickLines(this);
                    break;
                case InventTransferUpdateType::Shipment :
                    InventTransferParmLine::createShipLines(this);
                    break;
                case InventTransferUpdateType::Receive :
                    InventTransferParmLine::createReceiveLines(this);
                    break;
                default:
                    this.createLinesDelegate(this);
            }
        }

        return wasParmLinesDeleted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLinesDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for creating <c>InventTransferParmLine</c> records based on a custom update type.
    /// </summary>
    /// <param name="_inventTransferParmTable">
    /// A record of an <c>InventTransferParmTable</c>
    /// </param>
    delegate void createLinesDelegate(InventTransferParmTable _inventTransferParmTable)
    {

    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTransferTable_RU</Name>
				<Source><![CDATA[
    void initFromInventTransferTable_RU(InventTransferTable _inventTransferTable)
    {
        this.LicenseCardType_RU     = _inventTransferTable.LicenseCardType_RU;
        this.LicenseCardRegNum_RU   = _inventTransferTable.LicenseCardRegNum_RU;
        this.LicenseCardSeries_RU   = _inventTransferTable.LicenseCardSeries_RU;
        this.LicenseCardNum_RU      = _inventTransferTable.LicenseCardNum_RU;
        this.CarrierType_RU         = _inventTransferTable.CarrierType_RU;
        this.CarrierCode_RU         = _inventTransferTable.CarrierCode_RU;
        this.DeliveryDate_RU        = _inventTransferTable.DeliveryDate_RU;
        this.VehicleModel_RU        = _inventTransferTable.VehicleModel_RU;
        this.VehiclePlateNum_RU     = _inventTransferTable.VehiclePlateNum_RU;
        this.WaybillNum_RU          = _inventTransferTable.WaybillNum_RU;
        this.DriverName_RU          = _inventTransferTable.DriverName_RU;
        this.DrivingLicenseNum_RU   = _inventTransferTable.DrivingLicenseNum_RU;
        this.TransportationType_RU  = _inventTransferTable.TransportationType_RU;

        this.TransferType_RU            = _inventTransferTable.TransferType_RU;
        this.PartyAccountNum_RU         = _inventTransferTable.PartyAccountNum_RU;
        this.PartyAgreementHeaderExt_RU    = _inventTransferTable.PartyAgreementHeaderExt_RU;
        this.PriceGroupId_RU            = _inventTransferTable.PriceGroupId_RU;
        this.CurrencyCode_RU            = _inventTransferTable.CurrencyCode_RU;
        this.DriverContact_RU           = _inventTransferTable.DriverContact_RU;
        this.TransportInvoiceType_RU    = _inventTransferTable.TransportInvoiceType_RU;
        this.CargoDescription_RU        = _inventTransferTable.CargoDescription_RU;
        this.CargoPacking_RU            = _inventTransferTable.CargoPacking_RU;
        this.LadingPostalAddress_RU     = _inventTransferTable.LadingPostalAddress_RU;
        this.UnladingPostalAddress_RU   = _inventTransferTable.UnladingPostalAddress_RU;
        this.TransportationPayerType_RU = _inventTransferTable.TransportationPayerType_RU;
        this.TransportationPayer_RU     = _inventTransferTable.TransportationPayer_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmDefault</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes default parameters.
    /// </summary>
    public void initParmDefault()
    {
        this.initValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.TransDate          = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        this.EditLines          = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWMSArrivalParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the values when they are called from a WMS arrival.
    /// </summary>
    public void initWMSArrivalParameters()
    {
        this.ReceiveUpdateQty   = InventTransferReceiveUpdateQty::ReceiveNow;
        this.EditLines          = NoYes::Yes;
        this.ExplodeLines       = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWMSShipmentParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the values when they are called from a WMS shipment.
    /// </summary>
    public void initWMSShipmentParameters()
    {
        this.ShipUpdateQty  = InventTransferShipUpdateQty::ShipNow;
        this.EditLines      = NoYes::Yes;
        this.ExplodeLines   = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts a record into the database and creates a related <c>InventTransferParmLine</c> table record.
    /// </summary>
    /// <param name="_createLines">
    ///    .
    /// </param>
    public void insert(boolean _createLines = true)
    {
        ttsbegin;

        if (!this.LineNum)
        {
            this.LineNum = InventTransferParmTable::lastLineNum(this.ParmId) + 1;
        }

        super();

        if (_createLines)
        {
            this.createLines();
        }

        ttscommit;

        // <GIN>
        #ISOCountryRegionCodes
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            this.SysExtensionSerializerMap::postInsert();
        }
        // </GIN>
        
        if (TaxIntegrationUtils::isTransitDocumentEnabled())
        {
            // Transit documents
            TransitDocumentManager_IN transitDocManager = TransitDocumentManager_IN::newManager();
            if (transitDocManager.existsAnyTransitDocType() 
                && transitDocManager.existTransitRuleForTransType(tableNum(InventTransferTable)))
            {
                InventTransferTable inventTransferTable = InventTransferTable::find(this.TransferId);

                transitDocManager.transit(inventTransferTable, this);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Called by the kernel when a field on the table has its value modified.
    /// </summary>
    /// <param name="_fieldId">
    ///    The field ID that is modified.
    /// </param>
    public void modifiedField(fieldId _fieldId)
    {
        // <GEERU>
        InventTransferJour inventTransferJour;
        #ISOCountryRegionCodes
        // </GEERU>
        void updateRecord()
        {
            if (this.TransferId && FormDataUtil::getFormDataSource(this))
            {
                FormDataUtil::getFormDataSource(this).write();
            }
            else if (this.TransferId)
            {
                this.update();
            }
        }

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(InventTransferParmTable, PickUpdateQty):
                updateRecord();
                break;

            case fieldNum(InventTransferParmTable, ShipUpdateQty):
                // <GEERU>
                if ((SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) || BrazilParameters::isEnabled())
                     && this.ShipUpdateQty != InventTransferShipUpdateQty::DocumentReturn_RU)
                {
                    if (this.VoucherShipmentId)
                    {
                        this.VoucherShipmentId = nullValue(this.VoucherShipmentId);
                        this.TrackingId        = nullValue(this.TrackingId);
                    }
                }
                // </GEERU>
                updateRecord();
                break;

            case fieldNum(InventTransferParmTable, ReceiveUpdateQty):
                // <GEERU>
                if (this.ReceiveUpdateQty != InventTransferReceiveUpdateQty::Shipment
                    || (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
                        && this.ReceiveUpdateQty != InventTransferReceiveUpdateQty::DocumentReturn_RU))
                // </GEERU>
                {
                    if (this.VoucherShipmentId)
                    {
                        this.VoucherShipmentId = nullValue(this.VoucherShipmentId);
                        this.TrackingId        = nullValue(this.TrackingId);
                    }
                }
                updateRecord();
                break;

            case fieldNum(InventTransferParmTable, EditLines):
                updateRecord();
                break;

            case fieldNum(InventTransferParmTable, ExplodeLines):
                updateRecord();
                break;

            // <GEERU>
            case fieldnum(InventTransferParmTable, AutoReceiveQty):
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                {
                    updateRecord();
                }
                break;
            case fieldNum(InventTransferParmTable, CarrierType_RU):
                this.CarrierCode_RU = '';
                break;
            case fieldNum(InventTransferParmTable, TransportationPayerType_RU):
                this.TransportationPayer_RU = '';
                break;
            // </GEERU>

            case fieldNum(InventTransferParmTable, VoucherShipmentId):
                // <GEERU>
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                {
                    inventTransferJour  = InventTransferJour::find(this.TransferId,this.VoucherShipmentId);
                    this.TrackingId     = inventTransferJour.TrackingId;
                    if (this.UpdateType == InventTransferUpdateType::Shipment)
                        this.AutoReceiveQty = inventTransferJour.AutoReceiveQty;
                }
                else
                {
                // </GEERU>
                    this.TrackingId = InventTransferJour::find(this.TransferId,this.VoucherShipmentId).TrackingId;
                // <GEERU>
                }
                // </GEERU>
                updateRecord();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryInventTransferParmLine_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to create and return the query.
    /// </summary>
    /// <param name="_forupdate">
    /// If true, then select the record for updating.
    /// </param>
    /// <returns>
    /// Returns the query.
    /// </returns>
    public Query queryInventTransferParmLine_IN(boolean _forupdate = false)
    {
        Query                 query             = SysQuery::queryFromTableRelation(this, tablenum(InventTransferParmLine), _forupdate);
        QueryBuildDataSource  queryParmLineDS   = query.dataSourceTable(tablenum(InventTransferParmLine));

        FieldId fieldId;
        switch (this.UpdateType)
        {
            case InventTransferUpdateType::Shipment:
                fieldId = fieldnum(InventTransferParmLine, QtyShipNow);
            case InventTransferUpdateType::Receive:
                fieldId = fieldnum(InventTransferParmLine, QtyReceiveNow);
        }
        if (fieldId)
        {
            queryParmLineDS.addRange(fieldId).value(queryValue(SysQuery::valueNot(0)));
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the record.
    /// </summary>
    public void update()
    {
        // <GEERU>
        #ISOCountryRegionCodes
        boolean countryRegion_RU = SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]) || BrazilParameters::isEnabled();
        // </GEERU>
        if (this.ShipUpdateQty      != this.orig().ShipUpdateQty        ||
            this.PickUpdateQty      != this.orig().PickUpdateQty        ||
            this.ReceiveUpdateQty   != this.orig().ReceiveUpdateQty     ||
            this.EditLines          != this.orig().EditLines            ||
            this.ExplodeLines       != this.orig().ExplodeLines         ||
            this.VoucherShipmentId  != this.orig().VoucherShipmentId
            // <GBR>
            || (countryRegion_RU
                && this.AutoReceiveQty != this.orig().AutoReceiveQty)
            // </GBR>
            )
        {
            if (InventTransferExplodeLinesByFinTrackingDimFlight::instance().isEnabled())
            {
                if (this.ExplodeLines == NoYes::No && this.orig().ExplodeLines == NoYes::Yes)
                {
                    if (InventTransferTable::find(this.TransferId).hasTransferItemWithFinTrackingDim())
                    {
                        warning("@SCM:UncheckExplodeLinesWhenTransferFinancialTrackingDimensionItem");
                    }
                }
            }

            // <GEERU>
            if (!countryRegion_RU
                || (this.ReceiveUpdateQty != InventTransferReceiveUpdateQty::DocumentReturn_RU
                && this.ShipUpdateQty    != InventTransferShipUpdateQty::DocumentReturn_RU)
                || this.VoucherShipmentId)
            // </GEERU>
            {
                if (!this.createLines())
                {
                    //delete parm lines
                    InventTransferParmLine::deleteParmId(this.ParmId, this.TransferId);
                }
            }
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteParameters</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes the specified records.
    /// </summary>
    /// <param name="_parmId">
    ///    The parameter ID of record to be deleted.
    /// </param>
    static public void deleteParameters(Num _parmId)
    {
        InventTransferParmTable     inventTransferParmTable;

        ttsbegin;

        delete_from inventTransferParmTable
            where inventTransferParmTable.ParmId == _parmId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static public boolean exist(
        ParmId              _parmId,
        InventTransferId    _transferId)
    {
        return _parmId && _transferId &&
               (select inventTransferParmTable
                    where inventTransferParmTable.ParmId == _parmId &&
                          inventTransferParmTable.TransferId == _transferId
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static public InventTransferParmTable find(
        ParmId              _parmId,
        InventTransferId    _transferId,
        boolean             _forUpdate = false)
    {
        InventTransferParmTable     inventTransferParmTable;

        inventTransferParmTable.selectForUpdate(_forUpdate);

        if (_parmId && _transferId)
        {
            select firstonly inventTransferParmTable
                where inventTransferParmTable.ParmId        == _parmId
                   && inventTransferParmTable.TransferId    == _transferId;
        }

        return inventTransferParmTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>InventTransParmTable</c> table.
    /// </summary>
    /// <param name="_recid">
    /// The recid of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The specified record if found; otherwise, an empty buffer.
    /// </returns>
    static public InventTransferParmTable findRecId(RefRecId _recid, boolean _forUpdate = false)
    {
        InventTransferParmTable inventTransferParmTable;

        if (_recid)
        {
            inventTransferParmTable.selectForUpdate(_forUpdate);

            select firstonly inventTransferParmTable
                where inventTransferParmTable.RecId == _recId;
        }

        return inventTransferParmTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the last line number of the <c>InventTransferParmTable</c> table.
    /// </summary>
    /// <param name="_parmId">
    /// The parameter ID.
    /// </param>
    /// <returns>
    /// A <c>LineNum</c> value that represents the last line number of the <c>InventTransferParmTable</c>
    /// table.
    /// </returns>
    static public LineNum lastLineNum(ParmId _parmId)
    {
        return (select maxof(LineNum) from inventTransferParmTable
                    where inventTransferParmTable.ParmId == _parmId).LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLoadId_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// If the transfer order is being posted from a load, this method will return the load id.
    /// </summary>
    /// <returns>
    /// Load id of the load related to the transfer order being posted.
    /// </returns>
    public WHSLoadId getLoadId_BR()
    {
        InventTransferParmTableFiscalInfo_BR fiscalInfo;
        InventTransferParmTableShipStat_BR   shipmentStat;

        select firstOnly LoadId from shipmentStat
            exists join fiscalInfo
                where fiscalInfo.RecId == shipmentStat.InventTransferParmTableFiscalInfo_BR
                    && fiscalInfo.InventTransferParmTable == this.RecId;

        return shipmentStat.LoadId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransferParmTable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>InventTransferParmTable_IN</c> record associated with the current record.
    /// </summary>
    /// <returns>
    /// The <c>InventTransferParmTable_IN</c> record.
    /// </returns>
    public InventTransferParmTable_IN inventTransferParmTable_IN()
    {
        return this.SysExtensionSerializerMap::getExtensionTable(tableNum(InventTransferParmTable_IN));
    }

]]></Source>
			</Method>
			<Method>
				<Name>packInventTransferParmTable_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Packs the <c>InventTransferParmTable_IN</c> record into the current record.
    /// </summary>
    /// <param name ="_inventTransferParmTable_IN">
    /// The <c>InventTransferParmTable_IN</c> record.
    /// </param>
    public void packInventTransferParmTable_IN(InventTransferParmTable_IN _inventTransferParmTable_IN)
    {
        _InventTransferParmTable_IN.InventTransferParmTable = this.RecId;
        this.SysExtensionSerializerMap::packExtensionTable(_inventTransferParmTable_IN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shippedLicensePlatesWithUOMStructure</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct a <c>Query</c> object returning a list of license plates this transfer order was shipped on
    /// </summary>
    /// <returns>
    /// A <c>Query</c> objects with the <c>InventDim</c> list of license plates this transfer order was shipped on
    /// </returns>
    public Query shippedLicensePlatesWithUOMStructure()
    {
        Query query = new Query();

        QueryBuildDataSource qbdsInventTransferParmLine = query.addDataSource(tableNum(InventTransferParmLine));

        qbdsInventTransferParmLine.addRange(fieldNum(InventTransferParmLine, ParmId)).value(queryValue(this.ParmId));

        QueryBuildDataSource qdbsInventTransferLine = qbdsInventTransferParmLine.addDataSource(tableNum(InventTransferLine));
        if (this.UpdateType == InventTransferUpdateType::Shipment)
        {
            qdbsInventTransferLine.addLink(fieldNum(InventTransferParmLine, InventTransId), fieldNum(InventTransferLine, InventTransId));
        }
        else if (this.UpdateType == InventTransferUpdateType::Receive)
        {
            qdbsInventTransferLine.addLink(fieldNum(InventTransferParmLine, InventTransId), fieldNum(InventTransferLine, InventTransIdReceive));
        }
        else
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        qdbsInventTransferLine.joinMode(JoinMode::InnerJoin);

        QueryBuildDataSource qdbsInventTransOriginTransferShip = qdbsInventTransferLine.addDataSource(tableNum(InventTransOriginTransferShip));
        qdbsInventTransOriginTransferShip.addLink(fieldNum(InventTransferLine, TransferId), fieldNum(InventTransOriginTransferShip, TransferShipId));
        qdbsInventTransOriginTransferShip.addLink(fieldNum(InventTransferLine, LineNum), fieldNum(InventTransOriginTransferShip, TransferShipLineNum));
        qdbsInventTransOriginTransferShip.addLink(fieldNum(InventTransferLine, DataAreaId), fieldNum(InventTransOriginTransferShip, TransferShipDataAreaId));
        qdbsInventTransOriginTransferShip.joinMode(JoinMode::InnerJoin);
        
        QueryBuildDataSource qbdsInventTrans = qdbsInventTransOriginTransferShip.addDataSource(tableNum(InventTrans));
        qbdsInventTrans.addLink(fieldNum(InventTransOriginTransferShip, InventTransOrigin), fieldNum(InventTrans, InventTransOrigin));
        qbdsInventTrans.joinMode(JoinMode::InnerJoin);
        qbdsInventTrans.addRange(fieldNum(InventTrans, StatusIssue)).value(queryValue(Statusissue::Sold));

        QueryBuildDataSource qbdsInventDim = qbdsInventTrans.addDataSource(tableNum(InventDim));
        qbdsInventDim.joinMode(JoinMode::InnerJoin);
        qbdsInventDim.addLink(fieldNum(InventTrans, inventDimId), fieldNum(InventDim, inventDimId));
        qbdsInventDim.addRange(fieldNum(InventDim, LicensePlateId)).value(SysQuery::valueNotEmptyString());
        qbdsInventDim.addGroupByField(fieldNum(InventDim, LicensePlateId));

        QueryBuildDataSource qbdsWHSUomStructure = qbdsInventDim.addDataSource(tableNum(WHSUOMStructure));
        qbdsWHSUomStructure.joinMode(JoinMode::InnerJoin);
        qbdsWHSUomStructure.addLink(fieldNum(InventDim, LicensePlateId), fieldNum(WHSUOMStructure, LicensePlateId));
        qbdsWHSUomStructure.addRange(fieldNum(WHSUOMStructure, Module)).value(queryValue(WHSModule::Transfer));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasWHSItemParmLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check whether there is at least one WHS-enabled item in <c>InventTransferParmLine</c>
    /// </summary>
    /// <returns>
    /// True if there exists at least one WHS-enabled item in the relative <c>InventTransferParmLine</c> table; false otherwise
    /// </returns>
    public boolean hasWHSItemParmLines()
    {
        InventTransferParmLine parmLine;
        WHSInventEnabled whsInventEnabled;

        select firstonly RecId from parmLine
        where parmLine.ParmId == this.ParmId
            && parmLine.TransferId == this.TransferId
        exists join whsInventEnabled
        where parmLine.ItemId == whsInventEnabled.ItemId;

        return parmLine.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        if (TaxIntegrationUtils::isTransitDocumentEnabled())
        {
            this.TransitDocumentTransactionMap_IN::deleteTransitDocumentsForHeader();
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReceiving</Name>
				<Source><![CDATA[
    /// <summary>
    /// Is receiving.
    /// </summary>
    /// <returns>True if it is receiving; otherwise, false.</returns>
    public boolean isReceiving()
    {
        return this.UpdateType == InventTransferUpdateType::Receive
            && this.VoucherShipmentId
            && InventSTOReceiveTransactionIdTakeFromSTOShipmentFeatureExposure::isEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isShipmentCancellation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Is shipment cancellation.
    /// </summary>
    /// <returns>True if it is shipment cancellation; otherwise, false.</returns>
    public boolean isShipmentCancellation()
    {
        return this.CanceledShipmentJournalRecId
            && this.UpdateType == InventTransferUpdateType::Shipment;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventTransferOrders</ConfigurationKey>
	<DeveloperDocumentation>@SYS124011</DeveloperDocumentation>
	<Label>@SYS78308</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>TransferId</TitleField1>
	<TitleField2>UpdateType</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ParmTransferIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>Inventory</Modules>
	<PrimaryIndex>ParmTransferIdx</PrimaryIndex>
	<ReplacementKey>ParmTransferIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>InventTransferParmLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>InventTransferParmLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpdateType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherShipmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipUpdateQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiveUpdateQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintTransferShipment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintTransferReceipt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Carrier_RU</Name>
			<Label>@SYS50733</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CarrierType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierCode_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General_RU</Name>
			<Label>@SYS19924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OffSessionId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventPackingSlipEditing_LT</Name>
			<Label>@GLS112815</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Num_LT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LicenseCard_RU</Name>
			<Label>@GLS111069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LicenseCardType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicenseCardRegNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicenseCardSeries_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicenseCardNum_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OptionsPick</Name>
			<Label>@SYS54716</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrintTransferPickingList</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UsePrintManagementDestination</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Reservation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OptionsReceive</Name>
			<Label>@SYS321</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExplodeLines</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintTransferReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintProductLabel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintShelfLabel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OptionsShipment</Name>
			<Label>@SYS321</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExplodeLines</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoReceiveQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintTransferShipment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintBillOfLading_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintTransportInvoice_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintInvoice_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintProductLabel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintShelfLabel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Party_RU</Name>
			<Label>@SYS102988</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartyAccountNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartyAgreementHeaderExt_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Picking</Name>
			<Label>@SYS77806</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PickUpdateQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpdatedByWorker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Price_RU</Name>
			<Label>@SYS11865</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PriceGroupId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Receive</Name>
			<Label>@SYS52744</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReceiveUpdateQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherShipmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TrackingId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpdatedByWorker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Shipment</Name>
			<Label>@SYS50389</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ShipUpdateQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TrackingId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpdatedByWorker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UpdateType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExecutedDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Transportation_RU</Name>
			<Label>@GLS111070</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryDate_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VehicleModel_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VehiclePlateNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DriverName_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DrivingLicenseNum_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DriverContact_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportationType_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransportationPayer_RU</Name>
			<Label>@GLS100924</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransportationPayerType_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportationPayer_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TransportInvoice_RU</Name>
			<Label>@GLS221922</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CargoDescription_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CargoPacking_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransportInvoiceType_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EInvoice_MX</Name>
			<Label>@SYS341123</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CFDIEnabled_MX</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoReceiveQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferAutoReceiveQty</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CanceledShipmentJournalRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferJourRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CargoDescription_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>CargoDescription_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CargoPacking_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>CargoPacking_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CarrierCode_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>CarrierCode_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CarrierType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<EnumType>CarrierType_W</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DeliveryDate_RU</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>DlvDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DriverContact_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>DriverContact_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DriverName_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>DriverName_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DrivingLicenseNum_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>DrivingLicenseNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EditLines</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferEditLines</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ExecutedDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DateTimeExecuted</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExplodeLines</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS78725</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>InventDimFixedPickList</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimFixed</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>InventDimFixedReceiveList</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimFixed</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>InventDimFixedShipList</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimFixed</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JobStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ParmJobStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LadingPostalAddress_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
			<Label>@GLS116002</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicenseCardNum_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>LicenseCardNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicenseCardRegNum_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>LicenseCardRegNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicenseCardSeries_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>LicenseCardSeries_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LicenseCardType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<EnumType>LicenseCardType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Num_LT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>LT,LV</CountryRegionCodes>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@GLS107353</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OffSessionId_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU,CZ,EE,HU,LT,LV,PL</CountryRegionCodes>
			<ExtendedDataType>OffSessionId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParmId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PartyAccountNum_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>InventTransferPartyAccount_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PartyAgreementHeaderExt_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>AgreementHeaderExtRecId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PickUpdateQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventTransferPickUpdateQty</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PriceGroupId_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>CustPriceGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintBillOfLading_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<Label>@SYS26070</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintInvoice_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<Label>@GLS115577</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintProductLabel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RET3836</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintShelfLabel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RET3837</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintTransferPickingList</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS26347</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintTransferReceipt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS78307</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintTransferShipment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS78306</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PrintTransportInvoice_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<Label>@GLS221913</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ReceiveUpdateQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventTransferReceiveUpdateQty</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Reservation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferReservation</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>SetupPrintPickList</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PrintJobSettingsPacked</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>SetupPrintReceiveList</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PrintJobSettingsPacked</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>SetupPrintShipList</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PrintJobSettingsPacked</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ShipUpdateQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventTransferShipUpdateQty</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TrackingId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferTrackingId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS14475</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransferId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransferType_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<EnumType>InventTransferType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportationPayer_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TransportationPayer_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransportationPayerType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TransportationPayerType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportationType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>TransportationType_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransportInvoiceType_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<EnumType>TransportInvoiceType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>UnladingPostalAddress_RU</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
			<Label>@GLS116002</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>UpdatedByWorker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UpdateType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventTransferUpdateType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>UsePrintManagementDestination</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PrintMgmtUsePrintManagementDestination</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VehicleModel_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>VehicleModel_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VehiclePlateNum_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>VehiclePlateNum_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VoucherShipmentId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransferVoucherId</ExtendedDataType>
			<Label>@SYS78304</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaybillNum_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>RU</CountryRegionCodes>
			<ExtendedDataType>WaybillNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PackedExtensions</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SysExtensionSerializerPackedContainer</ExtendedDataType>
			<SaveContents>No</SaveContents>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CFDIEnabled_MX</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CFDIPackingSlipEnabled_MX</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ParmLineIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ParmTransferIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransferId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PartyAgreementHeaderExt_RUIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>PartyAgreementHeaderExt_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LadingPostalAddress_RUIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>LadingPostalAddress_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>UnladingPostalAddress_RUIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>UnladingPostalAddress_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventTransferParmCleanUpIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>JobStatus</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CreatedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>ParmBuffer</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Linenum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ParmId</MapField>
					<MapFieldTo>ParmId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Id</MapField>
					<MapFieldTo>TransferId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JobStatus</MapField>
					<MapFieldTo>JobStatus</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExecutedDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExecutedDateTime</MapField>
					<MapFieldTo>ExecutedDateTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LateSelection</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LateSelectionQuery</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>PackedExtensions</MapField>
					<MapFieldTo>PackedExtensions</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PackedPrioritizedIdList</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InventTransferMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>SourceRecId</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SourceTableId</MapField>
					<MapFieldTo>TableId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransferId</MapField>
					<MapFieldTo>TransferId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UpdateType</MapField>
					<MapFieldTo>UpdateType</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>Carrier_CustTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CarrierType_RU</Name>
					<Field>CarrierType_RU</Field>
					<ValueStr>CarrierType_W::Customer</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CarrierCode_RU</Name>
					<Field>CarrierCode_RU</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Carrier_VendTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Carrier_VendTable_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransferParmTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>CarrierType_RU</Name>
					<Field>CarrierType_RU</Field>
					<ValueStr>CarrierType_W::Vendor</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CarrierCode_RU</Name>
					<Field>CarrierCode_RU</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode_RU</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode_RU</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransferJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124012</EntityRelationshipRole>
			<RelatedTable>InventTransferJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ReceiveUpdateQty</Name>
					<Field>ReceiveUpdateQty</Field>
					<ValueStr>InventTransferReceiveUpdateQty::Shipment</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>UpdateType_Extern</Name>
					<RelatedField>UpdateType</RelatedField>
					<ValueStr>InventTransferUpdateType::Shipment</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VoucherShipmentId</Name>
					<Field>VoucherShipmentId</Field>
					<RelatedField>VoucherId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransferId</Name>
					<Field>TransferId</Field>
					<RelatedField>TransferId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTransferParmUpdate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124013</EntityRelationshipRole>
			<RelatedTable>InventTransferParmUpdate</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParmId</Name>
					<Field>ParmId</Field>
					<RelatedField>ParmId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransferTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransferTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransferId</Name>
					<Field>TransferId</Field>
					<RelatedField>TransferId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransferIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LadingPostalAddress_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LadingPostalAddress_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransferParmTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LadingPostalAddress_RU</Name>
					<SourceEDT>LogisticsPostalAddressRecId</SourceEDT>
					<Field>LadingPostalAddress_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>OfficialsTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>OfficialsTrans_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Link</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffSessionId_RU</Name>
					<SourceEDT>OffSessionId_RU</SourceEDT>
					<Field>OffSessionId_RU</Field>
					<RelatedField>OffSessionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PartyAgreementHeaderExt_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AgreementHeaderExt_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartyAgreementHeaderExt_RU</Name>
					<Field>PartyAgreementHeaderExt_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PartyVendTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PartyVendTable_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PartyAccountNum_RU</Name>
					<SourceEDT>InventTransferPartyAccount_RU</SourceEDT>
					<Field>PartyAccountNum_RU</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Payer_CustTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Payer_CustTable_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransferParmTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>TransportationPayerType_RU</Name>
					<Field>TransportationPayerType_RU</Field>
					<ValueStr>TransportationPayerType_RU::ThirdParty</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransportationPayer_RU</Name>
					<SourceEDT>TransportationPayer_RU</SourceEDT>
					<Field>TransportationPayer_RU</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PriceDiscGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<SourceEDT>CustPriceGroup</SourceEDT>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<SourceEDT>CustPriceGroup</SourceEDT>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PriceGroupId_RU</Name>
					<SourceEDT>CustPriceGroup</SourceEDT>
					<Field>PriceGroupId_RU</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TransportationTypeTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TransportationTypeTable_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransportationType_RU</Name>
					<SourceEDT>TransportationType_RU</SourceEDT>
					<Field>TransportationType_RU</Field>
					<RelatedField>Type</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnladingPostalAddress_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>UnladingPostalAddress_RU</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransferParmTable</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnladingPostalAddress_RU</Name>
					<SourceEDT>LogisticsPostalAddressRecId</SourceEDT>
					<Field>UnladingPostalAddress_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UpdatedByWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_InventTransferParmTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UpdatedByWorker</Name>
					<Field>UpdatedByWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VehicleModelTable_W</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VehicleModelTable_W</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VehicleModel_RU</Name>
					<SourceEDT>VehicleModel_W</SourceEDT>
					<Field>VehicleModel_RU</Field>
					<RelatedField>VehicleModel</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ModelIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>