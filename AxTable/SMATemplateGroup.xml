<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SMATemplateGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SMATemplateGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isCircular</Name>
				<Source><![CDATA[
    public boolean isCircular(SMATemplateGroupId _templateGroupId       = this.TemplateGroupId,
                                     SMATemplateGroupId _parentTemplateGroupId = this.ParentTemplateGroupId)
    {
        SMATemplateGroup    templateGroup;
        boolean             ret = false;

        // Does template group have a parent
        if (_parentTemplateGroupId)
        {
            // Find all children of the template group
            while select TemplateGroupId, ParentTemplateGroupId from templateGroup where templateGroup.TemplateGroupId == _parentTemplateGroupId
            {
                // Is
                if (templateGroup.ParentTemplateGroupId == _templateGroupId)
                {
                    return true;
                }
                else
                {
                    return this.isCircular(_templateGroupId, templateGroup.ParentTemplateGroupId);
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        if (SMATemplateGroup::isParent(this.TemplateGroupId))
        {
            // Not possible to delete a template that is a parent to other templates.
            return checkFailed(strfmt("@SYS87659", this.TemplateGroupId));
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        // Not possible to point at same template.
        if (this.ParentTemplateGroupId == this.TemplateGroupId)
        {
            // Group template '%1' can't be a parent to itself.
            return checkFailed(strfmt("@SYS87634", this.TemplateGroupId));
        }

        if (this.isCircular())
        {
            // The child %1 can not be parent to it's own parent tree.
            return checkFailed(strfmt("@SYS88038", this.ParentTemplateGroupId));
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(SMATemplateGroupId _templateGroupId)
    {
        return _templateGroupId && (select RecId from smaTemplateGroup where smaTemplateGroup.TemplateGroupId == _templateGroupId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static SMATemplateGroup find(SMATemplateGroupId _templateGroupId, boolean _forupdate = false)
    {
        SMATemplateGroup templateGroup = null;

        if (_templateGroupId)
        {
            templateGroup.selectForUpdate(_forupdate);

            select firstonly templateGroup where templateGroup.TemplateGroupId == _templateGroupId;
        }

        return templateGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isParent</Name>
				<Source><![CDATA[
    public static boolean isParent(SMATemplateGroupId _templateGroupId)
    {
        boolean ret = false;

        // Do any other template group have a this template group as a parent
        ret = (select firstonly smaTemplateGroup where smaTemplateGroup.ParentTemplateGroupId == _templateGroupId).RecId ? true : false;

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SMAManagement</ConfigurationKey>
	<DeveloperDocumentation>@SYS122726</DeveloperDocumentation>
	<FormRef>smatemplategroup</FormRef>
	<Label>@SYS88965</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>TemplateGroupId</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>TemplateGroupIdIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ServiceManagement</Modules>
	<PrimaryIndex>TemplateGroupIdIdx</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>SMAAgreementTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SMAAgreementTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TemplateGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TemplateGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParentTemplateGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Parent</Name>
			<Label>@SYS81227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParentTemplateGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TemplateGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMATemplateGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParentTemplateGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SMATemplateGroupIdParent</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TemplateGroupIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TemplateGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SMATemplateGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>SMATemplateGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentTemplateGroupId</Name>
					<SourceEDT>SMATemplateGroupIdParent</SourceEDT>
					<Field>ParentTemplateGroupId</Field>
					<RelatedField>TemplateGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TemplateGroupIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>