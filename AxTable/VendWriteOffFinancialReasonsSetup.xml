<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendWriteOffFinancialReasonsSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendWriteOffFinancialReasonsSetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canBeMarkedAsDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if a vendor write-off setup can be marked as default.
    /// </summary>
    /// <returns>
    /// Returns boolean value that determines if a vendor write-off setup can be marked as default.
    /// </returns>
    internal boolean canBeMarkedAsDefault()
    {
        VendWriteOffFinancialReasonsSetup vendDefaultWriteOffSetup = VendWriteOffFinancialReasonsSetup::findDefaultWriteOffReasonByCompany(this.getCompany());

        return !(vendDefaultWriteOffSetup && vendDefaultWriteOffSetup.Reason != this.Reason);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// If there has been a company specified on the current record, then return it.  Otherwise, use curExt()
    /// </summary>
    /// <returns>The company to be used for the current record.</returns>
    internal SelectableDataArea getCompany()
    {
        return this.Company ? this.Company : curExt();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(VendWriteOffFinancialReasonsSetup, Reason):
                this.setDescriptionFromReasonCode();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDescriptionFromReasonCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the Description field value from the given Reason code on the table buffer.
    /// </summary>
    private void setDescriptionFromReasonCode()
    {
        ReasonTable reasonTable;

        changecompany (this.getCompany())
        {
            reasonTable = ReasonTable::find(this.Reason);
        }

        this.Description = reasonTable.Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        changecompany (this.getCompany())
        {
            ret = super(_fieldIdToCheck);

            if (ret)
            {
                switch (_fieldIdToCheck)
                {
                    case fieldNum(VendWriteOffFinancialReasonsSetup, IsDefault):
                        if (this.IsDefault && !this.canBeMarkedAsDefault())
                        {
                            checkFailed("@AccountsPayable:DefaultReasonCodeExists");
                            ret = false;
                        }
                        break;
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        super();

        SettlementWriteOffReasonCodeResolverFactory::constructResolver(ModuleCustVend::Vend).updateSettlementWriteOffDefaultAccount(this.Reason, this.WriteOffLedgerDimension, this.Company);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByReasonCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves write-off reason setup for a company.
    /// </summary>
    /// <param name="_ReasonCode">
    /// The <c>ReasonCode</c> value.
    /// </param>
    /// <param name="_companyId">
    /// The <c>CompanyId</c> for which the write-off reason code is required; optional.
    /// </param>
    /// <param name="_forUpdate">
    /// Determines if the record should be selected for update; optional
    /// </param>
    /// <returns>
    /// Returns <c>VendWriteOffFinancialReasonsSetup</c> record.
    /// </returns>
    internal static VendWriteOffFinancialReasonsSetup findByReasonCode(ReasonCode _reasonCode, CompanyId _companyId = curExt(), boolean _forUpdate = false)
    {
        VendWriteOffFinancialReasonsSetup vendWriteOffReasonSetup;

        vendWriteOffReasonSetup.selectForUpdate(_forUpdate);

        select firstonly vendWriteOffReasonSetup
            where vendWriteOffReasonSetup.Reason == _reasonCode &&
                vendWriteOffReasonSetup.Company == _companyId;

        return vendWriteOffReasonSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDefaultWriteOffReasonByCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves default write-off reason setup for a company.
    /// </summary>
    /// <param name="_companyId">
    /// The <c>CompanyId</c> for which the write-off reason setup is required; optional.
    /// </param>
    /// <param name="_forUpdate">
    /// Determines if the record should be selected for update; optional
    /// </param>
    /// <returns>
    /// Returns default reason setup for a <c>CompanyId</c>.
    /// </returns>
    internal static VendWriteOffFinancialReasonsSetup findDefaultWriteOffReasonByCompany(CompanyId _companyId = curExt(), boolean _forUpdate = false)
    {
        VendWriteOffFinancialReasonsSetup vendWriteOffFinancialReasonsSetup;

        vendWriteOffFinancialReasonsSetup.selectForUpdate(_forUpdate);

        select firstonly vendWriteOffFinancialReasonsSetup
            where vendWriteOffFinancialReasonsSetup.IsDefault == NoYes::Yes &&
                vendWriteOffFinancialReasonsSetup.Company == _companyId;

        return vendWriteOffFinancialReasonsSetup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@AccountsPayable:VendWriteOffFinancialReasonSetupDescription</DeveloperDocumentation>
	<FormRef>VendParameters</FormRef>
	<Label>@AccountsPayable:VendorWriteOffReasonCodeSetup</Label>
	<TitleField1>Reason</TitleField1>
	<TitleField2>WriteOffLedgerDimension</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>AccountsPayable</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Company</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Reason</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsDefault</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WriteOffLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReferenceGroup</Name>
			<Label>@AccountsPayable:VendorWriteOffReasonCodeSetup</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Reason</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WriteOffLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WriteOffLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS134966</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Company</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<Label>@SYS13342</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Reason</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReasonCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
			<Label>@AccountsPayable:VendWriteOffDescription</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDefault</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@AccountsPayable:IsDefaultWriteOffReasonCode</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReasonIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Company</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Reason</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ReasonTable</Name>
			<RelatedTable>ReasonTable</RelatedTable>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Company</Name>
					<Field>Company</Field>
					<RelatedField>DataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Reason</Name>
					<Field>Reason</Field>
					<RelatedField>Reason</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Description</Name>
					<Field>Description</Field>
					<RelatedField>Description</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WriteOffLedgerDimension</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WriteOffLedgerDimension</Name>
					<Field>WriteOffLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>