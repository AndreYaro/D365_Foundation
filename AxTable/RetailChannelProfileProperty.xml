<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailChannelProfileProperty</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailChannelProfileProperty extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        return super() && this.validateProfileProperties();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProfileProperties</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the channel profile properties.
    /// </summary>
    /// <returns>
    /// The validation result.
    /// </returns>
    public boolean validateProfileProperties()
    {
        boolean isValid = true;

        switch (RetailChannelProfile::find(this.ChannelProfile).ChannelProfileType)
        {
            case RetailChannelProfileType::SharePointOnlineStore:
                isValid = this.validateSharePointChannelProfileProperties();
                break;

            case RetailChannelProfileType::RetailServer:
                isValid = this.validateRetailServerProfileProperties();
                break;

            default:
                break;
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRetailServerProfileProperties</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the Retail Server profile properties.
    /// </summary>
    /// <returns>
    /// The validation result.
    /// </returns>
    private boolean validateRetailServerProfileProperties()
    {
        int storeConnectUrlCount, mediaBaseUrlCount, cloudPOSUrlCount;
        RetailChannelProfileProperty profileProperty;
        boolean isValid = true;
        boolean shouldEnforceHttps = !RetailUtilities::isRetailCDXBackwardCompatibilityEnabled();

        switch (this.Key)
        {
            case RetailServerProfilePropertyKey::InternalUrl:
                storeConnectUrlCount++;
                if (!RetailUtilities::validateUniformResourceLocator(this.Value, shouldEnforceHttps))
                {
                    isValid = false;
                    error(strFmt("@REX1631", this.Value));
                }
                break;

            case RetailServerProfilePropertyKey::MediaBaseUrl:
                mediaBaseUrlCount++;
                if (!RetailUtilities::validateUniformResourceLocator(this.Value, shouldEnforceHttps))
                {
                    isValid = false;
                    error(strFmt("@REX4040030", this.Value));
                }
                break;

            case RetailServerProfilePropertyKey::PrinterUrl:
                if (!RetailUtilities::validateUniformResourceLocator(this.Value, shouldEnforceHttps))
                {
                    isValid = false;
                    error(strFmt("@REX4161290", this.Value));
                }
                break;

            case RetailServerProfilePropertyKey::DrawerUrl:
                if (!RetailUtilities::validateUniformResourceLocator(this.Value, shouldEnforceHttps))
                {
                    isValid = false;
                    error(strFmt("@REX4161291", this.Value));
                }
                break;

            case RetailServerProfilePropertyKey::PaymentTerminalUrl:
                if (!RetailUtilities::validateUniformResourceLocator(this.Value, shouldEnforceHttps))
                {
                    isValid = false;
                    error(strFmt("@REX4161292", this.Value));
                }
                break;

            case RetailServerProfilePropertyKey::CloudPOSUrl:
                cloudPOSUrlCount++;
                if (!RetailUtilities::validateUniformResourceLocator(this.Value, shouldEnforceHttps))
                {
                    isValid = false;
                    error(strFmt("@Retail:InvalidCloudPosUrl", this.Value));
                }
                break;
            case RetailServerProfilePropertyKey::HardwareStationUrl:
                if (!RetailUtilities::isRetailCDXBackwardCompatibilityEnabled())
                {
                    isValid = false;
                    error(strFmt("@Retail:NonNMinusOneHardwareStationURLInsertionError", this.Value));
                }
                else
                {
                    if (!RetailUtilities::validateUniformResourceLocator(this.Value, shouldEnforceHttps))
                    {
                        isValid = false;
                        error(strFmt("@REX4161284", this.Value));
                    }
                }
                break;
            default:
                break;
        }

        // Allow only one row for some properties
        while select profileProperty
            where profileProperty.ChannelProfile == this.ChannelProfile && profileProperty.RecId != this.RecId
        {
            switch (profileProperty.Key)
            {
                case RetailServerProfilePropertyKey::InternalUrl:
                    storeConnectUrlCount++;
                    break;

                case RetailServerProfilePropertyKey::MediaBaseUrl:
                    mediaBaseUrlCount++;
                    break;

                case RetailServerProfilePropertyKey::CloudPOSUrl:
                    cloudPOSUrlCount++;
                    break;

                default:
                    break;
            }
        }

        if (storeConnectUrlCount > 1)
        {
            isValid = false;
            error("@REX1633");
        }

        if (mediaBaseUrlCount > 1)
        {
            isValid = false;
            error("@REX4040029");
        }

        if (cloudPOSUrlCount > 1)
        {
            isValid = false;
            error("@Retail:MoreThanOneCloudPosUrl");
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSharePointChannelProfileProperties</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the SharePoint channel profile properties.
    /// </summary>
    /// <returns>
    /// The validation result.
    /// </returns>
    private boolean validateSharePointChannelProfileProperties()
    {
        boolean isValid = true;
        int catalogSCCount;
        RetailChannelProfileProperty profileProperty;

        switch (this.Key)
        {
            case RetailSPChannelProfilePropertyKey::CatalogSiteCollectionURL:
                catalogSCCount++;
                if (!DocuType::validateURL(this.Value))
                {
                    isValid = false;
                    error(strFmt("@RET4160427", this.Value));
                }
                break;

            case RetailSPChannelProfilePropertyKey::PublishingSiteCollectionURL:
                if (!DocuType::validateURL(this.Value))
                {
                    isValid = false;
                    error(strFmt("@RET4160426", this.Value));
                }
                break;

            default:
                isValid = false;
                error(strFmt("@RET4160425", this.Key));
        }

        // Allow only one row for some properties
        while select profileProperty
            where profileProperty.ChannelProfile == this.ChannelProfile
        {
            switch (profileProperty.Key)
            {
                case RetailSPChannelProfilePropertyKey::CatalogSiteCollectionURL:
                    catalogSCCount++;
                    break;

                default:
                    break;
            }
        }

        if (catalogSCCount > 1)
        {
            isValid = false;
            error("@RET4160424");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4160352</DeveloperDocumentation>
	<Label>@RET4160351</Label>
	<TitleField1>Value</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>ChannelManagement</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ChannelProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@RET607</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ChannelProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ChannelProfile</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailChannelProfilePropertyKey</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Value</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailChannelProfilePropertyValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsSystemRecord</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailChannelProfileIsSystemRecord</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProfileIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ChannelProfile</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Value</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailChannelProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailChannelProfile</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ChannelProfile</Name>
					<Field>ChannelProfile</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>