<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RAssetLedgerAccountsByLocation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RAssetLedgerAccountsByLocation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _p1)
    {
        boolean ret = super(_p1);

        switch (_p1)
        {
            case fieldNum(RAssetLedgerAccountsByLocation, AssetLedgerDimension):
                ret = MainAccount::checkAllowPosting(LedgerDimensionFacade::getMainAccountIdFromLedgerDimension(this.AssetLedgerDimension));
                break;

            case fieldNum(RAssetLedgerAccountsByLocation, Num):
                if ((this.AccountCode == RAssetTableGroupAllStandard::GroupId
                    || this.AccountCode == RAssetTableGroupAllStandard::Table
                    || this.AccountCode == RAssetTableGroupAllStandard::Standard)
                    && !this.Num)
                {
                    ret = checkFailed("@SYS24640");
                }
                break;

            default:
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if ((this.AccountCode == RAssetTableGroupAllStandard::Table
            || this.AccountCode == RAssetTableGroupAllStandard::Standard
            || this.AccountCode == RAssetTableGroupAllStandard::GroupId)
            && !this.Num)
        {
            ret = checkFailed("@SYS24729");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// returns ledger dimension account for current asset location
    /// </summary>
    /// <param name="_assetId">
    /// the asset id which is used to select ledger account from the ledger setup
    /// </param>
    /// <param name="_assetLocation">
    /// the asset location
    /// </param>
    /// <param name="_assetStandardId">
    /// the asset value model
    /// </param>
    /// <returns>
    /// ledger dimension account
    /// </returns>
    public static LedgerDimensionDefaultAccount assetLedgerDimension(RAssetId _assetId,
        RAssetLocationId _assetLocation,
        RAssetStandardId _assetStandardId)
    {
        RAssetLedgerAccountsByLocation assetLedgerAccountsByLocation;

        select firstonly AssetLedgerDimension from assetLedgerAccountsByLocation
            where assetLedgerAccountsByLocation.Location == _assetLocation
                && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::Table
                && assetLedgerAccountsByLocation.Num == _assetId;

        if (!assetLedgerAccountsByLocation.AssetLedgerDimension)
        {
            select firstonly AssetLedgerDimension from assetLedgerAccountsByLocation
                where assetLedgerAccountsByLocation.Location == _assetLocation
                    && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::GroupId
                    && assetLedgerAccountsByLocation.Num == RAssetStandards::find(_assetId, _assetStandardId).AssetGroup;

            if (!assetLedgerAccountsByLocation.AssetLedgerDimension)
            {
                select  firstonly AssetLedgerDimension from assetLedgerAccountsByLocation
                    where assetLedgerAccountsByLocation.Location == _assetLocation
                        && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::Standard
                        && assetLedgerAccountsByLocation.Num == _assetStandardId;

                if (!assetLedgerAccountsByLocation.AssetLedgerDimension)
                {
                    select  firstonly AssetLedgerDimension from assetLedgerAccountsByLocation
                        where assetLedgerAccountsByLocation.Location == _assetLocation
                            && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::All;
                }
            }
        }

        return assetLedgerAccountsByLocation.AssetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assetLedgerDimensionFromAssetGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// returns ledger dimension account for current asset location and asset group
    /// </summary>
    /// <param name="_assetGroupId">
    /// the asset group  which is used to select ledger account from the ledger setup
    /// </param>
    /// <param name="_assetLocation">
    /// the asset location
    /// </param>
    /// <param name="_assetStandardId">
    /// the asset value model
    /// </param>
    /// <returns>
    /// ledger dimension account
    /// </returns>
    public static LedgerDimensionDefaultAccount assetLedgerDimensionFromAssetGroup(RAssetGroupId _assetGroupId,
        RAssetLocationId _assetLocation,
        RAssetStandardId _assetStandardId)
    {
        RAssetLedgerAccountsByLocation assetLedgerAccountsByLocation;

        select firstonly AssetLedgerDimension from assetLedgerAccountsByLocation
            where assetLedgerAccountsByLocation.Location == _assetLocation
                && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::GroupId
                && assetLedgerAccountsByLocation.Num == _assetGroupId;

        if (!assetLedgerAccountsByLocation.AssetLedgerDimension)
        {
            select firstonly AssetLedgerDimension from assetLedgerAccountsByLocation
                where assetLedgerAccountsByLocation.Location == _assetLocation
                    && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::Standard
                    && assetLedgerAccountsByLocation.Num == _assetStandardId;

            if (!assetLedgerAccountsByLocation.AssetLedgerDimension)
            {
                select firstonly AssetLedgerDimension from assetLedgerAccountsByLocation
                    where assetLedgerAccountsByLocation.Location == _assetLocation
                        && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::All;
            }
        }

        return assetLedgerAccountsByLocation.AssetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerDimensionForBonus</Name>
				<Source><![CDATA[
    /// <summary>
    /// returns ledger dimension account of depreciation bonus for current asset location
    /// </summary>
    /// <param name="_assetId">
    /// the asset id which is used to select ledger account from the ledger setup
    /// </param>
    /// <param name="_assetLocation">
    /// the asset location
    /// </param>
    /// <param name="_assetStandardId">
    /// the asset value model
    /// </param>
    /// <returns>
    /// ledger dimension bonus account for current asset location
    /// </returns>
    public static LedgerDimensionDefaultAccount ledgerDimensionForBonus(RAssetId         _assetId,
                                                                               RAssetLocationId _assetLocation,
                                                                               RAssetStandardId _assetStandardId)
    {
        RAssetLedgerAccountsByLocation assetLedgerAccountsByLocation;

        select firstonly DepreciationBonusLedgerDimension from assetLedgerAccountsByLocation
            where assetLedgerAccountsByLocation.Location == _assetLocation
                && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::Table
                && assetLedgerAccountsByLocation.Num == _assetId;

        if (!assetLedgerAccountsByLocation.DepreciationBonusLedgerDimension)
        {
            select firstonly DepreciationBonusLedgerDimension from assetLedgerAccountsByLocation
                where assetLedgerAccountsByLocation.Location == _assetLocation
                    && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::GroupId
                    && assetLedgerAccountsByLocation.Num == RAssetStandards::find(_assetId, _assetStandardId).AssetGroup;

            if (!assetLedgerAccountsByLocation.DepreciationBonusLedgerDimension)
            {
                select firstonly DepreciationBonusLedgerDimension from assetLedgerAccountsByLocation
                    where assetLedgerAccountsByLocation.Location == _assetLocation
                        && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::Standard
                        && assetLedgerAccountsByLocation.Num == _assetStandardId;

                if (!assetLedgerAccountsByLocation.DepreciationBonusLedgerDimension)
                {
                    select  firstonly DepreciationBonusLedgerDimension from assetLedgerAccountsByLocation
                        where assetLedgerAccountsByLocation.Location == _assetLocation
                            && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::All;
                }
            }
        }

        return assetLedgerAccountsByLocation.DepreciationBonusLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerDimensionForBonusFromAssetGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// returns ledger dimension account of depreciation bonus for current asset location and asset group
    /// </summary>
    /// <param name="_assetGroupId">
    /// the asset group  which is used to select ledger account from the ledger setup
    /// </param>
    /// <param name="_assetLocation">
    /// the asset location
    /// </param>
    /// <param name="_assetStandardId">
    /// the asset value model
    /// </param>
    /// <returns>
    /// ledger dimension bonus account
    /// </returns>
    public static LedgerDimensionDefaultAccount ledgerDimensionForBonusFromAssetGroup(RAssetGroupId _assetGroupId,
        RAssetLocationId _assetLocation,
        RAssetStandardId _assetStandardId)
    {
        RAssetLedgerAccountsByLocation assetLedgerAccountsByLocation;

        select firstonly DepreciationBonusLedgerDimension from assetLedgerAccountsByLocation
            where assetLedgerAccountsByLocation.Location == _assetLocation
                && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::GroupId
                && assetLedgerAccountsByLocation.Num == _assetGroupId;

        if (!assetLedgerAccountsByLocation.DepreciationBonusLedgerDimension)
        {
            select firstonly DepreciationBonusLedgerDimension from assetLedgerAccountsByLocation
                where assetLedgerAccountsByLocation.Location == _assetLocation
                    && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::Standard
                    && assetLedgerAccountsByLocation.Num == _assetStandardId;

            if (! assetLedgerAccountsByLocation.DepreciationBonusLedgerDimension)
            {
                select firstonly DepreciationBonusLedgerDimension from assetLedgerAccountsByLocation
                    where assetLedgerAccountsByLocation.Location == _assetLocation
                        && assetLedgerAccountsByLocation.AccountCode == RAssetTableGroupAllStandard::All;
            }
        }

        return assetLedgerAccountsByLocation.DepreciationBonusLedgerDimension;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RAsset</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>RAssetLocation</FormRef>
	<Label>@GLS116509</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>AccountCode</TitleField1>
	<TitleField2>Location</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>ProfileAccountIdx</ClusteredIndex>
	<Modules>RAsset</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Location</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Num</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Location</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Num</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LedgerPosting</Name>
			<Label>@SYS3881</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DepreciationBonusLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetTableGroupAll</ExtendedDataType>
			<EnumType>RAssetTableGroupAllStandard</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DepreciationBonusLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@GLS116836</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Location</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RAssetLocationId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Num</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PostingProfileAccountRelation</ExtendedDataType>
			<Label>@FixedAssets:AccountRelation</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BookId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetBookId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DepreciationGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AssetDepreciationGroupId_W</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AssetLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DepreciationBonusLedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DepreciationBonusLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProfileAccountIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Num</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Location</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DepreciationBonusLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DepreciationBonusLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RAssetLedgerAccountsByLocation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DepreciationBonusLedgerDimension</Name>
					<Field>DepreciationBonusLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RAssetLedgerAccountsByLocation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetLedgerDimension</Name>
					<Field>AssetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RAssetGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAssetGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RAssetGroup</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>RAssetLedgerAccountsByLocation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Num</Name>
					<Field>Num</Field>
					<RelatedField>AssetGroupId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<Value>1</Value>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RAssetLocation</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RAssetLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Location</Name>
					<SourceEDT>RAssetLocationId</SourceEDT>
					<Field>Location</Field>
					<RelatedField>Location</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RAssetLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RAssetStandard</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAssetStandardTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RAssetStandardTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RAssetLedgerAccountsByLocation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Num</Name>
					<Field>Num</Field>
					<RelatedField>AssetStandardId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<Value>3</Value>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RAssetTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RAssetTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>RAssetTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>RAssetLedgerAccountsByLocation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Num</Name>
					<Field>Num</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>