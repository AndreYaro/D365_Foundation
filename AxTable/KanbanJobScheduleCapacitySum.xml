<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanJobScheduleCapacitySum</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class KanbanJobScheduleCapacitySum extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addKanbanJobCapacitySum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds or substracts the <c>KanbanJobCapacitySum</c> record from the corresponding
    ///    <c>KanbanJobScheduleCapacitySum</c> record.
    /// </summary>
    /// <param name="_kanbanJobCapacitySum">
    ///    A <c>KanbanJobcapacitySum</c> record to add or substract from a <c>KanbanJobScheduleCapacitySum</c>
    ///    record.
    /// </param>
    /// <param name="_kanbanJobSchedule">
    ///    A <c>KanbanJobSchedule</c> record that is used to identify the <c>KanbanJobScheduleCapacitySum</c>
    ///    record to update.
    /// </param>
    /// <param name="_add">
    ///    A Boolean value that indicates whether to add or substract capacity consumption; optional.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void addKanbanJobCapacitySum(
        KanbanJobCapacitySum _kanbanJobCapacitySum,
        KanbanJobSchedule    _kanbanJobSchedule,
        boolean              _add = true)
    {
        int factor = _add ? 1 : -1;

        if (   _kanbanJobCapacitySum
            && _kanbanJobSchedule)
        {
            ttsbegin;
            if (_kanbanJobCapacitySum.PlannedCapacitySumThroughput)
            {
                KanbanJobScheduleCapacitySum::addPlannedCapacityThroughput(_kanbanJobSchedule.WorkCell,
                                                                           _kanbanJobSchedule.PlannedPeriod,
                                                                           _kanbanJobCapacitySum.PlannedCapacitySumThroughput * factor,
                                                                           _kanbanJobCapacitySum.PlannedCapacityThroughputUnit);
            }
            else
            {
                KanbanJobScheduleCapacitySum::addPlannedCapacitySeconds(_kanbanJobSchedule.WorkCell,
                                                                        _kanbanJobSchedule.PlannedPeriod,
                                                                        _kanbanJobCapacitySum.PlannedCapacitySumSeconds * factor);
            }
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPlannedCapacitySeconds</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds the specified number of seconds to a <c>KanbanJobScheduleCapacity</c> record.
    /// </summary>
    /// <param name="_wrkCtrResourceGroupRecId">
    ///    The record ID of the <c>WrkCtrResourceGroup</c> record for which to add the planned capacity
    ///    consumption.
    /// </param>
    /// <param name="_plannedPeriod">
    ///    The period for which to add the planned capacity consumption.
    /// </param>
    /// <param name="_seconds">
    ///    The planned capacity consumption in seconds.
    /// </param>
    /// <exception cref="M:Exception::Error">
    ///    The period model was changed.
    /// </exception>
    private static void addPlannedCapacitySeconds(
        RefRecId                       _wrkCtrResourceGroupRecId,
        KanbanJobSchedulePlannedPeriod _plannedPeriod,
        Seconds                        _seconds)
    {
        KanbanJobScheduleCapacitySum    kanbanJobScheduleCapacitySum;
        WrkCtrResourceGroup             wrkCtrResourceGroup;

        if (_seconds != 0)
        {
            ttsbegin;
            kanbanJobScheduleCapacitySum = KanbanJobScheduleCapacitySum::findWorkCellPlannedPeriod(_wrkCtrResourceGroupRecId,_plannedPeriod,true);

            if (kanbanJobScheduleCapacitySum)
            {
                if (   kanbanJobScheduleCapacitySum.PlannedCapacitySumThroughput            != 0
                    || kanbanJobScheduleCapacitySum.PlannedCapacityThroughputUnit           != 0)
                {
                    wrkCtrResourceGroup = WrkCtrResourceGroup::find(_wrkCtrResourceGroupRecId);
                    throw error(strFmt("@SYS301799",wrkCtrResourceGroup.WrkCtrId));
                }
            }

            kanbanJobScheduleCapacitySum.WorkCell                                 = _wrkCtrResourceGroupRecId;
            kanbanJobScheduleCapacitySum.PlannedPeriod                            = _plannedPeriod;
            kanbanJobScheduleCapacitySum.PlannedCapacitySumSeconds               += _seconds;

            if (kanbanJobScheduleCapacitySum.PlannedCapacitySumSeconds < 0)
            {
                wrkCtrResourceGroup = WrkCtrResourceGroup::find(_wrkCtrResourceGroupRecId);
                throw error(strFmt("@SYS301800",wrkCtrResourceGroup.WrkCtrId,kanbanJobScheduleCapacitySum.PlannedPeriod));
            }

            if (!kanbanJobScheduleCapacitySum.PlannedCapacitySumSeconds)
            {
                if (kanbanJobScheduleCapacitySum.RecId)
                {
                    kanbanJobScheduleCapacitySum.delete();
                }
            }
            else
            {
                kanbanJobScheduleCapacitySum.write();
            }
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPlannedCapacityThroughput</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds a specified throughput to a <c>KanbanJobScheduleCapacity</c> record.
    /// </summary>
    /// <param name="_wrkCtrResourceGroupRecId">
    ///    The record ID of the <c>WrkCtrResourceGroup</c> record for which to add the planned capacity
    ///    consumption.
    /// </param>
    /// <param name="_plannedPeriod">
    ///    The period for which to add the planned capacity consumption.
    /// </param>
    /// <param name="_inventQty">
    ///    The planned capacity consumption quantity.
    /// </param>
    /// <param name="_unitOfMeasure">
    ///    The unit in which the planned capacity consumption is stated.
    /// </param>
    /// <exception cref="M:Exception::Error">
    ///    The period model was changed.
    /// </exception>
    private static void addPlannedCapacityThroughput(
        RefRecId                       _wrkCtrResourceGroupRecId,
        KanbanJobSchedulePlannedPeriod _plannedPeriod,
        InventQty                      _inventQty,
        RefRecId                       _unitOfMeasure)
    {
        KanbanJobScheduleCapacitySum    kanbanJobScheduleCapacitySum;
        WrkCtrResourceGroup             wrkCtrResourceGroup;

        if (_inventQty)
        {
            ttsbegin;
            kanbanJobScheduleCapacitySum = KanbanJobScheduleCapacitySum::findWorkCellPlannedPeriod(_wrkCtrResourceGroupRecId,_plannedPeriod,true);

            if (kanbanJobScheduleCapacitySum)
            {
                if (   kanbanJobScheduleCapacitySum.PlannedCapacitySumSeconds               != 0
                    || kanbanJobScheduleCapacitySum.PlannedCapacityThroughputUnit           != _unitOfMeasure)
                {
                    wrkCtrResourceGroup = WrkCtrResourceGroup::find(_wrkCtrResourceGroupRecId);
                    throw error(strFmt("@SYS301801",wrkCtrResourceGroup.WrkCtrId, UnitOfMeasure::find(_unitOfMeasure).Symbol));
                }
            }

            kanbanJobScheduleCapacitySum.WorkCell                                 = _wrkCtrResourceGroupRecId;
            kanbanJobScheduleCapacitySum.PlannedPeriod                            = _plannedPeriod;
            kanbanJobScheduleCapacitySum.PlannedCapacitySumThroughput            += _inventQty;
            kanbanJobScheduleCapacitySum.PlannedCapacityThroughputUnit            = _unitOfMeasure;

            if (kanbanJobScheduleCapacitySum.PlannedCapacitySumThroughput < 0)
            {
                wrkCtrResourceGroup = WrkCtrResourceGroup::find(_wrkCtrResourceGroupRecId);
                throw error(strFmt("@SYS301800",wrkCtrResourceGroup.WrkCtrId,kanbanJobScheduleCapacitySum.PlannedPeriod));
            }

            if (!kanbanJobScheduleCapacitySum.PlannedCapacitySumThroughput)
            {
                if (kanbanJobScheduleCapacitySum.RecId)
                {
                    kanbanJobScheduleCapacitySum.delete();
                }
            }
            else
            {
                kanbanJobScheduleCapacitySum.write();
            }
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>KanbanJobScheduleCapacitySum</c> table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>KanbanJobScheduleCapacitySum</c> table to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(recId _recId)
    {
        return _recId &&
               (select firstonly RecId from kanbanJobScheduleCapacitySum
                    where kanbanJobScheduleCapacitySum.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>KanbanJobScheduleCapacitySum</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>KanbanJobScheduleCapacitySum</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>KanbanJobScheduleCapacitySum</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static KanbanJobScheduleCapacitySum find(
        recId _recId,
        boolean _forUpdate = false)
    {
        KanbanJobScheduleCapacitySum    kanbanJobScheduleCapacitySum;

        if (_recId)
        {
            kanbanJobScheduleCapacitySum.selectForUpdate(_forUpdate);

            select firstonly kanbanJobScheduleCapacitySum
                where kanbanJobScheduleCapacitySum.RecId == _recId;
        }

        return kanbanJobScheduleCapacitySum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findWorkCellPlannedPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>KanbanJobScheduleCapacitySum</c> table.
    /// </summary>
    /// <param name="_wrkCtrResourceGroupRecId">
    ///    The record ID a <c>WrkCtrResourceGroup</c> record.
    /// </param>
    /// <param name="_plannedPeriod">
    ///    The planning period date.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>KanbanJobScheduleCapacitySum</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static KanbanJobScheduleCapacitySum findWorkCellPlannedPeriod(
        RefRecId                       _wrkCtrResourceGroupRecId,
        KanbanJobSchedulePlannedPeriod _plannedPeriod,
        boolean                        _forUpdate = false)
    {
        KanbanJobScheduleCapacitySum    kanbanJobScheduleCapacitySum;

        if (   _wrkCtrResourceGroupRecId
            && _plannedPeriod)
        {
            kanbanJobScheduleCapacitySum.selectForUpdate(_forUpdate);

            select firstonly kanbanJobScheduleCapacitySum
                where kanbanJobScheduleCapacitySum.WorkCell      == _wrkCtrResourceGroupRecId
                   && kanbanJobScheduleCapacitySum.PlannedPeriod == _plannedPeriod;
        }

        return kanbanJobScheduleCapacitySum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeCapacityConsumption</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Deletes the <c>KanbanJobCapacitySum</c> record for the specified <c>WrkCtrResourceGroup</c> record
    ///    ID and planned period.
    /// </summary>
    /// <param name="_wrkCtrResourceGroupRecId">
    ///    The record ID of the <c>WrkCtrResourceGroup</c> record to delete.
    /// </param>
    /// <param name="_plannedPeriod">
    ///    The planning period date.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void removeCapacityConsumption(
        RefRecId                       _wrkCtrResourceGroupRecId,
        KanbanJobSchedulePlannedPeriod _plannedPeriod)
    {
        KanbanJobScheduleCapacitySum    kanbanJobScheduleCapacitySum;

        ttsbegin;
        delete_from kanbanJobScheduleCapacitySum
            where kanbanJobScheduleCapacitySum.WorkCell      == _wrkCtrResourceGroupRecId
               && kanbanJobScheduleCapacitySum.PlannedPeriod == _plannedPeriod;
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS325875</DeveloperDocumentation>
	<Label>@SYS301797</Label>
	<SingularLabel>@SYS301798</SingularLabel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>WorkCell</TitleField1>
	<TitleField2>PlannedPeriod</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>MasterPlanning</Modules>
	<ReplacementKey>WorkCellPlannedPeriodIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkCell</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlannedPeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlannedCapacitySumThroughput</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlannedCapacitySumSeconds</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlannedCapacityThroughputUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkCell</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlannedPeriod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CapacitySeconds</Name>
			<Label>@SYS301795</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PlannedCapacitySumSeconds</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CapacityThroughput</Name>
			<Label>@SYS301796</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PlannedCapacitySumThroughput</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlannedCapacityThroughputUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PlannedPeriod</Name>
			<Label>@SYS131614</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PlannedPeriod</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WorkCell</Name>
			<Label>@SYS131665</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkCell</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PlannedCapacitySumSeconds</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Seconds</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PlannedCapacitySumThroughput</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PlannedCapacityThroughputUnit</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS96151</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>PlannedPeriod</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanJobSchedulePlannedPeriod</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>WorkCell</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WrkCtrResourceGroupRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WorkCellPlannedPeriodIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkCell</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PlannedPeriod</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>UnitOfMeasure</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PlannedCapacityUnit</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PlannedCapacityThroughputUnit</Name>
					<Field>PlannedCapacityThroughputUnit</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WorkCell</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WrkCtrResourceGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Cell</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CapacitySum</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkCell</Name>
					<Field>WorkCell</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>