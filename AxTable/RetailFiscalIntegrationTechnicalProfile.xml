<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailFiscalIntegrationTechnicalProfile</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailFiscalIntegrationTechnicalProfile extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init technical profile id by a specific retail number sequence.
    /// </summary>
    public void initValue()
    {
        super();

        NumberSeq numberSeq = NumberSeq::newGetNum(RetailParameters::numRefRetailFiscalIntegrationTechnicalProfileId(), false, true);

        if (numberSeq)
        {
            this.ProfileId = numberSeq.num();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromFiscalConnectorTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init the record in the <c>RetailFiscalIntegrationTechnicalProfile</c> table specified by a <c>RetailFiscalIntegrationConnectorTable</c> table record.
    /// </summary>
    /// <param name = "_fiscalConnectorTable">
    /// The record of the <c>RetailFiscalIntegrationConnectorTable</c> table.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromFiscalConnectorTable(RetailFiscalIntegrationConnectorTable _fiscalConnectorTable)
    {
        RetailFiscalIntegrationConfigurationHelper configurationHelper = new RetailFiscalIntegrationConfigurationHelper();

        this.ConnectorName = _fiscalConnectorTable.Name;

        RetailFiscalIntegrationUpdatePropertiesParameters params = new RetailFiscalIntegrationUpdatePropertiesParameters();
        params.parmNewTechnicalProfileProperties(_fiscalConnectorTable.Manifest);
        params.parmSourceTechnicalProfileProperties(this.TechnicalProfileProperties);
        params.parmUpdateConnectionInfo(true);
        params.parmUpdateSettingsInfo(true);

        this.TechnicalProfileProperties = configurationHelper.updateTechnicalProfileProperties(params);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findProfileId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>RetailFiscalIntegrationTechnicalProfile</c> table specified by a profile id.
    /// </summary>
    /// <param name = "_processId">
    /// The profile id of the <c>RetailFiscalIntegrationTechnicalProfile</c> record to find.
    /// </param>
    /// <param name = "_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailFiscalIntegrationTechnicalProfile</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RetailFiscalIntegrationTechnicalProfile findProfileId(RetailFiscalIntegrationTechnicalProfileId _profileId, boolean _forUpdate = false )
    {
        RetailFiscalIntegrationTechnicalProfile profile;

        if (_profileId)
        {
            if (_forUpdate)
            {
                profile.selectForUpdate(_forUpdate);
            }

            select firstonly profile where profile.ProfileId == _profileId;
        }

        return profile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>RetailFiscalIntegrationTechnicalProfile</c> table specified by a record identifier.
    /// </summary>
    /// <param name = "_profileRecId">Technical profile record identifier.</param>
    /// <param name = "_forUpdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A record in the <c>RetailFiscalIntegrationTechnicalProfile</c> table; otherwise, an empty record.</returns>
    internal static RetailFiscalIntegrationTechnicalProfile findByRecId(RecId _profileRecId, boolean _forUpdate = false)
    {
        RetailFiscalIntegrationTechnicalProfile profile;

        if (_profileRecId)
        {
            profile.selectForUpdate(_forUpdate);

            select firstonly profile where profile.RecId == _profileRecId;
        }

        return profile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// The record in the <c>RetailFiscalIntegrationTechnicalProfile</c> table is not possible to delete if it used in hardware profile.
    /// </summary>
    public void delete()
    {
        RetailHardwareProfileFiscalIntegrationTechnicalProfileLine profileLine;

        if (this.isSelectedInRetailHardwareProfile(this.ProfileId))
        {
            throw error(strFmt("@RetailFiscalIntegration:TechnicalProfileUsedInHardwareProfilesCannotBeDeleted", this.ProfileId));
        }

        if (this.isSelectedInRetailFunctionalityProfile(this.ProfileId))
        {
            throw error(strFmt("@RetailFiscalIntegration:TechnicalProfileUsedInFunctionalityProfilesCannotBeDeleted", this.ProfileId));
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Add necessary condition when fill in the <c>RetailFiscalIntegrationTechnicalProfile</c> table fields.
    /// </summary>
    /// <param name = "_fieldId">
    /// The field id needs to check.
    /// </param>
    /// <returns>
    /// A boolean value that indate whether the fields is effective; true, effect; false, void.
    /// </returns>
    public boolean validateField(FieldId _fieldId)
    {
        boolean ret = super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RetailFiscalIntegrationTechnicalProfile, ConnectorName):
                if (this.ConnectorName != this.orig().ConnectorName)
                {
                    if (RetailHardwareProfileFiscalIntegrationTechnicalProfileLine::findByFiscalTechnicalProfileId(this.ProfileId).RecId)
                    {
                        ret = checkFailed(strFmt("@RetailFiscalIntegration:TechnicalProfileUsedInHardwareProfileCannotBeDeleted", this.ProfileId));
                    }

                    if (RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine::findByFiscalTechnicalProfileId(this.ProfileId).RecId)
                    {
                        ret = checkFailed(strFmt("@RetailFiscalIntegration:TechnicalProfileUsedInFunctionalityProfileCannotBeDeleted", this.ProfileId));
                    }

                    if (RetailFiscalIntegrationTechnicalProfileOverride::findByFiscalTechnicalProfileId(this.ProfileId).RecId)
                    {
                        ret = checkFailed(strFmt("@RetailFiscalIntegration:ConnectorForTechnicalProfileCannotBeUpdated", this.ProfileId));
                    }
                }
                break;

            case fieldNum(RetailFiscalIntegrationTechnicalProfile, ConnectorType):
            case fieldNum(RetailFiscalIntegrationTechnicalProfile, ConnectorLocation):
                if (this.ConnectorType != this.orig().ConnectorType
                || this.ConnectorLocation != this.orig().ConnectorLocation)
                {
                    if (RetailHardwareProfileFiscalIntegrationTechnicalProfileLine::findByFiscalTechnicalProfileId(this.ProfileId).RecId)
                    {
                        ret = checkFailed(strFmt("@RetailFiscalIntegration:TechnicalProfileUsedInHardwareProfileCannotBeDeleted", this.ProfileId));
                    }

                    if (RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine::findByFiscalTechnicalProfileId(this.ProfileId).RecId)
                    {
                        ret = checkFailed(strFmt("@RetailFiscalIntegration:TechnicalProfileUsedInFunctionalityProfileCannotBeDeleted", this.ProfileId));
                    }
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        this.validateField(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();

        ret = ret && this.validateField(fieldNum(RetailFiscalIntegrationTechnicalProfile, ConnectorName));
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSelectedInRetailHardwareProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether or not the technical profile is selected in a hardware profile.
    /// </summary>
    /// <param name = "_technicalProfileId">The technical profile identifier.</param>
    /// <returns>True if the technical profile is selected in a hardware profile; false otherwise.</returns>
    private boolean isSelectedInRetailHardwareProfile(RetailFiscalIntegrationTechnicalProfileId _technicalProfileId)
    {
        boolean ret = false;
        RetailHardwareProfileFiscalIntegrationTechnicalProfileLine profileLine;

        select firstonly RecId from profileLine
            where profileLine.FiscalTechnicalProfileId == _technicalProfileId;

        if (profileLine.RecId)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSelectedInRetailFunctionalityProfile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether or not the technical profile is selected in a POS functionality profile.
    /// </summary>
    /// <param name = "_technicalProfileId">The technical profile identifier.</param>
    /// <returns>True if the technical profile is selected in a POS functionality profile; false otherwise.</returns>
    private boolean isSelectedInRetailFunctionalityProfile(RetailFiscalIntegrationTechnicalProfileId _technicalProfileId)
    {
        boolean ret = false;
        RetailFunctionalityProfileFiscalIntegrationTechnicalProfileLine profileLine;

        select firstonly RecId from profileLine
            where profileLine.FiscalTechnicalProfileId == _technicalProfileId;

        if (profileLine.RecId)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@RetailFiscalIntegration:RetailFiscalIntegrationTechnicalProfile</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>ProfileId</TitleField1>
	<TitleField2>Description</TitleField2>
	<ClusteredIndex>ProfileIdx</ClusteredIndex>
	<Modules>Retail</Modules>
	<PrimaryIndex>ProfileIdx</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TechnicalProfileProperties</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConnectorName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConnectorType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConnectorLocation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Profile</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FiscalConnector</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ConnectorName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConnectorType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProfileId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFiscalIntegrationTechnicalProfileId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TechnicalProfileProperties</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>XML</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ConnectorName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailFiscalIntegrationConnectorName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ConnectorType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailFiscalIntegrationConnectorType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ConnectorLocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailFiscalIntegrationConnectorLocation</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
			<Label>@SYS25589</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProfileIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProfileId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RetailFiscalIntegrationConnectorTable</Name>
			<RelatedTable>RetailFiscalIntegrationConnectorTable</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ConnectorName</Name>
					<Field>ConnectorName</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>