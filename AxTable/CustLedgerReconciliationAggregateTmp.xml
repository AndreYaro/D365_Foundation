<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustLedgerReconciliationAggregateTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustLedgerReconciliationAggregateTmp extends common
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>aggregateCustLedgerReconciliationTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates aggregates for the <c>CustLedgerReconciliationDP</c> class.
    /// </summary>
    /// <param name = "_reportTable">The report table used to calculate and store the aggregates.</param>
    /// <param name = "_userConnection">The user connection to the database.</param>
    public static void aggregateCustLedgerReconciliationTmp(CustLedgerReconciliationTmp _reportTable, UserConnection _userConnection = null)
    {
        CustLedgerReconciliationAggregateTmp tmpTable;

        if (_userConnection)
        {
            tmpTable.setConnection(_userConnection);
        }

        insert_recordset tmpTable (MainAccountId, SumAccountingCurrencyBalanceDifference, SumReportingCurrencyBalanceDifference, SumCustAmountMST, SumCustAmountReportingCurrency,
            SumLedgerAmountMST, SumLedgerAmountReportingCurrency)
            select MainAccountId, sum(AccountingCurrencyBalanceDifference), sum(ReportingCurrencyBalanceDifference), sum(CustAmountMST),
                sum(CustAmountReportingCurrency), sum(LedgerAmountMST), sum(LedgerAmountReportingCurrency) from _reportTable
            group by MainAccountId;

        update_recordset _reportTable
            setting
                SumAccountingCurrencyBalanceDifference = tmpTable.SumAccountingCurrencyBalanceDifference,
                SumReportingCurrencyBalanceDifference = tmpTable.SumReportingCurrencyBalanceDifference,
                SumCustAmountMST = tmpTable.SumCustAmountMST,
                SumCustAmountReportingCurrency = tmpTable.SumCustAmountReportingCurrency,
                SumLedgerAmountMST = tmpTable.SumLedgerAmountMST,
                SumLedgerAmountReportingCurrency = tmpTable.SumLedgerAmountReportingCurrency
            join tmpTable
                where tmpTable.MainAccountId == _reportTable.MainAccountId;

        select sum(SumAccountingCurrencyBalanceDifference), sum(SumReportingCurrencyBalanceDifference), sum(SumCustAmountMST),
                sum(SumCustAmountReportingCurrency), sum(SumLedgerAmountMST), sum(SumLedgerAmountReportingCurrency) from tmpTable;

        update_recordset _reportTable
            setting
                TotalAccountingCurrencyBalanceDifference = tmpTable.SumAccountingCurrencyBalanceDifference,
                TotalReportingCurrencyBalanceDifference = tmpTable.SumReportingCurrencyBalanceDifference,
                TotalCustAmountMST = tmpTable.SumCustAmountMST,
                TotalCustAmountReportingCurrency = tmpTable.SumCustAmountReportingCurrency,
                TotalLedgerAmountMST = tmpTable.SumLedgerAmountMST,
                TotalLedgerAmountReportingCurrency = tmpTable.SumLedgerAmountReportingCurrency;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<TitleField1>MainAccountId</TitleField1>
	<ClusteredIndex>MainAccount</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<OccEnabled>No</OccEnabled>
	<PrimaryIndex>MainAccount</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MainAccountId</Name>
			<ExtendedDataType>MainAccountNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumCustAmountMST</Name>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumCustAmountReportingCurrency</Name>
			<ExtendedDataType>AmountMSTSecondary</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumAccountingCurrencyBalanceDifference</Name>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumReportingCurrencyBalanceDifference</Name>
			<ExtendedDataType>AmountMSTSecondary</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumLedgerAmountMST</Name>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SumLedgerAmountReportingCurrency</Name>
			<ExtendedDataType>AmountMSTSecondary</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>MainAccount</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>MainAccountId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ReconciliationTmp</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CustLedgerReconciliationTmp</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MainAccountId</Name>
					<Field>MainAccountId</Field>
					<RelatedField>MainAccountId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>