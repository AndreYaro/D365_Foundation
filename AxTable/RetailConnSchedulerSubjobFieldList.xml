<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailConnSchedulerSubjobFieldList</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailConnSchedulerSubjobFieldList extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    [SysObsolete('All uses of RetailCDXMetadataSyncTombstone are obsolete.', false, 04\01\2022)]
    public void delete()
    {
        RetailCDXMetadataSyncTombstone tombstone;

        ttsBegin;

        tombstone.initValue();
        tombstone.RefTableID = tableNum(RetailConnSchedulerSubjobFieldList);
        tombstone.RefRecID = this.RecId;
        tombstone.SubJobID = this.subjobId;
        tombstone.insert();

        ttsCommit;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromFieldType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the connection field type of the current <c>RetailConnSchedulerSubjobTable</c> record.
    /// </summary>
    /// <returns>
    /// The connection field type of the subjob if found; otherwise, the <c>RetailConnFieldType::None</c>
    /// enumeration value.
    /// </returns>
    display RetailConnFieldType fromFieldType()
    {
        DictField       dictField;
        DictMethod      dictMethod;
        RetailConnFieldType    ret = RetailConnFieldTypeEnum::None;
        int tableid;
        int fieldid;
        RetailConnSchedulerSubjobTable subjob;

        select firstonly SubJobId, RetailConnChannelSchema, dataReplicationByPull, AXTableName, ChannelTableName from subjob index hint subjobIdx where subjob.SubJobId == this.SubjobId;

        if (subjob.dataReplicationByPull)
        {
            // uploading job, find "from field type" by looking up design table info
            return RetailConnLocationDesignTableField::find(subjob.RetailConnChannelSchema, subjob.ChannelTableName, this.FromFieldName).FieldType;
        }

        tableid = tableName2id(subjob.AXTableName);
        fieldid = fieldName2id(tableid, this.FromFieldName);

        dictField = new DictField(tableid, fieldid);
        if (dictField)
        {
            return RetailConnReplicationUtilities::fieldType(dictField);
        }

        if (this.fromFieldName)
        {
            dictMethod = new DictMethod(UtilElementType::TableInstanceMethod, tableid, this.FromFieldName);
            if (dictMethod)
            {
                return RetailConnReplicationUtilities::methodReturnType(dictMethod);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSchedulerSubjobFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Intializes the field values of current record with the received parameters.
    /// </summary>
    /// <param name="_schedulerSubjobFieldList">
    /// The caller <c>RetailConnSchedulerSubjobFieldList</c> record.
    /// </param>
    void initFromSchedulerSubjobFieldList(RetailConnSchedulerSubjobFieldList _schedulerSubjobFieldList)
    {
        this.SubjobId = _schedulerSubjobFieldList.SubjobId;
        this.FromFieldName = _schedulerSubjobFieldList.FromFieldName;
        this.ToFieldName = _schedulerSubjobFieldList.ToFieldName;
        this.ConversionType = _schedulerSubjobFieldList.ConversionType;
        this.ConversionValue = _schedulerSubjobFieldList.ConversionValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>toFieldType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the connection field type of the current <c>RetailConnSchedulerSubjobTable</c> record.
    /// </summary>
    /// <returns>
    /// The connection field type of the subjob if applicable; otherwise, an empty string.
    /// </returns>
    display RetailConnFieldType toFieldType()
    {
        DictField dictField;
        RetailConnFieldType ret;
        int tableid;
        int fieldid;

        RetailConnSchedulerSubjobTable subjob;
        select firstonly SubJobId, RetailConnChannelSchema, dataReplicationByPull, AXTableName, ChannelTableName from subjob index hint subjobIdx where subjob.SubJobId == this.SubjobId;

        if (!subjob.dataReplicationByPull)
        {
            // downloading job, find "to field type" by looking up design table info
            ret = RetailConnLocationDesignTableField::find(subjob.RetailConnChannelSchema, subjob.ChannelTableName, this.ToFieldName).FieldType;
        }
        else
        {
            tableid = tableName2id(subjob.AXTableName);
            fieldid = fieldName2id(tableid, this.ToFieldName);

            dictField = new DictField(tableid, fieldid);

            if (dictField)
            {
                ret = RetailConnReplicationUtilities::fieldType(dictField);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>duplicateDRMSchedulerSubjobFieldList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Duplicates the specified record with a new subjob ID value.
    /// </summary>
    /// <param name="_subJobId">
    /// A subjob identification value.
    /// </param>
    /// <param name="_newSubJobId">
    /// A subjob identification value for the new record to be inserted.
    /// </param>
    static void duplicateDRMSchedulerSubjobFieldList(RetailConnSubJobId _subJobId, RetailConnSubJobId _newSubJobId)
    {
        RetailConnSchedulerSubjobFieldList     tSchedulerSubjobFieldList;
    ;
        if (_subJobId && _newSubJobId)
        {
            while select forupdate tSchedulerSubjobFieldList
            where tSchedulerSubjobFieldList.SubjobId == _subJobId
            {
                tSchedulerSubjobFieldList.SubjobId = _newSubJobId;
                tSchedulerSubjobFieldList.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified <c>RetailConnSchedulerSubjobFieldList</c> record exists.
    /// </summary>
    /// <param name="_subjobId">
    /// The subjob identification value of a record to check for existence.
    /// </param>
    /// <param name="_fromFieldName">
    /// A connection field name value.
    /// </param>
    /// <param name="_toFieldName">
    /// A connection field name value.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    static boolean exist(
        RetailConnSubJobId _subjobId,
        RetailConnFieldName _fromFieldName,
        RetailConnFieldName _toFieldName)
    {
        return _subjobId &&
               (select retailConnSchedulerSubjobFieldList
                    index hint jobFieldIdx
                    where retailConnSchedulerSubjobFieldList.SubjobId == _subjobId
                       && retailConnSchedulerSubjobFieldList.FromFieldName == _fromFieldName
                       && retailConnSchedulerSubjobFieldList.ToFieldName == _toFieldName
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified <c>RetailConnSchedulerSubjobFieldList</c> record.
    /// </summary>
    /// <param name="_subjobId">
    /// The subjob identification value of a record to find.
    /// </param>
    /// <param name="_fromFieldName">
    /// A connection field name value.
    /// </param>
    /// <param name="_toFieldName">
    /// A connection field name value.
    /// </param>
    /// <param name="update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A <c>RetailConnSchedulerSubjobFieldList</c> record if found; otherwise, an empty record.
    /// </returns>
    static RetailConnSchedulerSubjobFieldList find(RetailConnSubJobId                 _subjobId,
                                            RetailConnFieldName                _fromFieldName,
                                            RetailConnFieldName                _toFieldName,
                                            boolean     update = false)
    {
        RetailConnSchedulerSubjobFieldList  schedulerSubjobFieldList;
        ;

        schedulerSubjobFieldList.selectForUpdate(update);

        if (_subjobId && _fromFieldName && _toFieldName)
        {
            select firstonly schedulerSubjobFieldList
                index hint jobFieldIdx
                where schedulerSubjobFieldList.SubjobId     == _subjobId
                   && schedulerSubjobFieldList.FromFieldName== _fromFieldName
                   && schedulerSubjobFieldList.ToFieldName  == _toFieldName;
        }

        return schedulerSubjobFieldList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the unique indexes for scheduler subjobs while removing mapping fields.
    /// </summary>
    /// <remarks>
    /// display warning if the mapping fields belongs to unique indexes.
    /// </remarks>
    /// <returns>
    /// true if mapping fields are not under unique indexes; otherwise, false.
    /// </returns>
    public boolean validateDelete()
    {
        boolean ret = true;

        RetailConnSchedulerSubjobTable subJobTable;

        select firstonly AXTableName from subJobTable where subJobTable.subJobId == this.subjobId;

        if (RetailCdxFeatureControl::IsUniqueIndexFieldMappingExtensionPreventionDisabled()
            && RetailConnReplicationUtilities::IsFieldInUniqueIndex(subJobTable.AXTableName, this.fromFieldName))
        {
            ret = checkFailed(strFmt("@Retail:RetailValidateRemovingIndexFieldsInSchedulerSubJobs",
                                this.fromFieldName, subJobTable.AXTableName));
        }

        if (ret)
        {
            ret = super();
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4040242</DeveloperDocumentation>
	<Label>@RET538</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>subjobId</TitleField1>
	<TitleField2>fromFieldName</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>jobFieldIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ChannelManagement</Modules>
	<PrimaryIndex>jobFieldIdx</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>subjobId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>toFieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>fromFieldName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>fromFieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>toFieldName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>subjobId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>conversionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>conversionValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>fieldValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>toFieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>fromFieldName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>conversionType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailConnConversionType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>conversionValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnConversionValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>fieldValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnFieldValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>fromFieldName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnFieldName</ExtendedDataType>
			<Label>@RET74</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>subjobId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnSubJobId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>toFieldName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnFieldName</ExtendedDataType>
			<Label>@RET77</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>jobFieldIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>subjobId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>toFieldName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ModifiedDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>modifiedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RetailConnSchedulerSubjobTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailConnSchedulerSubjobTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>subjobId</Name>
					<SourceEDT>RetailConnSubJobId</SourceEDT>
					<Field>subjobId</Field>
					<RelatedField>subJobId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>