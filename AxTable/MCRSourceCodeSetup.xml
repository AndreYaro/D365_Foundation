<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRSourceCodeSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRSourceCodeSetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayFirstOrderDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the 1st order date for the source code.
    /// </summary>
    /// <returns>
    /// This is the created date of the record.
    /// </returns>
    public Date displayFirstOrderDate()
    {
        SalesTable      salesTable;
        MCRSalesTable   mcrSalesTable;

        select firstonly createdDateTime from salesTable
            order by createdDateTime asc
            exists join mcrSalesTable
            where mcrSalesTable.SalesTable == SalesTable.RecId
                && mcrSalesTable.SourceId == this.SourceID;

        return DateTimeUtil::date(salesTable.createdDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayNumOrders</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total number of sales orders entered.
    /// for the source code.
    /// </summary>
    /// <returns>
    /// The total count of sales order related to the source code.
    /// </returns>
    public counter displayNumOrders()
    {
        SalesTable      salesTable;
        MCRSalesTable   mcrSalesTable;

        select count(recId) from salesTable
            exists join mcrSalesTable
            where mcrSalesTable.SalesTable == SalesTable.RecId
                && mcrSalesTable.SourceId == this.SourceID;

        return any2int(salesTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayTotalBudgetedCosts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total budgeted costs.
    /// </summary>
    /// <returns>
    /// This is the currency amount calculated.
    /// </returns>
    public amountCur displayTotalBudgetedCosts()
    {
        return this.OtherCost + this.PrintingCosts + this.MailingCosts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayTotalReturns</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total invoiced return order amount for the source code.
    /// </summary>
    /// <returns>
    /// The total currency amount related to the source code.
    /// </returns>
    public AmountMST displayTotalReturns()
    {
        SalesTable      salesTable;
        CustInvoiceJour custInvoiceJour;
        MCRSalesTable   mcrSalesTable;

        // get total order invoiced for this source code.
        select sum(InvoiceAmountMST) from custInvoiceJour
            where custInvoiceJour.InvoiceAmountMST < 0
            join recId from salesTable
            where salesTable.SalesId == custInvoiceJour.SalesId
            exists join mcrSalesTable
            where mcrSalesTable.SalesTable == SalesTable.RecId
                && mcrSalesTable.SourceId == this.SourceID;

        return custInvoiceJour.InvoiceAmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayTotalSales</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the total invoiced order amount for the source code.
    /// </summary>
    /// <returns>
    /// The total currency amount related to the source code.
    /// </returns>
    public AmountMST displayTotalSales()
    {
        SalesTable          salesTable;
        CustInvoiceJour     custInvoiceJour;
        MCRSalesTable       mcrSalesTable;

        // get total order invoiced for this source code.
        select sum(InvoiceAmountMST) from custInvoiceJour
            where custInvoiceJour.InvoiceAmountMST > 0
            join recId from salesTable
            where salesTable.SalesId == custInvoiceJour.SalesId
            exists join mcrSalesTable
            where mcrSalesTable.SalesTable == SalesTable.RecId
                && mcrSalesTable.SourceId == this.SourceID;

        return custInvoiceJour.InvoiceAmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceCosts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves either the acutal or budgeted sales cost.
    /// </summary>
    /// <param name="_actual">
    /// A <c>boolean</c> value that represents actual cost as true, otherwise sales cost; optional.
    /// </param>
    /// <returns>
    /// This is either the actual or budgeted currency amount.
    /// </returns>
    public AmountMST sourceCosts(boolean _actual = true)
    {
        AmountMst costs;

        if (_actual) // get actual costs
        {
            costs = this.ActualCost;
        }
        else // get projected/budgeted costs
        {
            costs = this.displayTotalBudgetedCosts();
        }

        return costs;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceFirstOrderDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the actual or projected date for the 1st order.
    /// associated to the source.
    /// </summary>
    /// <param name="_actual">
    /// A <c>boolean</c> value that represents actual revenue as true, otherwise budgeted revenue; optional.
    /// </param>
    /// <returns>
    /// This is the date of the first order related to the source code.
    /// </returns>
    public FromDate sourceFirstOrderDate(boolean _actual = true)
    {
        FromDate firstOrderDate;

        if (_actual) // get actual revenue
        {
            firstOrderDate = this.displayFirstOrderDate();
        }
        else // get projected/budgeted revenue
        {
            firstOrderDate = this.ProjOrderDate;
        }

        return firstOrderDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceNumOfOrders</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the actual or projected number of orders.
    /// associated to the source code.
    /// </summary>
    /// <param name="_actual">
    /// This is a <c>boolean</c> value that represents actual revenue as true and budgeted revenue as false; optional.
    /// </param>
    /// <returns>
    /// This is a count of orders related to the source code.
    /// </returns>
    public counter sourceNumOfOrders(boolean _actual = true)
    {
        counter numOfOrders;

        if (_actual) // get actual revenue
        {
            numOfOrders = this.displayNumOrders();
        }
        else // get projected/budgeted revenue
        {
            numOfOrders = this.ProjOrders;
        }

        return numOfOrders;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceReturns</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls either the <c>displayTotalReturns</c> method or uses
    /// the <c>ProjReturns</c> field for the projected return amount.
    /// </summary>
    /// <param name="_actual">
    /// This is a <c>boolean</c> value that indicates actual amount when true otherwise false; optional.
    /// </param>
    /// <returns>
    /// Sends back either the total return amount or the projected return amount.
    /// </returns>
    public AmountMST sourceReturns(boolean _actual = true)
    {
        AmountMST returnAmount;

        if (_actual) // get actual revenue
        {
            returnAmount = this.displayTotalReturns();
        }
        else // get projected/budgeted revenue
        {
            returnAmount = this.ProjReturns;
        }

        return returnAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceRevenue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Rretrieves either the acutal sales or budgeted sales revenue.
    /// </summary>
    /// <param name="_actual">
    ///  This is a <c>boolean</c> value that indicates actual amount when true otherwise false; optional.
    /// </param>
    /// <returns>
    /// Returns either the total actual sales or the budgeted sales revenue.
    /// </returns>
    public AmountMST sourceRevenue(boolean _actual = true)
    {
        AmountMst revenue;

        if (_actual) // get actual revenue
        {
            revenue = this.displayTotalSales();
        }
        else // get projected/budgeted revenue
        {
            revenue = this.ProjSales;
        }

        return revenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the Source Code record by the source code ID.
    /// </summary>
    /// <param name="_sourceId">
    /// This is a unique identifier for the source code.
    /// </param>
    /// <param name="_forUpdate">
    /// A <c>boolean</c> value that indicates whether the to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The <c>MCRSourceCodeSetup</c> record found.
    /// </returns>
    static MCRSourceCodeSetup find(MCRSourceID _sourceId,
                           boolean  _forUpdate = false)
    {
        MCRSourceCodeSetup  mcrSourceCodeSetup;

        if (_sourceId)
        {
            if (_forUpdate)
            {
                mcrSourceCodeSetup.selectForUpdate(_forUpdate);
            }

            select firstonly mcrSourceCodeSetup
                where mcrSourceCodeSetup.sourceId == _sourceId;
        }

        return mcrSourceCodeSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCatalog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the source code record by the catalog record ID.
    /// </summary>
    /// <param name="_catalog">
    /// This is a unique identifier for the catalog.
    /// </param>
    /// <param name="_forUpdate">
    /// This is a <c>boolean</c> value that indicates whether the to read the record for update; optional.
    /// </param>
    /// <returns>
    /// This is the <c>Catalog</c> table record.
    /// </returns>
    static Catalog findCatalog(CatalogRefRecId _catalog,
                           boolean  _forUpdate = false)
    {
        Catalog  catalog;

        if (_catalog)
        {
            if (_forUpdate)
            {
                catalog.selectForUpdate(_forUpdate);
            }

            select firstonly catalog
                where catalog.RecId == _catalog;
        }

        return catalog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupItemsFromSourceID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Looks up and displays the desired promotional item records in a form
    /// depending on the calling form control.
    /// </summary>
    /// <param name="_sourceID">
    /// The source ID related to the promotion.
    /// </param>
    /// <param name="_callingControl">
    /// The form control that called the lookup.
    /// </param>
    /// <remarks>
    /// If the sourec code exists, show all items for that source code.
    /// If the source code does not exist then show all items.
    /// </remarks>
    public static void lookupItemsFromSourceID(MCRSourceID _sourceID, FormControl _callingControl)
    {
        SysTableLookup          sysTableLookup;
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildDataSource    queryBuildDataSourceCatalogProduct;
        MCRSourceCodeSetup      mcrSourceCodeSetup;

        sysTableLookup = SysTableLookup::newParameters(tableNum(InventTable), _callingControl);
        sysTableLookup.addLookupfield(fieldNum(InventTable, ItemID));
        sysTableLookup.addLookupMethod(tablemethodstr(InventTable,defaultProductName));
        sysTableLookup.addLookupMethod(tablemethodstr(InventTable, ItemGroupID));
        sysTableLookup.addLookupfield(fieldNum(InventTable, NameAlias));
        sysTableLookup.addLookupfield(fieldNum(InventTable, ItemType));

        queryBuildDataSource = query.addDataSource(tablenum(InventTable));
        mcrSourceCodeSetup = MCRSourceCodeSetup::find(_sourceID);
        if (mcrSourceCodeSetup)
        {
            // Source code exists, show items related to this source code.
            queryBuildDataSourceCatalogProduct = queryBuildDataSource.addDataSource(tablenum(CatalogProduct));
            queryBuildDataSourceCatalogProduct.addLink(fieldNum(InventTable, Product), fieldNum(CatalogProduct, Product));
            queryBuildDataSourceCatalogProduct.addRange(fieldNum(CatalogProduct, Catalog)).value(SysQuery::value(mcrSourceCodeSetup.Catalog));
        }
        else
        {
            // Offer doesn't exist, show all items
            queryBuildDataSource.addRange(fieldnum(InventTable, ItemID)).value();
        }
        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupNonExpiredSourceCodes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds all valid, not expired source codes.
    /// </summary>
    /// <param name="_ctrl">
    /// The calling <c>form</c>.
    /// </param>
    public static void lookupNonExpiredSourceCodes(FormStringControl _ctrl)
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(MCRSourceCodeSetup),_ctrl);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSourceSourceCode;
        QueryBuildDataSource    queryBuildDataSourceCatalog;
        QueryBuildRange         queryBuildRangeValidFrom;
        QueryBuildRange         queryBuildRangeValidTo;

        sysTableLookup.addLookupfield(fieldNum(MCRSourceCodeSetup,SourceID));
        sysTableLookup.addLookupfield(fieldNum(MCRSourcecodeSetup,Description));

        queryBuildDataSourceSourceCode = query.addDataSource(tableNum(MCRSourceCodeSetup));
        queryBuildDataSourceCatalog = queryBuildDataSourceSourceCode.addDataSource(tableNum(Catalog));
        queryBuildDataSourceCatalog.joinMode(joinMode::InnerJoin);
        queryBuildDataSourceCatalog.relations(false);
        queryBuildDataSourceCatalog.addLink(fieldNum(MCRSourceCodeSetup,Catalog),fieldNum(Catalog,RecId));
        queryBuildDataSourceCatalog.addRange(fieldNum(Catalog, State)).value(queryValue(CatalogState::Published));
        queryBuildRangeValidFrom = queryBuildDataSourceCatalog.addRange(fieldNum(Catalog,ValidFrom));
        queryBuildRangeValidTo = queryBuildDataSourceCatalog.addRange(fieldNum(Catalog,ValidTo));

        queryBuildRangeValidFrom.value('..' + date2strUsr(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),DateFlags::FormatAll));
        queryBuildRangeValidTo.value(date2strUsr(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),DateFlags::FormatAll) + '..');

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSourceCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the source code ID either exists in the source code table,
    /// exists in the alternate source code table or is blank.
    /// </summary>
    /// <param name="_sourceID">
    /// This is a unique identifier for the source code.
    /// </param>
    /// <returns>
    /// This is a <c>boolean</c> value indicating the result of the validation.
    /// </returns>
    static boolean validateSourceCode(MCRSourceID _sourceID)
    {
        MCRSourceCodeSetup mcrSourceCodeSetup;

        if (_sourceId)
        {
            mcrSourceCodeSetup = MCRSourceCodeSetup::find(_sourceID);
            if (mcrSourceCodeSetup)
            {
                return true;
            }
            else
            {
                // Not found at all.
                return checkFailed(strfmt("@MCR10272", _sourceID));
            }
        }
        else
        {
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSourceEffective</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Validates that the source code entered on the sales header or line is within the
    ///  effective dates on the offer tied to the source code. If the source code is no longer
    ///  effective, issue an error.
    /// </summary>
    /// <param name="_sourceId">
    ///  This is a unique identifier for the source code.
    /// </param>
    /// <param name="_salesStartDate">
    /// This is the system date.
    /// </param>
    /// <returns>
    /// This is a <c>boolean</c> value indicating the result of the validation.
    /// </returns>
    static boolean validateSourceEffective(MCRSourceId _sourceId, ValidFromDate _salesStartDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        Catalog     catalog;
        boolean     ret = true;

        if (_sourceID != "")
        {
            catalog = Catalog::find(MCRSourceCodeSetup::find(_sourceId).Catalog);

            if (catalog.State != CatalogState::Published
                && (catalog.ValidFrom > _salesStartDate
                || catalog.ValidTo < _salesStartDate))
            {
                error("@MCR10541");
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSourceEffectivePublished</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the source code entered on the sales header or line is within the
    /// effective dates on the offer tied to the source code and the source code is associated with published catalog.
    /// If the source code is no longer effective or the catalog is not in published status, issue an error.
    /// </summary>
    /// <param name = "_sourceId">This is a unique identifier for the source code.</param>
    /// <param name = "_salesStartDate">This is the system date.</param>
    /// <returns>This is a <c>boolean</c> value indicating the result of the validation.</returns>
    static boolean validateSourceEffectivePublished(MCRSourceId _sourceId, ValidFromDate _salesStartDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        Catalog     catalog;
        boolean     ret = true;

        if (_sourceID != "")
        {
            catalog = Catalog::find(MCRSourceCodeSetup::find(_sourceId).Catalog);

            if (catalog.State != CatalogState::Published
                || catalog.ValidFrom > _salesStartDate
                || catalog.ValidTo < _salesStartDate)
            {
                error("@MCR10541");
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MCRSourceCode</ConfigurationKey>
	<DeveloperDocumentation>@MCR24204</DeveloperDocumentation>
	<FormRef>MCRSourceCodeSetup</FormRef>
	<Label>@MCR24204</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>SourceID</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>SourceID</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ModifiedTransactionId>Yes</ModifiedTransactionId>
	<Modules>Merchandising</Modules>
	<PrimaryIndex>SourceID</PrimaryIndex>
	<ReplacementKey>SourceID</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>SalesLine</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SalesLine</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>SalesQuotationLine</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SalesQuotationLine</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>SalesQuotationTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SalesQuotationTable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>SalesTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>SalesTable</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>smmCampaignTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>smmCampaignTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TargetID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjOrderDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjSales</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjOrders</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjReturns</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintingCosts</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MailingCosts</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DistributionQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MailDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActualCost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Catalog</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DistributionQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FutureOrderDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MailDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MailingCosts</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OnlyCatalogPlans</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OtherCost</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintingCosts</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjOrderDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjOrders</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjReturns</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjSales</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TargetID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Budgets</Name>
			<Label>@MCR11165</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjOrderDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjSales</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjOrders</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjReturns</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintingCosts</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MailingCosts</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OtherCost</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DropInformation</Name>
			<Label>@MCR11145</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DistributionQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MailDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActualCost</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TargetID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SourceInformation</Name>
			<Label>@MCR11161</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TargetID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ActualCost</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS89889</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Catalog</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatalogRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@SYS7576</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DistributionQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRDistributionQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FutureOrderDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FuturesDate</ExtendedDataType>
			<Label>@MCR10178</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>MailDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRMailDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MailingCosts</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRMailingCosts</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OnlyCatalogPlans</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCROnlyCatalogPlans</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OtherCost</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@MCR26342</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PrintingCosts</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRPrintingCosts</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ProjOrderDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
			<Label>@MCR10184</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ProjOrders</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRProjOrders</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ProjReturns</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRProjReturns</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ProjSales</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRProjSales</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SourceID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>MCRSourceID</ExtendedDataType>
			<Label>@MCR23885</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TargetID</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>MCRTargetID</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SourceID</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CatalogSourceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>Catalog</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Catalog</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Catalog</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Catalog</Name>
					<Field>Catalog</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRTargetSetup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>MCRTargetSetup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TargetID</Name>
					<SourceEDT>MCRTargetID</SourceEDT>
					<Field>TargetID</Field>
					<RelatedField>TargetID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>