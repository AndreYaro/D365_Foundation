<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsMRCValidityIntervalByCountry</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PdsMRCValidityIntervalByCountry extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes values for AdviseInterval and ValidityInterval on the MRCValidityIntervalByCountry record.
    /// </summary>
    /// <example>
    /// MRCValidityIntervalByCountry.initValue();
    /// </example>
    /// <remarks>
    /// <syntax>
    /// public void initValue()
    /// </syntax>
    /// </remarks>
    public void initValue()
    {
        PdsMRCParameters    parameters;

        super();
        parameters              = PdsMRCParameters::find();
        this.AdviseInterval     = parameters.msdsAdviseInterval;
        this.ValidityInterval   = parameters.msdsInterval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// validates the new value of field with _fieldId.  Returns false if MSDSAdviseInterval &gt; MSDSInterval.
    /// </summary>
    /// <param name="_fieldIdToCheck">Field to be validated.</param>
    /// <returns>Result of validation check on field with _fieldId.</returns>
    /// <example>
    /// boolean ret = MrcValidityIntervalByCountry.validateField();
    /// </example>
    /// <remarks>
    /// <syntax>
    /// public boolean validateField(fieldId )
    /// </syntax>
    /// </remarks>
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);
        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldnum(PdsMRCValidityIntervalByCountry, ValidityInterval):
                case fieldnum(PdsMRCValidityIntervalByCountry, AdviseInterval):
                    if (this.AdviseInterval > this.ValidityInterval)
                    {
                        ret = checkFailed("@PDS849");
                    }
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the MRCValidityIntervalByCountry::exist method.  If false displays an error message and returns false, else returns true.
    /// </summary>
    /// <param name="_countryId">countryId used to check if Validity interval exists</param>
    /// <returns>Result of call to MRCValidityIntervalByCountry::exist().</returns>
    /// <example>
    /// boolean ret;
    ///
    /// ret = MRCValidityIntervalByCountry::checkExist(addressCountryRegionId);
    /// </example>
    /// <remarks>
    /// <syntax>
    /// public static Enum checkExist(AddressCountryRegionId )
    /// </syntax>
    /// </remarks>
    public static boolean checkExist(AddressCountryRegionId _countryId)
    {
        boolean ret = true;

        if (!PdsMRCValidityIntervalByCountry::exist(_countryId))
        {
            ret = checkFailed(strfmt(PdsMRCValidityIntervalByCountry::txtNotExist(),
                                     _countryId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method returns a boolean value as to whether or not
    /// </summary>
    /// <param name="_countryId">CountryId used to check if Validity interval exists</param>
    /// <returns>Result of search for MRCValidityIntervalByCountry record.</returns>
    /// <remarks>
    /// <syntax>
    /// public static Enum exist(AddressCountryRegionId )
    /// </syntax>
    /// </remarks>
    public static boolean exist(AddressCountryRegionId _countryId)
    {
        return _countryId
            && (select pdsMRCValidityIntervalByCountry
                    where pdsMRCValidityIntervalByCountry.CountryId == _countryId
                ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds and returns a MRCValidityIntervalByCoutry record with corresponding AddressCountryRegionId.
    /// </summary>
    /// <param name="_countryId">CountryId used to find record.</param>
    /// <param name="_forUpdate">Determines whether or not the record should be selected for update.</param>
    /// <returns>MRCValidityIntervalByCountry record found with corresponding addressCountryRegionId as the parameter
    /// _countryId.</returns>
    /// <remarks>
    /// <syntax>
    /// public static Record find(AddressCountryRegionId , Enum )
    /// </syntax>
    /// </remarks>
    public static PdsMRCValidityIntervalByCountry find(
        AddressCountryRegionId  _countryId,
        boolean                 _forUpdate = false)
    {
        PdsMRCValidityIntervalByCountry validityIntervalByCountry;

        if (_countryId)
        {
            validityIntervalByCountry.selectForUpdate(_forUpdate);
            select firstonly validityIntervalByCountry
                where validityIntervalByCountry.CountryId == _countryId;
        }

        return validityIntervalByCountry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns default warning used in the checkExist method when record doens't exist.
    /// </summary>
    /// <returns>Static text used to display that a record doens't exist.</returns>
    /// <remarks>
    /// <syntax>
    /// public static TxtNotExist txtNotExist()
    /// </syntax>
    /// </remarks>
    //To return a warning info string used in method checkExist.
    public static TxtNotExist txtNotExist()
    {
        return "@PDS853";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsMRC</ConfigurationKey>
	<DeveloperDocumentation>@PDS1090</DeveloperDocumentation>
	<FormRef>PdsMRCValidityIntervalByCountry</FormRef>
	<Label>@PDS:PdsProductSafetyDataSheetValidity</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>CountryId</TitleField1>
	<TitleField2>ValidityInterval</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>CountryIdIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ProductInformationManagement</Modules>
	<PrimaryIndex>CountryIdIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnforceMinorRevision</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AdviseInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidityInterval</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS2952</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidityInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AdviseInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnforceMinorRevision</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@PDS:PdsProductSafetyDataSheetValidity</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CountryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidityInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AdviseInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnforceMinorRevision</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>AdviseInterval</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCMSDSInterval</ExtendedDataType>
			<Label>@PDS829</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AddressCountryRegionId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnforceMinorRevision</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCEnforceMinorRevision</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>ValidityInterval</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsMRCMSDSInterval</ExtendedDataType>
			<Label>@PDS828</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CountryIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CountryId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryId</Name>
					<SourceEDT>AddressCountryRegionId</SourceEDT>
					<Field>CountryId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MRCRestrictedListByItemRelation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PdsMRCRestrictedListByItem</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryId</Name>
					<Field>CountryId</Field>
					<RelatedField>CountryId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>