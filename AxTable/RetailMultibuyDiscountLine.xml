<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailMultibuyDiscountLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailMultibuyDiscountLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls methods appropriate to modified fields.
    /// </summary>
    /// <param name="_fieldId">
    ///    The ID of the field that is modified.
    /// </param>
    /// <remarks>
    ///    This method executes when any field in the table is modified.
    /// </remarks>
    public void modifiedField(FieldId _fieldId)
    {
        if (_fieldId == fieldNum(RetailMultibuyDiscountLine, PriceDiscPct))
        {
            this.validatePriceDiscPct();
        }

        super(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// An error is thrown when you rename the record if the distribution type is other than
    /// <c>NoDistribution</c>.
    /// </summary>
    /// <remarks>
    /// An error is thrown when you rename the record if the distribution type is other than
    /// <c>NoDistribution</c>.
    /// </remarks>
    public void renamePrimaryKey()
    {
        ;
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validatePriceDiscPct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the discount percent is between 0 to 100.
    /// </summary>
    /// <returns>
    /// true if the range is valid; otherwise, false.
    /// </returns>
    protected boolean validatePriceDiscPct()
    {
        boolean ret = true;

        // Only validate when type is percent
        RetailDiscountMultibuy multibuy = RetailDiscountMultibuy::find(this.multibuyId);
        if (multibuy)
        {
            if (multibuy.MultibuyDiscountType == RetailDiscountTypeEnum::DiscPct)
            {
                ret = RetailPricingConfigurationValidator::isValidDiscountPercentageAllowZero(this.priceDiscPct);
            }
            else if (multibuy.MultibuyDiscountType == RetailDiscountTypeEnum::UnitPrice)
            {
                ret = RetailPricingConfigurationValidator::isValidDiscountDealPriceAllowZero(this.priceDiscPct);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLowestQuantity</Name>
				<Source><![CDATA[
    private boolean validateLowestQuantity()
    {
        return RetailPricingConfigurationValidator::isPositiveQuantity(this.qtyLowest);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super() && this.validatePriceDiscPct() && this.validateLowestQuantity();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in <c>RetailMultibuyDiscountLine</c> table.
    /// </summary>
    /// <param name="_multibuyId">
    /// Value of the multibuy number.
    /// </param>
    /// <param name="_qtyLowest">
    /// Value of the minimum quantity.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailMultibuyDiscountLine</c> table; otherwise, an empty record.
    /// </returns>
    /// <remarks>
    /// Original signature included an unused _currency parameter, which was removed in AX 2012 R3.
    /// </remarks>
    public static RetailMultibuyDiscountLine find(RetailMultibuyDiscountId _multibuyId, RetailQtyLowest _qtyLowest, boolean _forUpdate = false)
    {
        RetailMultibuyDiscountLine multibuyDiscountLine;

        if (_multibuyId && _qtyLowest)
        {
            multibuyDiscountLine.selectForUpdate(_forUpdate);

            select firstonly multibuyDiscountLine
                index hint multibuyIdQtyLowest
                where multibuyDiscountLine.multibuyId == _multibuyId
                   && multibuyDiscountLine.qtyLowest == _qtyLowest;
        }

        return multibuyDiscountLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@RET6129</DeveloperDocumentation>
	<FormRef>RetailMultibuyDiscountLine</FormRef>
	<Label>@RET3905</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>multibuyId</TitleField1>
	<TitleField2>qtyLowest</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ModifiedTransactionId>Yes</ModifiedTransactionId>
	<Modules>Merchandising</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>multibuyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>qtyLowest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>priceDiscPct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>configuration</Name>
			<Label>@RET3906</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>qtyLowest</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>priceDiscPct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@RET3040</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>multibuyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>multibuyId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailMultibuyDiscountId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>priceDiscPct</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailPriceDiscPct</ExtendedDataType>
			<Label>@RetailPricing:DiscountCalcValue</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>qtyLowest</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailQtyLowest</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>multibuyIdQtyLowest</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>multibuyId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>qtyLowest</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RetailDiscountMultiBuy</Name>
			<Cardinality>ZeroOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RetailDiscountMultibuy</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>multibuyId</Name>
					<SourceEDT>RetailMultibuyDiscountId</SourceEDT>
					<Field>multibuyId</Field>
					<RelatedField>OfferId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>