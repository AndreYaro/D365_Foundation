<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatUserReviewComment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatUserReviewComment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
        public void initValue()
    {
        CatUserReviewSettings catUserReviewSettings = CatUserReviewSettings::find();

        super();

        if (catUserReviewSettings.IsAutoApprovalEnabled)
        {
            this.Status = CatUserReviewApprovalStatus::Approved;
        }
        else
        {
            this.Status = CatUserReviewApprovalStatus::Pending;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        public void insert()
    {
        CatUserReviewSettings catUserReviewSettings;

        catUserReviewSettings = CatUserReviewSettings::find();

        /*
        *  abort insert()
        *  No comments are allowed when IsCommenting is disabled
        *  Title is Mandatory. No empty Title is allowed
        */
        if (!catUserReviewSettings.IsCommentingEnabled || this.Title == "")
        {
            return;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
        public static boolean checkExist(RefRecId _review)
    {
        return CatUserReviewComment::exist(_review) ? true
            : checkFailed(strfmt(CatUserReviewComment::txtNotExist(), _review));
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record exists in the <c>CatUserReviewComment</c> table.
    /// </summary>
    /// <param name="_review">
    ///    The record ID of the corresponding <c>CatUserReview</c> record.
    /// </param>
    /// <returns>
    ///    true if the record was found; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _review)
    {
        return (CatUserReviewComment::find(_review).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CatUserReviewComment</c> table.
    /// </summary>
    /// <param name="_review">
    ///    The record ID of the corresponding <c>CatUserReview</c> row.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    The <c>CatUserReviewComment</c> record if it is found; otherwise, an empty record buffer
    /// </returns>
    public static CatUserReviewComment find(RefRecId _review, boolean _forUpdate = false)
    {
        CatUserReviewComment catUserReviewComment;

        if (_review)
        {
            catUserReviewComment.selectForUpdate(_forUpdate);
            select firstonly catUserReviewComment
                where catUserReviewComment.Review == _review;
        }

        return catUserReviewComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static TxtNotExist txtNotExist()
    {
        return "@SYS102239";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcEmployeeProcurementSite</ConfigurationKey>
	<DeveloperDocumentation>@SYS318557</DeveloperDocumentation>
	<Label>@SYS312757</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Status</TitleField1>
	<TitleField2>Title</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>Review</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>Review</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Review</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Title</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsAnonymous</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Review</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS26467</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Review</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Title</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsAnonymous</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Comment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatUserReviewCommentText</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsAnonymous</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS317051</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Review</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>CatUserReviewApprovalStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Title</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatUserReviewCommentTitle</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Review</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Review</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CatUserReview</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CatUserReview</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CatUserReview</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>CatUserReview_CatUserReviewComment</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Review</Name>
					<Field>Review</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>