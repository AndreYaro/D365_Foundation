<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailConnAOSProfile</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailConnAOSProfile extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildConnectionString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Build connection string for retail scheduler AOS profile.
    /// </summary>
    /// <param name="_schemaType">
    /// Connection channel scheme type.
    /// </param>
    /// <returns>
    /// Connection string.
    /// </returns>
    public str buildConnectionString(RetailConnChannelSchemaTypeEnum _schemaType)
    {
        // IMPORTANT: when putting the patterns in a macro, the call to strfmt doe NOT work!
        // Hence these hard coded values!
        // this NOT to be localized, ever
        // typical example: 'Locationid=0000;company=CEU;object_server=AxaptaDev@BENSANS3:2714;cfg=;|AX6Retail_AX|none'

        str result;
        str objectServer;
        str instanceServerPort = '%1@%2:%3';
        str serverPort = '%1:%2';
        str pattern = 'Locationid=%1;company=%2;object_server=%3;cfg=;|%4|1';
        str plugin;

        if (this.Instance)
        {
            objectServer = strfmt(instanceServerPort, this.Instance, this.Server, this.Port);
        }
        else
        {
            objectServer = strfmt(serverPort, this.Server, this.Port);
        }

        switch (_schemaType)
        {
            case RetailConnChannelSchemaTypeEnum::AX5POS:
                plugin = 'AX6Retail_AX_AX5'; break;

            case RetailConnChannelSchemaTypeEnum::AX61POS:
            case RetailConnChannelSchemaTypeEnum::AX62POS:
            case RetailConnChannelSchemaTypeEnum::AX62OnlineChannel:
            case RetailConnChannelSchemaTypeEnum::AX63RetailServer:
            case RetailConnChannelSchemaTypeEnum::AX63:
                plugin = 'AX6Retail_AX'; break;
        }

        result = strfmt(pattern, this.Name, this.DataAreaId, objectServer, plugin);

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the record with the current profileID from the <c>RetailConnConnectionProfile</c> table.
    /// </summary>
    public void delete()
    {
        RetailConnConnectionProfile connectionProfile;

        ttsbegin;

        super();

        delete_from connectionProfile
        index hint RecId
        where connectionProfile.Profile == this.RecId
            && connectionProfile.Type == RetailConnProfileConnectionTypeEnum::AOS;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record with the current profileID into the <c>RetailConnConnectionProfile</c> table.
    /// </summary>
    public void insert()
    {
        RetailConnConnectionProfile connectionProfile;
        DictEnum DEnum;
        int      i;

        ttsbegin;

        super();

        DEnum = new DictEnum(enumNum(RetailConnChannelSchemaTypeEnum));
        for (i=0; i < DEnum.values(); i++)
        {
            connectionProfile.clear();
            connectionProfile.Type = RetailConnProfileConnectionTypeEnum::AOS;
            connectionProfile.SchemaType = DEnum.index2Value(i);
            connectionProfile.StoreConnectRecId = this.StoreConnectRecId;
            connectionProfile.ConnectionString = this.buildConnectionString(DEnum.index2Value(i));
            connectionProfile.Profile = this.RecId;

            connectionProfile.insert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates a the record with the current profileID in the <c>RetailConnConnectionProfile</c> table.
    /// </summary>
    public void update()
    {
        RetailConnConnectionProfile connectionProfile;
        DictEnum DEnum;
        int      i;

        ttsbegin;

        DEnum = new DictEnum(enumNum(RetailConnChannelSchemaTypeEnum));
        for (i=0; i < DEnum.values(); i++)
        {
            connectionProfile.selectForUpdate(true);

            select forupdate connectionProfile
            index hint RecId
            where connectionProfile.Profile == this.RecId
                && connectionProfile.Type == RetailConnProfileConnectionTypeEnum::AOS
                && connectionProfile.SchemaType == DEnum.index2Value(i);

            if (connectionProfile)
            {
                connectionProfile.StoreConnectRecId = this.StoreConnectRecId;
                connectionProfile.ConnectionString = this.buildConnectionString(DEnum.index2Value(i));

                connectionProfile.update();
            }
            else
            {
                connectionProfile.Type = RetailConnProfileConnectionTypeEnum::AOS;
                connectionProfile.SchemaType = DEnum.index2Value(i);
                connectionProfile.StoreConnectRecId = this.StoreConnectRecId;
                connectionProfile.ConnectionString = this.buildConnectionString(DEnum.index2Value(i));
                connectionProfile.Profile = this.RecId;

                connectionProfile.insert();
            }
        }

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        // force a check on foreign keys
        if (ret)
            ret = this.validateField(fieldnum(RetailConnAOSProfile, StoreConnectRecId));

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailConnAOSProfile</c> table.
    /// </summary>
    /// <param name="_name">
    /// The name of the connection profile record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailConnAOSProfile</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailConnAOSProfile find(RetailConnProfileName _name, boolean _forUpdate = false)
    {
        RetailConnAOSProfile profile;

        if (_name)
        {
            profile.selectForUpdate(_forUpdate);

            select profile
                index hint NameIdx
                where profile.Name == _name;
        }

        return profile;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260592</DeveloperDocumentation>
	<Label>@RET608</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Server</TitleField1>
	<TitleField2>Name</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ChannelManagement</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Server</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Server</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@RET609</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Port</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Instance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Server</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StoreConnectRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WSDLPort</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Instance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnAOSInstanceName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnProfileName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Port</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnProfileTCPIPPort</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Server</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailConnProfileServer</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>StoreConnectRecId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>WSDLPort</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailWSDLPort</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>StoreConnectIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>StoreConnectRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>StoreConnectRelation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailConnStoreConnectProfile</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StoreConnectRecId</Name>
					<Field>StoreConnectRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>