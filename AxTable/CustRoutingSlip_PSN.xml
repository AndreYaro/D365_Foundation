<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustRoutingSlip_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustRoutingSlip_PSN extends CustVendRoutingSlip_PSN
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
        public void initValue()
    {
        this.setCustRoutingSlipdId();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustRoutingSlipdId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns a new <c>CustRoutingSlipId</c> using the number sequence that is set up for the <c>CustRoutingSlipId_PSN</c> identifier.
    /// </summary>
    public void setCustRoutingSlipdId()
    {
        NumberSeq               numberSeq;
        NumberSequenceTable     numberSequenceTable;
        NumberSequenceReference numSeqReference = CustParameters::numRefCustRoutingSlipId();

        if (!numSeqReference)
        {
            AifFault::checkFailedLogFault(strFmt("@SPS1274", "@GLS223145", enum2str(NumberSeqModule::Cust)));
        }
        else
        {
            numberSequenceTable = NumberSequenceTable::find(numSeqReference.NumberSequenceId);

            if (!numberSequenceTable)
            {
                // The number sequence that was selected for the CustRoutingSlipId does not exist.
                AifFault::checkFailedLogFault(strFmt("@SPS1274", numSeqReference.referenceLabel(), numSeqReference.referenceModuleLabel()));
            }
            else
            {
                if (numberSequenceTable.Blocked)
                {
                    // The number sequence set up for CustRoutingSlipdId is on hold.
                    AifFault::checkFailedLogFault(strFmt("@SYS25068", numberSequenceTable.NumberSequence));
                }
                else
                {
                    numberSeq = NumberSeq::newGetNum(numSeqReference, numSeqReference.numberSequenceTable().Continuous, true);
                    if (numberSeq)
                    {
                        this.setFieldValue(fieldStr(CustRoutingSlip_PSN, CustRoutingSlipId),numberSeq.num());
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>CustRoutingSlip_PSN</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the <c>CustRoutingSlip_PSN</c> record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    A base enum value which indicates the concurrency model to use; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CustRoutingSlip_PSN</c> table; otherwise, an empty record.
    /// </returns>
    public static CustRoutingSlip_PSN find(
        CustVendRoutingSlipRecId_PSN _recId,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustRoutingSlip_PSN custRoutingSlip;

        custRoutingSlip.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custRoutingSlip.concurrencyModel(_concurrencyModel);
        }

        select firstonly custRoutingSlip
            where custRoutingSlip.RecId == _recId;

        return custRoutingSlip;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
	<DeveloperDocumentation>@GLS223155</DeveloperDocumentation>
	<Label>@GLS223145</Label>
	<TitleField1>CustRoutingSlipId</TitleField1>
	<TitleField2>RecId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Extends>CustVendRoutingSlip_PSN</Extends>
	<Modules>AccountsReceivable</Modules>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustRoutingSlipId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustRoutingSlipId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustRoutingSlipId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustRoutingSlipId_PSN</ExtendedDataType>
			<Label>@GLS223145</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustVendRoutingSlip_PSN</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CustVendRoutingSlip_PSN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>