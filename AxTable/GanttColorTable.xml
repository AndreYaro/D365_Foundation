<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GanttColorTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class GanttColorTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        super();

        classfactory.globalCache().clear(tableStr(GanttColorTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRGB</Name>
				<Source><![CDATA[
    void setRGB()
    {
        [this.r,this.g,this.b] = WinAPI::RGBint2Con(this.Color);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setColorFromRGB</Name>
				<Source><![CDATA[
    public void setColorFromRGB()
    {
        this.color = WinAPI::RGBCon2int([this.R, this.G, this.B]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        super();

        classfactory.globalCache().clear(tableStr(GanttColorTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultNumOf</Name>
				<Source><![CDATA[
    static int defaultNumOf()
    {
        return 35;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultGanttColor</Name>
				<Source><![CDATA[
    static GanttColorId getDefaultGanttColor(int num)
    {
        GanttColorId id;

        switch (num mod GanttColorTable::defaultNumOf())
        {
            case  1:
                id = WinAPI::RGBCon2int([255,128,128]);
                break;
            case  2:
                id = WinAPI::RGBCon2int([255,255,128]);
                break;
            case  3:
                id = WinAPI::RGBCon2int([  0,255,128]);
                break;
            case  4:
                id = WinAPI::RGBCon2int([  0,128,255]);
                break;
            case  5:
                id = WinAPI::RGBCon2int([255,128,192]);
                break;
            case  6:
                id = WinAPI::RGBCon2int([255,128,255]);
                break;
            case  7:
                id = WinAPI::RGBCon2int([255,  0,  0]);
                break;
            case  8:
                id = WinAPI::RGBCon2int([255,255,  0]);
                break;
            case  9:
                id = WinAPI::RGBCon2int([  0,255, 64]);
                break;
            case 10:
                id = WinAPI::RGBCon2int([  0,255,255]);
                break;
            case 11:
                id = WinAPI::RGBCon2int([  0,128,192]);
                break;
            case 12:
                id = WinAPI::RGBCon2int([128,128,192]);
                break;
            case 13:
                id = WinAPI::RGBCon2int([255,  0,255]);
                break;
            case 14:
                id = WinAPI::RGBCon2int([255,128, 64]);
                break;
            case 15:
                id = WinAPI::RGBCon2int([  0,255,  0]);
                break;
            case 16:
                id = WinAPI::RGBCon2int([  0, 64,128]);
                break;
            case 17:
                id = WinAPI::RGBCon2int([128,128,255]);
                break;
            case 18:
                id = WinAPI::RGBCon2int([128,  0, 64]);
                break;
            case 19:
                id = WinAPI::RGBCon2int([255,  0,128]);
                break;
            case 20:
                id = WinAPI::RGBCon2int([128,  0,  0]);
                break;
            case 21:
                id = WinAPI::RGBCon2int([255,128,  0]);
                break;
            case 22:
                id = WinAPI::RGBCon2int([  0,128,  0]);
                break;
            case 23:
                id = WinAPI::RGBCon2int([  0,128, 64]);
                break;
            case 24:
                id = WinAPI::RGBCon2int([  0,  0,255]);
                break;
            case 25:
                id = WinAPI::RGBCon2int([  0,  0,160]);
                break;
            case 26:
                id = WinAPI::RGBCon2int([128,  0,128]);
                break;
            case 27:
                id = WinAPI::RGBCon2int([128,  0,255]);
                break;
            case 28:
                id = WinAPI::RGBCon2int([128, 64,  0]);
                break;
            case 29:
                id = WinAPI::RGBCon2int([  0, 64,  0]);
                break;
            case 30:
                id = WinAPI::RGBCon2int([  0,  0,128]);
                break;
            case 31:
                id = WinAPI::RGBCon2int([128,128,  0]);
                break;
            case 32:
                id = WinAPI::RGBCon2int([128,128, 64]);
                break;
            case 33:
                id = WinAPI::RGBCon2int([128,128,128]);
                break;
            case 34:
                id = WinAPI::RGBCon2int([ 64,128,128]);
                break;
            case  0:
                id = WinAPI::RGBCon2int([192,192,192]);
                break;
            default:
                id = GanttColorTable::getDefaultGanttColor(1);
                break;
        }

        return id;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getGanttColor</Name>
				<Source><![CDATA[
    static GanttColorId getGanttColor(int64 num)
    {
        int                 getNum;
        GanttColorId        id;
        GanttColorTable     ganttColorTable;
        Counter             i;

        GanttColorId getId()
        {
            return classfactory.globalCache().get(tableStr(GanttColorTable),getNum);
        }

        select count(RecId) from ganttColorTable;

        if (! ganttColorTable.RecId)
        {
            GanttColorTable::initDefaultData();
            select count(RecId) from ganttColorTable;

            if (! ganttColorTable.RecId)
            {
                return GanttColorTable::getDefaultGanttColor(1);
            }
        }

        getNum = int642int((num>=0 ? num : -num) mod ganttColorTable.RecId);

        id = getId();

        if (id)
        {
            return id;
        }

        while select Color from ganttColorTable
        {
            classfactory.globalCache().set(tableStr(GanttColorTable),i,ganttColorTable.Color);

            i++;    // Is zero based
        }

        if (! i)
        {
            return GanttColorTable::getDefaultGanttColor(1);
        }

        return getId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDefaultData</Name>
				<Source><![CDATA[
    static void initDefaultData()
    {
        GanttColorTable ganttColorTable;
        Counter         i;

        select firstonly ganttColorTable;
        if (ganttColorTable)
        {
            return;
        }

        ttsbegin;

        for (i=GanttColorTable::defaultNumOf();i;i--)
        {
            ganttColorTable.Color = GanttColorTable::getDefaultGanttColor(i);
            ganttColorTable.setRGB();
            ganttColorTable.insert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS124259</DeveloperDocumentation>
	<FormRef>GanttColorTable</FormRef>
	<Label>@SYS74610</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>color</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>ColorIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>ColorIdx</PrimaryIndex>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>R</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>G</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>B</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Color</Name>
			<Label>@SYS67221</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>color</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RGBFields</Name>
			<Label>@SYS76355</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>R</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>G</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>B</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>color</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>GanttColorId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>R</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RGBintR</ExtendedDataType>
			<Label>@SYS74614</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>G</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RGBintG</ExtendedDataType>
			<Label>@SYS74615</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>B</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RGBintB</ExtendedDataType>
			<Label>@SYS74617</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ColorIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>color</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>