<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlRuleLedgerDimension</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetControlRuleLedgerDimension extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addActiveRuleBudgetCycleRangesToQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds ranges to the specified query for the active budget control configuration rules and specified budget cycle.
    /// </summary>
    /// <param name="_query">
    ///    The query for which to add the query ranges.
    /// </param>
    /// <param name="_budgetCycle">
    ///    The budget cycle from which to restrict the query.
    /// </param>
    public static void addActiveRuleBudgetCycleRangesToQuery(Query _query, BudgetCycle _budgetCycle)
    {
        if (_query && _budgetCycle)
        {
            QueryBuildDataSource budgetSourceTrackingDetailQBDS = _query.dataSourceTable(tableNum(BudgetSourceTrackingDetail));

            if (budgetSourceTrackingDetailQBDS)
            {
                QueryBuildDataSource budgetSourceTrackingQBDS = budgetSourceTrackingDetailQBDS.addDataSource(tableNum(BudgetSourceTracking));
                budgetSourceTrackingQBDS.joinMode(JoinMode::ExistsJoin);
                budgetSourceTrackingQBDS.relations(true);
                budgetSourceTrackingQBDS.addRange(fieldNum(BudgetSourceTracking, TrackingDate)).value(
                    SysQuery::range(_budgetCycle.getStartDate(), _budgetCycle.getEndDate()));

                QueryBuildDataSource budgetControlRuleLedgerDimensionQBDS = budgetSourceTrackingDetailQBDS.addDataSource(tableNum(BudgetControlRuleLedgerDimension));
                budgetControlRuleLedgerDimensionQBDS.joinMode(JoinMode::ExistsJoin);
                budgetControlRuleLedgerDimensionQBDS.addLink(
                    fieldNum(BudgetSourceTrackingDetail, BudgetControlLedgerDimension),
                    fieldNum(BudgetControlRuleLedgerDimension, BudgetControlLedgerDimension));

                QueryBuildDataSource budgetControlRuleQBDS = budgetControlRuleLedgerDimensionQBDS.addDataSource(tableNum(BudgetControlRule));
                budgetControlRuleQBDS.joinMode(JoinMode::ExistsJoin);
                budgetControlRuleQBDS.relations(true);
                budgetControlRuleQBDS.addRange(fieldNum(BudgetControlRule, BudgetCycleTimeSpan)).value(
                    SysQuery::value(_budgetCycle.BudgetCycleTimeSpan));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a specified record in the <c>BudgetControlRuleLedgerDimension</c> table exists and if
    ///    not an error message is displayed.
    /// </summary>
    /// <param name="_recId">
    ///    The <c>RecId</c> field of the <c>BudgetControlRuleLedgerDimension</c> record.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(RecId _recId)
    {
        boolean ret = true;

        if (!BudgetControlRuleLedgerDimension::exist(_recId))
        {
            ret = checkFailed(strfmt(BudgetControlRuleLedgerDimension::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a specified record in the <c>BudgetControlRuleLedgerDimension</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The <c>RecId</c> field of the <c>BudgetControlRuleLedgerDimension</c> record.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        boolean found = (select firstonly RecId from budgetControlRuleLedgerDimension
                            where budgetControlRuleLedgerDimension.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>BudgetControlRuleLedgerDimension</c> table.
    /// </summary>
    ///<param name="_recId">
    ///    The record Id of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>BudgetControlRuleLedgerDimension</c> table; otherwise, an empty record.
    /// </returns>
    public static BudgetControlRuleLedgerDimension find(
        RecId              _recId,
        boolean            _forupdate = false,
        ConcurrencyModel   _concurrencyModel = ConcurrencyModel::Auto)
    {
        BudgetControlRuleLedgerDimension budgetControlRuleLedgerDimension;

        budgetControlRuleLedgerDimension.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            budgetControlRuleLedgerDimension.concurrencyModel(_concurrencyModel);
        }

        select firstonly budgetControlRuleLedgerDimension
            where budgetControlRuleLedgerDimension.RecId == _recId;

        return budgetControlRuleLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getActiveBudgetCycleTimeSpanRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the active <c>BudgetCycleTimeSpan</c> record ID for the specified primary ledger and budget control ledger dimension.
    /// </summary>
    /// <param name="_primaryLedgerRecId">
    ///    The record ID of the primary <c>Ledger</c> record.
    /// </param>
    /// <param name="_budgetControlLedgerDimension">
    ///    The record ID of the budget control ledger dimension record.
    /// </param>
    /// <returns>
    ///    The active <c>BudgetCycleTimeSpan</c> record ID.
    /// </returns>
    public static RecId getActiveBudgetCycleTimeSpanRecId(
        LedgerRecId _primaryLedgerRecId,
        LedgerDimensionBudgetControl _budgetControlLedgerDimension)
    {
        BudgetControlRule budgetControlRule;
        BudgetControlRuleLedgerDimension budgetControlRuleLedgerDimension;

        if (_primaryLedgerRecId && _budgetControlLedgerDimension)
        {
            select firstOnly BudgetCycleTimeSpan from budgetControlRule
                exists join budgetControlRuleLedgerDimension
                    where budgetControlRuleLedgerDimension.PrimaryLedger == _primaryLedgerRecId
                        && budgetControlRuleLedgerDimension.BudgetControlLedgerDimension == _budgetControlLedgerDimension
                        && budgetControlRuleLedgerDimension.BudgetControlRule == budgetControlRule.RecId;
        }

        return budgetControlRule.BudgetCycleTimeSpan;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetCtrl</ConfigurationKey>
	<DeveloperDocumentation>@Budget:ControlRuleLedgerDimensionDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>BudgetControlConfiguration</FormRef>
	<Label>@Budget:ControlRuleLedgerDimension</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>BudgetControlLedgerDimension</TitleField1>
	<TitleField2>BudgetControlRule</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>BudgetControlLedgerDimensionIdx</ClusteredIndex>
	<Modules>Budget</Modules>
	<ReplacementKey>BudgetControlLedgerDimensionIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrimaryLedger</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetControlLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetControlRule</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrimaryLedger</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetControlLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS35583</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BudgetControlRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetControlLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryLedger</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetControlLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionBudgetControl</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BudgetControlRule</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PrimaryLedger</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BudgetControlLedgerDimensionIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PrimaryLedger</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BudgetControlLedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BudgetControlRule</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>BudgetControlRule</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BudgetControlRule</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetControlRule_BudgetControlRuleLedgerDimension</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetControlRule</Name>
					<Field>BudgetControlRule</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DimensionAttributeValueCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueCombination</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetControlLedgerDimension_DimensionAttributeValueCombination</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BudgetControlLedgerDimension</Name>
					<Field>BudgetControlLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Ledger</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Ledger</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Ledger</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PrimaryLedger</Name>
					<Field>PrimaryLedger</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>