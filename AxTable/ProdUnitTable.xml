<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdUnitTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProdUnitTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean             ret;
        WrkCtrResourceGroup wrkCtrResourceGroup;

        ret = super();

        select firstonly wrkCtrResourceGroup
        where  wrkCtrResourceGroup.ProdUnitId           == this.ProdUnitId;

        if (wrkCtrResourceGroup)
        {
            ret = checkFailed(strfmt("@SYS112425",this.ProdUnitId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        InventSiteId                inputLocationSite;
        InventSiteId                outputLocationSite;
        WrkCtrResourceGroup         wrkCtrResourceGroup;
        boolean                     ret;

        ret = super();

        if (this.InputInventLocationId)
        {
            inputLocationSite = InventLocation::find(this.InputInventLocationId).InventSiteId;
        }

        if (this.OutputInventLocationId)
        {
            outputLocationSite = InventLocation::find(this.OutputInventLocationId).InventSiteId;
        }

        //Check that site matches
        if (ret &&
            ((inputLocationSite != this.ParentSiteId  &&  this.InputInventLocationId) ||
             (outputLocationSite != this.ParentSiteId && this.OutputInventLocationId)))
        {
            return checkFailed("@SYS104143");
        }

        //Check that site is the same on any work center connected to this production unit
        if (ret && this.RecId && this.ParentSiteId != this.orig().ParentSiteId)
        {
            select firstonly wrkCtrResourceGroup
             where wrkCtrResourceGroup.ProdUnitId           == this.ProdUnitId;

            if (wrkCtrResourceGroup)
            {
                return checkFailed(strfmt("@SYS112609",wrkCtrResourceGroup.WrkCtrId));
            }
        }

        if (ret && this.RecId)
        {
            ret = this.validateWriteInventLocationRelations();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteInventLocationRelations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the changes that were made to the input warehouse against the resource group memberships.
    /// </summary>
    /// <returns>
    /// true if the validation passes; otherwise, false.
    /// </returns>
    private boolean validateWriteInventLocationRelations()
    {
        WrkCtrResourceGroup         wrkCtrResourceGroup;
        WrkCtrResourceGroupResource wrkCtrResourceGroupResource;
        boolean                     ret = true;
        date                        validFrom                       = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        date                        validTo                         = maxdate();

        if (this.RecId && this.InputInventLocationId != this.orig().InputInventLocationId)
        {
            select firstonly validTimeState(validFrom, validTo) RecId from wrkCtrResourceGroupResource
                exists join wrkCtrResourceGroup
                where wrkCtrResourceGroupResource.ResourceGroup == wrkCtrResourceGroup.RecId
                   && wrkCtrResourceGroup.ProdUnitId            == this.ProdUnitId
                   && wrkCtrResourceGroup.InputInventLocationId == ''
                   && wrkCtrResourceGroupResource.InputInventLocationId
                   && wrkCtrResourceGroupResource.InputInventLocationId != this.InputInventLocationId;

            if (wrkCtrResourceGroupResource.RecId)
            {
                ret = checkFailed("@SYS190552");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static ProdUnitTable find(ProdUnitId  _prodUnitId,
                            boolean     _forUpdate = false)
    {
        ProdUnitTable prodUnitTable;

        prodUnitTable.selectForUpdate(_forUpdate);

        if (_prodUnitId)
        {
            select firstonly prodUnitTable
                where prodUnitTable.ProdUnitId == _prodUnitId;
        }

        return prodUnitTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static ProdUnitTable findRecId(RecId    _recId,
                                          boolean  _forUpdate = false)
    {
        ProdUnitTable prodUnitTable;

        prodUnitTable.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select firstonly prodUnitTable
                where prodUnitTable.RecId == _recId;
        }

        return prodUnitTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupBySiteId</Name>
				<Source><![CDATA[
    public static void lookupBySiteId(FormStringControl   _ctrl,
                                             InventSiteId        _siteId)
    {
        SysTableLookup       sysTableLookup = SysTableLookup::newParameters(tablenum(ProdUnitTable), _ctrl);
        Query                query = new Query();
        QueryBuildDataSource queryBuildDataSource;

        sysTableLookup.addLookupfield(fieldnum(ProdUnitTable, ProdUnitId));
        sysTableLookup.addLookupfield(fieldnum(ProdUnitTable, Name));
        sysTableLookup.addLookupfield(fieldnum(ProdUnitTable, ParentSiteId));

        queryBuildDataSource = query.addDataSource(tablenum(ProdUnitTable));
        if (_siteId)
        {
            queryBuildDataSource.addRange(fieldnum(ProdUnitTable, ParentSiteId)).value(queryValue(_siteId));
        }

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WrkCtr</ConfigurationKey>
	<DeveloperDocumentation>@SYS124261</DeveloperDocumentation>
	<Label>@SYS102974</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ProdUnitId</TitleField1>
	<TitleField2>Name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>ProdUnitIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>ProdUnitIdx</PrimaryIndex>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProdUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParentSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OutputInventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InputInventLocationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@SYS81043</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InputInventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OutputInventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParentSiteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProdUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProdUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParentSiteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OutputInventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationIdOutput</ExtendedDataType>
			<Label>@SYS133102</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InputInventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationIdInput</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdUnitName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParentSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProdUnitId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdUnitId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProdUnitIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProdUnitId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentSiteId</Name>
					<Field>ParentSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SiteIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProductionInputInventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProductionInputInventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProdUnitTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InputInventLocationId</Name>
					<SourceEDT>InventLocationIdInput</SourceEDT>
					<Field>InputInventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProductionOutputInventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ProductionOutputInventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProdUnitTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OutputInventLocationId</Name>
					<SourceEDT>InventLocationIdOutput</SourceEDT>
					<Field>OutputInventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>