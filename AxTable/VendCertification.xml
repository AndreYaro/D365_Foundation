<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendCertification</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendCertification extends Common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>hasDocuments</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets a value that represents whether there is at least one document attached to the vendor
    ///    certification record.
    /// </summary>
    /// <returns>
    ///    true if the vendor certification has documents; otherwise, false.
    /// </returns>
    display VendProfileHasDocuments hasDocuments()
    {
        return DocuRef::exist(this.DataAreaId, this.TableId, this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasExternalDocuments</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether there is at least one document attached to the vendor
    ///    certification record that is marked as external document.
    /// </summary>
    /// <returns>
    ///    true if the vendor certification has any external document; otherwise, false.
    /// </returns>
    public display NoYes hasExternalDocuments()
    {
        DocuRef docuRef;
        
        select docuRef
            where docuRef.RefCompanyId == this.DataAreaId    
                  && docuRef.RefTableId == this.TableId
                  && docuRef.RefRecId == this.RecId
                  && docuRef.Restriction == DocuRestriction::External;

        return docuRef.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean doesVendCertExist = super();
        PurchAgreementCertification purchAgreementCertification;

        if (doesVendCertExist && isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            select firstOnly RecId from purchAgreementCertification
                where purchAgreementCertification.VendCertification == this.RecId;

            if (purchAgreementCertification.RecId != 0)
            {
                doesVendCertExist = checkFailed("@SPS2328");
            }
        }

        return doesVendCertExist;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(VendCertification, ValidFromDate), fieldNum(VendCertification, ValidToDate):
                    if (this.ValidFromDate && this.ValidToDate && this.ValidFromDate > this.ValidToDate)
                    {
                        // Certificate issue date should be earlier than expiration date
                        ret =  checkFailed("@SYS189967");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <c>VendCertification</c> table that is specified by the record ID.
    /// </summary>
    /// <param name="_recId">
    /// The unique record ID to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether the <c>VendCertification</c> record is retrieved for update.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value that is used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer that contains the <c>VendCertification</c> table.
    /// </returns>
    public static VendCertification find(
        recId                   _recId ,
        boolean                 _forupdate        = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        VendCertification vendCertification;

        vendCertification.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            vendCertification.concurrencyModel(_concurrencyModel);
        }

        select firstonly vendCertification
                where vendCertification.RecId == _recId;

        return vendCertification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findVendParty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <c>VendCertification</c> record that is specified by the vendor account.
    /// </summary>
    /// <param name="_vendParty">
    /// The party number of the vendor to find.
    /// </param>
    /// <param name="_recId">
    /// The Record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether the <c>VendCertification</c> record is retrieved for update;
    /// optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// A <c>ConcurrencyModel</c> value that is used when the table is not automatically concurrent;
    /// optional.
    /// </param>
    /// <returns>
    /// A <c>VendCertification</c> table buffer.
    /// </returns>
    public static VendCertification findVendParty(
        DirPartyRecId       _vendParty,
        RecId               _recId,
        boolean             _forupdate        = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        VendCertification vendCertification;

        vendCertification.selectForUpdate(_forupdate);

        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            vendCertification.concurrencyModel(_concurrencyModel);
        }

        select firstOnly vendCertification
            where vendCertification.VendParty == _vendParty
               && vendCertification.RecId == _recId;

        return vendCertification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefVendCertification</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the <c>VendCertification</c> form.
    /// </summary>
    /// <param name="_common">
    /// A <c>Common</c> table buffer.
    /// </param>
    /// <param name="_object">
    /// An instance of the caller.
    /// </param>
    /// <param name="_parm">
    /// The parameters passed.
    /// </param>
    static void jumpRefVendCertification(
        Common  _common,
        Object  _object,
        str     _parm = '')
    {
        Args            args;
        MenuFunction    menuFunction;

        menuFunction = new MenuFunction(menuitemDisplayStr(VendCertification), MenuItemType::Display);

        args = new Args(formStr(VendCertification));
        args.record(_common);
        args.caller(_object);
        args.parm(_parm);

        menuFunction.run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupVendor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Filters the Vendor lookup on the <c>PurchAgreementCertification</c> table.
    /// </summary>
    /// <param name="_formReferenceCtrl">
    /// An instance of the <c>FormReferenceControl</c> class.
    /// </param>
    /// <param name="_vendAccount">
    /// The vendor account number of the purchase agreement certification record.
    /// </param>
    /// <returns>
    /// An instance of the <c>VendCertification</c> table buffer.
    /// </returns>
    public static Common lookupVendor(
        FormReferenceControl    _formReferenceCtrl,
        AccountNum              _vendAccount)
    {
        SysReferenceTableLookup sysReferenceTableLookup = SysReferenceTableLookup::newParameters(tableNum(VendCertification), _formReferenceCtrl, true);
        Query query = new Query();
        QueryBuildDataSource qbdsVendCertification;

        qbdsVendCertification = query.addDataSource(tableNum(VendCertification));
        qbdsVendCertification.addRange(fieldNum(VendCertification, VendParty)).value(SysQuery::value(DirPartyTable::findRec(VendTable::find(_vendAccount).Party).RecId));

        sysReferenceTableLookup.addLookupfield(fieldNum(VendCertification, CertificationType));
        sysReferenceTableLookup.addLookupfield(fieldNum(VendCertification, CertificationNumber));
        sysReferenceTableLookup.addLookupfield(fieldNum(VendCertification, VendParty));
        sysReferenceTableLookup.addLookupfield(fieldNum(VendCertification, IssuerParty));

        sysReferenceTableLookup.parmQuery(query);

        return sysReferenceTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS325866</DeveloperDocumentation>
	<Label>@SYS184346</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>CertificationType</TitleField1>
	<TitleField2>CertificationNumber</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Vendor</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendParty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IssuerParty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CertificationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CertificationNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CertIdentification</Name>
			<Label>@SYS189980</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CertificationNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Certification</Name>
			<Label>@SYS189980</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CertificationDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CertificationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CertificateReceived</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CertificationNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CertificationDuration</Name>
			<Label>@SYS52550</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CertificationNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DueDate_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comments_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InProcess_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LiabilityAmount_PSN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CertificationType</Name>
			<Label>@SYS184339</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CertificationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Issuer</Name>
			<Label>@SYS184345</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IssuerParty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Vendor</Name>
			<Label>@SYS8079</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendParty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>VendProfileCertificationDetails</Name>
			<Label>@SYS315078</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CertificationNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IssuerParty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CertificationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CertificateReceived</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCertificateReceived</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CertificationDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCertificationDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CertificationNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCertificationNumber</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CertificationType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCertificationType</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Comments_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PublicSector</ConfigurationKey>
			<ExtendedDataType>Description</ExtendedDataType>
			<Label>@SYS86880</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DueDate_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PublicSector</ConfigurationKey>
			<ExtendedDataType>DueDate</ExtendedDataType>
			<Label>@SYS106681</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InProcess_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PublicSector</ConfigurationKey>
			<Label>@SYS80147</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>IssuerParty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendCertificationIssuer</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LiabilityAmount_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PublicSector</ConfigurationKey>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SPS1367</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidFromDate</ExtendedDataType>
			<Label>@SYS8280</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidToDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ValidToDate</ExtendedDataType>
			<Label>@SYS123252</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendParty</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DirPartyRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CertificationOrigin</Name>
			<FeatureClass>VendorCertificationManagementFeature</FeatureClass>
			<EnumType>CertificationOrigin</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Reviewed</Name>
			<EnumType>CertificationReviewed</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendPartyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendParty</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>IssuerTdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>IssuerParty</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>IssuerParty</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DirPartyTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>IssuerParty</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>VendCertification</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>IssuerParty</Name>
					<Field>IssuerParty</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendCertification</Name>
			<RelatedTable>VendCertification</RelatedTable>
			<RelatedTableRole>VendCertification</RelatedTableRole>
			<RelationshipType>Link</RelationshipType>
			<Role>VendCertification_VendCertification</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendCertificationType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>VendCertType</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendCertificationType</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendCertification</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CertificationType</Name>
					<Field>CertificationType</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NameIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendorParty</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendorParty</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>VendCertification</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendParty</Name>
					<Field>VendParty</Field>
					<RelatedField>Party</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Party</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>