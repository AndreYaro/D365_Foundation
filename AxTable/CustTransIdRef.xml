<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustTransIdRef</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustTransIdRef extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>CustTransIdRef</c> table exists.
    /// </summary>
    /// <param name="_transRecId">
    ///    The <c>CustTrans</c> table record ID of the record to find.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(CustTransRefRecId _transRecId)
    {
        boolean isValid = true;

        if (!CustTransIdRef::exist(_transRecId))
        {
            isValid = checkFailed(strFmt(CustTransIdRef::txtNotExist(), _transRecId));
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>CustTransIdRef</c> table exists.
    /// </summary>
    /// <param name="_transRecId">
    ///    The <c>CustTrans</c> table record ID of the record to find.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(CustTransRefRecId _transRecId)
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     custTransIdRef
                 where
                     custTransIdRef.TransRecId == _transRecId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>CustTransIdRef</c> table.
    /// </summary>
    /// <param name="_transRecId">
    ///    The <c>CustTrans</c> table record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>CustTransIdRef</c> table; otherwise, an empty record.
    /// </returns>
    public static CustTransIdRef find(
        CustTransRefRecId _transRecId,
        boolean _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustTransIdRef custTransIdRef;

        custTransIdRef.selectForUpdate(_forUpdate);

        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custTransIdRef.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            custTransIdRef
        where
            custTransIdRef.TransRecId == _transRecId;

        return custTransIdRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertForCustTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts a record in the <c>CustTransRefId</c> table that corresponds to the specified instance of
    ///    the <c>CustTrans</c> table.
    /// </summary>
    /// <param name="_owningCustTrans">
    ///    The instance of the <c>CustTrans</c> table that will own the inserted record.
    /// </param>
    /// <param name="_transId">
    ///    The reference ID of the new record.
    /// </param>
    /// <param name="_transType">
    ///    The reference type of the new record.
    /// </param>
    public static void insertForCustTrans(CustTrans _owningCustTrans, Num _transId, CustTransRefType _transType)
    {
        CustTransIdRef association;

        Debug::assert(_owningCustTrans.RecId != 0);
        Debug::assert(_transId != '');

        association.TransRefType = _transType;
        association.TransRefId = _transId;
        association.TransRecId = _owningCustTrans.RecId;
        association.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the message to use when a specific record in the <c>CustTransIdRef</c> table does not exist.
    /// </summary>
    /// <returns>
    ///    The message that states that a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        return "@SYS108796";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS125134</DeveloperDocumentation>
	<Label>@SYS108579</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>TransRefId</TitleField1>
	<TitleField2>TransRefType</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>TransRefIdTransRefTypeRefRecIdIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>TransRecIdIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransRefType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransRefType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TransRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustTransRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransRefId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Num</ExtendedDataType>
			<Label>@SYS107394</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransRefType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CustTransRefType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TransRefIdTransRefTypeRefRecIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TransRefId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransRefType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TransRecIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TransRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<EntityRelationshipRole>@SYS125086</EntityRelationshipRole>
			<RelatedTable>CustTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CustTrans</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>CustTransIdRef</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransRecId</Name>
					<SourceEDT>CustTransRefRecId</SourceEDT>
					<Field>TransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>