<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchParmSubTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchParmSubTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkMarkupTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates a <c>MarkupTrans</c> record that is associated with the current <c>PurchParmSubTable</c>
    ///    record for selection or posting.
    /// </summary>
    /// <returns>
    ///    true if no errors were detected; otherwise, false.
    /// </returns>
    boolean checkMarkupTrans()
    {
        return MarkupTrans::checkMarkupTransOnHeader(this.TableId, this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if associated <see cref="T:MarkupTrans" /> records may be added, changed, or deleted.
    /// </summary>
    /// <returns>
    /// true if modifications are allowed; otherwise, false.
    /// </returns>
    public boolean markupAllowed()
    {
        PurchTable purchTable = this.purchTable();
        return !purchTable.isInterCompanyOrder();
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchParmTable</Name>
				<Source><![CDATA[
    PurchParmTable  purchParmTable(boolean  update = false)
    {
        return PurchParmTable::find(this.ParmId, this.TableRefId, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchTable</Name>
				<Source><![CDATA[
    PurchTable  purchTable(boolean  update = false)
    {
        return PurchTable::find(this.OrigPurchId, update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromPurchParmTable</Name>
				<Source><![CDATA[
    static PurchParmSubTable createFromPurchParmTable(PurchParmTable _purchParmTable, boolean _insert = true)
    {
        PurchParmSubTable purchParmSubTable = VendDocumentSubTableMap::createFromHeader(_purchParmTable, false);

        if (_purchParmTable.Ordering == DocumentStatus::PackingSlip)
        {
            AccountingEvent localAccountingEvent = AccountingEvent::getLastEvent(PurchTable::find(purchParmSubTable.OrigPurchId).SourceDocumentHeader);
            purchParmSubTable.SourceAccountingEvent = localAccountingEvent.RecId;
        }

        if (_insert)
        {
            purchParmSubTable.insert();
        }
        
        return purchParmSubTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteIfNoParmLines</Name>
				<Source><![CDATA[
    public static void deleteIfNoParmLines(PurchId origPurchId, ParmId parmId)
    {
        PurchParmLine       purchParmLine;
        PurchParmSubTable   purchParmSubTable;

        select firstonly purchParmLine
            where purchParmLine.OrigPurchId == origPurchId &&
                  purchParmLine.ParmId      == parmId;

        if ( !purchParmLine)
        {
            ttsbegin;
            delete_from purchParmSubTable where
                purchParmSubTable.ParmId == parmId &&
                purchParmSubTable.OrigPurchId == origPurchId;
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean  exist(ParmId            parmId,
                          TradeLineRefId    tableRefId,
                          PurchId           origPurchId)
    {
        if (parmId  &&  tableRefId && origPurchId)
        {
            return (select firstonly RecId from purchParmSubTable
                        where purchParmSubTable.ParmId      == parmId
                           && purchParmSubTable.TableRefId  == tableRefId
                           && purchParmSubTable.OrigPurchId == origPurchId
                   ).RecId != 0;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static PurchParmSubTable find(ParmId            parmId,
                                  TradeLineRefId    tableRefId,
                                  PurchId           origPurchId,
                                  boolean          _forUpdate = false)
    {
        PurchParmSubTable  purchParmSubTable;

        if (parmId && tableRefId && origPurchId)
        {
            if (_forUpdate)
            {
                purchParmSubTable.selectForUpdate(_forUpdate);
            }

            select firstonly purchParmSubTable
                where purchParmSubTable.ParmId          == parmId
                   && purchParmSubTable.TableRefId      == tableRefId
                   && purchParmSubTable.OrigPurchId     == origPurchId;
        }

        return purchParmSubTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Locates a <c>PurchParmSubTable</c> record using its record identifier.
    /// </summary>
    /// <param name="_recId">
    ///    A record identifier.
    /// </param>
    /// <param name="_update">
    ///    A Boolean value that specifies whether the record can be updated; optional.
    /// </param>
    /// <returns>
    ///    A <c>PurchParmSubTable</c> record.
    /// </returns>
    public static PurchParmSubTable findRecId(RefRecId _recId, boolean _update = false)
    {
        PurchParmSubTable purchParmSubTable;
        if (_recId)
        {
            purchParmSubTable.selectForUpdate(_update);

            select firstonly purchParmSubTable
                where purchParmSubTable.RecId == _recId;
        }
        return purchParmSubTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupParmId</Name>
				<Source><![CDATA[
    static void  lookupParmId(FormStringControl  _ctrl,
                                     ParmId             _parmId)
    {
        Args    args;
        Object  formRun;
        PurchParmUpdate purchParmUpdate;

        args = new Args();

        purchParmUpdate = PurchParmUpdate::find(_parmId);

        args.name(formstr(PurchParmIdLookup));

        args.caller(_ctrl);
        args.lookupField(fieldnum(PurchParmSubTable, OrigPurchId));
        args.lookupValue(_ctrl.text());

        formRun = classfactory.formRunClass(args);
        formRun.parmId(_parmId);

        formRun.init();

        _ctrl.performFormLookup(formRun);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124541</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS69983</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>OrigPurchId</TitleField1>
	<TitleField2>PurchName</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ParmTableRefIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>ParmTableRefIdx</PrimaryIndex>
	<ReplacementKey>ParmTableRefIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>MarkupTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>MarkupTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>PurchParmLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>PurchParmLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrigPurchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>createdBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TableRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigPurchId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TableRefId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrigPurchId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchaseTable</Name>
			<Label>@SYS1653</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS15217</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParmId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrigPurchId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchIdOrig</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParmId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>PurchName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TableRefId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TradeLineRefId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceAccountingEvent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AccountingEventRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ParmTableRefIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TableRefId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OrigPurchId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OrigPurchIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OrigPurchId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>VendDocumentSubTableMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>PurchName</MapField>
					<MapFieldTo>PurchName</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ParmId</MapField>
					<MapFieldTo>ParmId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OrigPurchId</MapField>
					<MapFieldTo>OrigPurchId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TableRefId</MapField>
					<MapFieldTo>TableRefId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>PurchParmTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchParmTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParmId</Name>
					<Field>ParmId</Field>
					<RelatedField>ParmId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TableRefId</Name>
					<Field>TableRefId</Field>
					<RelatedField>TableRefId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrigPurchId</Name>
					<Field>OrigPurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AccountingEvent</Name>
			<RelatedTable>AccountingEvent</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceAccountingEvent</Name>
					<Field>SourceAccountingEvent</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>