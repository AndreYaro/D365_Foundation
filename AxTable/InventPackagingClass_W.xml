<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventPackagingClass_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventPackagingClass_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the <c>InventPackagingClass_W</c> table exists.
    /// </summary>
    /// <param name="_itemPackagingClassId">
    /// The packaging class identifier.
    /// </param>
    /// <returns>
    /// True if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(ItemPackagingClassId_W _itemPackagingClassId)
    {
        InventPackagingClass_W inventPackagingClass;

        select firstonly RecId from inventPackagingClass
            where inventPackagingClass.PackagingClassId == _itemPackagingClassId;

        return inventPackagingClass.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>InventPackagingClass_W</c> table
    /// </summary>
    /// <param name="_itemPackagingClassId">
    /// The packaging class identifier.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when it reads the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>InventPackagingClass_W</c> table; otherwise, an empty record.
    /// </returns>
    public static InventPackagingClass_W find(
        ItemPackagingClassId_W  _itemPackagingClassId,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        InventPackagingClass_W inventPackagingClass;

        inventPackagingClass.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            inventPackagingClass.concurrencyModel(_concurrencyModel);
        }

        select firstonly inventPackagingClass
            where inventPackagingClass.PackagingClassId == _itemPackagingClassId;

        return inventPackagingClass;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventPackaging</ConfigurationKey>
	<CountryRegionCodes>AT</CountryRegionCodes>
	<DeveloperDocumentation>@PackingMaterial:InventPackagingClassDoc</DeveloperDocumentation>
	<FormRef>InventPackagingClass_W</FormRef>
	<Label>@PackingMaterial:InventPackingClasses</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>PackagingClassId</TitleField1>
	<TitleField2>Name</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>PackagingClassIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>InventPackagingMaterialTrans</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>InventPackagingClass_W</Relation>
			<Table>InventPackagingMaterialTrans</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>InventPackagingMaterialTransPurch</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>InventPackagingClass_W</Relation>
			<Table>InventPackagingMaterialTransPurch</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>InventPackagingUnitMaterial</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>InventPackagingClass_W</Relation>
			<Table>InventPackagingUnitMaterial</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>InventPackagingTariffCatAlloc_W</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>InventPackagingClass_W</Relation>
			<Table>InventPackagingTariffCatAlloc_W</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>InventPackagingTransDetails_W</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation>InventPackagingClass_W</Relation>
			<Table>InventPackagingTransDetails_W</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PackagingClassId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PackagingClassId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackagingClassId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemPackagingClassId_W</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PackagingClassIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PackagingClassId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>