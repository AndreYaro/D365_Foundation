<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KanbanJobQualityMeasure</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class KanbanJobQualityMeasure extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>KanbanJobQualityMeasure</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the kanban job quality measure table to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        return    _recId
               && (select firstonly kanbanJobQualityMeasure
                       where kanbanJobQualityMeasure.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>KanbanJobQualityMeasure</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the kanban job quality measure table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>KanbanJobQualityMeasure</c> table; otherwise, an empty record.
    /// </returns>
    public static KanbanJobQualityMeasure find(RecId _recId, boolean _forUpdate = false)
    {
        KanbanJobQualityMeasure kanbanJobQualityMeasure;

        kanbanJobQualityMeasure.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select firstonly kanbanJobQualityMeasure
                where kanbanJobQualityMeasure.RecId == _recId;
        }

        return kanbanJobQualityMeasure;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findJob</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>KanbanJobQualityMeasure</c> table.
    /// </summary>
    /// <param name="_job">
    /// The job to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>KanbanJobQualityMeasure</c> table; otherwise, an empty record.
    /// </returns>
    public static KanbanJobQualityMeasure findJob(RefRecId _job, boolean _forUpdate = false)
    {
        KanbanJobQualityMeasure kanbanJobQualityMeasure;

        if (_job)
        {
            kanbanJobQualityMeasure.selectForUpdate(_forUpdate);

            select firstonly kanbanJobQualityMeasure
                where kanbanJobQualityMeasure.Job == _job;
        }

        return kanbanJobQualityMeasure;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQualityMeasure</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts or updates a <c>KanbanQualityMeasure</c> record for a specified kanban job.
    /// </summary>
    /// <param name="_kanbanJob">
    ///    The kanban job.
    /// </param>
    /// <param name="_firstTimeThrough">
    ///    The quality measure.
    /// </param>
    /// <returns>
    ///    The inserted or updated <c>KanbanQualityMeasure</c> record.
    /// </returns>
    public static KanbanJobQualityMeasure setQualityMeasure(KanbanJob _kanbanJob,
                                                            KanbanJobFirstTimeThrough _firstTimeThrough)
    {
        KanbanJobQualityMeasure kanbanJobQualityMeasure;

        if (!_kanbanJob.RecId)
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        ttsbegin;
        kanbanJobQualityMeasure                  = KanbanJobQualityMeasure::findJob(_kanbanJob.RecId,true);
        kanbanJobQualityMeasure.Job              = _kanbanJob.RecId;
        kanbanJobQualityMeasure.FirstTimeThrough = _firstTimeThrough;
        kanbanJobQualityMeasure.write();
        ttscommit;

        return kanbanJobQualityMeasure;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS131653</DeveloperDocumentation>
	<Label>@SYS131651</Label>
	<SingularLabel>@SYS131652</SingularLabel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>Job</TitleField1>
	<TitleField2>FirstTimeThrough</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>ProductionControl</Modules>
	<ReplacementKey>JobIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Job</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FirstTimeThrough</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Job</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Job</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Quality</Name>
			<Label>@SYS73185</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FirstTimeThrough</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FirstTimeThrough</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanJobFirstTimeThrough</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Job</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS131642</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JobIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Job</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>KanbanJob</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>KanbanJob</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>KanbanJob</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>KanbanJobQualityMeasure</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Job</Name>
					<Field>Job</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>