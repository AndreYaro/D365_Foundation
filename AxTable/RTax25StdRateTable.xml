<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTax25StdRateTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RTax25StdRateTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldId)
    {
        boolean ret = super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RTax25StdRateTable, CriterionMode) :
                if (this.CriterionMode == RTax25StdRateCritMode::FullAmounts &&
                    RTax25StdRateCritTrans::exist(this.RecId))
                    ret = checkFailed("@GLS105771");
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean checkExist(RefRecId _rateTableRecId)
    {
        if (! RTax25StdRateTable::exist(_rateTableRecId))
            return checkFailed(strFmt(RTax25StdRateTable::txtNotExist(), RTax25StdRateTable::find(_rateTableRecId).RateId));

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(RefRecId _rateTableRecId)
    {
        return _rateTableRecId && (select firstonly RecId from rTax25StdRateTable
                                        where rTax25StdRateTable.RecId == _rateTableRecId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the RTax25StdRateTable table for the specified record id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forupdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing <c>RTax25StdRateTable</c> table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25StdRateTable find(
        RecId             _recId,
        boolean           _forupdate = false,
        ConcurrencyModel  _concurrencyModel = ConcurrencyModel::Auto)
    {
        RTax25StdRateTable rTax25StdRateTable;

        rTax25StdRateTable.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            rTax25StdRateTable.concurrencyModel(_concurrencyModel);
        }

        select firstonly rTax25StdRateTable
            where rTax25StdRateTable.RecId == _recId;

        return rTax25StdRateTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRateId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the RTax25StdRateTable table for the specified rate code.
    /// </summary>
    /// <param name="_rateId">
    /// The unique rate code to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <returns>
    /// A buffer containing <c>RTax25StdRateTable</c> table.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25StdRateTable findByRateId(
        RTax25StdRateId _rateId,
        boolean         _forUpdate = false)
    {
        RTax25StdRateTable  rateTable;

        rateTable.selectForUpdate(_forUpdate);

        if (_rateId)
        {
            select firstonly rateTable
                index hint RateIdx
                where rateTable.RateId == _rateId;
        }

        return rateTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findValue</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25StdRateValue findValue(
        RefRecId  _rateTableRecId,
        TransDate _rateDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
        AmountMST _critAmount = 0.0)
    {
        RTax25StdRateTable  rateTable = RTax25StdRateTable::find(_rateTableRecId);
        RTax25StdRateTrans  rateTrans = RTax25StdRateTrans::find(_rateTableRecId, _rateDate);

        if (rateTable.CriterionMode == RTax25StdRateCritMode::Interval)
        {
            return RTax25StdRateCritTrans::find(rateTrans, _critAmount).Value;
        }
        else
        {
            return  rateTrans.Value;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TxtNotExist txtNotExist()
    {
        return "@GLS104307";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>RTax25StdRateTable</FormRef>
	<Label>@GLS104252</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>RateId</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>RTax25</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>RateIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RTax25StdRateTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RTax25StdRateTrans</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RateId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Criteria</Name>
			<Label>@GLS105362</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CriterionMode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RateId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CriterionMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RTax25StdRateCritMode</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RateId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RTax25StdRateId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RateId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>