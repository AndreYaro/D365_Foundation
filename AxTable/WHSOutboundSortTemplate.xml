<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSOutboundSortTemplate</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSOutboundSortTemplate extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static WHSOutboundSortTemplate find(
        WHSOutboundSortTemplateId   _sortTemplateId,
        boolean                     _forupdate = false)
    {
        WHSOutboundSortTemplate sortTemplate;
    
        if (_sortTemplateId)
        {
            sortTemplate.selectForUpdate(_forUpdate);
    
            select firstOnly sortTemplate
                where sortTemplate.SortTemplateId == _sortTemplateId;
        }
    
        return sortTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasSorting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks to see if query tied to sort template record has sort by fields.
    /// </summary>
    /// <returns>
    /// True if sort template has sorting; otherwise false.
    /// </returns>
    public boolean hasSorting()
    {
        return WHSOutboundSortTemplateGroup::existForSortTemplateId(this.SortTemplateId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        QueryRun queryRun = this.defaultPackedQueryRun();

        if (queryRun)
        {
            this.PackedQueryRun = queryRun.pack();
        }

        this.setWarehouseSelection();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultPackedQueryRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the default query run.
    /// </summary>
    /// <returns>The default query run.</returns>
    public QueryRun defaultPackedQueryRun()
    {
        switch (this.SortTemplateType)
        {
            case WHSOutboundSortTemplateType::Container:
                return new queryRun(queryStr(WHSOutboundSortTemplateContainer));

            case WHSOutboundSortTemplateType::WaveDemand:
                return new QueryRun(queryStr(WHSOutboundSortTemplateWaveDemand));
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(WHSOutboundSortTemplate, WMSLocationId):
                if (this.WarehouseGroupAll == WhsWarehouseGroupAll::Warehouse)
                {
                    ret = ret && WMSLocation::find(this.WMSLocationId, this.InventLocationId).checkSortLocation();
                }
				break;

            case fieldNum(WHSOutboundSortTemplate, WaveStepCode):
				if (this.WaveStepCode) // the wave step code can always be blank
                {
                    ret = ret && WHSWaveStepCodeTable::isWaveStepCodeValueUpdateValid(this.WaveStepCode, this.tableId);
                }
                break;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWarehouseSelection</Name>
				<Source><![CDATA[
    private void setWarehouseSelection()
    {
        switch(this.WarehouseGroupAll)
        {
            case WhsWarehouseGroupAll::All:
                this.InventLocationId = '';
                this.WarehouseGroupId = '';
                this.WMSLocationId = '';
                break;

            case WhsWarehouseGroupAll::Group:
                this.InventLocationId = '';
                this.WMSLocationId = '';
                break;

            case WhsWarehouseGroupAll::Warehouse:
                this.WarehouseGroupId = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.setWarehouseSelection();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
        this.WarehouseGroupAll = WhsWarehouseGroupAll::All;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();
    
        return ret && this.validateWarehouseGroupAll();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWarehouseGroupAll</Name>
				<Source><![CDATA[
    private boolean validateWarehouseGroupAll()
    {
        switch (this.WarehouseGroupAll)
        {
            case WhsWarehouseGroupAll::Warehouse:
                if (!this.InventLocationId || !this.WMSLocationId)
                {
                    return checkFailed("@WAX:OutboundSortTemplateMissingWarehouseOrLocation");
                }
                break;

            case WhsWarehouseGroupAll::Group:
                if (!this.WarehouseGroupId)
                {
                    return checkFailed("@WAX:OutboundSortTemplateMissingWarehouseGroup");
                }
                break;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultSortingLocationId</Name>
				<Source><![CDATA[
    public WMSLocationId defaultSortingLocationId(InventLocationId _warehouseId)
    {
        switch (this.WarehouseGroupAll)
        {
            case WhsWarehouseGroupAll::Warehouse:
                return this.WMSLocationId;

            case WhsWarehouseGroupAll::Group:
            case WhsWarehouseGroupAll::All:
                InventLocation warehouse = InventLocation::find(_warehouseId);

                if (warehouse.DefaultSortingLocation)
                {
                    return warehouse.DefaultSortingLocation;
                }

                WHSParameters whsParameters = WHSParameters::find();

                return WMSLocation::findFirstByWarehouseAndLocationProfileType(warehouse.InventLocationId, whsParameters.SortingLocationType).wMSLocationId;
        }

        return '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WHSOutboundSortTemplateDevDocumentation</DeveloperDocumentation>
	<FormRef>WHSOutboundSortTemplate</FormRef>
	<Label>@WAX:WHSOutboundSortTemplateLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Main</TableGroup>
	<TitleField1>SortTemplateId</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>SortTemplateIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<PrimaryIndex>SortTemplateIdx</PrimaryIndex>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CreateWorkOnPositionClose</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SortPositionAssignment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackedQueryRun</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SortTemplateType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SortTemplateId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreateWorkOnPositionClose</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSCreateWorkOnPositionClose</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SortPositionAssignment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSOutboundSortPositionAssignment</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WMSLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PackedQueryRun</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PackedQueryRun</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SortTemplateType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>WHSOutboundSortTemplateType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SortTemplateId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSOutboundSortTemplateId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SortVerification</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSOutboundSortVerification</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssignSortPositionCriteria</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSAssignSortPositionCriteria</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaveStepCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveStepCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoCloseSortPosition</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSAutoCloseSortPosition</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumberOfSortPositions</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSNumberOfSortPositions</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SortPositionPrefix</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSSortPositionPrefix</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoPackSortPosition</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSAutoPackSortPosition</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PackProfileId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPackProfileId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WarehouseGroupAll</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WhsWarehouseGroupAll</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WarehouseGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WhsWarehouseGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SortTemplateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SortTemplateId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>InventLocationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SortTemplateType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WaveStepCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WarehouseGroupId</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WarehouseGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Location</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WMSLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WMSLocationId</Name>
					<Field>WMSLocationId</Field>
					<RelatedField>wMSLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<Field>InventLocationId</Field>
					<RelatedField>inventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSPackProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSPackProfile</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PackProfileId</Name>
					<Field>PackProfileId</Field>
					<RelatedField>PackProfileId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WhsWarehouseGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WhsWarehouseGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WarehouseGroupId</Name>
					<Field>WarehouseGroupId</Field>
					<RelatedField>WarehouseGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>