<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatDisplayCategorySharedInfo</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatDisplayCategorySharedInfo extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cloneAndInsert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new <c>CatDisplayCategorySharedInfo</c> record by duplicating this record and
    /// all the associated customizations.
    /// </summary>
    /// <param  name='_displayCategoryUpdateType'>
    /// The update type of the <c>CatDisplayCategoryTable</c> record a <c>CatDisplayCategorySharedInfo</c> record is created for.
    /// </param>
    /// <param  name='_categoryRecId'>
    /// The <c>RecId</c> to use for the cloned record's <c>Category</c> field.
    /// </param>
    /// <returns>
    /// The duplicated instance of the <c>CatDisplayCategorySharedInfo</c> data type.
    /// </returns>
    public CatDisplayCategorySharedInfo cloneAndInsert(UpdateType _displayCategoryUpdateType, RecId _categoryRecId)
    {
        CatDisplayCategorySharedInfo tblSharedDataDup;
        CatDisplayProductCategory tblDPCorig, tblDPCdup;
        CatDisplayVendorCategory tblDVCorig, tblDVCdup;
        CatDisplayExternalCatalogCategory tblDECCorig, tblDECCdup;
        CatDisplayCategoryPriceRange tblDCPRorig, tblDCPRdup;
        CatDisplayCategoryFilterableAttribute tblDCFAorig, tblDCFAdup;

        // clone and insert CatDisplayCategorySharedInfo record
        tblSharedDataDup = this.cloneRecord(_displayCategoryUpdateType, _categoryRecId);
        tblSharedDataDup.insert();

        // clone product customizations - added|hidden products
        while select * from tblDPCorig
            where tblDPCorig.SharedData == this.RecId
                // do NOT filter on tblDPCorig.Origin since we want to process both ManuallyAdded and ManuallyHidden
        {
            Debug::assert(tblDPCorig.Origin != CatDisplayOrigin::ProcurementCategory);
            tblDPCdup = tblDPCorig.cloneRecord(tblSharedDataDup);
            tblDPCdup.insert();
        }

        // clone vendor customizations - added|hidden vendors
        while select * from tblDVCorig
            where tblDVCorig.SharedData == this.RecId
                // do NOT filter on tblDVCorig.Origin since we want to process both ManuallyAdded and ManuallyHidden
        {
            Debug::assert(tblDVCorig.Origin != CatDisplayOrigin::ProcurementCategory);
            tblDVCdup = tblDVCorig.cloneRecord(tblSharedDataDup);
            tblDVCdup.insert();
        }

        // clone external catalog customizations - added|hidden external catalogs
        while select * from tblDECCorig
            where tblDECCorig.SharedData == this.RecId
                // do NOT filter on tblDECCorig.Origin since we want to process both ManuallyAdded and ManuallyHidden
        {
            Debug::assert(tblDECCorig.Origin != CatDisplayOrigin::ProcurementCategory);
            tblDECCdup = tblDECCorig.cloneRecord(tblSharedDataDup);
            tblDECCdup.insert();
        }

        // clone category price range customizations
        while select * from tblDCPRorig
            where tblDCPRorig.SharedData == this.RecId
        {
            tblDCPRdup = tblDCPRorig.cloneRecord(tblSharedDataDup);
            tblDCPRdup.insert();
        }

        // clone category filterable attribute customizations
        while select * from tblDCFAorig
            where tblDCFAorig.SharedData == this.RecId
        {
            tblDCFAdup = tblDCFAorig.cloneAndInsert(tblSharedDataDup);
        }

        return tblSharedDataDup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cloneRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new record of the <c>CatDisplayCategorySharedInfo</c> table by duplicating this record.
    /// </summary>
    /// <param  name='_displayCategoryUpdateType'>
    /// The update type of the <c>CatDisplayCategoryTable</c> record a <c>CatDisplayCategorySharedInfo</c> record is created for.
    /// </param>
    /// <param  name='_categoryRecId'>
    /// The <c>RecId</c> to use for the cloned record's <c>Category</c> field.
    /// </param>
    /// <returns>
    /// The cloned instance of the <c>CatDisplayCategorySharedInfo</c> data type.
    /// </returns>
    /// <remarks>
    /// The cloned record is not inserted into the database.
    /// </remarks>
    public CatDisplayCategorySharedInfo cloneRecord(UpdateType _displayCategoryUpdateType, RecId _categoryRecId)
    {
        CatDisplayCategorySharedInfo tblSharedDataDup;
        EcoResCategory tblERCategory;

        if (_categoryRecId)
        {
            tblERCategory = EcoResCategory::find(_categoryRecId);
        }

        tblSharedDataDup.clear();
        tblSharedDataDup.initValue();
        tblSharedDataDup.initMore(_displayCategoryUpdateType, tblERCategory);
        tblSharedDataDup.Origin = this.Origin;
        tblSharedDataDup.SearchText = this.SearchText;
        tblSharedDataDup.WelcomeText = this.WelcomeText;

        return tblSharedDataDup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
        public void delete()
    {
        CatDisplayCategoryTable     catDisplayCategoryTable;

        // find THE (only) CatDisplayCategoryTable pointing to this SD record
        // call theDC.delete, which takes care of deleting
        //  - whole subtree tree rooted at theDC
        //  - any DC that is alias of someone under the subtree
        //  - all SD records
        select forupdate * from catDisplayCategoryTable
            where catDisplayCategoryTable.SharedData == this.RecId
                && catDisplayCategoryTable.TargetCategory == 0 // non-alias
        ;
        if (catDisplayCategoryTable.RecId)
        {
            catDisplayCategoryTable.delete();
        }

        // don't call super - this one should have been deleted already above inside theDC.delete
        //super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMore</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes value for the fields the <c>initValue</c> method cannot handle because additional input is needed.
    /// </summary>
    /// <param  name='_updateType'>
    /// The update type of the navigation category node this record is for.
    /// </param>
    /// <param  name='_erCategory'>
    /// The <c>EcoResCategory</c> this record points to, which could be null.
    /// </param>
    /// <remarks>
    /// The fields initialized include <c>LastSyncTime</c>, <c>Category</c>, <c>SearchText</c>.
    /// </remarks>
    public void initMore(UpdateType _updateType, EcoResCategory _erCategory)
    {
        this.setLastSyncTime(_updateType);
        this.Category = _erCategory.RecId;
        if (_erCategory.RecId)
        {
            this.SearchText = EcoResCategoryTranslation::find(_erCategory.RecId, LanguageTable::defaultLanguage()).SearchText;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
        public void initValue()
    {
        super();

        // This column is used ONLY when products are from ProcurementCategory; hence the value
        // The value shall always be CatDisplayOrigin::ProcurementCategory
        //  - so that CatDisplayProductAll can just use the Origin field without the need for a display method to calculate origin.
        this.Origin = CatDisplayOrigin::ProcurementCategory;
        // by default, new nodes will have the "order from category" link shown
        this.IsCustomOrderShown = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        public void insert()
    {
        ttsBegin;
        super();
        CatDisplaySharedDataTranslation::createCatDisplaySharedDataTranslation(this.RecId, SysTranslationHelper::getPrimaryLanguage());
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLastSyncTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value for the <c>LastSyncTime</c> field based on the <paramref>_updateType</paramref> of the navigation category node.
    /// </summary>
    /// <param  name='_updateType'>
    /// The update type of the navigation category node this record is for.
    /// </param>
    public void setLastSyncTime(UpdateType _updateType)
    {
        if (UpdateType::Dynamic == _updateType)
        {
            this.LastSyncTime = DateTimeUtil::maxValue();
        }
        else
        {
            this.LastSyncTime = DateTimeUtil::utcNow();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record that matches the given <c>RecId</c>.
    /// </summary>
    /// <param  name='_recId'>
    /// An instance of the <c>RecId</c> data type.
    /// </param>
    /// <param  name='_forUpdate'>
    /// An instance of the boolean data type.
    /// </param>
    /// <returns>
    /// An instance of the <c>CatDisplayCategorySharedInfo</c> data type.
    /// </returns>
    public static CatDisplayCategorySharedInfo findByRecId(RecId _recId,
        boolean _forUpdate = false )
    {
        CatDisplayCategorySharedInfo catDisplayCategorySharedInfo;

        catDisplayCategorySharedInfo.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select catDisplayCategorySharedInfo
                where catDisplayCategorySharedInfo.RecId == _recId;
        }

        return catDisplayCategorySharedInfo;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcCatalog</ConfigurationKey>
	<DeveloperDocumentation>@SYS130974</DeveloperDocumentation>
	<Label>@SYS130973</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Category</TitleField1>
	<TitleField2>LastSyncTime</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastSyncTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Origin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchText</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WelcomeText</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS26467</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastSyncTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Origin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchText</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WelcomeText</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultView</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCustomOrderShown</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Category</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DefaultView</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CatProcurementView</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCustomOrderShown</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatProcurementCustomOrder</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>LastSyncTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DisplayCategoryLastSyncTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Origin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>CatDisplayOrigin</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SearchText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategorySearchText</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WelcomeText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CatDisplayHtmlText</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CategoryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Category</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Category</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategory</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>EcoResCategory_CatDisplayCategorySharedInfo</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Category</Name>
					<Field>Category</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>