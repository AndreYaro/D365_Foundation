<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PriceDiscTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PriceDiscTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcPriceAmount</Name>
				<Source><![CDATA[
    AmountCur calcPriceAmount(Qty  qty)
    {
        return CurrencyExchangeHelper::amount(qty * this.price() / this.priceUnit() + this.markup(), this.Currency);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAccountCode</Name>
				<Source><![CDATA[
    boolean  checkAccountCode()
    {
        if (!PriceDiscTable::isActivationPossibleForPartyCodeProductCode(this.Relation, this.AccountCode, this.ItemCode))
        {
            return checkFailed("@SYS14785");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkItemCode</Name>
				<Source><![CDATA[
    boolean  checkItemCode()
    {
        if (!PriceDiscTable::isActivationPossibleForPartyCodeProductCode(this.Relation, this.AccountCode, this.ItemCode))
        {
            return checkFailed("@SYS14785");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAccountRelationTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the <c>AccountRelation</c> for the current <c>PriceDiscTable</c> module exists.
    /// </summary>
    /// <returns>
    /// true if the related account exists; otherwise, false.
    /// </returns>
    protected boolean checkAccountRelationTable()
    {
        if (this.AccountCode != PriceDiscPartyCodeType::Table) 
        {
            return false;
        }

        switch(this.module())
        {
            case ModuleInventCustVend::Cust :
                return CustTable::exist(this.AccountRelation);
            case ModuleInventCustVend::Invent :
            case ModuleInventCustVend::Vend :
                return VendTable::exist(this.AccountRelation);
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPriceDiscGroupExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a <c>PriceDiscGroup</c> exists for the <c>PriceDiscTable</c>.
    /// </summary>
    /// <returns>
    /// true if a <c>PriceDiscGroup</c> exists; otherwise, false.
    /// </returns>
    protected boolean checkPriceDiscGroupExists()
    {
        return PriceDiscGroup::exist(this.module(), this.priceGroupType(), this.AccountRelation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAccountRelation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the <c>AccountCode</c> for the <c>PriceDiscTable</c> is valid.
    /// </summary>
    /// <returns>
    /// true if the <c>PriceDiscPartyCodeType</c> for the <c>AccountCode</c> is valid; otherwise, false.
    /// </returns>
    protected boolean checkAccountRelation()
    {
        boolean  isOk = true;

        switch (this.AccountCode)
        {
            case PriceDiscPartyCodeType::Table :   
                if (!this.checkAccountRelationTable())
                {
                    isOk = checkFailed("@SYS17074");
                } 
                break;
            case PriceDiscPartyCodeType::GroupId :
                if (!this.checkPriceDiscGroupExists())
                {
                    isOk = checkFailed("@SYS17074");
                }
                break;
            case PriceDiscPartyCodeType::All :
                if (this.AccountRelation)
                {
                    isOk = checkFailed("@SYS17074");
                }
                break;
        }

        return isOk;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkDate</Name>
				<Source><![CDATA[
    boolean  checkDate()
    {
        boolean  ok = true;

        if (this.ToDate  < this.FromDate)
            if (this.ToDate)
                ok = checkFailed("@SYS16982");

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkItemRelation</Name>
				<Source><![CDATA[
    boolean  checkItemRelation()
    {
        boolean  ok = true;

        ok = PriceGroupTypeTradeAgreementMapping::newPriceGroupTypeTradeAgreementMapping(this.priceGroupType()).checkItemRelationProductCode(this.ItemCode);

        switch (this.ItemCode)
        {
            case PriceDiscProductCodeType::Table       :   if (! InventTable::exist(this.ItemRelation))
                                                    ok = checkFailed("@SYS17075");
                                                ok = ok && this.checkProductDimensions();
                                                break;

            case PriceDiscProductCodeType::GroupId     :   if (! PriceDiscGroup::exist(ModuleInventCustVend::Invent,
                                                                            this.priceGroupType(),
                                                                            this.ItemRelation))
                                                {
                                                    ok = checkFailed("@SYS17075");
                                                }
                                                break;

            case PriceDiscProductCodeType::All         :   if (this.ItemRelation)
                                                    ok = checkFailed("@SYS17075");
                                                break;
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkProductDimensions</Name>
				<Source><![CDATA[
    boolean  checkProductDimensions()
    {
        if (this.ItemCode != PriceDiscProductCodeType::Table || !this.ItemRelation)
            return true;

        return this.inventDim().validateWriteProductDimensions(this.ItemRelation,false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkUnitDecimals</Name>
				<Source><![CDATA[
    boolean  checkUnitDecimals()
    {
        boolean ok = true;

        if (this.UnitId)
        {
            if (numOfDec(this.QuantityAmountFrom) > UnitOfMeasure::unitOfMeasureDecimalPrecision(UnitOfMeasure::unitOfMeasureIdBySymbol(this.UnitId)) ||
                numOfDec(this.QuantityAmountTo) > UnitOfMeasure::unitOfMeasureDecimalPrecision(UnitOfMeasure::unitOfMeasureIdBySymbol(this.UnitId)))
                ok = checkFailed(strFmt("@SYS83631", UnitOfMeasure::unitOfMeasureDecimalPrecision(UnitOfMeasure::unitOfMeasureIdBySymbol(this.UnitId))));
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custVendName</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    display CustVendName custVendName()
    {
        CustVendName name;

        switch (this.AccountCode)
        {
            case PriceDiscPartyCodeType::Table:
                name = TradePartyModuleType::newFromPartyModule(this.Module).partyName(this.AccountRelation);
                break;
            case PriceDiscPartyCodeType::GroupId:
                name = PriceDiscGroup::find(this.Module,this.priceGroupType(),this.AccountRelation).Name;
        }
        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        super();

        PriceDisc::removePriceDiscCache(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPriceDiscAdm</Name>
				<Source><![CDATA[
    void  initFromPriceDiscAdm(PriceDiscAdmTrans  tmpPriceDiscAdm)
    {
        // <GEERU>
        #ISOCountryRegionCodes
        // </GEERU>
        this.Agreement             = tmpPriceDiscAdm.Agreement;
        this.ItemCode              = tmpPriceDiscAdm.ItemCode;
        this.AccountCode           = tmpPriceDiscAdm.AccountCode;
        this.ItemRelation          = tmpPriceDiscAdm.ItemRelation;
        this.AccountRelation       = tmpPriceDiscAdm.AccountRelation;
        this.UnitId                = tmpPriceDiscAdm.UnitId;
        this.QuantityAmountFrom    = tmpPriceDiscAdm.QuantityAmountFrom;
        this.QuantityAmountTo      = tmpPriceDiscAdm.QuantityAmountTo;
        this.GenericCurrency       = tmpPriceDiscAdm.GenericCurrency;
        this.FromDate              = tmpPriceDiscAdm.FromDate;
        this.ToDate                = tmpPriceDiscAdm.ToDate;
        this.Amount                = tmpPriceDiscAdm.Amount;
        this.Currency              = tmpPriceDiscAdm.Currency;
        this.Percent1              = tmpPriceDiscAdm.Percent1;
        this.Percent2              = tmpPriceDiscAdm.Percent2;
        this.DeliveryTime          = tmpPriceDiscAdm.DeliveryTime;
        this.SearchAgain           = tmpPriceDiscAdm.SearchAgain;
        this.PriceUnit             = tmpPriceDiscAdm.PriceUnit;
        this.Relation              = tmpPriceDiscAdm.Relation;
        this.Markup                = tmpPriceDiscAdm.Markup;
        this.AllocateMarkup        = tmpPriceDiscAdm.AllocateMarkup;
        this.Module                = tmpPriceDiscAdm.Module;
        this.DeliveryTime          = tmpPriceDiscAdm.DeliveryTime;
        this.CalendarDays          = tmpPriceDiscAdm.CalendarDays;
        this.InventDimId           = tmpPriceDiscAdm.InventDimId;

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            this.AgreementHeaderExt_RU   = tmpPriceDiscAdm.AgreementHeaderExt_RU;
            this.InventBaileeFreeDays_RU = tmpPriceDiscAdm.InventBaileeFreeDays_RU;
        }
        // </GEERU>
        this.PDSCalculationId      = tmpPriceDiscAdm.PDSCalculationId;

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            this.MaximumRetailPrice_IN = tmpPriceDiscAdm.MaximumRetailPrice_IN;
        }
        // </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPriceDiscTable</Name>
				<Source><![CDATA[
    void initFromPriceDiscTable(PriceDiscTable _priceDiscTable)
    {
        // <GEERU>
        #ISOCountryRegionCodes
        // </GEERU>
        this.Agreement          = _priceDiscTable.Agreement;
        this.ItemCode           = _priceDiscTable.ItemCode;
        this.AccountCode        = _priceDiscTable.AccountCode;
        this.ItemRelation       = _priceDiscTable.ItemRelation;
        this.AccountRelation    = _priceDiscTable.AccountRelation;
        this.QuantityAmountFrom = _priceDiscTable.QuantityAmountFrom;
        this.QuantityAmountTo   = _priceDiscTable.QuantityAmountTo;
        this.GenericCurrency    = _priceDiscTable.GenericCurrency;
        this.FromDate           = _priceDiscTable.FromDate;
        this.ToDate             = _priceDiscTable.ToDate;
        this.Amount             = _priceDiscTable.Amount;
        this.Currency           = _priceDiscTable.Currency;
        this.Percent1           = _priceDiscTable.Percent1;
        this.Percent2           = _priceDiscTable.Percent2;
        this.DeliveryTime       = _priceDiscTable.DeliveryTime;
        this.SearchAgain        = _priceDiscTable.SearchAgain;
        this.PriceUnit          = _priceDiscTable.PriceUnit;
        this.Relation           = _priceDiscTable.Relation;
        this.UnitId             = _priceDiscTable.UnitId;
        this.Markup             = _priceDiscTable.Markup;
        this.AllocateMarkup     = _priceDiscTable.AllocateMarkup;
        this.Module             = _priceDiscTable.Module;
        this.InventDimId        = _priceDiscTable.InventDimId;
        this.CalendarDays       = _priceDiscTable.CalendarDays;

        // <GEERU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            this.AgreementHeaderExt_RU = _priceDiscTable.AgreementHeaderExt_RU;
        }
        // </GEERU>

        this.MCRFixedAmountCur       = _priceDiscTable.MCRFixedAmountCur;

        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            this.MaximumRetailPrice_IN  = _priceDiscTable.MaximumRetailPrice_IN;
        }
        // </GIN>
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    void  initValue()
    {
        super();

        this.Module         = ModuleInventCustVend::Vend;
        this.Relation       = PriceType::PricePurch;
        this.SearchAgain    = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    void insert()
    {
        if (this.AccountCode == PriceDiscPartyCodeType::All)
        {
            this.AccountRelation = '';
        }

        if (this.ItemCode == PriceDiscProductCodeType::All)
        {
            this.ItemRelation   = '';
            this.UnitId         = '';
            this.InventDimId    = InventDim::inventDimIdBlank();
        }

        if (this.ItemCode != PriceDiscProductCodeType::Table)
        {
            this.UnitId         = '';
            this.InventDimId    = InventDim::inventDimIdBlank();
        }

        super();

        PriceDisc::removePriceDiscCache(this);

        if (this.PDSCalculationId != '')
        {
            InventTableModule::pdsUpdFromTradeAgreement(this.itemId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    InventDim inventDim(boolean _forUpdate = false)
    {
        return InventDim::find(this.InventDimId,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    ItemId itemId()
    {
        if (this.ItemCode == PriceDiscProductCodeType::Table)
            return this.ItemRelation;

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefAgreement_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Jump to the the agreements.
    /// </summary>
    public void jumpRefAgreement_RU()
    {
        switch (this.Module)
        {
            case ModuleInventCustVend::Cust:
                SalesAgreementHeaderExt_RU::salesAgreementJumpRef(this.AgreementHeaderExt_RU);
                break;
            case ModuleInventCustVend::Vend:
                PurchAgreementHeaderExt_RU::purchAgreementJumpRef(this.AgreementHeaderExt_RU);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>markup</Name>
				<Source><![CDATA[
    PriceMarkup  markup()
    {
        if (this.AllocateMarkup)
        {
            return 0;
        }

        return this.Markup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrDisplayMarginPercentStr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the margin percentage.
    /// </summary>
    /// <returns>
    /// The margin percentage.
    /// </returns>
    public display MCRMarginPecentStr mcrDisplayMarginPercentStr()
    {
        MCRMarginAlert_PriceDisc mcrMarginAlert_PriceDisc;
        MCRMarginPecentStr       mcrMarginPercentStr;

        // Only execute if the AR parameter is set to true
        if (this.RecId
            && SalesParameters::find().MCREnableMarginAlert)
        {
            mcrMarginAlert_PriceDisc = MCRMarginAlert_PriceDisc::newPriceDiscTable(this);
            mcrMarginAlert_PriceDisc.calcMargin();
            mcrMarginPercentStr =  mcrMarginAlert_PriceDisc.parmMCRMarginPercentStr();
        }
        return mcrMarginPercentStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PriceDiscTable, ItemCode):
                this.ItemRelation = '';
                break;

            case fieldNum(PriceDiscTable, AccountCode):
                this.AccountRelation = '';
                break;

            case fieldNum(PriceDiscTable, ItemRelation):
                switch ( this.module() )
                {
                    case ModuleInventCustVend::Cust:
                        this.UnitId = InventTableModule::find(this.ItemRelation, ModuleInventPurchSales::Sales).UnitId;
                        break;

                    case ModuleInventCustVend::Vend:
                        this.UnitId = InventTableModule::find(this.ItemRelation, ModuleInventPurchSales::Purch).UnitId;
                        break;

                    default:
                        EventHandlerResult result = new EventHandlerResult();
                        this.retrieveUnitForModule(this.module(), this, result);
                        if (result.hasResult())
                        {
                            this.UnitId = result.result();
                        }
                        break;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveUnitForModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the unit id for the <c>ModuleInventCustVend</c>.
    /// </summary>
    /// <param name = "_moduleInventCustVend">A <c>ModuleInventCustVend</c> value.</param>
    /// <param name = "_priceDiscTable">A <c>PriceDiscTable</c> record.</param>
    /// <param name = "_result">Subscribers can use this to provide the unit.</param>
    delegate void retrieveUnitForModule(ModuleInventCustVend _moduleInventCustVend,
        PriceDiscTable _priceDiscTable,
        EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    ModuleInventCustVend  module()
    {
        return PriceTypeTradeAgreementMapping::newPriceTypeTradeAgreementMapping(this.relation).partyRoleModule();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pcsPrice</Name>
				<Source><![CDATA[
    display Price  pcsPrice()
    {
        return (this.priceQty() * this.Amount / this.priceUnit() + this.Markup) / this.priceQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pcsPriceMST</Name>
				<Source><![CDATA[
    display Price  pcsPriceMST()
    {
        Price price = this.pcsPrice();

        if (this.Currency == CompanyInfoHelper::standardCurrency())
            return price;

        return ExchangeRateHelper::mstPrice(price, this.Currency);
    }

]]></Source>
			</Method>
			<Method>
				<Name>price</Name>
				<Source><![CDATA[
    AmountCur price()
    {
        if (this.AllocateMarkup)
        {
            return CurrencyExchangeHelper::price((this.priceQty() * this.Amount + this.Markup * this.priceUnit()) / this.priceQty(), this.Currency);
        }

        return this.Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceGroupType</Name>
				<Source><![CDATA[
    PriceGroupType priceGroupType()
    {
        return PriceTypeConverter::priceTypeToPriceGroupType(this.Relation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceQty</Name>
				<Source><![CDATA[
    AmountQty priceQty()
    {
        return this.QuantityAmountFrom ? this.QuantityAmountFrom : 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceUnit</Name>
				<Source><![CDATA[
    PriceUnit  priceUnit()
    {
        return this.PriceUnit ? this.PriceUnit : 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Renames primary key.
    /// </summary>
    public void renamePrimaryKey()
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        {
            RetailConnActionManagement::errorOnRename(this);
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    void update()
    {
        if (this.AccountCode == PriceDiscPartyCodeType::All)
        {
            this.AccountRelation = '';
        }

        if (this.ItemCode == PriceDiscProductCodeType::All)
        {
            this.ItemRelation   = '';
            this.UnitId         = '';
            this.InventDimId    = InventDim::inventDimIdBlank();
        }

        if (this.ItemCode != PriceDiscProductCodeType::Table)
        {
            this.UnitId         = '';
            this.InventDimId    = InventDim::inventDimIdBlank();
        }

        super();

        PriceDisc::removePriceDiscCache(this.orig());
        PriceDisc::removePriceDiscCache(this);

        if (this.PDSCalculationId != '')
        {
            InventTableModule::pdsUpdFromTradeAgreement(this.itemId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    boolean  validateField(FieldId  fieldId)
    {
        boolean  ok = true;

        ok = super(fieldId);

        switch (fieldId)
        {
            case(fieldNum(PriceDiscTable, FromDate))        :   ok = this.checkDate();
                                                                break;
            case(fieldNum(PriceDiscTable, ToDate))          :   ok = this.checkDate();
                                                                break;
            case(fieldNum(PriceDiscTable, ItemRelation))    :   ok = this.checkItemRelation();
                                                                break;
            case(fieldNum(PriceDiscTable, AccountRelation)) :   ok = this.checkAccountRelation();
                                                                break;
            case(fieldNum(PriceDiscTable, ItemCode))        :   ok = this.checkItemCode();
                                                                break;
            case(fieldNum(PriceDiscTable, AccountCode))     :   ok = this.checkAccountCode();
                                                                break;

            case fieldNum(PriceDiscTable,DeliveryTime):
                if (this.DeliveryTime < 0)
                    return checkFailed("@SYS53966");

                break;
            case(fieldNum(PriceDiscTable, PDSCalculationId)) :
                ok = ok && PDSAdvancedPricing_Validator::validateCalculationElementId(this.PDSCalculationId);
                break;
        }

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean  validateWrite()
    {
        boolean  ok = true;

        ok = super();

        if (! this.checkUnitDecimals())
            ok = false;

        if (! this.checkDate())
            ok = false;

        if (! this.checkItemRelation())
            ok = false;

        if (! this.checkAccountRelation())
            ok = false;

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activation</Name>
				<Source><![CDATA[
    [SysObsolete('Use method isPartyCodeProductCodeActivated instead.', false, 30\11\2017)]
    static NoYes activation(PriceType      relation,
                        TableGroupAll      accountCode,
                        TableGroupAll      itemCode,
                        PriceParameters    priceParameters = PriceParameters::find())
    {
        return PriceDiscTable::isPartyCodeProductCodeActivated(relation, 
            PriceDiscPartyCodeTypeTableGroupAllMapping::tableGroupAllToPriceDiscPartyCodeType(accountCode),
            PriceDiscProductCodeTypeTableGroupAllMapping::tableGroupAllToPriceDiscProductCodeType(itemCode),
            priceParameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activationPossible</Name>
				<Source><![CDATA[
    [SysObsolete('Use method isActivationpossibleForPartyCodeProductcode instead.', false, 30\11\2017)]
    static NoYes activationPossible(PriceType  relation,
                                TableGroupAll  accountCode,
                                TableGroupAll  itemCode)
    {
        return PriceDiscTable::isActivationPossibleForPartyCodeProductCode(relation,
            PriceDiscPartyCodeTypeTableGroupAllMapping::tableGroupAllToPriceDiscPartyCodeType(accountCode),
            PriceDiscProductCodeTypeTableGroupAllMapping::tableGroupAllToPriceDiscProductCodeType(itemCode));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPartyCodeProductCodeActivated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the given party code and product code combination is activated.
    /// </summary>
    /// <param name = "_relation">A <c>PriceType</c> value.</param>
    /// <param name = "_partyCode">A <c>PriceDiscPartyCodeType</c> value.</param>
    /// <param name = "_productCode">A <c>PriceDiscProductCodeType</c> value.</param>
    /// <param name = "_priceParameters">A <c>PriceParameters</c> record.</param>
    /// <returns>yes, if the given party code and product code combination is activated; otherwise, no.</returns>
    public static NoYes isPartyCodeProductCodeActivated(
        PriceType                      _relation,
        PriceDiscPartyCodeType         _partyCode,
        PriceDiscProductCodeType       _productCode,
        PriceParameters                _priceParameters = PriceParameters::find())
    {
        return PriceTypeTradeAgreementMapping::newPriceTypeTradeAgreementMapping(_relation).isPartyCodeProductCodeActivated(_partyCode, _productCode, _priceParameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isActivationPossibleForPartyCodeProductCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if activation is possible for the given party code and product code combination.
    /// </summary>
    /// <param name = "_relation">A <c>PriceType</c> value.</param>
    /// <param name = "_partyCode">A <c>PriceDiscPartyCodeType</c> value.</param>
    /// <param name = "_productCode">A <c>PriceDiscProductCodeType</c> value.</param>
    /// <param name = "_priceParameters">A <c>PriceParameters</c> record.</param>
    /// <returns>yes, if activation is possible for the given party code and product code combination; otherwise, no.</returns>
    public static NoYes isActivationPossibleForPartyCodeProductCode(
        PriceType                   _relation,
        PriceDiscPartyCodeType      _partyCode,
        PriceDiscProductCodeType    _productCode)
    {
        return PriceTypeTradeAgreementMapping::newPriceTypeTradeAgreementMapping(_relation).isActivationPossibleForPartyCodeProductCode(_partyCode, _productCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>existAccountItemDateRelation</Name>
				<Source><![CDATA[
    static boolean existAccountItemDateRelation(PriceType                _relation,
                                                       PriceDiscAccountRelation _accountNum,
                                                       PriceDiscAccountRelation _accountGroupId,
                                                       PriceDiscItemRelation    _itemId,
                                                       PriceDiscItemRelation    _itemGroupId,
                                                       date                     _date       = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                                       AmountQty                _amountQty  = -1,
                                                       InventDim                _inventDimCriteria = null)
    {
        InventDim       inventDim;
        InventDimParm   inventDimParm;
        PriceDiscTable  priceDiscTable;

        inventDimParm.initFromInventDim(_inventDimCriteria);

        select firstonly RecId from priceDiscTable
            where priceDiscTable.Relation           == _relation                                                &&
                  (_date                            >= priceDiscTable.FromDate  || ! priceDiscTable.FromDate)   &&
                  (_date                            <= priceDiscTable.ToDate    || ! priceDiscTable.ToDate)     &&
                  priceDiscTable.QuantityAmountFrom     <= _amountQty                                            &&
                  ((_amountQty < priceDiscTable.QuantityAmountTo) || !priceDiscTable.QuantityAmountTo)                 &&
                  ((priceDiscTable.ItemCode           == PriceDiscProductCodeType::Table   &&
                    priceDiscTable.ItemRelation       == _itemId)                   ||
                   (priceDiscTable.ItemCode           == PriceDiscProductCodeType::GroupId &&
                    priceDiscTable.ItemRelation       == _itemGroupId)              ||
                   (priceDiscTable.ItemCode           == PriceDiscProductCodeType::All))                                   &&
                  ((priceDiscTable.AccountCode        == PriceDiscPartyCodeType::Table   &&
                    priceDiscTable.AccountRelation    == _accountNum)               ||
                   (priceDiscTable.AccountCode        == PriceDiscPartyCodeType::GroupId &&
                    priceDiscTable.AccountRelation    == _accountGroupId)           ||
                   (priceDiscTable.AccountCode        == PriceDiscPartyCodeType::All))
            #InventDimExistsJoin(priceDiscTable.InventDimId,InventDim,_InventDimCriteria,InventDimParm);

        return priceDiscTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existAccountRelation</Name>
				<Source><![CDATA[
    static boolean  existAccountRelation(PriceType       relation,
                                         CustVendAC      accountRelation)
    {
        return (select firstonly RecId from priceDiscTable
                    where priceDiscTable.Relation           == relation                 &&
                          priceDiscTable.AccountCode        == PriceDiscPartyCodeType::GroupId   &&
                          priceDiscTable.AccountRelation    == accountRelation
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existItemRelation</Name>
				<Source><![CDATA[
    static boolean  existItemRelation(PriceType    relation,
                                      ItemId       itemRelation)
    {
        return (select firstonly RecId from priceDiscTable
                    where priceDiscTable.Relation           == relation                 &&
                          priceDiscTable.ItemCode           == PriceDiscProductCodeType::GroupId   &&
                          priceDiscTable.ItemRelation       == itemRelation
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existPriceDiscAccountItemDateRelation</Name>
				<Source><![CDATA[
    static boolean existPriceDiscAccountItemDateRelation(PriceDiscAccountRelation _accountNum,
                                                                PriceDiscItemRelation    _itemId,
                                                                AmountQty                _amountQty              = -1,
                                                                PriceDiscAccountRelation _accountPriceGroupId    = CustTable::find(_accountNum).PriceGroup,
                                                                PriceDiscAccountRelation _accountLineDiscGroupId = CustTable::find(_accountNum).LineDisc,
                                                                PriceDiscItemRelation    _itemLineDiscGroupId    = InventTable::find(_itemId).salesLineDisc(),
                                                                date                     _date                   = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()),
                                                                InventDim                _inventDimCriteria      = null
    )
    {
        if (PriceDiscTable::existAccountItemDateRelation(PriceType::PriceSales,
                                                         _accountNum,
                                                         _accountPriceGroupId,
                                                         _itemId,
                                                         '',
                                                         _date,
                                                         _amountQty,
                                                         _inventDimCriteria) ||
            PriceDiscTable::existAccountItemDateRelation(PriceType::LineDiscSales,
                                                         _accountNum,
                                                         _accountLineDiscGroupId,
                                                         _itemId,
                                                         _itemLineDiscGroupId,
                                                         _date,
                                                         _amountQty,
                                                         _inventDimCriteria))
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [SysObsolete('This method will be deprecated.', false, 30\11\2017)]
    static PriceDiscTable find(PriceType            relation,
                               TableGroupAll        itemCode,
                               ItemRelation         itemRelation,
                               TableGroupAll        accountCode,
                               CustVendRel          accountRelation,
                               InventDim            inventDimCriteria,
                               UnitOfMeasureSymbol  unitID,
                               CurrencyCode         currency,
                               AmountQty            amountQty,
                               boolean              update = false)
    {
        PriceDiscTable  priceDiscTable;
        InventDim       inventDim;
        InventDimParm   inventDimParm;

        inventDimParm.initFromInventDim(inventDimCriteria);
        priceDiscTable.selectForUpdate  (update);
        priceDiscTable.selectLocked     (update);

        PriceDiscPartyCodeType partyCodeType = PriceDiscPartyCodeTypeTableGroupAllMapping::tableGroupAllToPriceDiscPartyCodeType(accountCode);
        PriceDiscProductCodeType productCodeType = PriceDiscProductCodeTypeTableGroupAllMapping::tableGroupAllToPriceDiscProductCodeType(itemCode);

        select firstonly priceDiscTable
            index hint PriceDiscIdx
            where priceDiscTable.Relation           == relation             &&
                  priceDiscTable.ItemCode           == productCodeType      &&
                  priceDiscTable.ItemRelation       == itemRelation         &&
                  priceDiscTable.AccountCode        == partyCodeType        &&
                  priceDiscTable.AccountRelation    == accountRelation      &&
                  priceDiscTable.Currency           == currency             &&
                  priceDiscTable.UnitId             == unitID               &&
                  priceDiscTable.QuantityAmountFrom   <= amountQty          &&
                  (priceDiscTable.QuantityAmountTo > amountQty || !amountQty)
                #InventDimExistsJoin(priceDiscTable.inventDimId,InventDim,InventDimCriteria,InventDimParm);

        return priceDiscTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    static  PriceDiscTable findRecId(RecId      recId,
                                     boolean    update = false)
    {
        PriceDiscTable priceDiscTable;

        priceDiscTable.selectForUpdate(update);

        select firstonly priceDiscTable
            where priceDiscTable.RecId == recId;

        return priceDiscTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveModuleFromPriceType</Name>
				<Source><![CDATA[
    static ModuleInventCustVend resolveModuleFromPriceType(PriceType _priceType)
    {
        return PriceTypeTradeAgreementMapping::newPriceTypeTradeAgreementMapping(_priceType).partyRoleModule();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPurchPriceDiscTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a purchase trade agreement for a specific item.
    /// </summary>
    /// <param name="_itemId">
    /// The ID of the item for which to search.
    /// </param>
    /// <param name="_inventDimId">
    /// The inventory dimension for which to search.
    /// </param>
    /// <param name="_qty">
    /// The quantity of items for which to search.
    /// </param>
    /// <param name="_transDate">
    /// The date for which the found trade agreements must be active.
    /// </param>
    /// <param name="_searchTradeMethod">
    /// The method that prioritizes the search results.
    /// </param>
    /// <param name="_unitId">
    /// The unit of measure for search
    /// </param>
    /// <param name="_reqSetup">
    /// The item setup; optional.
    /// </param>
    /// <returns>
    /// A record of a purchase trade agreement that matches the search criteria.
    /// </returns>
    static PriceDiscTable findPurchPriceDiscTable(
        ItemId                  _itemId,
        InventDimId             _inventDimId,
        Qty                     _qty,
        TransDate               _transDate,
        ReqSearchTradeMethod    _searchTradeMethod,
        UnitOfMeasureSymbol     _unitId,
        ReqSetup                _reqSetup = ReqSetup::newItemId(_itemId)
        )
    {
        PriceDiscTable      priceDiscTable;
        InventDimParm       inventDimParm;
        
        // Only search for trade agreements with specific vendors for specific items if it has been activated 
        if (!PriceDiscTable::isPartyCodeProductCodeActivated(PriceType::PricePurch, PriceDiscPartyCodeType::Table, PriceDiscProductCodeType::Table))
        {
            return priceDiscTable;
        }

        InventDimGroupSetup inventDimGroupSetup = InventDimGroupSetup::newItemId(_itemId);
        InventDim           inventDim           = InventDim::find(_inventDimId);        
        InventDimId         inventDimId         = InventDim::findDim(inventDim).InventDimId;
        UnitOfMeasureSymbol unitId              = _unitId ? _unitId : _reqSetup.purchUnitId();
        Integer             loop                = 0;
        boolean             found;

        inventDimGroupSetup.inventDimParmActivePurchPrice(inventDimParm);
        inventDim.clearNotSelectedDim(inventDimParm);

        while (loop < 3)
        {
            InventDimId         lastInventDimId;

            if (inventDimId && inventDimId != lastInventDimId)
            {
                VendTable           vendTable;
                PriceDiscTable      bestPriceDiscTable;
                Price               bestPrice;

                found = false;

                lastInventDimId = inventDimId;

                switch (_searchTradeMethod)
                {
                    case ReqSearchTradeMethod::ShortestDlvTime:

                        select firstonly priceDiscTable
                            order by DeliveryTime,Amount
                                where priceDiscTable.Relation                  == PriceType::PricePurch                                    &&
                                      priceDiscTable.ItemCode                  == PriceDiscProductCodeType::Table                          &&
                                      priceDiscTable.ItemRelation              == _itemId                                                  &&
                                      priceDiscTable.AccountCode               == PriceDiscPartyCodeType::Table                            &&
                                      priceDiscTable.UnitId                    == unitId                                                  &&
                                      priceDiscTable.InventDimId               == inventDimId                                              &&
                                      priceDiscTable.QuantityAmountFrom        <= _qty                                                     &&
                                      ((_qty < priceDiscTable.QuantityAmountTo) || !priceDiscTable.QuantityAmountTo)                        &&
                                      (_transDate                              >= priceDiscTable.FromDate  || ! priceDiscTable.FromDate)   &&
                                      (_transDate                              <= priceDiscTable.ToDate    || ! priceDiscTable.ToDate)
                            join TableId from vendTable where
                                 vendTable.AccountNum                      == priceDiscTable.AccountRelation                           &&
                                 vendTable.Currency                        == priceDiscTable.Currency;

                        if (!priceDiscTable)
                        {
                            select firstonly priceDiscTable
                                order by DeliveryTime,Amount
                                    where priceDiscTable.Relation                  == PriceType::PricePurch                                    &&
                                          priceDiscTable.ItemCode                  == PriceDiscProductCodeType::Table                          &&
                                          priceDiscTable.ItemRelation              == _itemId                                                  &&
                                          priceDiscTable.AccountCode               == PriceDiscPartyCodeType::Table                            &&
                                          priceDiscTable.UnitId                    == unitId                                                   &&
                                          priceDiscTable.InventDimId               == inventDimId                                              &&
                                          priceDiscTable.QuantityAmountFrom        <= _qty                                                      &&
                                          ((_qty < priceDiscTable.QuantityAmountTo) || !priceDiscTable.QuantityAmountTo)                        &&
                                          (_transDate                              >= priceDiscTable.FromDate  || ! priceDiscTable.FromDate)   &&
                                          (_transDate                              <= priceDiscTable.ToDate    || ! priceDiscTable.ToDate)
                            join TableId from vendTable where
                                 vendTable.AccountNum                      == priceDiscTable.AccountRelation;
                        }

                        if (priceDiscTable)
                        {
                            found = true;
                        }

                        break;

                    case ReqSearchTradeMethod::LowestPcsPrice:

                        while select priceDiscTable
                            where priceDiscTable.Relation                  == PriceType::PricePurch                                    &&
                                  priceDiscTable.ItemCode                  == PriceDiscProductCodeType::Table                          &&
                                  priceDiscTable.ItemRelation              == _itemId                                                  &&
                                  priceDiscTable.AccountCode               == PriceDiscPartyCodeType::Table                            &&
                                  priceDiscTable.UnitId                    == unitId                                                   &&
                                  priceDiscTable.InventDimId               == inventDimId                                              &&
                                  priceDiscTable.QuantityAmountFrom        <= _qty                                                      &&
                                  ((_qty < priceDiscTable.QuantityAmountTo) || !priceDiscTable.QuantityAmountTo)                        &&
                                  (_transDate                              >= priceDiscTable.FromDate  || ! priceDiscTable.FromDate)   &&
                                  (_transDate                              <= priceDiscTable.ToDate    || ! priceDiscTable.ToDate)
                            join TableId from vendTable where
                                 vendTable.AccountNum                      == priceDiscTable.AccountRelation                           &&
                                 vendTable.Currency                        == priceDiscTable.Currency
                        {
                            if (! bestPriceDiscTable.RecId || bestPrice > priceDiscTable.pcsPriceMST())
                            {
                                bestPrice           = priceDiscTable.pcsPriceMST();
                                bestPriceDiscTable  = priceDiscTable.data();
                                found               = true;
                            }
                        }

                        if (!found)
                        {
                            while select priceDiscTable
                                where priceDiscTable.Relation                  == PriceType::PricePurch                                    &&
                                      priceDiscTable.ItemCode                  == PriceDiscProductCodeType::Table                          &&
                                      priceDiscTable.ItemRelation              == _itemId                                                  &&
                                      priceDiscTable.AccountCode               == PriceDiscPartyCodeType::Table                            &&
                                      priceDiscTable.UnitId                    == unitId                                                   &&
                                      priceDiscTable.InventDimId               == inventDimId                                              &&
                                      priceDiscTable.QuantityAmountFrom        <= _qty                                                      &&
                                      ((_qty < priceDiscTable.QuantityAmountTo) || !priceDiscTable.QuantityAmountTo)                        &&
                                      (_transDate                              >= priceDiscTable.FromDate  || ! priceDiscTable.FromDate)   &&
                                      (_transDate                              <= priceDiscTable.ToDate    || ! priceDiscTable.ToDate)
                            join TableId from vendTable where
                                 vendTable.AccountNum                      == priceDiscTable.AccountRelation
                            {
                                if (! bestPriceDiscTable.RecId || bestPrice > priceDiscTable.pcsPriceMST())
                                {
                                    bestPrice           = priceDiscTable.pcsPriceMST();
                                    bestPriceDiscTable  = priceDiscTable.data();
                                    found               = true;
                                }
                            }
                        }

                        if (found)
                        {
                            priceDiscTable.data(bestPriceDiscTable);
                        }
                }

                if (found)
                {
                    break;
                }
            }

            if (inventDimId == InventDim::inventDimIdBlank())
            {
                break;
            }

            loop++;

            if (loop == 1)
            {
                inventDimId = InventDim::findDim(inventDim).InventDimId;
            }
            else
            {
                inventDimId = InventDim::inventDimIdBlank();
            }
        }

        if (found)
        {
            return priceDiscTable;
        }

        return null;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PriceDisc</ConfigurationKey>
	<DeveloperDocumentation>@SYS124474</DeveloperDocumentation>
	<FormRef>PriceDiscTable_PriceSales</FormRef>
	<Label>@SYS5926</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>relation</TitleField1>
	<TitleField2>ItemRelation</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>PriceDiscIdx</ClusteredIndex>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Module</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>relation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityAmountFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityAmountTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent2</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Agreement</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchAgain</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Agreement_RU</Name>
			<Label>@GLS104636</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgreementHeaderExt_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceUnit</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Currency</Name>
			<Label>@SYS7572</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GenericCurrency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Delivery</Name>
			<Label>@SYS4508</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DeliveryTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalendarDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisregardLeadTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>relation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityAmountFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuantityAmountTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventBailee_RU</Name>
			<Label>@GLS115581</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventBaileeFreeDays_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MCRDimension</Name>
			<Label>@SYS81213</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MCRFixedAmount</Name>
			<Label>@SYS23073</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MCRFixedAmountCur</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MCRMerchandisingEvent</Name>
			<Label>@MCR25819</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MCRMerchandisingEventID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MCRPriceDiscGroupType</Name>
			<Label>@MCR20833</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MCRPriceDiscGroupType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MCRSearchAgain</Name>
			<Label>@SYS15494</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SearchAgain</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>MiscCharges</Name>
			<Label>@SYS8371</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Markup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllocateMarkup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PDSPotency</Name>
			<Label>@PSC61</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PDSCalculationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Percent</Name>
			<Label>@SYS15774</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Percent1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Percent2</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Prices</Name>
			<Label>@SYS12983</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PriceUnit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Markup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TaxInformation_IN</Name>
			<Label>@SYS33652</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MaximumRetailPrice_IN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WebCategoryBrowsing</Name>
			<Label>@SYS74258</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>relation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscPartyCode</ExtendedDataType>
			<EnumType>PriceDiscPartyCodeType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscAccountRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Agreement</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceAgreement</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AgreementHeaderExt_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AgreementHeaderExtRecId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllocateMarkup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS6613</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CalendarDays</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CalendarDays</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Currency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DeliveryTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LeadTimeDelivery</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DisregardLeadTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DisregardLeadTime</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>GenericCurrency</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SalesGenericCurrency</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>InventBaileeFreeDays_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventBaileeFreeDays_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscProductCode</ExtendedDataType>
			<EnumType>PriceDiscProductCodeType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemRelation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscItemRelation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Markup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceMarkup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaximumRetailPrice_IN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MaximumRetailPrice_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MCRFixedAmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRFixedAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MCRMerchandisingEventID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRMerchandisingEventID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MCRPriceDiscGroupType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRPriceDiscGroupType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Module</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceDiscModule</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>ModuleInventCustVend</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OriginalPriceDiscAdmTransRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>Retail</ConfigurationKey>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PDSCalculationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PDSCalculationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percent1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscPct</ExtendedDataType>
			<Label>@SYS901</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Percent2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscPct</ExtendedDataType>
			<Label>@SYS902</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PriceUnit</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PriceUnit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityAmountFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountQty</ExtendedDataType>
			<Label>@SCM:QuantityAmountFrom</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuantityAmountTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountQuantityTo</ExtendedDataType>
			<Label>@SCM:QuantityAmountTo</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>relation</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS9114</Label>
			<EnumType>PriceType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SearchAgain</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SearchAgain</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ToDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ApplicabilityId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<FeatureClass>UnifiedPricingFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PriceDiscIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>relation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Currency</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UnitId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityAmountFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AgreementHeaderExt_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AccountIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>relation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Currency</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UnitId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityAmountFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AgreementHeaderExt_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ItemIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>relation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Currency</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UnitId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>QuantityAmountFrom</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ItemDimIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>GenericCurrency</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>GenericCurrency</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>relation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UnitId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AgreementHeaderExt_RUIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>AgreementHeaderExt_RU</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PriceDiscAdmTransIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>OriginalPriceDiscAdmTransRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>MCRMarginAlertMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AccountNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>Currency</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimId</MapField>
					<MapFieldTo>InventDimId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemId</MapField>
					<MapFieldTo>ItemRelation</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineDisc</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LinePercent</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Markup</MapField>
					<MapFieldTo>Markup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Price</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PriceUnit</MapField>
					<MapFieldTo>PriceUnit</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UnitId</MapField>
					<MapFieldTo>UnitId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UnitQty</MapField>
					<MapFieldTo>QuantityAmountFrom</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AgreementHeaderExt_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>AgreementHeaderExt_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AgreementHeaderExt_RU</Name>
					<Field>AgreementHeaderExt_RU</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Currency</Name>
					<Field>Currency</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustEndGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustEndGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::EndDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::EndDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustLineGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustLineGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::LineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::LineDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustMultiGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustMultiGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::MultiLineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::MultiLineDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustPriceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustPriceGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::PriceSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>Module</Name>
					<Field>Module</Field>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRPostageGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::MCRPostageDisc</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::MCRPostageDisc</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PdsCalculationId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>PDSCalculationTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PDSCalculationId</Name>
					<SourceEDT>PDSCalculationId</SourceEDT>
					<Field>PDSCalculationId</Field>
					<RelatedField>CalculationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CalculationIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PriceDiscAdmTrans</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>PriceDiscAdmTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OriginalPriceDiscAdmTransRecId</Name>
					<Field>OriginalPriceDiscAdmTransRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchEndGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchEndGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::EndDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::EndDiscPurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchLineGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchLineGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::LineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::LineDiscPurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchMultiGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchMultiGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::MultiLineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::MultiLineDiscPurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchPriceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PurchPriceGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::PricePurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesEndGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesEndGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::EndDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::EndDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesLineGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesLineGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::LineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::LineDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesMultiGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesMultiGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::MultiLineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::MultiLineDiscSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesPriceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>SalesPriceGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Invent</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::PriceSales</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>PriceDiscProductCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TAMMerchandisingEvent</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TAMMerchandisingEvent</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MCRMerchandisingEventID</Name>
					<SourceEDT>MCRMerchandisingEventID</SourceEDT>
					<Field>MCRMerchandisingEventID</Field>
					<RelatedField>MerchandisingEventID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>MerchID</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitId</Name>
					<Field>UnitId</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendEndGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendEndGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::EndDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::EndDiscPurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendLineGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendLineGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::LineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::LineDiscPurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendMultiGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendMultiGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::MultiLineDiscGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::MultiLineDiscPurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendPriceGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>VendPriceGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PriceDiscTable</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::PriceGroup</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>relation</Name>
					<Field>relation</Field>
					<ValueStr>PriceType::PricePurch</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>Module</Name>
					<Field>Module</Field>
					<ValueStr>ModuleInventCustVend::Vend</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>PriceDiscPartyCodeType::Table</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PricingRuleApplicability</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PricingRuleApplicability</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ApplicabilityId</Name>
					<Field>ApplicabilityId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>