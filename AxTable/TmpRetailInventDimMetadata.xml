<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpRetailInventDimMetadata</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpRetailInventDimMetadata extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateInternalOrgMetadata</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates internal organization metadata if it is different from ancestor's one. If metadata does not exist then creates it.
    /// </summary>
    public void updateInternalOrgMetadata()
    {
        RetailInventDimInternalOrgMetadata metadata, ancestorMetadata;
        RetailInternalOrganization retailInternalOrganization;

        if (this.InternalOrganization)
        {
            retailInternalOrganization = RetailInternalOrganization::find(this.InternalOrganization);
            if (retailInternalOrganization.InheritEnabled && this.InternalOrganization != this.AncestorInternalOrg)
            {
                ancestorMetadata = RetailInventDimInternalOrgMetadata::findByIds(this.AncestorInternalOrg, this.DimensionFieldId);
                //Metadata is not overriden
                if (ancestorMetadata && ancestorMetadata.IsRefinable == this.IsRefinable)
                {
                    return;
                }
            }
        }

        metadata = RetailInventDimInternalOrgMetadata::findByIds(this.InternalOrganization, this.DimensionFieldId, true);
        if (metadata)
        {
            metadata.IsRefinable = this.IsRefinable;
            metadata.update();
        }
        else
        {
            metadata.clear();
            metadata.InternalOrganization = this.InternalOrganization;
            metadata.DimensionFieldId     = this.DimensionFieldId;
            metadata.initValue();
            metadata.IsRefinable          = this.IsRefinable;
            metadata.LineNumber           = this.LineNumber;
            metadata.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCatalogMetadata</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates catalog metadata. If metadata does not exist then creates it.
    /// </summary>
    public void updateCatalogMetadata()
    {
        RetailInventDimCatalogMetadata metadata;

        metadata = RetailInventDimCatalogMetadata::findByIds(this.HostCatalog, this.DimensionFieldId, true);
        if (metadata)
        {
            metadata.IsRefinable = this.IsRefinable;
            metadata.update();
        }
        else
        {
            metadata.clear();
            metadata.CatalogRefRecId      = this.HostCatalog;
            metadata.DimensionFieldId     = this.DimensionFieldId;
            metadata.initValue();
            metadata.IsRefinable          = this.IsRefinable;
            metadata.LineNumber           = this.LineNumber;
            metadata.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimByInternalOrg</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find all product inventory dimension metadata on a internal organization.
    /// </summary>
    /// <param name="_internalOrgRecId">
    /// Internal org. record id.
    /// </param>
    /// <returns>
    /// A record cursor in the <c>TmpRetailInventDimMetadata</c> table; otherwise, an empty buffer.
    /// </returns>
    public static TmpRetailInventDimMetadata inventDimByInternalOrg(RefRecId _internalOrgRecId)
    {
        RetailInternalOrganization              retailInternalOrganization;
        RetailInventDimInternalOrgMetadata      retailInventDimInternalOrgMetadata;
        RetailInventDimIntOrgMetadataCollapsed  retailInventDimIntOrgMetadataCollapsed;
        TmpRetailInventDimMetadata              tmpRetailInventDimMetadata;

        void insertTmpRetailInventDimMetadata(
            RefRecId _internalOrgId,
            RefRecId _ancestorIntOrgId,
            FieldId _invDimFieldId,
            LineNum _lineNumber,
            RetailInventDimRefinable _isRefinable)
        {
            tmpRetailInventDimMetadata.InternalOrganization = _internalOrgId;
            tmpRetailInventDimMetadata.AncestorInternalOrg = _ancestorIntOrgId;
            tmpRetailInventDimMetadata.AncestorInternalOrgName = OMOperatingUnit::find(RetailInternalOrganization::find(_internalOrgId)
                                                                                        .InternalOrganization, OMOperatingUnitType::OMAnyOU).Name;
            tmpRetailInventDimMetadata.DimensionFieldId = _invDimFieldId;
            tmpRetailInventDimMetadata.DimensionFieldName = RetailInventDimInternalOrgMetadata::getDimensionName(_invDimFieldId);
            tmpRetailInventDimMetadata.LineNumber = _lineNumber;
            tmpRetailInventDimMetadata.IsRefinable = _isRefinable;

            tmpRetailInventDimMetadata.insert();
        }

        retailInternalOrganization = RetailInternalOrganization::findByRecId(_internalOrgRecId);
        if (retailInternalOrganization.InheritEnabled)
        {
            while select retailInventDimIntOrgMetadataCollapsed
                where retailInventDimIntOrgMetadataCollapsed.InternalOrganization == retailInternalOrganization.RecId
            {
                insertTmpRetailInventDimMetadata(_internalOrgRecId,
                                                retailInventDimIntOrgMetadataCollapsed.AncestorInternalOrg,
                                                retailInventDimIntOrgMetadataCollapsed.DimensionFieldId,
                                                retailInventDimIntOrgMetadataCollapsed.LineNumber,
                                                retailInventDimIntOrgMetadataCollapsed.IsRefinable);
            }
        }
        else
        {
            while select retailInventDimInternalOrgMetadata
                where retailInventDimInternalOrgMetadata.InternalOrganization == retailInternalOrganization.RecId
            {
                insertTmpRetailInventDimMetadata(_internalOrgRecId,
                                            _internalOrgRecId,
                                            retailInventDimInternalOrgMetadata.DimensionFieldId,
                                            retailInventDimInternalOrgMetadata.LineNumber,
                                            retailInventDimInternalOrgMetadata.IsRefinable);
            }
        }

        return tmpRetailInventDimMetadata;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimByCatalog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find all product inventory dimension metadata on a catalog.
    /// </summary>
    /// <param name="_catalogRefRecId">
    /// Catalog. record id.
    /// </param>
    /// <returns>
    /// A record cursor in the <c>TmpRetailInventDimMetadata</c> table; otherwise, an empty buffer.
    /// </returns>
    public static TmpRetailInventDimMetadata inventDimByCatalog(CatalogRefRecId _catalogRefRecId)
    {
        Catalog                                 catalog;
        RetailInventDimCatalogMetadata          retailInventDimCatalogMetadata;
        TmpRetailInventDimMetadata              tmpRetailInventDimMetadata;

        void insertTmpRetailInventDimMetadata(
            CatalogRefRecId _catalog,
            FieldId _invDimFieldId,
            LineNum _lineNumber,
            RetailInventDimRefinable _isRefinable)
        {
            tmpRetailInventDimMetadata.HostCatalog = _catalog;
            tmpRetailInventDimMetadata.DimensionFieldId = _invDimFieldId;
            tmpRetailInventDimMetadata.DimensionFieldName = RetailInventDimCatalogMetadata::getDimensionName(_invDimFieldId);
            tmpRetailInventDimMetadata.LineNumber = _lineNumber;
            tmpRetailInventDimMetadata.IsRefinable = _isRefinable;
            tmpRetailInventDimMetadata.insert();
        }

        catalog = Catalog::find(_catalogRefRecId);

        if (catalog.RecId != 0)
        {
            while select retailInventDimCatalogMetadata
                where retailInventDimCatalogMetadata.CatalogRefRecId == catalog.RecId
            {
                insertTmpRetailInventDimMetadata(_catalogRefRecId,
                                        retailInventDimCatalogMetadata.DimensionFieldId,
                                        retailInventDimCatalogMetadata.LineNumber,
                                        retailInventDimCatalogMetadata.IsRefinable);
            }
        }
        return tmpRetailInventDimMetadata;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@SYP4882050</Label>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AncestorInternalOrg</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInternalOrgRefRecId</ExtendedDataType>
			<Label>@REX1331</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AncestorInternalOrgName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DirPartyName</ExtendedDataType>
			<Label>@REX1331</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DimensionFieldId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<RelatedTable>InventDim</RelatedTable>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DimensionFieldName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HostChannel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InternalOrganization</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInternalOrgRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsRefinable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInventDimRefinable</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HostCatalog</Name>
			<ExtendedDataType>CatalogRefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AncestorInternalOrg</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailInternalOrganization</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AncestorInternalOrg</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AncestorInternalOrg</Name>
					<Field>AncestorInternalOrg</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InternalOrganization</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>RetailInternalOrganization</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InternalOrganization</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InternalOrganization</Name>
					<Field>InternalOrganization</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>