<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRScript</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRScript extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates changes to messages are consistent with current associations.
    /// </summary>
    /// <returns>
    /// true if it is valid for the record to be written.
    /// </returns>
    public boolean validateWrite()
    {
        boolean                 ret;
        MCRMessageAssociation   messageAssociation;

        ret = super();

        // Validation within this condition requires
        // that the record already exists.
        if (this.RecId)
        {
            // Ensures a general message cannot become a one time message if more
            // than one message association exists for this message.
            if (this.ScriptUse == MCRScriptUse::OneTimeUse)
            {
                select count(MessageOrder) from messageAssociation
                    where messageAssociation.mcrScript == this.RecId;
                if (messageAssociation.MessageOrder > 1)
                {
                    ret = checkFailed("@MCR11915");
                }
            }

            if (this.AssociationTypes != MCRMessageAssociationTypes::All)
            {
                // Check for existing item associations.
                if (this.AssociationTypes != MCRMessageAssociationTypes::Item)
                {
                    select firstonly RecId from messageAssociation
                        where messageAssociation.mcrScript == this.RecId
                           && messageAssociation.LinkedTableID == tableNum(InventTable);

                    if (messageAssociation)
                    {
                        ret = checkFailed("@MCR12338");
                    }
                }

                // Check for existing item associations.
                if (this.AssociationTypes != MCRMessageAssociationTypes::Catalog)
                {
                    select firstonly RecId from messageAssociation
                        where messageAssociation.mcrScript == this.RecId
                           && messageAssociation.LinkedTableID == tableNum(Catalog);

                    if (messageAssociation)
                    {
                        ret = checkFailed("@MCR40325");
                    }
                }

                // Check for existing promotional item associations.
                if (this.AssociationTypes != MCRMessageAssociationTypes::CatalogProduct)
                {
                    select firstonly RecId from messageAssociation
                        where messageAssociation.mcrScript == this.RecId
                           && messageAssociation.LinkedTableID == tableNum(CatalogProduct);

                    if (messageAssociation)
                    {
                        ret = checkFailed("@MCR40326");
                    }
                }

                // Check for existing sales order associations.
                if (this.AssociationTypes != MCRMessageAssociationTypes::SalesOrder)
                {
                    select firstonly RecId from messageAssociation
                        where messageAssociation.mcrScript == this.RecId
                           && messageAssociation.LinkedTableID == tableNum(SalesTable);

                    if (messageAssociation)
                    {
                        ret = checkFailed("@MCR12342");
                    }
                }

                // Check for existing customer associations.
                if (this.AssociationTypes != MCRMessageAssociationTypes::Customer)
                {
                    select firstonly RecId from messageAssociation
                        where messageAssociation.mcrScript == this.RecId
                           && messageAssociation.LinkedTableID == tableNum(CustTable);

                    if (messageAssociation)
                    {
                        ret = checkFailed("@MCR32820");
                    }
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>MCRScript</c> that matches the passed parameter.
    /// </summary>
    /// <param name="_scriptRecId">
    /// The RecID to be used to find the <c>MCRScript</c> record.
    /// </param>
    /// <param name="_selectForUpdate">
    /// A <c>boolean</c> used to determine whether or not a record should be selected for update; optional.
    /// </param>
    /// <returns>
    /// A <c>MCRScript</c> record.
    /// </returns>
    public static MCRScript find(RefRecId _scriptRecId, boolean _selectForUpdate = false)
    {
        MCRScript script;

        if (_scriptRecId)
        {
            if (_selectForUpdate)
            {
                script.selectForUpdate(_selectForUpdate);
            }

            select firstonly script
                where script.RecId == _scriptRecId;
        }

        return script;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MCRCallCenter</ConfigurationKey>
	<DeveloperDocumentation>@MCR40330</DeveloperDocumentation>
	<FormRef>MCRScript</FormRef>
	<Label>@MCR40330</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ScriptUse</TitleField1>
	<TitleField2>AssociationTypes</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ModifiedTransactionId>Yes</ModifiedTransactionId>
	<Modules>TransactionsAndOrders</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>MCRScriptTranslation</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>MCRScriptTranslation</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ScriptUse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssociationTypes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ScriptUse</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ScriptUse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssociationTypes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssociationTypes</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRMessageAssociationTypes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ScriptUse</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@MCR11935</Label>
			<Mandatory>Yes</Mandatory>
			<EnumType>MCRScriptUse</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>