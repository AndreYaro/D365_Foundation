<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LtInvoiceAutoNumberingTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LtInvoiceAutoNumberingTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displaySFNumberingName</Name>
				<Source><![CDATA[
    display Name displaySFNumberingName()
    {
        return NumberSequenceTable::findByNaturalKey(this.NumberSequenceCode).Txt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        FormDataObject  formDataObject;

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(LtInvoiceAutoNumberingTable, InvoiceAllGroupUser):
                this.InvoiceUserGroupId = '';
                if (FormDataUtil::isFormDataSource(this))
                {
                    formDataObject = FormDataUtil::getFormDataSource(this).object(fieldnum(LtInvoiceAutoNumberingTable, InvoiceUserGroupId));
                    formDataObject.allowEdit(this.InvoiceAllGroupUser != LtInvoiceAllGroupUser::All);
                }
                break;
            case fieldnum(LtInvoiceAutoNumberingTable, SalesPurch):
                if (this.SalesPurch == DocNumberingModule_W::Inventory)
                {
                    this.AutoNumberingType = LtInvoiceAutoNumberingType::PackingSlip;
                }
                else if (this.SalesPurch == DocNumberingModule_W::Project)
                {
                    this.AutoNumberingType = LtInvoiceAutoNumberingType::Invoice;
                }
                else if (this.SalesPurch == DocNumberingModule_W::FixedAssets)
                {
                    this.AutoNumberingType = LtInvoiceAutoNumberingType::PackingSlip;
                }
                break;
            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (ret && (_fieldIdToCheck == fieldNum(LtInvoiceAutoNumberingTable, NumberSequenceCode) && this.NumberSequenceCode))
        {
            ret = NumberSequenceTable::checkExistByNaturalKey(this.NumberSequenceCode, NumberSeqScopeFactory::createDataAreaScope().getId(true));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if ((this.InvoiceAllGroupUser == LtInvoiceAllGroupUser::GroupId ||
             this.InvoiceAllGroupUser == LtInvoiceAllGroupUser::User)   &&
            !this.InvoiceUserGroupId)
        {
            ret = checkFailed("@GLS110696");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkLastDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to confirm that the current date is not earlier than the last date this autonumbering code was used.
    /// </summary>
    /// <param name="_code">
    /// The autonumbering code for which the date needs to be checked.
    /// </param>
    /// <param name="_date">
    /// The date being confirmed.
    /// </param>
    /// <param name="_warning">
    /// Boolean value indicating whether a warning message should be thrown or not.
    /// </param>
    /// <returns>
    /// False, if the LastTransDate is greater than the current date being verified.
    /// </returns>
    public static boolean checkLastDate(LtDocNumberingCode _code,
                                               TransDate          _date,
                                               boolean            _warning = false)
    {
        LtInvoiceAutoNumberingTable autoNumbering = LtInvoiceAutoNumberingTable::find(_code);
        boolean                     ret           = true;

        if (autoNumbering.LastTransDate > _date)
        {
            ret = false;

            if (_warning)
                checkFailed(strfmt("@GLS110695", _date, autoNumbering.LastTransDate, _code));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existUserNumbering</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to find out if the Auto numbering code entered by the user exists.
    /// </summary>
    /// <param name="_code">
    /// The auto numbering code entered by the user.
    /// </param>
    /// <param name="_module">
    /// The module for which the code should be checked.
    /// </param>
    /// <param name="_type">
    /// Whether the code belongs to Invoice or Packing slip.
    /// </param>
    /// <returns>
    /// True if the user code exists for the given module and type combination.
    /// </returns>
    public static boolean existUserNumbering(LtDocNumberingCode         _code,
                                             DocNumberingModule_W       _module,
                                             LtInvoiceAutoNumberingType _type = LtInvoiceAutoNumberingType::invoice)
    {
        return LtInvoiceAutoNumberingTable::makeCodeFilter(_module, _type).in(_code);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static LtInvoiceAutoNumberingTable find(LtDocNumberingCode _numberingCode, boolean _forUpdate = false)
    {
        LtInvoiceAutoNumberingTable ltInvoiceAutoNumberingTable;

        if (_numberingCode)
        {
            ltInvoiceAutoNumberingTable.selectForUpdate(_forUpdate);

            select firstonly ltInvoiceAutoNumberingTable
                where ltInvoiceAutoNumberingTable.NumberingCode == _numberingCode;
        }

        return ltInvoiceAutoNumberingTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDocNumberingCodeForRetail</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method finds numbering code for the retail sales invoices.
    /// </summary>
    /// <returns>
    /// The numbering code for the retail sales invoices.
    /// </returns>
    public static LtDocNumberingCode findDocNumberingCodeForRetail()
    {
        Set                docNumberingCodeSet;
        SetEnumerator      se;
        LtDocNumberingCode ret;

        docNumberingCodeSet = LtInvoiceAutoNumberingTable::makeCodeFilter(DocNumberingModule_W::Sales, LtInvoiceAutoNumberingType::Invoice, true);

        if (!docNumberingCodeSet || !docNumberingCodeSet.elements())
            return ret;

        se = docNumberingCodeSet.getEnumerator();
        se.moveNext();
        ret = se.current();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to provide a lookup for the Numbering field while posting an invoice or packing slip
    /// </summary>
    /// <param name="_lookupCtrl">
    /// The DocNumberingCode_LT lookup control calling the method
    /// </param>
    /// <param name="_module">
    /// Filter for providing which module the lookup should be filtered on
    /// </param>
    /// <param name="_type">
    /// Filters the lookup for either Invoice or Packing Slip
    /// </param>
    public static void lookup(FormStringControl          _lookupCtrl,
                              DocNumberingModule_W       _module = DocNumberingModule_W::Sales,
                              LtInvoiceAutoNumberingType _type   = LtInvoiceAutoNumberingType::invoice)
    {
        SetEnumerator        setEnumerator;
        Range                codeRange;
        TableLookup_RU       tableLookup = new TableLookup_RU();
        Query                query = new Query();
        QueryBuildDataSource queryBuildDataSource;

        setEnumerator = LtInvoiceAutoNumberingTable::makeCodeFilter(_module,_type).getEnumerator();

        while (setEnumerator.moveNext())
        {
            codeRange = queryRangeConcat(codeRange, setEnumerator.current());
        }

        if (!codeRange)
        {
            codeRange = SysQuery::valueEmptyString();
        }

        queryBuildDataSource = query.addDataSource(tablenum(LtInvoiceAutoNumberingTable));
        queryBuildDataSource.addRange(fieldnum(LtInvoiceAutoNumberingTable, NumberingCode)).value(codeRange);

        tableLookup = TableLookup_RU::newParameters(tablenum(LtInvoiceAutoNumberingTable), _lookupCtrl, false);
        tableLookup.parmQuery(query);
        tableLookup.addLookupfield(fieldnum(LtInvoiceAutoNumberingTable, NumberingCode));
        tableLookup.addLookupfield(fieldnum(LtInvoiceAutoNumberingTable, NumberSequenceCode));
        tableLookup.addLookupMethod(tablemethodstr(LtInvoiceAutoNumberingTable, displaySFNumberingName));
        tableLookup.addLookupfield(fieldnum(LtInvoiceAutoNumberingTable, LastTransDate));
        tableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>makeCodeFilter</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to create a set of all the numbering code that is valid for the given module and document type.
    /// </summary>
    /// <param name="_module">
    /// The module for which the numbering code is required.
    /// </param>
    /// <param name="_type">
    /// The document type, invoice or packing slip, for which the numbering code set is required.
    /// </param>
    /// <param name="_retailOnly">
    /// Select only codes marked with retail sign; optional.
    /// </param>
    /// <returns>
    /// A set with all the valid numbering code values.
    /// </returns>
    private static Set makeCodeFilter(DocNumberingModule_W       _module,
                                             LtInvoiceAutoNumberingType _type = LtInvoiceAutoNumberingType::invoice,
                                             boolean                    _retailOnly = false)
    {
        LtInvoiceAutoNumberingTable ltInvoiceAutoNumberingTable;
        UserGroupList               userGroupList;
        Set                         setOfResult = new Set(Types::String);
        boolean                     foundRec;
        boolean                     foundContinue;

        #LOCALMACRO.InitFoundStatus
            foundRec       = false;
            foundContinue  = false;
        #ENDMACRO

        #LOCALMACRO.AddDataToSet
            setOfResult.add(ltInvoiceAutoNumberingTable.NumberingCode);
            foundContinue = (foundContinue || ltInvoiceAutoNumberingTable.SearchContinue);
            foundRec = true;
        #ENDMACRO

        #LOCALMACRO.FieldList
            NumberingCode,
            SearchContinue
        #ENDMACRO

        #InitFoundStatus
        while select #FieldList from ltInvoiceAutoNumberingTable
            where ltInvoiceAutoNumberingTable.SalesPurch          == _module  &&
                  ltInvoiceAutoNumberingTable.AutoNumberingType   == _type    &&
                  ltInvoiceAutoNumberingTable.InvoiceAllGroupUser == LtInvoiceAllGroupUser::User &&
                  ltInvoiceAutoNumberingTable.InvoiceUserGroupId  == curuserid() &&
                  (!_retailOnly || ltInvoiceAutoNumberingTable.ForRetail)
        {
            #AddDataToSet
        }

        if (!foundRec || foundContinue)
        {
            #InitFoundStatus
            while select #FieldList from ltInvoiceAutoNumberingTable
                where ltInvoiceAutoNumberingTable.SalesPurch          == _module   &&
                      ltInvoiceAutoNumberingTable.AutoNumberingType   == _type     &&
                      ltInvoiceAutoNumberingTable.InvoiceAllGroupUser == LtInvoiceAllGroupUser::GroupId &&
                      (!_retailOnly || ltInvoiceAutoNumberingTable.ForRetail)
            join GroupId from userGroupList
                where ltInvoiceAutoNumberingTable.InvoiceUserGroupId  == userGroupList.GroupId &&
                      userGroupList.UserId                            == curuserid()
            {
                #AddDataToSet
            }
        }

        if (!foundRec || foundContinue)
        {
            while select #FieldList from ltInvoiceAutoNumberingTable
                     where ltInvoiceAutoNumberingTable.SalesPurch          ==_module &&
                           ltInvoiceAutoNumberingTable.AutoNumberingType   == _type  &&
                           ltInvoiceAutoNumberingTable.InvoiceAllGroupUser == LtInvoiceAllGroupUser::All &&
                           (!_retailOnly || ltInvoiceAutoNumberingTable.ForRetail)
            {
                #AddDataToSet
            }
        }

        return setOfResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLastDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to update the LastTransDate on which a particular autonumbering was used.
    /// </summary>
    /// <param name="_code">
    /// The NumberingCode that is being used currently.
    /// </param>
    /// <param name="_date">
    /// The date on which the auto numbering was used.
    /// </param>
    public static void updateLastDate(LtDocNumberingCode _code, TransDate _date)
    {
        LtInvoiceAutoNumberingTable autoNumbering;

        update_recordSet autoNumbering setting LastTransDate = _date where autoNumbering.NumberingCode == _code;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>LT,LV</CountryRegionCodes>
	<DeveloperDocumentation>@GLS222413</DeveloperDocumentation>
	<Label>@GLS110692</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>NumberingCode</TitleField1>
	<TitleField2>NumberSequenceCode</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>APARShared</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesPurch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoNumberingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAllGroupUser</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceUserGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastTransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchContinue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberingCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumberingCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displaySFNumberingName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastTransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumberingCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumberingCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPurch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoNumberingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAllGroupUser</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceUserGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastTransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchContinue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ForRetail</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SequenceNumber</Name>
			<Label>@SYS2658</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NumberSequenceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displaySFNumberingName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Settings</Name>
			<Label>@SYS37997</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesPurch</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AutoNumberingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAllGroupUser</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceUserGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchContinue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Using</Name>
			<Label>@SYS28580</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LastTransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AutoNumberingType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>LtInvoiceAutoNumberingType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ForRetail</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Retail</ConfigurationKey>
			<CountryRegionCodes>LT,LV</CountryRegionCodes>
			<Label>@RET3014</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InvoiceAllGroupUser</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>LtInvoiceAllGroupUser</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceUserGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LtInvoiceUserGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>LastTransDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS15992</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NumberingCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LtDocNumberingCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>NumberSequenceCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NumberSequenceCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SalesPurch</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>DocNumberingModule_W</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SearchContinue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS18701</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InvoiceAutoNumberingTypeIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>NumberingCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>UserGroups</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UserGroupInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>InvoiceAllGroupUser</Name>
					<Field>InvoiceAllGroupUser</Field>
					<ValueStr>LtInvoiceAllGroupUser::GroupId</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceUserGroupId</Name>
					<Field>InvoiceUserGroupId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Users</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UserInfo</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InvoiceUserGroupId</Name>
					<Field>InvoiceUserGroupId</Field>
					<RelatedField>id</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>InvoiceAllGroupUser</Name>
					<Field>InvoiceAllGroupUser</Field>
					<ValueStr>LtInvoiceAllGroupUser::User</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>