<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgBundleSlize</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JmgBundleSlize extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes with default bundle slize time from the JmgParameters table.
    /// </summary>
    void initValue()
    {
        super();

        this.BundleSlizeTime = JmgParameters::find().BundleSlizeTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (!this.InventSiteId && !this.ProdUnitId && !this.WrkCtrId)
        {
            ret = checkFailed("@SYS109874");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrkCtrTypeStr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the resource type as a string.
    /// </summary>
    /// <returns>
    /// The resource type as a string if the <c>WrkCtrId</c> field has been completed.
    /// </returns>
    public display WrkCtrTypeDisplay wrkCtrTypeStr()
    {
        WrkCtrTypeDisplay wrkCtrTypeDisplay;

        if (this.WrkCtrId)
        {
            wrkCtrTypeDisplay = enum2str(WrkCtrTable::find(this.WrkCtrId).WrkCtrType);
        }

        return wrkCtrTypeDisplay;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAllocationKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>JmgBundleSlize</c> table.
    /// </summary>
    /// <param name="_wrkCtrId">
    /// The ID of the resource on which to base the search.
    /// </param>
    /// <param name="_asOfDate">
    /// The date on which to limit the seach.
    /// </param>
    /// <returns>
    /// The <c>JmgJobTypeEnum</c> enumeration value that states the job type.
    /// </returns>
    public static JmgJobTypeEnum findAllocationKey(WrkCtrId _wrkCtrId, date _asOfDate)
    {
        WrkCtrTable                 wrkCtrTable;
        WrkCtrResourceGroup         wrkCtrResourceGroup;
        ProdUnitTable               prodUnitTable;
        JmgBundleSlize              ret;

        wrkCtrTable = WrkCtrTable::find(_wrkCtrId);
        if (wrkCtrTable)
        {
            // Search directly on the individual resource or the group
            select firstonly ret
                where ret.WrkCtrId  == _wrkCtrId;

            if (ret)
            {
                return ret.BundleAllocation + 1;
            }

            // Search on the group
            wrkCtrResourceGroup = WrkCtrTable::resourceGroup(_wrkCtrId, _asOfDate, _asOfDate);
            if (wrkCtrTable.IsIndividualResource)
            {
                select firstonly ret
                    where ret.WrkCtrId  == wrkCtrResourceGroup.WrkCtrId;

                if (ret)
                {
                    return ret.BundleAllocation + 1;
                }
            }

            // Search on production unit
            prodUnitTable = ProdUnitTable::find(wrkCtrResourceGroup.ProdUnitId);
            if (prodUnitTable)
            {
                select firstonly ret
                    where ret.ProdUnitId    == prodUnitTable.ProdUnitId
                    && !ret.WrkCtrId;
                if (ret)
                {
                    return ret.BundleAllocation + 1;
                }
            }

            // Search on site
            select firstonly ret
                where ret.InventSiteId  == wrkCtrResourceGroup.SiteId
                && !ret.WrkCtrId
                && !ret.ProdUnitId;

            if (ret)
            {
                return ret.BundleAllocation + 1;
            }
        }

        return JmgProdParameters::find().BundleAllocation + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>JmgJob</ConfigurationKey>
	<DeveloperDocumentation>@SYS317302</DeveloperDocumentation>
	<Label>@SYS38473</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>WrkCtrId</TitleField1>
	<TitleField2>ProdUnitId</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>GroupCtrIdx</ClusteredIndex>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>GroupCtrIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProdUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WrkCtrId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BundleSlizeTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProdUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WrkCtrId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProdUnitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WrkCtrId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BundleAllocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BundleSlizeTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BundleAllocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>JmgStdBundleTypeEnum</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BundleSlizeTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS38852</Label>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProdUnitId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdUnitId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WrkCtrId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>WrkCtrIdBase</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>GroupCtrIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventSiteId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ProdUnitId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WrkCtrId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventSiteId</Name>
					<Field>InventSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SiteIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProdUnitTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProdUnitTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProdUnitId</Name>
					<Field>ProdUnitId</Field>
					<RelatedField>ProdUnitId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProdUnitIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WrkCtrTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WrkCtrTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WrkCtrId</Name>
					<Field>WrkCtrId</Field>
					<RelatedField>WrkCtrId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>WrkCtrIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>