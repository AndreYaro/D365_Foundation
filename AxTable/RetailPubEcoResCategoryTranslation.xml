<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPubEcoResCategoryTranslation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailPubEcoResCategoryTranslation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>publishChannel</Name>
				<Source><![CDATA[
/// <summary>
    /// Populates publishing data for the specified channel in the <c>RetailPubEcoResCategoryTranslation</c> table.
    /// </summary>
    /// <param name="_channelId">
    /// Id of the channel to publish
    /// </param>
    public static void publishChannel(RefRecId _channelId)
    {
        RetailChannelTable channel;
        EcoResCategoryTranslation categoryTranslation;
        EcoResCategory category;
        RetailPubEcoResCategoryTranslation pubCategoryTranslation, foundPubCategoryTranslation;
        EcoResCategoryHierarchyId channelCategoryHierarchyId = RetailChannelTable::findCategoryHierarchyByChannel(_channelId);

        // Find the channel
        channel = RetailChannelTable::findByRecId(_channelId);

        if (channel && channelCategoryHierarchyId)
        {
            if (RetailSharedParameters::find().ExcludeCategoriesWithNoAssortedProducts == NoYes::No)
            {
                ttsBegin;

                // Delete the published category translation which has been deleted
                delete_from pubCategoryTranslation
                    where pubCategoryTranslation.Channel == _channelId
                notExists join categoryTranslation
                    where categoryTranslation.RecId == pubCategoryTranslation.OriginId;

                // Delete the published category translation which is no longer associated with the channel
                delete_from pubCategoryTranslation
                    where pubCategoryTranslation.Channel == _channelId
                exists join category
                    where category.RecId == pubCategoryTranslation.Category
                       && category.CategoryHierarchy != channelCategoryHierarchyId;

                // Update
                update_recordSet pubCategoryTranslation
                setting
                    OriginRecVersion = categoryTranslation.RecVersion,
                    Description = categoryTranslation.Description,
                    FriendlyName = categoryTranslation.FriendlyName,
                    LanguageId = categoryTranslation.LanguageId,
                    SearchText = categoryTranslation.SearchText
                    where pubCategoryTranslation.Channel == _channelId
                join categoryTranslation
                    where categoryTranslation.RecId == pubCategoryTranslation.OriginId &&
                          pubCategoryTranslation.OriginRecVersion != categoryTranslation.recVersion;

                // Insert
                insert_recordset pubCategoryTranslation
                    (OriginId, OriginRecVersion, Channel, Category, Description, FriendlyName, LanguageId, SearchText)
                select RecId, RecVersion, _channelId, Category, Description, FriendlyName, LanguageId, SearchText
                    from categoryTranslation
                join category
                    where category.RecId == categoryTranslation.Category
                       && category.CategoryHierarchy == channelCategoryHierarchyId
                notExists join foundPubCategoryTranslation
                    where foundPubCategoryTranslation.Channel == _channelId
                       && foundPubCategoryTranslation.Category == categoryTranslation.Category
                       && foundPubCategoryTranslation.LanguageId == categoryTranslation.LanguageId;

                ttsCommit;
            }
            else
            {
                RetailPubEcoResCategoryTranslation::publishCategoryTranslationsHavingAssortedProductsToChannel(_channelId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>publishCategoryTranslationsHavingAssortedProductsToChannel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates only category translations which have assorted products for the specified channel in the <c>RetailPubEcoResCategory</c> table.
    /// </summary>
    /// <param name="_channelId">
    /// Id of the channel to publish
    /// </param>
    internal static void publishCategoryTranslationsHavingAssortedProductsToChannel(RefRecId _channelId)
    {
        EcoResCategory ecoResCategory;
        EcoResProductCategory productCategory;
        EcoResCategoryTranslation categoryTranslation;
        RetailAssortmentTable retailAssortmentTable;
        RetailPubEcoResCategoryTranslation pubCategoryTranslation, foundPubCategoryTranslation;
        RetailChannelAssortedProductView channelAssortedProductView;
        RetailCategoryContainmentLookup categoryContainmentLookup;
        RetailCategoryContainmentLookupTmp categoriesContainsProductTmp, categoryContainmentLookupProductTmp;
        EcoResCategoryHierarchyId channelCategoryHierarchyId = RetailChannelTable::findCategoryHierarchyByChannel(_channelId);
        RetailChannelTable retailChannelTable = RetailChannelTable::findByRecId(_channelId);

        ttsbegin;

        // Get categories which are directly linked to the assorted products
        insert_recordset categoriesContainsProductTmp (ContainedCategory)
        select RecId from ecoResCategory
            group by ecoResCategory.RecId
            where ecoResCategory.CategoryHierarchy == channelCategoryHierarchyId
                && ecoResCategory.IsActive == NoYes::Yes
            exists join categoryContainmentLookup
                where categoryContainmentLookup.ContainedCategory == ecoResCategory.RecId
            exists join productCategory
                where productCategory.Category == categoryContainmentLookup.ContainedCategory
            exists join channelAssortedProductView
                where channelAssortedProductView.ProductID == productCategory.Product
                    && channelAssortedProductView.OMOperatingUnitId == retailChannelTable.OMOperatingUnitID
            exists join retailAssortmentTable
                where retailAssortmentTable.RecId == channelAssortedProductView.AssortmentRecId
                    && retailAssortmentTable.Status == RetailAssortmentStatusType::Published;

        // Get all parent categories of categories which contain products assorted (It also brings the contained categories).
        insert_recordset categoryContainmentLookupProductTmp (Category)
        select RecId from ecoResCategory
            group by ecoResCategory.RecId
            where ecoResCategory.CategoryHierarchy == channelCategoryHierarchyId
                && ecoResCategory.IsActive == NoYes::Yes
            exists join categoryContainmentLookup
                where categoryContainmentLookup.Category == ecoResCategory.RecId
            exists join categoriesContainsProductTmp
                where categoriesContainsProductTmp.ContainedCategory == categoryContainmentLookup.ContainedCategory;

        // Delete the published category translations which do not have assorted products
        delete_from pubCategoryTranslation
            where pubCategoryTranslation.Channel == _channelId
        notExists join categoryContainmentLookupProductTmp
            where categoryContainmentLookupProductTmp.Category == pubCategoryTranslation.Category
                && categoryContainmentLookupProductTmp.Category != 0;

        // Update
        update_recordSet pubCategoryTranslation
        setting
            OriginRecVersion = categoryTranslation.RecVersion,
            Description = categoryTranslation.Description,
            FriendlyName = categoryTranslation.FriendlyName,
            LanguageId = categoryTranslation.LanguageId,
            SearchText = categoryTranslation.SearchText
            where pubCategoryTranslation.Channel == _channelId
        join categoryTranslation
            where categoryTranslation.RecId == pubCategoryTranslation.OriginId
                && pubCategoryTranslation.OriginRecVersion != categoryTranslation.recVersion;

        // Insert
        insert_recordset pubCategoryTranslation
            (OriginId, OriginRecVersion, Channel, Category, Description, FriendlyName, LanguageId, SearchText)
        select RecId, RecVersion, _channelId, Category, Description, FriendlyName, LanguageId, SearchText
            from categoryTranslation
        join ecoResCategory
            where ecoResCategory.RecId == categoryTranslation.Category
                && ecoResCategory.CategoryHierarchy == channelCategoryHierarchyId
            exists join categoryContainmentLookupProductTmp
                where categoryContainmentLookupProductTmp.Category == ecoResCategory.RecId
        notExists join foundPubCategoryTranslation
            where foundPubCategoryTranslation.Channel == _channelId
                && foundPubCategoryTranslation.Category == categoryTranslation.Category
                && foundPubCategoryTranslation.LanguageId == categoryTranslation.LanguageId;

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET490325</DeveloperDocumentation>
	<Label>@SYS300453</Label>
	<TitleField1>Category</TitleField1>
	<TitleField2>LanguageId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>CategoryLanguageIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Merchandising</Modules>
	<ReplacementKey>CategoryLanguageIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FriendlyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchText</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Channel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS6047</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FriendlyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchText</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Channel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginRecVersion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS130898</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FriendlyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchText</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Category</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategoryId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Channel</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategoryDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FriendlyName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategoryFriendlyName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageIdAll</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OriginId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOriginId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>OriginRecVersion</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOriginRecVersion</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SearchText</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResCategorySearchText</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CategoryLanguageIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Channel</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Category</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LanguageId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResCategory</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>EcoResCategory_EcoResCategoryTranslation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Category</Name>
					<Field>Category</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResCategoryTranslation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResCategoryTranslation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OriginId</Name>
					<Field>OriginId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LanguageTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>EcoResCategoryTranslation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LanguageId</Name>
					<SourceEDT>LanguageIdAll</SourceEDT>
					<Field>LanguageId</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailPubRetailChannelTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailPubRetailChannelTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Channel</Name>
					<Field>Channel</Field>
					<RelatedField>OriginId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>OriginIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>