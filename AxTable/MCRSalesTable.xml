<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRSalesTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRSalesTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        MCROrderEventTable mcrOrderEventTable;
        if (this.SalesTable)
        {
            super();

            // Write the FTC exemption order event
            if (this.ftcExempt)
            {
                mcrOrderEventTable.insertFTCEvent(SalesTable::findRecId(this.SalesTable).SalesId,
                                              MCROrderEventType::FTCExemptOn);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>type</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>SalesTableType</c> object for the related
    /// <c>SalesTable</c> record.
    /// </summary>
    /// <returns>
    /// A <c>SalesTableType</c> object.
    /// </returns>
    public SalesTableType type()
    {
        SalesTable salesTable;

        salesTable = this.SysExtensionSerializerExtensionMap::getBaseTable();

        return SalesTableType::construct(salesTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        MCROrderEventTable mcrOrderEventTable;
        MCRSalesTable mcrSalesTable_Orig;

        if (this.SalesTable)
        {
            mcrSalesTable_Orig = this.orig();
            // only update if the FK is valid
            super();

            // Write the FTC exemption order event
            if (this.ftcExempt != mcrSalesTable_Orig.ftcExempt)
            {
                if (this.ftcExempt)
                {
                    mcrOrderEventTable.insertFTCEvent(SalesTable::findRecId(this.SalesTable).SalesId, 
                        MCROrderEventType::FTCExemptOn);
                                                    
                }
                else
                {
                    mcrOrderEventTable.insertFTCEvent(SalesTable::findRecId(this.SalesTable).SalesId,
                        MCROrderEventType::FTCExemptOff);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = true;

        switch (_fieldIdToCheck)
        {
            // Check source code
            case(fieldNum(MCRSalesTable, SourceId)):
                ret = MCRSourceCodeSetup::validateSourceCode(this.SourceId);
                break;
        }

        ret = ret && super(_fieldIdToCheck);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldServer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates a changed field on the server side.
    /// </summary>
    /// <param name="_fieldId">
    /// The field ID of the changed field.
    /// </param>
    /// <returns>
    /// true if the validation succeeded; otherwise, false.
    /// </returns>
    public boolean validateFieldServer(FieldId _fieldId)
    {
        boolean            ok;
        SalesTableType     salesTableType;

        salesTableType = this.type();
        ok = salesTableType.validateField(_fieldId, tableNum(MCRSalesTable));

        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMCRSalesTableUsed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the table can and needs to be written.
    /// </summary>
    /// <returns>
    /// true if the table needs to be written; otherwise, false.
    /// </returns>
    public boolean validateMCRSalesTableUsed()
    {
        if (this.CatalogUpSellShown
            || this.ContinuityChild
            || this.ContinuityOrder
            || this.ftcExempt
            || this.InstallmentOrderSubmitted
            || this.OutOfBalanceReleased != MCROutOfBalanceReleaseType::None
            || this.PaymOutOfBalance != MCRPaymOutOfBalance::None
            || this.PostageGroupID
            || this.PriceOverride
            || this.PromptedForInstBillingOption
            || this.ReceiptDate
            || this.SmmTMCallListId
            || this.soAllocPriority != MCRSOAllocPriority::AllocationPriority10
            || this.SourceId)
        {
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = true;

        if (this.SalesTable)
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>MCRSalesTable</c> using the passed record ID of the <c>SalesTable</c>.
    /// </summary>
    /// <param name="_salesTableRecId">
    /// A record ID of a <c>SalesTable</c> record used to find the <c>MCRSalesTable</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A <c>boolean</c> used to determine whether or not a record should be selected for update; optional.
    /// </param>
    /// <returns>
    /// The <c>MCRSalesTable</c> record found.
    /// </returns>
    public static MCRSalesTable find(MCRSalesTableRefRecId _salesTableRecId,
                                     boolean _forUpdate = false)
    {
        MCRSalesTable mcrSalesTable;

        if (_salesTableRecId)
        {
            mcrSalesTable.selectForUpdate (_forUpdate);

            select firstonly mcrSalesTable
                where mcrSalesTable.SalesTable == _salesTableRecId;
        }
        return mcrSalesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSalesId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>MCRSalesTable</c> using the passed sales ID of the <c>SalesTable</c>.
    /// </summary>
    /// <param name="_salesId">
    /// A sales ID of a <c>SalesTable</c> record used to find the <c>MCRSalesTable</c> record.
    /// </param>
    /// <param name="_forUpdate">
    /// A <c>boolean</c> used to determine whether or not a record should be selected for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// A <c>ConcurrencyModel</c> value that specifies the locking scheme; optional.
    /// </param>
    /// <returns>
    /// The <c>MCRSalesTable</c> record found.
    /// </returns>
    public static MCRSalesTable findSalesId(SalesId          _salesId,
                                            boolean          _forUpdate = false,
                                            ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        MCRSalesTable  mcrSalesTable;
        SalesTable salesTable;

        if (_salesId)
        {
            if (_forUpdate)
            {
                mcrSalesTable.selectForUpdate (_forUpdate);
                if (_concurrencyModel != ConcurrencyModel::Auto)
                {
                    mcrSalesTable.concurrencyModel(_concurrencyModel);
                }
            }
            mcrSalesTable.selectLocked    (_forUpdate);

            select firstonly mcrSalesTable
                exists join salesTable
                where salesTable.RecId == mcrSalesTable.SalesTable
                    && salesTable.SalesId == _salesId;
        }

        return mcrSalesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOrderOutOfBalanceVerified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the order is verified for not being out of balance.
    /// </summary>
    /// <returns>true if the order is verified for not being out of balance; otherwise, false.</returns>
    public boolean isOrderOutOfBalanceVerified()
    {
        return this.OutOfBalanceReleased == MCROutOfBalanceReleaseType::Verified;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MCRCallCenter</ConfigurationKey>
	<DeveloperDocumentation>@SYS124484</DeveloperDocumentation>
	<Label>@MCR:CallCenterSalesOrderLabel</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>SourceId</TitleField1>
	<TitleField2>ReceiptDate</TitleField2>
	<AllowArchival>Yes</AllowArchival>
	<AllowRetention>Yes</AllowRetention>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>SalesTableIdx</ClusteredIndex>
	<Modules>TransactionsAndOrders</Modules>
	<ReplacementKey>SalesTableIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CatalogUpSellShown</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FTCExempt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SmmTMCallListId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PromptedForInstBillingOption</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SOAllocPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceOverride</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OutOfBalanceReleased</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymOutOfBalance</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CatalogUpSellShown</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FTCExempt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SmmTMCallListId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PromptedForInstBillingOption</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SOAllocPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceOverride</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OutOfBalanceReleased</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymOutOfBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContinuityChild</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContinuityLineEval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContinuityOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstallmentOrderSubmitted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostageGroupID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CatalogUpSellShown</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@MCR40355</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContinuityChild</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRContinuityChildOrder</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContinuityLineEval</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRContinuityLineEval</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContinuityOrder</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRContinuityOrder</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FTCExempt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRFTCExempt</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InstallmentOrderSubmitted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@MCR30660</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OutOfBalanceReleased</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@MCR24826</Label>
			<EnumType>MCROutOfBalanceReleaseType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PaymOutOfBalance</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRPaymOutOfBalance</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostageGroupID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRPostageGroupID</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PriceOverride</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@MCR12094</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PromptedForInstBillingOption</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRPromptedForInstBillingOption</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ReceiptDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DlvDate</ExtendedDataType>
			<Label>@SYS30005</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesTable</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>MCRSalesTableRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SmmTMCallListId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>smmTMCallListID</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SOAllocPriority</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@MCR12067</Label>
			<EnumType>MCRSOAllocPriority</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SourceId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRSourceIdForm</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS11258</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SalesTableIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SalesTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerExtensionMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>BaseRecId</MapField>
					<MapFieldTo>SalesTable</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>MCRSourceCodeSetup</Name>
			<Cardinality>ZeroOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>MCRSourceCodeSetup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceId</Name>
					<SourceEDT>MCRSourceID</SourceEDT>
					<Field>SourceId</Field>
					<RelatedField>SourceID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SourceID</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PriceDiscGroup_MCRPostageGroupID</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PriceDiscGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PriceDiscGroup1</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>MCRPostageGroupId</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostageGroupID</Name>
					<Field>PostageGroupID</Field>
					<RelatedField>GroupId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Type_Extern</Name>
					<RelatedField>Type</RelatedField>
					<ValueStr>PriceGroupType::MCRPostageDisc</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>Module_Extern</Name>
					<RelatedField>Module</RelatedField>
					<ValueStr>ModuleInventCustVend::Cust</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesTable</Name>
					<Field>SalesTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SmmTMCallListId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>smmTMCallListGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SmmTMCallListId</Name>
					<SourceEDT>smmTMCallListID</SourceEDT>
					<Field>SmmTMCallListId</Field>
					<RelatedField>CallListID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CallListdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>