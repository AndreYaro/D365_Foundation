<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ImportedContentPerItem_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ImportedContentPerItem_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves a friendly caption for the current record.
    /// </summary>
    /// <returns>
    ///     A string caption.
    /// </returns>
    public str caption()
    {
        str ret;
        ;

        ret = super();

        if (this.RecId)
        {
            ret = strFmt("@SYS12836" + ': %1, %2, %3', this.ItemId, this.Month, this.Year);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
        public void initValue()
    {
        super();

        this.ImportedContentPercentage  = 0;
        this.TaxationOrigin             = FITaxationOrigin_BR::NationalLessThan40ImportContent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the name of the item.
    /// </summary>
    /// <returns>
    ///     A string with the name of the item.
    /// </returns>
    public display ItemName itemName()
    {
        return InventTable::find(this.ItemId).itemName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Executes when a field is modified on a <c>ImportedContentPerItem_BR</c> record.
    /// </summary>
    /// <param name="_fieldId">
    ///     The ID of the field that has been modified.
    /// </param>
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        if (fieldNum(ImportedContentPerItem_BR, ImportedContentPercentage) == _fieldId)
        {
            if (this.ImportedContentPercentage > 70)
            {
                this.TaxationOrigin = FITaxationOrigin_BR::NationalGreaterThan70ImportContent;
            }
            else if (this.ImportedContentPercentage <= 40)
            {
                this.TaxationOrigin = FITaxationOrigin_BR::NationalLessThan40ImportContent;
            }
            else
            {
                this.TaxationOrigin = FITaxationOrigin_BR::NationalImportContent;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFciNumber</Name>
				<Source><![CDATA[
        private boolean validateFciNumber()
    {
        boolean                                 ret = true;
        boolean                                 matchResult;
        System.Text.RegularExpressions.Regex    guidRegEx;
        System.Text.RegularExpressions.Match    guidRegExMatch;
        #define.GuidRegExPattern('[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}')
        ;

        new InteropPermission(InteropKind::ClrInterop).assert();

        guidRegEx = new System.Text.RegularExpressions.Regex(#GuidRegExPattern, System.Text.RegularExpressions.RegexOptions::IgnoreCase);

        guidRegExMatch = guidRegEx.Match(this.FCINumber);
        matchResult = guidRegExMatch.get_Success();

        if (!matchResult)
        {
            ret = checkFailed("@SYS4004305");
        }

        guidRegEx       = null;
        guidRegExMatch  = null;

        CodeAccessPermission::revertAssert();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
        public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(ImportedContentPerItem_BR, ItemId):
                ret = ret && this.validateItemType();
                break;

            case fieldNum(ImportedContentPerItem_BR, Year):
                ret = ret && this.validateYearPeriod();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateItemType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if Item is not set as service item
    /// </summary>
    /// <returns>
    /// true if item type is not set as service
    /// </returns>
    private boolean validateItemType()
    {
        boolean ret = true;

        if (InventTable::find(this.ItemId).ItemType == ItemType::Service)
        {
            ret = checkFailed("@SYS4004306");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean ret;
        ;

        ret = super();

        if (this.FCINumber)
        {
            ret = this.validateFciNumber() && ret;
        }

        if (this.ImportedContentPercentage > 100)
        {
            ret = checkFailed("@SYS4004307");
        }

         ret = this.validateItemType() && ret;
         ret = this.validateYearPeriod() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateYearPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates  year period
    /// </summary>
    /// <returns>
    /// true if is valid; otherwise, false
    /// </returns>
    private boolean validateYearPeriod()
    {
        boolean ret = true;

        if ((this.Year >= year(maxdate())
           || this.Year <= year(datenull()))
           || this.Year < 0)
        {
            ret = checkFailed(strFmt("@GLS60369", this.Year));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFciByItemAndDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Searches for the correctly "Taxation Origin" and "FCI Number" 2 months before the document date
    /// </summary>
    /// <param name="_fiscalEstablishmentRecId">
    /// The RecId of the fiscal establishment to be searched
    /// </param>
    /// <param name="_itemId">
    ///  Item ID to be searched
    /// </param>
    /// <param name="_documentDate">
    /// Document date to be searched
    /// </param>
    /// <returns>
    /// Return the Imported Content record
    /// </returns>
    public static ImportedContentPerItem_BR getFciByItemAndDate(FiscalEstablishmentRecId_BR _fiscalEstablishmentRecId, ItemId _itemId, InvoiceDate _documentDate)
    {
        ImportedContentPerItem_BR   importedContent;
        DocumentDate                dateToStart;
        MonthsOfYear                monthToStart;
        Yr                          yearToStart;
        #define.NumberOfMonthsThatshouldNotBeConsiderToStartSearching(2)

        dateToStart = dateMthFwd(_documentDate, -#NumberOfMonthsThatshouldNotBeConsiderToStartSearching);

        monthToStart = mthofyr(dateToStart);
        yearToStart  = year(dateToStart);

        select firstonly importedContent
            order by importedContent.itemId, importedContent.Year desc, importedContent.Month  desc
            where importedContent.FiscalEstablishment_BR == _fiscalEstablishmentRecId
               && importedContent.ItemId == _itemId
               && (importedContent.Month <= monthToStart && importedContent.Year == yearToStart 
                    || importedContent.Year < yearToStart)
            && importedContent.FCINumber != '';

        return importedContent;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4004318</DeveloperDocumentation>
	<FormRef>ImportedContentPerItem_BR</FormRef>
	<Label>@SYS4004304</Label>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>FCINumber</TitleField2>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>PeriodIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Month</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Year</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FCINumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Month</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Year</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ImportInformation</Name>
			<Label>@SYS4004303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ImportedContentPercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InterstateOutgoingOperationsAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ImportedPortionAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxationOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FCINumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Period</Name>
			<Label>@SYS40</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Year</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Month</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FCINumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FCINumber_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FiscalEstablishment_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FiscalEstablishmentRecId_BR</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ImportedContentPercentage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ImportedContentPercentage_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ImportedPortionAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ImportedPortionAmount_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InterstateOutgoingOperationsAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InterstateOutgoingOperationsAmount_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Month</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>MonthsOfYear</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxationOrigin</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>FITaxationOrigin_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Year</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Year</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PeriodIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Month</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Year</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>FiscalEstablishment_BR</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>FiscalEstablishment_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalEstablishment_BR</Name>
					<Field>FiscalEstablishment_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>