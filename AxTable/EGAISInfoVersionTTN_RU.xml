<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EGAISInfoVersionTTN_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EGAISInfoVersionTTN_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>branch</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds and returns a record in the <c>Branches_RU</c> table corresponding to the current <c>EGAISInfoVersionTTN_RU</c> record.
    /// </summary>
    /// <returns>
    ///    Record in the <c>Branches_RU</c> table corresponding to the current <c>EGAISInfoVersionTTN_RU</c> record.
    /// </returns>
    public Branches_RU branch()
    {
        return Branches_RU::find(this.BranchId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeDeleted</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the current <c>EGAISInfoVersionTTN_RU</c> record can be deleted.
    /// </summary>
    /// <returns>
    ///    true if the the current <c>EGAISInfoVersionTTN_RU</c> record can be deleted; otherwise, false.
    /// </returns>
    public boolean canBeDeleted()
    {
        return this.RecId
        && this.StatusIssue == EGAISInfoVersionTTNStatusIssue_RU::Created
        && !EGAISOutgoingDocument_RU::existSourceRecId(this.RecId, EGAISDocumentType_RU::InfoVersionTTN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canXmlBeCreated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines if the outgoing XML document can be created for the current <c>EGAISInfoVersionTTN_RU</c> record.
    /// </summary>
    /// <returns>
    ///    true, if the outgoing XML document can be created for the current <c>EGAISInfoVersionTTN_RU</c> record; otherwise, false.
    /// </returns>
    public boolean canXmlBeCreated()
    {
        return this.RecId
        && (   (   this.StatusIssue == EGAISInfoVersionTTNStatusIssue_RU::Created
                || this.StatusIssue == EGAISInfoVersionTTNStatusIssue_RU::AcceptanceError)
            // there are no unsent outgoing documents:
            && (select firstOnly EGAISOutgoingDocument_RU
                    where EGAISOutgoingDocument_RU.SourceRecId == this.RecId
                       && EGAISOutgoingDocument_RU.DocumentType == EGAISDocumentType_RU::InfoVersionTTN
                       && EGAISOutgoingDocument_RU.Status != EGAISOutgoingDocumentStatus_RU::Sent).RecId == 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
        this.StatusIssue = EGAISInfoVersionTTNStatusIssue_RU::Created;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByReplyId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds a record in the <c>EGAISInfoVersionTTN_RU</c> table based on the EGAIS reply identifier.
    /// </summary>
    /// <param name="_replyId">
    ///    EGAIS reply identifier.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EGAISInfoVersionTTN_RU</c> table.
    /// </returns>
    public static EGAISInfoVersionTTN_RU findByReplyId(
        EGAISReplyId_RU _replyId,
        boolean _forUpdate = false)
    {
        EGAISInfoVersionTTN_RU  infoVersionTTN;

        if (_replyId)
        {
            if (_forUpdate)
            {
                infoVersionTTN.selectForUpdate(_forUpdate);
            }

            select firstonly infoVersionTTN
            index hint ReplyIdx
            where infoVersionTTN.ReplyId == _replyId;
        }

        return infoVersionTTN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    static EGAISInfoVersionTTN_RU findRecId(RefRecId _recId, boolean _forUpdate = false)
    {
        EGAISInfoVersionTTN_RU  infoVersionTTN;

        if (_recId)
        {
            infoVersionTTN.selectForUpdate(_forUpdate);

            select firstonly infoVersionTTN
                where infoVersionTTN.RecId == _recId;
        }

        return infoVersionTTN;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@EGAIS:TheEgaisinfoversionttn_ruTableContainsInformationA</DeveloperDocumentation>
	<FormRef>EGAISInfoVersionTTN_RU</FormRef>
	<Label>@EGAIS:EgaisBolVersionNotifications</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>BranchId</TitleField1>
	<TitleField2>WaybillVersion</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>EGAIS</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusIssue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillVersion</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Details</Name>
			<Label>@SYS318405</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusIssue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>EGAIS</Name>
			<Label>@EGAIS:Egais</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReplyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaybillVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentVersion</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StatusIssue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BranchId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>BranchId_RU</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DocumentVersion</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>EGAISDocumentVersion_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReplyId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>EGAISReplyId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>StatusIssue</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>EGAISInfoVersionTTNStatusIssue_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WaybillVersion</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>EGAISWaybillVersion_RU</ExtendedDataType>
			<EnumType>EGAISDocumentVersion_RU</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BranchIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BranchId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ReplyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ReplyId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Branches_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Branches_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BranchId</Name>
					<Field>BranchId</Field>
					<RelatedField>BranchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>