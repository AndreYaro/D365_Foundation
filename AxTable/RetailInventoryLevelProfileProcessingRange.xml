<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailInventoryLevelProfileProcessingRange</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailInventoryLevelProfileProcessingRange extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();

        if (this.LowerBoundExclusive >= this.UpperBoundInclusive)
        {
            return checkFailed("@RetailInventory:InventoryLevelProfileRangeInvalidBounds");
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayLowerBound</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts lower bound value between real and string.
    /// The value is displayed as string on UI but stored as real in DB.
    /// </summary>
    /// <param name = "_set">
    /// A Boolean value that indicates whether to set the value of <parameref name="_lowerBoundStr" /> parameter to LowerBoundExclusive field.
    /// </param>
    /// <param name = "_lowerBoundStr">Lower bound string displayed on UI.</param>
    /// <returns>Lower bound string.</returns>
    public edit str displayLowerBound(boolean _set, str _lowerBoundStr)
    {
        if (_set)
        {
            this.LowerBoundExclusive = str2Num(_lowerBoundStr);
            return _lowerBoundStr;
        }
        else if (this.LowerBoundExclusive == RetailInventoryLevelProfileHelper::OutOfStockLevelLowerBound)
        {
            return "@RetailInventory:InventoryLevelProfileRangeOutOfStockLevelLowerBound";
        }
        else
        {
            return num2Str(this.LowerBoundExclusive, 0, 2, 1, 2);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayUpperBound</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts upper bound value between real and string.
    /// The value is displayed as string on UI but stored as real in DB.
    /// </summary>
    /// <param name = "_set">
    /// A Boolean value that indicates whether to set the value of <parameref name="_upperBoundStr" /> parameter to UpperBoundInclusive field.
    /// </param>
    /// <param name = "_upperBoundStr">Upper bound string displayed on UI.</param>
    /// <returns>Upper bound string.</returns>
    public edit str displayUpperBound(boolean _set, str _upperBoundStr)
    {
        if (_set)
        {
            this.UpperBoundInclusive = str2Num(_upperBoundStr);
            return _upperBoundStr;
        }
        else if (this.UpperBoundInclusive == RetailInventoryLevelProfileHelper::AvailableLevelUpperBound)
        {
            return "@RetailInventory:InventoryLevelProfileRangeAvailableLevelUpperBound";
        }
        else
        {
            return num2Str(this.UpperBoundInclusive, 0, 2, 1, 2);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RetailInventory:InventoryLevelProfileProcessingRangeDeveloperDocumentation</DeveloperDocumentation>
	<Label>@RetailInventory:InventoryLevelProfileProcessingRange</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>ProfileCodeIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<Modules>Retail</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProfileId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInventoryLevelProfileId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>UpperBoundInclusive</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInventoryLevelProfileRangeBound</ExtendedDataType>
			<HelpText>@RetailInventory:InventoryLevelProfileRangeUpperBoundInclusiveHelpText</HelpText>
			<Label>@RetailInventory:InventoryLevelProfileRangeUpperBoundInclusive</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LowerBoundExclusive</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInventoryLevelProfileRangeBound</ExtendedDataType>
			<HelpText>@RetailInventory:InventoryLevelProfileRangeLowerBoundExclusiveHelpText</HelpText>
			<Label>@RetailInventory:InventoryLevelProfileRangeLowerBoundExclusive</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Label</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInventoryLevelProfileRangeLabel</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Code</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInventoryLevelProfileRangeCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RetailInventoryLevelProfileRangeRecId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProfileCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProfileId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Code</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>RetailInventoryLevelProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RetailInventoryLevelProfile</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProfileId</Name>
					<Field>ProfileId</Field>
					<RelatedField>ProfileId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RetailInventoryLevelProfileRange</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailInventoryLevelProfileRange</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailInventoryLevelProfileRangeRecId</Name>
					<Field>RetailInventoryLevelProfileRangeRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>