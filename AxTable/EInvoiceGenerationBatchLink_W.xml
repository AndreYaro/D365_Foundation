<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceGenerationBatchLink_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This table contains all links between electronic invoices and electronic report jobs.
/// </summary>
public class EInvoiceGenerationBatchLink_W extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>EInvoiceGenerationBatchLink</c> table.
    /// </summary>
    /// <param name = "_runJobId"> Electronic reporting job's record indentificator.</param>
    /// <param name = "_tableId"> Reference table identificator.</param>
    /// <param name = "_recId"> Reference record identificator.</param>
    /// <param name = "_dataAreaId"> Reference data area identificator; optional.</param>
    /// <param name = "_forupdate"> A boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>Returns the found <c>EInvoiceGenerationBatchLink</c> record.</returns>
    public static EInvoiceGenerationBatchLink_W find(
        RefRecId _runJobId,
        RefTableId _tableId,
        RefRecId _recId,
        DataAreaId _dataAreaId = curExt(),
        boolean _forupdate = false)
    {
        EInvoiceGenerationBatchLink_W invoiceGenerationBatchLink;

        if (_runJobId && _tableId && _recId && _dataAreaId)
        {
            invoiceGenerationBatchLink.selectForUpdate(_forupdate);

            select firstonly invoiceGenerationBatchLink
                where invoiceGenerationBatchLink.RunJobId == _runJobId
                    && invoiceGenerationBatchLink.RefDataAreaId == _dataAreaId
                    && invoiceGenerationBatchLink.RefTableId == _tableId
                    && invoiceGenerationBatchLink.RefRecID == _recId;
        }

        return invoiceGenerationBatchLink;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// The function determines whether the <c>EInvoiceGenerationBatchLink</c> record exists or not.
    /// </summary>
    /// <param name = "_runJobId"> Electronic reporting job's record indentificator.</param>
    /// <param name = "_tableId"> Reference table identificator.</param>
    /// <param name = "_recId"> Reference record identificator.</param>
    /// <param name = "_dataAreaId"> Reference data area identificator; optional.</param>
    /// <returns>Returns true if <c>EInvoiceGenerationBatchLink</c> record exist and false else.</returns>
    public static boolean exist(
        RefRecId _runJobId,
        RefTableId _tableId,
        RefRecId _recId,
        DataAreaId _dataAreaId = curExt())
    {
        EInvoiceGenerationBatchLink_W invoiceGenerationBatchLink;

        if (_runJobId && _tableId && _recId && _dataAreaId)
        {
            select firstonly RecId from invoiceGenerationBatchLink
                where invoiceGenerationBatchLink.RunJobId == _runJobId
                    && invoiceGenerationBatchLink.RefDataAreaId == _dataAreaId
                    && invoiceGenerationBatchLink.RefTableId == _tableId
                    && invoiceGenerationBatchLink.RefRecID == _recId;
        }

        return invoiceGenerationBatchLink.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// The function find or create a <c>EInvoiceGenerationBatchLink</c> record.
    /// </summary>
    /// <param name = "_runJobId"> Electronic reporting job's record indentificator.</param>
    /// <param name = "_tableId"> Reference table identificator.</param>
    /// <param name = "_recId"> Reference record identificator.</param>
    /// <param name = "_dataAreaId"> Reference data area identificator; optional.</param>
    public static EInvoiceGenerationBatchLink_W findOrCreate(
        RefRecId _runJobId,
        RefTableId _tableId,
        RefRecId _recId,
        DataAreaId _dataAreaId = curExt())
    {
        EInvoiceGenerationBatchLink_W invoiceGenerationBatchLink;

        invoiceGenerationBatchLink = EInvoiceGenerationBatchLink_W::find(
            _runJobId,
            _tableId,
            _recId,
            _dataAreaId);

        if (!invoiceGenerationBatchLink.RecId)
        {
            invoiceGenerationBatchLink.initValue();
            invoiceGenerationBatchLink.RunJobId = _runJobId;
            invoiceGenerationBatchLink.RefDataAreaId = _dataAreaId;
            invoiceGenerationBatchLink.RefTableId = _tableId;
            invoiceGenerationBatchLink.RefRecID = _recId;

            invoiceGenerationBatchLink.insert();
        }

        return invoiceGenerationBatchLink;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@AccountsReceivable:EInvoiceGenerationBatchLinkTableHelpLabel</DeveloperDocumentation>
	<Label>@AccountsReceivable:EInvoiceGenerationBatchLinkTableLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Reference</TableGroup>
	<TitleField1>RefDataAreaId</TitleField1>
	<TitleField2>RunJobId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>UniqueIdx</ClusteredIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RunJobId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OverView</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RunJobId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefDataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RunJobId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RefDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>UniqueIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RunJobId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ERFormatMappingRunJobTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<EntityRelationshipRole>@ElectronicReporting:ERJobs</EntityRelationshipRole>
			<RelatedTable>ERFormatMappingRunJobTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RunJobId</Name>
					<Field>RunJobId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>