<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPeriodicDiscountLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailPeriodicDiscountLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>skipCheckDiscountLine</Name>
				<Source><![CDATA[
    static delegate void skipCheckDiscountLine(EventHandlerResult _result){}

]]></Source>
			</Method>
			<Method>
				<Name>checkDiscountLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailPeriodicDiscountLine</c> table.
    /// </summary>
    /// <param name="_retailGroupMemberLine">
    /// A table instance of <c>RetailGroupMemberLine</c>.
    /// </param>
    /// <returns>
    /// true if the record does not exists in <c>RetailPeriodicDiscountLine</c> table; otherwise, check fails with an error message.
    /// </returns>
    public boolean checkDiscountLine(RetailGroupMemberLine _retailGroupMemberLine)
    {
        EventHandlerResult eventHandlerResult = new EventHandlerResult();
        RetailPeriodicDiscountLine::skipCheckDiscountLine(eventHandlerResult);

        if (eventHandlerResult.hasResult() && eventHandlerResult.result() == true)
        {
            GUPPricingInstrumentation eventLog = new GUPPricingInstrumentation(tablestr(RetailPeriodicDiscountLine), 'skipCheckDiscountLine', newGuid(), '');
            eventLog.log();
            return true;
        }
        else
        {
            RetailPeriodicDiscountLine  periodicDiscountLine;
            RetailGroupMemberLine       groupMemberLineLocal;

            select RecId, RetailGroupMemberLine from periodicDiscountLine
                where periodicDiscountLine.OfferId          == this.OfferId
                    && periodicDiscountLine.UnitOfMeasure   == this.UnitOfMeasure
                    && periodicDiscountLine.LineNum != this.LineNum
                    && periodicDiscountLine.LineType == this.LineType
                    && periodicDiscountLine.IsDiscountApplyingLine == this.IsDiscountApplyingLine
                exists join groupMemberLineLocal
                    where groupMemberLineLocal.RecId == periodicDiscountLine.RetailGroupMemberLine
                        && groupMemberLineLocal.Category == _retailGroupMemberLine.Category
                        && groupMemberLineLocal.Product  == _retailGroupMemberLine.Product
                        && groupMemberLineLocal.Variant  == _retailGroupMemberLine.Variant
                        && groupMemberLineLocal.InventDimId  == _retailGroupMemberLine.InventDimId;
            if (periodicDiscountLine.RecId)
            {
                return checkFailed(strFmt("@RET5769", tableId2name(this.TableId)));
            }

            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>explodeItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the description and unit of measure for the discount line.
    /// </summary>
    /// <remarks>
    /// This method creates a <c>RetailGroupMemberLine</c> record if one is not found.
    /// </remarks>
    public void explodeItem()
    {
        RetailPeriodicDiscountLine  tPeriodicDiscountLine, tFindPeriodicDiscountLine;
        InventDimCombination        tInventDimCombination;
        RetailGroupMemberLine       tmpGroupMemberLine;
        RetailGroupMemberLine       groupMemberLine;
        UnitOfMeasureRecId          variantUoM;

        ttsbegin;

        RetailDiscountApplicabilityRule thisRule = RetailDiscountApplicabilityRule::find(this.RecId);

        ItemId itemId;
        if (thisRule)
        {
            itemId = EcoResProduct::find(thisRule.EcoResProductRefRecId).DisplayProductNumber;
        }
        else
        {
            RetailGroupMemberLine groupMemberLineLocal = this.groupMemberLine();
            itemId = EcoResProduct::find(groupMemberLineLocal.Product).DisplayProductNumber;
        }

        if (!itemId)
        {
            return;
        }

        while select * from tInventDimCombination
            where tInventDimCombination.ItemId == itemId
        {
            // need to cast to sub-type so that the derived tables also get inserted
            tPeriodicDiscountLine = this.getAsSubTypeTable();

            variantUoM = UnitOfMeasure::findBySymbol(
                InventTableModule::find(tInventDimCombination.ItemId, ModuleInventPurchSales::Sales).UnitId).RecId;

            tPeriodicDiscountLine.UnitOfMeasure = variantUoM;
            tPeriodicDiscountLine.Description = tInventDimCombination.defaultProductName();

            select RetailGroupMemberLine from tFindPeriodicDiscountLine
                where tFindPeriodicDiscountLine.OfferId == this.OfferId
                   && tFindPeriodicDiscountLine.UnitOfMeasure == variantUoM
                join tmpGroupMemberLine
                    where tmpGroupMemberLine.RecId    == tFindPeriodicDiscountLine.RetailGroupMemberLine
                       && tmpGroupMemberLine.Variant  == tInventDimCombination.DistinctProductVariant;

            // Only add the variant if the combination of the variant and unit is not already available in the offer
            if (!tFindPeriodicDiscountLine)
            {
                tPeriodicDiscountLine.initValue(); // create RetailGroupMemberLine record.

                // update created RetailGroupMemberLine with the new variant.
                groupMemberLine             = tPeriodicDiscountLine.groupMemberLine(true);
                groupMemberLine.Variant     = tInventDimCombination.DistinctProductVariant;
                groupMemberLine.update();

                tPeriodicDiscountLine.LineNum = any2int(RetailPeriodicDiscountLine::lastLineNum(tPeriodicDiscountLine.OfferId)) + 1;
                tPeriodicDiscountLine.insert();

                if (thisRule)
                {
                    RetailDiscountApplicabilityRule newRule = RetailDiscountApplicabilityRule::findOrCreate(tPeriodicDiscountLine.RecId, true);
                    newRule.copy(thisRule);
                    newRule.EcoResDistinctProductVariantRefRecId = tInventDimCombination.DistinctProductVariant;
                    newRule.update();
                }
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAsSubTypeTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Casts the discount line to its concrete type.
    /// </summary>
    /// <returns>
    /// A concrete discount line record wrapped in a <c>Common</c> object.
    /// </returns>
    public Common getAsSubTypeTable()
    {
        RetailDiscountLineMixAndMatch mmLine;
        RetailDiscountLineMultibuy mbLine;
        RetailDiscountLineOffer offerLine;
        RetailDiscountLineThresholdApplying thresholdApplyingLine;

        if (this is RetailDiscountLineMixAndMatch)
        {
            mmLine = (this as RetailDiscountLineMixAndMatch);
            return mmLine;
        }
        else if (this is RetailDiscountLineMultibuy)
        {
            mbLine = (this as RetailDiscountLineMultibuy);
            return mbLine;
        }
        else if (this is RetailDiscountLineThresholdApplying)
        {
            thresholdApplyingLine = (this as RetailDiscountLineThresholdApplying);
            return thresholdApplyingLine;
        }
        else
        {
            offerLine = (this as RetailDiscountLineOffer);
            return offerLine;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>groupMemberLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailGroupMemeberLine</c> table.
    /// </summary>
    /// <param name="_update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailGroupMemeberLine</c> table; otherwise, an empty record.
    /// </returns>
    public RetailGroupMemberLine groupMemberLine(boolean  _update = false)
    {
        return RetailGroupMemberLine::find(this.RetailGroupMemberLine, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.RetailGroupMemberLine = RetailGroupMemberLine::createRetailGroupMemberV2();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRBODiscountOfferLineEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the allow edit property for the data source fields.
    /// </summary>
    /// <param name="_enabled">
    /// A Boolean value that indicates whether the data source is editable.
    /// </param>
    public void setRBODiscountOfferLineEnabled(boolean _enabled)
    {
        #Retail

        FormDataSource  tFormDataSource;

        if (FormDataUtil::isFormDataSource(this))
        {
            tFormDataSource = FormDataUtil::getFormDataSource(this);

            if (tFormDataSource != null)
            {
                tFormDataSource.allowCreate(_enabled);
                tFormDataSource.allowDelete(_enabled);
                tFormDataSource.allowEdit(_enabled);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUnitOfMeasure</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate unit of measure.
    /// </summary>
    /// <returns>
    /// true if unit of measure is validated; otherwise, false.
    /// </returns>
    public boolean validateUnitOfMeasure()
    {
        RetailPeriodicDiscount periodicDiscount = RetailPeriodicDiscount::findByOfferId(this.OfferId);

        boolean isValid = true;

        if (!this.UnitOfMeasure)
        {
            if (this.LineType == RetailDiscountLineIncludeExcludeTypeBase::Include && (periodicDiscount.PeriodicDiscountType == RetailDiscountOfferTypeBase::MixAndMatch
                || periodicDiscount.PeriodicDiscountType == RetailDiscountOfferTypeBase::LeastExpensiveFavorRetailer
                || periodicDiscount.PeriodicDiscountType == RetailDiscountOfferTypeBase::Multibuy))
            {
                isValid = false;
            }
        }

        if (!isValid)
        {
            return checkFailed(strFmt("@MCR38340", fieldstr(RetailPeriodicDiscountLine, UnitOfMeasure)));
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the maximum line number value for the discount lines.
    /// </summary>
    /// <param name="_sOfferId">
    /// The ID of the offer.
    /// </param>
    /// <returns>
    /// The maximum line number value.
    /// </returns>
    static LineNum  lastLineNum(RetailDiscountOfferId  _sOfferId)
    {
        return (select maxof(LineNum) from retailPeriodicDiscountline
                    index hint offerLineIdx
                    where retailPeriodicDiscountline.OfferId == _sOfferId).LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the next line number value for the discount lines.
    /// </summary>
    /// <param name="_offerId">
    /// The ID of the offer.
    /// </param>
    /// <returns>
    /// The next line number value.
    /// </returns>
    public static LineNum nextLineNum(RetailDiscountOfferId _offerId)
    {
        return RetailPeriodicDiscountLine::lastLineNum(_offerId) + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateGroupMemberLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copy data from original RetailGroupMemberLine into current RetailGroupMemberLine.
    /// </summary>
    /// <param name = "origRetailGroupMemberLine">The original RetailGroupMemberLine</param>
    public void updateGroupMemberLine(RetailGroupMemberLine origRetailGroupMemberLine)
    {
        this.copyGroupMemberLineInternal(origRetailGroupMemberLine, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyGroupMemberLineInternal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copy data from original RetailGroupMemberLine into current RetailGroupMemberLine.
    /// </summary>
    /// <param name = "_origRetailGroupMemberLine">The original RetailGroupMemberLine</param>
    /// <param name = "_shouldCopyInventDimId">Whether should copy InventDimID as well.</param>
    internal void copyGroupMemberLineInternal(
        RetailGroupMemberLine _origRetailGroupMemberLine,
        boolean _shouldCopyInventDimId)
    {
        RetailGroupMemberLine   retailGroupMemberLineNewUpdate;

        retailGroupMemberLineNewUpdate  = this.groupMemberLine(true);
        retailGroupMemberLineNewUpdate.Product  = _origRetailGroupMemberLine.Product;
        retailGroupMemberLineNewUpdate.Category = _origRetailGroupMemberLine.Category;
        retailGroupMemberLineNewUpdate.Variant  = _origRetailGroupMemberLine.Variant;
        retailGroupMemberLineNewUpdate.CategoryHierarchy = _origRetailGroupMemberLine.CategoryHierarchy;
        if (_shouldCopyInventDimId && !RetailPricingKillSwitch::disableCopyInventDimIdWhenCopyDiscount())
        {
            retailGroupMemberLineNewUpdate.InventDimId = _origRetailGroupMemberLine.InventDimId;
        }
        retailGroupMemberLineNewUpdate.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyRetailDiscountApplicabilityRuleInternal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copy data from original RetailDiscountApplicabilityRule into current RetailDiscountApplicabilityRule.
    /// </summary>
    /// <param name = "_origRetailPeriodicDiscountLine">The original RetailPeriodicDiscountLine</param>
    internal void copyRetailDiscountApplicabilityRuleInternal(RetailPeriodicDiscountLine _origRetailPeriodicDiscountLine)
    {
        RetailDiscountApplicabilityRule origRetailDiscountApplicabilityRule = RetailDiscountApplicabilityRule::find(_origRetailPeriodicDiscountLine.RecId);

        if (!origRetailDiscountApplicabilityRule)
        {
            return ;
        }

        RetailDiscountApplicabilityRule retailDiscountApplicabilityRule;

        retailDiscountApplicabilityRule = RetailDiscountApplicabilityRule::findOrCreate(this.RecId, true);
        retailDiscountApplicabilityRule.copy(origRetailDiscountApplicabilityRule);

        retailDiscountApplicabilityRule.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get next line number before inserting a record.
    /// </summary>
    public void insert()
    {
        this.LineNum = RetailPeriodicDiscountLine::nextLineNum(this.OfferId);
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailPeriodicDiscountLine</c> table.
    /// </summary>
    /// <param name="_periodicDiscountLineId">
    /// The record ID of the <c>RetailPeriodicDiscountLine</c> table.
    /// </param>
    /// <param name="_update">
    /// A boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailPeriodicDiscountLine</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailPeriodicDiscountLine find(RefRecId _periodicDiscountLineId, boolean _update = false)
    {
        RetailPeriodicDiscountLine periodicDiscountLine;
        select firstOnly periodicDiscountLine where periodicDiscountLine.RecId == _periodicDiscountLineId;
        if (_update)
        {
            periodicDiscountLine.selectForUpdate(true);
        }

        return periodicDiscountLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@RET260902</DeveloperDocumentation>
	<Label>@RET2913</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>OfferId</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>OfferLineIdx</ClusteredIndex>
	<InstanceRelationType>InstanceRelationType</InstanceRelationType>
	<Modules>Merchandising</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailGroupMemberLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailGroupMemberLine</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RetailDiscountApplicabilityRule</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation>RetailDiscountApplicabilityRule</Relation>
			<Table>RetailDiscountApplicabilityRule</Table>
			<Tags></Tags>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OfferId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OfferId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DiscountPercentOrValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InstanceRelationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetailGroupMemberLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitOfMeasure</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsDiscountCodeRequired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailMemo</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DiscountPercentOrValue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDiscountPercentValue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InstanceRelationType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RelationType</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDiscountCodeRequired</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDiscountCodeRequired</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OfferId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailOfferIdEx3</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RetailGroupMemberLine</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailDisabledEnabled</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>UnitOfMeasure</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LineType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDiscountLineType</ExtendedDataType>
			<EnumType>RetailDiscountLineIncludeExcludeTypeBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDiscountApplyingLine</Name>
			<ExtendedDataType>RetailIsDiscountApplyingLine</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsPropertyBased</Name>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ApplicabilityId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<FeatureClass>UnifiedPricingFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>OfferLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>OfferId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RetailGroupMemberLineIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>RetailGroupMemberLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OfferId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InstanceRelationType</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>OfferIdGroupMemberLineIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>OfferId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RetailGroupMemberLine</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>OfferId</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailPeriodicDiscount</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OfferId</Name>
					<Field>OfferId</Field>
					<RelatedField>OfferId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailGroupMemberLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>RetailGroupMemberLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailGroupMemberLine</Name>
					<Field>RetailGroupMemberLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitOfMeasure</Name>
					<Field>UnitOfMeasure</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailDiscountApplicabilityRule</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailDiscountApplicabilityRule</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RetailPeriodicDiscountLine</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PricingRuleApplicability</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PricingRuleApplicability</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ApplicabilityId</Name>
					<Field>ApplicabilityId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>