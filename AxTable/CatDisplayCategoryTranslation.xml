<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatDisplayCategoryTranslation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatDisplayCategoryTranslation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cloneTranslationRecords</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates clones for the translation data in the <c>CatDisplayCategoryTranslation</c> table for the new DC from the original DC.
    /// </summary>
    /// <param  name='_originalDisplayCategoryRecId'>
    /// An instance of the <c>RecId</c> class to denote the CatDisplayCategoryTable from which the new Display Category will be cloned.
    /// </param>
    /// <param  name='_newDisplayCategoryRecId'>
    /// An instance of the <c>RecId</c> class to denote the newly cloned CatDisplayCategoryTable.
    /// </param>
    public void cloneTranslationRecords(
                                            RecId       _originalDisplayCategoryRecId,
                                            RecId       _newDisplayCategoryRecId
                                        )
    {
        CatDisplayCategoryTranslation catDisplayCategoryTranslationOriginal;

        //Get all the translation records for all the languages from the selected display category
        while select * from catDisplayCategoryTranslationOriginal
            where catDisplayCategoryTranslationOriginal.DisplayCategory == _originalDisplayCategoryRecId
        {
            this.insertDisplayCategoryTranslation(
                                                    _newDisplayCategoryRecId,
                                                    catDisplayCategoryTranslationOriginal.FriendlyName,
                                                    catDisplayCategoryTranslationOriginal.Description,
                                                    catDisplayCategoryTranslationOriginal.LanguageId
                                                  );
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertDisplayCategoryTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts and updates translation data in the <c>CatDisplayCategoryTranslation</c> table.
    /// </summary>
    /// <param  name='_displayCategoryRecId'>
    /// An instance of the <c>RefRecId</c> class to denote the collection of CatDisplayCategoryTranslation.
    /// </param>
    /// <param  name='_name'>
    /// An string representing the display category name in translation language.
    /// </param>
    /// <param  name='_description'>
    /// An string representing the display category description in translation language.
    /// </param>
    /// <param  name='_language'>
    /// An string representing the Translation language.
    /// </param>
    /// <returns>
    /// An instance of <c>CatDisplayCategoryTranslation</c> class denoting the row inserted.
    /// </returns>
    public CatDisplayCategoryTranslation insertDisplayCategoryTranslation(
                                                    RecId       _displayCategoryRecId,
                                                    Name        _name,
                                                    Description _description ='',
                                                    LanguageId  _language = SysTranslationHelper::getPrimaryLanguage()
                                                  )
    {
        CatDisplayCategoryTranslation catDisplayCategoryTranslation;

        if (_description == '')
        {
            _description = _name;
        }
        //Insert  data in the translation table for the display category in the Primary language
        select forupdate firstonly RecId, DisplayCategory, LanguageId from catDisplayCategoryTranslation
            where catDisplayCategoryTranslation.DisplayCategory         == _displayCategoryRecId
                && catDisplayCategoryTranslation.LanguageId             == _language;
        if (!catDisplayCategoryTranslation)
        {
            catDisplayCategoryTranslation.DisplayCategory   = _displayCategoryRecId;
            catDisplayCategoryTranslation.LanguageId        = _language;
            catDisplayCategoryTranslation.FriendlyName      = _name;
            catDisplayCategoryTranslation.Description       = _description;
            if (catDisplayCategoryTranslation.validateWrite())
            {
                catDisplayCategoryTranslation.insert();
            }
        }
        else
        {
            catDisplayCategoryTranslation.FriendlyName = _name;
            catDisplayCategoryTranslation.Description  = _description;
            if (catDisplayCategoryTranslation.validateWrite())
            {
                catDisplayCategoryTranslation.update();
            }
        }
        //Insert translation texts for all languages from the translation data available in Procure category translation table
        this.insertTranslationsFromProcureCategory(_displayCategoryRecId);

        return catDisplayCategoryTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertTranslationsFromProcureCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts and updates translation data in the <c>CatDisplayCategoryTranslation</c> table.
    /// </summary>
    /// <param name="_displayCategoryRecId">
    /// An instance of the <c>RecId</c> class to denote the collection of
    /// <c>CatDisplayCategoryTranslation</c> values.
    /// </param>
    private void insertTranslationsFromProcureCategory(RecId _displayCategoryRecId)
    {
        EcoResCategoryTranslation       tblEcoResCategoryTranslation;
        EcoResCategory                  tblEcoResCategory;
        CatDisplayCategorySharedInfo    tblCatDisplayCategorySharedInfo;
        CatDisplayCategoryTable         tblCatDisplayCategoryTable;
        CatDisplayCategoryTranslation   tblCatDisplayCategoryTranslation;

        ttsbegin;
        //Insert translation texts from procure category if available
        insert_recordset tblCatDisplayCategoryTranslation ( FriendlyName, LanguageId, Description, DisplayCategory)
            select FriendlyName, LanguageId, Description, _displayCategoryRecId from tblEcoResCategoryTranslation
                join tblEcoResCategory
                    where tblEcoResCategory.RecId == tblEcoResCategoryTranslation.Category
                        && tblEcoResCategoryTranslation.LanguageId != SysTranslationHelper::getPrimaryLanguage()
                join tblCatDisplayCategorySharedInfo
                    where tblCatDisplayCategorySharedInfo.Category == tblEcoResCategory.RecId
                join tblCatDisplayCategoryTable
                    where tblCatDisplayCategoryTable.SharedData == tblCatDisplayCategorySharedInfo.RecId
                        && tblCatDisplayCategoryTable.RecId == _displayCategoryRecId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>CatDisplayCategoryTranslation</c> table.
    /// </summary>
    /// <param  name='_displayCategory'>
    /// An instance of the <c>RefRecId</c> class to denote the collection of CatDisplayCategoryTranslation.
    /// </param>
    /// <param  name='_language'>
    /// An string representing the Translation language.
    /// </param>
    /// <returns>
    /// true if the record was found; otherwise, false.
    /// </returns>
    public static boolean checkExist(RefRecId _displayCategory, LanguageId _language)
    {
        if (!CatDisplayCategoryTranslation::exist(_displayCategory, _language))
        {
            return checkFailed(strfmt(CatDisplayCategoryTranslation::txtNotExist(), _displayCategory, _language));
        }
        else
        {
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>CatDisplayCategoryTranslation</c> table.
    /// </summary>
    /// <param  name='_displayCategory'>
    /// An instance of the <c>RefRecId</c> class to denote the collection of CatDisplayCategoryTranslation.
    /// </param>
    /// <param  name='_language'>
    /// An string representing the Translation language.
    /// </param>
    /// <returns>
    /// true if the record was found; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _displayCategory, LanguageId _language)
    {
        return (CatDisplayCategoryTranslation::find(_displayCategory, _language).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>CatDisplayCategoryTranslation</c> table.
    /// </summary>
    /// <param  name='_displayCategory'>
    /// An instance of the <c>RefRecId</c> class to denote the collection of CatDisplayCategoryTranslation.
    /// </param>
    /// <param  name='_language'>
    /// An string representing the Translation language.
    /// </param>
    /// <param  name='_forUpdate'>
    /// An boolean representing whether the query will have update mode.
    /// </param>
    /// <returns>
    /// A <c>CatDisplayCategoryTranslation</c> table record or an empty buffer.
    /// </returns>
    public static CatDisplayCategoryTranslation find(RefRecId _displayCategory, LanguageId _language,  boolean _forUpdate = false)
    {
        CatDisplayCategoryTranslation tblCatDisplayCategoryTranslation;

        if (_displayCategory && _language )
        {
            tblCatDisplayCategoryTranslation.selectForUpdate(_forUpdate);
            select firstonly tblCatDisplayCategoryTranslation
                where tblCatDisplayCategoryTranslation.DisplayCategory == _displayCategory
                    && tblCatDisplayCategoryTranslation.LanguageId == _language;
        }
        return tblCatDisplayCategoryTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static str txtNotExist()
    {
        return "@SYS131155";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcCatalog</ConfigurationKey>
	<DeveloperDocumentation>@SYS317405</DeveloperDocumentation>
	<Label>@SYS312024</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>LanguageId</TitleField1>
	<TitleField2>DisplayCategory</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>DisplayCategoryIdx</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>DisplayCategoryIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DisplayCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FriendlyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DisplayCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS303404</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DisplayCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FriendlyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DisplayCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FriendlyName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LanguageIdAll</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes>
		<AxTableFullTextIndex>
			<Name>FullTextIndex</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>FriendlyName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Description</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableFullTextIndex>
	</FullTextIndexes>
	<Indexes>
		<AxTableIndex>
			<Name>DisplayCategoryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>DisplayCategory</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LanguageId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CategoryRelation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CatDisplayCategoryTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CatDisplayCategoryTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>CatDisplayCategoryTable_CatDisplayCategoryTranslation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DisplayCategory</Name>
					<Field>DisplayCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LanguageTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>CatDisplayCategoryTranslation</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LanguageId</Name>
					<SourceEDT>LanguageIdAll</SourceEDT>
					<Field>LanguageId</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>Key</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>