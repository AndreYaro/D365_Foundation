<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>IdentityCardTable_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class IdentityCardTable_RU extends common
{
    #IdentityCardValue_RU

}

]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Processes field value modificatioon
    /// </summary>
    /// <param name="_fieldName">
    ///   name of the field
    /// </param>
    /// <param name="_arrayIndex">
    ///   array index of the field
    /// </param>
    public void modifiedFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        super(_fieldName, _arrayIndex);

        if (_fieldName == fieldStr(IdentityCardTable_RU, IdentityCardTypePf))
        {
            switch (this.IdentityCardTypePf)
            {
                case IdentityCardTypePf_RU::PassportRU:
                    this.IdentityCardNamePf = #PassportRUPFName;
                    break;
                case IdentityCardTypePf_RU::Passport:
                    this.IdentityCardNamePf = #PassportPFName;
                    break;
                case IdentityCardTypePf_RU::BirthCertificate:
                    this.IdentityCardNamePf = #BirthCertificatePFName;
                    break;
                case IdentityCardTypePf_RU::ForeignPassport_RU:
                    this.IdentityCardNamePf = #ForeignPassport_RUPFName;
                    break;
                case IdentityCardTypePf_RU::ForeignPassport:
                    this.IdentityCardNamePf = #ForeignPassportPFName;
                    break;
                case IdentityCardTypePf_RU::OfficerIdentityCard:
                    this.IdentityCardNamePf = #OfficerIdentityCardPFName;
                    break;
                case IdentityCardTypePf_RU::OfficerMilitaryCard:
                    this.IdentityCardNamePf = #OfficerMilitaryCardPFName;
                    break;
                case IdentityCardTypePf_RU::DiplomaticPassport_RU:
                    this.IdentityCardNamePf = #DiplomaticPassport_RUPFName;
                    break;
                case IdentityCardTypePf_RU::MilitaryCard:
                    this.IdentityCardNamePf = #MilitaryCardPFName;
                    break;
                case IdentityCardTypePf_RU::NavyMinistryCard:
                    this.IdentityCardNamePf = #NavyMinistryCardPFName;
                    break;
                case IdentityCardTypePf_RU::SailorCard:
                    this.IdentityCardNamePf = #SailorCardPFName;
                    break;
                case IdentityCardTypePf_RU::ForeignPersonsCard:
                    this.IdentityCardNamePf = #ForeignPersonsCardPFName;
                    break;
                case IdentityCardTypePf_RU::TemporaryCard:
                    this.IdentityCardNamePf = #TemporaryCardPFName;
                    break;
                case IdentityCardTypePf_RU::RefugeeCard:
                    this.IdentityCardNamePf = #RefugeeCardPFName;
                    break;
                case IdentityCardTypePf_RU::RefugeeIdentityCard:
                    this.IdentityCardNamePf = #RefugeeIdentityCardPFName;
                    break;
                case IdentityCardTypePf_RU::Residential:
                    this.IdentityCardNamePf = #ResidentialPFName;
                    break;
                case IdentityCardTypePf_RU::CertificateOfRelease:
                    this.IdentityCardNamePf = #CertificateOfReleasePFName;
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Validates field value
    /// </summary>
    /// <param name="_fieldName">
    ///   name of the field
    /// </param>
    /// <param name="_arrayIndex">
    ///   array index
    /// </param>
    /// <returns>
    ///   true if ok
    /// </returns>
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(IdentityCardTable_RU, IdentityCardPatternSeries):
                    if (strNFind(this.IdentityCardPatternSeries, #validPatternSymbol, 1, strLen(this.IdentityCardPatternSeries)))
                    {
                        ret = checkFailed("@GLS106167");
                    }
                    break;

                case fieldStr(IdentityCardTable_RU, IdentityCardPatternNumber):
                    if (strNFind(this.IdentityCardPatternNumber, #validPatternSymbol, 1, strLen(this.IdentityCardPatternNumber)))
                    {
                        ret = checkFailed("@GLS106167");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record Id exists in <c>IdentityCardTable_RU</c> table and shows an infolog message if record does not exist.
    /// </summary>
    /// <param name="_recId">
    /// The record Id value.
    /// </param>
    /// <returns>
    /// true if the record id exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(IdentityCardRecId_RU _recId)
    {
        boolean ret = true;

        if (!IdentityCardTable_RU::exist(_recId))
        {
            ret = checkFailed(strFmt(IdentityCardTable_RU::txtNotExist(), 'The specific record in ' + tableId2name(tableNum(IdentityCardTable_RU))));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record Id exists in <c>IdentityCardTable_RU</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record Id value.
    /// </param>
    /// <returns>
    /// true if the record id exists; otherwise, false.
    /// </returns>
    public static boolean exist(IdentityCardRecId_RU _recId)
    {
        return _recId && (select firstonly RecId from identityCardTable_RU
                    where identityCardTable_RU.RecId == _recId).RecId!= 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>IdentityCardTable_RU</c> table based on a record Id value.
    /// </summary>
    /// <param name="_recId">
    /// The record Id value.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An enumeration value that indicates whether concurrency setting to be used on the table; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>IdentityCardTable_RU</c> table.
    /// </returns>
    public static IdentityCardTable_RU find(
        IdentityCardRecId_RU _recId,
        boolean              _forUpdate          = false,
        ConcurrencyModel     _concurrencyModel   = ConcurrencyModel::Auto)
    {
        IdentityCardTable_RU identityCardTable;

        identityCardTable.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            identityCardTable.concurrencyModel(_concurrencyModel);
        }

         select firstonly identityCardTable
             where identityCardTable.RecId == _recId;

        return identityCardTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Finds by code
    /// </summary>
    /// <param name="_identityCardCode">
    ///   code of card
    /// </param>
    /// <param name="_forUpdate">
    ///  select for update
    /// </param>
    /// <param name="_concurrencyModel">
    ///   <c>ConcurrencyModel</c>
    /// </param>
    /// <returns>
    ///   record found
    /// </returns>
    public static IdentityCardTable_RU findByCode(
        IdentityCardCode_Ru _identityCardCode,
        boolean             _forUpdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        IdentityCardTable_RU identityCardTable;

        identityCardTable.selectForUpdate(_forUpdate );
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            identityCardTable.concurrencyModel(_concurrencyModel);
        }

        select firstonly identityCardTable
            where identityCardTable.IdentityCardCode == _identityCardCode;

        return identityCardTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS94719";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU,CZ,EE,HU,LT,LV,PL</CountryRegionCodes>
	<FormRef>IdentityCardTable_RU</FormRef>
	<Label>@GLS105930</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>IdentityCardCode</TitleField1>
	<TitleField2>IdentityCardNameFull</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>GAB</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>IdentityCodeIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>EmployeeTable_RU</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>EmployeeTable_RU</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IdentityCardCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IdentityCardNamemiddle</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IdentityCardNameFull</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IdentityCardNameShort</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IdentityCardCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Check</Name>
			<Label>@SYS50894</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IdentityCardPatternSeries</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IdentityCardPatternNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IdentityCardIssueAge</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Name</Name>
			<Label>@GLS100775</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IdentityCardNamemiddle</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IdentityCardNameFull</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IdentityCardNameShort</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Number</Name>
			<Label>@SYS36260</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IdentityCardCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PensionFund</Name>
			<Label>@GLS105943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IdentityCardTypePf</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IdentityCardNamePf</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IdentityCardCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IdentityCardCode_Ru</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>IdentityCardIssueAge</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IdentityCardIssueAge_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IdentityCardNameFull</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IdentityCardNameFull_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IdentityCardNamemiddle</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IdentityCardNameMiddle_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IdentityCardNamePf</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IdentityCardNameFull_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IdentityCardNameShort</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IdentityCardNameShort_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IdentityCardPatternNumber</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IdentityCardPatternNumber_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IdentityCardPatternSeries</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>IdentityCardPatternSeries_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IdentityCardTypePf</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>IdentityCardTypePf_RU</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>IdentityCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>IdentityCardCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>