<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBReasonCodeForRestitutionComplement_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FBReasonCodeForRestitutionComplement_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>existState</Name>
				<Source><![CDATA[
    private boolean existState(LogisticsAddressStateId _stateId = this.State)
    {
        #ISOCountryRegionCodes
        return LogisticsAddressState::exist(SysCountryRegionCode::getCountryRegionIdByIsoCode(#isoBR), _stateId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
    
        ret = super(_fieldIdToCheck);
        
        switch(_fieldIdToCheck)
        {
            case fieldNum(FBReasonCodeForRestitutionComplement_BR, State):
                ret = this.validateState() && ret;
                break;

            case fieldNum(FBReasonCodeForRestitutionComplement_BR, ValidFrom):
            case fieldNum(FBReasonCodeForRestitutionComplement_BR, ValidTo):
                ret = this.validateDatePeriod() && ret;
                break;

            case fieldNum(FBReasonCodeForRestitutionComplement_BR, OccurrenceCode):
                ret = this.validateOccurrenceCode() && ret;
                break;

            case fieldNum(FBReasonCodeForRestitutionComplement_BR, MethodOfRefundICMSST):
                ret = this.validateMethodOfRefundICMSST() && ret;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the state.
    /// </summary>
    /// <returns>
    /// True if the state is a brazilian state; otherwise, false
    /// </returns>
    private boolean validateState()
    {
        if (!this.existState(this.State))
        {
            return checkFailed("@SYS4082146");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDatePeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the starting date and ending date.
    /// </summary>
    /// <returns>
    /// true if starting date is less than ending date; otherwise, false.
    /// </returns>
    private boolean validateDatePeriod()
    {
        if ((this.ValidTo) && (this.ValidTo < this.ValidFrom))
        {
            return checkFailed("@SYS4082150");
        }
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateSpedCode</Name>
				<Source><![CDATA[
    // <summary>
    /// Generates the sped code.
    /// </summary>
    /// <returns>
    /// Generated sped code.
    /// </returns>
    [Hookable(false)]
    public FBReasonCode_BR generateSpedCode()
    {
        return strFmt('%1%2%3', this.State, enum2int(this.Classification), this.OccurrenceCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateOccurrenceCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the occurrence code.
    /// </summary>
    /// <returns>
    /// true if has just numbers and the correct length; otherwise, false.
    /// </returns>
    private boolean validateOccurrenceCode()
    {
        const int OccurrenceCodeLength = 2;

        str numbers = strKeep(this.OccurrenceCode, '0123456789');

        if (strLen(numbers) != OccurrenceCodeLength)
        {
            return checkFailed(strFmt("@SYS4001631", fieldId2pname(this.TableId, fieldnum(FBReasonCodeForRestitutionComplement_BR, OccurrenceCode)), OccurrenceCodeLength));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSpedCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the sped code to be sent to Sped fiscal file.
    /// </summary>
    /// <returns>
    /// Returns true if it's a valid code; otherwise, false.
    /// </returns>
    private boolean validateSpedCode()
    {
        const int SpedCodeLength = 5;
        boolean ret = true;

        if (strLen(this.SpedCode) != SpedCodeLength)
        {
            ret = checkFailed(strFmt("@SYS4001631", fieldId2pname(this.TableId, fieldNum(FBReasonCodeForRestitutionComplement_BR, SpedCode)), SpedCodeLength));
        }


        if (this.SpedCode != this.generateSpedCode())
        {
            ret = checkFailed(strFmt("@SYS78966", fieldId2PName(this.TableId, fieldNum(FBReasonCodeForRestitutionComplement_BR, SpedCode))));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(FBReasonCodeForRestitutionComplement_BR, State):
                this.SpedCode = this.generateSpedCode();

                if (this.State != FiscalBooksConstants_BR::StateRS)
                {
                    this.MethodOfRefundICMSST = FBMethodOfRefundICMSST_BR::NA;
                }
                break;

            case fieldNum(FBReasonCodeForRestitutionComplement_BR, Classification):
                this.SpedCode = this.generateSpedCode();

                if (this.Classification != FBReasonCodeForRestitutionComplementClassification_BR::Restitution2)
                {
                    this.MethodOfRefundICMSST = FBMethodOfRefundICMSST_BR::NA;
                }
                break;

            case fieldNum(FBReasonCodeForRestitutionComplement_BR, OccurrenceCode):
                this.SpedCode = this.generateSpedCode();
                break;

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        ret = this.validateDatePeriod() && ret;
        ret = this.validateOccurrenceCode() && ret;
        ret = this.validateState() && ret;
        ret = this.validateSpedCode() && ret;
        ret = this.validateMethodOfRefundICMSST() && ret;
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupReferenceReasonCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the formlookup for <c>FBReasonCodeForRestitutionComplement_BR</c>.
    /// </summary>
    /// <param name="_formReferenceControl">
    /// A <c>FormReferenceControl</c> control.
    /// </param>
    /// <param name="_stateId">
    /// A brazilian state id.
    /// </param>
    /// A <c>FBReasonCodeForRestitutionComplement_BR</c> table record.
    /// </returns>
    [Hookable(false)]
    public static Common lookupReferenceReasonCode(FormReferenceControl _formReferenceControl, LogisticsAddressStateId _stateId)
    {
        SysReferenceTableLookup sysReferenceTableLookup = SysReferenceTableLookup::newParameters(tableNum(FBReasonCodeForRestitutionComplement_BR), _formReferenceControl);

        sysReferenceTableLookup.addLookupfield(fieldNum(FBReasonCodeForRestitutionComplement_BR, ReasonCode));
        sysReferenceTableLookup.addLookupfield(fieldNum(FBReasonCodeForRestitutionComplement_BR, Description));
        sysReferenceTableLookup.addLookupfield(fieldNum(FBReasonCodeForRestitutionComplement_BR, SpedCode));
        sysReferenceTableLookup.addLookupfield(fieldNum(FBReasonCodeForRestitutionComplement_BR, ValidFrom));
        sysReferenceTableLookup.addLookupfield(fieldNum(FBReasonCodeForRestitutionComplement_BR, ValidTo));

        Query                   query = new Query();
        QueryBuildDataSource    qbds = query.addDataSource(tableNum(FBReasonCodeForRestitutionComplement_BR));
        findOrCreateRange_W(qbds, fieldNum(FBReasonCodeForRestitutionComplement_BR, State), queryValue(_stateId));

        sysReferenceTableLookup.parmQuery(query);

        return sysReferenceTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>FBReasonCodeForRestitutionComplement_BR</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>FBReasonCodeForRestitutionComplement_BR</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>FBReasonCodeForRestitutionComplement_BR</c> table; otherwise, an empty record.
    /// </returns>
    [Hookable(false)]
    public static FBReasonCodeForRestitutionComplement_BR find(RefRecId _recId, boolean _forUpdate = false)
    {
        FBReasonCodeForRestitutionComplement_BR fbReasonCodeForRestitutionComplement;

        fbReasonCodeForRestitutionComplement.selectForUpdate(_forUpdate);

        if (_recId)
        {
            select firstonly fbReasonCodeForRestitutionComplement
                where fbReasonCodeForRestitutionComplement.RecId == _recId;
        }

        return fbReasonCodeForRestitutionComplement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMethodOfRefundICMSST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the method of refund for ICMS-ST.
    /// </summary>
    /// <returns>
    /// Returns true if it's a valid method; otherwise, false.
    /// </returns>
    private boolean validateMethodOfRefundICMSST()
    {
        const int SpedCodeLength = 5;
        boolean ret = true;

        if (this.State != FiscalBooksConstants_BR::StateRS && this.MethodOfRefundICMSST != FBMethodOfRefundICMSST_BR::NA)
        {
            ret = checkFailed("@Brazil:MethodOfRefundICMSSTValidation");
        }


        if (this.State == FiscalBooksConstants_BR::StateRS 
            && this.Classification == FBReasonCodeForRestitutionComplementClassification_BR::Restitution2
            && this.MethodOfRefundICMSST == FBMethodOfRefundICMSST_BR::NA)
        {
            ret = checkFailed("@Brazil:MethodOfRefundICMSSTValidation");
        }

        if (this.State == FiscalBooksConstants_BR::StateRS
            && this.Classification != FBReasonCodeForRestitutionComplementClassification_BR::Restitution2
            && this.MethodOfRefundICMSST != FBMethodOfRefundICMSST_BR::NA)
        {
            ret = checkFailed("@Brazil:MethodOfRefundICMSSTValidation");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@FiscalBooks_SpedFiscal:TableDevDoc_FBReasonCodeForRestitutionComplement_BR</DeveloperDocumentation>
	<FormRef>FBReasonCodeForRestitutionComplement_BR</FormRef>
	<Label>@FiscalBooks_SpedFiscal:TableTitle_FBReasonCodeForRestitutionComplement_BR</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>ReasonCode</TitleField1>
	<TitleField2>Description</TitleField2>
	<Modules>FiscalBooksBrazil</Modules>
	<ReplacementKey>ReasonCodeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>State</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReasonCode</Name>
			<Label>@FiscalBooks_SpedFiscal:Group_ReasonCode</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dates</Name>
			<Label>@SYS4082175</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>State</Name>
			<Label>@SYS323506</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>State</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SpedCode</Name>
			<Label>@SYS4082157</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SpedCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CodeType</Name>
			<Label>@SYS105643</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>State</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Classification</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MethodOfRefundICMSST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OccurrenceCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReasonCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FBReasonCode_BR</ExtendedDataType>
			<Label>@SYS36186</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description255</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>State</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressStateId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Classification</Name>
			<AllowEdit>No</AllowEdit>
			<EnumType>FBReasonCodeForRestitutionComplementClassification_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidFrom</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FBFromDate_BR</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ValidTo</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FBToDate_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OccurrenceCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FBOccurrenceCode_BR</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SpedCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FBReasonCode_BR</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MethodOfRefundICMSST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>FBMethodOfRefundICMSST_BR</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReasonCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ReasonCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>