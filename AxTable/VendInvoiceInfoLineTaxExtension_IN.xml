<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceInfoLineTaxExtension_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendInvoiceInfoLineTaxExtension_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>distributionUpdateNeeded</Name>
				<Source><![CDATA[
    /// <summary>
    /// Identifies if the user has changed the parameters that can change current Tax or withhold tax calculated.
    /// </summary>
    /// <param name="_original">
    /// Committed value of the VendInvoiceInfoLineTaxExtension_IN buffer
    /// </param>
    /// <returns>
    /// true, if update of taxes or withhold tax is required otherwise; false.
    /// </returns>
    private boolean distributionUpdateNeeded(VendInvoiceInfoLineTaxExtension_IN _original)
    {
        return this.TDSGroup                        != _original.TDSGroup
            || this.TCSGroup                        != _original.TCSGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initForNonPO</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the instance for none PO.
    /// </summary>
    /// <param name="_activeVendInvoiceInfoLine">
    /// The active vend invoice info line.
    /// </param>
    public void initForNonPO(VendInvoiceInfoLine _activeVendInvoiceInfoLine)
    {
        VendTable                           vendTableLoc;
        TaxInformationVendTable_IN          taxInformationVendTableLoc;

        this.VendInvoiceInfoLine = _activeVendInvoiceInfoLine.RecId;
        if (TaxWithholdParameters_IN::checkTaxParameters())
        {
            vendTableLoc                        = VendTable::find(_activeVendInvoiceInfoLine.vendInvoiceInfoTable().InvoiceAccount);
            taxInformationVendTableLoc          = vendTableLoc.getTaxInformationVendTable_IN();
            this.tdsGroup = taxInformationVendTableLoc.TDSGroup;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromActive</Name>
				<Source><![CDATA[
    private void initFromActive(VendInvoiceInfoLineTaxExtension_IN _vendInvoiceInfoLineTaxExtn)
    {
        TaxWithholdParameters_IN             taxWithholdParameters;

        //For Direct taxes.
        if ((taxWithholdParameters.tcsActivate || taxWithholdParameters.tdsActivate))
        {
            this.tcsGroup = _vendInvoiceInfoLineTaxExtn.tcsGroup;
            this.tdsGroup = _vendInvoiceInfoLineTaxExtn.tdsGroup;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the current <c>VendInvoiceInfoLineTaxExtension_IN</c> record with the specified <c>PurchLine</c> record.
    /// </summary>
    /// <param name="_purchLine">
    /// The <c>PurchLine</c> record.
    /// </param>
    public void initFromPurchLine(PurchLine _purchLine)
    {
        TaxWithholdParameters_IN    taxWithholdParameters = TaxWithholdParameters_IN::find();
        PurchLine_IN                purchLine_IN = _purchLine.purchLine_IN();

        if (taxWithholdParameters.TCSActivate || taxWithholdParameters.TDSActivate)
        {
            this.TCSGroup = purchLine_IN.TCSGroup;
            this.TDSGroup = purchLine_IN.TDSGroup;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        VendInvoiceInfoTable    vendInvoiceInfoTable;
        VendInvoiceInfoLine     vendInvoiceInfoLine;

        if (this.VendInvoiceInfoLine)
        {
            super();

            vendInvoiceInfoLine     = this.vendInvoiceInfoLine();
            vendInvoiceInfoTable    = vendInvoiceInfoLine.vendInvoiceInfoTable();

             TaxUncommitted::deleteForDocumentHeader(vendInvoiceInfoTable.TableId, vendInvoiceInfoTable.RecId);
             TaxWithholdUncommitted_IN::deleteForDocumentHeader(vendInvoiceInfoTable.TableId, vendInvoiceInfoTable.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the distribution for changed Taxes and deletes the obsolete TaxUncommitted entries.
    /// </summary>
    public void update()
    {
        VendInvoiceInfoLineTaxExtension_IN     original = this.orig();
        VendInvoiceInfoTable                   vendInvoiceInfoTable;
        VendInvoiceInfoLine                    vendInvoiceInfoLine;

        super();

        if (this.distributionUpdateNeeded(original))
        {
            vendInvoiceInfoLine  = VendInvoiceInfoLine::findRecId(original.VendInvoiceInfoLine);
            vendInvoiceInfoTable = vendInvoiceInfoLine.vendInvoiceInfoTable();
            SourceDocumentProcessorFacade::submitSourceDocumentLineImplementation(vendInvoiceInfoLine, true);
            vendInvoiceInfoTable.updateFromVendLines();

            TaxUncommitted::deleteForDocumentHeader(vendInvoiceInfoTable.TableId, vendInvoiceInfoTable.RecId);

            TaxWithholdUncommitted_IN::deleteForDocumentHeader(vendInvoiceInfoTable.TableId, vendInvoiceInfoTable.RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates a changed field.
    /// </summary>
    /// <param name="_fieldName">
    /// The field Name for the field changed.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index for the field changed
    /// </param>
    /// <returns>
    /// true if the validation did not fail; otherwise, false.
    /// </returns>
    public boolean validateFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;

        ret = super(_fieldName, _arrayIndex);
        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(VendInvoiceInfoLineTaxExtension_IN, tdsGroup):
                    ret = TaxWithholdGroupHeading::checkTaxTypeMatchingTaxGroup(this.TDSGroup, TaxWithholdCodeType_IN::TDS);
                    break;

                case fieldStr(VendInvoiceInfoLineTaxExtension_IN, tcsGroup):
                    ret = TaxWithholdGroupHeading::checkTaxTypeMatchingTaxGroup(this.TCSGroup, TaxWithholdCodeType_IN::TCS);
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = true;

        if (this.VendInvoiceInfoLine)
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoiceInfoLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets vend invoice info line.
    /// </summary>
    /// <param name="_forUpdate">
    /// The forUpdate flag.
    /// </param>
    /// <returns>
    /// The instance of the <c>VendInvoiceInfoLine</c> class.
    /// </returns>
    public VendInvoiceInfoLine vendInvoiceInfoLine(boolean  _forUpdate = false)
    {
        return VendInvoiceInfoLine::findRecId(this.VendInvoiceInfoLine, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createForNonPO</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a new <c>VendInvoiceInfoLineTaxExtension_IN</c> table record, based on the supplied <c>VendInvoiceInfoLine</c> tables records.
    /// </summary>
    /// <param name="_activeVendInvoiceInfoLine">
    /// The _activeVendInvoiceInfoLine <c>VendInvoiceInfoLine</c> table record to use for creating the <c>VendInvoiceInfoLineTaxExtension_IN</c> table record.
    /// </param>
    /// <returns>
    /// Inserted <c>VendInvoiceInfoLineTaxExtension_IN</c> table record.
    /// </returns>
    public static VendInvoiceInfoLineTaxExtension_IN createForNonPO(VendInvoiceInfoLine _activeVendInvoiceInfoLine)
    {
        VendInvoiceInfoLineTaxExtension_IN  vendInvoiceInfoLineTaxExtn;
        VendTable                           vendTableLoc;
        TaxInformationVendTable_IN   taxInformationVendTableLoc;

        if (_activeVendInvoiceInfoLine.RecId != 0)
        {
            vendInvoiceInfoLineTaxExtn.initValue();
            vendInvoiceInfoLineTaxExtn.VendInvoiceInfoLine = _activeVendInvoiceInfoLine.RecId;
            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                vendTableLoc                        = VendTable::find(_activeVendInvoiceInfoLine.vendInvoiceInfoTable().InvoiceAccount);
                taxInformationVendTableLoc          = vendTableLoc.getTaxInformationVendTable_IN();
                vendInvoiceInfoLineTaxExtn.tdsGroup = taxInformationVendTableLoc.TDSGroup;
                vendInvoiceInfoLineTaxExtn.tcsGroup = taxInformationVendTableLoc.TCSGroup;
            }
        }

        return vendInvoiceInfoLineTaxExtn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromActive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a new <c>VendInvoiceInfoLineTaxExtension_IN</c> table record, based on the supplied <c>VendInvoiceInfoLine</c> tables records.
    /// </summary>
    /// <param name="_activeVendInvoiceInfoLine">
    /// The _activeVendInvoiceInfoLine <c>VendInvoiceInfoLine</c> table record to use for creating the saved <c>VendInvoiceInfoLineTaxExtension_IN</c> table record.
    /// </param>
    /// <param name="_savedVendInvoiceInfoLine">
    /// The _savedVendInvoiceInfoLine <c>VendInvoiceInfoLine</c> table record to use for creating the saved <c>VendInvoiceInfoLineTaxExtension_IN</c> table record.
    /// </param>
    /// <returns>
    /// Inserted <c>VendInvoiceInfoLineTaxExtension_IN</c> table record.
    /// </returns>
    public static VendInvoiceInfoLineTaxExtension_IN createFromActive(VendInvoiceInfoLine _activeVendInvoiceInfoLine, VendInvoiceInfoLine _savedVendInvoiceInfoLine)
    {
        // <GIN>
        VendInvoiceInfoLineTaxExtension_IN  vendInvoiceInfoLineTaxExtn;
        // </GIN>

        if (_activeVendInvoiceInfoLine.RecId != 0)
        {
            vendInvoiceInfoLineTaxExtn = VendInvoiceInfoLineTaxExtension_IN::findByVendInvoiceInfoLineRecId(_activeVendInvoiceInfoLine.RecId);
            vendInvoiceInfoLineTaxExtn.initFromActive(vendInvoiceInfoLineTaxExtn);
            vendInvoiceInfoLineTaxExtn.VendInvoiceInfoLine = _savedVendInvoiceInfoLine.RecId;
            vendInvoiceInfoLineTaxExtn.insert();
        }

        return vendInvoiceInfoLineTaxExtn;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByVendInvoiceInfoLineRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>VendInvoiceInfoLineTaxExtension_IN</c> record relating to the _vendInvoiceInfoTableRecId values.
    /// </summary>
    /// <param name="_vendInvoiceInfoLineRecId">
    /// The VendInvoiceInfoTable field value to use to find the <c>VendInvoiceInfoLineTaxExtension_IN</c> record.
    /// </param>
    /// <param name="_update">
    /// A Boolean value indicating whether the record buffer should be able to be updated.
    /// </param>
    /// <returns>
    /// A <c>VendInvoiceInfoTableTax_IN</c> record buffer.
    /// </returns>
    public static VendInvoiceInfoLineTaxExtension_IN findByVendInvoiceInfoLineRecId(RefRecId _vendInvoiceInfoLineRecId, boolean _update = false)
    {
        VendInvoiceInfoLineTaxExtension_IN  vendInvoiceInfoLineTax;

        if (_vendInvoiceInfoLineRecId)
        {
            vendInvoiceInfoLineTax.selectForUpdate(_update);

            select firstonly vendInvoiceInfoLineTax
                where vendInvoiceInfoLineTax.VendInvoiceInfoLine == _vendInvoiceInfoLineRecId;
        }

        return vendInvoiceInfoLineTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds and returns the tax extension of invoice line for the given <c>RecId</c> field, if a line exists.
    /// </summary>
    /// <param name="_recId">
    /// The <c>RecId</c> value to check.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that determines whether the record should be selected for update; optional.
    /// </param>
    /// <returns>
    /// A single <c>VendInvoiceInfoLineTaxExtension_IN</c> table record if it exists.
    /// </returns>
    /// <remarks>
    /// If the record doesn't exist, an empty <c>VendInvoiceInfoLineTaxExtension_IN</c> table record is returned.
    /// </remarks>
    public static VendInvoiceInfoLineTaxExtension_IN findRecId(
        recId       _recId,
        boolean     _forUpdate = false)
    {
        VendInvoiceInfoLineTaxExtension_IN vendInvoiceInfoLineTaxExtn;

        if (_recId != 0)
        {
            vendInvoiceInfoLineTaxExtn.selectForUpdate(_forUpdate);

            select firstonly vendInvoiceInfoLineTaxExtn
                where vendInvoiceInfoLineTaxExtn.RecId == _recId;
        }

        return vendInvoiceInfoLineTaxExtn;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS63964</DeveloperDocumentation>
	<Label>@GLS63963</Label>
	<SingularLabel>@GLS63963</SingularLabel>
	<TableGroup>TransactionLine</TableGroup>
	<TitleField1>VendInvoiceInfoLine</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>VendInvoiceInfoLineIdx</ClusteredIndex>
	<Modules>AccountsPayable</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TCSGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TDSGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WithholdingTax</Name>
			<Label>@SYS7372</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TCSGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TDSGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CENVATCreditAvailed</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS5538</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Consignment</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS5513</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CustomsTariffCodeTable</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS5516</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DirectSettlement</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<EnumType>DirectSettlement_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DSA</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<Label>@GLS5341</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExciseRecordType</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<EnumType>ExciseRecordType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ExciseTariffCodes</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS5344</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ExciseType</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<EnumType>ExciseType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>GTAServiceCategory</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<EnumType>GTAServiceCategory_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsRecoverableServiceTax</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@GLS62292</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LogisticsLocation</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>NonRecoverablePercent</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>Percent</ExtendedDataType>
			<Label>@GLS5534</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesTaxFormTypes</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>SalesTaxFormTypesRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ServiceCodeTable</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS5065</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SoftwareDeclReceived_IN</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>SoftwareDeclReceived_IN</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxInformation_IN</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>TaxInformationRefRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWithholdAcknowledgementNumber</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>TaxWithholdAcknowledgementNumber_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdCountryRegionToRemittance</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>TaxWithholdCountryToRemitRefRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxWithholdNatureOfRemittance</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>TaxWitholdNatureOfRemittanceRefRecId_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TCSGroup</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TaxWithholdGroup</ExtendedDataType>
			<Label>@GLS5363</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TDSGroup</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TaxWithholdGroup</ExtendedDataType>
			<Label>@GLS5362</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>VATGoodsType</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<EnumType>VATGoodsType_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendInvoiceInfoLine</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS108836</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Exempt</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>HSNCodeTable</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InclTax</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>InclTax</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ITCCategory</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<EnumType>ITCCategory_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>NonBusinessUsagePercentage</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>Percent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ServiceAccountingCodeTable</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ServiceCategory</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<EnumType>ServiceCategory_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendorLocation</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendorTaxInformation</Name>
			<ConfigurationKey>SysDeletedObjects80</ConfigurationKey>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VendInvoiceInfoLineIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>VendInvoiceInfoLine</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>SalesPurchJournalLineExtension_IN</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>AssessableValue</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AssessableValueAccountingCurrency</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CompanyLocation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CreditNoteDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomsMaxRetailPrice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomsTariffCodeTable</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DirectSettlement</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DSA</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseRecordType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseTariffCodes</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ExciseType</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>MaximumRetailPrice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SalesTaxFormTypes</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ServiceCodeRefRecId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxAsPerOriginalInvoice</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxInformation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxWithholdTCSGroup</MapField>
					<MapFieldTo>TCSGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxWithholdTDSGroup</MapField>
					<MapFieldTo>TDSGroup</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>TaxModelDocLineExtensionIN</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>TaxInformation</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransactionRefRecId</MapField>
					<MapFieldTo>VendInvoiceInfoLine</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerExtensionMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>BaseRecId</MapField>
					<MapFieldTo>VendInvoiceInfoLine</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdGroupHeadingTCS</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxWithholdGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdGroupHeadingTCS</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdGroupHeadingTCS_VendInvoiceInfoLineTaxExtension_IN</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TCSGroup</Name>
					<SourceEDT>TaxWithholdGroup</SourceEDT>
					<Field>TCSGroup</Field>
					<RelatedField>TaxWithholdGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxWithholdGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxWithholdGroupHeadingTDS</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxWithholdGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxWithholdGroupHeadingTDS</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxWithholdGroupHeadingTDS_VendInvoiceInfoLineTaxExtension_IN</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TDSGroup</Name>
					<SourceEDT>TaxWithholdGroup</SourceEDT>
					<Field>TDSGroup</Field>
					<RelatedField>TaxWithholdGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxWithholdGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendInvoiceInfoLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>VendInvoiceInfoLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendInvoiceInfoLine</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>VendInvoiceInfoLine_VendInvoiceInfoLineTaxExtension_IN</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendInvoiceInfoLine</Name>
					<Field>VendInvoiceInfoLine</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TableRefIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>