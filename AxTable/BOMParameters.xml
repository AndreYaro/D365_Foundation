<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BOMParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BOMParameters extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>bomMaxLevel</Name>
				<Source><![CDATA[
    Level bomMaxLevel()
    {
        Level  test = BOMParameters::find().bomMaxLevel;

        return test ? test : BOMParameters::defaultBOMMaxLevel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    void delete()
    {
        throw error("@SYS23721");
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    void initValue()
    {
        super();

        this.bomMaxLevel = BOMParameters::defaultBOMMaxLevel();

        this.BOMCircularityCheckStrategy = BOMParameters::defaultBOMCircularityCheckStrategy();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCheckBOMCircularityBOM</Name>
				<Source><![CDATA[
    public boolean mustCheckBOMCircularityBOM()
    {
        return this.CheckBOMWhen == BOMCheckLevel::BOM ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCheckCircularityManual</Name>
				<Source><![CDATA[
    boolean mustCheckCircularityManual()
    {
        return this.CheckBOMWhen == BOMCheckLevel::Never;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCheckPerLine</Name>
				<Source><![CDATA[
    boolean mustCheckPerLine()
    {
        return this.CheckBOMWhen == BOMCheckLevel::Line;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    void update()
    {
        super();
        flush BOMParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret;
        ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldstr(BOMParameters, bomMaxLevel) :
                    if (this.bomMaxLevel > BOMParameters::defaultBOMMaxLevel())
                        ret = checkFailed(strfmt("@SYS98613", BOMParameters::defaultBOMMaxLevel()));
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bomCalcGroup</Name>
				<Source><![CDATA[
    static BOMCalcGroup bomCalcGroup()
    {
        BOMCalcGroup    bomCalcGroup;
        BOMCalcGroupId  bomCalcGroupId;

        bomCalcGroupId = BOMParameters::find().bomCalcGroupId;
        if (bomCalcGroupId)
        {
            bomCalcGroup = BOMCalcGroup::find(bomCalcGroupId);
            if (!bomCalcGroup)
            {
                warning(strfmt("@SYS94162", bomCalcGroupId), '', BOMParameters::infoActionBOMCalcGroup());
            }
        }

        return bomCalcGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultBOMMaxLevel</Name>
				<Source><![CDATA[
    static Level defaultBOMMaxLevel()
    {
        return 40;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultBOMCircularityCheckStrategy</Name>
				<Source><![CDATA[
    public static BOMCircularityCheckStrategy defaultBOMCircularityCheckStrategy()
    {
        return BOMCircularityCheckStrategy::OptimizeForHighComplexity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static BOMParameters find(boolean _forupdate = false)
    {
        BOMParameters parameter;

        parameter.selectForUpdate(_forupdate);

        select firstonly parameter
            index Key
            where parameter.Key == 0;

        if (!parameter && !parameter.isTmp())
        {
            Company::createParameter(parameter);
        }

        return parameter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>infoActionBOMCalcGroup</Name>
				<Source><![CDATA[
    static SysInfoAction_Formrun infoActionBOMCalcGroup()
    {
        SysInfoAction_Formrun   infoActionBOMCalcGroup;
        infoActionBOMCalcGroup = SysInfoAction_Formrun::newFormnameControlname(formstr(InventParameters),
                                                                               identifierstr(BOMcalculation_BOMCalcGroupId));

        return infoActionBOMCalcGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    static NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::BOM;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBOMId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefBOMId()
    {
        return NumberSeqReference::findReference(extendedtypenum(BOMId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefConfigId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefConfigId()
    {
        return NumberSeqReference::findReference(extendedtypenum(EcoResItemConfigurationName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefPriceCalcId</Name>
				<Source><![CDATA[
    static NumberSequenceReference numRefPriceCalcId()
    {
        return NumberSeqReference::findReference(extendedtypenum(PriceCalcId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pmfNumRefFormulaId</Name>
				<Source><![CDATA[
    public static NumberSequenceReference pmfNumRefFormulaId()
    {
        return NumberSeqReference::findReference(extendedtypenum(PmfFormulaId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>numRefBOMProductComponentMatchId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>NumberSequenceReference</c> for Product-component match ID number sequence.
    /// </summary>
    /// <returns>A <c>NumberSequenceReference</c> record.</returns>
    public static NumberSequenceReference numRefBOMProductComponentMatchId()
    {
        return NumberSeqReference::findReference(extendedTypeNum(ProdAsBuiltBOMMatchId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(BOMParameters, EnableTrackedComponents):
                if (this.EnableTrackedComponents)
                {
                    new NumberSeqModuleBOM().createBOMProductComponentMatchIdNumberSequence();
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>toggleTrackedComponents</Name>
				<Source><![CDATA[
    internal static void toggleTrackedComponents(boolean _enable)
    {
        ttsbegin;
        BOMParameters parameters = BOMParameters::find(true);
        parameters.EnableTrackedComponents = _enable;
        parameters.update();

        if (_enable)
        {
            new NumberSeqModuleBOM().createBOMProductComponentMatchIdNumberSequence();
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BOM</ConfigurationKey>
	<DeveloperDocumentation>@SYS124097</DeveloperDocumentation>
	<FormRef>BOMParameters</FormRef>
	<Label>@SYS25855</Label>
	<TableGroup>Parameter</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>Key</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>ProductInformationManagement</Modules>
	<PrimaryIndex>Key</PrimaryIndex>
	<ReplacementKey>Key</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CheckBOMWhen</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOMCircularityCheckStrategy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOMMaxLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOMCalcGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>BomCalculation</Name>
			<Label>@SYS5681</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BOMCalcGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Check</Name>
			<Label>@SYS24056</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CheckBOMWhen</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOMCircularityCheckStrategy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BOMMaxLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MandatoryQtyAndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlockRemoveApproval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BlockEditing</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventProfile_RU</Name>
			<Label>@GLS113769</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventProfileId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Formula</Name>
			<Label>@SCM:Formulas</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllowSIGFormulaVersionEditing</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Tracking</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EnableTrackedComponents</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BlockEditing</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>BOMApprove</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS90902</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BlockRemoveApproval</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>BOMApprove</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS90900</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BOMCalcGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMCalcGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>BOMMaxLevel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BOMMaxLevel</ExtendedDataType>
			<GroupPrompt>@SYS24149</GroupPrompt>
			<Label>@SYS24262</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CheckBOMWhen</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS25841</Label>
			<EnumType>BOMCheckLevel</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventProfileId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventProfileId_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MandatoryQtyAndDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>BOMApprove</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS90904</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BOMCircularityCheckStrategy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BOMCircularityCheckStrategy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowSIGFormulaVersionEditing</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PMF</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@SCM:Helptext_BOMParameters_AllowSIGFormulaVersionEditing</HelpText>
			<Label>@SCM:Field_BOMParameters_AllowSIGFormulaVersionEditing</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnableTrackedComponents</Name>
			<ConfigurationKey>Prod</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<FeatureClass>ProdAsBuiltBOMFeature</FeatureClass>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SCM:TrackedComponentsEnable</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Key</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BOMCalcGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>BOMCalcGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BOMCalcGroupId</Name>
					<Field>BOMCalcGroupId</Field>
					<RelatedField>CalcGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CalcGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventProfile_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventProfile_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventProfileId_RU</Name>
					<SourceEDT>InventProfileId_RU</SourceEDT>
					<Field>InventProfileId_RU</Field>
					<RelatedField>InventProfileId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventProfileIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>