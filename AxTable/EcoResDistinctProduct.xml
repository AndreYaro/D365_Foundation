<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResDistinctProduct</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResDistinctProduct extends EcoResProduct
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>EcoResDistinctProduct</c> table.
    /// </summary>
    /// <param name="_distinctProduct">
    ///    The ID of the <c>EcoResDistinctProduct</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EcoResDistinctProduct</c> table; otherwise, an empty record.
    /// </returns>
    static public EcoResDistinctProduct find(RefRecId _distinctProduct, boolean _forUpdate = false)
    {
        EcoResDistinctProduct ecoResDistinctProduct;

        if (_distinctProduct)
        {
            if (_forUpdate)
            {
                select firstonly forupdate ecoResDistinctProduct
                    where ecoResDistinctProduct.RecId == _distinctProduct;
            }
            else
            {
                ecoResDistinctProduct = EcoResProduct::find(_distinctProduct) as EcoResDistinctProduct; // Use this to benefit from caching of all product types
            }
        }
        return ecoResDistinctProduct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS133904</DeveloperDocumentation>
	<FormRef>EcoResProductDetails</FormRef>
	<Label>@SYS133903</Label>
	<ListPageRef>EcoResProductListPage</ListPageRef>
	<TableGroup>Main</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Extends>EcoResProduct</Extends>
	<Modules>ProductInformationManagement</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields />
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResProduct_1</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>EcoResProduct</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResProduct_1</RelatedTableRole>
			<RelationshipType>Specialization</RelationshipType>
			<Role>EcoResProduct_1_EcoResDistinctProduct</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>