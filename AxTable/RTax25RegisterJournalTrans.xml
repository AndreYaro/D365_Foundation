<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTax25RegisterJournalTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RTax25RegisterJournalTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fromDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public FromDate fromDate()
    {
        return mkDate(1, (this.PeriodNum - 1) * RTax25RegisterJournalTable::periodMthLength(this.PeriodType) + 1, this.FiscalYear);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromRegisterJournalTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromRegisterJournalTable(RTax25RegisterJournalTable _registerJournalTable)
    {
        this.JournalNum          = _registerJournalTable.JournalNum;
        this.PeriodType          = _registerJournalTable.PeriodType;
        this.PeriodNum           = _registerJournalTable.PeriodNum;
        this.FiscalYear          = _registerJournalTable.FiscalYear;
        this.RegisterJournalType = _registerJournalTable.RegisterJournalType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        RTax25RegisterHideSetup registerHideSetup;

        ttsbegin;

        super();

        while select forupdate registerHideSetup
            where registerHideSetup.RegisterId == this.RegisterId &&
                  registerHideSetup.TableTrans == NoneTableTrans::Table
        {
            registerHideSetup.TableTrans          = NoneTableTrans::Transaction;
            registerHideSetup.FiscalYear          = this.FiscalYear;
            registerHideSetup.JournalNum          = this.JournalNum;
            registerHideSetup.PeriodType          = this.PeriodType;
            registerHideSetup.PeriodNum           = this.PeriodNum;
            // FieldId and Hided are already set
            registerHideSetup.insert();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies field of the journal lines.
    /// </summary>
    /// <param name="_fieldId">
    /// The field id.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(RTax25RegisterJournalTrans, Approved) :
                if (this.Approved)
                {
                    this.Approver = HcmWorker::userId2Worker(curUserId());
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerJournalTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RTax25RegisterJournalTable registerJournalTable()
    {
        return RTax25RegisterJournalTable::find(this.JournalNum,
                                                this.PeriodType,
                                                this.PeriodNum,
                                                this.FiscalYear,
                                                this.RegisterJournalType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    display RTax25RegisterName registerName()
    {
        DictEnum dictEnum;

        if (this.AssessedTaxRegisterType != RAssetAssessedTaxRegType::None)
        {
            dictEnum = new DictEnum(enumNum(RAssetAssessedTaxRegType));
            return dictEnum.value2Label(dictEnum.symbol2Value(this.RegisterId));
        }
        else
        return RTax25RegisterTable::registerName(this.RegisterId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>toDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ToDate toDate()
    {
        return endmth(mkDate(1, this.PeriodNum * RTax25RegisterJournalTable::periodMthLength(this.PeriodType), this.FiscalYear));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        RTax25RegisterJournalTable  registerJournalTable;
        boolean                     ret;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(RTax25RegisterJournalTrans, Approved) :
                    registerJournalTable = this.registerJournalTable();

                    boolean isTransJournalForTaxDiffRegisterByBalance = (RTax25RegisterTable::findRegisterId(this.RegisterId).RegisterType == RTax25RegisterType::ConstantDifferencesByBalance
                            || RTax25RegisterTable::findRegisterId(this.RegisterId).RegisterType == RTax25RegisterType::TemporaryDifferencesByBalance)
                        && !LedgerJournalCreate_Tax25_RU::notExistReverseJournal(registerJournalTable, LedgerJournalType::RTax25TaxDiffByBalance, true);

                    boolean isTransJournalForTaxDiffRegister = (RTax25RegisterTable::findRegisterId(this.RegisterId).RegisterType == RTax25RegisterType::ConstantDifferences
                            || RTax25RegisterTable::findRegisterId(this.RegisterId).RegisterType == RTax25RegisterType::TemporaryDifferences)
                        && !LedgerJournalCreate_Tax25_RU::notExistReverseJournal(registerJournalTable, LedgerJournalType::RTax25, true);

                    boolean isTransJournalForDebtDebitReservation = (RTax25RegisterTable::findRegisterId(this.RegisterId).RegisterType == RTax25RegisterType::DebtDebitReservationDetail
                            || RTax25RegisterTable::findRegisterId(this.RegisterId).RegisterType == RTax25RegisterType::DebtDebitReservationDetailRAP)
                        && !LedgerJournalCreate_Tax25_RU::notExistReverseJournal(registerJournalTable, LedgerJournalType::RTax25DebtDebitReserve, true);

                    boolean isTransJournalForAmountDifference = RTax25RegisterTable::findRegisterId(this.RegisterId).RegisterType == RTax25RegisterType::AmountDifference
                        && !LedgerJournalCreate_Tax25_RU::notExistReverseJournal(registerJournalTable, LedgerJournalType::RTax25AmountDifference, false);

                    boolean isTransJournalForTaxExchangeAdj = RTax25RegisterTable::findRegisterId(this.RegisterId).RegisterType == RTax25RegisterType::TaxExchangeAdj
                        && !LedgerJournalCreate_Tax25_RU::notExistReverseJournal(registerJournalTable, LedgerJournalType::RTax25ExchDifference, false);

                    boolean isTransJournalForTaxRemainGoods = RTax25RegisterTable::findRegisterId(this.RegisterId).RegisterType == RTax25RegisterType::TaxRemainGoods
                        && !LedgerJournalCreate_Tax25_RU::notExistReverseJournal(registerJournalTable, LedgerJournalType::RTax25TaxRemainGoods, false);

                    boolean isTransJournalForAssessedTax = (!LedgerJournalCreate_Tax25_RU::notExistReverseJournal(registerJournalTable, LedgerJournalType::RAssetAssessedTax, true)
                            || !LedgerJournalCreate_Tax25_RU::notExistReverseJournal(registerJournalTable, LedgerJournalType::RAssetTransportTax, true)
                            || !LedgerJournalCreate_Tax25_RU::notExistReverseJournal(registerJournalTable, LedgerJournalType::RAssetLandTax, true))
                        && this.AssessedTaxRegisterType != RAssetAssessedTaxRegType::None;

                    if (isTransJournalForTaxDiffRegisterByBalance
                        || isTransJournalForTaxDiffRegister
                        || isTransJournalForDebtDebitReservation
                        || isTransJournalForAmountDifference
                        || isTransJournalForTaxExchangeAdj
                        || isTransJournalForTaxRemainGoods
                        || isTransJournalForAssessedTax)
                    ret = false;
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(RTax25RegisterJournalNum  _rTax25RegisterJournalNum,
                                RTax25PeriodType          _rTax25PeriodType,
                                RTax25PeriodNum           _rTax25PeriodNum,
                                Yr                        _yr,
                                RTax25RegisterJournalType _registerJournalType,// = RTax25RegisterJournalType::ProfitTax,
                                RTax25RegisterId          _rTax25RegisterId    = '')
    {
        return (select firstonly RecId from rtax25RegisterJournalTrans
                    where rtax25RegisterJournalTrans.JournalNum          == _rTax25RegisterJournalNum &&
                          rtax25RegisterJournalTrans.PeriodType          == _rTax25PeriodType         &&
                          rtax25RegisterJournalTrans.PeriodNum           == _rTax25PeriodNum          &&
                          rtax25RegisterJournalTrans.FiscalYear          == _yr                       &&
                          rtax25RegisterJournalTrans.RegisterJournalType == _registerJournalType      &&
                          rtax25RegisterJournalTrans.Cancelled           == NoYes::No                 &&
                         (rtax25RegisterJournalTrans.RegisterId          == _rTax25RegisterId         ||
                          (_rTax25RegisterId ? false : true))).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25RegisterJournalTrans find(RTax25RegisterJournalNum  _rTax25RegisterJournalNum,
                                                  RTax25PeriodType          _rTax25PeriodType,
                                                  RTax25PeriodNum           _rTax25PeriodNum,
                                                  Yr                        _yr,
                                                  RTax25RegisterId          _rTax25RegisterId,
                                                  RTax25RegisterJournalType _registerJournalType = RTax25RegisterJournalType::ProfitTax,
                                                  boolean                   _forUpdate           = false)

    {
        RTax25RegisterJournalTrans registerJournalTrans;
        RTax25RegisterJournalTable registerJournalTable;

        registerJournalTrans.selectForUpdate(_forUpdate);

        if (_rTax25RegisterJournalNum)
        {
            select firstonly registerJournalTrans
                where  registerJournalTrans.JournalNum          == _rTax25RegisterJournalNum  &&
                   registerJournalTrans.PeriodType          == _rTax25PeriodType          &&
                   registerJournalTrans.PeriodNum           == _rTax25PeriodNum           &&
                   registerJournalTrans.FiscalYear          == _yr                        &&
                       registerJournalTrans.Cancelled           == NoYes::No                  &&
                   registerJournalTrans.RegisterId          == _rTax25RegisterId;
        }
        else
        {
            select firstonly registerJournalTable
                order by Version desc
                where registerJournalTable.PeriodType          == _rTax25PeriodType &&
                      registerJournalTable.PeriodNum           == _rTax25PeriodNum  &&
                      registerJournalTable.FiscalYear          == _yr;

            if (registerJournalTable)
            {
                registerJournalTrans = RTax25RegisterJournalTrans::findLink(
                    registerJournalTable,
                    _rTax25RegisterId,
                    _forUpdate);
            }
        }

        return registerJournalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25RegisterJournalTrans findRecId(RecId _recId, boolean _forupdate = false)
    {
        RTax25RegisterJournalTrans registerJournalTrans;

        registerJournalTrans.selectForUpdate(_forupdate);

        if (_recId)
        {
            select firstonly registerJournalTrans
                where registerJournalTrans.RecId == _recId;
        }
        return registerJournalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (! this.Cancelled &&
            (select firstonly RecId from rtax25RegisterJournalTrans
                 where rtax25RegisterJournalTrans.JournalNum          == this.JournalNum          &&
                       rtax25RegisterJournalTrans.PeriodType          == this.PeriodType          &&
                       rtax25RegisterJournalTrans.PeriodNum           == this.PeriodNum           &&
                       rtax25RegisterJournalTrans.FiscalYear          == this.FiscalYear          &&
                       rtax25RegisterJournalTrans.Cancelled           == NoYes::No                &&
                       rtax25RegisterJournalTrans.RegisterId          == this.RegisterId          &&
                       rtax25RegisterJournalTrans.RecId               != this.RecId).RecId != 0)
            ret = checkFailed("@SYS57613");

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existLink</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean existLink(RTax25RegisterJournalTable _rTax25RegisterJournalTable,
                                    RTax25RegisterId           _rTax25RegisterId    = '')
    {
        RTax25RegisterJournalTrans  registerJournalTrans;
        RTax25RegisterJournalLink   registerJournalLink;

        if (_rTax25RegisterJournalTable.EnableCorrective)
        {
            select firstonly RecId from registerJournalTrans
                where !_rTax25RegisterId  ||
                       registerJournalTrans.RegisterId == _rTax25RegisterId
                       exists join registerJournalLink
                            where registerJournalLink.TransRecId == registerJournalTrans.RecId &&
                                  registerJournalLink.TableRecId == _rTax25RegisterJournalTable.RecId;
        }
        else
        {
            select firstonly RecId from registerJournalTrans
                where registerJournalTrans.JournalNum          == _rTax25RegisterJournalTable.JournalNum            &&
                      registerJournalTrans.PeriodType          == _rTax25RegisterJournalTable.PeriodType            &&
                      registerJournalTrans.PeriodNum           == _rTax25RegisterJournalTable.PeriodNum             &&
                      registerJournalTrans.FiscalYear          == _rTax25RegisterJournalTable.FiscalYear            &&
                      registerJournalTrans.RegisterJournalType == _rTax25RegisterJournalTable.RegisterJournalType   &&
                      registerJournalTrans.Cancelled           == NoYes::No                                         &&
                     (!_rTax25RegisterId || registerJournalTrans.RegisterId          == _rTax25RegisterId);
        }

        return registerJournalTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLastCorrection</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25RegisterJournalTrans findLastCorrection(RTax25RegisterJournalTable _currentJournalTable,
                                                                RTax25RegisterId           _rTax25RegisterId)

    {
        RTax25RegisterJournalTrans  registerJournalTrans;
        RTax25RegisterJournalTable  registerJournalTable;

        select firstonly registerJournalTrans
            where  registerJournalTrans.Cancelled           == NoYes::No                        &&
                   registerJournalTrans.RegisterId          == _rTax25RegisterId
            join TableId from registerJournalTable
                order by Version desc
                where registerJournalTrans.JournalNum          == registerJournalTable.JournalNum   &&
                      registerJournalTrans.PeriodType          == registerJournalTable.PeriodType   &&
                      registerJournalTrans.PeriodNum           == registerJournalTable.PeriodNum    &&
                      registerJournalTrans.FiscalYear          == registerJournalTable.FiscalYear   &&
                      registerJournalTable.Accepted == RTax25CorrectionAccepted::Accepted           &&
                    ((registerJournalTable.Version  != 0                                            &&
                      registerJournalTable.CorrectedRecId == _currentJournalTable.CorrectedRecId)   ||
                     (registerJournalTable.Version == 0                                             &&
                      registerJournalTable.RecId   == _currentJournalTable.CorrectedRecId));

        return registerJournalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLink</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RTax25RegisterJournalTrans findLink(RTax25RegisterJournalTable _registerJournalTable, RTax25RegisterId _registerId, boolean _forUpdate = false)
    {
        RTax25RegisterJournalTrans registerJournalTrans;
        RTax25RegisterJournalLink  registerJournalLink;

        if (_registerJournalTable.EnableCorrective)
        {
            registerJournalTrans.selectForUpdate(_forUpdate);

            select firstonly registerJournalTrans
                where registerJournalTrans.RegisterId == _registerId &&
                      registerJournalTrans.Cancelled  == NoYes::No
                exists join registerJournalLink
                    where registerJournalLink.TransRecId == registerJournalTrans.RecId &&
                          registerJournalLink.TableRecId == _registerJournalTable.RecId;
        }
        else
        {
            registerJournalTrans = RTax25RegisterJournalTrans::find(
                _registerJournalTable.JournalNum,
                _registerJournalTable.PeriodType,
                _registerJournalTable.PeriodNum,
                _registerJournalTable.FiscalYear,
                _registerId,
                RTax25RegisterJournalType::ProfitTax,
                _forUpdate);
        }
        return registerJournalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>regType2TaxType</Name>
				<Source><![CDATA[
    /// <summary>
    /// The method converts FA tax register type into FA tax type.
    /// </summary>
    /// <param name="_taxRegType">
    /// The parameter contains FA tax register type.
    /// </param>
    /// <returns>
    /// An FA tax type.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RAssetTaxType regType2TaxType(RAssetAssessedTaxRegType _taxRegType)
    {
        switch (_taxRegType)
        {
            case RAssetAssessedTaxRegType::None :
                return RAssetTaxType::Empty;

            case RAssetAssessedTaxRegType::DepreciatedCostCalc,
                 RAssetAssessedTaxRegType::TotalDepreciatedCost,
                 RAssetAssessedTaxRegType::AssessedTax :
                return RAssetTaxType::AssessedTax;

            case RAssetAssessedTaxRegType::TransportTax,
                 RAssetAssessedTaxRegType::TransportTaxCalc :
                return RAssetTaxType::TransportTax;

            case RAssetAssessedTaxRegType::LandTax,
                 RAssetAssessedTaxRegType::LandTaxCalc :
                return RAssetTaxType::LandTax;
        }

        throw error(strfmt("@SYS12580", _taxRegType));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>RTax25RegisterJournalTrans</FormRef>
	<Label>@GLS103752</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>RegisterId</TitleField1>
	<TitleField2>PeriodNum</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>JournalPeriodRegisterIdx</ClusteredIndex>
	<Modules>RTax25</Modules>
	<PrimaryIndex>JournalPeriodRegisterIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegisterId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Approved</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Approve</Name>
			<Label>@SYS16449</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Approved</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Approver</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegisterId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@GLS103735</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Calculation</Name>
			<Label>@SYS7523</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CalculationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Cancelled</Name>
			<Label>@SYS107501</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Cancelled</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Approved</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Approved</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Approver</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AssessedTaxRegisterType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>RAssetAssessedTaxRegType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>FiscalYear</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Yr</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RTax25RegisterJournalNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PeriodNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RTax25PeriodNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PeriodType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RTax25PeriodType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RegisterId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RTax25RegisterId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RegisterJournalType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Visible>No</Visible>
			<EnumType>RTax25RegisterJournalType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RTax25RegisterStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CalculationType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RTax25CalculationType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Cancelled</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS107501</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>HcmWorkerIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Approver</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>JournalPeriodRegisterIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FiscalYear</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PeriodType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PeriodNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RegisterId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RTax25RegisterJournalTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Approver</Name>
					<Field>Approver</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RTax25RegisterJournalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RTax25RegisterJournalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RTax25RegisterJournalTable</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>RTax25RegisterJournalTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RegisterJournalType</Name>
					<Field>RegisterJournalType</Field>
					<RelatedField>RegisterJournalType</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalYear</Name>
					<Field>FiscalYear</Field>
					<RelatedField>FiscalYear</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PeriodNum</Name>
					<Field>PeriodNum</Field>
					<RelatedField>PeriodNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PeriodType</Name>
					<Field>PeriodType</Field>
					<RelatedField>PeriodType</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalNum</Name>
					<Field>JournalNum</Field>
					<RelatedField>JournalNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RTax25RegisterJournalTableJournalNum</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RTax25RegisterJournalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RTax25RegisterJournalTableJournalNum</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RTax25RegisterJournalTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>RegisterJournalType_Extern</Name>
					<SourceEDT>RTax25RegisterJournalNum</SourceEDT>
					<RelatedField>RegisterJournalType</RelatedField>
					<ValueStr>RTax25RegisterJournalType::ProfitTax</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalNum</Name>
					<SourceEDT>RTax25RegisterJournalNum</SourceEDT>
					<Field>JournalNum</Field>
					<RelatedField>JournalNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>RTax25RegisterJournalTablePeriodNum</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>RTax25RegisterJournalTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>RTax25RegisterJournalTablePeriodNum</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RTax25RegisterJournalTrans</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>RegisterJournalType_Extern</Name>
					<SourceEDT>RTax25PeriodNum</SourceEDT>
					<RelatedField>RegisterJournalType</RelatedField>
					<ValueStr>RTax25RegisterJournalType::ProfitTax</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PeriodNum</Name>
					<SourceEDT>RTax25PeriodNum</SourceEDT>
					<Field>PeriodNum</Field>
					<RelatedField>PeriodNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RTax25RegisterTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RTax25RegisterTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RegisterId</Name>
					<SourceEDT>RTax25RegisterId</SourceEDT>
					<Field>RegisterId</Field>
					<RelatedField>RegisterId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RegisterIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>