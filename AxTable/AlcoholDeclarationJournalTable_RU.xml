<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AlcoholDeclarationJournalTable_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AlcoholDeclarationJournalTable_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>approved</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Shows if the journal table is approved based on the approval of all <c>AlcoholDeclarationJournalTrans_RU</c> records.
    /// </summary>
    /// <returns>
    ///    true if the journal is approved; false otherwise.
    /// </returns>
    display boolean approved()
    {
        return ((select firstonly AlcoholDeclarationJournalTrans_RU
                    where AlcoholDeclarationJournalTrans_RU.JournalId  == this.JournalId).RecId &&
              ! (select firstonly AlcoholDeclarationJournalTrans_RU
                    where AlcoholDeclarationJournalTrans_RU.JournalId  == this.JournalId &&
                          AlcoholDeclarationJournalTrans_RU.Approved   == NoYes::No).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs some logic on record deletion.
    /// </summary>
    public void delete()
    {
        AlcoholDeclarationJournalTable_RU   journalTable;

        ttsbegin;

        NumberSeq::releaseNumber(InventParameters::numRefAlcoholDeclarationJournalId_RU().NumberSequenceId, this.JournalId);

        super();

        while select forUpdate journalTable
            where journalTable.PeriodType == this.PeriodType
               && journalTable.PeriodNum  == this.PeriodNum
               && journalTable.FiscalYear == this.FiscalYear
               && journalTable.RecId      != this.RecId
        {
            NumberSeq::releaseNumber(InventParameters::numRefAlcoholDeclarationJournalId_RU().NumberSequenceId, journalTable.JournalId);
            journalTable.doDelete();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the start date of the period stored in the current record.
    /// </summary>
    /// <returns>
    ///    The start date of the period stored in the current record.
    /// </returns>
    public FromDate fromDate()
    {
        return mkdate(1, (this.PeriodNum - 1) * AlcoholDeclarationJournalTable_RU::periodMthLength(this.PeriodType) + 1, this.FiscalYear);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes some record fields with default values.
    /// </summary>
    /// <param name="_initYearPeriod">
    ///    Indicates if to init fields related to the period.
    /// </param>
    public void initValue(boolean   _initYearPeriod = true)
    {
        super();

        this.PeriodType = AlcoholDeclarationPeriodType_RU::Quarter;

        if (_initYearPeriod)
        {
            this.initYearPeriod();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initYearPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes some fields related to the period.
    /// </summary>
    public void initYearPeriod()
    {
        AlcoholDeclarationJournalTable_RU   journalTable;
        AlcoholDeclarationPeriodNum_RU      periodNum;
        Yr                                  fiscalYear;
        int                                 periodLag = AlcoholDeclarationJournalTable_RU::periodMthLength(this.PeriodType);
        const int MonthsPerYear = 12;

        select firstonly journalTable
            order by FiscalYear desc, PeriodNum desc
            where journalTable.PeriodType == this.PeriodType;

        if (journalTable)
        {
            fiscalYear = journalTable.FiscalYear;
            periodNum  = journalTable.PeriodNum + 1;
            if (periodNum div (MonthsPerYear / periodLag) && periodNum != (MonthsPerYear / periodLag))
            {
                fiscalYear++;
                periodNum = periodNum mod (MonthsPerYear / periodLag);
                periodNum = periodNum ? periodNum : 1;
            }
        }
        else
        {
            fiscalYear = year(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
            if (this.PeriodType == AlcoholDeclarationPeriodType_RU::NineMonths)
                periodNum = 0;
            else
            periodNum  = mthofyr(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())) div periodLag;

            if (periodNum * periodLag < mthofyr(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())))
            {
                periodNum++;
            }
        }

        this.FiscalYear = fiscalYear;
        this.PeriodNum  = periodNum;

        this.FromDate   = this.fromDate();
        this.ToDate     = this.toDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs some logic on record insertion.
    /// </summary>
    public void insert()
    {
        ttsbegin;

        if (! this.CorrectedPeriodNum && ! this.CorrectedFiscalYear)
        {
            this.CorrectedPeriodNum  = this.PeriodNum;
            this.CorrectedFiscalYear = this.FiscalYear;
        }

        super();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCorrectionJournal</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Shows if the current journal is a correction journal.
    /// </summary>
    /// <returns>
    ///    true if the journal is a correction journal; false otherwise.
    /// </returns>
    public boolean isCorrectionJournal()
    {
        return  this.PeriodNum  != this.CorrectedPeriodNum ||
                this.FiscalYear != this.CorrectedFiscalYear;
    }

]]></Source>
			</Method>
			<Method>
				<Name>toDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the end date of the period stored in the current record.
    /// </summary>
    /// <returns>
    ///    The end date of the period stored in the current record.
    /// </returns>
    public ToDate toDate()
    {
        return endmth(mkdate(1, this.PeriodNum * AlcoholDeclarationJournalTable_RU::periodMthLength(this.PeriodType), this.FiscalYear));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (this.isCorrectionJournal())
            {
                ret = checkFailed("@SYS4002802");
            }
            else
            {
                ret = AlcoholDeclarationCalcController_RU::nextJournalNotExists(this);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if the record can be saved and performs some logic on saving.
    /// </summary>
    /// <returns>
    ///    true if the record can be saved; false otherwise.
    /// </returns>
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            this.FromDate   = this.fromDate();
            this.ToDate     = this.toDate();
            ret = AlcoholDeclarationCalcController_RU::canCreateJournal(this);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record in the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </summary>
    /// <param name="_journalId">
    ///    The ID of the journal to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    Indicates whether to select the record for update or not.
    /// </param>
    /// <returns>
    ///    The record found in the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </returns>
    public static AlcoholDeclarationJournalTable_RU find(AlcoholDeclarationJournalId_RU   _journalId,
                                                         boolean                          _forUpdate = false)
    {
        AlcoholDeclarationJournalTable_RU alcoholDeclarationJournalTable;

        if (_journalId)
        {
            if (_forUpdate)
                alcoholDeclarationJournalTable.selectForUpdate(_forUpdate);

            select firstonly alcoholDeclarationJournalTable
                index hint JournalIdx
                where alcoholDeclarationJournalTable.JournalId == _journalId;
        }
        return alcoholDeclarationJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodMthLength</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the period length in monthes.
    /// </summary>
    /// <param name="_periodType">
    ///    The type of the period.
    /// </param>
    /// <returns>
    ///    The period length in monthes.
    /// </returns>
    static public int periodMthLength(AlcoholDeclarationPeriodType_RU _periodType)
    {
        int ret;
        const int MonthsNine = 9;
        const int MonthsPerQuarter = 3;
        const int MonthsPerHalfYear = 6;
        const int MonthsPerYear = 12;

        switch (_periodType)
        {
            case AlcoholDeclarationPeriodType_RU::Month:
                ret = 1;
                break;
            case AlcoholDeclarationPeriodType_RU::Quarter:
                ret = MonthsPerQuarter;
                break;
            case AlcoholDeclarationPeriodType_RU::HalfYear:
                ret = MonthsPerHalfYear;
                break;
            case AlcoholDeclarationPeriodType_RU::Year:
                ret = MonthsPerYear;
                break;
            case AlcoholDeclarationPeriodType_RU::NineMonths:
                ret = MonthsNine;
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4002780</DeveloperDocumentation>
	<FormRef>AlcoholDeclarationJournalTable_RU</FormRef>
	<Label>@SYS4002779</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>JournalId</TitleField1>
	<TitleField2>Name</TitleField2>
	<ClusteredIndex>JournalIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>EGAIS</Modules>
	<PrimaryIndex>JournalIdx</PrimaryIndex>
	<ReplacementKey>JournalIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectedPeriodNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectedFiscalYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectionNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectedPeriodNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectedFiscalYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectionNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>approved</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ReportingPeriod</Name>
			<Label>@SYS59333</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PeriodType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectedPeriodNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectedFiscalYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectionNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CorrectedFiscalYear</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AlcoholDeclarationFiscalYear_RU</ExtendedDataType>
			<Label>@SYS4002806</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CorrectedPeriodNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AlcoholDeclarationPeriodNum_RU</ExtendedDataType>
			<Label>@SYS4002807</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CorrectionNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AlcoholDeclarationCorrectionNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>FiscalYear</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AlcoholDeclarationFiscalYear_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AlcoholDeclarationJournalId_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@SYS10018</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PeriodNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AlcoholDeclarationPeriodNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PeriodType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>AlcoholDeclarationPeriodType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ToDate</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JournalIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>