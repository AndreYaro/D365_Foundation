<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmPositionForecastDetailV2</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HcmPositionForecastDetailV2 extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>doesJobAcceptForecastPositions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a job has reached the maximum number of forecast positions.
    /// </summary>
    /// <returns>
    /// true if the job lets new forecast positions be created that reference the specified job; otherwise,
    /// false .
    /// </returns>
    public boolean doesJobAcceptForecastPositions()
    {
        boolean isValid = true;
        HcmJob hcmJob;
        HcmMaximumPositions maximumPositions = maxInt();

        hcmJob = HcmJob::find(this.Job);

        if (hcmJob.RecId && (hcmJob.MaximumPositions != maximumPositions))
        {
            if ((hcmJob.MaximumPositions == 0) ||
                (hcmJob.MaximumPositions <= HcmPositionForecastDetailV2::numberOfForecastPositionsPerJob(this.Job)))
            {
                isValid = checkFailed(strFmt("@GLS190503", hcmJob.JobId));
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Executed when a field is modified in a form or Web form.
    /// </summary>
    /// <param name="_fieldId">
    ///    The field ID of the field to modify.
    /// </param>
    /// <remarks>
    ///    Overriden to peform application logic.
    /// </remarks>
    public void modifiedField(FieldId _fieldId)
    {
        HcmJobDetail hcmJobDetail;

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(HcmPositionForecastDetailV2, Job) :

                if (this.RecId == 0)
                {
                    // Only want to default job attributes if it is the initial version record created for the position
                    hcmJobDetail = HcmJobDetail::findByJob(this.Job);

                    if (hcmJobDetail.RecId != 0)
                    {
                        this.Description = hcmJobDetail.Description;
                        this.Title = hcmJobDetail.Title;
                    }
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
        utcdatetime asOfDate = DateTimeUtil::utcNow();
        HcmPositionForecastDetailV2 positionForecastDetail;

        ret = super();

        if (FormDataUtil::isFormDataSource(this))
        {
            if (this.Job != this.orig().Job)
            {
                // perform check for both live and forecast positions
                ret = ret && HcmJob::doesJobAcceptPositions(this.Job, asOfDate);
                ret = ret && this.doesJobAcceptForecastPositions();
            }
        }
        else
        {
            // Even though there is code duplication this clears the intent of the operation
            // also this if else follows the same pattern as HcmPositionDetila.ValidateWrite()

            positionForecastDetail = HcmPositionForecastDetailV2::findByPositionForecastScenerio(this.PositionForecastScenario,this.PositionForecast);
            if (this.Job != positionForecastDetail.Job)
            {
                ret = ret && HcmJob::doesJobAcceptPositions(this.Job, asOfDate);
                ret = ret && this.doesJobAcceptForecastPositions();
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the specified record exists in the <c>HcmPositionForecastDetailV2</c> table; if not, an error
    ///    message is displayed.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(HcmPositionForecastDetailV2RecId _recId)
    {
        boolean ret = true;

        if (!HcmPositionForecastDetailV2::exist(_recId))
        {
            ret = checkFailed(strFmt(HcmPositionForecastDetailV2::txtNotExist(), tableStr(HcmPositionForecastDetailV2)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record exists in the <c>HcmPositionForecastDetailV2</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false .
    /// </returns>
    public static boolean exist(HcmPositionForecastDetailV2RecId _recId)
    {
        return _recId && (select firstonly RecId from HcmPositionForecastDetailV2
                    where HcmPositionForecastDetailV2.RecId == _recId).RecId!= 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>HcmPositionForecastDetailV2</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    /// A <c>HcmPositionForecastDetailV2</c> record.
    /// </returns>
    public static HcmPositionForecastDetailV2 find(
        HcmPositionForecastDetailV2RecId _recId,
        boolean _forUpdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        hcmPositionForecastDetailV2 hcmPositionForecastDetailV2;

        hcmPositionForecastDetailV2.selectForUpdate(_forUpdate );

        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hcmPositionForecastDetailV2.concurrencyModel(_concurrencyModel);
        }

        select firstonly hcmPositionForecastDetailV2
            where hcmPositionForecastDetailV2.RecId == _recId;

        return hcmPositionForecastDetailV2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupDepartment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs the department form lookup.
    /// </summary>
    /// <param name="_formStringControl">
    /// The control that the lookup should be performed on.
    /// </param>
    public static void lookupDepartment(FormStringControl _formStringControl)
    {
        Query query = new Query();
        QueryBuildDataSource omOperatingUnitQbds = query.addDataSource(tableNum(OMOperatingUnit));
        QueryBuildDataSource hcmPositionForecastDetailV2Qbds = omOperatingUnitQbds.addDataSource(tableNum(HcmPositionForecastDetailV2));
        SysTableLookup tableLookup;

        if (_formStringControl == null)
        {
            throw error(Error::missingParameter(null));
        }

        hcmPositionForecastDetailV2Qbds.joinMode(JoinMode::ExistsJoin);
        hcmPositionForecastDetailV2Qbds.relations(true);

        tableLookup = SysTableLookup::newParameters(tableNum(OMOperatingUnit), _formStringControl, true);

        // Add fields that will be shown in the lookup form as columns
        tableLookup.addLookupfield(fieldNum(OMOperatingUnit, Name));

        // Add the query to the lookup form
        tableLookup.parmQuery(query);

        // Perform the lookup
        tableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfForecastPositionsPerJob</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the number of unique positions in the <c>HcmPositionForecastDetailV2</c> table that have a
    /// specified job association.
    /// </summary>
    /// <param name="_jobRecId">
    /// A <c>HcmJobRecId</c> value for a <c>HcmJob</c> record.
    /// </param>
    /// <returns>
    /// The number of unique forecast positions that have the specified <c>HcmJobRecId</c> value.
    /// </returns>
    public static HcmMaximumPositions numberOfForecastPositionsPerJob(HcmJobRecId _jobRecId)
    {
        HcmPositionForecastDetailV2 positionForecastDetail;

        select count(Job) from positionForecastDetail where positionForecastDetail.Job == _jobRecId;

        return int642int(positionForecastDetail.Job);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByPositionForecastScenerio</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specified record in the <c>HcmPositionForecastDetailV2</c> table.
    /// </summary>
    /// <param name="_positionForecastScenerio">
    /// The value of the <c>PositionForecastScenario</c> field of the record to find.
    /// </param>
    /// <param name="_hcmPositionForecastRecId">
    /// The value of the <c>PositionForecast</c> field of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when the record is read; optional.
    /// </param>
    /// <returns>
    /// A record or multiple records in the <c>HcmPositionForecastDetailV2</c> table; otherwise, an record.
    /// </returns>
    public static HcmPositionForecastDetailV2 findByPositionForecastScenerio(
    HcmPositionForecastScenarioRecId _positionForecastScenerio,
    HcmPositionForecastRecId _hcmPositionForecastRecId,
    boolean _forUpdate = false,
    ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        HcmPositionForecastDetailV2 hcmPositionForecastDetailV2;

        hcmPositionForecastDetailV2.selectForUpdate(_forUpdate );

        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            hcmPositionForecastDetailV2.concurrencyModel(_concurrencyModel);
        }

        select firstonly hcmPositionForecastDetailV2
            where hcmPositionForecastDetailV2.PositionForecastScenario == _positionForecastScenerio
            && hcmPositionForecastDetailV2.PositionForecast == _hcmPositionForecastRecId;

        return hcmPositionForecastDetailV2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdateFromHcmPositionForecastScenario</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a record in table <c>HcmPositionForecastDetailV2</c> with the help of given parameters
    /// </summary>
    /// <param name="_forecastScenario">
    /// The <c>HcmForecastScenarioRecId</c> that is associated with the position forecast scenario
    /// </param>
    /// <param name="_positionForecast">
    /// The <c>HcmPositionForecastRecId</c> that is associated with the position forecast scenario
    /// </param>

    public static void createOrUpdateFromHcmPositionForecastScenario(HcmPositionForecastRecId _hcmPositionForecastRecId, HcmPositionForecastScenarioRecId _positionForecastScenerio )
    {
        HcmPositionForecastDetailV2 hcmPositionForecastDetailV2;

        select firstonly forupdate hcmPositionForecastDetailV2
            where hcmPositionForecastDetailV2.PositionForecastScenario == _positionForecastScenerio
            && hcmPositionForecastDetailV2.PositionForecast == 0;

        if (hcmPositionForecastDetailV2.PositionForecast == 0)
        {
            hcmPositionForecastDetailV2.PositionForecast = _hcmPositionForecastRecId;
            hcmPositionForecastDetailV2.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>title</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>TitleId</c> of the position.
    /// </summary>
    /// <returns>
    /// The <c>TitleId</c> of the position.
    /// </returns>
    public display HcmTitleId title()
    {
        HcmPositionForecastDetailV2 hcmPositionForecastDetailV2;
        HcmTitle hcmTitle;

        select firstonly TitleId from hcmTitle
             exists join hcmPositionForecastDetailV2
                where hcmTitle.RecId == hcmPositionForecastDetailV2.Title
                    && hcmPositionForecastDetailV2.PositionForecast == this.PositionForecast
            && hcmPositionForecastDetailV2.PositionForecastScenario == this.PositionForecastScenario;

        return hcmTitle.TitleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS321009";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
	<DeveloperDocumentation>@GLS190144</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@Budget:HCMPositionForecastDetailV2Label</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>PositionForecast</TitleField1>
	<TitleField2>Job</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Budget</Modules>
	<ReplacementKey>PositionForecastScenarioIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Job</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Department</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PositionForecast</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Job</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Department</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Title</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PositionForecastScenario</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Compensation</Name>
			<Label>@SYS116555</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CompLocation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Department</Name>
			<Label>@SYS850</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Department</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS80470</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PositionForecast</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Job</Name>
			<Label>@SYS1066</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Job</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Miscellaneous</Name>
			<Label>@SYS73543</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PositionType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Title</Name>
			<Label>@SYS53388</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Title</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CompLocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>HRMAdministrationCompensation</ConfigurationKey>
			<ExtendedDataType>HcmCompLocationRecId</ExtendedDataType>
			<Label>@SYS302183</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Department</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>OMDepartmentRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HrmDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Job</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HcmJobRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PositionForecast</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HcmPositionForecastRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PositionType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HcmPositionTypeRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Title</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HcmTitleRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PositionForecastScenario</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>HcmPositionForecastScenarioRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PositionTypeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PositionType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PositionForecastIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PositionForecast</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DepartmentIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Department</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>JobIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Job</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PositionForecastScenarioIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PositionForecastScenario</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CompLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmCompLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CompLocation</Name>
					<Field>CompLocation</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Department</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>OMOperatingUnit</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Department</Name>
					<Field>Department</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Job</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmJob</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Job</Name>
					<Field>Job</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PositionForecast</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>HcmPositionForecast</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PositionForecast</Name>
					<Field>PositionForecast</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PositionType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmPositionType</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PositionType</Name>
					<Field>PositionType</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Title</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmTitle</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Title</Name>
					<Field>Title</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PositionForecastScenarioDetails</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>HcmPositionForecastScenario</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PositionForecastScenario</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>PositionForecastScenarioDetails</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PositionForecastScenario</Name>
					<Field>PositionForecastScenario</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>