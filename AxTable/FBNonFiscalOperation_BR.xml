<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBNonFiscalOperation_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FBNonFiscalOperation_BR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the account name related to the current ledger dimension.
    /// </summary>
    /// <returns>
    /// Account name related to the current leader dimension.
    /// </returns>
    display LedgerJournalAccountName accountName()
    {
        if (this.LedgerDimension)
        {
            if (!this.FiscalEstablishmentDataArea)
            {
                return this.accountNameFind(this.AccountType, this.LedgerDimension, curext());
            }
            else
            {
                return this.accountNameFind(this.AccountType, this.LedgerDimension, this.FiscalEstablishmentDataArea);
            }
        }

        return "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountNameFind</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the account name according to its type, dimension and company.
    /// </summary>
    /// <param name="_accountType">
    /// Account type
    /// </param>
    /// <param name="_dimensionDynamicAccount">
    /// Dimension
    /// </param>
    /// <param name="_company">
    /// Company
    /// </param>
    /// <returns>
    /// Account name
    /// </returns>
    public LedgerJournalAccountName accountNameFind(
        LedgerJournalACType _accountType,
        DimensionDynamicAccount     _dimensionDynamicAccount,
        SelectableDataArea          _company)
    {
        if (xDataArea::exist(_company))
        {
            changecompany(_company)
            {
                switch (_accountType)
                {
                    case LedgerJournalACType::Cust:
                        return CustTable::find(LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(_dimensionDynamicAccount)).name();
                    case LedgerJournalACType::Vend:
                        return VendTable::find(LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(_dimensionDynamicAccount)).name();
                    case LedgerJournalACType::Bank:
                        return BankAccountTable::find(LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(_dimensionDynamicAccount)).Name;
                }
            }
        }
        return "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the account num related to the current ledger dimension.
    /// </summary>
    /// <returns>
    /// Account num of the current ledger dimension.
    /// </returns>
    public AccountNum accountNum()
    {
        SelectableDataArea          company;

        if (this.LedgerDimension)
        {
            if (!this.FiscalEstablishmentDataArea)
            {
                company = curext();
            }
            else
            {
                company = this.FiscalEstablishmentDataArea;
            }

            if (xDataArea::exist(company))
            {
                changecompany(company)
                {
                    return LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(this.LedgerDimension);
                }
            }
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getThirdPartyMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the <c>CustVendFiscalEstablishmentMap</c> related to the non fiscal operation document third party account
    /// </summary>
    /// <returns>The <c>CustVendFiscalEstablishmentMap</c> related to the non fiscal operation third party account</returns>
    public CustVendFiscalEstablishmentMap getThirdPartyMap()
    {
        CustVendFiscalEstablishmentMap map;
        switch (this.AccountType)
        {
            case LedgerJournalACType::Cust :
                CustTable custTable = CustTable::find(this.accountNum());
                map = custTable;
                break;

            case LedgerJournalACType::Vend :
                VendTable vendTable = VendTable::find(this.accountNum());
                map = vendTable;
                break;
        }

        return map;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the cost center value.
    /// </summary>
    /// <param name="_set">
    /// Indicates if the cost center is being updated
    /// </param>
    /// <param name="_value">
    /// New cost center value
    /// </param>
    /// <returns>
    /// Current cost center value
    /// </returns>
    public edit DimensionValue dimensionValue(boolean _set, DimensionValue _value)
    {
        if (_set)
        {
            this.OffsetDefaultDimension = FBNonFiscalOperation_BR::getCostCenterRecIdByValue(_value);
        }

        return DimensionAttributeValue::find(this.OffsetDefaultDimension).getValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the voucher exists in AX2012 once it may have been filled through staging.
    /// </summary>
    /// <returns>
    /// True if the voucher exists and false otherwise.
    /// </returns>
    public boolean existsVoucher()
    {
        LedgerJournalTrans ledgerJournalTrans;

        if (this.Voucher)
        {
            select firstOnly RecId from ledgerJournalTrans
                where   ledgerJournalTrans.Voucher      == this.Voucher
                    &&  ledgerJournalTrans.TransDate    == this.TransDate;

            if (ledgerJournalTrans)
            {
                return true;
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the postal address of the account
    /// </summary>
    /// <returns>
    /// The account's postal address
    /// </returns>
    public LogisticsPostalAddress postalAddress()
    {
        LogisticsPostalAddress logisticsPostalAddress;

        switch (this.AccountType)
        {
            case LedgerJournalACType::Cust:
                logisticsPostalAddress = CustTable::find(this.accountNum()).postalAddress();
                break;
            case LedgerJournalACType::Vend:
                logisticsPostalAddress = VendTable::find(this.accountNum()).postalAddress();
                break;
            case LedgerJournalACType::Bank:
                logisticsPostalAddress = BankAccountTable::find(this.accountNum()).postalAddress();
                break;
        }

        return logisticsPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCostCenterRecIdByValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the Cost Center RecId
    /// </summary>
    /// <param name="_value">
    /// The Cost center string value
    /// </param>
    /// <returns>
    /// RecId from <c>DimensionAttributeValue</c> table
    /// </returns>
    public static RecId getCostCenterRecIdByValue(DimensionValue _value)
    {
        DimensionAttribute      dimensionAttribute;
        DimensionAttributeValue dimensionAttributeValue;

        dimensionAttribute      = DimensionAttribute::find(BrazilParameters::find().CostCenterDimensionAttribute);
        dimensionAttributeValue = DimensionAttributeValue::findByDimensionAttributeAndValue(dimensionAttribute, _value);

        return dimensionAttributeValue.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCostCenterValueByRecid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the Cost center string value
    /// </summary>
    /// <param name="_recId">
    /// The Cost center RecId
    /// </param>
    /// <returns>
    /// string from <c>DimensionAttributeValue</c> table
    /// </returns>
    public static String255 getCostCenterValueByRecid(int64 _recId)
    {
        return DimensionAttributeValue::find(_recId).getValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupDimensionAttributeValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the lookup to select the cost center of the absorption cost journal line.
    /// </summary>
    /// <param name="_control">
    /// The form control to display the lookup.
    /// </param>
    public static void lookupDimensionAttributeValue(FormStringControl _control)
    {
        Query                   query   = new Query();
        QueryBuildDataSource    qbds;

        SysTableLookup  sysTableLookup = SysTableLookup::newParameters(tableNum(ACOCostCenterAttributeValue_BR), _control);

        sysTableLookup.addLookupMethod(tableMethodStr(ACOCostCenterAttributeValue_BR, dimensionAttributeValueName));
        sysTableLookup.addLookupMethod(tableMethodStr(ACOCostCenterAttributeValue_BR, dimensionAttributeValueValue), true);
        sysTableLookup.addLookupfield(fieldNum(ACOCostCenterAttributeValue_BR, CostType));

        qbds    = query.addDataSource(tableNum(ACOCostCenterAttributeValue_BR));
        qbds    = qbds.addDataSource(tableNum(DimensionAttributeValue));
        qbds.relations(true);
        qbds.addRange(fieldNum(DimensionAttributeValue, DimensionAttribute)).value(queryValue(BrazilParameters::find().CostCenterDimensionAttribute));
        qbds.addRange(fieldNum(DimensionAttributeValue, IsSuspended)).value(queryValue(0));
        qbds.addRange(fieldNum(DimensionAttributeValue, IsDeleted)).value(queryValue(0));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>nonFiscalOperationAccountTypes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a container with the allowed account types
    /// </summary>
    /// <returns>
    /// Container of account types
    /// </returns>
    public static container nonFiscalOperationAccountTypes()
    {
        return [LedgerJournalACType::Bank, LedgerJournalACType::Cust, LedgerJournalACType::Vend];
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (!this.FBEconomicActivityCode_BR)
        {
            this.FBEconomicActivityCode_BR = FBSpedReinfSetupParameters_BR::find().DefaultEconomicActivityCode;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the Non fiscal operations table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the non fiscal operation record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the non fiscal operations table; otherwise, an empty record.
    /// </returns>
    public static FBNonFiscalOperation_BR find(RecId _recId, boolean _forUpdate = false)
    {
        FBNonFiscalOperation_BR nonFiscalOperation;
    
        if (_recId)
        {
            nonFiscalOperation.selectForUpdate(_forUpdate);
    
            select firstonly nonFiscalOperation
                where nonFiscalOperation.RecId == _recId;
        }
    
        return nonFiscalOperation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>impliedDataAreaFieldNameDelegate</Name>
				<Source><![CDATA[
    [SubscribesTo(classStr(DimensionObjectStorageTableReferenceProcessor), delegatestr(DimensionObjectStorageTableReferenceProcessor, impliedDataAreaFieldNameDelegate))]
    static void impliedDataAreaFieldNameDelegate(TableId _tableId, FieldId _fieldId, EventHandlerResult _result)
    {
        if (_tableId == tableNum(FBNonFiscalOperation_BR))
        {
            _result.result(fieldStr(FBNonFiscalOperation_BR, FiscalEstablishmentDataArea));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasTaxTransactionsOfType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether non fiscal operation has tax transactions of specified type.
    /// </summary>
    /// <param name = "_taxTypeCon">Tax types container.</param>
    /// <returns>true, if non fiscal operation has tax transactions of specified type; otherwise, false.</returns>
    public boolean hasTaxTransactionsOfType(container _taxTypeCon)
    {
        FBNonFiscalOperationTaxTrans_BR nonFiscalOperationTaxTrans;
        select firstonly RecId from nonFiscalOperationTaxTrans
            where nonFiscalOperationTaxTrans.FBNonFiscalOperation_BR == this.RecId
                && nonFiscalOperationTaxTrans.Type in _taxTypeCon;

        return nonFiscalOperationTaxTrans.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasTaxWithholdTransactionsOfType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether non fiscal operation has withholding tax transactions of specified type.
    /// </summary>
    /// <param name = "_taxWithholdTypeCon">Withholding tax types container.</param>
    /// <returns>true, if non fiscal operation has withholding tax transactions of specified type; otherwise, false.</returns>
    public boolean hasTaxWithholdTransactionsOfType(container _taxWithholdTypeCon)
    {
        FBNonFiscalOperationWithholdingTaxTrans_BR nonFiscalOperationWithholdingTaxTrans;
        select firstonly RecId from nonFiscalOperationWithholdingTaxTrans
            where nonFiscalOperationWithholdingTaxTrans.FBNonFiscalOperation_BR == this.RecId
                && nonFiscalOperationWithholdingTaxTrans.TaxWithholdType in _taxWithholdTypeCon;

        return nonFiscalOperationWithholdingTaxTrans.RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<DeveloperDocumentation>@FBK113</DeveloperDocumentation>
	<Label>@FBK112</Label>
	<TitleField1>FiscalEstablishment_BR</TitleField1>
	<TitleField2>TransDate</TitleField2>
	<Modules>FiscalBooksBrazil</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FBBookingPeriod_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalEstablishmentDataArea</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FBEconomicActivityCode_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS25589</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FBBookingPeriod_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalEstablishmentDataArea</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreditSourceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FBEconomicActivityCode_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncomeClassificationId_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Ledger</Name>
			<Label>@SYS135195</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetDefaultDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TotalAmount</Name>
			<Label>@SYS340849</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TotalAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>LedgerJournalACType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CreditSourceCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<Label>@FBK229</Label>
			<EnumType>FBNonFiscalOpCreditSourceCode_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Notes</ExtendedDataType>
			<Label>@SYS13566</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FBBookingPeriod_BR</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FiscalEstablishmentDataArea</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FiscalEstablishment_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FiscalEstablishmentRecId_BR</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@GLS221509</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetDefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DimensionDefault</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionDefaultAccount</ExtendedDataType>
			<Label>@SYS11162</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS14475</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FBEconomicActivityCode_BR</Name>
			<ExtendedDataType>FBEconomicActivityCodeRefRecId_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>IncomeClassificationId_BR</Name>
			<ExtendedDataType>IncomeClassificationId_BR</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>VoucherTransDateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>BookingIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FBBookingPeriod_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FBBookingPeriod_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FBBookingPeriod_BR</Name>
					<Field>FBBookingPeriod_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FiscalEstablishment_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FiscalEstablishment_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalEstablishment_BR</Name>
					<Field>FiscalEstablishment_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>FBNonFiscalDocOperation_BR</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetDefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValue</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetDefaultDimension</Name>
					<Field>OffsetDefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>OffsetLedgerDimension</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>FBNonFiscalDocOperation_BR</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FBEconomicActivityCode_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FBEconomicActivityCode_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FBEconomicActivityCode_BR</Name>
					<Field>FBEconomicActivityCode_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>DimensionAttributeValueSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DimensionAttributeValueSet</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DimensionAttributeValueSet_FBNonFiscalOperation_BR</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetDefaultDimension</Name>
					<Field>OffsetDefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>IncomeClassification_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>IncomeClassification_BR</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>IncomeClassificationId_BR</Name>
					<Field>IncomeClassificationId_BR</Field>
					<RelatedField>CodeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>