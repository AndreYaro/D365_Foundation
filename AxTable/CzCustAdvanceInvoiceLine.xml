<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CzCustAdvanceInvoiceLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CzCustAdvanceInvoiceLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>convertCurrencyCode</Name>
				<Source><![CDATA[
    public void convertCurrencyCode(CurrencyCode _currency, TransDate _exchRateDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        MarkupTrans markupTrans;

        ttsbegin;

        while select forupdate markupTrans
            where markupTrans.TransTableId == this.TableId &&
                  markupTrans.TransRecId   == this.RecId
        {
            markupTrans.convertCurrencyCode(_currency, _exchRateDate);
            markupTrans.doUpdate();
        }

        this.AmountCur = CurrencyExchangeHelper::curAmount2CurAmount(this.AmountCur, this.custAdvanceInvoiceTable().CurrencyCode, _currency, _exchRateDate);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custAdvanceInvoiceTable</Name>
				<Source><![CDATA[
    private CzCustAdvanceInvoiceTable custAdvanceInvoiceTable(boolean _update = false)
    {
        return CzCustAdvanceInvoiceTable::findRecId(this.ParentRecId, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete(boolean _deleteLinked = true)
    {
        CzCustAdvanceInvoiceLine linkedLine;

        ttsbegin;

        super();

        if (_deleteLinked && this.AdvanceInvoiceLineInternalRef)
        {
            while select forupdate linkedLine
                where linkedLine.ParentRecId                   == this.ParentRecId                   &&
                      linkedLine.AdvanceInvoiceLineInternalRef == this.AdvanceInvoiceLineInternalRef &&
                      linkedLine.LineNum                       != this.LineNum
            {
                linkedLine.delete(false);
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustAdvanceInvoiceTable</Name>
				<Source><![CDATA[
    public void initFromCustAdvanceInvoiceTable(CzCustAdvanceInvoiceTable _custAdvanceInvoiceTable)
    {
        this.ParentRecId = _custAdvanceInvoiceTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        CustParameters custParameters = CustParameters::find();

        super();

        this.OffsetLedgerDimension = custParameters.AdvanceInvoiceOffsetLedgerDimension_W;
        this.TaxGroup      = custParameters.AdvanceInvoiceTaxGroup_W;
        this.TaxItemGroup  = custParameters.AdvanceInvoiceTaxItemGroup_W;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    public InventDim inventDim(boolean _update = false)
    {
        return InventDim::find(InventDim::inventDimIdBlank(), _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    public InventTable inventTable(
        ItemId  _itemId = this.itemId_W(),
        boolean _update = false)
    {
        return InventTable::find(_itemId, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId_W</Name>
				<Source><![CDATA[
    public ItemId itemId_W()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountInclTax</Name>
				<Source><![CDATA[
    display LineAmount lineAmountInclTax()
    {
        return this.AmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceAfterDisc_PL</Name>
				<Source><![CDATA[
    public Amount priceAfterDisc_PL()
    {
        return this.AmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty_W</Name>
				<Source><![CDATA[
    public Qty qty_W()
    {
        return 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxWriteCode</Name>
				<Source><![CDATA[
    display TaxWriteCode taxWriteCode()
    {
        CzCustAdvanceInvoiceTable   custAdvanceInvoiceTable = CzCustAdvanceInvoiceTable::findRecId(this.ParentRecId);
        TaxModuleType               taxModuleType           = TaxModuleType::SalesInvoice;
        Tax                         tax                     = Tax::construct();
        TmpTaxWorkTrans             tmpTaxWorkTrans;
        TaxTable                    taxTable;
        ;

        if (custAdvanceInvoiceTable.SalesId)
        {
            taxModuleType = SalesTable::find(custAdvanceInvoiceTable.SalesId).taxModuleType();
        }

        tax.taxCalcWithoutSource(this.TaxGroup,
                                 this.TaxItemGroup,
                                 custAdvanceInvoiceTable.InvoiceDate,
                                 custAdvanceInvoiceTable.CurrencyCode,
                                 this.AmountCur,
                                 taxModuleType,
                                 0,
                                 '',
                                 '',
                                 TaxDirection::OutgoingTax);

        tmpTaxWorkTrans   = tax.tmpTaxWorkTrans();
        select firstonly tmpTaxWorkTrans
        exists join taxTable
            where taxTable.TaxCode == tmpTaxWorkTrans.TaxCode &&
                 (taxTable.TaxType_W == TaxType_W::VAT        ||
                  taxTable.TaxType_W == TaxType_W::VATReduced ||
                  taxTable.TaxType_W == TaxType_W::VATZero);

        return CzCustAdvanceInvoiceLine::taxWriteCodeFromTaxCodeAndValue(tmpTaxWorkTrans.TaxCode, tmpTaxWorkTrans.showTaxValue());
    }

]]></Source>
			</Method>
			<Method>
				<Name>unit_W</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the unit id to print on the fiscal document.
    /// </summary>
    /// <returns>
    ///     The <c>UnitIdBase</c> value to print on the fiscal document.
    /// </returns>
    public UnitIDBase unit_W()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        CzCustAdvanceInvoiceLine  reversalLine;
        CzCustAdvanceInvoiceLine  origLine;
        CzCustAdvanceInvoiceTable origTable;
        real                      factor;
        AmountCur                 minLineAmount;
        boolean                   ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldnum(CzCustAdvanceInvoiceLine, AmountCur) :
                // sign of corrective line must be opposite to sign of reversal line
                if (this.AdvanceInvoiceLineInternalRef && ! this.OrigAdvanceInvoiceLineRecId)
                {
                    reversalLine = CzCustAdvanceInvoiceLine::findRecId(this.AdvanceInvoiceLineInternalRef);

                    if (this.AmountCur * reversalLine.AmountCur > 0)
                    {
                        ret = checkFailed("@GLS106952");
                    }

                    origLine  = CzCustAdvanceInvoiceLine::findRecId(reversalLine.OrigAdvanceInvoiceLineRecId);
                    origTable = CzCustAdvanceInvoiceTable::findRecId(origLine.ParentRecId);

                    if (origTable.CustPostingProfile)
                    {
                        factor        = origTable.InvoiceAmount ? (1 - origTable.amountCurOpen() / origTable.InvoiceAmount) : 0;
                        minLineAmount = CurrencyExchangeHelper::amount(origLine.AmountCur * factor, origTable.CurrencyCode);

                        if (this.AmountCur < minLineAmount)
                        {
                            ret = checkFailed(strfmt("@GLS114141", minLineAmount, origTable.InvoiceId));
                        }
                    }
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>VATAmount</Name>
				<Source><![CDATA[
    display TaxAmount VATAmount()
    {
        return this.AmountCur - this.VATBaseAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>VATBaseAmount</Name>
				<Source><![CDATA[
    display TaxBaseCur VATBaseAmount()
    {
        CzCustAdvanceInvoiceTable   custAdvanceInvoiceTable = CzCustAdvanceInvoiceTable::findRecId(this.ParentRecId);
        TaxModuleType               taxModuleType = TaxModuleType::SalesInvoice;

        if (!custAdvanceInvoiceTable)
        {
            return 0.0;
        }

        if (custAdvanceInvoiceTable.SalesId)
        {
            taxModuleType = SalesTable::find(custAdvanceInvoiceTable.SalesId).taxModuleType();
        }

        return Tax::baseAmountExclTax(this.TaxGroup, this.TaxItemGroup, custAdvanceInvoiceTable.InvoiceDate, custAdvanceInvoiceTable.CurrencyCode, this.AmountCur, taxModuleType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>vatCode</Name>
				<Source><![CDATA[
    display TaxCode vatCode()
    {
        TaxTable     taxTable;
        TaxGroupData taxGroupData;
        TaxOnItem    taxOnItem;

        select firstonly TaxCode from taxTable
            where taxTable.TaxType_W     == TaxType_W::VAT        ||
                  taxTable.TaxType_W     == TaxType_W::VATReduced ||
                  taxTable.TaxType_W     == TaxType_W::VATZero
        exists join taxGroupData
            where taxGroupData.TaxCode   == taxTable.TaxCode      &&
                  taxGroupData.TaxGroup  == this.TaxGroup
        exists join taxOnItem
            where taxOnItem.TaxCode      == taxTable.TaxCode      &&
                  taxOnItem.TaxItemGroup == this.TaxItemGroup;

        return taxTable.TaxCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(RecId   _recId,
                                       LineNum _lineNum = naReal())
    {
        CzCustAdvanceInvoiceLine line;

        if (_recId)
        {
            select firstonly RecId
            from line
                where line.ParentRecId == _recId  &&
                      (_lineNum    == naReal() ||
                      line.LineNum == _lineNum);
        }

        return line.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static CzCustAdvanceInvoiceLine findRecId(
        RecId   _recId,
        boolean _forupdate = false)
    {
        CzCustAdvanceInvoiceLine line;
        ;
        line.selectForUpdate(_forupdate);

        if (_recId)
        {
            select firstonly line
                where line.RecId == _recId;
        }

        return line;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxWriteCodeFromTaxCodeAndValue</Name>
				<Source><![CDATA[
    static TaxWriteCode taxWriteCodeFromTaxCodeAndValue(TaxCode _taxCode, TaxValue _taxValue)
    {
        TaxTable            taxTable = TaxTable::find(_taxCode);
        TaxWriteCode        taxWriteCode;
        ;

        switch (taxTable.TaxWriteSelection)
        {
            case TaxWriteSelection::PrintCode:
                taxWriteCode = taxTable.PrintCode;
                break;

            case TaxWriteSelection::TaxRate:
                taxWriteCode = strfmt("@SYS82282", _taxValue);
                break;

            default:
                throw error(strfmt("@SYS12580", taxTable.TaxWriteSelection));
        }

        return taxWriteCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the line amount in the MST currency.
    /// </summary>
    /// <returns>Line amount MST.</returns>
    public AmountMST lineAmountMST()
    {
        return this.custAdvanceInvoiceTable().amountMST(this.VATBaseAmount());
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the line amount in transaction currency.
    /// </summary>
    /// <returns>Line amount.</returns>
    public AmountMST lineAmount()
    {
        return this.VATBaseAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountTaxMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the line VAT amount in the MST currency.
    /// </summary>
    /// <returns>Line VAT amount MST.</returns>
    public AmountMST lineAmountTaxMST()
    {
        return this.custAdvanceInvoiceTable().amountMST(this.VATAmount());
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the line VAT amount in transaction currency.
    /// </summary>
    /// <returns>Line VAT amount.</returns>
    public AmountMST lineAmountTax()
    {
        return this.VATAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineAmountMSTInclTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the line amount including VAT in the MST currency.
    /// </summary>
    /// <returns>Line amount including VAT in MST.</returns>
    public AmountMST lineAmountMSTInclTax()
    {
        return this.custAdvanceInvoiceTable().amountMST(this.AmountCur);
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the line tax percentage.
    /// </summary>
    /// <returns>Line tax percentage.</returns>
    public TaxValue taxValue()
    {
        return TaxData::percent(this.vatCode(), this.custAdvanceInvoiceTable().InvoiceDate, this.VATBaseAmount());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CzCustVendAdvanceInvoices</ConfigurationKey>
	<CountryRegionCodes>CZ,HU,PL</CountryRegionCodes>
	<DeveloperDocumentation>@GLS221000</DeveloperDocumentation>
	<Label>@SYS2166</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>LineNum</TitleField1>
	<TitleField2>Description</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<ClusteredIndex>ParentRecIdIdx</ClusteredIndex>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>ParentRecIdIdx</PrimaryIndex>
	<ReplacementKey>ParentRecIdIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParentRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS12227</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CreditNoteReferences</Name>
			<Label>@SYS8125</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrigAdvanceInvoiceLineRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AdvanceInvoiceLineInternalRef</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CustomerFreeTextInvoiceLines</Name>
			<Label>@SYS27200</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ParentRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceTxt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FixedAssets</Name>
			<Label>@SYS12578</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Grid</Name>
			<Label>@SYS26263</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATBaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@SYS5878</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Text</Name>
			<Label>@SYS2595</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InvoiceTxt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectionDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OrigAdvanceInvoiceLineRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustAdvanceInvoiceLineRecId_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AdvanceInvoiceLineInternalRef</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustAdvanceInvoiceLineInternalRef_W</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS12227</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CorrectionDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlCorrectionDesc</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InvoiceTxt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Notes</ExtendedDataType>
			<Label>@SYS27050</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OffsetLedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AdvanceInvoiceOffsetLedgerDimension_W</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ParentRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxItemGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxItemGroup</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CreditNoteIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ParentRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OrigAdvanceInvoiceLineRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AdvanceInvoiceLineInternalRef</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ParentRecIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ParentRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CzAdvanceInvoiceLine</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ParentRecId</MapField>
					<MapFieldTo>ParentRecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Description</MapField>
					<MapFieldTo>Description</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AmountCur</MapField>
					<MapFieldTo>AmountCur</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InvoiceTxt</MapField>
					<MapFieldTo>InvoiceTxt</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
					<MapFieldTo>TaxItemGroup</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>PlFiscalDocumentTrans</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
					<MapFieldTo>LineNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Name</MapField>
					<MapFieldTo>Description</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxGroup</MapField>
					<MapFieldTo>TaxGroup</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TaxItemGroup</MapField>
					<MapFieldTo>TaxItemGroup</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>AdvanceInvoiceLineInternalRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CzCustAdvanceInvoiceLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>AdvanceInvoiceLineInternalRef</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AdvanceInvoiceLineInternalRef</Name>
					<SourceEDT>CustAdvanceInvoiceLineInternalRef_W</SourceEDT>
					<Field>AdvanceInvoiceLineInternalRef</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustAdvanceInvoiceLine</Name>
			<RelatedTable>CzCustAdvanceInvoiceLine</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ParentRecId</Name>
					<Field>ParentRecId</Field>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustAdvanceInvoiceLine_CorrectiveNote</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CzCustAdvanceInvoiceLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>CustAdvanceInvoiceLine_CorrectiveNote</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentRecId</Name>
					<Field>ParentRecId</Field>
					<RelatedField>ParentRecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AdvanceInvoiceLineInternalRef</Name>
					<Field>AdvanceInvoiceLineInternalRef</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustAdvanceInvoiceTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CzCustAdvanceInvoiceTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParentRecId</Name>
					<Field>ParentRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OffsetLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OffsetLedgerDimension</Name>
					<Field>OffsetLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>OrigAdvanceInvoiceLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CzCustAdvanceInvoiceLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OrigAdvanceInvoiceLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrigAdvanceInvoiceLineRecId</Name>
					<SourceEDT>CustAdvanceInvoiceLineRecId_W</SourceEDT>
					<Field>OrigAdvanceInvoiceLineRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroup</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>TaxGroup</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TaxItemGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxItemGroupHeading</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxItemGroup</Name>
					<SourceEDT>TaxItemGroup</SourceEDT>
					<Field>TaxItemGroup</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>