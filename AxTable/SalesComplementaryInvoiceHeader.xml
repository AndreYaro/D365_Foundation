<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesComplementaryInvoiceHeader</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesComplementaryInvoiceHeader extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcCashDiscDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the cash discount date for this invoice and update its field.
    /// </summary>
    public void  calcCashDiscDate()
    {
        if (this.CashDisc)
        {
            if (!this.CashDiscDate)
            {
                this.CashDiscDate   = this.DocumentDate;
                this.CashDiscDate   = CashDisc::cashDiscDate(this.CashDisc, this.CashDiscDate);
            }
        }
        else
        {
            this.CashDiscDate   = dateNull();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canFiscalDocTextBeRegistered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if Fiscal document texts can be registered to the complementary invoice header
    /// </summary>
    /// <returns>
    /// True if the Fiscal document text can be registered; false otherwise.
    /// </returns>
    public boolean canFiscalDocTextBeRegistered()
    {
        return  this.RecId &&
                this.Status == ComplementaryInvoiceStatus::Open &&
                !this.CanceledInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPaymentSched</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the payment schedule for this invoice.
    /// </summary>
    void createPaymentSched()
    {
        CustVendPaymSched           custVendPaymSched;

        custVendPaymSched = CustVendPaymSched::construct(SysModule::Cust,this);
        custVendPaymSched.createPaymSched(PaymSched::find(this.PaymSched));
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the record from the DB and performs related cleanup.
    /// </summary>
    public void delete()
    {
        SalesComplementaryInvoiceHeader invoiceToCancel;

        ttsbegin;

        super();
        TaxUncommitted::deleteForDocumentHeader(tableNum(SalesComplementaryInvoiceHeader), this.RecId);

        if (this.CanceledInvoice)
        {
            select forUpdate invoiceToCancel
                where invoiceToCancel.RecId == this.CanceledInvoice;

            invoiceToCancel.Status = ComplementaryInvoiceStatus::Posted;
            invoiceToCancel.update();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>distributeAmounts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Distribute tax amounts to be complemented by this invoice between its lines.
    /// </summary>
    /// <param name="_IPIAmountToDistribute">
    /// Total IPI amount to be complemented by this invoice.
    /// </param>
    /// <param name="_ICMSAmountToDistribute">
    /// Total ICMS amount to be complemented by this invoice.
    /// </param>
    /// <param name="_povertyFundAmountToDistribute">
    /// Total poverty fund amount to be complemented by this invoice.
    /// </param>
    /// <remarks>
    /// Current IPI, ICMS and poverty fund (FCP) additional amounts are lost.
    /// </remarks>
    public void distributeAmounts(TaxAmount _IPIAmountToDistribute, TaxAmount _ICMSAmountToDistribute, TaxAmount _povertyFundAmountToDistribute = 0)
    {
        SalesComplementaryInvoiceLine complementaryLine;
        Amount totalAmount;
        TaxAmount remainingIPI, remainingICMS, remainingPovertyFund;

        select sum(OriginalLineAmount) from complementaryLine
            where complementaryLine.SalesComplementaryInvoiceHeader == this.RecId;

        totalAmount = complementaryLine.OriginalLineAmount;

        remainingIPI = _IPIAmountToDistribute;
        remainingICMS = _ICMSAmountToDistribute;
        remainingPovertyFund = _povertyFundAmountToDistribute;

        ttsBegin;

        while select forUpdate complementaryLine
            where complementaryLine.SalesComplementaryInvoiceHeader == this.RecId
        {
            complementaryLine.AdditionalICMSAmount = CurrencyExchangeHelper::amount(_ICMSAmountToDistribute * complementaryLine.OriginalLineAmount / totalAmount, this.Currency);
            remainingICMS -= complementaryLine.AdditionalICMSAmount;

			complementaryLine.AdditionalPovertyFundAmount = CurrencyExchangeHelper::amount(_povertyFundAmountToDistribute * (complementaryLine.OriginalLineAmount / totalAmount),
                                                                             this.Currency);
            remainingPovertyFund -= complementaryLine.AdditionalPovertyFundAmount;

            complementaryLine.AdditionalIPIAmount = CurrencyExchangeHelper::amount(_IPIAmountToDistribute * complementaryLine.OriginalLineAmount / totalAmount, this.Currency);
            remainingIPI -= complementaryLine.AdditionalIPIAmount;

			complementaryLine.update();
        }

        // Fix rounding errors
        if (remainingICMS != 0 || remainingIPI != 0 || remainingPovertyFund != 0)
        {
            select firstOnly forUpdate complementaryLine
                where complementaryLine.SalesComplementaryInvoiceHeader == this.RecId;

            complementaryLine.AdditionalICMSAmount += remainingICMS;
            complementaryLine.AdditionalIPIAmount += remainingIPI;
            complementaryLine.AdditionalPovertyFundAmount += remainingPovertyFund;
            complementaryLine.update();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReasonCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets the reason code.
    /// </summary>
    /// <param name="set">
    /// A Boolean value that indicates whether the reason code is set.
    /// </param>
    /// <param name="_reasonCode">
    /// The new reason code when the <paramref name="set" /> value is true.
    /// </param>
    /// <returns>
    /// The reason code of the record in the <c>ReasonTableRef</c> table.
    /// </returns>
    public edit ReasonCode editReasonCode(boolean set, ReasonCode _reasonCode)
    {
        ReasonCode      reasonCode = strLRTrim(_reasonCode);
        RefRecId        originalReasonRefRecID;
        FormDataSource  formSalesComplInvHeader;

        if (set)
        {
            // If the ReasonRefRecID is 0, then create a new ReasonTableRef record
            // otherwise, update the existing record.
            if (this.ReasonTableRef_BR == 0)
            {
                this.ReasonTableRef_BR = ReasonTableRef::createFromCode(reasonCode);
            }
            else
            {
                if (reasonCode)
                {
                    //The reasonCode value is not blank.
                    // Save the current ReasonRefRecID for comparision.
                    originalReasonRefRecID = this.ReasonTableRef_BR;
                    this.ReasonTableRef_BR = ReasonTableRef::updateCode(reasonCode, this.ReasonTableRef_BR);

                    if (this.ReasonTableRef_BR == originalReasonRefRecID)
                    {
                        // The reason code has changed but the referenced record ID has not.
                        // Get the current FormDataSource and set forceWrite() to true so that
                        // data validation (validateWrite()) is performed on the updated reason code.
                        formSalesComplInvHeader = FormDataUtil::getFormDataSource(this);
                        if (formSalesComplInvHeader)
                        {
                            formSalesComplInvHeader.forceWrite(true);
                        }
                    }
                }
                else
                {
                    // The reasonCode is blank.
                    this.ReasonTableRef_BR = ReasonTableRef::updateCode(reasonCode, this.ReasonTableRef_BR);
                }
            }

            // Update the reason comment with the default comment value for the updated reason code.
            // A blank reasonCode will result in a blank comment because a blank reasonCode
            // will return an empty reasonTable buffer.

            this.editReasonComment(true, ReasonTable::find(_reasonCode).Description);
        }
        else
        {
            reasonCode = ReasonTableRef::find(this.ReasonTableRef_BR).Reason;
        }

        return reasonCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editReasonComment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets and sets the reason comment.
    /// </summary>
    /// <param name="set">
    /// A Boolean value that indicates whether the reason code is set.
    /// </param>
    /// <param name="_reasonComment">
    /// The new reason comment when the <paramref name="set" /> value is true.
    /// </param>
    /// <returns>
    /// The reason comment of the record in the <c>ReasonTableRef</c> table.
    /// </returns>
    public edit ReasonComment editReasonComment(boolean set, ReasonComment _reasonComment)
    {
        ReasonComment   reasonComment = _reasonComment;

        if (set)
        {
            // If the ReasonRefRecID is 0, then create a new ReasonTableRef record
            // otherwise, update the existing record.
            if (this.ReasonTableRef_BR == 0)
            {
                this.ReasonTableRef_BR = ReasonTableRef::createFromComment(reasonComment);
            }
            else
            {
                this.ReasonTableRef_BR = ReasonTableRef::updateComment(reasonComment, this.ReasonTableRef_BR);
            }
        }
        else
        {
            reasonComment = ReasonTableRef::find(this.ReasonTableRef_BR).ReasonComment;
        }

        return reasonComment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the exchange rate for this invoice.
    /// </summary>
    /// <param name="_date">
    /// The date for which to calculate the rate. Default is the transaction date.
    /// </param>
    /// <returns>
    /// <c>CustExchRate</c> for the given date.
    /// </returns>
    /// <remarks>
    /// Used by the accounting framework.
    /// </remarks>
    display CustExchRate exchRate(date _date = this.DocumentDate)
    {
        if (this.Currency)
                return ExchangeRateHelper::exchRate(this.Currency, _date);
        else
            return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRateSecondary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the secondary exchange rate for this invoice.
    /// </summary>
    /// <param name="_date">
    /// The date for which to calculate the rate. Default is the transaction date.
    /// </param>
    /// <returns>
    /// <c>ExchrateSecondary</c> for the given date.
    /// </returns>
    /// <remarks>
    /// Used by the accounting framework.
    /// </remarks>
    display ExchrateSecondary exchRateSecondary(date _date = this.DocumentDate)
    {
        if (this.Currency)
            return ExchangeRateHelper::exchRateSecond(this.Currency, _date);
        else
            return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalDocumentModel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the Fiscal Document Model from the SalesComplementaryInvoiceHeader based on the current contingency mode for the fiscal establishment.
    /// </summary>
    /// <returns>
    /// If the Sales Complementary is not posted, returns the Fiscal Document Model from the Fiscal Document Type,
    /// otherwise, returns the Model from the referenced FiscalDocument_BR register.
    /// </returns>
    display public FiscalDocumentModel_BR fiscalDocumentModel()
    {
        if (this.Status == ComplementaryInvoiceStatus::Open)
        {
            return FiscalDocumentType_BR::findRecId(this.FiscalDocumentType_BR).FiscalDocumentModel;
        }

        return FiscalDocument_BR::findByRef(this.TableId, this.RecId).Model;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalDocumentSeries</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the Fiscal Document Series from the SalesComplementaryInvoiceHeader based on the current contingency mode for the fiscal establishment.
    /// </summary>
    /// <returns>
    /// If the Sales Complementary is not posted, returns the Fiscal Document Series based on the current Contingency Mode for Fiscal establishment,
    /// otherwise, returns the Series from the referenced FiscalDocument_BR register.
    /// </returns>
    display public FiscalDocumentSeries_BR fiscalDocumentSeries()
    {
        if (this.Status == ComplementaryInvoiceStatus::Open)
        {
            return FiscalDocumentType_BR::getFiscalDocumentSeries(this.FiscalDocumentType_BR);
        }

        return FiscalDocument_BR::findByRef(this.TableId, this.RecId).FiscalDocumentSeries;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalEstablishment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>FiscalEstablishment_BR</c> record related to this invoice.
    /// </summary>
    /// <returns>
    /// <c>FiscalEstablishment_BR</c> record related to this invoice.
    /// </returns>
    public FiscalEstablishment_BR fiscalEstablishment()
    {
        return FiscalEstablishment_BR::find(this.FiscalEstablishment_BR);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCancelSalesComplInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrives the <c>SalesComplementaryInvoiceHeader</c> record that reverses this document
    /// </summary>
    /// <param name="_forUpdate">
    /// The boolean value that defines if the record will be selected for update or not
    /// </param>
    /// <returns>
    /// Record from <c>SalesComplementaryInvoiceHeader</c> that reverses this document, if any.
    /// </returns>
    public SalesComplementaryInvoiceHeader getCancelSalesComplInvoice(boolean _forUpdate = false)
    {
        SalesComplementaryInvoiceHeader salesComplementaryInvoiceHeader;

        salesComplementaryInvoiceHeader.selectForUpdate(_forUpdate);

        select salesComplementaryInvoiceHeader
            where salesComplementaryInvoiceHeader.CanceledInvoice == this.RecId;

        return salesComplementaryInvoiceHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the complementary invoice values from a customer invoice.
    /// </summary>
    /// <param name="_custInvoiceJour">
    /// <c>CustInvoiceJour</c> to extract the data from.
    /// </param>
    public void initFromCustInvoiceJour(CustInvoiceJour _custInvoiceJour)
    {
        this.Currency = _custInvoiceJour.CurrencyCode;
        this.DueDate  = _custInvoiceJour.DueDate;
        this.PaymTerm = _custInvoiceJour.Payment;
        this.CustPaymModeTable = _custInvoiceJour.paymMode();
        this.CustBankAccountID = _custInvoiceJour.paymentBankAccountId();
        this.CustPaymModeSpec = _custInvoiceJour.custTrans().PaymSpec;
        this.PaymSched = _custInvoiceJour.PaymentSched;
        this.CashDisc = _custInvoiceJour.CashDiscCode;
        this.CashDiscPercent = _custInvoiceJour.CashDiscPercent;
        this.CashDiscDate = _custInvoiceJour.CashDiscDate;
        this.PostingProfile = _custInvoiceJour.PostingProfile;
        this.FiscalDocumentType_BR = _custInvoiceJour.custInvoiceJour_BR().FiscalDocumentType_BR;

        if (this.FiscalDocumentType_BR)
        {
            this.Currency = Ledger::accountingCurrencyByLedger(Ledger::current());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustInvoiceTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the complementary invoice values from a free text invoice.
    /// </summary>
    /// <param name="_CustInvoiceTable">
    /// <c>CustInvoiceTable</c> to extract the data from.
    /// </param>
    public void initFromCustInvoiceTable(CustInvoiceTable _CustInvoiceTable)
    {
        this.DefaultDimension           = _CustInvoiceTable.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromFiscalDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the complementary invoice values from a fiscal document.
    /// </summary>
    /// <param name="_fiscalDocument">
    /// <c>FiscalDocument_BR</c> to extract the data from.
    /// </param>
    public void initFromFiscalDocument(FiscalDocument_BR _fiscalDocument)
    {
        this.ThirdPartyLogisticsPostalAddress = _fiscalDocument.ThirdPartyPostalAddress;
        this.CustTable                        = _fiscalDocument.FiscalDocumentAccountNum;
        this.CustFinalUser                    = _fiscalDocument.FinalUser;
        this.ComplementedFiscalDocument       = _fiscalDocument.RecId;
        this.FiscalEstablishment_BR           = FiscalEstablishment_BR::findByCNPJ(_fiscalDocument.FiscalEstablishmentCNPJCPF).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProjInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the complementary invoice values from a project invoice.
    /// </summary>
    /// <param name="_projInvoiceJour">
    /// <c>ProjInvoiceJour</c> to extract the data from.
    /// </param>
    public void initFromProjInvoiceJour(ProjInvoiceJour _projInvoiceJour)
    {
        this.Currency = _projInvoiceJour.CurrencyId;
        this.DueDate  = _projInvoiceJour.DueDate;
        this.PaymTerm = _projInvoiceJour.Payment;
        this.CustBankAccountID = _projInvoiceJour.paymentBankAccountId();
        this.PaymSched = _projInvoiceJour.PaymentSched;
        this.CashDisc = _projInvoiceJour.CashDiscCode;
        this.CashDiscPercent = _projInvoiceJour.CashDiscPercent;
        this.CashDiscDate = _projInvoiceJour.CashDiscDate;
        this.PostingProfile = _projInvoiceJour.PostingProfile;
        this.DefaultDimension = _projInvoiceJour.DefaultDimension;
        this.FiscalDocumentType_BR = ProjProposalJour::find(_projInvoiceJour.ProposalId).FiscalDocumentType_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the complementary invoice values from a sales order.
    /// </summary>
    /// <param name="_salesTable">
    /// <c>SalesTable</c> to extract the data from.
    /// </param>
    public void initFromSalesTable(SalesTable _salesTable)
    {
        this.DefaultDimension           = _salesTable.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the record into the DB and resolves its depedencies.
    /// </summary>
    public void insert()
    {
        SourceDocumentProcessorFacade::submitSourceDocumentImplementation(this);
        super();

        this.updateFiscalDocumentText(FiscalDocumentTextType_BR::CustVend);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if this complementary invoice is from a project.
    /// </summary>
    /// <returns>
    /// true if the complementary invoice is from a project; false otherwise.
    /// </returns>
    public boolean isProject()
    {
        SalesComplementaryInvoiceLine line;

        select firstOnly RecId from line
            where line.SalesComplementaryInvoiceHeader == this.RecId
               && line.ProjTable != '';

        return line.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs adjustments in the invoice when a given field is modified.
    /// </summary>
    /// <param name="_fieldId">
    /// <c>FieldId</c> of the field being modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        SalesComplementaryInvoiceLine complementaryLine;

        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(SalesComplementaryInvoiceHeader, AccountingDistributionTemplate):
                ttsBegin;
                while select forUpdate complementaryLine
                    where complementaryLine.SalesComplementaryInvoiceHeader == this.RecId
                {
                    complementaryLine.AccountingDistributionTemplate = this.AccountingDistributionTemplate;
                    complementaryLine.update();
                }
                ttsCommit;
                break;

            case fieldNum(SalesComplementaryInvoiceHeader, DefaultDimension):
                ttsBegin;
                while select forUpdate complementaryLine
                    where complementaryLine.SalesComplementaryInvoiceHeader == this.RecId
                {
                    complementaryLine.DefaultDimension = this.DefaultDimension;
                    complementaryLine.update();
                }
                ttsCommit;
                break;

            case fieldNum(SalesComplementaryInvoiceHeader, CustPaymModeTable):
                this.PaymModeMap::modifiedPaymMode();
                break;

            case fieldNum(SalesComplementaryInvoiceHeader, PaymTerm):
                this.PaymSched = this.payment().PaymSched;
                this.DueDate = this.paymentDueDate();
                break;

            case fieldNum(SalesComplementaryInvoiceHeader, CashDisc):
                this.CashDiscDate = dateNull();
                this.calcCashDiscDate();
                this.CashDiscPercent = CashDisc::find(this.CashDisc).Percent;
                break;

            case fieldNum(SalesComplementaryInvoiceHeader, DocumentDate):
                this.DueDate = this.paymentDueDate();
                this.calcCashDiscDate();
                break;

            case fieldNum(SalesComplementaryInvoiceHeader, PaymSched):
                CustPaymSched::deleteCustPaymSched(this.TableId, this.RecId);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>nfePaymentMethod_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets payment method for NF-e
    /// </summary>
    /// <returns>
    /// The payment method for NF-e
    /// </returns>
    public EFDocPaymentMethod_BR nfePaymentMethod_BR()
    {
        return CustPaymModeTable::find(this.CustPaymModeTable).PaymentMethod_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocHeaderTypeEnumName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the enum type associated with this source document.
    /// </summary>
    /// <returns>
    /// <c>enumName</c> of the associated enum type.
    /// </returns>
    /// <remarks>
    /// Used by the accounting framework.
    /// </remarks>
    public enumName parmSourceDocHeaderTypeEnumName()
    {
        return enumStr(SourceDocument_SalesComplementaryInv);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocHeaderTypeEnumValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the enum value associated with this source document.
    /// </summary>
    /// <returns>
    /// The enum value associated with this source document.
    /// </returns>
    /// <remarks>
    /// Used by the accounting framework.
    /// </remarks>
    public SourceDocumentTypeEnumValue parmSourceDocHeaderTypeEnumValue()
    {
        return SourceDocument_SalesComplementaryInv::SalesComplementaryInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymDayId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the payment day ID of this invoice.
    /// </summary>
    /// <returns>
    /// <c>CustPaymDayId</c> of this invoice.
    /// </returns>
    CustPaymDayId paymDayId()
    {
        CustPaymDayId    paymDayId;

        paymDayId = CustTable::find(this.CustTable).PaymDayId;

        if (!paymDayId)
            paymDayId = PaymTerm::find(this.PaymTerm).PaymDayId;

        return paymDayId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>payment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the payment term used by this invoice.
    /// </summary>
    /// <param name="_update">
    /// Indicates whether the record will be updated.
    /// </param>
    /// <returns>
    /// <c>PaymTerm</c> record associated to this invoice.
    /// </returns>
    PaymTerm payment(boolean _update = false)
    {
        return PaymTerm::find(this.PaymTerm, _update);
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentDueDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the payment due date of this invoice.
    /// </summary>
    /// <returns>
    /// The payment due date of this invoice.
    /// </returns>
    public DueDate paymentDueDate()
    {
        DueDate                         dueDate;
        PaymTerm                        paymTerm;
        PaymCalendarProcessor           paymCalendarProcessor;
        PaymCalendarIDerivationSource   calendarDerivSource;

        if (this.DocumentDate)
        {
            paymTerm = PaymTerm::find(this.PaymTerm);
            dueDate = paymTerm.due(this.DocumentDate, this.paymDayId());

            if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar))
                && paymTerm.CustomerUpdateDueDate != PaymentDueDateUpdatePolicy::NoUpdate)
            {
                paymCalendarProcessor = PaymCalendarProcessor::construct();
                calendarDerivSource = new PaymCalendarSourceSalesComplInvoice(this);
                dueDate = paymCalendarProcessor.adjustDate(dueDate, paymTerm.CustomerUpdateDueDate, calendarDerivSource);
            }
        }
        return dueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>thirdPartyName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the name of the customer associated with this invoice.
    /// </summary>
    /// <returns>
    /// The name of the customer associated with this invoice.
    /// </returns>
    public Name thirdPartyName()
    {
        return CustTable::find(this.CustTable).name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFiscalDocumentText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the Fiscal document texts of a specific type on the complementary invoice header.
    /// </summary>
    /// <param name="_type">
    /// A <c>FiscalDocumentTextType_BR</c> value indicating the type.
    /// </param>
    /// <remarks>
    /// This method does nothing if the tax fiscal document header has not been inserted yet.
    /// </remarks>
    public void updateFiscalDocumentText(FiscalDocumentTextType_BR _type)
    {
        if (this.canFiscalDocTextBeRegistered())
        {
            FiscalDocumentTextUpdate_BR::newFromRecord(this).updateTexts(_type);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        if (this.Status != ComplementaryInvoiceStatus::Open)
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a <c>SalesComplementaryInvoice</c> with a given recID.
    /// </summary>
    /// <param name="_recID">
    /// RecID for the complementary invoice to be retrieved.
    /// </param>
    /// <param name="_forUpdate">
    /// Whether the record is for update.
    /// </param>
    /// <returns>
    /// Record with the given RecID.
    /// </returns>
    public static SalesComplementaryInvoiceHeader find(RefRecId _recID, boolean _forUpdate = false)
    {
        SalesComplementaryInvoiceHeader salesComplementaryInvoice;

        salesComplementaryInvoice.selectForUpdate(_forUpdate);

        select salesComplementaryInvoice
            where salesComplementaryInvoice.RecId == _recID;

        return salesComplementaryInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@GLS221205</DeveloperDocumentation>
	<Label>@GLS142</Label>
	<SingularLabel>@GLS142</SingularLabel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>CustTable</TitleField1>
	<TitleField2>ComplementaryType</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>AccountsReceivable</Modules>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>DocuRef</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>DocuRef</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>SourceDocumentHeader</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>SourceDocumentHeader</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amounts</Name>
			<Label>@SYS75670</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TotalAmount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CancelReason</Name>
			<Label>@SYS114149</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReasonTableRef_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ComplementaryInvoice</Name>
			<Label>@GLS131</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ComplementaryType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Currency</Name>
			<Label>@SYS7572</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Customer</Name>
			<Label>@SYS11779</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ThirdPartyLogisticsPostalAddress</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Dimension</Name>
			<Label>@SYS14926</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingDistributionTemplate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FiscalEstablishment</Name>
			<Label>@GLS220103</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FiscalInformation</Name>
			<Label>@GLS56</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FiscalDocumentType_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustFinalUser</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Invoice</Name>
			<Label>@SYS12128</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalDocumentNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Ledger</Name>
			<Label>@SYS13356</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerVoucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Payment</Name>
			<Label>@SYS828</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DueDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymTerm</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPaymModeTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustPaymModeSpec</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustBankAccountID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymSched</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDisc</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDiscPercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDiscDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Posting</Name>
			<Label>@SYS5943</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AccountingDistributionTemplate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AccountingDistributionTemplateRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CanceledInvoice</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CashDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustCashDiscCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>CashDiscDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustCashDiscDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CashDiscPercent</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DiscPct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ComplementaryType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InvoiceComplementaryType_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ComplementedFiscalDocument</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Currency</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustCurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustBankAccountID</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustBankAccountId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CustFinalUser</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustVendFinalUser_BR</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustPaymModeSpec</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymSpec</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustPaymModeTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPaymMode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustTable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DefaultDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerDimensionValueSet</ExtendedDataType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DocumentDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DocumentDate</ExtendedDataType>
			<Label>@SYS57610</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DueDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DueDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FiscalDocumentNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FiscalDocumentType_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@GLS108</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FiscalEstablishment_BR</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FiscalEstablishmentRecId_BR</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerVoucher</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymSched</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PaymSchedId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymTerm</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustPaymTermId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostingProfile</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustPostingProfile</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReasonTableRef_BR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ReasonTableRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceDocumentHeader</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ComplementaryInvoiceStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ThirdPartyLogisticsPostalAddress</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS340849</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SourceDocumentHeaderIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SourceDocumentHeader</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>dataAreaId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CurrencyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Currency</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DimensionAttributeValueSetIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DefaultDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FiscalDocumentType_BRIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FiscalDocumentType_BR</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CustTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CustTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LogisticsPostalAddressIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ThirdPartyLogisticsPostalAddress</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FiscalDocument_BRIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ComplementedFiscalDocument</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AccountingDistributionTemplateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>AccountingDistributionTemplate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PaymTermIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PaymTerm</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CustPaymModeTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CustPaymModeTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PaymSchedIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PaymSched</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CashDiscIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CashDisc</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CustLedgerIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PostingProfile</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SalesComplementaryInvoiceHeaderIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CanceledInvoice</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FiscalEstablishment_BRIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FiscalEstablishment_BR</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>FiscalDocumentTextUpdateTableMap_BR</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>OrderAccount</MapField>
					<MapFieldTo>CustTable</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>PaymModeMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>PaymMode</MapField>
					<MapFieldTo>CustPaymModeTable</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PaymSpec</MapField>
					<MapFieldTo>CustPaymModeSpec</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>SourceDocumentHeaderImplementation</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>SourceDocumentHeader</MapField>
					<MapFieldTo>SourceDocumentHeader</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AccountingDistributionTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AccountingDistributionTemplate</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountingDistributionTemplate</Name>
					<Field>AccountingDistributionTemplate</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CanceledSalesComplementaryInvoice</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>SalesComplementaryInvoiceHeader</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CanceledInvoice</Name>
					<Field>CanceledInvoice</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CashDisc</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CashDisc</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CashDisc</Name>
					<Field>CashDisc</Field>
					<RelatedField>CashDiscCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ComplementedFiscalDocument</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FiscalDocument_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ComplementedFiscalDocument</Name>
					<Field>ComplementedFiscalDocument</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Currency</Name>
					<Field>Currency</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustBankAccount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustBankAccount</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustBankAccountID</Name>
					<Field>CustBankAccountID</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustTable</Name>
					<Field>CustTable</Field>
					<RelatedField>CustAccount</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustLedger</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustLedger</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PostingProfile</Name>
					<Field>PostingProfile</Field>
					<RelatedField>PostingProfile</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PostingIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustPaymModeSpec</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>CustPaymModeSpec</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustPaymModeTable</Name>
					<Field>CustPaymModeTable</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustPaymModeSpec</Name>
					<Field>CustPaymModeSpec</Field>
					<RelatedField>Specification</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PaymSpecIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustPaymModeTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustPaymModeTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustPaymModeTable</Name>
					<Field>CustPaymModeTable</Field>
					<RelatedField>PaymMode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PaymModeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustTable</Name>
					<Field>CustTable</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>DimensionAttributeValueSet</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FiscalDocumentType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FiscalDocumentType_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalDocumentType_BR</Name>
					<Field>FiscalDocumentType_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FiscalEstablishment</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>FiscalEstablishment_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FiscalEstablishment_BR</Name>
					<Field>FiscalEstablishment_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymSched</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>PaymSched</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymSched</Name>
					<Field>PaymSched</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>NameIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PaymTerm</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PaymTerm</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PaymTerm</Name>
					<Field>PaymTerm</Field>
					<RelatedField>PaymTermId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TermIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ReasonTableRef</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ReasonTableRef</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReasonTableRef_BR</Name>
					<Field>ReasonTableRef_BR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SourceDocumentHeader</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>SourceDocumentHeader</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceDocumentHeader</Name>
					<Field>SourceDocumentHeader</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ThirdPartyPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ThirdPartyLogisticsPostalAddress</Name>
					<Field>ThirdPartyLogisticsPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>