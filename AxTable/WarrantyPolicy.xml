<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WarrantyPolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Commerce.Headquarters.Instrumentation;

public class WarrantyPolicy extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>numRefPolicyNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a number sequence reference for policy number.
    /// </summary>
    /// <returns>
    /// An instance of the <c>NumberSequenceReference</c> class.
    /// </returns>
    internal static NumberSequenceReference numRefPolicyNumber()
    {
        return NumberSeqReference::findReference(extendedTypeNum(WarrantyPolicyNumber));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNextPolicyNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets next available policy number.
    /// </summary>
    /// <returns>
    /// The next policy number.
    /// </returns>
    internal static WarrantyPolicyNumber getNextPolicyNumber()
    {
        WarrantyPolicyNumber nextPolicyNumber = '';
        NumberSeq numSeq;

        numSeq = NumberSeq::newGetNum(WarrantyPolicy::numRefPolicyNumber());
        if (numSeq)
        {
            nextPolicyNumber = numSeq.num();
            numSeq.used();
        }

        return nextPolicyNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activatePolicyByWarrantiedInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Activate all warranty policies for warrantied in the invoice trans.
    /// </summary>
    /// <param name = "_warrantiedInvoiceTrans">invoice trans of the warrantied</param>
    internal static void activatePolicyByWarrantiedInvoiceTrans(
        CustInvoiceTrans _warrantiedInvoiceTrans)
    {
        WarrantyPolicy policy;
        WarrantiedRelationSalesLine warrantiedRelation;

        update_recordset policy
            setting Status = WarrantyPolicyStatus::Effective,
                WarrantiedFulfilledDate = _warrantiedInvoiceTrans.InvoiceDate,
                WarrantyEffectiveDate =  _warrantiedInvoiceTrans.InvoiceDate
            where policy.WarrantiedItemId == _warrantiedInvoiceTrans.ItemId
                && policy.WarrantiedInventTransId == _warrantiedInvoiceTrans.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>voidPolicyByWarrantiedReturnInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Void warranty upon return of warrantied item.
    /// </summary>
    /// <param name = "_warrantiedReturnInvoiceTrans">The invoice trans of warrantied item return</param>
    internal static void voidPolicyByWarrantiedReturnInvoiceTrans(CustInvoiceTrans _warrantiedReturnInvoiceTrans)
    {
        InventReportDimHistory dimHistory;
        InventDim InventDim;
        WarrantyPolicy warrantyPolicy;

        // User is asked to provide serial numbers of the return items upon invoicing of the return order.
        // Void warranty policy based on the provided serail numbers.
        update_recordset warrantyPolicy
            setting Status = WarrantyPolicyStatus::Voided
                where warrantyPolicy.WarrantiedItemId == _warrantiedReturnInvoiceTrans.ItemId
            exists join dimHistory
                where dimHistory.TransRefId == _warrantiedReturnInvoiceTrans.InvoiceId
                    && dimHistory.InventTransId == _warrantiedReturnInvoiceTrans.InventTransId
                    && dimHistory.TransactionLogType == InventReportDimHistoryLogType::SalesInvoice
            exists join inventDim
                where inventDim.InventDimId == dimHistory.InventDimId
                    && inventDim.inventSerialId == warrantyPolicy.WarrantiedSerialNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>voidPolicyByWarrantyReturnInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Void warranty upon return of warranty item.
    /// </summary>
    /// <param name = "_warrantyReturnInvoiceTrans">The invoice trans of warranty return</param>
    internal static void voidPolicyByWarrantyReturnInvoiceTrans(
        CustInvoiceTrans _warrantyReturnInvoiceTrans)
    {
        WarrantyPolicy warrantyPolicy;
        SalesLine warrantyReturnSalesLine;

        CustInvoiceAccount invoiceAccount = _warrantyReturnInvoiceTrans.invoiceAccount();

        // update based on return relation because warranty won't have serial number.
        update_recordset warrantyPolicy
            setting Status = WarrantyPolicyStatus::Voided
                where warrantyPolicy.CustAccount == invoiceAccount
                    && warrantyPolicy.WarrantyItemId == _warrantyReturnInvoiceTrans.ItemId
            exists join warrantyReturnSalesLine
                where warrantyReturnSalesLine.InventTransIdReturn == warrantyPolicy.WarrantyInventTransId
                    && warrantyReturnSalesLine.InventTransId == _warrantyReturnInvoiceTrans.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>voidPolicyByItemSerialNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Void policy by warrantied item serial number.
    /// </summary>
    /// <param name = "_custAccount">customer account</param>
    /// <param name = "_warrantiedItemId">Id of warrantied item</param>
    /// <param name = "_warrantiedSerialNumber">serial number of warrantied item</param>
    internal static void voidPolicyByItemSerialNumber(
        CustAccount _custAccount,
        WarrantiedItemId _warrantiedItemId,
        WarrantiedSerialNumber _warrantiedSerialNumber)
    {
        WarrantyPolicy warrantyPolicy;
        update_recordset warrantyPolicy
            setting Status = WarrantyPolicyStatus::Voided
                where warrantyPolicy.WarrantiedItemId == _warrantiedItemId
                    && warrantyPolicy.WarrantiedSerialNumber == _warrantiedSerialNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByWarrantiedItemAndSerial</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds warranty policy by warrantied item ID and serial number.
    /// </summary>
    /// <param name = "_warrantiedItemId">warrantied item ID</param>
    /// <param name = "_warrantiedSerialNumber">warrantied serial number</param>
    /// <returns>warranty policy</returns>
    internal static WarrantyPolicy findByWarrantiedItemAndSerial(
        WarrantiedItemId _warrantiedItemId,
        WarrantiedSerialNumber _warrantiedSerialNumber)
    {
        WarrantyPolicy policy;

        select policy
            where policy.WarrantiedItemId == _warrantiedItemId
            && policy.WarrantiedSerialNumber == _warrantiedSerialNumber;

        return policy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsPolicyForWarrantiedRelation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if waranty policy has been created to given warrantied relation.
    /// </summary>
    /// <param name = "_warrantiedRelation">warrantied relation</param>
    /// <returns>true if warranty policy existis; false if not.</returns>
    internal static boolean existsPolicyForWarrantiedRelation(WarrantiedRelationSalesLine _warrantiedRelation)
    {
        WarrantiedSerialNumber warrantiedSerial = _warrantiedRelation.getWarrantiedSerialNumber();
        WarrantyPolicy policyFound = WarrantyPolicy::findByWarrantiedItemAndSerial(_warrantiedRelation.WarrantiedItemId, warrantiedSerial);

        if (policyFound)
        {
            CommerceHQEventSource eventSource = CommerceHQEventSource::Log;

            if (policyFound.CustAccount != _warrantiedRelation.CustAccount
                || policyFound.WarrantiedInventTransId != _warrantiedRelation.WarrantiedInventTransId
                || policyFound.WarrantyInventTransId != _warrantiedRelation.WarrantyInventTransId)
            {
                eventSource.EventWriteWarrantyPolicyExistsPolicyForDifferentWarrantiedRelation(policyFound.RecId, _warrantiedRelation.RecId);
            }
            else
            {
                eventSource.EventWriteWarrantyPolicyExistsPolicyForWarrantiedRelation(_warrantiedRelation.RecId);
            }
        }

        return policyFound.RecId > 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@Warranty:WarrantyPolicyDevDoc</DeveloperDocumentation>
	<Label>@Warranty:WarrantyPolicy</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Main</TableGroup>
	<TitleField1>PolicyNumber</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>AccountsReceivable</Modules>
	<ReplacementKey>PolicyNumber</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PolicyNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PolicyNumber</Name>
			<ExtendedDataType>WarrantyPolicyNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WarrantiedItemId</Name>
			<ExtendedDataType>WarrantiedItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WarrantiedInventTransId</Name>
			<ExtendedDataType>WarrantyInventTransIdWarrantied</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WarrantiedSerialNumber</Name>
			<ExtendedDataType>WarrantiedSerialNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>WarrantiedFulfilledDate</Name>
			<ExtendedDataType>WarrantiedFulfilledDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WarrantyItemId</Name>
			<ExtendedDataType>WarrantyItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WarrantyInventTransId</Name>
			<ExtendedDataType>WarrantyInventTransIdWarranty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>WarrantySalesDate</Name>
			<ExtendedDataType>WarrantySalesDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>WarrantyEffectiveDate</Name>
			<ExtendedDataType>WarrantyEffectiveDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>WarrantyExpirationDate</Name>
			<ExtendedDataType>WarrantyExpirationDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<EnumType>WarrantyPolicyStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Notes</Name>
			<ExtendedDataType>WarrantyPolicyNotes</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PolicyNumber</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PolicyNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WarrantiedItemIndex</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>WarrantiedItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WarrantiedSerialNumber</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>WarrantyInvoiceTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceTrans</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WarrantyItemId</Name>
					<Field>WarrantyItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WarrantyInventTransId</Name>
					<Field>WarrantyInventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WarrantiedInvoiceTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustInvoiceTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WarrantiedItemId1</Name>
					<Field>WarrantiedItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WarrantiedInventTransId</Name>
					<Field>WarrantiedInventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>