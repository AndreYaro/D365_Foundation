<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LvCashStateTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LvCashStateTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initCountryCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the country code for the <c>LvCashStateTrans</c> record.
    /// </summary>
    public void initCountryCode()
    {
        if (this.CountryCode == CompanyInfo::find().postalAddress().CountryRegionId)
        {
            this.CountryCode = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the <c>LvCashStateTrans</c> record from the customer.
    /// </summary>
    /// <param name="_rCashTrans">
    /// The slip journal record to use.
    /// </param>
    public void initFromCustTable(RCashTrans _rCashTrans)
    {
        CustTable   custTable;

        switch (_rCashTrans.OffsetAccountType)
        {
            case LedgerJournalACType::Cust:
                custTable = CustTable::find(_rCashTrans.offsetAccountNum());
                break;

            case LedgerJournalACType::Ledger:
                custTable = CustTable::find(_rCashTrans.DocRepresPersonId);
                break;

            case LedgerJournalACType::Project:
                custTable = CustTable::find(ProjTable::find(_rCashTrans.offsetAccountNum()).CustAccount);
                break;

            default:
                break;
        }

        if (custTable)
        {
            this.CompanyName    = DirPartyTable::findRec(custTable.Party, false, DirPartyType::Organization).Name;
            this.CompRegistNum  = custTable.getPrimaryRegistrationNumber(TaxRegistrationTypesList::UID, this.TransDate ? this.TransDate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
            this.CountryCode    = custTable.countryRegionId();
            this.PaymCode       = LvPaymTransCodes::findRecId(custTable.LvPaymTransCodes).PaymTransCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromEmployeeTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the <c>LvCashStateTrans</c> record from the employee table.
    /// </summary>
    /// <param name="_rCashTrans">
    /// The slip journal record to use.
    /// </param>
    public void initFromEmployeeTable(RCashTrans _rCashTrans)
    {
        EmployeeTable_RU    employeeTable;
        HcmWorker           hcmWorker;

        employeeTable = EmployeeTable_RU::findByEmployeeId(_rCashTrans.offsetAccountNum());

        if (employeeTable)
        {
            hcmWorker = employeeTable.worker();
            this.CompanyName = hcmWorker.name();
            this.CountryCode = DirParty::primaryPostalAddress(hcmWorker.Person).CountryRegionId;
            this.CompRegistNum = CompanyInfo::find().RegNum;
            this.PaymCode = LvPaymTransCodes::findRecId(employeeTable.LvPaymTransCodes).PaymTransCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromOtherClients</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the <c>LvCashStateTrans</c> record from the other clients.
    /// </summary>
    /// <param name="_rCashTrans">
    /// The slip journal record to use.
    /// </param>
    public void initFromOtherClients(RCashTrans _rCashTrans)
    {
        LvOtherClients  lvOtherClients;

        lvOtherClients = LvOtherClients::find(_rCashTrans.DocRepresPersonId);

        if (lvOtherClients)
        {
            this.CompanyName    = lvOtherClients.name();
            this.CountryCode    = DirParty::primaryPostalAddress(lvOtherClients.Organization).CountryRegionId;
            this.CompRegistNum  = lvOtherClients.CompRegistNum;
            this.PaymCode       = LvPaymTransCodes::findRecId(lvOtherClients.LvPaymTransCodes).PaymTransCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromRCashTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the <c>LvCashStateTrans</c> record from the slip journal.
    /// </summary>
    /// <param name="_rCashTrans">
    /// The slip journal record to use.
    /// </param>
    public void initFromRCashTrans(RCashTrans _rCashTrans)
    {
        if (_rCashTrans.DocType == RCashDocType::DisbursementSlip ||
           (_rCashTrans.DocType == RCashDocType::Correction && _rCashTrans.AmountMST > 0))
        {
            this.PaymDirection = LvInOutPaym::Outgoing;
        }
        else if (_rCashTrans.DocType == RCashDocType::ReimbursementSlip ||
                (_rCashTrans.DocType == RCashDocType::Correction && _rCashTrans.AmountMST < 0))
        {
            this.PaymDirection = LvInOutPaym::Incoming;
        }

        this.PaymAmountMST  = (_rCashTrans.DocType == RCashDocType::Correction) ? -abs(_rCashTrans.AmountMST) : abs(_rCashTrans.AmountMST);
        this.TransDate      = _rCashTrans.TransDate;
        this.Voucher        = _rCashTrans.Voucher;
        this.CurrencyCode   = _rCashTrans.CurrencyCode;
        this.RefRecId       = _rCashTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromVendTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the <c>LvCashStateTrans</c> record from the vendor.
    /// </summary>
    /// <param name="_rCashTrans">
    /// The slip journal record to use.
    /// </param>
    public void initFromVendTable(RCashTrans _rCashTrans)
    {
        VendTable   vendTable;

        switch (_rCashTrans.OffsetAccountType)
        {
            case LedgerJournalACType::Vend:
                vendTable = VendTable::find(_rCashTrans.offsetAccountNum());
                break;

            case LedgerJournalACType::Ledger:
                vendTable = VendTable::find(_rCashTrans.DocRepresPersonId);
                break;

            default:
                break;
        }

        if (vendTable)
        {
            this.CompanyName    = DirPartyTable::findRec(vendTable.Party).Name;
            this.CompRegistNum  = vendTable.getPrimaryRegistrationNumber(TaxRegistrationTypesList::UID, this.TransDate ? this.TransDate : DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));;
            this.CountryCode    = vendTable.countryRegionId();
            this.PaymCode       = LvPaymTransCodes::findRecId(vendTable.LvPaymTransCodes).PaymTransCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPaymCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the record payment code for the <c>LvCashStateTrans</c> record.
    /// </summary>
    /// <param name="_rCashTrans">
    /// The slip journal record to use.
    /// </param>
    public void initPaymCode(RCashTrans _rCashTrans)
    {
        LedgerJournalTrans   ledgerJournalTrans;

        ledgerJournalTrans = _rCashTrans.ledgerJournalTrans();

        if (ledgerJournalTrans)
        {
            this.PaymCode = LvPaymTransCodes::findRecId(LedgerJournalTransPaymTransCode::findByLedgerJournalTransRecId(ledgerJournalTrans.RecId).LvPaymTransCodes).PaymTransCode;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Bank</ConfigurationKey>
	<CountryRegionCodes>LV</CountryRegionCodes>
	<DeveloperDocumentation>@GLS223082</DeveloperDocumentation>
	<Label>@GLS113189</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>CompanyName</TitleField1>
	<TitleField2>PaymDirection</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>CompRegistNumIdx</ClusteredIndex>
	<Modules>Bank</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CompRegistNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaymCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymDirection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompRegistNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountryCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompanyName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Include</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompanyName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustVendName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CompRegistNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyCoRegNum</ExtendedDataType>
			<Label>@GLS113179</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AddressCountryRegionId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Include</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS920</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PaymAmountMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PaymCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LvPaymCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PaymDirection</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>LvInOutPaym</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RCashTransRefRecId</ExtendedDataType>
			<Label>@SYS22569</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LogisticsAddressCountryRegionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CountryCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CurrencyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CurrencyCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CompRegistNumIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CompRegistNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PaymCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PaymDirection</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryCode</Name>
					<Field>CountryCode</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RCashTrans</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>RCashTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>