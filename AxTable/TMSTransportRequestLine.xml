<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSTransportRequestLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSTransportRequestLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayVolume</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the volume required by the transport request line
    /// </summary>
    /// <returns>
    /// The <c>Volume</c> to display
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    display Volume displayVolume()
    {
        InventTable inventTable = InventTable::find(this.ItemId);

        return inventTable.UnitVolume * this.qtyLeftToTransportInInventQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayWeight</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the weight required by the transport request line
    /// </summary>
    /// <returns>
    /// The <c>Weight</c> to display
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    display Weight displayWeight()
    {
        InventTable inventTable = InventTable::find(this.ItemId);

        return inventTable.grossWeight() * this.qtyLeftToTransportInInventQty();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dropoffAddress</Name>
				<Source><![CDATA[
	/// <summary>
	/// Displays the drop off address of the transportation request line.
	/// </summary>
	/// <returns>
	/// The drop off address.
	/// </returns>
    display Addressing dropoffAddress()
    {
        return LogisticsPostalAddress::findRecId(this.DestinationPostalAddress).Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTransportRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Establishes transport request line information from header record information
    /// </summary>
    /// <param name="_transportRequestId">
    /// Transport request id from header
    /// </param>
    public void initFromTransportRequest(TMSTransportRequestId _transportRequestId)
    {
        TMSTransportRequestTable    transportRequest = TMSTransportRequestTable::find(_transportRequestId);

        this.TransportRequestId          = _transportRequestId;

        // Set destination information
        this.DestinationPostalAddress   = transportRequest.DestinationPostalAddress;
        this.DestinationHubCode         = transportRequest.DestinationHubCode;
        this.DestinationName            = transportRequest.DestinationName;

        // Set origin information
        this.OriginPostalAddress        = transportRequest.OriginPostalAddress;
        this.OriginHubCode              = transportRequest.OriginHubCode;
        this.OriginName                 = transportRequest.OriginName;
        this.LoadDirection              = transportRequest.LoadDirection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pickupAddress</Name>
				<Source><![CDATA[
	/// <summary>
	/// Displays the pick up address of the transportation request line.
	/// </summary>
	/// <returns>
	/// The pick up address.
	/// </returns>
    display Addressing pickupAddress()
    {
        return LogisticsPostalAddress::findRecId(this.OriginPostalAddress).Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks if a specific <c>TMSTransportRequestLine</c> record exists.
	/// </summary>
	/// <param name="_recId">
	/// Id of the record.
	/// </param>
	/// <returns>
	/// True if the record exists.
	/// </returns>
        public static boolean exist(RecId   _recId)
    {
        return (_recId) &&
               (select firstonly tmsTransportRequestLine
                    where tmsTransportRequestLine.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>TMSTransportRequestLine</c> record by id.
	/// </summary>
	/// <param name="_recId">
	/// Id of the record.
	/// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
        public static TMSTransportRequestLine find(RecId   _recId,
                                               boolean _forupdate = false)
    {
        TMSTransportRequestLine    tmsTransportRequestLine;

        if (_recId)
        {
            tmsTransportRequestLine.selectForUpdate(_forupdate);

            select firstonly tmsTransportRequestLine
                where tmsTransportRequestLine.RecId == _recId;
        }

        return tmsTransportRequestLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByInventTransIdOrderNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSTransportRequestLine</c> record by invent trans id and WHS order number.
    /// </summary>
    /// <param name="_inventTransId">
    /// Invent trans id of the record.
    /// </param>
    /// <param name="_whsOrderNum">
    /// WHS order number which corresponds to the transport request id of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    [SysObsolete('Please call TMSTransportRequestLine::findByInventTransIdOrderNumInventDimId instead.', false, 11\6\2020)]
    public static TMSTransportRequestLine findByInventTransIdOrderNum(InventTransId _inventTransId, WHSOrderNum _whsOrderNum, boolean _forupdate = false)
    {
        TMSTransportRequestLine resultTMSTransportRequestLine;

        if (_inventTransId && _whsOrderNum)
        {
            TMSTransportRequestLine tmsTransportRequestLine;
            tmsTransportRequestLine.selectForUpdate(_forupdate);

            boolean recordFound = false;
            while select tmsTransportRequestLine
                where tmsTransportRequestLine.InventTransId       == _inventTransId
                    && tmsTransportRequestLine.TransportRequestId == _whsOrderNum
            {
                resultTMSTransportRequestLine.data(tmsTransportRequestLine);
                resultTMSTransportRequestLine.selectForUpdate(tmsTransportRequestLine.selectForUpdate());
                if (recordFound)
                {
                    throw error("@WAX:TMSMoreThanOneTMSTransportRequestLineFound");
                }
                recordFound = true;
            }
        }

        return resultTMSTransportRequestLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByInventTransIdOrderNumInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSTransportRequestLine</c> record by invent trans id, WHS order number and inventory dimension id.
    /// </summary>
    /// <param name="_inventTransId">
    /// Invent trans id of the record.
    /// </param>
    /// <param name="_whsOrderNum">
    /// WHS order number which corresponds to the transport request id of the record.
    /// </param>
    /// <param name="_inventDimId">
    /// Inventory dimension id of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static TMSTransportRequestLine findByInventTransIdOrderNumInventDimId(InventTransId _inventTransId, WHSOrderNum _whsOrderNum, InventDimId _inventDimId, boolean _forupdate = false)
    {
        TMSTransportRequestLine tmsTransportRequestLine;

        if (_inventTransId && _whsOrderNum && _inventDimId)
        {
            tmsTransportRequestLine.selectForUpdate(_forupdate);

            select firstonly tmsTransportRequestLine
                where tmsTransportRequestLine.InventTransId         == _inventTransId
                    && tmsTransportRequestLine.TransportRequestId   == _whsOrderNum
                    && tmsTransportRequestLine.InventDimId          == _inventDimId;
        }

        return tmsTransportRequestLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSourceTransportRequestLineFromLoadLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a source transport request line from a load line.
    /// </summary>
    /// <param name = "_loadLine">A load line.</param>
    public void initSourceTransportRequestLineFromLoadLine(WHSLoadLine _loadLine)
    {
        this.initTransportRequestLineFromLoadLine(_loadLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDestinationTransportRequestLineFromLoadLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a destination transport request line from a load line.
    /// </summary>
    /// <param name = "_loadLine">A load line.</param>
    public void initDestinationTransportRequestLineFromLoadLine(WHSLoadLine _loadLine)
    {
        this.initTransportRequestLineFromLoadLine(_loadLine);

        UnitOfMeasureSymbol inventUnit = InventTableModule::find(this.ItemId, ModuleInventPurchSales::Invent).UnitId;

        this.QtyLeftToTransport = this.convertQty(
            _loadLine.InventQty,
            inventUnit,
            this.uom);
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertQty</Name>
				<Source><![CDATA[
    private Qty convertQty(
        Qty                 _fromQty,
        UnitOfMeasureSymbol _fromUnit,
        UnitOfMeasureSymbol _toUnit)
    {
        return EcoResReleasedProductUnitConverter::construct().convertGivenUnitSymbols(
            _fromQty,
            _fromUnit,
            _toUnit,
            NoYes::No,
            this.ItemId,
            this.InventDimId,
            NoYes::No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyLeftToTransportInInventQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the quantity left to transport in the same unit as the inventory quantity. The quantity left to transport is usually stored in unit of
    /// measure which might be different from the unit used for inventory quantity.
    /// </summary>
    /// <returns>
    /// The quantity left to transport in inventory unit.
    /// </returns>
    public InventQty qtyLeftToTransportInInventQty()
    {
        this.validateItemIdIsSetForConversion();
        this.validateUOMIsSetForConversion();

        UnitOfMeasureSymbol inventUnit = InventTableModule::find(this.ItemId, ModuleInventPurchSales::Invent).UnitId;

        return this.convertQty(
            this.QtyLeftToTransport,
            this.uom,
            inventUnit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateItemIdIsSetForConversion</Name>
				<Source><![CDATA[
    private void validateItemIdIsSetForConversion()
    {
        if (!this.ItemId)
        {
            throw error("@WAX:Error_TransportRequestLineQtyLeftToTransportConversionItemIdNotSet");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUOMIsSetForConversion</Name>
				<Source><![CDATA[
    private void validateUOMIsSetForConversion()
    {
        if (!this.UOM)
        {
            throw error("@WAX:Error_TransportRequestLineQtyLeftToTransportConversionUOMNotSet");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateItem</Name>
				<Source><![CDATA[
    private void validateItem()
    {
        if (PdsGlobal::pdsIsCWItem(this.ItemId))
        {
            throw error(strFmt("@WAX:Error_TMSTransportRequestNotSupportedForCWItems", this.ItemId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTransportRequestLineFromLoadLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes <paramref name="_transportRequestLine" /> with data from a load line.
    /// </summary>
    /// <param name = "_loadLine">A load line.</param>
    protected void initTransportRequestLineFromLoadLine(WHSLoadLine _loadLine)
    {
        this.InventTransId             = _loadLine.InventTransId;
        this.InventTransType           = _loadLine.InventTransType;
        this.InventDimId               = _loadLine.InventDimId;
        this.ItemId                    = _loadLine.ItemId;
        this.validateItem();
        this.InventQty                 = _loadLine.InventQty;
        this.PackingQty                = _loadLine.PackingQty;
        this.uom                       = _loadLine.uom;
        this.Qty                       = _loadLine.Qty;
        this.ItemName                  = InventTable::find(_loadLine.ItemId).itemName();
        this.OrderNum                  = _loadLine.OrderNum;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX1989</DeveloperDocumentation>
	<Label>@TRX1663</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>TransportRequestId</TitleField1>
	<TitleField2>InventTransId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Transportation</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>WHSLoadLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>WHSLoadLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransportRequestId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QtyLeftToTransport</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginHubCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationHubCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadDirection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationPostalAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginPostalAddress</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@TRX1387</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransportRequestId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackingQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QtyLeftToTransport</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginHubCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationHubCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadDirection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationPostalAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginPostalAddress</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DestinationHubCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSHubMasterCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DestinationName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSName</ExtendedDataType>
			<Label>@TRX356</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DestinationPostalAddress</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InventTransType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>InventTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LoadDirection</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSLoadDirection</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrderNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSOrderNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OriginHubCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSHubMasterCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OriginName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSName</ExtendedDataType>
			<Label>@TRX245</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>OriginPostalAddress</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PackingQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPackingQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProductQuantity</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QtyLeftToTransport</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSQtyLeftToTransport</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TransportRequestId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSTransportRequestId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UOM</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSUOM</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TransportRequestLineIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>TransportRequestId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventTransId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>InventDim</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LogisticsPostalAddressDestination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsPostalAddressDestination</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsPostalAddressDestination</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DestinationPostalAddress</Name>
					<Field>DestinationPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LogisticsPostalAddressOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>LogisticsPostalAddressOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LogisticsPostalAddressOrigin</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OriginPostalAddress</Name>
					<Field>OriginPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OriginTMSHubMaster</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TMSHubMaster</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>OriginHubMaster</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>OriginHubMaster</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OriginHubCode</Name>
					<SourceEDT>TMSHubMasterCode</SourceEDT>
					<Field>OriginHubCode</Field>
					<RelatedField>HubMasterCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>HubMasterCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TMSHubMaster</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TMSHubMaster</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DestinationHubCode</Name>
					<Field>DestinationHubCode</Field>
					<RelatedField>HubMasterCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TMSTransportRequestTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>TMSTransportRequestTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TransportRequestId</Name>
					<Field>TransportRequestId</Field>
					<RelatedField>TransportRequestId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransportRequestIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>