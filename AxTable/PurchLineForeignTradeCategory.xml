<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchLineForeignTradeCategory</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchLineForeignTradeCategory extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>clearFormFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears fields shown to the user in forms.
    /// </summary>
    public void clearFormFields()
    {
        this.ngpCodesTable_FR       = 0;
        this.UnitWeight             = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        if (this.isVersioned())
        {
            this.deleteSoft();
        }
        else
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSoft</Name>
				<Source><![CDATA[
    /// <summary>
    /// Marks the record as deleted.
    /// </summary>
    private void deleteSoft()
    {
        VersioningPurchaseOrder::newPurchaseOrder(PurchLine::findInventTransId(this.PurchLineInventTransId).purchTable(true)).change(null, this);
        this.IsDeleted  = NoYes::Yes;
        this.IsModified = NoYes::Yes;
        this.deleteSoftClearValues();
        this.doUpdate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSoftClearValues</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Clears the values of the fields so that the record does not interfere with code that is not aware
    ///    of the deleted status.
    /// </summary>
    private void deleteSoftClearValues()
    {
        this.UnitWeight = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the <c>PurchLineForeignTradeCategory</c> record from a <c>PurchLine</c> record.
    /// </summary>
    /// <param name="_purchLine">
    ///    The <c>PurchLine</c> record from which to initialize the <c>PurchLineForeignTradeCategory</c>
    ///    record.
    /// </param>
    void initFromPurchLine(PurchLine _purchLine)
    {
        this.PurchLineDataAreaId    = _purchLine.DataAreaId;
        this.PurchLineInventTransId = _purchLine.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchLineForeignTradeCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the <c>PurchLineForeignTradeCategory</c> record from the
    ///    <c>PurchLineForeignTradeCategory</c> record.
    /// </summary>
    /// <param name="_purchLineForeignTradeCategory">
    ///    The <c>PurchLineForeignTradeCategory</c> record from which to initialize the
    ///    <c>PurchLineForeignTradeCategory</c> record.
    /// </param>
    void initFromPurchLineForeignTradeCategory(PurchLineForeignTradeCategory _purchLineForeignTradeCategory)
    {
        this.ngpCodesTable_FR       = _purchLineForeignTradeCategory.ngpCodesTable_FR;
        this.UnitWeight             = _purchLineForeignTradeCategory.UnitWeight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromvendInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the <c>PurchLineForeignTradeCategory</c> record from the <c>VendInvoiceTrans</c> record.
    /// </summary>
    /// <param name="_vendInvoiceTrans">
    ///    The <c>VendInvoiceTrans</c> record from which to initialize the
    ///    <c>PurchLineForeignTradeCategory</c> record.
    /// </param>
    void initFromvendInvoiceTrans(VendInvoiceTrans _vendInvoiceTrans)
    {
        this.ngpCodesTable_FR       = _vendInvoiceTrans.ngpCodesTable_FR;
        if (_vendInvoiceTrans.Qty)
        {
            this.UnitWeight         = _vendInvoiceTrans.Weight / _vendInvoiceTrans.Qty;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromvendPackingSlipTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the <c>PurchLineForeignTradeCategory</c> record from the <c>VendPackingSlipTrans</c>
    ///    record.
    /// </summary>
    /// <param name="_vendPackingSlipTrans">
    ///    The <c>VendPackingSlipTrans</c> record from which to initialize the
    ///    <c>PurchLineForeignTradeCategory</c> record.
    /// </param>
    void initFromvendPackingSlipTrans(VendPackingSlipTrans _vendPackingSlipTrans)
    {
        this.ngpCodesTable_FR       = _vendPackingSlipTrans.ngpCodesTable_FR;

        if (_vendPackingSlipTrans.Qty)
        {
            this.UnitWeight         = _vendPackingSlipTrans.Weight / _vendPackingSlipTrans.Qty;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPurchLineForeignTradeCategoryHistory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the history record based on a <c>PurchLineForeignTradeCategoryHistory</c> record.
    /// </summary>
    /// <param name="_purchLineForeignTradeCategoryHistory">
    ///    A <c>PurchLineForeignTradeCategoryHistory</c> record on which to base initialization.
    /// </param>
    public void initPurchLineForeignTradeCategoryHistory(PurchLineForeignTradeCategoryHistory _purchLineForeignTradeCategoryHistory)
    {
        PurchLineForeignTradeCategoryMap purchLineForeignTradeCategoryMap;

        purchLineForeignTradeCategoryMap.data(_purchLineForeignTradeCategoryHistory.data());
        this.data(purchLineForeignTradeCategoryMap.data());
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        VersioningPurchaseOrder::newPurchaseOrder(PurchLine::findInventTransId(this.PurchLineInventTransId).purchTable(true)).change(this, null);
        this.IsModified = NoYes::Yes;
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isVersioned</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the record has been versioned.
    /// </summary>
    /// <returns>
    /// true if the record has been versioned; otherwise, false.
    /// </returns>
    /// <remarks>
    /// A record has been versioned when it has been confirmed or approved with change management enabled.
    /// </remarks>
    public boolean isVersioned()
    {
        return this.RecId &&
            (!this.IsModified
                || PurchLineForeignTradeCategoryHistory::exist(this)
                || PurchLine::findInventTransId(this.PurchLineInventTransId).isLatestPOVersionNotArchived());
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        PurchLineForeignTradeCategory purchLineForeignTradeCategory_Orig = this.orig();
        
        if (bufCmp(this, purchLineForeignTradeCategory_Orig))
        {
            return;
        }

        using (var activityContext = PurchInstrumentationLogger::createLogger(tableStr(PurchLineForeignTradeCategory))
                                        .versioningPurchaseOrderActivities()
                                        .updatePurchLineForeignTradeCategory(purchLineForeignTradeCategory_Orig, this, funcName()))
        {
            VersioningPurchaseOrder::newPurchaseOrder(PurchLine::findInventTransId(this.PurchLineInventTransId).purchTable(true)).change(this, this.orig());
            this.IsModified = NoYes::Yes;
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static PurchLineForeignTradeCategory find(TradeInventTransId _inventTransId,
                                                     DataAreaId         _dataAreaId,
                                                     boolean            _update = false )
    {
        PurchLineForeignTradeCategory purchLineForeignTradeCategory;

        if (_inventTransId && _dataAreaId)
        {
            if (_update)
            {
                purchLineForeignTradeCategory.selectForUpdate(_update);
            }

            select firstonly purchLineForeignTradeCategory
                where purchLineForeignTradeCategory.PurchLineInventTransId  == _inventTransId
                    && purchLineForeignTradeCategory.PurchLineDataAreaId     == _dataAreaId;
        }

        return purchLineForeignTradeCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findpurchLine</Name>
				<Source><![CDATA[
    static PurchLineForeignTradeCategory findpurchLine(PurchLine _purchLine,
                                                              boolean   _update = false )
    {
        PurchLineForeignTradeCategory purchLineForeignTradeCategory;

        if (_purchLine)
        {
            if (_update)
            {
                purchLineForeignTradeCategory.selectForUpdate(_update);
            }

            select firstonly purchLineForeignTradeCategory
                where purchLineForeignTradeCategory.PurchLineInventTransId == _purchLine.InventTransId
                   && purchLineForeignTradeCategory.PurchLineDataAreaId    == _purchLine.DataAreaId
                   && !purchLineForeignTradeCategory.IsDeleted;
        }

        return purchLineForeignTradeCategory;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS135223</DeveloperDocumentation>
	<Label>@SYS135221</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>UnitWeight</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>FK_PurchLine_PurchLineForeignTradeCat</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchLineInventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchLineDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ForeignTrade</Name>
			<Label>@SYS27650</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>NGPCodesTable_FR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Measurement</Name>
			<Label>@SYS2021</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>UnitWeight</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDeleted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VersioningIsDeleted</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsModified</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VersioningIsModified</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>NGPCodesTable_FR</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NGPCodesTableFRId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchLineDataAreaId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchLineInventTransId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TradeInventTransId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>UnitWeight</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Weight</ExtendedDataType>
			<Label>@SYS135218</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemCodeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>DEL_IntrastatItemCodeId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrigCountryRegionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>ItemOrigCountryRegionId</ExtendedDataType>
			<FeatureClass>ItemOrigCountryRegionIdToggle</FeatureClass>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrigStateId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>SysDeletedObjects72</ConfigurationKey>
			<ExtendedDataType>ItemOrigStateId</ExtendedDataType>
			<FeatureClass>ItemOrigStateIdToggle</FeatureClass>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FK_PurchLine_PurchLineForeignTradeCat</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchLineInventTransId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PurchLineDataAreaId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>PurchLineForeignTradeCategoryMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>NGPCodesTable_FR</MapField>
					<MapFieldTo>NGPCodesTable_FR</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchLineDataAreaId</MapField>
					<MapFieldTo>PurchLineDataAreaId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PurchLineInventTransId</MapField>
					<MapFieldTo>PurchLineInventTransId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UnitWeight</MapField>
					<MapFieldTo>UnitWeight</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>NGPCodesTable_FR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>NGPCodesTable_FR</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Role>NGPCodesTable_FR</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>NGPCodesTable_FR</Name>
					<Field>NGPCodesTable_FR</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchLine</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>PurchLine</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PurchLine</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchLine_PurchLineForeignTradeCategory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchLineInventTransId</Name>
					<Field>PurchLineInventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchLineDataAreaId</Name>
					<Field>PurchLineDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TransIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>