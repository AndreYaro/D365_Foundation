<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventProblemTypeSetup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventProblemTypeSetup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>InventProblemTypeSetup</c> table exists.
    /// </summary>
    /// <param name="_inventTestProblemTypeId">
    ///    The problem type ID of the record to find.
    /// </param>
    /// <param name="_inventNonConformanceType">
    ///    The nonconformance type of the record to find.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    static boolean exist(InventTestProblemTypeId _inventTestProblemTypeId, InventNonConformanceType _inventNonConformanceType)
    {
        return _inventTestProblemTypeId && (
                select firstonly inventProblemTypeSetup
                where inventProblemTypeSetup.ProblemTypeId      == _inventTestProblemTypeId
                   && inventProblemTypeSetup.NonConformanceType == _inventNonConformanceType
               ).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>InventProblemTypeSetup</c> table.
    /// </summary>
    /// <param name="_inventTestProblemTypeId">
    ///    The problem type ID of the record to find.
    /// </param>
    /// <param name="_inventNonConformanceType">
    ///    The nonconformance type of the record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>InventProblemTypeSetup</c> table; otherwise, an empty record.
    /// </returns>
    static InventProblemTypeSetup find(
        InventTestProblemTypeId     _inventTestProblemTypeId,
        InventNonConformanceType    _inventNonConformanceType,
        boolean                     _forUpdate = false)
    {
        InventProblemTypeSetup  inventProblemTypeSetup;

        inventProblemTypeSetup.selectForUpdate(_forUpdate);

        if (_inventTestProblemTypeId)
        {
            select firstonly inventProblemTypeSetup
            where inventProblemTypeSetup.ProblemTypeId      == _inventTestProblemTypeId
               && inventProblemTypeSetup.NonConformanceType == _inventNonConformanceType;
        }

        return inventProblemTypeSetup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventQualityManagement</ConfigurationKey>
	<DeveloperDocumentation>@SYS124034</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS113665</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ProblemTypeId</TitleField1>
	<TitleField2>NonConformanceType</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>ProblemTypeTypeIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>ProblemTypeTypeIdx</PrimaryIndex>
	<ReplacementKey>ProblemTypeTypeIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>InventNonConformanceTable</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>InventNonConformanceTable</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProblemTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NonConformanceType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProblemTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NonConformanceType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProblemTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NonConformanceType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProblemTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NonConformanceType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NonConformanceType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>InventNonConformanceType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProblemTypeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTestProblemTypeId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProblemTypeTypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ProblemTypeId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>NonConformanceType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventProblemType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventProblemType</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProblemTypeId</Name>
					<Field>ProblemTypeId</Field>
					<RelatedField>ProblemTypeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProblemTypeIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>