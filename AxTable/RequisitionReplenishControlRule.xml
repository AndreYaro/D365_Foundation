<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RequisitionReplenishControlRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RequisitionReplenishControlRule extends SysPolicyRule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the record based on the input parameters
    /// </summary>
    /// <param name="_policy">
    /// The policy this record relates to
    /// </param>
    /// <param name="_policyType">
    /// the policy type
    /// </param>
    /// <param name="_validFrom">
    /// The date this record should be valid from, valid to is automatically calculated based on this input
    /// </param>
    public void initValues(RefRecId _policy, RefRecId _policyType, ValidFromDateTime _validFrom)
    {
        RequisitionReplenishControlRule nextRequisitionReplenishControlRule;
        date                            beginDate = dateNull();
        date                            endDate   = maxDate();

        this.Policy             = _policy;
        this.PolicyRuleType     = _policyType;

        if (!this)
        {
            this.ValidFrom      = _validFrom;

            select firstonly validtimestate(beginDate, endDate) nextRequisitionReplenishControlRule order by ValidFrom
                where nextRequisitionReplenishControlRule.Policy          == _policy
                    && nextRequisitionReplenishControlRule.PolicyRuleType == _policyType
                    && nextRequisitionReplenishControlRule.ValidFrom      >  this.ValidFrom;

            if (nextRequisitionReplenishControlRule)
            {
                this.ValidTo = DateTimeUtil::addSeconds(nextRequisitionReplenishControlRule.ValidFrom, -1);
            }
            else
            {
                this.ValidTo    = DateTimeUtil::maxValue();
            }
        }
        this.IsInherited = NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>RequisitionReplenishControlRule</c> table.
    /// </summary>
    /// <param name="_requisitionReplenishControlRuleRecId">
    ///    The record ID of the <c>RequisitionReplenishControlRule</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    The specified record in the <c>RequisitionReplenishControlRule</c> table; otherwise, an empty record.
    /// </returns>
    public static RequisitionReplenishControlRule find(RecId            _requisitionReplenishControlRuleRecId,
                                                       boolean          _forUpdate            = false,
                                                       ConcurrencyModel _concurrencyModel     = ConcurrencyModel::Auto)
    {
        RequisitionReplenishControlRule  requisitionReplenishControlRule;
        utcdatetime                      minDateValue;
        utcdatetime                      maxDateValue;

        minDateValue = DateTimeUtil::minValue();
        maxDateValue = DateTimeUtil::maxValue();
        if (_requisitionReplenishControlRuleRecId)
        {
            if (_forUpdate)
            {
                requisitionReplenishControlRule.selectForUpdate(_forUpdate);

                if (_concurrencyModel != ConcurrencyModel::Auto)
                {
                    requisitionReplenishControlRule.concurrencyModel(_concurrencyModel);
                }
            }

            requisitionReplenishControlRule.selectLocked(_forUpdate);

            select firstonly validtimestate( minDateValue ,maxDateValue ) requisitionReplenishControlRule
                where requisitionReplenishControlRule.RecId == _requisitionReplenishControlRuleRecId;
        }

        return requisitionReplenishControlRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRequisitionControlRuleParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RequisitionReplenishControlRule</c> table.
    /// </summary>
    /// <param name="_orgArray">
    /// An array of organizations to find the <c>RequisitionReplenishControlRule</c> record for.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RequisitionReplenishControlRule</c> table; otherwise, an empty record.
    /// </returns>
    public static RequisitionReplenishControlRule findRequisitionControlRuleParameters(int64 _orgArray[], boolean _forUpdate = false)
    {
        RequisitionReplenishControlRule requisitionReplenishControlRule;
        int64                           requisitionReplenishControlRuleRecId;
        SysPolicyRuleType               ruleType;

        ruleType = SysPolicyRuleType::findByRuleTypePolicyType(SysPolicyRuleTypeEnum::RequisitionReplenishControlRule, SysPolicyTypeEnum::PurchasingPolicy);

        requisitionReplenishControlRuleRecId = SysPolicies::getPolicyRuleID(_orgArray, ruleType.RecId, SysPolicyTypeEnum::PurchasingPolicy);
        requisitionReplenishControlRule      = RequisitionReplenishControlRule::find(requisitionReplenishControlRuleRecId, _forUpdate);

        return requisitionReplenishControlRule;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PurchReq</ConfigurationKey>
	<DeveloperDocumentation>@SYS4050002</DeveloperDocumentation>
	<Label>@GLS160303</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>relationType</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Extends>SysPolicyRule</Extends>
	<Modules>ProcurementAndSourcing</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RequisitionReplenishControlSubmsnParam</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RequisitionReplenishControlSubmsnParam</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsRequestedDateTransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsRequestedDateTransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS130439</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SysPolicyRule_08769876</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>SysPolicyRule</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>