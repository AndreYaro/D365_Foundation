<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxYearlyComTaxCodes_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxYearlyComTaxCodes_IT extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getExclusionsQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query for the filtering on main accounts.
    /// </summary>
    /// <returns>
    /// The <c>Query</c> object with ranges added by the user, if any.
    /// </returns>
    /// <remarks>
    /// Default filters are on Main account field. The user can add other filters as well.
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Query getExclusionsQuery()
    {
        Query query;

        if (SysQuery::isPackedOk(this.Exclusions))
        {
            query = new Query(this.Exclusions);
        }
        else
        {
            query = new Query();
            QueryBuildDataSource qbds = query.addDataSource(tableNum(MainAccount));
            findOrCreateRange_W(qbds, fieldNum(MainAccount, MainAccountId));
            findOrCreateRange_W(qbds, fieldNum(MainAccount, LedgerChartOfAccounts)).status(RangeStatus::Locked);
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>promptExclusionsQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prompts the user for a query to apply additional filters to the tax transactions.
    /// </summary>
    /// <returns>
    /// true, if the user has clicked OK after editing the filters; false otherwise.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean promptExclusionsQuery()
    {
        QueryRun queryRun = new QueryRun(this.getExclusionsQuery());
        queryRun.saveUserSetup(false);
        queryRun.title("@SYS89643");

        boolean ret = queryRun.prompt();

        if (ret)
        {
            this.Exclusions = queryRun.pack();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyRanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies all the ranges from the original query datasource into the destination datasource.
    /// </summary>
    /// <param name="_toDS">
    /// The destination datasource.
    /// </param>
    /// <param name="_fromDS">
    /// The original datasource.
    /// </param>
    /// <remarks>
    /// All non-empty ranges are copied; no ranges are overwritten in the destiantion datasource.
    /// </remarks>
    /// <exception cref="Exception::Error">
    /// The source and destiantion datasources are referring different tables.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void copyRanges(QueryBuildDataSource _toDS, QueryBuildDataSource _fromDS)
    {
        TableId fromTableId = _fromDS.table();
        QueryBuildRange qbr;
        DictField dictField;

        if (fromTableId != _toDS.table())
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        int rangeCnt = _fromDS.rangeCount();

        for (int rangeIdx = 1; rangeIdx <= rangeCnt; rangeIdx ++)
        {
            qbr = _fromDS.range(rangeIdx);

            if (qbr.value())
            {
                dictField = new DictField(fromTableId, qbr.field());

                if (dictField.arraySize() > 1)
                {
                    _toDS.addRange(dictField.id(), dictField.arrayIndex()).value(qbr.value());
                }
                else
                {
                    _toDS.addRange(dictField.id()).value(qbr.value());
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeQueries</Name>
				<Source><![CDATA[
    /// <summary>
    /// Merges the ranges specified by the user to filter out specific main accounts into the report query.
    /// </summary>
    /// <param name="_qbdsMainAccount">
    /// The <c>MainAccount</c> query datasource.
    /// </param>
    /// <param name="_userQuery">
    /// A query specified by the user.
    /// </param>
    /// <exception cref="Exception::Error">
    /// The <c>MainAccount</c> is not a part of the user-defined query.
    /// </exception>
    /// <exception cref="Exception::Error">
    /// The <c>MainAccount</c> is not a part of the report query.
    /// </exception>
    /// <exception cref="Exception::Error">
    /// Additional root datasources are set up in user-defined query.
    /// </exception>
    /// <exception cref="Exception::Error">
    /// Additional non-root datasources are set up in user-defined query.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void mergeQueries(QueryBuildDataSource _qbdsMainAccount, Query _userQuery)
    {
        QueryBuildDataSource qbdsUserMainAccount = _userQuery.dataSourceTable(tableNum(MainAccount));

        if (!qbdsUserMainAccount)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
        if (_qbdsMainAccount.table() != tableNum(MainAccount))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
        if (_userQuery.childDataSourceCount() > 1)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
        if (qbdsUserMainAccount.childDataSourceCount() > 0)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        TaxYearlyComTaxCodes_IT::copyRanges(_qbdsMainAccount, qbdsUserMainAccount);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYP4881975</DeveloperDocumentation>
	<Label>@SYS125664</Label>
	<TitleField1>TaxCode</TitleField1>
	<Modules>Tax</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Grid</Name>
			<Label>@SYS26263</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>Exclusions</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PackedQueryRun</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxYearlyComSetup</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxCodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxYearlyComSetup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxCode</Name>
					<Field>TaxCode</Field>
					<RelatedField>TaxCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxYearlyComSetup_IT</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxYearlyComSetup_IT</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxYearlyComSetup</Name>
					<Field>TaxYearlyComSetup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>