<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PSAProjInvoiceTaxTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PSAProjInvoiceTaxTmp extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTaxSpec</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>TaxSpec</c> object to be used when creating the tax summary information.
    /// </summary>
    /// <param name="_projInvoiceJour">
    /// <c>ProjInvoiceJour</c> entry to create the tax information from.
    /// </param>
    /// <param name="_formletterProformaPrint">
    /// <c>FormletterProformaPrint</c> to be used when the invoice is proforma.
    /// </param>
    /// <returns>
    /// A <c>TaxSpec</c> object from the given paramenters.
    /// </returns>
    public static TaxSpec getTaxSpec(ProjInvoiceJour _projInvoiceJour, FormletterProformaPrint _formletterProformaPrint)
    {
        TaxSpec taxSpec;

        if (_projInvoiceJour.isProforma() && _formletterProformaPrint)
        {
            taxSpec = TaxSpec::construct('', naDate(), _projInvoiceJour.RecId);
            taxSpec.setTmpTaxWorkTrans(_formletterProformaPrint.tmpTaxWorkTrans(_projInvoiceJour.RecId));
        }
        else
        {
            taxSpec = TaxSpec::construct(_projInvoiceJour.LedgerVoucher,
                                         _projInvoiceJour.InvoiceDate,
                                         _projInvoiceJour.RecId);
        }
        return taxSpec;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertPSAProjInvoiceTmpForTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Consolidates sales tax reporting information for a given invoice and populates it into table
    /// <c>PSAProjInvoiceTaxTmp</c> that can be used as a data source in the invoice report.
    /// </summary>
    /// <param name="_projInvoiceJour">
    /// <c>ProjInvoiceJour</c> record of the invoice from which the sales tax will be processed.
    /// </param>
    /// <param name="_taxSpec">
    /// <c>_taxSpec</c> object to provide the tax summary data.
    /// </param>
    /// <returns>
    /// A <c>PSAProjInvoiceTaxTmp</c> created, or an empty record if tax information reporting is not needed.
    /// </returns>
    /// <remarks>
    /// Table <c>PSAProjInvoiceTaxTmp</c> stores the ID of the DB transaction where the entries were created, which
    /// allows the SSRS framework to delete the records once the report is processed. Even though this table is not
    /// a temporary table itself, its records existence is conditioned only within the SSRS processing timeframe.
    /// </remarks>
    public static PSAProjInvoiceTaxTmp insertPSAProjInvoiceTmpForTax(ProjInvoiceJour _projInvoiceJour,
                                                                     TaxSpec         _taxSpec)
    {
        #ISOCountryregionCodes

        
        boolean                 showMstAmount;
        str                     taxAmountLabel;
        str                     taxAmountMstLabel;
        TaxSpecPrintLevel       taxSpecPrintLevel;
        PSAProjInvoiceTaxTmp    tmpPSAProjInvoiceTax;

        taxSpecPrintLevel = PSAProjInvoiceTaxTmp::getTaxSpecPrintLevel(_projInvoiceJour);

        if (taxSpecPrintLevel != TaxSpecPrintLevel::None &&
            !SysCountryRegionCode::isLegalEntityInCountryRegion([#isoCZ]))
        {
            if (taxSpecPrintLevel            == TaxSpecPrintLevel::CurrencyMST &&
                _projInvoiceJour.CurrencyId  != Ledger::accountingCurrency())
            {
                showMstAmount       = true;
                taxAmountLabel      = strFmt('%1 %2', SysLabel::labelId2String(literalStr("@SYS22646"), _projInvoiceJour.LanguageId), _projInvoiceJour.CurrencyId);
                taxAmountMSTLabel   = strFmt('%1 %2', SysLabel::labelId2String(literalStr("@SYS22646"), _projInvoiceJour.LanguageId), Ledger::accountingCurrency());
            }
            else
            {
                showMstAmount       = false;
                taxAmountLabel      = SysLabel::labelId2String(literalStr("@SYS22646"), _projInvoiceJour.LanguageId);
                taxAmountMSTLabel   = SysLabel::labelId2String(literalStr("@SYS22646"), _projInvoiceJour.LanguageId);
            }

            _taxSpec.parmLanguageId(_projInvoiceJour.LanguageId);
            

            while (_taxSpec.parmTaxSpec(false))
            {
                tmpPSAProjInvoiceTax.clear();
                tmpPSAProjInvoiceTax.initPSAProjInvoiceTaxTmp(_projInvoiceJour, _taxSpec, showMstAmount, taxAmountLabel, taxAmountMstLabel);
                tmpPSAProjInvoiceTax.insert();
            }
        }
        return tmpPSAProjInvoiceTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxSpecPrintLevel</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Retrieves the sales tax specification.
    /// </summary>
    /// <returns>
    ///     The sales tax specification.
    /// </returns>
    protected static TaxSpecPrintLevel getTaxSpecPrintLevel(ProjInvoiceJour _projInvoiceJour)
    {
        return ProjFormletterParameters::find().taxSpecPrintLevel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPSAProjInvoiceTaxTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initilize <c>PSAProjInvoiceTaxTmp</c> from parameters.
    /// </summary>
    /// <param name = "_projInvoiceJour">
    /// <c>ProjInvoiceJour</c> table buffer.
    /// </param>
    /// <param name = "_taxSpec">
    /// Instance of <c>ProjInvoiceJour</c> class.
    /// </param>
    /// <param name = "_showMstAmount">
    /// Boolean value to be set on <c>ShowTaxAmount</c> field.
    /// </param>
    /// <param name = "_taxAmountLabel">
    /// Value to be set on <c>TaxAmountLabel</c> field.
    /// </param>
    /// <param name = "_taxAmountMstLabel">
    /// Value to be set on <c>TaxAmountMSTLabel</c> field.
    /// </param>
    protected void initPSAProjInvoiceTaxTmp(ProjInvoiceJour _projInvoiceJour, TaxSpec _taxSpec, boolean _showMstAmount, str _taxAmountLabel, str _taxAmountMstLabel)
    {
        if (_projInvoiceJour.CashDiscPercent == 100)
        {
            this.AmountCur      = 0;
            this.CashDiscAmount = 0;
        }
        else
        {
            this.AmountCur      = -_taxSpec.taxBaseAmount() / ((100 - _projInvoiceJour.CashDiscPercent) / 100);
            this.CashDiscAmount = this.AmountCur * (_projInvoiceJour.CashDiscPercent / 100);
        }

        this.TaxWriteCode             = _taxSpec.taxWriteCode();
        this.TaxCode                  = _taxSpec.taxCode();
        this.TaxBaseQty               = -_taxSpec.taxBaseQty();
        this.TaxAmountCur             = -_taxSpec.taxAmount();
        this.TaxAmountMST             = -_taxSpec.taxAmountMST();
        this.TaxExemptDescription     = _taxSpec.taxExemptDescription();
        this.TaxBaseAmountCur         = -_taxSpec.taxBaseAmount();
        this.TaxBaseAmountMST         = -_taxSpec.taxBaseAmountMST();
        this.CashDiscOnInvoice        = TaxParameters::find().CashDiscOnInvoice;;
        this.showTaxAmountMST         = _showMstAmount;
        this.TaxAmountLabel           = _taxAmountLabel;
        this.TaxAmountMSTLabel        = _taxAmountMstLabel;

        if (!this.TaxExemptDescription && this.TaxCode)
        {
            TaxTable taxTable = TaxTable::find(this.TaxCode);
            this.TaxExemptDescription = LanguageTxt::find(tableNum(TaxTable), taxTable.RecId, _taxSpec.parmLanguageId()).Txt;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS342294</DeveloperDocumentation>
	<Label>@SYS50149</Label>
	<Visible>No</Visible>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>ProjectManagementAndAccounting</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxBaseAmountMST</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CashDiscAmount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CashDiscAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CashDiscOnInvoice</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>boolean</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>showTaxAmountMST</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>boolean</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxAmountLabel</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>String30</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmountMST</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxAmountMSTLabel</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>String30</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseAmountCur</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseAmountMST</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxBase</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxBaseQty</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxExemptDescription</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Description255</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxWriteCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxWriteCode</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CreatedTransactionIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>CreatedTransactionId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxCode</Name>
					<SourceEDT>TaxCode</SourceEDT>
					<Field>TaxCode</Field>
					<RelatedField>TaxCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>