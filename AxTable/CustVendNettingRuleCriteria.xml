<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendNettingRuleCriteria</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustVendNettingRuleCriteria extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);
        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(CustVendNettingRuleCriteria, CriteriaType):
                    if (CustVendNettingRuleCriteria::existingCriteriaTypesOfRule(this.RuleName).in(this.CriteriaType))
                    {
                        ret = false;
                    }
                    break;
                case fieldNum(CustVendNettingRuleCriteria, ValueCompany):
                    if (this.isCriteriaCustVendAccount())
                    {
                        ret = xDataArea::checkAccessible(this.ValueCompany);
                    }
                    else if (this.ValueCompany)
                    {
                        ret = false;
                    }
                    break;
                case fieldNum(CustVendNettingRuleCriteria, Value):
                    if (this.isCriteriaCustVendAccount() && this.ValueCompany == '')
                    {
                        ret = checkFailed("@CashManagement:CustVendNettingRuleCriteriaValueCompanyEmpty");
                    }
                    break;
                default:
                    break;
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(CustVendNettingRuleCriteria, ValueCompany):
                this.Value = '';
                break;
            case fieldNum(CustVendNettingRuleCriteria, CriteriaType):
                this.ValueCompany = this.getDefaultCompanyValue();
                this.Value = '';
                break;
            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultCompanyValue</Name>
				<Source><![CDATA[
    internal CompanyId getDefaultCompanyValue()
    {
        CompanyId company;
        if (this.isCriteriaCustVendAccount())
        {
            company = curExt();
        }
        return company;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCriteriaCustVendAccount</Name>
				<Source><![CDATA[
    internal boolean isCriteriaCustVendAccount()
    {
        return this.CriteriaType == CustVendNettingRuleNettingCriteriaType::CustAccount || this.CriteriaType == CustVendNettingRuleNettingCriteriaType::VendAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>countForRule</Name>
				<Source><![CDATA[
    internal static int countForRule(Name _ruleName)
    {
        CustVendNettingRuleCriteria criteria;
        select count(RecId) from criteria
            where criteria.RuleName == _ruleName;
        return int642int(criteria.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    internal static CustVendNettingRuleCriteria find(Name _ruleName, CustVendNettingRuleNettingCriteriaType _type, boolean _forUpdate = false)
    {
        CustVendNettingRuleCriteria criteria;
        criteria.selectForUpdate(_forUpdate);
        select firstonly criteria
            where criteria.RuleName == _ruleName
                && criteria.CriteriaType == _type;
        return criteria;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existingCriteriaTypesOfRule</Name>
				<Source><![CDATA[
    internal static Set existingCriteriaTypesOfRule(Name _ruleName)
    {
        Set types = new Set(Types::Enum);
        CustVendNettingRuleCriteria criteria;
        while select CriteriaType from criteria
            where criteria.RuleName == _ruleName
        {
            types.add(criteria.CriteriaType);
        }
        return types;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpToDetail</Name>
				<Source><![CDATA[
    internal void jumpToDetail()
    {
        if (this.CriteriaType == CustVendNettingRuleNettingCriteriaType::InvCurrency)
        {
            Args args = new Args();
            args.name(formStr(Currency));
            Currency currency = Currency::find(this.Value);
            args.record(currency);
            args.lookupRecord(currency);

            new MenuFunction(menuItemDisplayStr(Currency), MenuItemType::Display).run(args);
        }
        else
        {
            switch (this.CriteriaType)
            {
                case CustVendNettingRuleNettingCriteriaType::CustAccount:
                    CustTable::jumpRefCustomer(this.Value, this.ValueCompany);
                    break;
                case CustVendNettingRuleNettingCriteriaType::VendAccount:
                    VendTable::jumpRefVendor(this.Value, this.ValueCompany);
                    break;
                default:
                    break;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@CashManagement:CustVendNettingRuleCriteria</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CriteriaType</Name>
			<Mandatory>Yes</Mandatory>
			<EnumType>CustVendNettingRuleNettingCriteriaType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Operator</Name>
			<Mandatory>Yes</Mandatory>
			<EnumType>CustVendNettingRuleCriteriaNettingOperator</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RuleName</Name>
			<ExtendedDataType>Name</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Value</Name>
			<ExtendedDataType>CustVendNettingCriteriaValue</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ValueCompany</Name>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@CashManagement:LegalEntity</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameTypeIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>RuleName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CriteriaType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustVendNettingRule</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustVendNettingRule</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RuleName</Name>
					<Field>RuleName</Field>
					<RelatedField>Name</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>