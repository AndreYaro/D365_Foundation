<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSQueryTmpTableName</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSQueryTmpTableName extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>populateTableNames</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates temporary table of table names based of query's datasources.
    /// </summary>
    /// <param name="_query">
    /// The query whose datasources are used to populate the table.
    /// </param>
    [Hookable(false)]
    internal void populateTableNames(Query _query)
    {
        Set tableNameSet = new Set(Types::String);

        ttsBegin;
    
        var q = new Query(_query);

        for (int i = 1; i <= q.dataSourceCount(); ++i)
        {
            QueryBuildDataSource qbds = q.dataSourceNo(i);

            if (qbds.enabled())
            {
                var         dictTable = new dictTable(qbds.table());
                TableName   tableName = dictTable.name();

                if(!tableNameSet.in(tableName))
                {
                    this.QueryTableName  = tableName;
                    this.QueryTableLabel = dictTable.label();
                    this.QueryTableId = dictTable.id();
                
                    this.insert();

                    tableNameSet.add(tableName);
                }
            }
        }
    
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupTableNames</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to look up table names.
    /// </summary>
    /// <param name="_ctrl">
    /// The form control the lookup will be used for.
    /// </param>
    /// <param name="_buffer">
    /// The table buffer whose data is used in the lookup.
    /// </param>
    [Hookable(false)]
    internal static void lookupTableNames(
        FormStringControl       _ctrl,
        WHSQueryTmpTableName    _buffer)
    {
        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(WHSQueryTmpTableName), _ctrl);
    
        sysTableLookup.parmTmpBuffer(_buffer);
        sysTableLookup.addLookupfield(fieldnum(WHSQueryTmpTableName, QueryTableName), true);
        sysTableLookup.addLookupfield(fieldNum(WHSQueryTmpTableName, QueryTableLabel), false);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:QueryTmpTableNameDevDoc</DeveloperDocumentation>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>QueryTableName</TitleField1>
	<TitleField2>QueryTableLabel</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>QueryTableId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Label>@WAX:QueryTableId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>QueryTableLabel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TableLabel</ExtendedDataType>
			<Label>@WAX:QueryLabel</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>QueryTableName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableName</ExtendedDataType>
			<Label>@WAX:QueryTableName</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TableNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>QueryTableName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>