<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RLedgerTurnoverParamValue</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RLedgerTurnoverParamValue extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
        public void delete()
    {
        RLedgerTurnoverParamValue            paramValue;
        RLedgerTurnoverParamValueCombination paramValueCombination;
        RLedgerTurnoverParamHashKey          paramHashKey = new RLedgerTurnoverParamHashKey();

        ttsBegin;

        paramValueCombination = RLedgerTurnoverParamValueCombination::findRecId(this.ParamValueCombination, true);

        super();

        if (paramValueCombination)
        {
            while select paramValue
                where paramValue.ParamValueCombination == paramValueCombination.RecId
            {
                paramHashKey.addParamValue(paramValue.Name, paramValue.Value);
            }

            paramValueCombination.Hash = RLedgerTurnoverParamHashKey::getHash(paramHashKey.getParamStr());
            paramValueCombination.update();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a record containing the parameter value in the <c>RLedgerTurnoverParamValue</c> table.
    /// </summary>
    /// <param name="_name">
    /// The name of the parameter.
    /// </param>
    /// <param name="_value">
    /// The value of the parameter.
    /// </param>
    /// <param name="_refValueCombination">
    /// A record ID of the parameter combination.
    /// </param>
    /// <param name="_sourceRecId">
    /// A record ID of the source transaction characterized by the parameter.
    /// </param>
    /// <param name="_sourceTableId">
    /// A table ID of the source transaction characterized by the parameter.
    /// </param>
    static void create(Name          _name,
                              Name          _value,
                              RefRecId      _refValueCombination,
                              RefRecId      _sourceRecId   = 0,
                              RefTableId    _sourceTableId = 0)
    {
        RLedgerTurnoverParamValue paramValue;

        ttsBegin;

        paramValue.Name                  = _name;
        paramValue.Value                 = _value;
        paramValue.ParamValueCombination = _refValueCombination;
        paramValue.SourceRecId           = _sourceRecId;
        paramValue.SourceTableId         = _sourceTableId;
        paramValue.insert();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RLedgerTurnoverParamValue</c> table.
    /// </summary>
    /// <param name="_combinationRecId">
    /// A record ID of the parameter combination.
    /// </param>
    /// <param name="_name">
    /// The name of the parameter.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RLedgerTurnoverParamValue</c> table; otherwise, an empty record.
    /// </returns>
    static RLedgerTurnoverParamValue find(RefRecId _combinationRecId,
                                          Name     _name,
                                          boolean  _forupdate = false)
    {
        RLedgerTurnoverParamValue paramValues;

        paramValues.selectForUpdate(_forupdate);

        select firstOnly paramValues
            where paramValues.ParamValueCombination == _combinationRecId &&
                  paramValues.Name                  == _name;

        return paramValues;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a <c>Map</c> containing parameter values for the specified combination.
    /// </summary>
    /// <param name="_refValueCombination">
    /// A record ID of the parameter combination.
    /// </param>
    /// <returns>
    /// A <c>Map</c> containing parameter values for the specified combination.
    /// </returns>
    static Map getValues(RefRecId _refValueCombination)
    {
        RLedgerTurnoverParamValue paramValue;
        container                 value;
        Map                       mapValues = new Map(Types::String, Types::Container);

        while select Name, Value from paramValue
            where paramValue.ParamValueCombination == _refValueCombination
        {
            if (mapValues.exists(paramValue.Name))
            {
                value = mapValues.lookup(paramValue.Name);
            }
            else
            {
                value = conNull();
            }

            value += paramValue.Value;
            mapValues.insert(paramValue.Name, value);
        }

        return mapValues;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4081719</DeveloperDocumentation>
	<Label>@SYS4081767</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>Value</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>CombinationNameIdx</ClusteredIndex>
	<Modules>Ledger</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Reference</Name>
			<Label>@SYS112248</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceTableId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Value</Name>
			<Label>@SYS41043</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ParamValueCombination</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Value</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CombinationNameIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ParamValueCombination</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Name</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>FactureJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>FactureJour_RU</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceTableId</Name>
					<Field>SourceTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SourceRecId</Name>
					<Field>SourceRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RLedgerTurnoverParamValueCombination</Name>
			<Cardinality>OneMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RLedgerTurnoverParamValueCombination</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParamValueCombination</Name>
					<Field>ParamValueCombination</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>