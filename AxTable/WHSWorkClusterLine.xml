<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkClusterLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWorkClusterLine extends common
{


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createWorkClusterLine</Name>
				<Source><![CDATA[
	/// <summary>
	/// Creates a new <c>WHSWorkClusterLine</c> record to tie a work with a cluster.
	/// </summary>
	/// <param name="_clusterId">
	/// Id of the the cluster.
	/// </param>
	/// <param name="_workId">
	/// Id of the work.
	/// </param>
	/// <param name="_clusterPosition">
	/// The position within the cluster.
	/// </param>
	/// <exception cref="Exception::Error">
	/// Exception is thrown id the work is tied to another cluster.
	/// </exception>
    public static void createWorkClusterLine(WHSClusterId       _clusterId,
                                             WHSWorkId          _workId,
                                             WHSClusterPosition _clusterPosition)
    {
        WHSWorkClusterLine  workClusterLine;

        ttsbegin;

        if (!WHSWorkClusterLine::exist(_clusterId, _workId))
        {
            if (!WHSWorkTable::validateWorkInCluster(_workId))
            {
                throw error("@WAX3828");
            }

            if (WHSWorkTable::hasOrderCommittedReservations(_workId))
            {
                throw error(strFmt("@WAX:Error_CannotAddWorkWithOrderCommittedReserveToCluster", _workId));
            }

            workClusterLine.ClusterId        = _clusterId;
            workClusterLine.WorkId           = _workId;
            workClusterLine.ClusterPosition  = _clusterPosition;
            if (!workClusterLine.validateWrite())
            {
                throw error(strFmt("@WAX:WHSCannotInsertRecordInTable", tablePName(WHSWorkClusterLine)));
            }
            else
            {
                workClusterLine.insert();
            }
        }
        else
        {
            throw error("@WAX:WorkHasBeenCreatedInCurrentCluster");
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateClusterLinePosition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the position of a work cluster line.
    /// </summary>
    /// <param name="_clusterId">
    /// Id of the the cluster.
    /// </param>
    /// <param name="_workId">
    /// Id of the work.
    /// </param>
    /// <param name="_clusterPosition">
    /// The position within the cluster.
    /// </param>
    [Hookable(false)]
    internal static void updateClusterLinePosition(WHSClusterId       _clusterId,
                                                   WHSWorkId          _workId,
                                                   WHSClusterPosition _clusterPosition)
    {
        ttsbegin;

        WHSWorkClusterLine workClusterLine = WHSWorkClusterLine::find(_clusterId, _workId, true);

        workClusterLine.ClusterPosition = _clusterPosition;
        workClusterLine.update();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks if a specific <c>WHSWorkClusterLine</c> record exists.
	/// </summary>
	/// <param name="_clusterId">
	/// Cluster id of the record.
	/// </param>
	/// <param name="_workId">
	/// Work id of the record.
	/// </param>
	/// <returns>
	/// True if the record exists.
	/// </returns>
    static boolean exist(WHSClusterId   _clusterId,
                         WHSWorkId      _workId)
    {
        return (_clusterId && _workId) &&
                (select firstOnly WHSWorkClusterLine
                 where WHSWorkClusterLine.ClusterId  == _clusterId  &&
                       WHSWorkClusterLine.WorkId     == _workId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>WHSWorkClusterLine</c> record with given parameters.
	/// </summary>
	/// <param name="_clusterId">
	/// Cluster id of the record.
	/// </param>
	/// <param name="_workId">
	/// Work id of the record.
	/// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
    public static WHSWorkClusterLine find(WHSClusterId  _clusterId,
                                          WHSWorkId     _workId,
                                          boolean   _forupdate = false)
    {
        WHSWorkClusterLine workClusterLine;

        if (_clusterId && _workId)
        {
            workClusterLine.selectForUpdate(_forupdate);

            select firstonly workClusterLine
                where workClusterLine.ClusterId == _clusterId &&
                      workClusterLine.WorkId == _workId;
        }

        return workClusterLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4493</DeveloperDocumentation>
	<FormRef>WhSWorkCluster</FormRef>
	<Label>@WAX3739</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>ClusterId</TitleField1>
	<TitleField2>WorkId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ClusterIdWorkIdIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>ClusterIdWorkIdIdx</PrimaryIndex>
	<ReplacementKey>ClusterIdWorkIdIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ClusterId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClusterPosition</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ClusterId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ClusterId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ClusterPosition</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ClusterId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSClusterId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ClusterPosition</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSClusterPosition</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WorkId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWorkId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ClusterIdWorkIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ClusterId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WorkId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ClusterPositionWorkIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ClusterPosition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WorkId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WorkIdRecIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WorkId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>WHSWorkClusterTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSWorkClusterTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ClusterId</Name>
					<SourceEDT>WHSClusterId</SourceEDT>
					<Field>ClusterId</Field>
					<RelatedField>ClusterId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSWorkTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSWorkTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WorkId</Name>
					<SourceEDT>WHSWorkId</SourceEDT>
					<Field>WorkId</Field>
					<RelatedField>WorkId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>