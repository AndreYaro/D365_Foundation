<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLoadPostMethod</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSLoadPostMethod extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isBaseMethod</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if a method is a base method.
    /// </summary>
    /// <param name="_postMethodName">
    ///     The method name to be checked.
    /// </param>
    /// <returns>
    ///     true if the method is a base method; otherwise, false.
    /// </returns>
    boolean isBaseMethod(WHSPostMethodName _postMethodName)
    {
        SysDictClass dictClass = new SysDictClass(classNum(WhsLoadPostEngineBase));
        return dictClass.hasObjectMethod(_postMethodName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the specified record in the <c>WHSLoadPostMethod</c> exists.
    /// </summary>
    /// <param name="_postMethodPos">
    ///     The <c>PostMethodPos</c> field of the <c>WHSLoadPostMethod</c> record.
    /// </param>
    /// <returns>
    ///     true if the specified record exists; otherwise, false.
    /// </returns>
    static boolean exist(WHSPostMethodPos _postMethodPos)
    {
        return _postMethodPos && (select firstonly RecId from whsLoadPostMethod
                 where whsLoadPostMethod.PostMethodPos == _postMethodPos).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existMethodName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if a record exists in the <c>WHSLoadPostMethod</c> table
    ///     by the <c>PostMethodName</c> field.
    /// </summary>
    /// <param name="_postMethodName">
    ///     The <c>PostMethodName</c> of the record to check.
    /// </param>
    /// <returns>
    ///     true if the record exists; otherwise, false.
    /// </returns>
    public static boolean existMethodName(WHSPostMethodName _postMethodName)
    {
        WHSLoadPostMethod   whsLoadPostMethod;

        return (_postMethodName && (select firstonly RecId from whsLoadPostMethod
                 where whsLoadPostMethod.PostMethodName == _postMethodName).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>WHSLoadPostMethod</c> table.
    /// </summary>
    /// <param name="_postMethodPos">
    ///     The <c>PostMethodPos</c> field of the <c>WHSLoadPostMethod</c> record.
    /// </param>
    /// <param name="_forupdate">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>WHSLoadPostMethod</c> table; otherwise, an empty record.
    /// </returns>
    public static WHSLoadPostMethod find(WHSPostMethodPos   _postMethodPos,
                                         boolean            _forupdate = false)
    {
        WHSLoadPostMethod   loadPostMethod;

        if (_postMethodPos)
        {
            loadPostMethod.selectForUpdate(_forupdate);

            select firstonly loadPostMethod
                where loadPostMethod.PostMethodPos == _postMethodPos;
        }

        return loadPostMethod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEnableMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether a method can be enabled.
    /// </summary>
    /// <param name = "_postMethodName">
    /// A method name.
    /// </param>
    /// <returns>
    /// true if the method can be enabled; otherwise, false.
    /// </returns>
    [Hookable(true)]
    internal static boolean canEnableMethod(WHSPostMethodName _postMethodName)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4390</DeveloperDocumentation>
	<FormRef>WHSLoadPostMethod</FormRef>
	<Label>@WAX438</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>PostMethodPos</TitleField1>
	<TitleField2>PostMethodName</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>PostMethodPosIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>PostMethodPosIdx</PrimaryIndex>
	<ReplacementKey>PostMethodPosIdx</ReplacementKey>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostMethodPos</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostMethodName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostMethodPos</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostMethodPos</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostMethodName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PostMethodName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPostMethodName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PostMethodPos</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPostMethodPos</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PostMethodPosIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PostMethodPos</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>