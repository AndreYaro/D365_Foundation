<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FormLetterSortingParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class FormLetterSortingParameters extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    static boolean  exist(tableId               _sortingTableId,
                          PositiveNumber        _position,
                          tableId               _sortingSubTableId = 0)

    {
        if (!_sortingTableId)
            return false;

        return (select firstonly RecId
                    from formLetterSortingParameters
                        where formLetterSortingParameters.SortingTableId == _sortingTableId
                           && formLetterSortingParameters.Position       == _position
                           && formLetterSortingParameters.SortingSubTableId == _sortingSubTableId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existField</Name>
				<Source><![CDATA[
    static boolean  existField(tableId  _sortingTableId,
                               fieldId  _fieldId,
                               tableId  _sortingSubTableId = 0)

    {
        if (!_sortingTableId || !_fieldId)
            return false;

        return (select firstonly RecId
                    from formLetterSortingParameters
                        where formLetterSortingParameters.SortingTableId    == _sortingTableId
                           && formLetterSortingParameters.FieldId           == _fieldId
                           && formLetterSortingParameters.SortingSubTableId == _sortingSubTableId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldName</Name>
				<Source><![CDATA[
    static str  fieldName(tableId   _tableId,
                          fieldId   _fieldId)
    {
        str  name;

        name = fieldId2pname(_tableId, _fieldId);

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    static FormLetterSortingParameters  find(tableId            _sortingTableId,
                                             PositiveNumber     _position,
                                             tableId            _sortingSubTableId = 0,
                                             boolean            _update = false)
    {
        FormLetterSortingParameters  formLetterSortingParameters;

        if (_sortingTableId)
        {
            formLetterSortingParameters.selectForUpdate (_update);

            select firstonly formLetterSortingParameters
                where formLetterSortingParameters.SortingTableId    == _sortingTableId
                   && formLetterSortingParameters.Position          == _position
                   && formLetterSortingParameters.SortingSubTableId == _sortingSubTableId;
        }

        return formLetterSortingParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formLetterSorting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the sorting parameters for the journal being processed.
    /// </summary>
    /// <param name="_sortingTableId">
    /// The ID of the journal table.
    /// </param>
    /// <param name="_recIdField">
    /// The record ID of the field in the journal table.
    /// </param>
    /// <param name="_sortingSubTableId">
    /// The ID of sub journal table; optional.
    /// </param>
    /// <returns>
    /// A <c>Container</c> with sorting parameters.
    /// </returns>
    static public container formLetterSorting(tableId    _sortingTableId,
                                              fieldId    _recIdField,
                                              tableId    _sortingSubTableId = 0)
    {
        container                       sortOrder;
        FormLetterSortingParameters     sortingParameters;

        while select FieldId from sortingParameters
            order by Position, FieldId
            where sortingParameters.SortingTableId    == _sortingTableId
               && sortingParameters.SortingSubTableId == _sortingSubTableId
        {
            sortOrder += [sortingParameters.FieldId];
        }

        sortOrder += [_recIdField];

        return sortOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFieldVisible</Name>
				<Source><![CDATA[
    static boolean  isFieldVisible(tableId  _tableId,
                                   fieldId  _fieldId)
    {
        #macrolib.dictfield

        boolean                 visible             = true;
        SysDictField            dictField           = new SysDictField(_tableId, _fieldId);

        if (!dictField.visible() || !dictField.saveContents())  // is field visible ?
        {
            visible = false;
        }

        return visible;
    }

]]></Source>
			</Method>
			<Method>
				<Name>notSelectedFieldIdList</Name>
				<Source><![CDATA[
    public static List  notSelectedFieldIdList(tableId  _tableId,
                                               tableId  _subTableId = 0)
    {
        int             i,j;
        fieldId         fieldId;
        List            notSelectedFieldList    = new List(Types::Integer);
        SysDictField    sysDictField;
        DictTable       dictTable = new DictTable(_tableId);

        for (i=1;i<=dictTable.fieldCnt();i++)
        {
            sysDictField = new SysDictField(dictTable.id(), dictTable.fieldCnt2Id(i));

            if (FormLetterSortingParameters::isFieldVisible(_tableId, sysDictField.id()))
            {
                for (j=1; j <= sysDictField.arraySize(); j++)
                {
                    fieldId = new SysDictField(sysDictField.tableid(), sysDictField.id(), j).id();

                    if (!FormLetterSortingParameters::existField(_tableId, fieldId, _subTableId))
                        notSelectedFieldList.addEnd(fieldId);
                }
            }
        }
        return notSelectedFieldList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packedNotSelectedFieldIdList</Name>
				<Source><![CDATA[
    static container  packedNotSelectedFieldIdList(tableId  _tableId,
                                                          tableId  _subTableId = 0)
    {
        return FormLetterSortingParameters::notSelectedFieldIdList(_tableId,_subTableId).pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>packedSelectedFieldIdList</Name>
				<Source><![CDATA[
    static container  packedSelectedFieldIdList(tableId  _tableId,
                                                       tableId  _subTableId = 0)
    {
        return FormLetterSortingParameters::selectedFieldIdList(_tableId,_subTableId).pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedFieldIdList</Name>
				<Source><![CDATA[
    static List  selectedFieldIdList(tableId  _tableId,
                                            tableId  _subTableId = 0)
    {
        FormLetterSortingParameters     formLetterSortingParameters;
        List                            selectedFieldIdList = new List(Types::Integer);

        while select FieldId from formLetterSortingParameters
            order by Position
            where formLetterSortingParameters.SortingTableId        == _tableId
                && formLetterSortingParameters.SortingSubTableId    == _subTableId
        {
            selectedFieldIdList.addEnd(formLetterSortingParameters.FieldId);
        }

        return selectedFieldIdList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeFromPackedList</Name>
				<Source><![CDATA[
    static void  writeFromPackedList(tableId     _tableId,
                                            container    packedList,
                                            tableId     _subTableId = 0)
    {
        FormLetterSortingParameters   formLetterSortingParameters;
        List                    selectedFieldIdList;
        ListEnumerator          selectedEnumerator;
        fieldId                 fieldId;
        int                     position = 0;

        ttsbegin;

        delete_from formLetterSortingParameters
            where formLetterSortingParameters.SortingTableId == _tableId
                &&  formLetterSortingParameters.SortingSubTableId == _subTableId;

        if (packedList)
        {
            selectedFieldIdList = List::create(packedList);
            selectedEnumerator  = selectedFieldIdList.getEnumerator();

            while (selectedEnumerator.moveNext())
            {
                fieldId = selectedEnumerator.current();

                formLetterSortingParameters.clear();
                formLetterSortingParameters.initValue();
                formLetterSortingParameters.SortingTableId      = _tableId;
                formLetterSortingParameters.Position            = position;
                formLetterSortingParameters.FieldId             = fieldId;
                formLetterSortingParameters.SortingSubTableId   = _subTableId;
                formLetterSortingParameters.insert();

                position++;
            }
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124542</DeveloperDocumentation>
	<Label>@SYS71004</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>SortingTableId</TitleField1>
	<TitleField2>FieldId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>FormLetterSortingParametersIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>FormLetterSortingParametersIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Administration</Name>
			<Label>@SYS9853</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Position</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SortingTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SortingSubTableId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DocumentStatus</Name>
			<Label>@SYS22101</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>FieldIdRelation</Name>
			<Label>@SYS9114</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SortingTableId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>FieldId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Position</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PositiveNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SortingSubTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FormLetterSortingRefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SortingTableId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer content</AssetClassification>
			<ExtendedDataType>FormLetterSortingRefTableId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>FormLetterSortingParametersIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SortingTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Position</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SortingSubTableId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FormLetterSortingFieldIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SortingTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SortingSubTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FieldId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustConfirmJour</Name>
			<RelatedTable>CustConfirmJour</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortingTableId</Name>
					<Field>SortingTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustInvoiceJour</Name>
			<RelatedTable>CustInvoiceJour</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortingTableId</Name>
					<Field>SortingTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustPackingSlipJour</Name>
			<RelatedTable>CustPackingSlipJour</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortingTableId</Name>
					<Field>SortingTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustQuotationJour</Name>
			<RelatedTable>CustQuotationJour</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortingTableId</Name>
					<Field>SortingTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendInvoiceJour</Name>
			<RelatedTable>VendInvoiceJour</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortingTableId</Name>
					<Field>SortingTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendPackingSlipJour</Name>
			<RelatedTable>VendPackingSlipJour</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortingTableId</Name>
					<Field>SortingTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendPurchOrderJour</Name>
			<RelatedTable>VendPurchOrderJour</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortingTableId</Name>
					<Field>SortingTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendReceiptsListJour</Name>
			<RelatedTable>VendReceiptsListJour</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortingTableId</Name>
					<Field>SortingTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WMSPickingRoute</Name>
			<RelatedTable>WMSPickingRoute</RelatedTable>
			<RelationshipType>Link</RelationshipType>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SortingTableId</Name>
					<Field>SortingTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>