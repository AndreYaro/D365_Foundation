<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpWMSOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpWMSOrder extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inventDim</Name>
				<Source><![CDATA[
    public InventDim inventDim()
    {
        return InventDim::find(this.InventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimParmPrimaryDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an <c>InventDimParm</c> buffer with primary dimensions.
    /// </summary>
    /// <returns>
    /// An <c>InventDimParm</c> buffer that contains only the primary dimension fields for the item.
    /// </returns>
    private InventDimParm inventDimParmPrimaryDimensions()
    {
        return InventTable::find(this.ItemId).inventDimParmPrimaryDimensions();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCwQtyPreReservedLocation</Name>
				<Source><![CDATA[
    public PdsCWInventQty pdsCwQtyPreReservedLocation(
        InventDim       _inventDimCriteria,
        InventDimParm   _inventDimParmCriteria)
    {
        WMSOrderTrans   wmsOrderTrans;
        InventDim       inventDim;
        InventDim       inventDimTest;
        InventDimParm   inventDimParm;

        if (!this.pdsCWQtyPreReserved)
        {
            return 0;
        }

        inventDim.data(_inventDimCriteria);

        inventDimParm.data(_inventDimParmCriteria);
        inventDimParm.InventSiteIdFlag      = NoYes::No; // No reason to filter on Site as InventLocation is unique across sites
        inventDimParm.InventLocationIdFlag  = NoYes::Yes;
        inventDimParm.wmsLocationIdFlag     = NoYes::Yes;

        select sum(pdsCWQty) from wmsOrderTrans
            where wmsOrderTrans.ItemId        == this.ItemId &&
                  wmsOrderTrans.RouteId       == ''          &&
                  wmsOrderTrans.PreReserved   == NoYes::Yes
            #InventDimExistsJoin(wmsOrderTrans.inventDimId, inventDimTest, inventDim, inventDimParm);

        return wmsOrderTrans.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyPreReservedLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the pre-reserved quantity on a specific location not yet added to the route.
    /// </summary>
    /// <param name="_inventDimCriteria">
    /// The inventory dimensions criteria that will be used to determine the quantity.
    /// </param>
    /// <param name="_inventDimParmCriteria">
    /// The inventory dimensions parameter that will be used to determine the quantity.
    /// </param>
    /// <returns>
    /// The pre-reserved quantity on a specific location not yet added to the route.
    /// </returns>
    public InventQty qtyPreReservedLocation(
        InventDim       _inventDimCriteria,
        InventDimParm   _inventDimParmCriteria)
    {
        WMSOrderTrans   wmsOrderTrans;
        InventDim       inventDim;
        InventDim       inventDimTest;
        InventDimParm   inventDimParm;

        if (!this.QtyPreReserved)
        {
            return 0;
        }

        inventDim.data(_inventDimCriteria);

        inventDimParm.data(_inventDimParmCriteria);
        inventDimParm.InventSiteIdFlag      = NoYes::No; // No reason to filter on Site as InventLocation is unique across sites
        inventDimParm.InventLocationIdFlag  = NoYes::Yes;
        inventDimParm.wmsLocationIdFlag     = NoYes::Yes;

        select sum(Qty) from wmsOrderTrans
            where wmsOrderTrans.ItemId        == this.ItemId
               && wmsOrderTrans.RouteId       == ''
               && wmsOrderTrans.PreReserved   == NoYes::Yes
            #InventDimExistsJoin(wmsOrderTrans.inventDimId, inventDimTest, inventDim, inventDimParm);

        return wmsOrderTrans.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryWMSOrderTransRelated</Name>
				<Source><![CDATA[
    public Query queryWMSOrderTransRelated(
        WMSShipment _wmsShipment,
        boolean     _update     = false)
    {
        Query                   query;
        QueryBuildDataSource    qbds_WMSOrderTrans;
        QueryBuildDataSource    qbds_InventDim;
        InventDim               inventDim                   = this.inventDim();
        InventDimParm           inventDimParmPrimary        = this.inventDimParmPrimaryDimensions();
        InventDimParm           inventDimParmGroupBy;       // Don't do grouping by any fields

        query = new Query();
        qbds_WMSOrderTrans = query.addDataSource(tableNum(WMSOrderTrans));
        qbds_WMSOrderTrans.update(_update);
        qbds_WMSOrderTrans.addRange(fieldNum(WMSOrderTrans,ShipmentId)).      value(queryValue(_wmsShipment.ShipmentId));
        qbds_WMSOrderTrans.addRange(fieldNum(WMSOrderTrans,ItemId)).          value(queryValue(this.ItemId));
        qbds_WMSOrderTrans.addRange(fieldNum(WMSOrderTrans,ExpeditionStatus)).value(queryValue(WMSExpeditionStatus::Registered));
        qbds_WMSOrderTrans.addRange(fieldNum(WMSOrderTrans,RouteId)).         value(queryValue(""));

        qbds_WMSOrderTrans.addSortField(fieldNum(WMSOrderTrans,PreReserved),SortOrder::Descending);

        switch (_wmsShipment.PackingType)
        {
            case WMSPackingType::Order:
                qbds_WMSOrderTrans.addRange(fieldNum(WMSOrderTrans,InventTransType)). value(queryValue(this.TransType));
                qbds_WMSOrderTrans.addRange(fieldNum(WMSOrderTrans,InventTransRefId)).value(queryValue(this.TransRefId));
                break;
            case WMSPackingType::Customer:
                qbds_WMSOrderTrans.addRange(fieldNum(WMSOrderTrans,Customer)).value(queryValue(this.Customer));
                qbds_WMSOrderTrans.addRange(fieldNum(WMSOrderTrans,DeliveryPostalAddress)).value(queryValue(this.DeliveryPostalAddress));
                break;
            case WMSPackingType::All:
                break;
        }

        if (this.useBatchConstraints)
        {
            qbds_WMSOrderTrans.addRange(fieldNum(WMSOrderTrans,InventTransId)).value(queryValue(this.InventTransId));
        }
        // Ensure that the same values for primary dimensions are found - otherwise they belong to a different tmpWMSOrder
        qbds_InventDim = qbds_WMSOrderTrans.addDataSource(tableNum(InventDim));
        qbds_InventDim.joinMode(JoinMode::InnerJoin);
        qbds_InventDim.relations(false);
        qbds_InventDim.addLink(fieldNum(WMSOrderTrans, InventDimId), fieldNum(InventDim, InventDimId));

        InventDim::queryDatasourceAddRangeSortFromParms(qbds_InventDim, false, inventDim, inventDimParmPrimary, inventDimParmGroupBy);
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWizardOrderInformation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the information needed by the shipment wizard to identify orders to be included in the
    ///    shipment.
    /// </summary>
    /// <param name="_wmsOrderId">
    ///    The <c>WMSOrderId</c> of the order.
    /// </param>
    /// <param name="_requestedQty">
    ///    Quantity identified as needed earlier
    /// </param>
    /// <returns>
    ///    A container with the <c>InventDimId</c> and a quantity.
    /// </returns>
    /// <remarks>
    ///    The <c>inventDimId</c> in the returned container is of the item dimensions of the WMS order. The
    ///    quantity is the difference between the already reserved quantity and the quantity registered.
    /// </remarks>
    static public container getWizardOrderInformation(
        WMSOrderId  _wmsOrderId,
        InventQty   _requestedQty)
    {
        InventDim               inventDim;
        WMSOrder                wmsOrder;
        WMSOrderTrans           wmsOrderTrans;
        InventQty               reservedQty;
        InventQty               reservedQtyInventory;

        container notFoundReturnValue()
        {
            return ['', 0];
        }

        wmsOrder = WMSOrder::find(_wmsOrderId);
        if (!wmsOrder.RecId)
        {
            return notFoundReturnValue();
        }

        reservedQtyInventory = -InventTransIdSumSingleStatus::qtyReservPhysicalWMSOrder(InventTransOrigin::findByInventTransId(wmsOrder.InventTransId).RecId, wmsOrder.OrderId);

        select sum(Qty) from wmsOrderTrans
            where wmsOrderTrans.OrderId             == wmsOrder.OrderId
               && wmsOrderTrans.IsReserved          == NoYes::Yes
               && wmsOrderTrans.ExpeditionStatus    == WMSExpeditionStatus::Registered;

        reservedQty = reservedQtyInventory - wmsOrderTrans.Qty;
        if (_requestedQty > reservedQty)
        {
            inventDim = InventTable::find(wmsOrder.ItemId).inventDimProductDimensions(wmsOrder.inventDim());
            return [inventDim.InventDimId, _requestedQty - reservedQty];
        }

        return notFoundReturnValue();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WMSAdvanced</ConfigurationKey>
	<IsObsolete>Yes</IsObsolete>
	<Label>@SYS24079</Label>
	<ClusteredIndex>ItemCustOrder</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex>ItemCustOrder</PrimaryIndex>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>customer</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WMSCustomer</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DeliveryPostalAddress</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>LogisticsPostalAddressRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>inventDimId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>inventTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>PDS</ConfigurationKey>
			<ExtendedDataType>InventTransId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>itemId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>pdsCWQty</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>pdsCWQtyPreReserved</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>pdsCWQtyPreReservedPhysical</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>PdsCWInventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>qty</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>qtyPreReserved</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>qtyPreReservedPhysical</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>toInventLocationId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventLocationIdTo</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>toWMSLocationId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>WMSLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>transRefId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventTransRefId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>transType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>InventTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>useBatchConstraints</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ConfigurationKey>PDS</ConfigurationKey>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ItemCustOrder</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>itemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>customer</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DeliveryPostalAddress</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>transRefId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>inventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>toInventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>toWMSLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>inventTransId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>customer</Name>
					<Field>customer</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventDimId</Name>
					<Field>inventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>itemId</Name>
					<Field>itemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>inventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>inventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsPostalAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsPostalAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DeliveryPostalAddress</Name>
					<Field>DeliveryPostalAddress</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ToInventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ToInventLocation</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TmpWMSOrder</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>toInventLocationId</Name>
					<Field>toInventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>InventLocationType_Extern</Name>
					<RelatedField>InventLocationType</RelatedField>
					<ValueStr>InventLocationType::Standard</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>