<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvPartyEmployeeRelationship</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TrvPartyEmployeeRelationship extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    // Run on server, because software for synchronization with Microsoft
    // Outlook requires date and time according to the server clock.
    public void initValue()
    {
        this.AccountType = LedgerJournalACType::Vend;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(fieldId _fieldId)
    {
        super(_fieldId);

        if (_fieldId == fieldNum(TrvPartyEmployeeRelationship, AccountType) && this.orig().AccountType != this.AccountType)
        {
            this.LedgerDimension = 0; //clear account #
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerDimension</Name>
				<Source><![CDATA[
    public LedgerDimensionDefaultAccount parmLedgerDimension(LedgerDimensionDefaultAccount _ledgerDimension = this.LedgerDimension)
    {
        this.LedgerDimension = _ledgerDimension;
        return this.LedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update(boolean _skipSyncTrigger = false)
    {
        TrvPartyEmployeeRelationship trvPartyEmployeeRelationship;

        super();

        ttsbegin;

        trvPartyEmployeeRelationship = TrvPartyEmployeeRelationship::find(this.Worker, true);
        trvPartyEmployeeRelationship.doUpdate();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreatePartyEmployeeRelationShip</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds or creates the party employee relationship record for the given account type, worker and dimension.
    /// </summary>
    /// <param name = "_accountType">Account type.</param>
    /// <param name = "_workerRecId">Worker recid.</param>
    /// <param name = "_ledgerDimension">Ledger dimension recId.</param>
    /// <returns>Party employee relationship.</returns>
    public static TrvPartyEmployeeRelationship findOrCreatePartyEmployeeRelationShip(LedgerJournalACType _accountType, HcmWorkerRecId _workerRecId, DimensionDynamicDefaultAccount _ledgerDimension)
    {
        TrvPartyEmployeeRelationship    trvPartyEmployeeRelationship;

        ttsbegin;

        trvPartyEmployeeRelationship = TrvPartyEmployeeRelationship::find(_workerRecId, true);

        if (trvPartyEmployeeRelationship.RecId)
        {
            trvPartyEmployeeRelationship.AccountType = _accountType;
            trvPartyEmployeeRelationship.LedgerDimension = _ledgerDimension;
            trvPartyEmployeeRelationship.update();
        }
        else
        {
            trvPartyEmployeeRelationship.AccountType = _accountType;
            trvPartyEmployeeRelationship.LedgerDimension = _ledgerDimension;
            trvPartyEmployeeRelationship.Worker = _workerRecId;
            trvPartyEmployeeRelationship.insert();
        }

        ttscommit;

        return trvPartyEmployeeRelationship;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite()
    {
        boolean     ret;

        ret = super();

        if (this.AccountType == LedgerJournalACType::Ledger || this.AccountType == LedgerJournalACType::Vend)
        {
            if (this.LedgerDimension == 0)
            {
                ret = false;

                error(strfmt("@SYS39376", fieldpname(TrvPartyEmployeeRelationship, LedgerDimension)));
            }
        }
        else
        {
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(TrvHcmWorkerRecId _worker)
    {
        return _worker && (select firstonly trvPartyEmployeeRelationship where trvPartyEmployeeRelationship.Worker == _worker).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static TrvPartyEmployeeRelationship find(TrvHcmWorkerRecId _worker, boolean _forupdate = false)
    {
        TrvPartyEmployeeRelationship   trvPartyEmployeeRelationship = null;

        if (_worker)
        {
            trvPartyEmployeeRelationship.selectForUpdate(_forupdate);

            select firstonly trvPartyEmployeeRelationship where trvPartyEmployeeRelationship.Worker == _worker ;
        }

        return trvPartyEmployeeRelationship;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkerStatus</Name>
				<Source><![CDATA[
    public static HcmWorkerStatus getWorkerStatus(TrvHcmWorkerRecId _worker)
    {
        HcmWorker   hcmWorker;

        select firstonly hcmWorker
            where hcmWorker.RecId == _worker;

        return hcmWorker.workerStatus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertWorker</Name>
				<Source><![CDATA[
    static void insertWorker(TrvHcmWorkerRecId _worker)
    {
        TrvPartyEmployeeRelationship trvParty;

        trvParty.Worker = _worker;
        trvParty.insert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Trv</ConfigurationKey>
	<DeveloperDocumentation>@SYS124867</DeveloperDocumentation>
	<FormRef>HcmWorker</FormRef>
	<Label>@SYS114089</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Worker</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>TrvWorkerIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Expense</Modules>
	<PrimaryIndex>TrvWorkerIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ExpenseManagement</Name>
			<Label>@SYS101454</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PerDiem</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Trv</ConfigurationKey>
			<EnumType>LedgerJournalACType</EnumType>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LedgerDimension</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>Trv</ConfigurationKey>
			<ExtendedDataType>DimensionDynamicDefaultAccount</ExtendedDataType>
			<Label>@SYS24500</Label>
			<SysSharingType>Never</SysSharingType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PerDiem</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TrvAllowance</ExtendedDataType>
			<Label>@SYS101320</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TrvHcmWorkerRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LedgerDimensionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LedgerDimension</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TrvWorkerIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Worker</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>DimensionAttributeValueCombination</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>DescribesTheAccountingOf</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AccountingDescribedBy</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TrvHcmWorker</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>Has</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>IsFor</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Worker</Name>
					<Field>Worker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>