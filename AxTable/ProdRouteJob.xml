<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdRouteJob</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProdRouteJob extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkValid</Name>
				<Source><![CDATA[
    boolean checkValid()
    {
        if (! this.RecId)
            return checkFailed("@SYS24377");
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        // Shop Floor Control begin
        if (Global::isConfigurationkeyEnabled(configurationkeynum(Jmgjob)))
        {
            if (JmgJobTable::synchronizeProdRouteJob(this, true))
            {
                super();
            }
        }
        else
        {
            super();
        }
        // Shop Floor Control end
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProdRoute</Name>
				<Source><![CDATA[
    void  initFromProdRoute(ProdRoute prodRoute)
    {
        this.ProdId         = prodRoute.ProdId;
        this.OprNum         = prodRoute.OprNum;
        this.OprPriority    = prodRoute.OprPriority;
        // Shop Floor Control begin
        this.JobPayType     = prodRoute.JobPayType;
        // Shop Floor Control end
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromProdTable</Name>
				<Source><![CDATA[
    void initFromProdTable(ProdTable prodTable)
    {
        this.ProdId             = prodTable.ProdId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromReqRouteJob</Name>
				<Source><![CDATA[
    void initFromReqRouteJob(ReqRouteJob _reqRouteJob)
    {
        this.NumSecondary       = _reqRouteJob.NumSecondary;
        this.OprPriority        = _reqRouteJob.OprPriority;
        this.NumPrimary         = _reqRouteJob.NumPrimary;
        this.OprNum             = _reqRouteJob.OprNum;
        this.NumType            = _reqRouteJob.NumType;
        this.ToTime             = _reqRouteJob.ToTime;
        this.ToDate             = _reqRouteJob.ToDate;
        this.FromTime           = _reqRouteJob.FromTime;
        this.FromDate           = _reqRouteJob.FromDate;
        this.SchedCancelled     = _reqRouteJob.SchedCancelled;
        this.LinkType           = _reqRouteJob.LinkType;
        this.Link               = _reqRouteJob.Link;
        this.JobType            = _reqRouteJob.JobType;
        this.PropertyId         = _reqRouteJob.PropertyId;
        this.CalcTimeHours      = _reqRouteJob.CalcTimeHours;
        this.SchedTimeHours     = _reqRouteJob.SchedTimeHours;
        this.WrkCtrId           = _reqRouteJob.WrkCtrId;
        this.JobControl         = _reqRouteJob.JobControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOperationJobControlled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the job is job controlled.
    /// </summary>
    /// <param name="_prodId">
    /// The production order ID used to search the job.
    /// </param>
    /// <param name="_oprNum">
    /// The operation number used to search the job.
    /// </param>
    /// <returns>
    /// true if the job is job controlled; otherwise, false.
    /// </returns>
    [Hookable(false)]
    internal static boolean isOperationJobControlled(ProdId _prodId, OprNum _oprNum)
    {
        ProdRouteJob operationJob;

        select firstonly JobControl from operationJob
               where operationJob.ProdId      == _prodId
                 &&  operationJob.OprNum      == _oprNum
                 &&  operationJob.OprPriority == RouteOprPriority::Primary
                 &&  operationJob.JobType     == RouteJobType::Process;

        return operationJob.JobControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    void  insert()
    {
        ttsbegin;

        this.setFields();

        super();

        // Shop Floor Control begin
        if (Global::isConfigurationkeyEnabled(configurationkeynum(Jmgjob)))
        {
            JmgJobTable::synchronizeProdRouteJob(this);
        }
        // Shop Floor Control end
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertUsingInsertList</Name>
				<Source><![CDATA[
    public void insertUsingInsertList(
        RecordInsertList    _list
        )
    {
        this.setFields();

        _list.add(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFirstJob</Name>
				<Source><![CDATA[
    /// <summary>
    /// Evaluates if this ProdRouteJob is the job with the lowest JobId related to the ProdId, OprNum, OprPriority and JobType
    /// </summary>
    /// <returns>If this is the job with the lowest JobId</returns>
    public boolean isFirstJob()
    {
        prodRouteJob prodRouteJobPrimaryExists;
        select RecId from prodRouteJobPrimaryExists
                    where prodRouteJobPrimaryExists.ProdId == this.ProdId
                          && prodRouteJobPrimaryExists.OprNum == this.OprNum
                          && prodRouteJobPrimaryExists.OprPriority == this.OprPriority
                          && prodRouteJobPrimaryExists.JobType == this.JobType
                          && prodRouteJobPrimaryExists.JobId < this.JobId;

        return !prodRouteJobPrimaryExists;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    display ItemId itemId()
    {
        return (select prodTable
                    index hint ProdIdx
                    where prodTable.ProdId == this.ProdId).ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>materialConsumption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Computes whether material is consumed in a specified job.
    /// </summary>
    /// <param name="_prodRouteJob">
    /// A <c>ProdRouteJob</c> table buffer that specifies the route for which to test for material
    /// consumption.
    /// </param>
    /// <returns>
    /// An image constant if the material is consumed; otherwise, 0.
    /// </returns>
    public display ImageRes materialConsumption(ProdRouteJob _prodRouteJob)
    {
        #ResAppl

        boolean         ret = false;
        ProdBOM         prodBOMtmp;

        if (_prodRouteJob.JobType == RouteJobType::Process)
        {
            select firstonly prodBOMtmp
            where   prodBOMtmp.ProdId == _prodRouteJob.ProdId &&
                prodBOMtmp.OprNum == _prodRouteJob.OprNum;
            if (prodBOMtmp)
            {
                ret = true;
            }
            else
            {
                ret = false;
            }
        }

        return ret ? #ImageItem : 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustSynchronizeProdRouteTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true if the ProdRouteTable should be synchronized 
    /// </summary>
    protected boolean mustSynchronizeProdRouteTable()
    {
        return Global::isConfigurationkeyEnabled(configurationkeynum(Jmgjob));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWQtyError</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total catch weight error quantity reported for the job.
    /// </summary>
    /// <returns>
    /// The total catch weight error quantity reported for the job.
    /// </returns>
    display PdsCWBatchErr pdsCWQtyError()
    {
        return ProdRouteTrans::pdsCWQtyErrorJob(this.ProdId,this.JobId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWQtyGood</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total catch weight good quantity reported for the job.
    /// </summary>
    /// <returns>
    /// The total catch weight good quantity reported for the job.
    /// </returns>
    display PdsCWBatchGood pdsCWQtyGood()
    {
        return ProdRouteTrans::pdsCWQtyGoodJob(this.ProdId,this.JobId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWReportedQtyError</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the catch weight reported error quantity for the job.
    /// </summary>
    /// <returns>
    /// The catch weight reported error quantity for the job.
    /// </returns>
    display PdsCWBatchErr pdsCWReportedQtyError()
    {
        return ProdRouteTrans::pdsCWQtyErrorJob(this.ProdId,this.JobId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWReportedQtyGood</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the catch weight reported good quantity for the job.
    /// </summary>
    /// <returns>
    /// The catch weight reported good quantity for the job.
    /// </returns>
    display PdsCWBatchGood pdsCWReportedQtyGood()
    {
        return ProdRouteTrans::pdsCWQtyGoodJob(this.ProdId,this.JobId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodJobType</Name>
				<Source><![CDATA[
    ProdJobType prodJobType()
    {
        return ProdJobType::construct(this.JobType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodRoute</Name>
				<Source><![CDATA[
    ProdRoute prodRoute(boolean _forUpdate = false)
    {
        return ProdRoute::find(this.ProdId,this.OprNum,this.OprPriority,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodTable</Name>
				<Source><![CDATA[
    ProdTable prodTable(boolean _forUpdate = false)
    {
        return ProdTable::find(this.ProdId,_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTable</Name>
				<Source><![CDATA[
    ProjTable projTable(boolean _forUpdate = false)
    {
        return this.prodTable().projTable(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>operationId</Name>
				<Source><![CDATA[
    internal display RouteOprId operationId()
    {
        ProdRoute prodRoute = this.prodRoute();
        return prodRoute.OprId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>operationName</Name>
				<Source><![CDATA[
    internal display RouteOprName operationName()
    {
        ProdRoute prodRoute = this.prodRoute();
        return RouteOprTable::find(prodRoute.OprId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyError</Name>
				<Source><![CDATA[
    display ProdReportedError qtyError()
    {
        return ProdRouteTrans::qtyErrorJob(this.ProdId,this.JobId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyGood</Name>
				<Source><![CDATA[
    display ProdReportedGood qtyGood()
    {
        return ProdRouteTrans::qtyGoodJob(this.ProdId,this.JobId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyGoodByWorker</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total good quantity initiated by the specified worker.
    /// </summary>
    /// <param name = "_worker"> Worker recID </param>
    /// <returns>
    /// Returns the total good quantity initiated by a specific worker.
    /// </returns>
    [Hookable(false)]
    internal ProdReportedGood qtyGoodByWorker(JmgWorkerRecId _worker)
    {
        return ProdRouteTrans::qtyGoodJobByWorker(this.ProdId, this.JobId, _worker);
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyReportedByWorker</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total reported quantity initiated by the specified worker.
    /// </summary>
    /// <param name = "_worker"> Worker recID </param>
    /// <returns>
    /// Returns the total reported quantity initiated by a specific worker.
    /// </returns>
    [Hookable(false)]
    internal ProdReportedGood qtyReportedByWorker(JmgWorkerRecId _worker)
    {
        return ProdRouteTrans::qtyReportedJobByWorker(this.ProdId, this.JobId, _worker);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWQtyReportedByWorker</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total catch weight reported quantity initiated by the specified worker.
    /// </summary>
    /// <param name = "_worker"> Worker recID </param>
    /// <returns>
    /// Returns the total catch weight reported quantity initiated by a specific worker.
    /// </returns>
    [Hookable(false)]
    internal PdsCWBatchGood pdsCWQtyReportedByWorker(JmgWorkerRecId _worker)
    {
        return ProdRouteTrans::pdsCWQtyReportedJobByWorker(this.ProdId, this.JobId, _worker);
    }

]]></Source>
			</Method>
			<Method>
				<Name>qtyHours</Name>
				<Source><![CDATA[
    display ProdReportedHours qtyHours()
    {
        return ProdRouteTrans::hoursJob(this.ProdId,this.JobId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFields</Name>
				<Source><![CDATA[
    void setFields()
    {
        this.JobId = this.JobId ? this.JobId : NumberSeq::newGetNum(ProdParameters::numRefProdJobId()).num();
        this.JobFinished = this.JobStatus == ProdJobStatus::Completed ? NoYes::Yes : NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    void update()
    {
        if (this.JobStatus == ProdJobStatus::Completed)
            this.ExecutedPct = 100;

        if (this.ExecutedPct > 100)
            this.ExecutedPct = 100;

        if (this.ExecutedPct < 0)
            this.ExecutedPct = 0;

        this.JobFinished = this.JobStatus == ProdJobStatus::Completed ? NoYes::Yes : NoYes::No;

        super();

        // Shop Floor Control begin
        if (this.mustSynchronizeProdRouteTable())
        {
            JmgJobTable::synchronizeProdRouteJob(this);
        }
        // Shop Floor Control end
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrkCtrEmployee</Name>
				<Source><![CDATA[
    display HcmPersonnelNumberId wrkCtrEmployee()
    {
        return HcmWorker::find(WrkCtrTable::find(this.WrkCtrId).Worker).PersonnelNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkIsJobsReportedFinished</Name>
				<Source><![CDATA[
    static boolean checkIsJobsReportedFinished(ProdId prodId)
    {
        ProdRouteJob prodRouteJob;
        boolean     ok = true;

        while select JobId, JobControl, JobStatus from prodRouteJob
            index hint ProdOprIdx
            where prodRouteJob.ProdId == prodId
        {
            if (prodRouteJob.JobControl                           &&
                prodRouteJob.JobStatus    != ProdJobStatus::Completed
               )
            {
                ok = checkFailed(strfmt("@SYS17106",prodRouteJob.JobId));
            }
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteProduction</Name>
				<Source><![CDATA[
    static void deleteProduction(
        ProdId     prodId,
        OprNum     oprNum    = 0
        )
    {
        ProdRouteJob prodRouteJob;

        ttsbegin;

        delete_from prodRouteJob
            index hint ProdOprIdx
            where prodRouteJob.ProdId   == prodId              &&
                 (prodRouteJob.OprNum   == oprNum  || !oprNum) &&
                  prodRouteJob.JobStatus < ProdJobStatus::Completed;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exists</Name>
				<Source><![CDATA[
    static boolean exists(ProdId _prodId)
    {
        if (_prodId)
            return (select firstonly RecId from prodRouteJob
                index hint ProdOprIdx
                where prodRouteJob.ProdId == _prodId).RecId ? true : false;

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFirst</Name>
				<Source><![CDATA[
    static ProdRouteJob findFirst(ProdId                _prodId,
                                  OprNum                _oprNum,
                                  RouteOprPriority      _oprPriority = RouteOprPriority::Primary,
                                  boolean               _forUpdate = false)
    {
        ProdRouteJob prodRouteJob;
        prodRouteJob.selectForUpdate(_forUpdate);

        if (_prodId && _oprNum)
        {
            select firstonly prodRouteJob
                index hint ProdOprIdx
                order by NumType, NumPrimary, NumSecondary
                where   prodRouteJob.ProdId         == _prodId                      &&
                        prodRouteJob.OprNum         == _oprNum                      &&
                        prodRouteJob.OprPriority    == _oprPriority;
        }

        return prodRouteJob;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findJobId</Name>
				<Source><![CDATA[
    static  ProdRouteJob findJobId(ProdJobId     prodJobId,
                                   boolean       _forUpdate = false
                                  )
    {
        ProdRouteJob prodRouteJob;
        prodRouteJob.selectForUpdate(_forUpdate);

        if (prodJobId)
            select firstonly prodRouteJob
                index hint JobIdIdx
                where prodRouteJob.JobId == prodJobId;

        return prodRouteJob;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findJobOpr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves production jobs filtered by production order, operation number and operation priority.
    /// </summary>
    /// <param name="_prodId">
    /// The production order ID used for filtering.
    /// </param>
    /// <param name="_oprNum">
    /// The operation number used for filtering.
    /// </param>
    /// <param name="_oprPriority">
    /// The operation priority used for filtering.
    /// </param>
    /// <returns>
    /// A <c>ProdRouteJob</c> table buffer that can be used to iterate through the jobs.
    /// </returns>
    static ProdRouteJob findJobOpr(
        ProdId              _prodId,
        OprNum              _oprNum,
        RouteOprPriority    _oprPriority
    )
    {
        ProdRouteJob prodRouteJob;

        if (_prodId && _oprNum)
        {
            select prodRouteJob
                where prodRouteJob.ProdId       == _prodId       &&
                      prodRouteJob.OprNum       == _oprNum       &&
                      prodRouteJob.OprPriority  == _oprPriority;
        }

        return prodRouteJob;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findJobType</Name>
				<Source><![CDATA[
    static  ProdRouteJob findJobType( ProdId    prodId,
                        OprNum              oprNum,
                        RouteOprPriority    oprPriority,
                        RouteJobType        routeJobType,
                        boolean             _forUpdate = false
                        )
    {
        ProdRouteJob prodRouteJob;
        prodRouteJob.selectForUpdate(_forUpdate);

        if (prodId && oprNum)
            select firstonly prodRouteJob
                index hint JobIdIdx
                where prodRouteJob.ProdId       == prodId       &&
                      prodRouteJob.OprNum       == oprNum       &&
                      prodRouteJob.OprPriority  == oprPriority  &&
                      prodRouteJob.JobType      == routeJobType;

        return prodRouteJob;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLast</Name>
				<Source><![CDATA[
    static ProdRouteJob findLast(ProdId     _prodId,
                                 OprNum     _oprNum,
                                 boolean    _forUpdate = false)
    {
        return ProdRouteJob::findLastWithPriority(_prodId, _oprNum, RouteOprPriority::Primary);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLastWithPriority</Name>
				<Source><![CDATA[
    public static ProdRouteJob findLastWithPriority(ProdId              _prodId,
                                                    OprNum              _oprNum,
                                                    RouteOprPriority    _oprPriority,
                                                    boolean             _forUpdate = false)
    {
        ProdRouteJob prodRouteJob;
        prodRouteJob.selectForUpdate(_forUpdate);

        if (_prodId && _oprNum)
        {
            select firstonly prodRouteJob
                index hint ProdOprIdx
                order by NumType desc, NumPrimary desc
                where   prodRouteJob.ProdId         == _prodId      &&
                        prodRouteJob.OprNum         == _oprNum      &&
                        prodRouteJob.OprPriority    == _oprPriority;
        }

        return prodRouteJob;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findProdId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find the jobs of a production order by the production order ID.
    /// </summary>
    /// <param name="_prodId">
    /// The production order ID used to search the jobs.
    /// </param>
    /// <returns>
    /// A <c>ProdRouteJob</c> table buffer that can be used to iterate through the production jobs.
    /// </returns>
    public static ProdRouteJob findProdId(ProdId _prodId)
    {
        ProdRouteJob prodRouteJob;

        if (_prodId)
        {
            select prodRouteJob
                where prodRouteJob.ProdId       == _prodId;
        }

        return prodRouteJob;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    static ProdRouteJob findRecId(recId       recId,
                                  boolean     _forUpdate = false)
    {
        ProdRouteJob prodRouteJob;
        prodRouteJob.selectForUpdate(_forUpdate);

        select prodRouteJob
            index hint recid
            where prodRouteJob.RecId == recId;

        return prodRouteJob;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupJobId</Name>
				<Source><![CDATA[
    static void lookupJobId(FormStringControl   _ctrl,
                                   ProdId              _prodId,
                                   NoYes               _onlyActive = NoYes::No
                                  )
    {
        Args      args;
        FormRun   formRun;
        args = new Args();
        args.name(formstr(ProdRouteJobLookUp));
        args.parm(_prodId);
        args.parmEnum(_onlyActive);
        args.caller(_ctrl);
        formRun = classfactory.formRunClass(args);
        formRun.init();
        _ctrl.performFormLookup(formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportJobAsFinished</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reports production jobs as finished.
    /// </summary>
    /// <param name="_prodId">
    /// The production order ID of the jobs.
    /// </param>
    /// <param name="_oprNum">
    /// The operation number of the jobs to report as finished; optional.
    /// </param>
    public static void reportJobAsFinished(ProdId    _prodId,
                                                  OprNum    _oprNum = 0)
    {
        ProdRouteJob    prodRouteJob;

        ttsbegin;

        // do not call skipDataMethods, since update() needs to be called

        update_recordset prodRouteJob
            setting JobStatus = ProdJobStatus::Completed
            where prodRouteJob.ProdId       == _prodId                                      &&
                 ((prodRouteJob.OprNum      == _oprNum)                     || !_oprNum)    &&
                  prodRouteJob.JobStatus    != ProdJobStatus::Completed;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startUpJob</Name>
				<Source><![CDATA[
/// <summary>
    /// Begins specific production jobs.
    /// </summary>
    /// <param name="_prodId">
    /// The production order ID of the jobs.
    /// </param>
    /// <param name="_fromOprNum">
    /// The operation number from which to start the jobs.
    /// </param>
    /// <param name="_toOprNum">
    /// The operation number to which to start operations.
    /// </param>
    /// <param name="_reverse">
    /// A Boolean value that specifies whether to revert the job status to the previous status; optional.
    /// </param>
    public static void startUpJob(ProdId     _prodId,
                                         OprNum     _fromOprNum,
                                         OprNum     _toOprNum,
                                         boolean    _reverse    = false)
    {
        ProdRouteJob    prodRouteJob;
        ProdRoute       prodRoute;
        boolean         preJobStarted = true;

        boolean isProdRouteJobStatusInitFlightEnabled = ProdRouteJobStatusInitFlight::instance().isEnabled();

        if (!isProdRouteJobStatusInitFlightEnabled || (_fromOprNum != 0 || _toOprNum != 0))
        {
            while select JobStatus from prodRouteJob
                join ProdId, OprNum, OprNumNext from prodRoute
                    where  prodRouteJob.ProdId  == _prodId
                        && prodRoute.ProdId     == _prodId
                        && prodRoute.OprNumNext == _fromOprNum
                        && prodRoute.OprNum     == prodRouteJob.OprNum
                {
                    if (prodRouteJob.JobStatus != ProdJobStatus::Started)
                    {
                        preJobStarted = false;
                    }
                }
        }

        ttsbegin;

        prodRouteJob.skipDataMethods(true);

        update_recordset prodRouteJob
            setting JobStatus = _reverse ? ProdJobStatus::Coming :
                                           (preJobStarted ? ProdJobStatus::Started : ProdJobStatus::Waiting)
            where prodRouteJob.ProdId       ==  _prodId                                 &&
                  prodRouteJob.OprNum       >=  _fromOprNum                             &&
                 (prodRouteJob.OprNum       <=  _toOprNum               ||  !_toOprNum) &&
                 (((prodRouteJob.JobStatus  <   ProdJobStatus::Waiting) &&  !_reverse)  ||
                  ((prodRouteJob.JobStatus  >   ProdJobStatus::Coming)  &&   _reverse));

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayFromDateTimeWithUserTimeZone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns from date and time of the production route job with applied user's timezone offset as string
    /// </summary>
    /// <param name = "_job">The production route job for which information is required</param>
    /// <returns>From date and time of the production route job with applied user's timezone offset</returns>
    [SysClientCacheDataMethod(true), Hookable(false)]
    internal display str displayFromDateTimeWithUserTimeZone(ProdRouteJob _job)
    {
        return ProdTimeZoneHelper::composeDateTimeWithUserTimeZone(_job.FromDate, _job.FromTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayToDateTimeWithUserTimeZone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns to date and time of the production route job with applied user's timezone offset as string
    /// </summary>
    /// <param name = "_job">The production route job for which information is required</param>
    /// <returns>To date and time of the production route job with applied user's timezone offset</returns>
    [SysClientCacheDataMethod(true), Hookable(false)]
    internal display str displayToDateTimeWithUserTimeZone(ProdRouteJob _job)
    {
        return ProdTimeZoneHelper::composeDateTimeWithUserTimeZone(_job.ToDate, _job.ToTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayFromTimeWithUserTimeZone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns from time of the production route job with applied user's timezone offset as string
    /// </summary>
    /// <param name = "_job">The production route job for which information is required</param>
    /// <returns>From time of the production route job with applied user's timezone offset</returns>
    [SysClientCacheDataMethod(true), Hookable(false)]
    internal display str displayFromTimeWithUserTimeZone(ProdRouteJob _job)
    {
        return ProdTimeZoneHelper::composeTimeWithUserTimeZone(_job.FromTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayToTimeWithUserTimeZone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns to time of the production route job with applied user's timezone offset
    /// </summary>
    /// <param name = "_job">The production route job for which information is required</param>
    /// <returns>String conversion of to time of the production route job with applied user's timezone offset</returns>
    [SysClientCacheDataMethod(true), Hookable(false)]
    internal display str displayToTimeWithUserTimeZone(ProdRouteJob _job)
    {
        return ProdTimeZoneHelper::composeTimeWithUserTimeZone(_job.ToTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayRealizedFromDateTimeWithUserTimeZone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns realized from date and time of the production route job with applied user's timezone offset
    /// </summary>
    /// <param name = "_job">The production route job for which information is required</param>
    /// <returns>String conversion of realized from date and time of the production route job with applied user's timezone offset</returns>
    [SysClientCacheDataMethod(true), Hookable(false)]
    internal display str displayRealizedFromDateTimeWithUserTimeZone(ProdRouteJob _job)
    {
        return ProdTimeZoneHelper::composeDateTimeWithUserTimeZone(_job.RealizedStartDate, _job.RealizedStartTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayRealizedToDateTimeWithUserTimeZone</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns realized to date and time of the production route job with applied user's timezone offset
    /// </summary>
    /// <param name = "_job">The production route job for which information is required</param>
    /// <returns>String conversion of  realized to date and time of the production route job with applied user's timezone offset</returns>
    [SysClientCacheDataMethod(true), Hookable(false)]
    internal display str displayRealizedToDateTimeWithUserTimeZone(ProdRouteJob _job)
    {
        return ProdTimeZoneHelper::composeDateTimeWithUserTimeZone(_job.RealizedEndDate, _job.RealizedEndTime);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProdRouting</ConfigurationKey>
	<DeveloperDocumentation>@SYS124176</DeveloperDocumentation>
	<Label>@SYS10162</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>ProdId</TitleField1>
	<TitleField2>JobId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>JobIdIdx</ClusteredIndex>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>JobIdIdx</PrimaryIndex>
	<ReplacementKey>JobIdIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProdId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OprNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WrkCtrId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalcTimeHours</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchedTimeHours</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExecutedPct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JobId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Deleted</Name>
			<Label>@SYS4197</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Feedback</Name>
			<Label>@SYS22522</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ExecutedPct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProdId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OprNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OprPriority</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumPrimary</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NumSecondary</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Job</Name>
			<Label>@SYS1066</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JobType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Link</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinkType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>JobManagement</Name>
			<Label>@SYS2704</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JobControl</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobStatus</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ListPageOverview</Name>
			<Label>@SYS117973</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JobId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProdId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OprNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WrkCtrId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayFromDateTimeWithUserTimeZone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayToDateTimeWithUserTimeZone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JobStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExecutedPct</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Piecework</Name>
			<Label>@sys711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JobPayType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RealizedStartEnd</Name>
			<Label>@SYS22521</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RealizedStartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RealizedEndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RealizedStartTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RealizedEndTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ScheduledStartEnd</Name>
			<Label>@SYS22520</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Scheduling</Name>
			<Label>@SYS21838</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SchedCancelled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalcTimeHours</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SchedTimeHours</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WorkCenter</Name>
			<Label>@SYS10597</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WrkCtrId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PropertyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ScheduledStartEndTimezone</Name>
			<Label>@SYS22520</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>displayFromDateTimeWithUserTimeZone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayToDateTimeWithUserTimeZone</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RealizedStartEndTimezone</Name>
			<Label>@SYS22521</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>displayRealizedFromDateTimeWithUserTimeZone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayRealizedToDateTimeWithUserTimeZone</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CalcTimeHours</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RouteJobCalcTimeHours</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ExecutedPct</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdExecutedPct</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SchedFromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>FromTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SchedFromTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JobControl</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdJobControl</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JobFinished</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS12257</Label>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JobId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdJobId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JobPayType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgJobPayType</ExtendedDataType>
			<EnumType>JmgJobPayTypeEnum</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JobStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>ProdJobStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JobType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS9942</Label>
			<EnumType>RouteJobType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Link</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>SchedJobLink</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LinkType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>SchedJobLinkType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumPrimary</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RouteJobNumPrimary</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumSecondary</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RouteJobNumSecondary</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>NumType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RouteJobNumType</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>OprNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>OprNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>OprPriority</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RouteOprPriority</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProdId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PropertyId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PropertyId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>RealizedEndDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SchedToDate</ExtendedDataType>
			<Label>@SYS22885</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>RealizedEndTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SchedToTime</ExtendedDataType>
			<Label>@SYS22886</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>RealizedStartDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SchedFromDate</ExtendedDataType>
			<Label>@SYS22883</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>RealizedStartTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SchedFromTime</ExtendedDataType>
			<Label>@SYS22884</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SchedCancelled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Cancelled</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>SchedTimeHours</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RouteJobSchedTimeHours</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SchedToDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldTime">
			<Name>ToTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SchedToTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WrkCtrId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>WrkCtrId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProdOprIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>ProdId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OprNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>NumType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>NumPrimary</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OprPriority</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>NumSecondary</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>JobIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>JobId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>StatusWrkCtrIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>JobStatus</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WrkCtrId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FromTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WrkCtrIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WrkCtrId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>JobFinished</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>JobType</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProdId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OprNum</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>OprPriority</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>JobType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>RouteJobMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>RefId</MapField>
					<MapFieldTo>ProdId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JobType</MapField>
					<MapFieldTo>JobType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OprNum</MapField>
					<MapFieldTo>OprNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumType</MapField>
					<MapFieldTo>NumType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Link</MapField>
					<MapFieldTo>Link</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SchedTimeHours</MapField>
					<MapFieldTo>SchedTimeHours</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OprPriority</MapField>
					<MapFieldTo>OprPriority</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ToDate</MapField>
					<MapFieldTo>ToDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ToTime</MapField>
					<MapFieldTo>ToTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FromDate</MapField>
					<MapFieldTo>FromDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FromTime</MapField>
					<MapFieldTo>FromTime</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JobId</MapField>
					<MapFieldTo>JobId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CalcTimeHours</MapField>
					<MapFieldTo>CalcTimeHours</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumPrimary</MapField>
					<MapFieldTo>NumPrimary</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>NumSecondary</MapField>
					<MapFieldTo>NumSecondary</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>WrkCtrId</MapField>
					<MapFieldTo>WrkCtrId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LineNum</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SchedCancelled</MapField>
					<MapFieldTo>SchedCancelled</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PropertyId</MapField>
					<MapFieldTo>PropertyId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LinkType</MapField>
					<MapFieldTo>LinkType</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>ProdRoute</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124177</EntityRelationshipRole>
			<RelatedTable>ProdRoute</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ProductionRoute</RelatedTableRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ProductionRout</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OprPriority</Name>
					<Field>OprPriority</Field>
					<RelatedField>OprPriority</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OprNum</Name>
					<Field>OprNum</Field>
					<RelatedField>OprNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProdId</Name>
					<Field>ProdId</Field>
					<RelatedField>ProdId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProdTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProdTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProdId</Name>
					<Field>ProdId</Field>
					<RelatedField>ProdId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ReqTrans</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS124174</EntityRelationshipRole>
			<RelatedTable>ReqTrans</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>NetRequirement</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RouteJob</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>RefType_Extern</Name>
					<RelatedField>RefType</RelatedField>
					<ValueStr>ReqRefType::Production</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProdId</Name>
					<Field>ProdId</Field>
					<RelatedField>RefId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ResourceWrkCtrTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WrkCtrTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>ResourceWrkCtrTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProdRouteJob</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WrkCtrId</Name>
					<Field>WrkCtrId</Field>
					<RelatedField>WrkCtrId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintRelatedFixed">
					<Name>IsIndividualResource_Extern</Name>
					<RelatedField>IsIndividualResource</RelatedField>
					<Value>1</Value>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>WrkCtrIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WrkCtrProperty</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WrkCtrProperty</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PropertyId</Name>
					<Field>PropertyId</Field>
					<RelatedField>PropertyId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PropertyIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>