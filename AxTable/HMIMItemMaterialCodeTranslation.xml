<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMIMItemMaterialCodeTranslation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMIMItemMaterialCodeTranslation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByMaterialRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>HMIMItemMaterialCodeTranslation</c> record with given parameters.
    /// </summary>
    /// <param name="_recId">
    /// Material recid.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static HMIMItemMaterialCodeTranslation findByMaterialRecId(RecId   _recId, boolean _forupdate = false)
    {
        HMIMItemMaterialCodeTranslation materialCodeTranslation;

        if (_recId)
        {
            materialCodeTranslation.selectForUpdate(_forupdate);
            select firstonly materialCodeTranslation
                where materialCodeTranslation.Material == _recId;
        }

        return materialCodeTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdateTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates a <c>HMIMItemMaterialCodeTranslation</c> record.
    /// </summary>
    /// <param name = "_material">Material RecId</param>
    /// <param name = "_materialsDescription">Materials description</param>
    /// <param name = "_languageId">Language id</param>
    public static void createOrUpdateTranslation(
        RecId          _material,
        Description255 _materialsDescription, 
        LanguageId     _languageId = SystemParameters::getSystemLanguageId())
    {
        if (!_materialsDescription)
        {
            throw error("@SCM:ProperShippingNameErrorMessage");
        }

        ttsbegin;
        HMIMItemMaterialCodeTranslation materialCodeTranslation = HMIMItemMaterialCodeTranslation::findByLanguage(_material, _languageId, true);
        if (materialCodeTranslation.RecId)
        {
            materialCodeTranslation.MaterialDescription = _materialsDescription;
            materialCodeTranslation.update();
        }
        else
        {
            materialCodeTranslation.Material                =   _material;
            materialCodeTranslation.MaterialDescription     =   _materialsDescription;
            materialCodeTranslation.LanguageId              =   _languageId;
            materialCodeTranslation.insert();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find <c>HMIMItemMaterialCodeTranslation</c> record by <c>LanguageId</c>.
    /// </summary>
    /// <param name = "_material">Material recid</param>
    /// <param name = "_languageId">Language id</param>
    /// <param name = "_forUpdate">Determines whether the record is selected for update.</param>
    /// <returns>The record that is searched for.</returns>
    public static HMIMItemMaterialCodeTranslation findByLanguage(
        RefRecId    _material,
        LanguageId  _languageId,
        boolean     _forUpdate = false)
    {
        HMIMItemMaterialCodeTranslation materialCodeTranslation;

        materialCodeTranslation.selectForUpdate(_forUpdate);
        select firstonly materialCodeTranslation
            where materialCodeTranslation.Material   == _material
               && materialCodeTranslation.LanguageId == _languageId;

        return materialCodeTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes this <c>HMIMItemMaterialCodeTranslation</c> record with default <c>LanguageId</c> value.
    /// </summary>
    public void initValue()
    {
        super();
        this.setDefaultLanguage();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets a default <c>LanguageId</c> value.
    /// </summary>
    public void setDefaultLanguage()
    {
        this.LanguageId = SystemParameters::getSystemLanguageId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCompanyLanguageId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the default company language id.
    /// </summary>
    /// <returns>The default company language id</returns>
    protected static LanguageId defaultCompanyLanguageId()
    {
        return CompanyInfo::languageId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNameOrDefaultName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the name of a product.
    /// </summary>
    /// <param name="_material">
    ///    The ID of a product for which a name is retrieved.
    /// </param>
    /// <param name="_languageId">
    ///    The ID of a language in which a name is retrieved.
    /// </param>
    /// <returns>
    ///    A name of a product.
    /// </returns>
    /// <remarks>
    ///    If a name in the language specified by the <c>_languageId</c> parameter is not found then a name in
    ///    the system language is returned.
    /// </remarks>
    public static Description255 getNameOrDefaultName(
        RecId               _material,
        LanguageId          _languageId)
    {
        HMIMItemMaterialCodeTranslation materialCodeTranslation = HMIMItemMaterialCodeTranslation::findByProductOrSystemLanguage(_material, _languageId, fieldNum(HMIMItemMaterialCodeTranslation, MaterialDescription));
        return materialCodeTranslation.MaterialDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProductOrSystemLanguage</Name>
				<Source><![CDATA[
    private static HMIMItemMaterialCodeTranslation findByProductOrSystemLanguage(
        RecId               _material,
        LanguageId          _languageId,
        FieldId             _translationFieldId)
    {
        HMIMItemMaterialCodeTranslation materialCodeTranslation = HMIMItemMaterialCodeTranslation::findByLanguage(_material, _languageId);

        //no translation record or no value provided - fallback to system language
        if (!materialCodeTranslation.RecId || !materialCodeTranslation.(_translationFieldId))
        {
            LanguageId systemLanguageId = SystemParameters::getSystemLanguageId();
            if (systemLanguageId != _languageId)
            {
                materialCodeTranslation = HMIMItemMaterialCodeTranslation::findByLanguage(_material, systemLanguageId);
            }
        }

        return materialCodeTranslation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddCompanyLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds the company language ID filter for specified query.
    /// </summary>
    /// <param name="_query">
    ///    The query that is extended with the company language ID filter.
    /// </param>
    /// <param name="_name">
    ///    The name of specified <c>DGMaterialTransations</c> record.
    /// </param>
    static void queryAddCompanyLanguage(Query _query, str _name = '')
    {
        QueryBuildDataSource qbdsMaterialTranslation;

        if (_name)
        {
            qbdsMaterialTranslation = _query.dataSourceName(_name);
        }
        else
        {
            qbdsMaterialTranslation = _query.dataSourceTable(tableNum(HMIMItemMaterialCodeTranslation));
        }
        if (!qbdsMaterialTranslation)
        {
            throw error(Error::wrongUseOfFunction(tableStaticMethodStr(HMIMItemMaterialCodeTranslation, queryAddDefaultLanguage)));
        }
        qbdsMaterialTranslation.addRange(fieldNum(HMIMItemMaterialCodeTranslation, LanguageId)).value(queryValue(HMIMItemMaterialCodeTranslation::defaultCompanyLanguageId()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddDefaultLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds a default language ID filter for the specified query.
    /// </summary>
    /// <param name="_query">
    ///    The query that is extended with the default language ID filter.
    /// </param>
    /// <param name="_name">
    ///    The name of specified <c>DGMaterialsTranslation</c> record.
    /// </param>
    static void queryAddDefaultLanguage(Query _query, str _name = '')
    {
        QueryBuildDataSource    qbdsMaterialTranslation;

        if (_name)
        {
            qbdsMaterialTranslation = _query.dataSourceName(_name);
        }
        else
        {
            qbdsMaterialTranslation = _query.dataSourceTable(tableNum(HMIMItemMaterialCodeTranslation));
        }
        if (!qbdsMaterialTranslation)
        {
            throw error(Error::wrongUseOfFunction(tableStaticMethodStr(HMIMItemMaterialCodeTranslation, queryAddDefaultLanguage)));
        }
        qbdsMaterialTranslation.addRange(fieldNum(HMIMItemMaterialCodeTranslation, LanguageId))
            .value(queryValue(SystemParameters::getSystemLanguageId()));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>HMIMManagement</ConfigurationKey>
	<DeveloperDocumentation>@SCM:MaterialTranslationsDevDoc</DeveloperDocumentation>
	<Label>@SCM:MaterialTranslation</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>Material</TitleField1>
	<TitleField2>MaterialDescription</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryIndex>MaterialLanguageIdx</PrimaryIndex>
	<ReplacementKey>MaterialLanguageIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Material</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaterialDescription</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Material</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MaterialDescription</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Description255</ExtendedDataType>
			<Label>@SCM:MaterialDescription</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Material</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>HMIMLanguageId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>MaterialLanguageIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Material</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LanguageId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>HMIMMaterial</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>HMIMMaterial</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Material</Name>
					<Field>Material</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LanguageId</Name>
					<Field>LanguageId</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>