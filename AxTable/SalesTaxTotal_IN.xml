<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesTaxTotal_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesTaxTotal_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getBaseCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the accounting currency.
    /// </summary>
    /// <returns>
    /// Returns the accounting currency.
    /// </returns>
    display CurrencyCode getBaseCurrency()
    {
        return  Ledger::accountingCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSecondaryCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the reporting currency.
    /// </summary>
    /// <returns>
    /// Returns the reporting currency.
    /// </returns>
    display CurrencyCode getSecondaryCurrency()
    {
        return  Ledger::reportingCurrency();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertIntoSalesTaxTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initalizes values for this instance of <c>SalesTaxTotal_IN</c> table.
    /// </summary>
    /// <param name="_selectQuery">
    /// The select query.
    /// </param>
    /// <param name="_fieldName">
    /// The field name.
    /// </param>
    void insertIntoSalesTaxTotal(SelectQuery_IN      _selectQuery,
                                 FieldLabel           _fieldName)
    {
        this.FieldName      = _fieldName;
        this.SelectQuery    = _selectQuery;
        this.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteSalesTaxTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes records in <c>SalesTaxTotal_IN</c> table for given parameter.
    /// </summary>
    /// <param name="_selectQry">
    /// The select query.
    /// </param>
    static void deleteSalesTaxTotal(SelectQuery_IN  _selectQry)
    {
        SalesTaxTotal_IN   salesTaxTotal;

        ttsbegin;
        delete_from salesTaxTotal
           where salesTaxTotal.SelectQuery == _selectQry;
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertSalesTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert tax data into <c>SalesTaxTotal_IN</c> table.
    /// </summary>
    /// <param name="_callerTmpTable">
    /// A <c>TmpSalesTaxInquiryTable_IN</c> buffer.
    /// </param>
    /// <param name="_selectQry">
    /// The query value.
    /// </param>
    /// <param name="_fieldNames">
    /// A container of the fields to query for.
    /// </param>
    /// <param name="_salesTaxInquiry">
    /// A <c>SalesTaxInquiryTrans_IN</c> object.
    /// </param>
    /// <param name="_setAmountsToZero">
    /// A boolean value whether set initial amount to zero.
    /// </param>
    static void insertSalesTax(
        TmpSalesTaxInquiryTable_IN   _callerTmpTable,
        SelectQuery_IN               _selectQry,
        container                    _fieldNames,
        SalesTaxInquiryTrans_IN      _salesTaxInquiry,
        boolean                      _setAmountsToZero = false)
    {
        SalesTaxTotal_IN        salesTaxTotal;
        int                     position;
        fieldId                 fieldId;
        CurrencyExchangeHelper  currencyHelper = CurrencyExchangeHelper::newExchangeDate(Ledger::primaryLedger(CompanyInfo::findDataArea(curext()).RecId),
                                                                                         _callerTmpTable.TransDate);
        while select forupdate salesTaxTotal
            where salesTaxTotal.SelectQuery == _selectQry
        {
            if (_setAmountsToZero)
            {
                ttsbegin;
                salesTaxTotal.AmountMST                  = 0;
                salesTaxTotal.AccumulatedAmountMST       = 0;
                salesTaxTotal.AmountSecondary            = 0;
                salesTaxTotal.AccumulatedAmountSecondary = 0;
                salesTaxTotal.update();
                ttscommit;
            }
            else
            {
                fieldId = 0;
                if (confind(_fieldNames, salesTaxTotal.FieldName))
                {
                    position = confind(_fieldNames, salesTaxTotal.FieldName);
                    if (position)
                    {
                        fieldId  = TmpSalesTaxInquiryTable_IN::getFieldIdFromPosition(position);
                    }
                }
                ttsbegin;
                if (fieldId)
                {
                    salesTaxTotal.AmountMST                  = CurrencyExchangeHelper::amount(str2num_RU(_callerTmpTable.(fieldId)), _callerTmpTable.SourceCurrencyCode);

                    salesTaxTotal.AmountSecondary            = currencyHelper.calculateAccountingToTransaction(Ledger::reportingCurrency(),
                                                                                                str2num_RU(_callerTmpTable.(fieldId)),
                                                                                                true);

                    salesTaxTotal.AccumulatedAmountMST       = TmpSalesTaxInquiryTable_IN::getTotalAccumulatedAmount(_salesTaxInquiry.tmpSalesTaxInquiryTable(),
                                                                                                                     fieldId,
                                                                                                                     salesTaxTotal.FieldName);
                    salesTaxTotal.AccumulatedAmountSecondary = currencyHelper.calculateAccountingToTransaction(
                                                                                            Ledger::reportingCurrency(),
                                                                                            salesTaxTotal.AccumulatedAmountMST,
                                                                                            true);

                    salesTaxTotal.TaxComponentTable = _callerTmpTable.TaxComponentTable;
                    salesTaxTotal.TransDate         = _callerTmpTable.TransDate;
                    salesTaxTotal.TaxAmount         = _callerTmpTable.TaxAmount;
                    salesTaxTotal.update();
                }
                ttscommit;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return super() || SalesEnforceConcurrentDeletesFlight::instance().isEnabled();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS64203</DeveloperDocumentation>
	<Label>@SYS58659</Label>
	<TitleField1>FieldName</TitleField1>
	<TitleField2>SelectQuery</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>NameTypeIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxComponentTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SelectQuery</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Misc</Name>
			<Label>@SYS80069</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxComponentTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountSecondary</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccumulatedAmountSecondary</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SelectQuery</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccumulatedAmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountMST</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AccumulatedAmountMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS25443</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AccumulatedAmountSecondary</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@GLS6075</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountMST</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountSecondary</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<Label>@SYS83899</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FieldLabel</ExtendedDataType>
			<Label>@SYS16033</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SelectQuery</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>SelectQuery_IN</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TaxAmount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxComponentTable</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>NameTypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>FieldName</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SelectQuery</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TaxComponentTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxComponentTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SelectQueryIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SelectQuery</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxComponentTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxComponentTable_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxComponentTable_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxComponentTable_IN_SalesTaxTotal_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxComponentTable</Name>
					<Field>TaxComponentTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>