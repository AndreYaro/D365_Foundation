<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSKanbanWaveLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSKanbanWaveLine extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromWHSKanbanJobPickingListPool</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the current record from a kanban job picking list pool.
    /// </summary>
    /// <param name="_kanbanJobPickingListPool">
    ///    The <c>WHSKanbanJobPickingListPool</c> record to initialize from.
    /// </param>
    public void initFromWHSKanbanJobPickingListPool(WHSKanbanJobPickingListPool _kanbanJobPickingListPool)
    {
        this.InventTransId = _kanbanJobPickingListPool.InventTransId;
        this.ItemId        = _kanbanJobPickingListPool.ItemId;
        this.Kanban        = _kanbanJobPickingListPool.Kanban;
        this.KanbanId      = _kanbanJobPickingListPool.KanbanId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean result = super();

        if (WHSWaveTable::find(this.WaveId).inBatch())
        {
            result = checkFailed("@WAX3219");
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromWaveIdAndPool</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates wave lines for a given wave and pool.
    /// </summary>
    /// <param name="_waveId">
    ///    The wave ID.
    /// </param>
    /// <param name="_kanbanJobPickingListPool">
    ///    The pool.
    /// </param>
    /// <param name="_showError">
    ///    A Boolean value that defines whether to show errors.
    /// </param>
    public static void createFromWaveIdAndPool(
        WHSWaveId                   _waveId,
        WHSKanbanJobPickingListPool _kanbanJobPickingListPool,
        boolean                     _showError = false)
    {
        WHSKanbanWaveLine   kanbanWaveLine;
        WHSWaveTable        waveTable;
        InventDim           inventDim;

        select firstonly kanbanWaveLine
            where kanbanWaveLine.InventTransId == _kanbanJobPickingListPool.InventTransId
            exists join waveTable
                where waveTable.WaveId      == kanbanWaveLine.WaveId
                   && (waveTable.WaveId     == _waveId
                   ||  waveTable.WaveStatus <  WHSWaveStatus::Held);

        if (!kanbanWaveLine.RecId)
        {
            if (WHSWaveTemplateTable::validateWaveTemplate(WHSWaveTemplateType::Kanban,WHSWaveTable::find(_waveId),_kanbanJobPickingListPool.InventTransId,_showError))
            {
                ttsbegin;

                inventDim = InventDim::find(_kanbanJobPickingListPool.InventDimId);

                kanbanWaveLine.WaveId = _waveId;
                kanbanWaveLine.initFromWHSKanbanJobPickingListPool(_kanbanJobPickingListPool);
                kanbanWaveLine.insert();

                waveTable = WHSWaveTable::find(_waveId,true);
                if (waveTable.RecId)
                {
                    waveTable.InventSiteId     = inventDim.InventSiteId;
                    waveTable.InventLocationId = inventDim.InventLocationId;
                    waveTable.update();
                }

                ttscommit;
            }
        }
        else
        {
            if (_showError)
            {
                warning(strFmt("@WAX4766", _kanbanJobPickingListPool.InventTransId));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the specified record in the <c>WHSKanbanWaveLine</c> table exists.
    /// </summary>
    /// <param name="_waveId">
    ///    The wave ID of the wave line record.
    /// </param>
    /// <param name="_inventTransId">
    ///    The inventory transaction ID of the wave line record.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(
        WHSWaveId     _waveId,
        InventTransId _inventTransId)
    {
        return    _waveId
               && _inventTransId
               && (select firstonly RecId from whsKanbanWaveLine
                        where whsKanbanWaveLine.WaveId        == _waveId
                           && whsKanbanWaveLine.InventTransId == _inventTransId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsForInventTransIdNotPicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that a record exists for a specified inventory transaction number on an non-picked wave.
    /// </summary>
    /// <param name="_inventTransId">
    /// The inventory transaction to validate for.
    /// </param>
    /// <returns>
    /// true if the record exists; otherwise false.
    /// </returns>
    public static boolean existsForInventTransIdNotPicked(InventTransId _inventTransId)
    {
        if (_inventTransId && isConfigurationkeyEnabled(configurationKeyNum(WHSandTMS)))
        {
            WHSWaveTable whsWaveTable;
            WHSKanbanWaveLine whsKanbanWaveLine;

            select firstonly RecId from whsKanbanWaveLine
                where whsKanbanWaveLine.InventTransId == _inventTransId
                exists join whsWaveTable
                    where whsWaveTable.WaveId == whsKanbanWaveLine.WaveId
                       && whsWaveTable.WaveStatus < WHSWaveStatus::Released;

            if (whsKanbanWaveLine.RecId)
            {
                return true;
            }

            WHSWorkTable    workTable;

            // Waves with WaveStatus = Released can be fully picked.
            select firstonly RecId from whsKanbanWaveLine
                where whsKanbanWaveLine.InventTransId == _inventTransId
                exists join workTable
                    where workTable.WaveId       == whsKanbanWaveLine.WaveId &&
                          workTable.WorkStatus   < WHSWorkStatus::Closed;

            if (whsKanbanWaveLine.RecId)
            {
                return true;
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>WHSKanbanWaveLine</c> table.
    /// </summary>
    /// <param name="_waveId">
    ///    The wave ID of the wave line record.
    /// </param>
    /// <param name="_inventTransId">
    ///    The inventory transaction ID of the wave line record.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>WHSKanbanWaveLine</c> table; otherwise, an empty record.
    /// </returns>
    public static WHSKanbanWaveLine find(
        WHSWaveId     _waveId,
        InventTransId _inventTransId,
        boolean       _forupdate = false)
    {
        WHSKanbanWaveLine   kanbanWaveLine;

        if (   _waveId
            && _inventTransId)
        {
            kanbanWaveLine.selectForUpdate(_forupdate);

            select firstonly kanbanWaveLine
                where kanbanWaveLine.WaveId        == _waveId
                   && kanbanWaveLine.InventTransId == _inventTransId;
        }

        return kanbanWaveLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4754</DeveloperDocumentation>
	<Label>@WAX4753</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>WaveId</TitleField1>
	<TitleField2>ItemId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>WaveIdIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>WaveIdInventTransIdIdx</PrimaryIndex>
	<ReplacementKey>WaveIdInventTransIdIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Kanban</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Kanban</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>KanbanId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>OII</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Kanban</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>KanbanId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>KanbanId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaveId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WaveIdInventTransIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WaveId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WaveIdIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WaveId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Kanban</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Kanban</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Kanban</Name>
					<SourceEDT>KanbanRefRecId</SourceEDT>
					<Field>Kanban</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSKanbanJobPickingListPool</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSKanbanJobPickingListPool</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSWaveTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSWaveTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WaveId</Name>
					<SourceEDT>WHSWaveId</SourceEDT>
					<Field>WaveId</Field>
					<RelatedField>WaveId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>KanbanJobPickingListAll</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>KanbanJobPickingListAll</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<SourceEDT>InventTransId</SourceEDT>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DataAreaId</Name>
					<SourceEDT>DataAreaId</SourceEDT>
					<Field>DataAreaId</Field>
					<RelatedField>InventTransDataAreaId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>