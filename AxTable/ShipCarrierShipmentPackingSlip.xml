<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ShipCarrierShipmentPackingSlip</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ShipCarrierShipmentPackingSlip extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>ShipCarrierShipmentPackingSlip</c> table; if not, an error message is displayed.
    /// </summary>
    /// <param name="_wmsShipmentId">
    /// The shipment ID of the <c>ShipCarrierShipmentPackingSlip</c> table record.
    /// </param>
    /// <param name="_salesPackingSlipId">
    /// The packing slip ID of the <c>ShipCarrierShipmentPackingSlip</c> table record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean checkExist(
        WMSShipmentId   _wmsShipmentId,
        PackingSlipId   _salesPackingSlipId)
    {
        boolean ret = true;

        if (!ShipCarrierShipmentPackingSlip::exist(_wmsShipmentId,_salesPackingSlipId))
        {
            ret = checkFailed(strFmt(ShipCarrierShipmentPackingSlip::txtNotExist(), _wmsShipmentId,_salesPackingSlipId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>ShipCarrierShipmentPackingSlip</c> table exists.
    /// </summary>
    /// <param name="_wmsShipmentId">
    /// The shipment ID of the <c>ShipCarrierShipmentPackingSlip</c> table record.
    /// </param>
    /// <param name="_salesPackingSlipId">
    /// The packing slip ID of the <c>ShipCarrierShipmentPackingSlip</c> table record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(
        WMSShipmentId   _wmsShipmentId,
        PackingSlipId   _salesPackingSlipId)
    {
        boolean found;

        found = (select firstonly RecId from shipCarrierShipmentPackingSlip
                    where   shipCarrierShipmentPackingSlip.wmsShipmentId        == _wmsShipmentId
                         && shipCarrierShipmentPackingSlip.SalesPackingSlipId   == _salesPackingSlipId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>ShipCarrierShipmentPackingSlip</c> table.
    /// </summary>
    /// <param name="_wmsShipmentId">
    /// The shipment ID of the <c>ShipCarrierShipmentPackingSlip</c> table record to find.
    /// </param>
    /// <param name="_salesPackingSlipId">
    /// The packing slip ID of the <c>ShipCarrierShipmentPackingSlip</c> table record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>ShipCarrierShipmentPackingSlip</c>; otherwise, an empty record.
    /// </returns>
    public static ShipCarrierShipmentPackingSlip find(
        WMSShipmentId       _wmsShipmentId,
        PackingSlipId       _salesPackingSlipId,
        boolean             _forUpdate          = false,
        ConcurrencyModel    _concurrencyModel   = ConcurrencyModel::Auto)
    {
        ShipCarrierShipmentPackingSlip      shipCarrierShipmentPackingSlip;

        shipCarrierShipmentPackingSlip.selectForUpdate(_forUpdate);
        if (_forUpdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            shipCarrierShipmentPackingSlip.concurrencyModel(_concurrencyModel);
        }

        if (_wmsShipmentId && _salesPackingSlipId)
        {
            shipCarrierShipmentPackingSlip.selectForUpdate (_forUpdate);
            shipCarrierShipmentPackingSlip.selectLocked    (_forUpdate);

            select firstonly shipCarrierShipmentPackingSlip
                where shipCarrierShipmentPackingSlip.wmsShipmentId      == _wmsShipmentId
                   && shipCarrierShipmentPackingSlip.SalesPackingSlipId == _salesPackingSlipId;
        }

        return shipCarrierShipmentPackingSlip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasBeenDirectlyPackingSlipUpdated</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the shipment has been pack slipped directly from the shipment form.
    /// </summary>
    /// <param name="_shipmentId">
    ///    The shipment ID that corresponds to the <c>WMSShipment</c> table record.
    /// </param>
    /// <returns>
    ///    true if the shipment has been pack slipped; otherwise, false.
    /// </returns>
    public static boolean hasBeenDirectlyPackingSlipUpdated(WMSShipmentId _shipmentId)
    {
        ShipCarrierShipmentPackingSlip  shipCarrierShipmentPackingSlip;

        select firstonly RecId from shipCarrierShipmentPackingSlip
            where   shipCarrierShipmentPackingSlip.wmsShipmentId == _shipmentId;

        return (shipCarrierShipmentPackingSlip.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the message to use when a specific record in the <c>ShipCarrierShipmentPackingSlip</c> table does not exist.
    /// </summary>
    /// <returns>
    /// The message that indicates a record does not exist.
    /// </returns>
    public static TxtNotExist txtNotExist()
    {
        //Record with WMSShipmentId %1 and PackingSlipId %2 does not exist
        return "@SYS123077";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ShipCarrier</ConfigurationKey>
	<DeveloperDocumentation>@SYS126970</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS123073</Label>
	<TableGroup>Worksheet</TableGroup>
	<TitleField1>WMSShipmentId</TitleField1>
	<TitleField2>SalesPackingSlipId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ShipmentPackingSlipIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<Modules>Obsolete</Modules>
	<PrimaryIndex>ShipmentPackingSlipIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WMSShipmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPackingSlipId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WMSShipmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPackingSlipId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WMSShipmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPackingSlipId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SalesPackingSlipId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PackingSlipId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WMSShipmentId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSShipmentId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ShipmentPackingSlipIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>WMSShipmentId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SalesPackingSlipId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WMSShipment</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WMSShipment</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WMSShipmentId</Name>
					<Field>WMSShipmentId</Field>
					<RelatedField>shipmentId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ShipmentIdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>