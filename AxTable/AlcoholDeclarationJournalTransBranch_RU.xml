<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AlcoholDeclarationJournalTransBranch_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AlcoholDeclarationJournalTransBranch_RU extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>correctedFiscalYear</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Shows the corrected fiscal year from the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </summary>
    /// <returns>
    ///    The corrected fiscal year from the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </returns>
    display AlcoholDeclarationFiscalYear_RU correctedFiscalYear()
    {
        return this.journalTable().CorrectedFiscalYear;
    }

]]></Source>
			</Method>
			<Method>
				<Name>correctedPeriodNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Shows the corrected period number from the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </summary>
    /// <returns>
    ///    The corrected period number from the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </returns>
    display AlcoholDeclarationPeriodNum_RU correctedPeriodNum()
    {
        return this.journalTable().CorrectedPeriodNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the table by filling some field from the related <c>AlcoholDeclarationJournalTrans_RU</c> record.
    /// </summary>
    /// <param name="_journalTrans">
    ///    A table buffer instance relating to the <c>AlcoholDeclarationJournalTrans_RU</c> table.
    /// </param>
    public void initFromJournalTrans(AlcoholDeclarationJournalTrans_RU _journalTrans)
    {
        this.JournalId              = _journalTrans.JournalId;
        this.AlcoholDeclarationType = _journalTrans.AlcoholDeclarationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromJournalTransBranch</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the table by filling some field from the related <c>AlcoholDeclarationJournalTransBranch_RU</c> record.
    /// </summary>
    /// <param name="_journalTransBranch">
    ///    A table buffer instance relating to the <c>AlcoholDeclarationJournalTransBranch_RU</c> table.
    /// </param>
    public void initFromJournalTransBranch(AlcoholDeclarationJournalTransBranch_RU _journalTransBranch)
    {
        this.JournalId              = _journalTransBranch.JournalId;
        this.AlcoholDeclarationType = _journalTransBranch.AlcoholDeclarationType;
        this.BranchId               = _journalTransBranch.BranchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the corresponding record in the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </summary>
    /// <param name="_forUpdate">
    ///    Indicates whether to select the record for update or not.
    /// </param>
    /// <returns>
    ///    The corresponding record in the <c>AlcoholDeclarationJournalTable_RU</c> table.
    /// </returns>
    public AlcoholDeclarationJournalTable_RU journalTable(boolean   _forUpdate = false)
    {
        return AlcoholDeclarationJournalTable_RU::find(this.JournalId, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the corresponding record in the <c>AlcoholDeclarationJournalTrans_RU</c> table.
    /// </summary>
    /// <param name="_forUpdate">
    ///    Indicates whether to select the record for update or not.
    /// </param>
    /// <returns>
    ///    The corresponding record in the <c>AlcoholDeclarationJournalTrans_RU</c> table.
    /// </returns>
    public AlcoholDeclarationJournalTrans_RU journalTrans(boolean   _forUpdate = false)
    {
        return AlcoholDeclarationJournalTrans_RU::find(this.JournalId, this.AlcoholDeclarationType, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies field of the journal lines.
    /// </summary>
    /// <param name="_fieldId">
    /// The field id.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(AlcoholDeclarationJournalTransBranch_RU, Approved) :
                if (this.Approved)
                {
                    this.Approver = HcmWorker::userId2Worker(curUserId());
                }
                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if the field modification was performed correctly.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    ///    The ID of the field to check.
    /// </param>
    /// <returns>
    ///    true if the field was modified correctly; false otherwise.
    /// </returns>
    public boolean validateField(fieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(AlcoholDeclarationJournalTransBranch_RU, Approved):
                if (this.Approved == NoYes::Yes && this.orig().Approved == NoYes::No)
                {
                    if (this.Status != AlcoholDeclarationStatus_RU::Calculated)
                        ret = checkFailed(strfmt("@SYS4002794", AlcoholDeclarationStatus_RU::Calculated));
                }
                break;

            case fieldNum(AlcoholDeclarationJournalTransBranch_RU, Status):
                if (this.Approved == NoYes::Yes)
                {
                    ret = checkFailed(strfmt("@SYS4002799", AlcoholDeclarationStatus_RU::Calculated));
                }
                break;

                default:
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (this.Approved && ! this.Approver)
            {
                ret = checkFailed("@SYS67768");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record in the <c>AlcoholDeclarationJournalTransBranch_RU</c> table.
    /// </summary>
    /// <param name="_journalId">
    ///    The ID of the alcohol journal table.
    /// </param>
    /// <param name="_alcoholDeclarationType">
    ///    The type of the alcohol declaration.
    /// </param>
    /// <param name="_branchId">
    ///    The ID of the separate subdivision.
    /// </param>
    /// <param name="_forUpdate">
    ///    Indicates whether to select the record for update or not.
    /// </param>
    /// <returns>
    ///    The record found in the <c>AlcoholDeclarationJournalTransBranch_RU</c> table.
    /// </returns>
    public static AlcoholDeclarationJournalTransBranch_RU find(AlcoholDeclarationJournalId_RU   _journalId,
                                                               AlcoholDeclarationType_RU        _alcoholDeclarationType,
                                                               BranchId_RU                      _branchId,
                                                               boolean                          _forUpdate = false)
    {
        AlcoholDeclarationJournalTransBranch_RU alcoholDeclarationJournalTransBranch;

        if (_forUpdate)
            alcoholDeclarationJournalTransBranch.selectForUpdate(_forUpdate);

        if (_journalId && _alcoholDeclarationType && _branchId)
        {
            select firstonly alcoholDeclarationJournalTransBranch
                index hint JournalTypeBranchIdx
                where alcoholDeclarationJournalTransBranch.JournalId              == _journalId
                   && alcoholDeclarationJournalTransBranch.AlcoholDeclarationType == _alcoholDeclarationType
                   && alcoholDeclarationJournalTransBranch.BranchId               == _branchId;
        }

        return alcoholDeclarationJournalTransBranch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateJournalTransBranchCorr</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds or creates the record in the <c>AlcoholDeclarationJournalTransBranch_RU</c> table based on the parameters passed.
    /// </summary>
    /// <param name="_journalId">
    ///    The ID of the alcohol journal table.
    /// </param>
    /// <param name="_alcoholDeclarationType">
    ///    The type of the alcohol declaration.
    /// </param>
    /// <param name="_branchId">
    ///    The ID of the separate subdivision.
    /// </param>
    /// <param name="_correctedPeriodNum">
    ///    Corrected period number.
    /// </param>
    /// <param name="_correctedFiscalYear">
    ///    Corrected fiscal year.
    /// </param>
    /// <returns>
    ///    The record found or created in the <c>AlcoholDeclarationJournalTransBranch_RU</c> table.
    /// </returns>
    public static AlcoholDeclarationJournalTransBranch_RU findOrCreateJournalTransBranchCorr(AlcoholDeclarationJournalId_RU            _journalId,
                                                                                             AlcoholDeclarationType_RU                 _alcoholDeclarationType,
                                                                                             BranchId_RU                               _branchId,
                                                                                             AlcoholDeclarationPeriodNum_RU            _correctedPeriodNum,
                                                                                             Yr                                        _correctedFiscalYear)
    {
        AlcoholDeclarationJournalTable_RU           journalTableCorr,       journalTableCorrPrev, journalTable;
        AlcoholDeclarationJournalTrans_RU           journalTransCorr,       journalTransCorrPrev;
        AlcoholDeclarationJournalTransBranch_RU     journalTransBranchCorr, journalTransBranchCorrPrev;
        NumberSeq                                   sequence;

        journalTable = AlcoholDeclarationJournalTable_RU::find(_journalId);

        select firstonly journalTableCorr
            where journalTableCorr.PeriodType           == journalTable.PeriodType
               && journalTableCorr.PeriodNum            == journalTable.PeriodNum
               && journalTableCorr.FiscalYear           == journalTable.FiscalYear
               && journalTableCorr.CorrectedPeriodNum   == _correctedPeriodNum
               && journalTableCorr.CorrectedFiscalYear  == _correctedFiscalYear;

        if (! journalTableCorr)
        {
            sequence = NumberSeq::newGetNum(InventParameters::numRefAlcoholDeclarationJournalId_RU());

            select maxof(CorrectionNum) from journalTableCorrPrev
                where journalTableCorrPrev.CorrectedPeriodNum   == _correctedPeriodNum
                   && journalTableCorrPrev.CorrectedFiscalYear  == _correctedFiscalYear;

            journalTableCorr.clear();
            journalTableCorr.initValue(false);
            journalTableCorr.JournalId              = sequence.num();
            journalTableCorr.Name                   = journalTable.Name;
            journalTableCorr.PeriodType             = journalTable.PeriodType;
            journalTableCorr.PeriodNum              = journalTable.PeriodNum;
            journalTableCorr.FiscalYear             = journalTable.FiscalYear;
            journalTableCorr.CorrectedPeriodNum     = _correctedPeriodNum;
            journalTableCorr.CorrectedFiscalYear    = _correctedFiscalYear;
            journalTableCorr.CorrectionNum          = journalTableCorrPrev.CorrectionNum + 1;
            journalTableCorr.FromDate               = journalTableCorr.fromDate();
            journalTableCorr.ToDate                 = journalTableCorr.toDate();

            journalTableCorr.insert();

            info(strfmt("@SYS4002800", journalTableCorr.JournalId));
        }

        journalTransCorr = AlcoholDeclarationJournalTrans_RU::find(journalTableCorr.JournalId, _alcoholDeclarationType);

        if (! journalTransCorr)
        {
            select maxof(CorrectionNum) from journalTransCorrPrev
                where journalTransCorrPrev.AlcoholDeclarationType == _alcoholDeclarationType
            exists join journalTableCorrPrev
                where journalTableCorrPrev.JournalId            == journalTransCorrPrev.JournalId
                   && journalTableCorrPrev.CorrectedPeriodNum   == _correctedPeriodNum
                   && journalTableCorrPrev.CorrectedFiscalYear  == _correctedFiscalYear
                   && journalTableCorrPrev.PeriodType           == journalTable.PeriodType;

            journalTransCorr.clear();
            journalTransCorr.initValue();
            journalTransCorr.initFromJournalTable(journalTableCorr);
            journalTransCorr.AlcoholDeclarationType = _AlcoholDeclarationType;
            journalTransCorr.CorrectionNum          = journalTransCorrPrev.CorrectionNum + 1;
            journalTransCorr.insert();
        }

        journalTransBranchCorr = AlcoholDeclarationJournalTransBranch_RU::find(journalTransCorr.JournalId,
                                                                               journalTransCorr.AlcoholDeclarationType,
                                                                               _branchId);
        if (!journalTransBranchCorr)
        {
            select maxof(CorrectionNum) from journalTransBranchCorrPrev
                where journalTransBranchCorrPrev.BranchId == _branchId
            exists join journalTransCorrPrev
                where journalTransCorrPrev.AlcoholDeclarationType == _alcoholDeclarationType
                   && journalTransCorrPrev.JournalId              == journalTransBranchCorrPrev.JournalId
            exists join journalTableCorrPrev
                where journalTableCorrPrev.JournalId            == journalTransBranchCorrPrev.JournalId
                   && journalTableCorrPrev.CorrectedPeriodNum   == _correctedPeriodNum
                   && journalTableCorrPrev.CorrectedFiscalYear  == _correctedFiscalYear
                   && journalTableCorrPrev.PeriodType           == journalTable.PeriodType;

            journalTransBranchCorr.clear();
            journalTransBranchCorr.initValue();
            journalTransBranchCorr.initFromJournalTrans(journalTransCorr);
            journalTransBranchCorr.BranchId         = _branchId;
            journalTransBranchCorr.Status           = AlcoholDeclarationStatus_RU::Calculated;
            journalTransBranchCorr.CorrectionNum    = journalTransBranchCorrPrev.CorrectionNum + 1;
            journalTransBranchCorr.insert();
        }

        return journalTransBranchCorr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record in the <c>AlcoholDeclarationJournalTransBranch_RU</c> table by its record ID.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID.
    /// </param>
    /// <param name="_forUpdate">
    ///    Indicates whether to select the record for update or not.
    /// </param>
    /// <returns>
    ///    The record found in the <c>AlcoholDeclarationJournalTransBranch_RU</c> table.
    /// </returns>
    public static AlcoholDeclarationJournalTransBranch_RU findRecId(RecId _recId, boolean _forUpdate = false)
    {
        AlcoholDeclarationJournalTransBranch_RU journalTransBranch;

        journalTransBranch.selectForUpdate(_forupdate);

        if (_recId)
        {
            select firstonly journalTransBranch
                where journalTransBranch.RecId == _recId;
        }
        return journalTransBranch;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4002784</DeveloperDocumentation>
	<FormRef>AlcoholDeclarationJournalTransBranch_RU</FormRef>
	<Label>@SYS4002783</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>BranchId</TitleField1>
	<TitleField2>Status</TitleField2>
	<ClusteredIndex>JournalTypeBranchIdx</ClusteredIndex>
	<Modules>EGAIS</Modules>
	<PrimaryIndex>JournalTypeBranchIdx</PrimaryIndex>
	<ReplacementKey>JournalTypeBranchIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AlcoholDeclarationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Approved</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectionNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AlcoholDeclarationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AlcoholDeclarationType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS34991</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BranchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Approved</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Approver</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>correctedFiscalYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>correctedPeriodNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CorrectionNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AlcoholDeclarationType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>AlcoholDeclarationType_RU</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Approved</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Approved</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Approver</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BranchId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>BranchId_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CorrectionNum</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AlcoholDeclarationCorrectionNum_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>JournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AlcoholDeclarationJournalId_RU</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>AlcoholDeclarationStatus_RU</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>JournalTypeBranchIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>JournalId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AlcoholDeclarationType</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>BranchId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AlcoholDeclarationJournalTable_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>AlcoholDeclarationJournalTable_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalId</Name>
					<SourceEDT>AlcoholDeclarationJournalId_RU</SourceEDT>
					<Field>JournalId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>JournalIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>AlcoholDeclarationJournalTrans_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>AlcoholDeclarationJournalTrans_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>JournalId</Name>
					<Field>JournalId</Field>
					<RelatedField>JournalId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AlcoholDeclarationType</Name>
					<Field>AlcoholDeclarationType</Field>
					<RelatedField>AlcoholDeclarationType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Branches_RU</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>Branches_RU</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BranchId</Name>
					<SourceEDT>BranchId_RU</SourceEDT>
					<Field>BranchId</Field>
					<RelatedField>BranchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>BranchIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AlcoholDeclarationJournalTransBranch_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Approver</Name>
					<Field>Approver</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>