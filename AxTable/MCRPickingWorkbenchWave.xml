<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRPickingWorkbenchWave</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRPickingWorkbenchWave extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayNumItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns number of items for the selected wave.  If called without
    /// selecting a wave, returns zero.
    /// </summary>
    /// <returns>
    /// Number of items in wave.
    /// </returns>
    public display Integer displayNumItems()
    {
        WMSPickingRoute wmsPickingRoute;
        WMSOrderTrans   wmsOrderTrans;
        int             counter = 0;
        if (this.WaveReferenceId != "")
        {
            // Count the number of lines.
            select count(RecId) from wmsOrderTrans
                join RecId from wmsPickingRoute
                    where   wmsPickingRoute.PickingRouteID == wmsOrderTrans.RouteId
                        &&  wmsPickingRoute.mcrPickingWaveRef == this.WaveReferenceId;

            counter = int642int(wmsOrderTrans.RecId);
        }

        return counter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayNumOrders</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns number of sales orders for selected wave.
    /// </summary>
    /// <returns>
    /// The number of sales orders for selected wave.
    /// If called without selecting a wave, returns zero.
    /// </returns>
    public display Integer displayNumOrders()
    {
        WMSPickingRoute wmsPickingRoute;
        int counter = 0;

        if (this.WaveReferenceId != "")
        {
            // Count the orders in the wave.
            while select TransRefId from wmsPickingRoute
                group by TransRefId
                where wmsPickingRoute.mcrPickingWaveRef == this.WaveReferenceId
            {
                counter ++  ;
            }
        }

        return counter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayRFWorkerName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the name of the related worker.
    /// </summary>
    /// <returns>
    /// The name of the related worked.
    /// </returns>
    public display NameAlias displayRFWorkerName()
    {
        NameAlias        personName;

        personName = HcmWorker::find(this.AssigneeWorker).name();

        return personName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the corresponding method in the <c>InventStorageDimMap</c> map when
    /// site or warehouse is modified.
    /// </summary>
    /// <param name="_fieldId">
    /// The ID of the field which was modified.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);
        if (FormDataUtil::isFormDataSource(this))
        {
            switch (_fieldId)
            {
                case fieldNum(MCRPickingWorkbenchWave, InventSiteId):
                    this.InventStorageDimMap::modifiedField(fieldNum(InventStorageDimMap, InventSiteId));
                    break;
                case fieldNum(MCRPickingWorkbenchWave, Warehouse):
                    this.InventStorageDimMap::modifiedField(fieldNum(InventStorageDimMap, InventLocationId));
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        #VendFaults
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(MCRPickingWorkbenchWave, InventSiteId):
                if (this.InventSiteId
                && !InventSite::find(this.InventSiteId))
                {
                    ret =  AifFault::checkFailedLogFault(strFmt("@SYS120870", fieldId2name(tableNum(MCRPickingWorkbenchWave), _fieldIdToCheck), this.InventSiteId), #InvalidInventSiteId);
                }
                break;
            case fieldNum(MCRPickingWorkbenchWave, Warehouse):
                if (this.Warehouse
                && !InventLocation::find(this.Warehouse))
                {
                    ret =  AifFault::checkFailedLogFault(strFmt("@SYS120870", fieldId2name(tableNum(MCRPickingWorkbenchWave), _fieldIdToCheck), this.Warehouse), #InvalidInventLocation);
                }
                break;
            case fieldNum(MCRPickingWorkbenchWave, Warehouse):
                ret = this.InventStorageDimMap::validateField(fieldNum(InventStorageDimMap, InventLocationId));
                break;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>completeWave</Name>
				<Source><![CDATA[
    /// <summary>
    /// Completes waves and clears bins and carts.
    /// </summary>
    /// <param name="_mcrPickingWorkbenchWave">
    /// The wave to be completed.
    /// </param>
    public static void completeWave(MCRPickingWorkbenchWave    _mcrPickingWorkbenchWave)
    {
        MCRPickingWorkbenchSession  pwbSessions;
        MCRPickingWorkbenchWave     pwbWaves;
        MCRPickingWorkbenchWave     pwbWavesFirstWave;

        // Find the record and select for update
        select forupdate pwbWaves where
            pwbWaves.RecId == _mcrPickingWorkbenchWave.RecId;
        if (pwbWaves)
        {
            ttsbegin;
            pwbWaves.WaveStatus = MCRPickingWaveStatus::Completed;
            if (pwbWaves.validateWrite())
            {
                pwbWaves.update();
            }
            else
            {
                throw error("@SYS104318");
            }
            ttscommit;
        }
        else
        {
            // should never get here - just a safety precaution
            throw error(strFmt("@MCR31226", _mcrPickingWorkbenchWave.WaveReferenceId));
        }
        // find first wave that is not completed
        select firstonly RecId from pwbWavesFirstWave where
               pwbWavesFirstWave.SessionId == pwbWaves.SessionId
            && pwbWavesFirstWave.WaveStatus != MCRPickingWaveStatus::Completed;

        // If no waves found that were not completed, then session is complete
        // The wave may not have a session id if created by batch picking
        if (!pwbWavesFirstWave && pwbWaves.SessionId)
        {
            ttsbegin;
            select forupdate firstonly pwbSessions where
                pwbSessions.SessionId == pwbWaves.SessionId;
            pwbSessions.SessionStatus = MCRPickingSessionStatus::Completed;
            if (pwbSessions.validateWrite())
            {
                pwbSessions.update();
            }
            else
            {
                throw error("@SYS104318");
            }

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find <c>PickingWorkbenchWaves</c> record based on wave reference ID.
    /// </summary>
    /// <param name="_waveReferenceId">
    /// The value used to find the record.
    /// </param>
    /// <param name="update">
    /// A <c>Boolean</c> value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// <c>PickingWorkbenchWaves</c> record based on wave reference ID.
    /// </returns>
    public static MCRPickingWorkbenchWave find(MCRPickingWave _waveReferenceId, boolean update = false)
    {
        MCRPickingWorkbenchWave pickingWorkbenchWaves;

        pickingWorkbenchWaves.selectForUpdate(update);
        select firstonly pickingWorkbenchWaves
            where pickingWorkbenchWaves.WaveReferenceId == _waveReferenceId;

        return pickingWorkbenchWaves;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupPrintedWaves</Name>
				<Source><![CDATA[
    /// <summary>
    /// Lookup method to only return waves that are of status 'printed'.
    /// </summary>
    /// <param name="ctrl">
    /// The form control to apply the lookup to.
    /// </param>
    public static void lookupPrintedWaves(FormStringControl ctrl)
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(MCRPickingWorkbenchWave), ctrl);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange;

        sysTableLookup.addLookupfield(fieldNum(MCRPickingWorkbenchWave, WaveReferenceId));

        queryBuildDataSource = query.addDataSource(tableNum(MCRPickingWorkbenchWave));
        queryBuildRange = queryBuildDataSource.addRange(fieldNum(MCRPickingWorkbenchWave, WaveStatus));
        queryBuildRange.value(enum2Value(MCRPickingWaveStatus::Printed));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@MCR24216</DeveloperDocumentation>
	<Label>@MCR24216</Label>
	<TableGroup>TransactionHeader</TableGroup>
	<TitleField1>SessionId</TitleField1>
	<TitleField2>WaveReferenceId</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>WaveIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>WaveIdx</PrimaryIndex>
	<ReplacementKey>WaveIdx</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SessionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveReferenceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Warehouse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRShipAlone</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveReferenceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SessionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveReferenceId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SessionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveReferenceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Warehouse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRShipAlone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DlvMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssigneeWorker</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RecapInfo</Name>
			<Label>@MCR24217</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WaveReferenceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SessionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Warehouse</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRShipAlone</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssigneeWorker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>HcmWorkerRecId</ExtendedDataType>
			<Label>@MCR11314</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DlvMode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustDlvModeId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MCRShipAlone</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRShipAlone</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SessionId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRPickingSession</ExtendedDataType>
			<Label>@MCR11312</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Warehouse</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaveReferenceId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRPickingWave</ExtendedDataType>
			<Label>@MCR28392</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>WaveStatus</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>MCRPickingWaveStatus</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WaveIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>WaveReferenceId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PickSessionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SessionId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WaveReferenceId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventStorageDimMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>InventSiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>Warehouse</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation>
			<Name>AssigneWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>AssigneWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HCMWorker</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssigneeWorker</Name>
					<Field>AssigneeWorker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DlvMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>DlvMode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DlvMode</Name>
					<SourceEDT>CustDlvModeId</SourceEDT>
					<Field>DlvMode</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Warehouse</Name>
					<SourceEDT>InventLocationId</SourceEDT>
					<Field>Warehouse</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventSiteId</Name>
					<SourceEDT>InventSiteId</SourceEDT>
					<Field>InventSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SiteIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRPickingWorkbenchSession</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MCRPickingWorkbenchSession</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SessionId</Name>
					<SourceEDT>MCRPickingSession</SourceEDT>
					<Field>SessionId</Field>
					<RelatedField>SessionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>