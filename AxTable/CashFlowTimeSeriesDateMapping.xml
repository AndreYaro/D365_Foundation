<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashFlowTimeSeriesDateMapping</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CashFlowTimeSeriesDateMapping extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>rePopulateTableForDateRange</Name>
				<Source><![CDATA[
    internal static void rePopulateTableForDateRange(date _startDate, date _endDate, WeekDays _startOfWeek, int _bufferDays = 365)
    {
        date startDateWithBufferDays = _startDate - _bufferDays;
        date endDateWithBufferDays = _endDate + _bufferDays;

        CashFlowTimeSeriesDateMapping::clearTable();

        CashFlowTimeSeriesDateMapping::populateTable(startDateWithBufferDays, endDateWithBufferDays, _startOfWeek);
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateTable</Name>
				<Source><![CDATA[
    private static void populateTable(date _startDate, date _endDate, WeekDays _startOfWeek)
    {
        ttsbegin;

        RecordInsertList insertList = new RecordInsertList(tableNum(CashFlowTimeSeriesDateMapping));

        for (date currentDate = _startDate; currentDate <= _endDate; currentDate++)
        {
            CashFlowTimeSeriesDateMapping dateMapping;
            dateMapping.TransactionDate = currentDate;
            dateMapping.StartOfWeekDate = CashFlowForecastDateTimeUtil::getStartOfWeek(currentDate, _startOfWeek);
            insertList.add(dateMapping);
        }

        insertList.insertDatabase();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearTable</Name>
				<Source><![CDATA[
    internal static void clearTable()
    {
        ttsbegin;

        CashFlowTimeSeriesDateMapping table;
        delete_from table;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>areAnyDatesOutsideOfRange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether any dates are outside the range of the table.
    /// </summary>
    /// <param name = "dates">A <c>List</c> of dates.</param>
    /// <returns><c>boolean</c> indicating whether any dates are outside of the range.</returns>
    internal static boolean areAnyDatesOutsideOfRange(List dates)
    {
        if (dates == null)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        boolean anyDatesOutsideOfRange = false;

        CashFlowTimeSeriesDateMapping dateMapping;

        select minof(TransactionDate) from dateMapping;
        date minTransDate = dateMapping.TransactionDate;

        select maxof(TransactionDate) from dateMapping;
        date maxTransDate = dateMapping.TransactionDate;

        ListEnumerator enumerator = dates.getEnumerator();

        while (enumerator.moveNext())
        {
            date dateToValidate = enumerator.current();

            if (dateToValidate < minTransDate || maxTransDate < dateToValidate)
            {
                anyDatesOutsideOfRange = true;
                break;
            }
        }

        return anyDatesOutsideOfRange;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CashFlowForecasting</ConfigurationKey>
	<DeveloperDocumentation>@CashManagement:CashFlowTimeSeriesDateMappingDevDoc</DeveloperDocumentation>
	<Label>@CashManagement:CashFlowTimeSeriesDateMapping</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Visible>No</Visible>
	<PrimaryIndex>TransDateIndex</PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransactionDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>StartOfWeekDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TransDateIndex</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TransactionDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>