<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRRoyaltyItemCode</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRRoyaltyItemCode extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayItemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the item name.
    /// </summary>
    /// <returns>
    /// Item name for a given item Id.
    /// </returns>
    display ItemName displayItemName()
    {
        return InventTable::find(this.ItemID).itemName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertFromMCRRoyaltyItemTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>MCRRoyaltyItemTable</c> table buffer based on the associated <c>MCRRoyaltyTable</c> passed parameter.
    /// </summary>
    /// <param name="_mcrRoyaltyTable">
    /// The associated <c>MCRRoyaltyTable</c> record for the royalty definition.
    /// </param>
    /// <remarks>
    /// Initialize the <c>MCRRoyaltyItemTable</c> table buffer based on the associated <c>MCRRoyaltyContract</c> record that is passed in as a parameter.
    /// </remarks>
    public void insertFromMCRRoyaltyItemTable(MCRRoyaltyTable    _mcrRoyaltyTable)
    {
        MCRRoyaltyItemTable mcrRoyaltyItemTable;
        MCRRoyaltyItemCode  mcrRoyaltyItemCode;
        MCRRoyaltyTable     mcrRoyaltyTable;

        //Find royalty items at code level (line level) based on royalty table's royalty code.
        if (_mcrRoyaltyTable)
        {
            select firstonly RecId from mcrRoyaltyItemCode
                where mcrRoyaltyItemCode.RoyaltyCode == _mcrRoyaltyTable.RoyaltyCode;
        }

        //Insert to item code table only if there are none.
        if (!mcrRoyaltyItemCode)
        {
            ttsbegin;
            //For each item on the royalty item table (header level) copy it to the item code table (line level).
            insert_recordset this (RoyaltyContract, RoyaltyCode, ItemId, InventDimId, UnitID)
                select RoyaltyContract, RoyaltyCode
                from mcrRoyaltyTable
                where mcrRoyaltyTable.RoyaltyCode == _mcrRoyaltyTable.RoyaltyCode
                join ItemID, InventDimID, UnitID
                from mcrRoyaltyItemTable
                    where mcrRoyaltyItemTable.RoyaltyContract == _mcrRoyaltyTable.RoyaltyContract;
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>royaltyTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the associated <c>MCRRoyaltyTable</c> buffer.
    /// </summary>
    /// <param name="_forUpdate">
    /// A <c>Boolean</c> value that specifies whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The <c>MCRRoyaltyTable</c> table record.
    /// </returns>
    /// <remarks>
    /// Finds the associated <c>MCRRoyaltyTable</c> buffer based on the current royalty code.
    /// </remarks>
    public MCRRoyaltyTable  royaltyTable(boolean _forUpdate = false)
    {
        return MCRRoyaltyTable::find(this.RoyaltyCode, _forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if an <c>MCRRoyaltyItemCode</c> record exists.
    /// </summary>
    /// <param name="_itemId">
    ///     The item used to find the applicable <c>MCRRoyaltyItemCode</c> record.
    /// </param>
    /// <param name="_code">
    ///     The royalty code used to find the applicable <c>MCRRoyaltyItemCode</c> record.
    /// </param>
    /// <param name="_inventDimId">
    ///     The inventory dimension used to find the applicable <c>MCRRoyaltyItemCode</c> record.
    /// </param>
    /// <returns>
    ///     true if an <c>MCRRoyaltyItemCode</c> record exists; otherwise, false.
    /// </returns>
    public static boolean exist(
        ItemId          _itemId,
        MCRRoyaltyCode  _code,
        InventDimId     _inventDimId)
    {
        MCRRoyaltyItemCode mcrRoyaltyItemCode;

        if (_itemId && _code && _inventDimId)
        {
            select firstonly RecId from mcrRoyaltyItemCode
                where mcrRoyaltyItemCode.ItemID         == _itemId
                   && mcrRoyaltyItemCode.InventDimID    == _inventDimId
                   && mcrRoyaltyItemCode.RoyaltyCode    == _code;
        }
       
        return mcrRoyaltyItemCode.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a royalty item code record.
    /// </summary>
    /// <param name="_itemId">
    /// The item ID for finding the royalty item code record.
    /// </param>
    /// <param name="_code">
    /// The royalty code.
    /// </param>
    /// <param name="_inventDimId">
    /// The dimension combination of the item.
    /// </param>
    /// <param name="_forUpdate">
    /// A <c>Boolean</c> value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The <c>MCRRoyaltyItemCode</c> record.
    /// </returns>
    public static MCRRoyaltyItemCode find(ItemId          _itemId,
                                          MCRRoyaltyCode  _code,
                                          InventDimId     _inventDimId = InventDim::findOrCreateBlank().InventDimId,
                                          boolean         _forUpdate = false)
    {
        MCRRoyaltyItemCode mcrRoyaltyItemCode;

        if (_itemId && _code && _inventDimId)
        {
            mcrRoyaltyItemCode.selectForUpdate(_forUpdate);

            select firstonly mcrRoyaltyItemCode
                where mcrRoyaltyItemCode.ItemID         == _itemId
                   && mcrRoyaltyItemCode.InventDimID    == _inventDimId
                   && mcrRoyaltyItemCode.RoyaltyCode    == _code;
        }
        return mcrRoyaltyItemCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertMCRRoyaltyItemCodeFromProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a royalty item record from the product provided.
    /// </summary>
    /// <param name="_productContainer">
    /// A container of the products to be inserted into the <c>MCRRoyaltyItemCode</c> table.
    /// </param>
    /// <param name="_mcrRoyaltyTableContainer">
    /// A container of the royalty agreement record used to create <c>MCRRoyaltyItemCode</c>.
    /// </param>
    /// <returns>
    /// true if no errors occurred; otherwise, false.
    /// </returns>
    public static boolean insertMCRRoyaltyItemCodeFromProduct(
        Container           _productContainer,
        Container           _mcrRoyaltyTableContainer)
    {
        MCRRoyaltyItemCode      mcrRoyaltyItemCode;
        TmpRetailProductsToAdd  tmpProductTable;
        List                    listProducts;
        ListEnumerator          listEnumerator;
        MCRRoyaltyTable         mcrRoyaltyTable;
        boolean                 ret = true;

        if (_productContainer)
        {
            listProducts    = List::create(_productContainer);
            listEnumerator  = listProducts.getEnumerator();
            mcrRoyaltyTable = con2Buf(_mcrRoyaltyTableContainer);

            while (listEnumerator.moveNext())
            {
                tmpProductTable             = listEnumerator.current();
                mcrRoyaltyItemCode.ItemID   = tmpProductTable.ItemId;

                // Check for ItemId before processing.
                if (mcrRoyaltyItemCode.ItemID)
                {
                    mcrRoyaltyItemCode.RoyaltyCode  = mcrRoyaltyTable.RoyaltyCode;
                    mcrRoyaltyItemCode.InventDimID  = tmpProductTable.InventDim;
                    mcrRoyaltyItemCode.UnitID       = InventTableModule::find(mcrRoyaltyItemCode.ItemID,
                                                        ModuleInventPurchSales::Sales).UnitId;
                    mcrRoyaltyItemCode.RoyaltyContract  = mcrRoyaltyTable.RoyaltyContract;

                    if (!mcrRoyaltyItemCode::exist(
                        mcrRoyaltyItemCode.ItemID,
                        mcrRoyaltyItemCode.RoyaltyCode,
                        mcrRoyaltyItemCode.InventDimID)
                        || !McrRoyaltyItemCode::existRoyaltyContract(
                        mcrRoyaltyItemCode.ItemID,
                        mcrRoyaltyItemCode.RoyaltyCode,
                        mcrRoyaltyItemCode.InventDimID,
                        mcrRoyaltyItemCode.RoyaltyContract,
                        mcrRoyaltyItemCode.UnitID))
                    {
                        if (mcrRoyaltyItemCode.validateWrite())
                        {
                            mcrRoyaltyItemCode.insert();
                        }
                        else
                        {
                            throw error("@SYS104318");
                        }
                    }
                }
                else
                {
                    error(strFmt("@MCR38748", tmpProductTable.EcoResProductName));
                    ret = false;
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existRoyaltyContract</Name>
				<Source><![CDATA[
    private static boolean existRoyaltyContract(
        ItemId                _itemId,
        MCRRoyaltyCode         _code,
        InventDimId            _inventDimId,
        MCRRoyaltyContractCode _royaltyContract,
        UnitOfMeasureSymbol    _unitId)
    {
        MCRRoyaltyItemCode mcrRoyaltyItemCode;

        if (_itemId && _code && _inventDimId && _royaltyContract && _unitId)
        {
            select firstonly RecId from mcrRoyaltyItemCode
                where mcrRoyaltyItemCode.ItemID          == _itemId
                   && mcrRoyaltyItemCode.InventDimID     == _inventDimId
                   && mcrRoyaltyItemCode.RoyaltyCode     == _code
                   && mcrRoyaltyItemCode.RoyaltyContract == _royaltyContract
                   && mcrRoyaltyItemCode.UnitID          == _unitId;
        }
       
        return mcrRoyaltyItemCode.RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MCRRoyalty</ConfigurationKey>
	<DeveloperDocumentation>@MCR36062</DeveloperDocumentation>
	<FormRef>MCRRoyaltyTable</FormRef>
	<Label>@MCR34851</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>RoyaltyContract</TitleField1>
	<TitleField2>ItemID</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RoyaltyCode</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ModifiedTransactionId>Yes</ModifiedTransactionId>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>RoyaltyCode</PrimaryIndex>
	<ReplacementKey>RoyaltyCode</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RoyaltyContract</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoyaltyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RoyaltyContract</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoyaltyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RoyaltyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoyaltyContract</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@SYS80094</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RoyaltyContract</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoyaltyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS53631</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>displayItemName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimID</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RoyaltyCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRRoyaltyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RoyaltyContract</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRRoyaltyContractCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UnitID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RoyaltyCode</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RoyaltyCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RoyaltyContract</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>UnitID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ItemId</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimID</Name>
					<SourceEDT>InventDimId</SourceEDT>
					<Field>InventDimID</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>OneMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemID</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemID</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRRoyaltyCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>MCRRoyaltyTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RoyaltyCode</Name>
					<SourceEDT>MCRRoyaltyCode</SourceEDT>
					<Field>RoyaltyCode</Field>
					<RelatedField>RoyaltyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRRoyaltyContract</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MCRRoyaltyContract</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RoyaltyContract</Name>
					<Field>RoyaltyContract</Field>
					<RelatedField>RoyaltyContract</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>UnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>UnitOfMeasure</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>UnitID</Name>
					<Field>UnitID</Field>
					<RelatedField>Symbol</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>