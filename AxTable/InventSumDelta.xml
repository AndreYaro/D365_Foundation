<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSumDelta</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventSumDelta extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>availOrderedCalculate</Name>
				<Source><![CDATA[
    private InventQtyAvailOrdered   availOrderedCalculate()
    {
        return this.AvailPhysical + this.Ordered + this.Arrived - this.ReservOrdered - this.OnOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>availPhysicalCalculate</Name>
				<Source><![CDATA[
    private InventQtyAvailPhysical availPhysicalCalculate()
    {
        return this.PhysicalInvent - this.ReservPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventSum</Name>
				<Source><![CDATA[
    public void initFromInventSum(InventSum _inventSum)
    {
        _inventSum.checkInvalidFieldAccess(false);

        this.PostedQty        += _inventSum.PostedQty;
        this.PostedValue      += _inventSum.PostedValue;
        this.Deducted         += _inventSum.Deducted;
        this.Received         += _inventSum.Received;
        this.ReservPhysical   += _inventSum.ReservPhysical;
        this.ReservOrdered    += _inventSum.ReservOrdered;
        this.OnOrder          += _inventSum.OnOrder;
        this.Ordered          += _inventSum.Ordered;
        this.QuotationIssue   += _inventSum.QuotationIssue;
        this.QuotationReceipt += _inventSum.QuotationReceipt;
        this.Registered       += _inventSum.Registered;
        this.Picked           += _inventSum.Picked;
        this.AvailOrdered     += _inventSum.AvailOrdered;
        this.AvailPhysical    += _inventSum.AvailPhysical;
        this.PhysicalValue    += _inventSum.PhysicalValue;
        this.Arrived          += _inventSum.Arrived;
        this.PhysicalInvent   += _inventSum.PhysicalInvent;
        // <GEERU>
        this.PhysicalValueSecCur_RU += _inventSum.PhysicalValueSecCur_RU;
        this.PostedValueSecCur_RU   += _inventSum.PostedValueSecCur_RU;
        // </GEERU>
        this.PdsCWPostedQty        += _inventSum.PdsCWPostedQty;
        this.PdsCWDeducted         += _inventSum.PdsCWDeducted;
        this.PdsCWReceived         += _inventSum.PdsCWReceived;
        this.PdsCWReservPhysical   += _inventSum.PdsCWReservPhysical;
        this.PdsCWReservOrdered    += _inventSum.PdsCWReservOrdered;
        this.PdsCWOnOrder          += _inventSum.PdsCWOnOrder;
        this.PdsCWOrdered          += _inventSum.PdsCWOrdered;
        this.PdsCWQuotationIssue   += _inventSum.PdsCWQuotationIssue;
        this.PdsCWQuotationReceipt += _inventSum.PdsCWQuotationReceipt;
        this.PdsCWRegistered       += _inventSum.PdsCWRegistered;
        this.PdsCWPicked           += _inventSum.PdsCWPicked;
        this.PdsCWAvailOrdered     += _inventSum.PdsCWAvailOrdered;
        this.PdsCWAvailPhysical    += _inventSum.PdsCWAvailPhysical;
        this.PdsCWArrived          += _inventSum.PdsCWArrived;
        this.PdsCWPhysicalInvent   += _inventSum.PdsCWPhysicalInvent;
        if (this.LastUpdDatePhysical < _inventSum.LastUpdDatePhysical)
        {
            this.LastUpdDatePhysical  = _inventSum.LastUpdDatePhysical;
        }

        if (this.LastUpdDateExpected < _inventSum.LastUpdDateExpected)
        {
            this.LastUpdDateExpected  = _inventSum.LastUpdDateExpected;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventSumDeltaAggrSumView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the buffer based on the InventSumDeltaAggrSumView buffer.
    /// </summary>
    /// <param name="_inventSumDeltaAggrSumView">
    /// An <c>InventSumDeltaAggrSumView</c> buffer.
    /// </param>
    public void initFromInventSumDeltaAggrSumView(InventSumDeltaAggrSumView _inventSumDeltaAggrSumView)
    {
        _inventSumDeltaAggrSumView.checkInvalidFieldAccess(false);

        this.ItemId             = _inventSumDeltaAggrSumView.ItemId;
        this.InventDimId        = _inventSumDeltaAggrSumView.InventDimId;

        this.PostedQty          = _inventSumDeltaAggrSumView.PostedQty;
        this.PostedValue        = _inventSumDeltaAggrSumView.PostedValue;
        this.Deducted           = _inventSumDeltaAggrSumView.Deducted;
        this.Received           = _inventSumDeltaAggrSumView.Received;
        this.ReservPhysical     = _inventSumDeltaAggrSumView.ReservPhysical;
        this.ReservOrdered      = _inventSumDeltaAggrSumView.ReservOrdered;
        this.OnOrder            = _inventSumDeltaAggrSumView.OnOrder;
        this.Ordered            = _inventSumDeltaAggrSumView.Ordered;
        this.QuotationIssue     = _inventSumDeltaAggrSumView.QuotationIssue;
        this.QuotationReceipt   = _inventSumDeltaAggrSumView.QuotationReceipt;
        this.Registered         = _inventSumDeltaAggrSumView.Registered;
        this.Picked             = _inventSumDeltaAggrSumView.Picked;
        this.AvailOrdered       = _inventSumDeltaAggrSumView.AvailOrdered;
        this.AvailPhysical      = _inventSumDeltaAggrSumView.AvailPhysical;
        this.PhysicalValue      = _inventSumDeltaAggrSumView.PhysicalValue;
        this.Arrived            = _inventSumDeltaAggrSumView.Arrived;
        this.PhysicalInvent     = _inventSumDeltaAggrSumView.PhysicalInvent;

        this.PdsCWPostedQty        = _inventSumDeltaAggrSumView.PdsCWPostedQty;
        this.PdsCWDeducted         = _inventSumDeltaAggrSumView.PdsCWDeducted;
        this.PdsCWReceived         = _inventSumDeltaAggrSumView.PdsCWReceived;
        this.PdsCWReservPhysical   = _inventSumDeltaAggrSumView.PdsCWReservPhysical;
        this.PdsCWReservOrdered    = _inventSumDeltaAggrSumView.PdsCWReservOrdered;
        this.PdsCWOnOrder          = _inventSumDeltaAggrSumView.PdsCWOnOrder;
        this.PdsCWOrdered          = _inventSumDeltaAggrSumView.PdsCWOrdered;
        this.PdsCWQuotationIssue   = _inventSumDeltaAggrSumView.PdsCWQuotationIssue;
        this.PdsCWQuotationReceipt = _inventSumDeltaAggrSumView.PdsCWQuotationReceipt;
        this.PdsCWRegistered       = _inventSumDeltaAggrSumView.PdsCWRegistered;
        this.PdsCWPicked           = _inventSumDeltaAggrSumView.PdsCWPicked;
        this.PdsCWAvailOrdered     = _inventSumDeltaAggrSumView.PdsCWAvailOrdered;
        this.PdsCWAvailPhysical    = _inventSumDeltaAggrSumView.PdsCWAvailPhysical;
        this.PdsCWArrived          = _inventSumDeltaAggrSumView.PdsCWArrived;
        this.PdsCWPhysicalInvent   = _inventSumDeltaAggrSumView.PdsCWPhysicalInvent;
        // <GEERU>
        this.PhysicalValueSecCur_RU = _inventSumDeltaAggrSumView.PhysicalValueSecCur_RU;
        this.PostedValueSecCur_RU   = _inventSumDeltaAggrSumView.PostedValueSecCur_RU;
        // </GEERU>
        this.LastUpdDatePhysical  = _inventSumDeltaAggrSumView.LastUpdDatePhysical;
        this.LastUpdDateExpected  = _inventSumDeltaAggrSumView.LastUpdDateExpected;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTrans</Name>
				<Source><![CDATA[
    public void initFromInventTrans(InventTrans _inventTrans)
    {
        this.ItemId             = _inventTrans.ItemId;
        this.InventDimId        = _inventTrans.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIsExcludedFromInventoryValue</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void setIsExcludedFromInventoryValue()
    {
        InventDim inventDim = InventDim::find(this.InventDimId);

        if (inventDim)
        {
            this.IsExcludedFromInventoryValue = !inventDim.isOwnerCurrentLegalEntity();
        }
        else
        {
            this.IsExcludedFromInventoryValue = NoYes::No;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        boolean shouldInsert = true;

        //Only insert when record does not exist for the same item id and inventDimId.
        if (!this.SQLTransactionID)
        {
            this.setTransactionId();
        }

        if (InventUpdateOnhandGlobal::mustAddInventSumDeltaOnhand(this.ItemId))
        {
            InventSumDelta inventSumDelta;

            select firstonly forupdate inventSumDelta
                where inventSumDelta.SQLTransactionID == this.SQLTransactionID
                && inventSumDelta.ItemId == this.ItemId
                && inventSumDelta.InventDimId == this.InventDimId;

            if (inventSumDelta.RecId)
            {
                this.mergeInventSumDelta(inventSumDelta);
                inventSumDelta.update();
                this.setAvailFields(); //Doing this is to make sure returned inventSumDelta has expected value.
                shouldInsert = false;
            }
        }
        
        if (shouldInsert)
        {
            this.setAvailFields();
            this.setInventDimFields();
            this.setIsExcludedFromInventoryValue();
            if (!this.SQLTransactionID)
            {
                var logger = InventInstrumentationLogger::CreateLogger(tableStr(InventSumDelta));
                using (var b = logger.activityContext(logger.activity(tableMethodStr(InventSumDelta, insert) + ' without SQLTransactionID')))
                {
                    logger.logInventSumDeltaInsertCallStack();
                }
            }
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>merge</Name>
				<Source><![CDATA[
    public void merge(Common _mergeInto)
    {
        InventSumDelta mergeIntoSumDelta;
        if (_mergeInto is InventSumDelta)
        {
            mergeIntoSumDelta = _mergeInto as InventSumDelta;
            this.mergeInventSumDelta(mergeIntoSumDelta);
        }
        
        super(_mergeInto);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromInventSumDeltaAggrSumView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new record initialized with data from a <c>InventSumDeltaAggrSumView</c>.
    /// </summary>
    /// <param name = "_view"><c>InventSumDeltaAggrSumView</c> record used for initialization.</param>
    /// <returns><c>InventSumDelta</c> record.</returns>
    public static InventSumDelta newFromInventSumDeltaAggrSumView(InventSumDeltaAggrSumView _view)
    {
        InventSumDelta inventSumDelta;
        inventSumDelta.initFromInventSumDeltaAggrSumView(_view);
        return inventSumDelta;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addInventSumDeltaQueryObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds InventSumDelta for the active dimensions. It is a corresponding method to InventDim::dimAddInventDimExistsJoin.
    /// </summary>
    /// <param name="_inventSumDelta">
    /// The <c>InventSum</c> table.
    /// </param>
    /// <param name="_inventDimCriteria">
    /// The <c>InventDim</c> criteria that will be set as ranges on the table.
    /// </param>
    /// <param name="_inventDimParm">
    /// The <c>InventDim</c> Parm that will be set as ranges on the table.
    /// </param>
    /// <returns>
    /// The query expression with active dimensions in <c>InventSumDelta</c>.
    /// </returns>
    [Hookable(false), Wrappable(false)]
    public static SysDaQueryExpression addInventSumDeltaQueryObject(InventSumDelta _inventSumDelta, inventDim _inventDimCriteria, inventDimParm _inventDimParm)
    {
        InventSumDeltaQueryBuilder inventSumDeltaQueryBuilder = InventSumDeltaQueryBuilder::newFromQuery(_inventSumDelta, _inventDimCriteria, _inventDimParm);
        return inventSumDeltaQueryBuilder.buildWhereClauseFromEnabledInventoryDimensions();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWAvailOrderedCalculated</Name>
				<Source><![CDATA[
    public display PdsCWAvailOrdered pdsCWAvailOrderedCalculated(boolean _inclAvailPhysical = true)
    {
        return (_inclAvailPhysical ? this.pdsCWAvailPhysicalCalculated() : 0)
            + this.PdsCWOrdered
            + this.PdsCWArrived
            - this.PdsCWReservOrdered
            - this.PdsCWOnOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWAvailPhysicalCalculated</Name>
				<Source><![CDATA[
    public display PdsCWAvailPhysical pdsCWAvailPhysicalCalculated()
    {
        return (this.pdsCWPhysicalInventCalculated() - this.PdsCWReservPhysical);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWPhysicalInventCalculated</Name>
				<Source><![CDATA[
    public display PdsCWPhysicalInvent pdsCWPhysicalInventCalculated()
    {
        return this.PdsCWPostedQty
            + this.PdsCWReceived
            - this.PdsCWDeducted
            + this.PdsCWRegistered
            - this.PdsCWPicked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>physicalInventCalculate</Name>
				<Source><![CDATA[
    private InventQtyPhysicalOnhand physicalInventCalculate()
    {
        return this.PostedQty + this.Received - this.Deducted + this.Registered - this.Picked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAvailFields</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void setAvailFields()
    {
        this.PhysicalInvent = this.physicalInventCalculate();    // The order is important as values are dependent
        this.AvailPhysical  = this.availPhysicalCalculate();
        this.AvailOrdered   = this.availOrderedCalculate();
        this.PdsCWAvailOrdered  = this.pdsCWAvailOrderedCalculated();
        this.PdsCWAvailPhysical = this.pdsCWAvailPhysicalCalculated();
        this.PdsCWPhysicalInvent = this.pdsCWPhysicalInventCalculated();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.setAvailFields();
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransactionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the transaction ID on the record.
    /// </summary>
    /// <param name = "_inventUpdateOnHand">The <c>InventUpdateOnhand</c> class instance; optional.</param>
    public void setTransactionId(InventUpdateOnhand _inventUpdateOnHand = InventUpdateOnhandGlobal::Instance().inventUpdateOnhand())
    {
        this.TTSId            = _inventUpdateOnHand.ttsId();
        this.SQLTransactionID = _inventUpdateOnHand.sqlTransactionId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>aggrCountFactorCombineNonAggregatedRecs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns an integer that determines when non-aggregated <c>InventSumDelta</c> records will be attempted to be combined.
    /// </summary>
    /// <returns>
    /// The number 100.
    /// </returns>
    public static int aggrCountFactorCombineNonAggregatedRecs()
    {
        return 100;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSumDelta</Name>
				<Source><![CDATA[
    static public InventSumDelta findSumDelta(
        ItemId              _itemId,
        InventDim           _inventDimCriteria,
        InventDimParm       _inventDimParm,
        InventSumFields     _sumFields  = InventSumFields::All)
    {
        InventSumDelta  inventSumDelta;
        InventDim       inventDim;

        switch (_sumFields)
        {
            case InventSumFields::Financial:
                select sum(PostedQty),sum(PostedValue)
                , sum(PdsCWPostedQty)
                // <GEERU>
                , sum(PostedValueSecCur_RU)
                // </GEERU>
                from inventSumDelta
                    where inventSumDelta.ItemId           == _itemId   &&
                          inventSumDelta.SQLTransactionID == InventUpdateOnhandGlobal::Instance().inventUpdateOnhand().sqlTransactionId()
                #inventDimExistsJoin(inventSumDelta.InventDimId, inventDim, _InventDimCriteria, _InventDimParm);
                break;

            case InventSumFields::Physical:
                select sum(PostedQty),sum(PostedValue),sum(Received),sum(Deducted),sum(Picked),sum(Registered)
                , sum(PdsCWPostedQty)
                , sum(PdsCWReceived)
                , sum(PdsCWDeducted)
                , sum(PdsCWPicked)
                , sum(PdsCWRegistered)
                // <GEERU>
                , sum(PostedValueSecCur_RU)
                // </GEERU>
                from inventSumDelta
                    where inventSumDelta.ItemId             == _itemId   &&
                          inventSumDelta.SQLTransactionID   == InventUpdateOnhandGlobal::Instance().inventUpdateOnhand().sqlTransactionId()
                #inventDimExistsJoin(inventSumDelta.InventDimId, inventDim, _InventDimCriteria, _InventDimParm);
                break;

            case InventSumFields::All:
                inventSumDelta =  InventSumDelta::findInventSumDeltaInventSumFieldsAll(_itemId, _inventDimCriteria, _inventDimParm);
                break;

            default:
                // Support default to avoid breaking - because the default case was supported when the enum was made extensible.
                if (!InventSumDelta::skipDefaultCaseForFindSumDeltaDimId(_sumFields))
                {
                    inventSumDelta =  InventSumDelta::findInventSumDeltaInventSumFieldsAll(_itemId, _inventDimCriteria, _inventDimParm);
                }
        }
        return inventSumDelta;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInventSumDeltaInventSumFieldsAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the on-hand inventory change record when the sum fields to select is All.
    /// </summary>
    /// <param name = "_itemId">An item id value.</param>
    /// <param name = "_inventDimCriteria">An inventory dimension record.</param>
    /// <param name = "_inventDimParm">An inventory dimension parameters record.</param>
    /// <returns>An on-hand inventory change record.</returns>
    [Replaceable]
    protected static InventSumDelta findInventSumDeltaInventSumFieldsAll(
        ItemId              _itemId,
        InventDim           _inventDimCriteria,
        InventDimParm       _inventDimParm)
    {
        InventSumDelta  inventSumDelta;
        InventDim       inventDim;

        SysDaQueryObject queryObject = new SysDaQueryObject(inventSumDelta);
        InventDim::dimAddInventSumDeltaFieldsQueryProjection(queryObject);
        
        SysDaQueryExpression whereClause =
            new SysDaEqualsExpression(new SysDaFieldExpression(inventSumDelta, fieldStr(InventSumDelta, ItemId)), new SysDaValueExpression(_itemId))
            .and(new SysDaEqualsExpression(new SysDaFieldExpression(inventSumDelta, fieldStr(InventSumDelta, SQLTransactionID)), new SysDaValueExpression(InventUpdateOnhandGlobal::Instance().inventUpdateOnhand().sqlTransactionId())));

        if (InventUseDimOfInventSumDeltaToggle::instance().isEnabled())
        {
            whereClause = whereClause.and(InventSumDelta::addInventSumDeltaQueryObject(inventSumDelta, _inventDimCriteria, _inventDimParm));
            queryObject.whereClause(whereClause);
        }
        else
        {
            queryObject.whereClause(whereClause);
            InventDim::dimAddInventDimExistsJoin(
                queryObject,
                new SysDaFieldExpression(inventSumDelta, fieldStr(InventSumDelta, InventDimId)),
                inventDim,
                _inventDimCriteria,
                _inventDimParm);
        }

        SysDaFindStatement findStatement = new SysDaFindStatement();
        findStatement.execute(new SysDaFindObject(queryObject));

        return inventSumDelta;
    }

]]></Source>
			</Method>
			<Method>
				<Name>skipDefaultCaseForFindSumDelta</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether to skip the default case for the finding on hand inventory change record;
    /// extenders of findSumDelta where any extensions of <c>InventSumFields</c> has been handled must wrap this method to skip the execution of default logic.
    /// </summary>
    /// <param name = "_inventSumFields">An inventory sum fields value.</param>
    /// <returns>true if the default case logic for the finding on hand inventory change must be skipped; otherwise, false.</returns>
    protected static boolean skipDefaultCaseForFindSumDelta(InventSumFields _inventSumFields)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSumDeltaDimId</Name>
				<Source><![CDATA[
    static public InventSumDelta findSumDeltaDimId(
        ItemId              _itemId,
        InventDimId         _inventDimId,
        InventSumFields     _sumFields  = InventSumFields::All)
    {
        InventSumDelta  inventSumDelta;

        switch (_sumFields)
        {
            case InventSumFields::Financial:
                select sum(PostedQty),sum(PostedValue)
                , sum(PdsCWPostedQty)
                // <GEERU>
                , sum(PostedValueSecCur_RU)
                // </GEERU>
                from inventSumDelta
                    where inventSumDelta.ItemId            == _itemId      &&
                          inventSumDelta.InventDimId       == _inventDimId &&
                          inventSumDelta.SQLTransactionID  == InventUpdateOnhandGlobal::Instance().inventUpdateOnhand().sqlTransactionId();
                break;

            case InventSumFields::Physical:
                select sum(PostedQty),sum(PostedValue),sum(Received),sum(Deducted),sum(Picked),sum(Registered)
                , sum(PdsCWPostedQty),sum(PdsCWReceived),sum(PdsCWDeducted),sum(PdsCWPicked),sum(PdsCWRegistered)
                // <GEERU>
                , sum(PostedValueSecCur_RU)
                // </GEERU>
                from inventSumDelta
                    where inventSumDelta.ItemId            == _itemId      &&
                          inventSumDelta.InventDimId       == _inventDimId &&
                          inventSumDelta.SQLTransactionID  == InventUpdateOnhandGlobal::Instance().inventUpdateOnhand().sqlTransactionId();
                break;

            case InventSumFields::All:
                inventSumDelta =  InventSumDelta::findInventSumDeltaDimIdInventSumFieldsAll(_itemId, _inventDimId);
                break;

            default:
                // Support default to avoid breaking - because the default case was supported when the enum was made extensible.
                if (!InventSumDelta::skipDefaultCaseForFindSumDeltaDimId(_sumFields))
                {
                    inventSumDelta =  InventSumDelta::findInventSumDeltaDimIdInventSumFieldsAll(_itemId, _inventDimId);
                }
        }
        return inventSumDelta;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInventSumDeltaDimIdInventSumFieldsAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the on-hand inventory change record when dimension id is specified and the sum fields to select is All.
    /// </summary>
    /// <param name = "_itemId">An item id value.</param>
    /// <param name = "_inventDimId">An inventory dimension id value.</param>
    /// <returns>An on-hand inventory change record.</returns>
    [Replaceable]
    protected static InventSumDelta findInventSumDeltaDimIdInventSumFieldsAll(
        ItemId              _itemId,
        InventDimId         _inventDimId)
    {
        InventSumDelta inventSumDelta;

        SysDaQueryObject queryObject = new SysDaQueryObject(inventSumDelta);
        InventDim::dimAddInventSumDeltaFieldsQueryProjection(queryObject);
       
        queryObject.whereClause(
            new SysDaEqualsExpression(new SysDaFieldExpression(inventSumDelta, fieldStr(InventSumDelta, ItemId)), new SysDaValueExpression(_itemId))
            .and(new SysDaEqualsExpression(new SysDaFieldExpression(inventSumDelta, fieldStr(InventSumDelta, InventDimId)), new SysDaValueExpression(_inventDimId)))
            .and(new SysDaEqualsExpression(new SysDaFieldExpression(inventSumDelta, fieldStr(InventSumDelta, SQLTransactionID)), new SysDaValueExpression(InventUpdateOnhandGlobal::Instance().inventUpdateOnhand().sqlTransactionId()))));

        SysDaFindStatement findStatement = new SysDaFindStatement();
        findStatement.execute(new SysDaFindObject(queryObject));

        return inventSumDelta;
    }

]]></Source>
			</Method>
			<Method>
				<Name>skipDefaultCaseForFindSumDeltaDimId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether to skip the default case for the finding on hand inventory change record with dimension id;
    /// extenders of findSumDeltaDimId where any extensions of <c>InventSumFields</c> has been handled must wrap this method to skip the default query.
    /// </summary>
    /// <param name = "_inventSumFields">An inventory sum fields value.</param>
    /// <returns>true if the default case logic for the finding on hand inventory change must be skipped; otherwise, false.</returns>
    protected static boolean skipDefaultCaseForFindSumDeltaDimId(InventSumFields _inventSumFields)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>limitBeforeUsingSetBasedInsToSummarize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns an integer that determines when a set-based insert will be used when <c>InventSumDelta</c> records are aggregated using the summarizeDelta methods.
    /// </summary>
    /// <returns>
    /// The number 200.
    /// </returns>
    /// <remarks>
    /// The limit for when it is optimal to switch to a set-based insert may vary dependent on system setup so this method should be overlayered if needed.
    /// </remarks>
    public static int limitBeforeUsingSetBasedInsToSummarize()
    {
        return 200;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a query to find on hand delta for the specified parameters.
    /// </summary>
    /// <param name="_itemId">
    ///    The item.
    /// </param>
    /// <param name="_inventDimCriteria">
    ///    The inventory dimensions to limit to.
    /// </param>
    /// <param name="_inventDimParmCriteria">
    ///    Identification of which dimensions to limit to.
    /// </param>
    /// <param name="_inventDimParmGroupBy">
    ///    Identification of which dimensions to group the result by.
    /// </param>
    /// <returns>
    ///    A query to find on hand delta for the specified parameters.
    /// </returns>
    static public Query newQuery(
        ItemId          _itemId,
        InventDim       _inventDimCriteria,
        InventDimParm   _inventDimParmCriteria,
        InventDimParm   _inventDimParmGroupBy)
    {
        Query                   onHandDeltaQuery;
        QueryBuildDataSource    dsSumDelta;
        QueryBuildDataSource    dsDim;
        str                     itemIdCriteria;

        onHandDeltaQuery = new Query();

        dsSumDelta = onHandDeltaQuery.addDataSource(tableNum(InventSumDelta));
        
        dsSumDelta.addRange(fieldNum(InventSumDelta, SQLTransactionId)).value(queryValue(InventUpdateOnhandGlobal::Instance().inventUpdateOnhand().sqlTransactionId()));
        
        dsDim = dsSumDelta.addDataSource(tableNum(InventDim));
        dsDim.joinMode(JoinMode::InnerJoin);
        dsDim.relations(true);

        if (_inventDimParmCriteria.ItemIdFlag)
        {
            itemIdCriteria = _itemId ? queryValue(_itemId) : SysQuery::valueEmptyString();
            dsSumDelta.addRange(fieldNum(InventSumDelta, ItemId)).value(itemIdCriteria);
        }

        if (_inventDimParmGroupBy.ItemIdFlag)
        {
            dsSumDelta.addSortField(fieldNum(InventSumDelta, ItemId));
            dsSumDelta.orderMode(OrderMode::GroupBy);
        }

        InventSumDelta::queryAddSumFields(dsSumDelta);

        InventDim::queryDatasourceAddRangeSortFromParms(dsDim, false, _inventDimCriteria, _inventDimParmCriteria, _inventDimParmGroupBy, InventDim::dimFieldsList());

        return onHandDeltaQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newQueryAggregatedView</Name>
				<Source><![CDATA[
    public static Query newQueryAggregatedView(
        ItemId              _itemId,
        InventDim           _inventDimCriteria,
        InventDimParm       _inventDimParmCriteria,
        InventDimParm       _inventDimParmGroupBy)
    {
        QueryBuildRange         queryRange;

        Query query = new Query();
        var qbsAggrView = query.addDataSource(tableNum(InventSumDeltaAggrSumView));

        var qbsDim = qbsAggrView.addDataSource(tableNum(InventDim));

        qbsDim.joinMode(JoinMode::InnerJoin);
        qbsDim.addLink(fieldNum(InventSumDeltaAggrSumView, InventDimId), fieldNum(InventDim, InventDimId));

        queryRange = SysQuery::findOrCreateRange(qbsAggrView, fieldNum(InventSumDeltaAggrSumView, SQLTransactionId));
        queryRange.value(queryValue(InventUpdateOnhandGlobal::Instance().inventUpdateOnhand().sqlTransactionId()));

        if (_inventDimParmCriteria.ItemIdFlag && _itemId != '')
        {
            qbsAggrView.addRange(fieldNum(InventSumDeltaAggrSumView, ItemId)).value(queryValue(_itemId));
        }

        if (_inventDimParmGroupBy.ItemIdFlag)
        {
            qbsAggrView.addSortField(fieldNum(InventSumDeltaAggrSumView, ItemId));
            qbsAggrView.orderMode(OrderMode::GroupBy);
        }

        InventSumDeltaAggrSumView::queryAddSumFields(qbsAggrView);
        InventDim::queryDatasourceAddRangeSortFromParms(qbsDim, false, _inventDimCriteria, _inventDimParmCriteria, _inventDimParmGroupBy);

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddSumFields</Name>
				<Source><![CDATA[
    static
    public
    void queryAddSumFields(
        QueryBuildDataSource    _qbS,
        boolean                 _onlyAvail = false)
    {
        QueryBuildFieldList qbfl = _qbS.fields();
        Set                 fields  = new Set(Types::Integer);
        Counter     i;

        void addField(FieldId fieldId, SelectionField _fieldType = SelectionField::Sum)
        {
            if (!fields.in(fieldId))
            {
                qbfl.addField(fieldId, _fieldType);
            }
        }

        for (i=1;i<=qbfl.fieldCount();i++)
        {
            if (qbfl.fieldKind(i) == SelectionField::Sum || qbfl.fieldKind(i) == SelectionField::Min)
            {
                fields.add(qbfl.field(i));
            }
        }

        if (! _onlyAvail)
        {
            addField(fieldNum(InventSumDelta,PostedQty));
            addField(fieldNum(InventSumDelta,PostedValue));
            addField(fieldNum(InventSumDelta,PhysicalValue));
            addField(fieldNum(InventSumDelta,Deducted));
            addField(fieldNum(InventSumDelta,Registered));
            addField(fieldNum(InventSumDelta,Received));
            addField(fieldNum(InventSumDelta,Picked));
            addField(fieldNum(InventSumDelta,ReservPhysical));
            addField(fieldNum(InventSumDelta,ReservOrdered));
            addField(fieldNum(InventSumDelta,OnOrder));
            addField(fieldNum(InventSumDelta,Ordered));
            addField(fieldNum(InventSumDelta,Arrived));
            addField(fieldNum(InventSumDelta,QuotationReceipt));
            addField(fieldNum(InventSumDelta,QuotationIssue));
            addField(fieldNum(InventSumDelta,PhysicalInvent));
            // <GEERU>
            addField(fieldNum(InventSumDelta,PhysicalValueSecCur_RU));
            addField(fieldNum(InventSumDelta,PostedValueSecCur_RU));
            // </GEERU>
            addField(fieldNum(InventSumDelta,PdsCWPostedQty));
            addField(fieldNum(InventSumDelta,PdsCWDeducted));
            addField(fieldNum(InventSumDelta,PdsCWRegistered));
            addField(fieldNum(InventSumDelta,PdsCWReceived));
            addField(fieldNum(InventSumDelta,PdsCWPicked));
            addField(fieldNum(InventSumDelta,PdsCWReservPhysical));
            addField(fieldNum(InventSumDelta,PdsCWReservOrdered));
            addField(fieldNum(InventSumDelta,PdsCWOnOrder));
            addField(fieldNum(InventSumDelta,PdsCWOrdered));
            addField(fieldNum(InventSumDelta,PdsCWArrived));
            addField(fieldNum(InventSumDelta,PdsCWQuotationReceipt));
            addField(fieldNum(InventSumDelta,PdsCWQuotationIssue));
            addField(fieldNum(InventSumDelta,PdsCWPhysicalInvent));
        }

        addField(fieldNum(InventSumDelta,AvailPhysical));
        addField(fieldNum(InventSumDelta,AvailOrdered));
        addField(fieldNum(InventSumDelta,PdsCWAvailPhysical));
        addField(fieldNum(InventSumDelta,PdsCWAvailOrdered));
        addField(fieldNum(InventSumDelta,LastUpdDatePhysical), SelectionField::Max);
        addField(fieldNum(InventSumDelta,LastUpdDateExpected), SelectionField::Min);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeInventSumDelta</Name>
				<Source><![CDATA[
    /// <summary>
    /// Merge current record into provided <c>InventSumDelta</c> record.
    /// </summary>
    /// <param name = "_mergeInto">The record to be merged into.</param>
    public void mergeInventSumDelta(InventSumDelta _mergeInto)
    {
        _mergeInto.PostedQty        += this.PostedQty;
        _mergeInto.PostedValue      += this.PostedValue;
        _mergeInto.Deducted         += this.Deducted;
        _mergeInto.Received         += this.Received;
        _mergeInto.ReservPhysical   += this.ReservPhysical;
        _mergeInto.ReservOrdered    += this.ReservOrdered;
        _mergeInto.OnOrder          += this.OnOrder;
        _mergeInto.Ordered          += this.Ordered;
        _mergeInto.QuotationIssue   += this.QuotationIssue;
        _mergeInto.QuotationReceipt += this.QuotationReceipt;
        _mergeInto.Registered       += this.Registered;
        _mergeInto.Picked           += this.Picked;
        _mergeInto.AvailOrdered     += this.AvailOrdered;
        _mergeInto.AvailPhysical    += this.AvailPhysical;
        _mergeInto.PhysicalValue    += this.PhysicalValue;
        _mergeInto.Arrived          += this.Arrived;
        _mergeInto.PhysicalInvent   += this.PhysicalInvent;
        // <GEERU>
        _mergeInto.PhysicalValueSecCur_RU += this.PhysicalValueSecCur_RU;
        _mergeInto.PostedValueSecCur_RU   += this.PostedValueSecCur_RU;
        // </GEERU>
        _mergeInto.PdsCWPostedQty        += this.PdsCWPostedQty;
        _mergeInto.PdsCWDeducted         += this.PdsCWDeducted;
        _mergeInto.PdsCWReceived         += this.PdsCWReceived;
        _mergeInto.PdsCWReservPhysical   += this.PdsCWReservPhysical;
        _mergeInto.PdsCWReservOrdered    += this.PdsCWReservOrdered;
        _mergeInto.PdsCWOnOrder          += this.PdsCWOnOrder;
        _mergeInto.PdsCWOrdered          += this.PdsCWOrdered;
        _mergeInto.PdsCWQuotationIssue   += this.PdsCWQuotationIssue;
        _mergeInto.PdsCWQuotationReceipt += this.PdsCWQuotationReceipt;
        _mergeInto.PdsCWRegistered       += this.PdsCWRegistered;
        _mergeInto.PdsCWPicked           += this.PdsCWPicked;
        _mergeInto.PdsCWAvailOrdered     += this.PdsCWAvailOrdered;
        _mergeInto.PdsCWAvailPhysical    += this.PdsCWAvailPhysical;
        _mergeInto.PdsCWArrived          += this.PdsCWArrived;
        _mergeInto.PdsCWPhysicalInvent   += this.PdsCWPhysicalInvent;
        if (_mergeInto.LastUpdDatePhysical < this.LastUpdDatePhysical)
        {
            _mergeInto.LastUpdDatePhysical  = this.LastUpdDatePhysical;
        }
        if (_mergeInto.LastUpdDateExpected < this.LastUpdDateExpected)
        {
            _mergeInto.LastUpdDateExpected  = this.LastUpdDateExpected;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set dimension fields on inventDim table.
    /// </summary>
    [Hookable(false)]
    internal void setInventDimFields()
    {
        InventSumInventDimInitializer::initializeInventSumDeltaFromInventDim(this);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS124073</DeveloperDocumentation>
	<Label>@SYS98313</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>SQLTransactionID</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>SQLTransactionItemDimIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>Inventory</Modules>
	<OccEnabled>No</OccEnabled>
	<PrimaryIndex>SQLTransactionItemDimIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Deducted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Received</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OnOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Ordered</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AvailablePhysical</Name>
			<Label>@SYS22389</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostedQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Deducted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Picked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Received</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Registered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservPhysical</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AvailableQuantity</Name>
			<Label>@SYS54429</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AvailOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailPhysical</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DeltaFields</Name>
			<Label>@SYS98311</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostedQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWPostedQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Deducted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Received</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OnOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Ordered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationIssue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Registered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Picked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Arrived</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalInvent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWDeducted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWQuotationReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWQuotationIssue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWArrived</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWOnOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWReservOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWReservPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWRegistered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWReceived</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWPicked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWAvailOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWAvailPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWPhysicalInvent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedValueSecCur_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalValueSecCur_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DeltaFieldsQty</Name>
			<Label>@SYS98312</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostedQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWPostedQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Deducted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Picked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Received</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Registered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OnOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Ordered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Arrived</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationIssue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWDeducted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWPicked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWReceived</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWRegistered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWReservPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWReservOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWOnOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWArrived</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWQuotationIssue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWQuotationReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalInvent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWAvailPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWAvailOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWPhysicalInvent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@Sys5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TTSId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SQLTransactionID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LastDate</Name>
			<Label>@SYS15992</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LastUpdDatePhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastUpdDateExpected</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PhysicalInventory</Name>
			<Label>@SYS23942</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PhysicalInvent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TotalAvailable</Name>
			<Label>@SYS24243</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Arrived</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Ordered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservOrdered</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Value</Name>
			<Label>@SYS11762</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PhysicalValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ValueSecCur_RU</Name>
			<Label>@SYS22515</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PostedValueSecCur_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalValueSecCur_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Various</Name>
			<Label>@SYS28008</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OnOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationIssue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProductDimensions</Name>
			<Label>@SYS70071</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>configId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventVersionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>StorageDimensions</Name>
			<Label>@SYS108783</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>wMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicensePlateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>wMSPalletId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>TrackingDimensions</Name>
			<Label>@SYS317798</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>inventBatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inventSerialId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventProfileId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventOwnerId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventGtdId_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>InventoryDimensions</Name>
			<Label>@SYS53630</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>configId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventVersionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension2</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension3</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension4</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension5</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension6</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension7</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension8</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension9</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension10</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension11</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimension12</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>wMSLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LicensePlateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inventBatchId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>inventSerialId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventOwnerId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventProfileId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventGtdId_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>wMSPalletId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Arrived</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyArrived</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AvailOrdered</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyAvailOrdered</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AvailPhysical</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyAvailPhysical</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Deducted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyDeducted</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>LastUpdDateExpected</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DateExpected</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>LastUpdDatePhysical</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DatePhysical</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>OnOrder</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyOnOrder</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Ordered</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyOrdered</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWArrived</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWArrived</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWAvailOrdered</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWAvailOrdered</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWAvailPhysical</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWAvailPhysical</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWDeducted</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWDeducted</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWOnOrder</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWOnOrder</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWOrdered</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWOrdered</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWPhysicalInvent</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWPhysicalInvent</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWPicked</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWPicked</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWPostedQty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWPostedQty</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWQuotationIssue</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWQuotationIssue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWQuotationReceipt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWQuotationReceipt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWReceived</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWReceived</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWRegistered</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWRegistered</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWReservOrdered</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWReservOrdered</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PdsCWReservPhysical</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PdsCWReservPhysical</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PhysicalInvent</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyPhysicalOnhand</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PhysicalValue</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostAmountPhysical</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PhysicalValueSecCur_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostAmountPhysicalSecCur_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Picked</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyPicked</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PostedQty</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyPosted</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PostedValue</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostAmountPosted</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>PostedValueSecCur_RU</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostAmountPostedSecCur_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuotationIssue</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyQuotationIssue</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>QuotationReceipt</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyQuotationReceipt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Received</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyReceived</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Registered</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyRegistered</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReservOrdered</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyReservOrdered</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ReservPhysical</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventQtyReservPhysical</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TTSId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CreatedTransactionId</ExtendedDataType>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsExcludedFromInventoryValue</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventIsExcludedFromInventoryValue</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SQLTransactionID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SQLTransactionId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>configId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResItemConfigurationName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventBatchId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventBatchId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventColorId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResItemColorName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSerialId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSerialId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSizeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResItemSizeName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventStatusId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSInventStatusId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventStyleId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResItemStyleName</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventVersionId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResVersionName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LicensePlateId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSLicensePlateId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>wMSLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WMSLocationId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>wMSPalletId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>WMSAdvancedUpgrade</ConfigurationKey>
			<ExtendedDataType>WMSPalletId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<IsObsolete>Yes</IsObsolete>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventGtdId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventGTDId_RU</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventOwnerId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventOwnerId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventProfileId_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventProfileId_RU</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension1</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension2</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension3</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension3</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension4</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension4</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension5</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension5</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension6</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension6</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension7</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension7</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension8</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension8</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>InventDimension9</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension9</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>InventDimension10</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension10</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension11</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension11</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimension12</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimension12</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SQLTransactionItemDimIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SQLTransactionID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SQLTransactionDimIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SQLTransactionID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventDimId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SQLTransactionLocationSiteStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SQLTransactionID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSiteId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventStatusId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PhysicalInvent</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SQLTransactionLocationLicensePlateIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SQLTransactionID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>wMSLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LicensePlateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PhysicalInvent</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsCWPhysicalInvent</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SQLTransactionLicensePlateStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SQLTransactionID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LicensePlateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventStatusId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PhysicalInvent</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsCWPhysicalInvent</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SQLTransactionLicensePlateItemIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SQLTransactionID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LicensePlateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SQLTransactionLocationSiteStatusLicenseIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SQLTransactionID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>wMSLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSiteId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LicensePlateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventStatusId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PhysicalInvent</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SQLTransactionLocationItemBatchIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SQLTransactionID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>wMSLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventBatchId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PhysicalInvent</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsCWPhysicalInvent</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SQLTransactionLocationSiteSerialStatusIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SQLTransactionID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>wMSLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSiteId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventSerialId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventStatusId</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PhysicalInvent</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsCWPhysicalInvent</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SQLTransactionLocationIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SQLTransactionID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>wMSLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PhysicalInvent</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsCWPhysicalInvent</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SQLTransactionLocationLicenseItemIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<AllowPageLocks>No</AllowPageLocks>
			<Fields>
				<AxTableIndexField>
					<DataField>SQLTransactionID</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Partition</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InventLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>wMSLocationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LicensePlateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PdsCWPhysicalInvent</DataField>
					<IncludedColumn>Yes</IncludedColumn>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventDim</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventDim</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>inventDimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>DimIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventSum</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123816</EntityRelationshipRole>
			<RelatedTable>InventSum</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventDimId</Name>
					<Field>InventDimId</Field>
					<RelatedField>InventDimId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>