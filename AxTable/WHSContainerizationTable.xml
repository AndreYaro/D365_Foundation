<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSContainerizationTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSContainerizationTable extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initContainerizationQueryFromQueryType</Name>
				<Source><![CDATA[
    /// <summary>
    /// If the query type is changed, then the query must be set to the correct default query
    /// </summary>
    /// <param name="_containerizationQueryType">
    /// Containerization query type used select the corresponding query
    /// </param>
    public void initContainerizationQueryFromQueryType(WHSContainerizationQueryType _containerizationQueryType)
    {
        QueryRun queryRun = this.defaultContainerizationQueryFromQueryType(_containerizationQueryType);
        
        if (!queryRun)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        this.ContainerizationQuery = queryRun.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultContainerizationQueryFromQueryType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the default containerization query run for a containerization query type.
    /// </summary>
    /// <param name = "_containerizationQueryType">The containerization query type.</param>
    /// <returns>The default query run</returns>
    public QueryRun defaultContainerizationQueryFromQueryType(WHSContainerizationQueryType _containerizationQueryType)
    {
        switch (_containerizationQueryType)
        {
            case WHSContainerizationQueryType::SalesAllocation:
                return new QueryRun(queryStr(WHSContainerizationSalesTmpWorkLine));

            case WHSContainerizationQueryType::TransferAllocation:
                return new QueryRun(queryStr(WHSContainerizationTransferTmpWorkLine));

            case WHSContainerizationQueryType::Container:
                return new QueryRun(queryStr(WHSContainerizationContainer));
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        WHSContainerizationTable    containerizationTable;
        QueryRun                    queryRun;

        super();

        // Set sequence num
        select firstonly containerizationTable order by containerizationTable.SeqNum desc;
        this.SeqNum = containerizationTable.SeqNum + 1;

        // Initialize base query
        this.initContainerizationQueryFromQueryType(this.ContainerizationQueryType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWaveStepCodeUniquePerContainerizationQueryType</Name>
				<Source><![CDATA[
	private boolean isWaveStepCodeUniquePerContainerizationQueryType()
    {
        boolean ret = true;
        WHSContainerizationTable containerizationTable;

        select firstonly RecId from containerizationTable
			where containerizationTable.WaveStepCode                == this.WaveStepCode
                && containerizationTable.RecId						!= this.RecId
				&& containerizationTable.ContainerizationQueryType	!= this.ContainerizationQueryType;

        if (containerizationTable.RecId)
        {
            ret = checkFailed("@WAX3737");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(WHSContainerizationTable, WaveStepCode):
                ret = this.isWaveStepCodeUniquePerContainerizationQueryType();

                if (ret && this.WaveStepCode) // the wave step code can always be blank
                {
                    ret = WHSWaveStepCodeTable::isWaveStepCodeValueUpdateValid(this.WaveStepCode, this.TableId);
                }

                break;

            case fieldNum(WHSContainerizationTable, ContainerizationQueryType):
                ret = this.isWaveStepCodeUniquePerContainerizationQueryType();
                break;
               
            case fieldNum(WHSContainerizationTable, PackByUnitOfMeasure):
            case fieldNum(WHSContainerizationTable, ContainerGroupID):
                if (this.PackByUnitOfMeasure == NoYes::Yes && this.ContainerGroupID)
                {
                    ret = checkFailed("@WAX3820");
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        int             i;
        boolean         ret;
        SysDictTable    sysDictTable;
        FieldId         fieldIdToCheck;

        ret = super();

        if (ret)
        {
            sysDictTable = new SysDictTable(tableNum(WHSContainerizationTable));

            if (sysDictTable)
            {
                for (i = 1; ret && i <= sysDictTable.fieldCntWithoutSys(); i++)
                {
                    fieldIdToCheck = sysDictTable.fieldCnt2Id(i);
                    ret = this.validateField(fieldIdToCheck);
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
	/// <summary>
	/// Checks whether a specific <c>whsContainerizationTable</c> record exists with given parameters.
	/// </summary>
	/// <param name="_containerizationName">
	/// Containerization name of the record.
	/// </param>
	/// <returns>
	/// True if the record exists.
	/// </returns>
    public static boolean exist(WHSContainerizationName _containerizationName)
    {
        return (_containerizationName) &&
               (select firstonly whsContainerizationTable
                where whsContainerizationTable.ContainerizationName == _containerizationName).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
	/// <summary>
	/// Finds a specific <c>whsContainerizationTable</c> record with given parameters.
	/// </summary>
	/// <param name="_containerizationName">
	/// Containerization name of the record.
	/// </param>
	/// <param name="_forupdate">
	/// Determines whether the record is selected for update.
	/// </param>
	/// <returns>
	/// The record that is searched for.
	/// </returns>
    public static WHSContainerizationTable find(WHSContainerizationName _containerizationName,
                                                boolean                 _forupdate = false)
    {
        WHSContainerizationTable containerizationTable;

        if (_containerizationName)
        {
            containerizationTable.selectForUpdate(_forupdate);

            select firstonly containerizationTable
                where containerizationTable.ContainerizationName == _containerizationName;
        }

        return containerizationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsForWaveStepCode</Name>
				<Source><![CDATA[
    internal static boolean existsForWaveStepCode(WHSWaveStepCode _waveStepCode)
    {
        WHSContainerizationTable containerization;

        select firstonly RecId from containerization
            where containerization.WaveStepCode == _waveStepCode;

        return containerization.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX4336</DeveloperDocumentation>
	<FormRef>WHSContainerizationTable</FormRef>
	<Label>@WAX3672</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>ContainerizationName</TitleField1>
	<TitleField2>SeqNum</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>ContainerizationNameIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Inventory</Modules>
	<PrimaryIndex>ContainerizationNameIdx</PrimaryIndex>
	<ReplacementKey>ContainerizationNameIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>WHSContainerizationBreak</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>WHSContainerizationBreak</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>WHSContainerizationLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>WHSContainerizationLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContainerizationName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveStepCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerizationQuery</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerizationQueryType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllowSplitPicks</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerPackingStrategy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerGroupID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackByUnitOfMeasure</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContainerizationName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContainerizationName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WaveStepCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerizationQuery</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerizationQueryType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllowSplitPicks</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerPackingStrategy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContainerGroupID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PackByUnitOfMeasure</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AllowSplitPicks</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSAllowSplitPicks</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContainerGroupID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSContainerGroupId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ContainerizationName</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSContainerizationName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>ContainerizationQuery</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSContainerizationQuery</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContainerizationQueryType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSContainerizationQueryType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ContainerPackingStrategy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>WHSContainerPackingStrategy</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PackByUnitOfMeasure</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSPackByUnitOfMeasure</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SeqNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSSeqNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WaveStepCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSWaveStepCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ContainerizationNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ContainerizationName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>SeqNumIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>SeqNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>WaveStepCodeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>WaveStepCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>ContainerGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSContainerGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ContainerGroupID</Name>
					<Field>ContainerGroupID</Field>
					<RelatedField>ContainerGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>