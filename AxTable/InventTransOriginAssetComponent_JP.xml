<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransOriginAssetComponent_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransOriginAssetComponent_JP extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>assetComponent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the fixed assets remainders related to the ID of the inventory transactions originator.
    /// </summary>
    /// <param name="_inventTransOriginId">
    /// The ID of the inventory transactions originator. It is the primary key on the <c>InventTransOrigin</c> table.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether the buffer should be selected for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RassetScrap</c> table if exists; otherwise an empty record..
    /// </returns>
    /// <remarks>
    /// Retrieves an empty buffer if no related record exists.
    /// </remarks>
    public static AssetComponent_JP assetComponent(
        InventTransOriginId _inventTransOriginId,
        boolean             _forUpdate = false)
    {
        AssetComponent_JP                   assetComponent;
        InventTransOriginAssetComponent_JP  inventTransOriginAssetComponent;

        if (_inventTransOriginId)
        {
            assetComponent.selectForUpdate(_forUpdate);

            select firstonly assetComponent
                exists join inventTransOriginAssetComponent
                where inventTransOriginAssetComponent.AssetComponent        == assetComponent.RecId
                   && inventTransOriginAssetComponent.InventTransOrigin     == _inventTransOriginId;
        }

        return assetComponent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteOriginRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the relationship between the inventory transactions originator and the fixed assets remainders.
    /// </summary>
    /// <param name="_inventTransOriginId">
    /// The ID of the inventory transactions originator. It is the primary key on the <c>InventTransOrigin</c> table.
    /// </param>
    public static void deleteOriginRelationship(InventTransOriginId _inventTransOriginId)
    {
        InventTransOriginAssetComponent_JP  inventTransOriginAssetComponent;

        ttsbegin;

        delete_from inventTransOriginAssetComponent
            where inventTransOriginAssetComponent.InventTransOrigin == _inventTransOriginId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the relationship between the inventory transactions originator and the fixed assets remainders.
    /// </summary>
    /// <param name="_assetComponentRecId">
    /// The ID of the <c>AssetComponent_JP</c> table. It is the primary key on the <c>AssetComponent_JP</c> table.
    /// </param>
    public static void deleteOwnerRelationship(RefRecId _assetComponentRecId)
    {
        InventTransOriginAssetComponent_JP  inventTransOriginAssetComponent;

        ttsbegin;

        delete_from inventTransOriginAssetComponent
            where inventTransOriginAssetComponent.AssetComponent == _assetComponentRecId;

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the ID of the inventory transactions originator for the fixed assets remainders.
    /// </summary>
    /// <param name="_assetComponentRecId">
    /// The ID of the <c>AssetComponent_JP</c> table. It is the primary key on the <c>RAssetScrap</c> table.
    /// </param>
    /// <returns>
    /// The ID of the inventory transactions originator.
    /// </returns>
    public static InventTransOriginId findInventTransOriginId(RefRecId _assetComponentRecId)
    {
        InventTransOriginAssetComponent_JP  inventTransOriginAssetComponent;

        if (_assetComponentRecId)
        {
            select firstonly InventTransOrigin from inventTransOriginAssetComponent
                where inventTransOriginAssetComponent.AssetComponent == _assetComponentRecId;
        }

        return inventTransOriginAssetComponent.InventTransOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeOriginOwnerRelationship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates or updates the relationship between the inventory transactions originator and the fixed assets remainders.
    /// </summary>
    /// <param name="_assetComponentRecId">
    /// The ID of the <c>AssetComponent</c> table. It is the primary key on the <c>AssetComponent</c> table.
    /// </param>
    /// <param name="_inventTransOriginId">
    /// The ID of the inventory transactions originator. It is the primary key on the <c>InventTransOrigin</c> table.
    /// </param>
    public static void writeOriginOwnerRelationship(RefRecId _assetComponentRecId, InventTransOriginId _inventTransOriginId)
    {
        InventTransOriginAssetComponent_JP  inventTransOriginAssetComponent;

        ttsbegin;

        select forupdate inventTransOriginAssetComponent
            where inventTransOriginAssetComponent.AssetComponent == _assetComponentRecId;

        if (inventTransOriginAssetComponent.AssetComponent          == _assetComponentRecId
            || inventTransOriginAssetComponent.InventTransOrigin    != _inventTransOriginId)
        {
            inventTransOriginAssetComponent.AssetComponent     = _assetComponentRecId;
            inventTransOriginAssetComponent.InventTransOrigin  = _inventTransOriginId;

            inventTransOriginAssetComponent.write();
        }

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<DeveloperDocumentation>@SYS4110679</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SYS4000727</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>InventTransOrigin</TitleField1>
	<TitleField2>AssetComponent</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>AssetComponentIdx</ClusteredIndex>
	<Modules>Inventory</Modules>
	<ReplacementKey>AssetComponentIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetComponent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransOrigin</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetComponent</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Other</Name>
			<Label>@SYS1284</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AssetComponent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransOrigin</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>AssetComponent</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InventTransOrigin</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>InventTransOriginId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTransOriginIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InventTransOrigin</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AssetComponentIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AssetComponent</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AssetComponent_JP</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>AssetComponent_JP</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AssetComponent</Name>
					<Field>AssetComponent</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>InventTransOrigin</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>InventTransOriginRAssetScrap_RU</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransOrigin</Name>
					<Field>InventTransOrigin</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>