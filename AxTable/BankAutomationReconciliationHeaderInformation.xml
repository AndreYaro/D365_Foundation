<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankAutomationReconciliationHeaderInformation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankAutomationReconciliationHeaderInformation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findByReconciliationHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>BankAutomationReconciliationHeaderInformation</c> record by the reconciliation header.
    /// </summary>
    /// <param name = "_reconciliationHeader">The reconciliation header.</param>
    /// <returns>The <c>BankAutomationReconciliationHeaderInformation</c> record.</returns>
    internal static BankAutomationReconciliationHeaderInformation findByReconciliationHeader(RecId _reconciliationHeader)
    {
        BankAutomationReconciliationHeaderInformation information;

        select firstonly information
            where information.BankReconciliationHeader == _reconciliationHeader;

        return information;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertByReconciliationHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the <c>BankAutomationReconciliationHeaderInformation</c> record by the reconciliation header.
    /// </summary>
    /// <param name = "_reconciliationHeader">The reconciliation header.</param>
    internal static void insertByReconciliationHeader(BankReconciliationHeader _reconciliationHeader)
    {
        BankAutomationReconciliationHeaderInformation headerInformation;

        headerInformation.BankReconciliationHeader = _reconciliationHeader.RecId;
        headerInformation.BankEndingBalance = _reconciliationHeader.getStatementEndingBalance();

        BankAutomationWorksheetHeaderInfoObject bankMatchedInfo = BankAutomationWorksheetHeaderInformationUtil::getBankMatchedInfo(_reconciliationHeader.RecId);
        headerInformation.BankMatchedAmount = bankMatchedInfo.parmBankCurrencyAmount();
        headerInformation.BankMatchedLines = bankMatchedInfo.parmLineCount();

        // Calculate the bank unmatched amount and bank unmatched lines, it equals to total amount - matched amount
        BankAutomationWorksheetHeaderInfoObject bankAllInfo = BankAutomationWorksheetHeaderInformationUtil::getBankAllInfo(_reconciliationHeader.RecId);
        headerInformation.BankUnmatchedAmount = bankAllInfo.parmBankCurrencyAmount() - headerInformation.BankMatchedAmount;
        headerInformation.BankUnmatchedLines = bankAllInfo.parmLineCount() - headerInformation.BankMatchedLines;

        // Calculate the company ending balance = company unposted amount + company posted ending balance
        headerInformation.CompanyEndingBalance = BankAutomationWorksheetHeaderInformationUtil::getCompanyUnpostedAmount(_reconciliationHeader.AccountId, _reconciliationHeader.CutOffDate);
        BankAccountTable bankAccountTable = BankAccountTable::find(_reconciliationHeader.AccountId);
        if (bankAccountTable.RecId)
        {
            headerInformation.CompanyEndingBalance += bankAccountTable.getBalanceByDate(_reconciliationHeader.CutOffDate);
        }

        // Calculate the company matched amount, company matched lines and company correction amount
        BankAutomationWorksheetHeaderInfoObject companyMatchedInfo = BankAutomationWorksheetHeaderInformationUtil::getCompanyMatchedInfo(_reconciliationHeader.RecId);
        headerInformation.CompanyMatchedAmount = companyMatchedInfo.parmBankCurrencyAmount();
        headerInformation.CompanyMatchedLines = companyMatchedInfo.parmLineCount();
        headerInformation.CompanyCorrectionAmount = companyMatchedInfo.parmCorrectionAmount();

        // Calculate the company unmatched amount and company unmatched lines, it equals to total amount - matched amount
        BankAutomationWorksheetHeaderInfoObject companyAllInfo = BankAutomationWorksheetHeaderInformationUtil::getCompanyAllInfo(_reconciliationHeader.RecId);
        headerInformation.CompanyUnmatchedAmount = companyAllInfo.parmBankCurrencyAmount() - headerInformation.CompanyMatchedAmount;
        headerInformation.CompanyUnmatchedLines = companyAllInfo.parmLineCount() - headerInformation.CompanyMatchedLines;

        headerInformation.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteByReconciliationHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the <c>BankAutomationReconciliationHeaderInformation</c> record by the reconciliation header.
    /// </summary>
    /// <param name = "_reconciliationHeader">The reconciliation header.</param>
    internal static void deleteByReconciliationHeader(RecId _reconciliationHeader)
    {
        BankAutomationReconciliationHeaderInformation headerInformation;
        delete_from headerInformation
            where headerInformation.BankReconciliationHeader == _reconciliationHeader;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Bank</ConfigurationKey>
	<Label>@Bank:BankReconciliationHeaderInfomration</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Visibility>Internal</Visibility>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Bank</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BankReconciliationHeader</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>BankEndingBalance</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>BankUnmatchedAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>BankUnmatchedLines</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>BankMatchedAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>BankMatchedLines</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CompanyEndingBalance</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CompanyUnmatchedAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CompanyUnmatchedLines</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CompanyMatchedAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>CompanyMatchedLines</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CompanyCorrectionAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BankReconciliationHeaderIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>BankReconciliationHeader</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankReconciliationHeader</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>BankReconciliationHeader</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BankReconciliationHeader</Name>
					<Field>BankReconciliationHeader</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>