<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResStorageDimensionGroupProduct</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResStorageDimensionGroupProduct extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean                             ret;
        InventTable                         inventTable;
        EcoResStorageDimensionGroupItem     ecoResStorageDimensionGroupItem;
        EcoResStorageDimensionGroup         dimGroup;
        EcoResProductMaster                 ecoResProductMaster;
        EcoResProduct                       ecoResProduct;

        ret = super();

        if (ret)
        {
            // Test if any items for this product is using some other group
            select firstonly crosscompany RecId from inventTable
                where inventTable.Product == this.Product
                exists join ecoResStorageDimensionGroupItem
                    where ecoResStorageDimensionGroupItem.ItemDataAreaId        == inventTable.DataAreaId
                       && ecoResStorageDimensionGroupItem.ItemId                == inventTable.ItemId
                       && ecoResStorageDimensionGroupItem.StorageDimensionGroup != this.StorageDimensionGroup;

            if (inventTable.RecId)
            {
                ret = checkFailed("@SYS312265"); // The specified storage dimension group cannot be assigned because at least one item that is assigned to this product is using another storage dimension group.

                if (this.orig().StorageDimensionGroup)
                {
                    checkFailed("@SYS339283");
                }
                else
                {
                    checkFailed("@SYS339285");
                }
            }
        }

        if (ret)
        {
            dimGroup = EcoResStorageDimensionGroup::find(this.StorageDimensionGroup);
            ecoResProduct = EcoResProduct::find(this.Product);

            if (dimGroup.IsWarehouseWHSEnabled)
            {
                if (!WHSCatchWeightConfigurationKeyManager::instance().isEnabled()
                    && ecoResProduct.PdsCWProduct)
                {
                    ret = checkFailed(strFmt("@WAX5500", dimGroup.Name));
                }
            }
            else if (!EcoResProductUnitConverter::isProductUnitConversionPerVariantEnabled()
                     && this.StorageDimensionGroup
                     && ecoResProduct.isProductMaster())
            {
                ecoResProductMaster = ecoResProduct as EcoResProductMaster;
                if (ecoResProductMaster.IsProductVariantUnitConversionEnabled)
                {
                    ret = checkFailed(strFmt("@SYP4861262", dimGroup.Name));
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByProduct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds a <c>EcoResStorageDimensionGroupProduct</c> record that matches the specified product.
    /// </summary>
    /// <param name="_product">
    ///    The <c>RecId</c> field of the <c>EcoResProduct</c> record for the product.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether a record is to be updated; optional.
    /// </param>
    /// <returns>
    ///    A <c>EcoResStorageDimensionGroupProduct</c> record.
    /// </returns>
    static public EcoResStorageDimensionGroupProduct findByProduct(
        EcoResProductRecId  _product,
        boolean             _forupdate  = false)
    {
        EcoResStorageDimensionGroupProduct      ecoResStorageDimensionGroupProduct;

        ecoResStorageDimensionGroupProduct.selectForUpdate(_forupdate);

        if (_product)
        {
            select firstonly ecoResStorageDimensionGroupProduct
                where ecoResStorageDimensionGroupProduct.Product    == _product;
        }

        return ecoResStorageDimensionGroupProduct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS312245</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<FormRef>EcoResProductDetails</FormRef>
	<Label>@SYS312246</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>Product</TitleField1>
	<TitleField2>StorageDimensionGroup</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>EcoResProductIdx</ClusteredIndex>
	<Modules>ProductInformationManagement</Modules>
	<ReplacementKey>EcoResProductIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StorageDimensionGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>System</Name>
			<Label>@SYS4278</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StorageDimensionGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Product</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>StorageDimensionGroup</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResStorageDimensionGroupRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EcoResProductIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Product</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EcoResStorageDimensionGroupIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>StorageDimensionGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResProduct</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedTable>EcoResProduct</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResProduct</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EcoResStorageDimensionGroupProduct_Product</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Product</Name>
					<Field>Product</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResStorageDimensionGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>EcoResStorageDimensionGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>EcoResStorageDimensionGroup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EcoResStorageDimensionGroupProduct_Group</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StorageDimensionGroup</Name>
					<Field>StorageDimensionGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>