<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchRFQSendAmendment</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchRFQSendAmendment extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>hasDocuments</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a value that indicates whether there is at least one document attached to the amendment.
    /// </summary>
    /// <returns>
    /// true if the amendment has documents; otherwise, false.
    /// </returns>
    [SysClientCacheDataMethodAttribute(false)]
    public display PurchRFQVendHasDocuments hasDocuments()
    {
        return this.RecId && DocuRef::exist(this.DataAreaId, this.TableId, this.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createRFQSendAmendment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the RFQ amendment records to the <c>PurchRFQSendAmendment</c> and <c>Docuref</c> table
    /// </summary>
    /// <param name="_purchRFQCaseRecId">
    /// The record ID of <c>PurchRFQCaseTable</c> table that needs to be copied.
    /// </param>
    /// <param name="_purchRFQTableRecId">
    /// The record ID of the <c>PurchRFQTable</c> table that needs to be copied.
    /// </param>
    private static void createRFQSendAmendment(
        PurchRFQCaseRecId   _purchRFQCaseRecId,
        PurchRFQTableRecId  _purchRFQTableRecId)
    {
        DocuRef                 docuRef;
        DocuRef                 docuRefLocal;
        PurchRFQAmendment       purchRFQAmendment;
        PurchRFQSendAmendment   purchRFQSendAmendment;

        ttsBegin;

        delete_from purchRFQSendAmendment
            where purchRFQSendAmendment.PurchRFQTable == _purchRFQTableRecId;

        insert_recordset purchRFQSendAmendment (PurchRFQAmendment,
                                                Name,
                                                Description,
                                                PurchRFQTable)
            select RecId,
                   Name,
                   Description,
                   _purchRFQTableRecId
                from purchRFQAmendment
                    where purchRFQAmendment.PurchRFQCaseTable == _purchRFQCaseRecId;

        insert_recordset Docuref (ValueRecId,
                                   Name,
                                   TypeId,
                                   ActualCompanyId,
                                   Author,
                                   Restriction,
                                   RefTableId,
                                   RefRecId,
                                   RefCompanyId)
            select ValueRecId,
                   Name,
                   TypeId,
                   ActualCompanyId,
                   Author,
                   Restriction
                from docuRefLocal
                join TableId,
                     RecId,
                     dataAreaId
                from purchRFQSendAmendment
                    where purchRFQSendAmendment.PurchRFQTable      == _purchRFQTableRecId
                exists join purchRFQAmendment
                    where purchRFQAmendment.RecId       == docuRefLocal.RefRecId
                        && purchRFQAmendment.TableId    == docuRefLocal.RefTableId
                        && purchRFQAmendment.dataAreaId == docuRefLocal.RefCompanyId
                        && purchRFQSendAmendment.PurchRFQAmendment   == purchRFQAmendment.RecId;

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>docuAllowEdit_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if document attachments are editable for the current record.
    /// </summary>
    /// <returns>
    /// False, as editing of document attachments should not be allowed for the <c>PurchRFQSendAmendment</c> table.
    /// </returns>
    public boolean docuAllowEdit_W()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a specified record exists in the <c>PurchRFQSendAmendment</c> table.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the record to find.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        return PurchRFQSendAmendment::find(_recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record on the <c>PurchRFQSendAmendment</c> table associated with the given <c>PurchRFQSendAmendment</c> record ID.
    /// </summary>
    /// <param name="_purchRFQSendAmendmentRecId">
    /// The record ID to be used to find the record.
    /// </param>
    /// <param name="_forupdate">
    /// A boolean value that determines whether the record should be selected for update; optional.
    /// </param>
    /// <returns>
    /// A <c>PurchRFQSendAmendment</c> table buffer.
    /// </returns>
    public static PurchRFQSendAmendment find(
        PurchRFQSendAmendmentRecId _purchRFQSendAmendmentRecId,
        boolean                    _forupdate = false)
    {
        PurchRFQSendAmendment purchRFQSendAmendment;

        if (_purchRFQSendAmendmentRecId)
        {
            purchRFQSendAmendment.selectForUpdate(_forUpdate);

            select firstOnly purchRFQSendAmendment
                where purchRFQSendAmendment.RecId == _purchRFQSendAmendmentRecId;
        }

        return purchRFQSendAmendment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sendRFQAmendment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Send the RFQ amendment for the given record ID to the request for quotation detail page.
    /// </summary>
    /// <param name="_purchRFQCaseRecId">
    /// The record ID of <c>PurchRFQCaseTable</c> table that needs to be copied.
    /// </param>
    /// <param name="_purchRFQTableRecId">
    /// The record ID of the <c>PurchRFQTable</c> table that needs to be copied.
    /// </param>
    public static void sendRFQAmendment(
        PurchRFQCaseRecId   _purchRFQCaseRecId,
        PurchRFQTableRecId  _purchRFQTableRecId)
    {
        PurchRFQSendAmendment::createRFQSendAmendment(_purchRFQCaseRecId, _purchRFQTableRecId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@EPR4460247</DeveloperDocumentation>
	<Label>@EPR4460249</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>Name</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Modules>ProcurementAndSourcing</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amendment</Name>
			<Label>@EPR4460054</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchRFQAmendment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchRFQTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQAmendmentDescription</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQAmendmentName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchRFQAmendment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQAmendmentRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PurchRFQTable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchRFQTableRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PurchRFQAmendmentIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchRFQAmendment</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PurchRFQTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchRFQTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchRFQTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchRFQAmendment</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>PurchRFQAmendment</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchRFQAmendment</Name>
					<Field>PurchRFQAmendment</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchRFQTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchRFQTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchRFQTable</Name>
					<SourceEDT>PurchRFQTableRecId</SourceEDT>
					<Field>PurchRFQTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>