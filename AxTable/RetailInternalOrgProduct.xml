<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailInternalOrgProduct</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailInternalOrgProduct extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailInternalOrgProduct</c> table by using the record ID.
    /// </summary>
    /// <param name="_recId">
    /// The value of the record ID.
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean value.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailInternalOrgProduct</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailInternalOrgProduct find(RefRecId _recId, boolean _forUpdate = false)
    {
        RetailInternalOrgProduct retailInternalOrgProduct;

        if (_recId)
        {
            retailInternalOrgProduct.selectForUpdate(_forUpdate);
            select firstonly retailInternalOrgProduct
                where retailInternalOrgProduct.RecId == _recId;
        }

        return retailInternalOrgProduct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByInternalOrgProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>RetailInternalOrgProduct</c> table by using the record ID.
    /// </summary>
    /// <param name="_internalOrgRecId">
    /// The record ID of internal organization.
    /// </param>
    /// <param name="_productRecId">
    /// The record ID of product.
    /// </param>
    /// <param name="_forUpdate">
    /// A boolean value.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailInternalOrgProduct</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailInternalOrgProduct findByInternalOrgProduct(RetailInternalOrgRefRecId _internalOrgRecId, EcoResProductRecId _productRecId, boolean _forUpdate = false)
    {
        RetailInternalOrgProduct retailInternalOrgProduct;

        if (_internalOrgRecId && _productRecId)
        {
            retailInternalOrgProduct.selectForUpdate(_forUpdate);
            select firstonly retailInternalOrgProduct
                where retailInternalOrgProduct.InternalOrganization == _internalOrgRecId
                    && retailInternalOrgProduct.Product == _productRecId;
        }

        return retailInternalOrgProduct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findOrCreateByInternalOrgProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates table record in <c>RetailInternalOrgProduct</c> if not exist.
    /// </summary>
    /// <param name="_internalOrgRecId">
    /// The record ID of internal organization.
    /// </param>
    /// <param name="_productRecId">
    /// The record ID of product.
    /// </param>
    /// <returns>
    /// A <c>RetailInternalOrgProduct</c> table record.
    /// </returns>
    public static RetailInternalOrgProduct findOrCreateByInternalOrgProduct(RetailInternalOrgRefRecId _internalOrgRecId, EcoResProductRecId _productRecId)
    {
        RetailInternalOrgProduct internalOrgProduct = RetailInternalOrgProduct::findByInternalOrgProduct(_internalOrgRecId, _productRecId);

        if (!internalOrgProduct)
        {
            internalOrgProduct.initValue();
            internalOrgProduct.InternalOrganization = _internalOrgRecId;
            internalOrgProduct.Product = _productRecId;
            internalOrgProduct.insert();
        }

        return internalOrgProduct;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@REX4520062</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@REX4520061</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>InternalOrganization</TitleField1>
	<TitleField2>Product</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>InternalOrgProductIdx</ClusteredIndex>
	<Modules>ChannelManagement</Modules>
	<ReplacementKey>InternalOrgProductIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InternalOrganization</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InternalOrganization</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InternalOrganization</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Product</Name>
			<Label>@SYS133852</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Product</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InternalOrganization</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Product</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InternalOrgProductIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>InternalOrganization</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Product</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InternalOrganization</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailInternalOrganization</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InternalOrganization</Name>
					<Field>InternalOrganization</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Product</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>EcoResProduct</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Product</Name>
					<Field>Product</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>