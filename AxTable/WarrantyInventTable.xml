<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WarrantyInventTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WarrantyInventTable extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WarrantyInventTable, ApplicablePriceRangeBaseType):
                if (this.ApplicablePriceRangeBaseType == WarrantablePriceRangeBaseType::None)
                {
                    this.ApplicablePriceRangeMin = 0.0;
                    this.ApplicablePriceRangeMax = 0.0;
                }
                break;
            default:
                // no action
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(WarrantyInventTable, ApplicablePriceRangeBaseType):
                    if (this.ApplicablePriceRangeBaseType == WarrantablePriceRangeBaseType::SellingPrice)
                    {
                        ret = checkFailed("@Warranty:SellingPriceNotSupported");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static WarrantyInventTable find(ItemId _itemId, boolean _forUpdate = false)
    {
        WarrantyInventTable  warrantyInventTable;

        if (_itemId)
        {
            warrantyInventTable.selectForUpdate(_forUpdate);

            select firstonly warrantyInventTable
                where warrantyInventTable.ItemId == _itemId;
        }

        return warrantyInventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static boolean exist(ItemId  _itemId)
    {
        return _itemId && (select RecId from WarrantyInventTable where WarrantyInventTable.ItemId == _itemId).RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@Warranty:WarrantyInventTableDevDoc</DeveloperDocumentation>
	<FormRef>EcoResProductInformation</FormRef>
	<Label>@Warranty:WarrantyInventTable</Label>
	<ListPageRef>EcoResProductDetailsExtendedGrid</ListPageRef>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Main</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>ItemIdIndex</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<DataSharingType>Single</DataSharingType>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<PrimaryIndex>ItemIdIndex</PrimaryIndex>
	<ReplacementKey>ItemIdIndex</ReplacementKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>WarrantablePriceRangeGroup</Name>
			<Label>@Warranty:WarrantablePriceRange</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ApplicablePriceRangeBaseType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApplicablePriceRangeMin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApplicablePriceRangeMax</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ApplicablePriceRangeBaseType</Name>
			<EnumType>WarrantablePriceRangeBaseType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ApplicablePriceRangeMin</Name>
			<ExtendedDataType>WarrantablePriceRangeLowerLimit</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ApplicablePriceRangeMax</Name>
			<ExtendedDataType>WarrantablePriceRangeUpperLimit</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ItemIdIndex</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ItemId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>Item</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>