<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgPayStatTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JmgPayStatTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>adjustmentDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>Adjustment</c> field of the <c>JmgPayStatTrans</c> record formatted as a string.
    /// </summary>
    /// <returns>
    /// the value of the <c>Adjustment</c> field formatted as a string.
    /// </returns>
    public display JmgLabelAdjustment adjustmentDisplay()
    {
        return JmgProfileSeconds::formattedSeconds(this.Adjustment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>change</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the total change in time from the <c>JmgPayStatTrans</c> record formatted as a string.
    /// </summary>
    /// <returns>
    /// the total change in time formatted as a string.
    /// </returns>
    public display JmgLabelChange change()
    {
        return JmgProfileSeconds::formattedSeconds(this.PaySeconds - this.OpeningBalance - this.Adjustment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>emplName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the name of the worker that is associated to the <c>JmgPayStatTrans</c> record.
    /// </summary>
    /// <returns>
    /// The name of the worker that is associated to the <c>JmgPayStatTrans</c> record.
    /// </returns>
    public display DirPartyName emplName()
    {
        return HcmWorker::worker2Name(this.Worker);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the <c>JmgPayStatTrans</c> record in the database.
    /// </summary>
    /// <remarks>
    /// Related transactions are also updated, if the calculated time is set to be
    /// transferred from one period to the next.
    /// </remarks>
    public void insert()
    {
        int changeAmount;
        boolean transfer;
        transfer = false;
        changeAmount = this.PaySeconds;

        // Find the opening balance
        if (JmgPayStatGroup::find(this.PayStatGroupId).Transfer)
        {
            this.OpeningBalance =
                (select firstonly PaySeconds from jmgPayStatTrans
                    order by ToDate desc
                    where jmgPayStatTrans.PayStatGroupId    == this.PayStatGroupId  &&
                          jmgPayStatTrans.PayCostType       == this.PayCostType     &&
                          jmgPayStatTrans.Worker            == this.Worker          &&
                          jmgPayStatTrans.ToDate            <  this.FromDate).PaySeconds;
            transfer = true;
        }
        else
        {
            this.OpeningBalance = 0;
        }

        this.PaySeconds = this.OpeningBalance + this.Adjustment + this.PaySeconds;
        super();

        // Update later transactions
        if (transfer)
        {
            this.updateLaterTrans(changeAmount);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>openingBalanceDisplay</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>OpeningBalance</c> field of the <c>JmgPayStatTrans</c> record formatted as a string.
    /// </summary>
    /// <returns>
    /// the value of the <c>OpeningBalance</c> field formatted as a string.
    /// </returns>
    public display JmgLabelOpeningBalance openingBalanceDisplay()
    {
        return JmgProfileSeconds::formattedSeconds(this.OpeningBalance);
    }

]]></Source>
			</Method>
			<Method>
				<Name>payCostTypeDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the description of the pay cost type, which is associated to the <c>JmgPayStatTrans</c> record.
    /// </summary>
    /// <returns>
    /// the description of the pay cost type, which is associated to the <c>JmgPayStatTrans</c> record.
    /// </returns>
    public display JmgDescription payCostTypeDescription()
    {
        JmgPayTable     jmgPayTable;

        jmgPayTable = JmgPayTable::find(this.PayCostType);
        return jmgPayTable.Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>payTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>PaySeconds</c> field of the <c>JmgPayStatTrans</c> record formatted as a string.
    /// </summary>
    /// <returns>
    /// the value of the <c>PaySeconds</c> field formatted as a string.
    /// </returns>
    public display JmgLabelSecondsPay payTime()
    {
        return JmgProfileSeconds::formattedSeconds(this.PaySeconds);
    }

]]></Source>
			</Method>
			<Method>
				<Name>statName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the name of the pay statistics group, which is associated to the <c>JmgPayStatTrans</c>
    /// record.
    /// </summary>
    /// <returns>
    /// The name of the pay statistics group that is associated with the <c>JmgPayStatTrans</c> record.
    /// </returns>
    public display JmgDescription statName()
    {
        return JmgPayStatGroup::find(this.PayStatGroupId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>JmgPayStatTrans</c> record in the database.
    /// </summary>
    /// <remarks>
    /// If the total calculated time are to be transferred to the next period, these transactions are
    /// updated as well.
    /// </remarks>
    public void update()
    {
        int changeAmount;

        if (this.orig().Adjustment != this.Adjustment)
        {
            this.PaySeconds += this.Adjustment - this.orig().Adjustment;
        }

        if (JmgPayStatGroup::find(this.PayStatGroupId).Transfer)
        {
            changeAmount = this.PaySeconds - this.orig().PaySeconds;
            super();
            this.updateLaterTrans(changeAmount);
        }
        else
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLaterTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the balance of all transactions later than this with the specified amount.
    /// </summary>
    /// <param name="amount">
    /// The amount to add to later transactions.
    /// </param>
    private void updateLaterTrans(JmgSeconds amount)
    {
        JmgPayStatTrans jmgPayStatTrans;
        ttsbegin;
        while select forupdate jmgPayStatTrans
            where jmgPayStatTrans.PayStatGroupId == this.PayStatGroupId &&
                  jmgPayStatTrans.PayCostType == this.PayCostType &&
                  jmgPayStatTrans.Worker == this.Worker &&
                  jmgPayStatTrans.FromDate > this.ToDate
        {
            jmgPayStatTrans.PaySeconds += amount;
            jmgPayStatTrans.OpeningBalance += amount;
            jmgPayStatTrans.doUpdate();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSeconds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates <c>JmgPayStatTrans</c> records with the specified amount of seconds, for the specified pay
    /// cost type, worker, and date.
    /// </summary>
    /// <param name="_jmgPayCostType">
    /// The pay cost type, which the <c>JmgPayStatTrans</c> records must refer to in order to be updated.
    /// </param>
    /// <param name="_worker">
    /// The ID of the worker, which the <c>JmgPayStatTrans</c> records must refer to in order to be updated.
    /// </param>
    /// <param name="_date">
    /// The date, which the date interval on the <c>JmgPayStatTrans</c> records must contain in order to be
    /// updated.
    /// </param>
    /// <param name="_seconds">
    /// The amount of seconds to add to the balance on the <c>JmgPayStatTrans</c> records.
    /// </param>
    /// <exception cref="M:Exception::Error">
    /// A pay statistics group refers to a period that does not contain any period lines, which contains
    /// the specified date.
    /// </exception>
    static void updateSeconds(JmgPayCostType _jmgPayCostType, JmgWorkerRecId _worker, JmgDate _date, JmgSeconds _seconds)
    {
        JmgPayStatConfig jmgPayStatConfig;
        JmgPayStatTrans  jmgPayStatTrans;
        ProjPeriodLine   projPeriodLine;

        while select ProjPeriodId, PayStatGroupId
            from  jmgPayStatConfig
            where jmgPayStatConfig.PayCostType == _jmgPayCostType
        {
            projPeriodLine = ProjPeriodLine::findFromPeriod(jmgPayStatConfig.ProjPeriodId, _date);

            if (!projPeriodLine)
            {
                throw error(strfmt("@SYS39744", jmgPayStatConfig.ProjPeriodId, date2StrUsr(_date, DateFlags::FormatAll)));
            }

            select firstonly forupdate jmgPayStatTrans
                where jmgPayStatTrans.PayCostType       == _jmgPayCostType
                    && jmgPayStatTrans.Worker           == _worker
                    && jmgPayStatTrans.PayStatGroupId   == jmgPayStatConfig.PayStatGroupId
                    && jmgPayStatTrans.FromDate         == projPeriodLine.PeriodFrom
                    && jmgPayStatTrans.ToDate           == projPeriodLine.PeriodTo;

            if (jmgPayStatTrans)
            {
                jmgPayStatTrans.PaySeconds += _seconds;
                jmgPayStatTrans.update();
            }
            else
            {
                jmgPayStatTrans.PayCostType    = _jmgPayCostType;
                jmgPayStatTrans.Worker         = _worker;
                jmgPayStatTrans.PayStatGroupId = jmgPayStatConfig.PayStatGroupId;
                jmgPayStatTrans.FromDate       = projPeriodLine.PeriodFrom;
                jmgPayStatTrans.ToDate         = projPeriodLine.PeriodTo;
                jmgPayStatTrans.PaySeconds     = _seconds;
                jmgPayStatTrans.insert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>JmgPayroll</ConfigurationKey>
	<DeveloperDocumentation>@SYS317282</DeveloperDocumentation>
	<Label>@SYS39116</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>PayStatGroupId</TitleField1>
	<TitleField2>PayCostType</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>GroupTypeIdx</ClusteredIndex>
	<Modules>ProductionControl</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PayStatGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayCostType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DateGroup</Name>
			<Label>@SYS7402</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ToDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayCostType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PayStatGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Time</Name>
			<Label>@SYS8827</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PaySeconds</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OpeningBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Adjustment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Adjustment</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgSeconds</ExtendedDataType>
			<Label>@SYS16104</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>FromDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>FromDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>OpeningBalance</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgSeconds</ExtendedDataType>
			<Label>@SYS22797</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayCostType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgPayCostType</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>PaySeconds</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgSeconds</ExtendedDataType>
			<Label>@SYS38752</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PayStatGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>JmgPayStatGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ToDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ToDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Worker</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>JmgWorkerRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>HcmWorkerIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Worker</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>GroupTypeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PayStatGroupId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>PayCostType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>TypeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PayCostType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>HcmWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>HcmWorker</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>HcmWorker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>HcmWorker_JmgPayStatTrans</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Worker</Name>
					<Field>Worker</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>JmgEmployee</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>JmgEmployee</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Worker</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PayrollStatistic</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Worker</Name>
					<Field>Worker</Field>
					<RelatedField>Worker</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>JmgPayStatConfig</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>JmgPayStatConfig</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>PayrollStatisticsSetup</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PayrollStatistic</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PayCostType</Name>
					<Field>PayCostType</Field>
					<RelatedField>PayCostType</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PayStatGroupId</Name>
					<Field>PayStatGroupId</Field>
					<RelatedField>PayStatGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>JmgPayStatGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>JmgPayStatGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PayStatGroupId</Name>
					<Field>PayStatGroupId</Field>
					<RelatedField>PayStatGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>GroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>JmgPayTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>JmgPayTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PayCostType</Name>
					<Field>PayCostType</Field>
					<RelatedField>PayCostType</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TypeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>