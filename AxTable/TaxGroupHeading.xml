<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxGroupHeading</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxGroupHeading extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();
        this.TaxReverseOnCashDisc = TaxParameters::find().ReverseOnCashDisc;
        this.TaxPrintDetail = TaxPrintDetail::TaxCode;
        if (TaxParameters::find().PurchTaxOnOperations)
        {
            this.TaxGroupRounding = TaxGroupRounding::TaxCodeSet;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    public void renamePrimaryKey()
    {
        boolean             isVirtual;
        DataArea            company;
        TaxGroupHeading     originalTaxGroupHeading;
        VirtualDataAreaList virtualCompanies;
        container           concreteCompanies;

        if (isConfigurationkeyEnabled(configurationKeyNum(Retail)))
        {
            RetailConnActionManagement::errorOnRename(this);
        }

        // Capture the renamed record
        originalTaxGroupHeading = this.orig();

        super();

        select firstonly company where company.Id == this.DataAreaId;
        isVirtual = company.IsVirtual;

        if (isVirtual)
        {
            // TaxGroupHeading is in a virtual company

            // Capture the concrete companies that are part of the TaxGroupHeading's virtual company
            while select Id from virtualCompanies
                where virtualCompanies.VirtualDataArea == this.DataAreaId
            {
                concreteCompanies += virtualCompanies.Id;
            }

            this.renameTaxGroupForLedgerJournalTrans(this.TaxGroup, originalTaxGroupHeading.TaxGroup, concreteCompanies);
        }
        else
        {
            // TaxGroupHeading that is being updated is not in a virtual company
            // If intercompany is enabled, must update the intercompany transactions for all other companies
            if (isConfigurationkeyEnabled(configurationkeynum(LedgerAdvIntercompanyAccounting)))
            {
                this.renameTaxGroupForLedgerJournalTrans(this.TaxGroup, originalTaxGroupHeading.TaxGroup, [originalTaxGroupHeading.DataAreaId]);
                this.renameTaxGroupForLedgerJournalTransCrossCompany(this.TaxGroup, originalTaxGroupHeading.TaxGroup);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>renameTaxGroupForLedgerJournalTrans</Name>
				<Source><![CDATA[
    private void renameTaxGroupForLedgerJournalTrans(TaxGroup _newTaxGroup, TaxGroup _oldTaxGroup, container _dataAreaIds)
    {
        DataArea company;
        LedgerJournalTrans ledgerJournalTrans;

        while select Id from company
            where company.IsVirtual == false
        {
            CompanyId outerCompany = company.Id;

            // Update related records for each concrete company
            changecompany(outerCompany)
            {
                // Reset the ledgerJournalTrans
                ledgerJournalTrans = null;
                ledgerJournalTrans.skipDataMethods(true);

                // Loop over companies in the company container
                for (int i = 1; i <= conLen(_dataAreaIds); i++)
                {
                    // Update records with this TaxGroupHeading as primary account
                    update_recordset ledgerJournalTrans
                        setting TaxGroup = _newTaxGroup
                    where ledgerJournalTrans.Company == conPeek(_dataAreaIds, i) &&
                        ledgerJournalTrans.TaxGroup == _oldTaxGroup;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>renameTaxGroupForLedgerJournalTransCrossCompany</Name>
				<Source><![CDATA[
    private void renameTaxGroupForLedgerJournalTransCrossCompany(TaxGroup _newTaxGroup, TaxGroup _oldTaxGroup)
    {
        if (TaxGroupHeadingCrossCompanyFlight::instance().isEnabled())
        {
            SysDataSharingPolicy policy = SysDataSharingPolicy::findSharingPolicyByCompanyAndTable(curExt(), tableId2name(this.TableId));
            if (policy.RecId && policy.IsEnabled)
            {
                Query query = SysDataSharingCrossCompanyValidatorQueryBuilder::buildQuery(this, policy.RecId);
                QueryRun queryRun = new QueryRun(query);
        
                container sharingCompanies;
                while (queryRun.Next())
                {
                    TaxGroupHeading taxGroupHeading = queryRun.get(this.TableId);
                    DataAreaId dataAreaId = taxGroupHeading.DataAreaId;
                    if (taxGroupHeading && dataAreaId)
                    {
                        sharingCompanies += dataAreaId;
                    }
                }

                this.renameTaxGroupForLedgerJournalTrans(this.TaxGroup, _oldTaxGroup, sharingCompanies);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(TaxGroup _taxGroup )
    {
        boolean ret = true;

        if (!TaxGroupHeading::exist(_taxGroup))
        {
            ret = checkFailed(strfmt(TaxGroupHeading::txtNotExist(), _taxGroup));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(TaxGroup _taxGroup )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     taxGroupHeading
                 where
                     taxGroupHeading.TaxGroup == _taxGroup).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static TaxGroupHeading find(
        TaxGroup _taxGroup ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxGroupHeading taxGroupHeading;

        taxGroupHeading.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxGroupHeading.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            taxGroupHeading
            where
            taxGroupHeading.TaxGroup == _taxGroup;

        return taxGroupHeading;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    public static TaxGroupHeading findRecId(
        recId   _recId,
        boolean _forUpdate = false)
    {
        TaxGroupHeading taxGroupHeading;

        if (_recId)
        {
            taxGroupHeading.selectForUpdate(_forUpdate);

            select firstonly taxGroupHeading
                where taxGroupHeading.RecId == _recId;
        }

        return taxGroupHeading;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findTaxGroupDebtsTransit_RU</Name>
				<Source><![CDATA[
    public static TaxGroup findTaxGroupDebtsTransit_RU(TaxGroup _taxGroup)
    {
        TaxGroupHeading taxGroupHeading;
        TaxGroupData    taxGroupData;

        if (!_taxGroup)
        {
            return '';
        }

        select firstonly TaxGroupDebtsTransit_RU from taxGroupHeading
            where taxGroupHeading.TaxGroup == _taxGroup;

        if (!taxGroupHeading.TaxGroupDebtsTransit_RU)
        {
            throw error(strFmt("@GLS116070", _taxGroup));
        }

        select firstonly taxGroupData
            where taxGroupData.TaxGroup == taxGroupHeading.TaxGroupDebtsTransit_RU &&
                  !taxGroupData.ExemptTax;

        if (taxGroupData)
        {
            throw error(strFmt("@GLS116071", taxGroupHeading.TaxGroupDebtsTransit_RU));
        }

        return taxGroupHeading.TaxGroupDebtsTransit_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxGroupLookup</Name>
				<Source><![CDATA[
    static void taxGroupLookup(Object              _ctrl,
                                      CompanyId           _company        = curext())
    {
        Args                    args;
        FormRun                 formRun;

        if (! _company)
        {
            _company = curext();
        }
        else
        {
            if (! xDataArea::exist(_company))
            {
                throw error(strfmt("@SYS10666",_company));
            }
        }

        changecompany(_company)
        {
            args     = new Args();
            args.name(formstr(TaxGroupLookup));
            args.caller(_ctrl);
            formRun      = classfactory.formRunClass(args);
            formRun.init();
            _ctrl.performFormLookup(formRun);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@SYS21970";
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate if MCRState and MCRCountry value combination exists, If not retrun false.
    /// </summary>
    /// <returns>Return true only if value combination exists.</returns>
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret && this.MCRState != '' && this.MCRCountry != '')
        {
            LogisticsAddressState logisticsAddressState = LogisticsAddressState::find(this.MCRCountry, this.MCRState);

            if (!logisticsAddressState)
            {
                ret = checkFailed(strFmt('@Retail:RetailTaxGroupFormStateAndCountryCombinationError', this.MCRState, this.MCRCountry));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<DeveloperDocumentation>@SYS126031</DeveloperDocumentation>
	<FormRef>TaxGroup</FormRef>
	<Label>@SYS55329</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>TaxGroup</TitleField1>
	<TitleField2>TaxGroupName</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>TaxGroupIdx</ClusteredIndex>
	<DataSharingType>Duplicate</DataSharingType>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Tax</Modules>
	<PrimaryIndex>TaxGroupIdx</PrimaryIndex>
	<ReplacementKey>TaxGroupIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>TaxGroupData</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>TaxGroupData</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>TaxGroupTaxJurisdiction</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>TaxGroupTaxJurisdiction</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroupName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRCity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRCounty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRZipCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRCountry</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchField1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchField2</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroupName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CashDiscount</Name>
			<Label>@SYS4376</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxReverseOnCashDisc</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DateValidation_W</Name>
			<Label>@GLS111823</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FillVATDueDate_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FillSalesDate_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MandatorySalesDate_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FillVATDueDateBasedOn</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FillVATDueDatePeriod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FillVATDueDatePeriodNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS6303</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroupName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchField1</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SearchField2</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Invoicing</Name>
			<Label>@SYS5779</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxPrintDetail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SplitPayment_IT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>RoundOff</Name>
			<Label>@SYS8172</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroupRounding</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Setup</Name>
			<Label>@SYS91159</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxGroupSetup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EUTrade_W</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroupDebtsTransit_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsMandatoryServiceTariff_PL</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>UnGrouped</Name>
			<Label>@MCR23892</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MCRZipCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRCity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRCountry</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MCRCounty</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Source</Name>
			<Label>@SYS11258</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Source</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EUTrade_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<CountryRegionCodes>CZ,HU,PL</CountryRegionCodes>
			<Label>@SYS6320</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FillSalesDate_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>FillSalesDate_W</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FillVATDueDate_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>FillVATDueDate_W</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsMandatoryServiceTariff_PL</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MandatoryServiceTariff</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>MandatorySalesDate_W</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MandatorySalesDate_W</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MCRCity</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressCityName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MCRCountry</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AddressCountryRegionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MCRCounty</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AddressCountyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MCRState</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressStateId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>MCRZipCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressZipCodeId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SearchField1</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@SYS56536</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SearchField2</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@SYS56538</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroupDebtsTransit_RU</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroupDebtsTransit_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroupName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroupName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxGroupRounding</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxGroupRounding</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxGroupSetup</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxGroupSetup</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxPrintDetail</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxPrintDetail</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxReverseOnCashDisc</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxReverseOnCashDisc</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SplitPayment_IT</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>SplitPayment_IT</ExtendedDataType>
			<FeatureClass>TaxBookToggle</FeatureClass>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FillVATDueDateBasedOn</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>FillVATDueDateBasedOn</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FillVATDueDatePeriod</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>FillVATDueDatePeriod</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>FillVATDueDatePeriodNumber</Name>
			<ExtendedDataType>FillVATDueDatePeriodNumber</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Source</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>System Metadata</AssetClassification>
			<EnumType>TaxMasterDataSource</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxGroup</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MCRCity</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>MCRCity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MCRState</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>MCRState</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MCRCounty</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>MCRCounty</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MCRCountry</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>MCRCountry</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>MCRZipCode</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>MCRZipCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>County</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>LogisticsAddressCounty</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MCRCounty</Name>
					<Field>MCRCounty</Field>
					<RelatedField>CountyId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LogisticsAddressCountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MCRCountry</Name>
					<SourceEDT>AddressCountryRegionId</SourceEDT>
					<Field>MCRCountry</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>State</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>LogisticsAddressState</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>MCRState</Name>
					<Field>MCRState</Field>
					<RelatedField>StateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupDebtsTransit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroupDebtsTransit_RU</Name>
					<SourceEDT>TaxGroupDebtsTransit_RU</SourceEDT>
					<Field>TaxGroupDebtsTransit_RU</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>