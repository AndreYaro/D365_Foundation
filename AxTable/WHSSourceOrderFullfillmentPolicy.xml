<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSSourceOrderFullfillmentPolicy</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSSourceOrderFullfillmentPolicy extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>WHSSourceOrderFullfillmentPolicy</c> table.
    /// </summary>
    /// <param name="_orderNumber">
    /// The specified order number
    /// </param>
    /// <param name="_sourceOrderDocumentType">
    /// The specified order type
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>WHSSourceOrderFullfillmentPolicy</c> table; otherwise, an empty record.
    /// </returns>
    public static WHSSourceOrderFullfillmentPolicy find(WHSOrderNum _orderNumber,
                                     WHSSourceOrderDocumentType _sourceOrderDocumentType,
                                     boolean _forupdate = false)
    {
        WHSSourceOrderFullfillmentPolicy whsSourceOrderFullfillmentPolicy;

        if (_orderNumber)
        {
            whsSourceOrderFullfillmentPolicy.selectForUpdate(_forupdate);

            select firstonly whsSourceOrderFullfillmentPolicy
                where whsSourceOrderFullfillmentPolicy.OrderNumber == _orderNumber
                    && whsSourceOrderFullfillmentPolicy.SourceOrderDocumentType == _sourceOrderDocumentType;
                    
        }

        return whsSourceOrderFullfillmentPolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>WHSSourceOrderFullfillmentPolicy</c> table exists.
    /// </summary>
    /// <param name="_orderNumber">
    /// The specified order number
    /// </param>
    /// <param name="_sourceOrderDocumentType">
    /// The specified order type
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(WHSOrderNum _orderNumber, WHSSourceOrderDocumentType _sourceOrderDocumentType)
    {
        return _orderNumber &&
               (select firstonly RecId from WHSSourceOrderFullfillmentPolicy 
                    where WHSSourceOrderFullfillmentPolicy.OrderNumber == _orderNumber 
                        && WHSSourceOrderFullfillmentPolicy.SourceOrderDocumentType == _sourceOrderDocumentType).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrderFulfillment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update value if the specified record in the <c>WHSSourceOrderFullfillmentPolicy</c> table exists and add value if not
    /// </summary>
    /// <param name="_fulfillmentPolicy">
    /// fulfillmentPolicy to set
    /// </param>
    /// <param name="_orderNumber">
    /// The specified order number
    /// </param>
    /// <param name="_sourceOrderDocumentType">
    /// The specified order type
    /// </param>
    /// <returns>
    /// A record in the <c>WHSSourceOrderFullfillmentPolicy</c> table; otherwise, an empty record.
    /// </returns>
    public static WHSSourceOrderFullfillmentPolicy setOrderFulfillment(WHSFulfillmentPolicy _fulfillmentPolicy, WHSOrderNum _orderNumber, WHSSourceOrderDocumentType _sourceOrderDocumentType)
    {
        ttsbegin;
        WHSSourceOrderFullfillmentPolicy whsSourceOrderFullfillmentPolicy = WHSSourceOrderFullfillmentPolicy::find(_orderNumber, _sourceOrderDocumentType, true);
        if (!whsSourceOrderFullfillmentPolicy)
        {
            whsSourceOrderFullfillmentPolicy.fulfillmentPolicy = _fulfillmentPolicy.RecId;
            whsSourceOrderFullfillmentPolicy.OrderNumber = _orderNumber;
            whsSourceOrderFullfillmentPolicy.SourceOrderDocumentType = _sourceOrderDocumentType;
            whsSourceOrderFullfillmentPolicy.insert();            
        }
        else if (whsSourceOrderFullfillmentPolicy.FulfillmentPolicy != _fulfillmentPolicy.RecId)
        {
            whsSourceOrderFullfillmentPolicy.FulfillmentPolicy = _fulfillmentPolicy.RecId;
            whsSourceOrderFullfillmentPolicy.update();
        }
        ttscommit;

        return whsSourceOrderFullfillmentPolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fulfillmentPolicy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the fulfillment policy for the record.
    /// </summary>
    /// <returns>
    /// The fulfillment policy for the record. If not policy is assigned to the record, an empty buffer is returned.
    /// </returns>
    public WHSFulfillmentPolicy fulfillmentPolicy()
    {
        return WHSFulfillmentPolicy::find(this.FulfillmentPolicy);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        WHSSourceOrderFullfillmentPolicyCache::construct().clearCache();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        WHSSourceOrderFullfillmentPolicyCache::construct().clearCache();

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>OrderNumber</TitleField1>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>OrderIdTypeIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<PrimaryIndex>OrderIdTypeIdx</PrimaryIndex>
	<ReplacementKey>OrderIdTypeIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceOrderDocumentType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrderNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSOrderNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SourceOrderDocumentType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>WHSSourceOrderDocumentType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>FulfillmentPolicy</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSFulfillmentPolicyRecId</ExtendedDataType>
			<Label>@SCM:WHSSourceOrderFulfillmentPolicyLabel</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>OrderIdTypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>OrderNumber</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceOrderDocumentType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>FulfillmentPolicyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>FulfillmentPolicy</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSFulfillmentPolicy</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>WHSFulfillmentPolicy</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>FulfillmentPolicy</Name>
					<Field>FulfillmentPolicy</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>OrderNumber</Name>
					<SourceEDT>WHSOrderNum</SourceEDT>
					<Field>OrderNumber</Field>
					<RelatedField>SalesId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>SourceOrderDocumentType</Name>
					<Field>SourceOrderDocumentType</Field>
					<ValueStr>WHSSourceOrderDocumentType::SalesOrder</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>