<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchParmTable_PaymentDisbursement</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchParmTable_PaymentDisbursement extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean ret;

        ret = super();
        if (ret)
        {
            if ((this.AllocationPercentage <= 0) || (this.AllocationPercentage > 100))
            {
                ret = false;
                error("@SYS31248");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record exists in the <c>PurchParmTable_PaymentDisbursement</c> table; if not, an error message is displayed.
    /// </summary>
    /// <param name="_purchParmTable_PaymentDisbursementRecId">
    /// The record ID of the <c>PurchParmTable_PaymentDisbursement</c> table record to be checked for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>

    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean checkExist( recId _purchParmTable_PaymentDisbursementRecId)
    {
        boolean ret = true;
        ;

        if (!PurchParmTable_PaymentDisbursement::exist(_purchParmTable_PaymentDisbursementRecId))
        {
            ret = checkFailed(strFmt(PurchParmTable_PaymentDisbursement::txtNotExist(), _purchParmTable_PaymentDisbursementRecId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>PurchParmTable_PaymentDisbursement</c> table exists.
    /// </summary>
    /// <param name="_purchParmTable_PaymentDisbursementRecId">
    /// The record ID of the <c>PurchParmTable_PaymentDisbursement</c> table to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists, otherwise, false.
    /// </returns>

    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(recId _purchParmTable_PaymentDisbursementRecId)
    {
        boolean found;
        ;

        found = (select firstonly
                     RecId
                 from
                     purchParmTable_PaymentDisbursement
                 where
                     purchParmTable_PaymentDisbursement.RecId == _purchParmTable_PaymentDisbursementRecId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>PurchParmTable_PaymentDisbursement</c> table.
    /// </summary>
    /// <param name="_purchParmTable_PaymentDisbursementRecId">
    /// The recId of the <c>PurchParmTable_PaymentDisbursement</c> table to find.
    /// </param>
    /// <param name="_forupdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    /// The concurrency model option to be used when reading the record; optional.
    /// </param>
    /// <returns>
    /// A record of the <c>PurchParmTable_PaymentDisbursement</c> table if found; otherwise, an empty buffer.
    /// </returns>

    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static PurchParmTable_PaymentDisbursement find(
        recId                   _purchParmTable_PaymentDisbursementRecId,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        PurchParmTable_PaymentDisbursement      purchParmTable_PaymentDisbursement;
        ;

        purchParmTable_PaymentDisbursement.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            purchParmTable_PaymentDisbursement.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            purchParmTable_PaymentDisbursement
        where
            purchParmTable_PaymentDisbursement.RecId == _purchParmTable_PaymentDisbursementRecId;

        return purchParmTable_PaymentDisbursement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCountOfPurchPaymDisbursement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the records count of the <c>PurchParmTable_PaymentDisbursement</c> table.
    /// </summary>
    /// <param name="_parmId">
    /// The _parmId of the <c>PurchParmTable</c> table to retrieves the count of the <c>PurchParmTable_PaymentDisbursement</c> table records.
    /// </param>
    /// <param name="_tableRefId">
    /// The _tableRefId of the <c>PurchParmTable</c> table to retrieves the count of <c>PurchParmTable_PaymDisbursement</c> table records.
    /// </param>
    /// <returns>
    /// A record count of the <c>PurchParmTable_PaymentDisbursement</c> table if found; otherwise, zero.
    /// </returns>

    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static int getCountOfPurchPaymDisbursement(ParmId _parmId, TradeLineRefId _tableRefId)
    {
        PurchParmTable_PaymentDisbursement paymentDisbursement;
        ;
         select count(RecId) from paymentDisbursement
            where paymentDisbursement.ParmId == _parmId &&
            paymentDisbursement.TableRefId   == _tableRefId;

        return any2int(paymentDisbursement.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSumOfAllocationPercentage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sum of the <c>AllocationPercentage</c> field of the <c>PurchParmTable_PaymentDisbursement</c> table.
    /// </summary>
    /// <param name="_parmId">
    /// The _parmId of the <c>PurchParmTable</c> table to retrieves the sum of the <c>PurchParmTable_PaymentDisbursement</c> table records.
    /// </param>
    /// <param name="_tableRefId">
    /// The _tableRefId of the <c>PurchParmTable</c> table to retrieves the sum of <c>PurchParmTable_PaymentDisbursement</c> table records.
    /// </param>
    /// <returns>
    /// A sum of the <c>PurchParmTable_PaymentDisbursement</c> table if found; otherwise, zero.
    /// </returns>

    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static Percent getSumOfAllocationPercentage(ParmId _parmId, TradeLineRefId _tableRefId)
    {
        PurchParmTable_PaymentDisbursement paymentDisbursement;
        ;
         select sum(AllocationPercentage) from paymentDisbursement
            where paymentDisbursement.ParmId == _parmId &&
            paymentDisbursement.TableRefId   == _tableRefId;

        return paymentDisbursement.AllocationPercentage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static TxtNotExist txtNotExist()
    {
        return "@SYS94719";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PublicSector</ConfigurationKey>
	<DeveloperDocumentation>@SPS241</DeveloperDocumentation>
	<EntityRelationshipType>Relationship</EntityRelationshipType>
	<Label>@SPS239</Label>
	<TableGroup>Parameter</TableGroup>
	<TitleField1>VendAccount</TitleField1>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendBankAccountID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllocationPercentage</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendBankAccountID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PaymentDisbursement</Name>
			<Label>@SPS235</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendBankAccountID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AllocationPercentage</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AllocationPercentage</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendPercentageAllocation</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ParmId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ParmId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TableRefId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TradeLineRefId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccount</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendBankAccountID</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendBank</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ParmIdTableRefIdVendBankIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>ParmId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TableRefId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendBankAccountID</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>PurchParmTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>PurchParmTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>PurchParmTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchParmTable_PurchParmTable_PaymentDisbursement</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ParmId</Name>
					<Field>ParmId</Field>
					<RelatedField>ParmId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccount</Name>
					<Field>VendAccount</Field>
					<RelatedField>InvoiceAccount</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TableRefId</Name>
					<Field>TableRefId</Field>
					<RelatedField>TableRefId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendBankAccount</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendBankAccount</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendBankAccount</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendBankAccount_PurchParmTable_PaymentDisbursement</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendBankAccountID</Name>
					<Field>VendBankAccountID</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccount</Name>
					<Field>VendAccount</Field>
					<RelatedField>VendAccount</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccount</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>VendAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>