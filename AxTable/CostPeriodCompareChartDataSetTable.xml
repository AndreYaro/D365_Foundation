<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostPeriodCompareChartDataSetTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CostPeriodCompareChartDataSetTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateCache</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the cost calculation comparison data cache in a format consumable by a chart control.
    /// </summary>
    /// <param name = "_costPeriodCompareArgs">Cost calculation comparison data.</param>
    /// <param name = "_contextId">The context id for the cached data.</param>
    public static void updateCache(CostPeriodCompareArgs _costPeriodCompareArgs, SysDataCacheContextId _contextId)
    {
        CostEstimatedRealizedFullView costCalculation;
        CostCalculationPeriodCompareTmp  comparisonData;

        CostPeriodCompareChartDataSetTable::clearCache(_contextId);

        insert_recordset comparisonData (CostGroupType, CostEstimated, CostRealized)
        select CostGroupType, sum(CostEstimated), sum(CostRealized) from costCalculation
            group by costCalculation.CostGroupType
            where costCalculation.date >= _costPeriodCompareArgs.parmFromDate() && costCalculation.date <= _costPeriodCompareArgs.parmToDate()
               && costCalculation.IsSplit == false;

        while select comparisonData
        {
            CostPeriodCompareChartDataSetTable::insertRecord(_contextId, comparisonData, comparisonData.CostEstimated, 1, "@CostManagement:CostManagement_Enum_CostCalculationState_Estimated");
            CostPeriodCompareChartDataSetTable::insertRecord(_contextId, comparisonData, comparisonData.CostRealized, 2, "@CostManagement:CostManagement_Enum_CostCalculationState_Realized");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertRecord</Name>
				<Source><![CDATA[
    private static void  insertRecord(
                    SysDataCacheContextId               _contextId,
                    CostCalculationPeriodCompareTmp     _comparisonData,
                    CostAmount                          _costAmount,
                    TmpLineNum                          _dataSeriesSort,
                    str                                 _dataSeries)
    {
        CostPeriodCompareChartDataSetTable    chartData;

        chartData.SysDataCacheContextId = _contextId;
        chartData.CostGroupType    = enum2Str(_comparisonData.CostGroupType);
        chartData.Cost             = CurrencyExchangeHelper::amount(_costAmount);
        chartData.DataSeriesSort   = _dataSeriesSort;
        chartData.DataSeries       = _dataSeries;
        chartData.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearCache</Name>
				<Source><![CDATA[
    /// <summary>
    /// Cleans up the cache based on context.
    /// </summary>
    /// <param name = "_contextId">The context id for the cached data to be removed from the cache.</param>
    public static void clearCache(SysDataCacheContextId _contextId)
    {
        CostPeriodCompareChartDataSetTable dataSetTable;

        ttsbegin;

        delete_from dataSetTable
            where dataSetTable.SysDataCacheContextId == _contextId;

        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Modules>Inventory</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Cost</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CostAmount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DataSeriesSort</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TmpLineNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DataSeries</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>String50</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SysDataCacheContextId</Name>
			<AssetClassification>Customer Content</AssetClassification>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CostGroupType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>String50</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings>
		<AxTableMapping>
			<MappingTable>SysDataSetCacheTableMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Id</MapField>
					<MapFieldTo>RecId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SysDataCacheContextId</MapField>
					<MapFieldTo>SysDataCacheContextId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations />
	<StateMachines />
</AxTable>