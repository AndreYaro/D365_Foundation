<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VATCSTransDataTmp_CZ</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VATCSTransDataTmp_CZ extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromCustVendInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes from <c>CustVendInvoiceJour</c>.
    /// </summary>
    /// <param name="_custVendInvoiceJour">
    /// <c>CustVendInvoiceJour</c> record.
    /// </param>
    public void initFromCustVendInvoiceJour(CustVendInvoiceJour _custVendInvoiceJour)
    {
        ProjInvoiceJour projInvoiceJour;
        
        this.VATNum = _custVendInvoiceJour.VATNum;
        
        if (_custVendInvoiceJour.TableId == tablenum(ProjInvoiceJour))
        {
            projInvoiceJour = _custVendInvoiceJour;
            this.IsCreditNote = projInvoiceJour.isCreditNote_CZ();
        }
        else
        {
            this.IsCreditNote = _custVendInvoiceJour.creditNote();
        }
        
        this.DocumentTableId = _custVendInvoiceJour.TableId;
        this.DocumentRecId = _custVendInvoiceJour.RecId;
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustVendTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes from the <c>CustVendTrans</c> table.
    /// </summary>
    /// <param name="_custVendTrans">
    /// The record to init from.
    /// </param>
    public void initFromCustVendTrans(CustVendTrans _custVendTrans)
    {
        this.AccountNum = _custVendTrans.AccountNum;
        this.DocumentNum = _custVendTrans.DocumentNum ? _custVendTrans.DocumentNum : _custVendTrans.Invoice;
        this.DocumentTableId = _custVendTrans.TableId;
        this.DocumentRecId = _custVendTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTaxDocumentTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes from the <c>CzTaxDocumentTable</c> table.
    /// </summary>
    /// <param name="_taxDocumentTable">
    /// The record to init from.
    /// </param>
    public void initFromTaxDocumentTable(CzTaxDocumentTable _taxDocumentTable)
    {
        if (_taxDocumentTable)
        {
            CzTaxCreditMemo taxCreditMemo;

            if (this.IsCreditNote)
            {
                select firstOnly TaxCreditMemoNum, TaxCreditMemoDate from taxCreditMemo
                    order by TaxCreditMemoDate desc
                    where taxCreditMemo.TaxDocumentRecId == _taxDocumentTable.RecId;
            }

            if (taxCreditMemo)
            {
                this.DocumentNum = taxCreditMemo.TaxCreditMemoNum;
                this.VATDate = taxCreditMemo.TaxCreditMemoDate;
            }
            else
            {
                this.DocumentNum = _taxDocumentTable.TaxDocumentNum;
                this.VATDate = _taxDocumentTable.TaxDocumentDate;
                this.DocumentAmountMST = abs(_taxDocumentTable.AmountMST);
                this.IsCreditNote = NoYes::No;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTaxTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes from the <c>TaxTrans</c> table.
    /// </summary>
    /// <param name="_taxTrans">
    /// The record to init from.
    /// </param>
    public void initFromTaxTrans(TaxTrans _taxTrans)
    {
        CustInvoiceTrans custInvoiceTrans;
        VendInvoiceTrans vendInvoiceTrans;

        this.TaxTransRecId = _taxTrans.RecId;
        this.TaxCode = _taxTrans.TaxCode;
        this.SourceTableId = _taxTrans.SourceTableId;
        this.SourceRecId = _taxTrans.SourceRecId;
        this.VATDate = _taxTrans.TransDate;

        switch (_taxTrans.SourceTableId)
        {
            case custInvoiceTrans.TableId:

                select firstOnly ItemId, SalesCategory from custInvoiceTrans
                    where custInvoiceTrans.RecId == _taxTrans.SourceRecId;

                this.ItemId = custInvoiceTrans.ItemId;
                this.EcoResCategoryName = EcoResCategory::find(custInvoiceTrans.SalesCategory).Name;

                break;

            case vendInvoiceTrans.TableId:

                select firstOnly ItemId, ProcurementCategory from vendInvoiceTrans
                    where vendInvoiceTrans.RecId == _taxTrans.SourceRecId;

                this.ItemId = vendInvoiceTrans.ItemId;
                this.EcoResCategoryName = EcoResCategory::find(vendInvoiceTrans.ProcurementCategory).Name;

                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTmpTaxTransReportId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes from <c>TmpTaxReportById</c>.
    /// </summary>
    /// <param name="_tmpTaxReportById">
    /// <c>TmpTaxReportById</c> record.
    /// </param>
    public void initFromTmpTaxTransReportId(TmpTaxReportById _tmpTaxReportById)
    {
        this.Amount = _tmpTaxReportById.Amount;
        this.TaxReportField = _tmpTaxReportById.TaxReportField;
        this.IsDeductionAdjustmentUsed = _tmpTaxReportById.TaxInCostPrice != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Related customer record.
    /// </summary>
    public CustTable custTable()
    {
        CustTable custTable;

        if (this.ModuleType == SalesPurch::Sales)
        {
            custTable = CustTable::find(this.AccountNum);
        }

        return custTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    /// <summary>
    /// Name of contragent.
    /// </summary>
	public Name name()
    {
        Name name;

        if (this.ModuleType == SalesPurch::Sales)
        {
            CustTable custTable = CustTable::find(this.AccountNum);

            if (custTable.partyType() == DirPartyType::Person)
            {
                DirPerson dirPerson = DirPerson::find(custTable.Party);

                name = dirPerson.name(DirPersonName::find(custTable.Party));
            }
			else
            {
                name = custTable.name();
            }
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>birthDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Date of birth of contragent.
    /// </summary>
	public BirthDate birthDate()
    {
        BirthDate birthDate;

        if (this.ModuleType == SalesPurch::Sales)
        {
            CustTable custTable = CustTable::find(this.AccountNum);

            if (custTable.partyType() == DirPartyType::Person)
            {
                DirPerson dirPerson = DirPerson::find(custTable.Party);

                birthDate = dirPerson.birthDate();
            }
        }

        return birthDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>address</Name>
				<Source><![CDATA[
	/// <summary>
    /// Address of contragent.
    /// </summary>
    public LogisticsAddressing address()
    {
        LogisticsAddressing address;

        if (this.ModuleType == SalesPurch::Sales)
        {
            CustTable custTable = CustTable::find(this.AccountNum);
            address = custTable.address();
        }

        return address;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionContextField>CZ</CountryRegionContextField>
	<Label>@TaxLocalization:TaxReportTransactionData</Label>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountNum</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CustVendAC</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Amount</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryTaxCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EUSalesListTax</ExtendedDataType>
			<FeatureClass>EUSalesListToggle</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>DocumentAmountMST</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>AmountMST</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentNum</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>DocumentNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsCreditNote</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDeductionAdjustmentUsed</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ModuleType</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<Visible>No</Visible>
			<EnumType>SalesPurch</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SourceRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SourceTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxCode</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxCode</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>TaxReportField</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TaxReportField</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxTransRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>VATDate</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VATNum</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>VATNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EcoResCategoryName</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>EcoResCategoryName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>DocumentRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>DocumentTableId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxReportFieldIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxReportField</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>DocumentIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>DocumentTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>DocumentRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>