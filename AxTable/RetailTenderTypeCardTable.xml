<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTenderTypeCardTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailTenderTypeCardTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>renamePrimaryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>errorOnRename</c> method of the <c>RetailConnActionManagement</c> class.
    /// </summary>
    /// <remarks>
    /// An error is thrown when you rename the record if the distribution type is other than
    /// <c>NoDistribution</c>.
    /// </remarks>
    public void renamePrimaryKey()
    {
        ;
        RetailConnActionManagement::errorOnRename(this);

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailTenderTypeCardTable</c> table by using the specified <c>parameter</c> value.
    /// </summary>
    /// <param name="_cardTypeId">
    /// The card id of the card types record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailTenderTypeCardTable</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailTenderTypeCardTable find(RetailCardTypeId _cardTypeId, boolean _forUpdate = false)
    {
        RetailTenderTypeCardTable tenderTypeCardTable;

        if (_cardTypeId)
        {
            tenderTypeCardTable.selectForUpdate(_forUpdate);

            select firstonly tenderTypeCardTable
                index hint cardTypeIdx
                where tenderTypeCardTable.CardTypeId == _cardTypeId;
        }

        return tenderTypeCardTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the current record is valid and can be deleted from the database.
    /// </summary>
    /// <returns>Return true if the record is valid; otherwise, false.</returns>
    public boolean validateDelete()
    {
        RetailStoreTenderTypeCardTable retailStoreTenderTypeCardTable;
        boolean ret = super();

        if (ret)
        {
            // Don't allow card types to be deleted if they're configured as payment methods
            if (RetailStoreTenderTypeCardTable::findByCardTypeId(this.cardTypeId))
            {
                ret = checkFailed("@Retail:RetailTenderTypeCardTableInvalidDelete");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsCardTypeSameAsTenderType</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds and returns the first Card which has matching tender type. 
    /// </summary>
    /// <returns>
    ///     <c>RetailTenderTypeCardTable</c> record with matching tender type.
    /// </returns>
    internal static RetailTenderTypeCardTable existsCardTypeSameAsTenderType()
    {
        RetailTenderTypeCardTable retailTenderTypeCardTable;
        RetailTenderTypeTable retailTenderTypeTable;

        select firstonly retailTenderTypeCardTable
        join retailTenderTypeTable
        where retailTenderTypeTable.TenderTypeId == retailTenderTypeCardTable.CardTypeId;

        return retailTenderTypeCardTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Validates the data before writing it into <c>RetailTenderTypeCardTable</c> table.
    /// </summary>
    /// <returns>
    ///     returns true if all the validations pass else false.
    /// </returns>
    public boolean validateWrite()
    {
        boolean ret = super();

        if (ret && this.cardTypeId != '')
        {
            RetailTenderTypeTable retailTenderTypeTable = RetailTenderTypeTable::find(this.cardTypeId);
 
            if (retailTenderTypeTable.RecId != 0)
            {
                ret = checkFailed(strFmt("@Retail:RetailCardTypeIdShouldBeUnique", this.cardTypeId, retailTenderTypeTable.name));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET260404</DeveloperDocumentation>
	<FormRef>RetailTenderTypeCardTable</FormRef>
	<Label>@RET4334</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>cardTypeId</TitleField1>
	<TitleField2>name</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>cardTypeIdx</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Payments</Modules>
	<PrimaryIndex>cardTypeIdx</PrimaryIndex>
	<ReplacementKey>cardTypeIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>cardTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>cardTypes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>cardTypeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CardIssuer</Name>
			<Label>@RET4348</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>cardIssuer</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CardType</Name>
			<Label>@RET3869</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>cardTypes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CardType_BR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CardProcessorCode_BR</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>cardTypeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>cardIssuer</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCardIssuer</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>cardTypeId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCardTypeId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>cardTypes</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCardTypes</ExtendedDataType>
			<EnumType>RetailCardTypesBase</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>name</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCardTypeName</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CardType_BR</Name>
			<EnumType>CardType_BR</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CardProcessorCode_BR</Name>
			<ExtendedDataType>CardProcessorCode_BR</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>cardTypeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>cardTypeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CardProcessor_BR</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CardProcessor_BR</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CardProcessorCode_BR</Name>
					<Field>CardProcessorCode_BR</Field>
					<RelatedField>Code</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>