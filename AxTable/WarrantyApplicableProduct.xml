<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WarrantyApplicableProduct</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WarrantyApplicableProduct extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>warrantableProductName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the name of the warrantable product.
    /// </summary>
    /// <returns>
    /// Product name.
    /// </returns>
    display public EcoResProductName warrantableProductName()
    {
        EcoResProductName name;

        if (this.Variant)
        {
            name = EcoResProductTranslation::findByProductLanguage(this.Variant, SystemParameters::getSystemLanguageId()).Name;
        }

        if (!name && this.Product)
        {
            name = EcoResProductTranslation::findByProductLanguage(this.Product, SystemParameters::getSystemLanguageId()).Name;
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>warrantableCategoryHierarchyName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the hierarchy name of the warrantable category.
    /// </summary>
    /// <returns>
    /// hierarchy name.
    /// </returns>
    display public EcoResCategoryHierarchyName warrantableCategoryHierarchyName()
    {
        EcoResCategoryHierarchyName name;

        if (this.Category)
        {
            EcoResCategory category = EcoResCategory::find(this.Category);
            name = EcoResCategoryHierarchy::find(category.CategoryHierarchy).Name;
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyApplicableProductLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a copy of the applicable product lines from a source group header to a specified target group header.
    /// </summary>
    /// <param name="_sourceGroupHeaderId">
    /// The <c>RecId</c> value of the source warranty group header.
    /// </param>
    /// <param name="_sourceGroupHeaderStatus">
    /// The status of the source warranty group header.
    /// </param>
    /// <param name="_targetGroupHeaderId">
    /// The <c>RecId</c> value of the target warranty group header.
    /// </param>
    /// <param name="_targetGroupHeaderStatus">
    /// The status of the target warranty group header.
    /// </param>
    internal static void copyApplicableProductLines(
        WarrantyGroupHeaderId _sourceGroupHeaderId,
        WarrantyGroupStatusType _sourceGroupHeaderStatus,
        WarrantyGroupHeaderId _targetGroupHeaderId,
        WarrantyGroupStatusType _targetGroupHeaderStatus)
    {
        WarrantyApplicableProduct sourceApplicableProduct, targeApplicableProduct;

        ttsBegin;

        insert_recordset targeApplicableProduct
            (WarrantyGroupHeader, LineIdentifier, Category, Product, Variant, Applicability, Status)
            select _targetGroupHeaderId, LineIdentifier, Category, Product, Variant, Applicability, _targetGroupHeaderStatus
        from sourceApplicableProduct
            where
                sourceApplicableProduct.WarrantyGroupHeader == _sourceGroupHeaderId &&
                sourceApplicableProduct.Status == _sourceGroupHeaderStatus;

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(WarrantyApplicableProduct, Category):
                this.Product = 0;
                this.Variant = 0;
                break;
            
            case fieldNum(WarrantyApplicableProduct, Product):            
                this.Category = 0;
                this.Variant = 0;
                break;
            
            case fieldNum(WarrantyApplicableProduct, Variant):            
                this.Category = 0;
                this.Product = 0;
                break;            
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        ret = WarrantyGroupConfigurationItem::validateValidForWrite(this);

        int numOfConditionSpecified = 0;
        numOfConditionSpecified += this.Category > 0 ? 1 : 0;
        numOfConditionSpecified += this.Product > 0 ? 1 : 0;
        numOfConditionSpecified += this.Variant > 0 ? 1 : 0;
    
        if (numOfConditionSpecified != 1)
        {
            ret = checkFailed("@Warranty:ApplicableProductValidateWriteError");
        }

        // check new record to be saved.
        if (!this.RecId)
        {
            WarrantyApplicableProduct applicableProductLocal;
            select count(RecId) from applicableProductLocal
                where applicableProductLocal.WarrantyGroupHeader == this.WarrantyGroupHeader
                    && applicableProductLocal.Status == this.Status
                    && applicableProductLocal.Category == this.Category
                    && applicableProductLocal.Product == this.Product
                    && applicableProductLocal.Variant == this.Variant;

            if (applicableProductLocal.RecId)
            {
                ret = checkFailed("@Warranty:ApplicableProductDuplicateInGroup");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@Warranty:WarrantyApplicableProductDevDoc</DeveloperDocumentation>
	<Label>@Warranty:WarrantyApplicableProduct</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<Extends>WarrantyGroupConfigurationItem</Extends>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Category</Name>
			<ExtendedDataType>EcoResCategoryId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Product</Name>
			<ExtendedDataType>EcoResProductRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Variant</Name>
			<ExtendedDataType>EcoResDistinctProductVariantRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Applicability</Name>
			<EnumType>WarrantyApplicabilityYesNo</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>Category</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>EcoResCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Category</Name>
					<Field>Category</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>Product</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>EcoResProduct</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Product</Name>
					<Field>Product</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Variant</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>EcoResDistinctProductVariant</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Variant</Name>
					<Field>Variant</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WarrantyGroupConfigurationItem</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>WarrantyGroupConfigurationItem</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>