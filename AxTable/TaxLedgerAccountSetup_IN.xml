<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxLedgerAccountSetup_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxLedgerAccountSetup_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>registrationDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the description for a tax registration number.
    /// </summary>
    /// <returns>
    /// Returns the description for a tax registration number.
    /// </returns>
    display Description registrationDescription()
    {
        SecurityRights          sr;
        SecurityTableRights     stRights;
        AccessRight             ar;

        sr = SecurityRights::construct();
        stRights = sr.tableFieldAccessRights(tableStr(TaxLedgerAccountSetup_IN));
        ar = stRights.fieldAccessRight(fieldStr(TaxLedgerAccountSetup_IN,TaxRegistrationNumberTable));

        if (ar != AccessRight::NoAccess)
        {
            return TaxRegistrationNumbers_IN::find(this.TaxRegistrationNumberTable).Name;
        }
        else
        {
            return "";
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the specified field value.
    /// </summary>
    /// <param name="_fieldName">
    /// The name of the field to validate.
    /// </param>
    /// <param name="_arrayIndex">
    /// The array index of the field; optional.
    /// </param>
    /// <returns>
    /// Returns true if the field passes value validation; otherwise, false.
    /// </returns>
    public boolean validateFieldValue(fieldName _fieldName, int _arrayIndex = 1)
    {
        boolean                  ret;
        TaxLedgerAccountGroup_IN taxLedgerAccountGroup;
        TaxRegistrationNumber_IN taxRegistrationNumber;
        TaxType_IN               taxType;

        ret = super(_fieldName, _arrayIndex);

        switch (_fieldName)
        {
            case fieldstr(TaxLedgerAccountSetup_IN, TaxRegistrationNumberTable) :
                if (this.TaxRegistrationNumberTable)
                {
                    taxLedgerAccountGroup = TaxLedgerAccountGroup_IN::find(this.TaxLedgerAccountGroup);
                    taxRegistrationNumber = TaxRegistrationNumbers_IN::find(this.TaxRegistrationNumberTable).RegistrationNumber;
                    taxType = TaxComponentTable_IN::taxTypeComponent2TaxType(taxLedgerAccountGroup.TaxType);

                    if (!TaxRegistrationNumbers_IN::findByNaturalKey(TaxRegistrationType_IN::Company,
                                                                         taxType,
                                                                         taxRegistrationNumber))
                    {
                        ret = ret && checkFailed(strfmt("@GLS5071", taxRegistrationNumber, taxType, TaxRegistrationType_IN::Company));
                    }
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (this.AccountCode == TaxAccountCode_IN::Table)
        {
            if (!this.TaxRegistrationNumberTable)
            {
                ret = ret && checkFailed(strfmt("@SYS26332", "@SYS59571"));
            }
        }

        if (!this.RecId && TaxLedgerAccountSetup_IN::findByTaxAccountGroup(this.TaxLedgerAccountGroup, this.AccountCode, this.TaxRegistrationNumberTable))
        {
            ret = ret && checkFailed(strfmt("@GLS63369", "@GLS5092",
                                                         tablestr(TaxLedgerAccountSetup_IN),
                                                         "@SYS59367",
                                                         TaxLedgerAccountGroup_IN::find(this.TaxLedgerAccountGroup).TaxAccountGroup,
                                                         this.AccountCode));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>TaxLedgerAccountSetup_IN</c> table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>TaxLedgerAccountSetup_IN</c> record.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    static public boolean exist(recId _recId)
    {
        if (_recId)
        {
            return (select firstonly RecId from taxLedgerAccountSetup_IN
                    where taxLedgerAccountSetup_IN.RecId  == _recId).RecId != 0;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether an all type setup exists for the tax ledger account group and tax component type.
    /// </summary>
    /// <param name="_taxAccountGroup">
    /// A tax ledger account group.
    /// </param>
    /// <param name="_taxType">
    /// A tax component type.
    /// </param>
    /// <returns>
    /// True if existed, otherwise false.
    /// </returns>

    static public boolean existAll(
        TaxAccountGroup_IN _taxAccountGroup,
        TaxType_IN         _taxType)
    {
        TaxLedgerAccountGroup_IN taxLedgerAccountGroup;
        TaxLedgerAccountSetup_IN taxLedgerAccountSetup;

        select firstonly taxLedgerAccountGroup
            join TaxLedgerAccountGroup, AccountCode from taxLedgerAccountSetup
            where taxLedgerAccountGroup.TaxAccountGroup       == _taxAccountGroup
               && taxLedgerAccountGroup.TaxType               == TaxComponentTable_IN::taxtype2TaxtypeComponent(_taxType)
               && taxLedgerAccountSetup.TaxLedgerAccountGroup == taxLedgerAccountGroup.RecId
               && taxLedgerAccountSetup.AccountCode           == TaxAccountCode_IN::All;

        return taxLedgerAccountGroup ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reads the TaxLedgerAccountSetup_IN table for the specified id.
    /// </summary>
    /// <param name="_recId">
    /// The unique record id to find.
    /// </param>
    /// <param name="_forUpdate">
    /// If true, then read the record for updating.
    /// </param>
    /// <param name="_concurrencyModel">
    /// An optional value used when the table is not automatically concurrent.
    /// </param>
    /// <returns>
    /// A buffer containing TaxLedgerAccountSetup_IN table.
    /// </returns>
    public static TaxLedgerAccountSetup_IN find(
        RefRecId            _recId,
        boolean             _forUpdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        TaxLedgerAccountSetup_IN taxLedgerAccountSetup;

        taxLedgerAccountSetup.selectForUpdate(_forUpdate);
        if (_forUpdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            taxLedgerAccountSetup.concurrencyModel(_concurrencyModel);
        }

        select firstonly taxLedgerAccountSetup
            where taxLedgerAccountSetup.RecId == _recId;

        return taxLedgerAccountSetup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByTaxAccountGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record in the <c>TaxLedgerAccountSetup_IN</c> table specified by a tax account group.
    /// </summary>
    /// <param name="_taxAccountGroup">
    /// The tax account group reference record ID of the <c>TaxLedgerAccountSetup_IN</c> record to find.
    /// </param>
    /// <param name="_accountCode">
    /// The tax account code of the <c>TaxLedgerAccountSetup_IN</c> record to find.
    /// </param>
    /// <param name="_taxRegistrationNumber">
    /// The tax registration number reference record ID of the <c>TaxLedgerAccountSetup_IN</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>TaxLedgerAccountSetup_IN</c> table; otherwise, an empty record.
    /// </returns>
    public static TaxLedgerAccountSetup_IN findByTaxAccountGroup(
        RefRecId          _taxAccountGroup,
        TaxAccountCode_IN _accountCode,
        RefRecId          _taxRegistrationNumber = 0,
        boolean           _forUpdate = false)
    {
        TaxLedgerAccountSetup_IN taxLedgerAccountSetup;

        if (_taxAccountGroup)
        {
            taxLedgerAccountSetup.selectForUpdate(_forUpdate);

            if (_taxRegistrationNumber && (_accountCode == TaxAccountCode_IN::Table))
            {
                select firstonly taxLedgerAccountSetup
                    where taxLedgerAccountSetup.TaxLedgerAccountGroup      == _taxAccountGroup
                       && taxLedgerAccountSetup.AccountCode                == _accountCode
                       && taxLedgerAccountSetup.TaxRegistrationNumberTable == _taxRegistrationNumber;
            }
            else
            {
                select firstonly taxLedgerAccountSetup
                    where taxLedgerAccountSetup.TaxLedgerAccountGroup      == _taxAccountGroup
                       && taxLedgerAccountSetup.AccountCode                == _accountCode;
            }
        }

        return taxLedgerAccountSetup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<DeveloperDocumentation>@GLS63749</DeveloperDocumentation>
	<FormRef>TaxLedgerAccountGroup_IN</FormRef>
	<Label>@GLS5092</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>TaxLedgerAccountGroup</TitleField1>
	<TitleField2>AccountCode</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Tax</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>LedgerAccountGroupCodeNumIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>TaxLedgerAccounts_IN</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>TaxLedgerAccounts_IN</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxLedgerAccountGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxRegistrationNumberTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxLedgerAccountGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxRegistrationNumberTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS36186</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxLedgerAccountGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxRegistrationNumberTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountCode</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TaxAccountCode_IN</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxLedgerAccountGroup</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS59367</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>TaxRegistrationNumberTable</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS59571</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxRegistrationNumberTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxRegistrationNumberTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LedgerAccountGroupCodeNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxLedgerAccountGroup</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TaxRegistrationNumberTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxLedgerAccountGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@GLS5094</EntityRelationshipRole>
			<RelatedTable>TaxLedgerAccountGroup_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>TaxLedgerAccountGroup_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxLedgerAccountGroup_IN_TaxLedgerAccountSetup_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxLedgerAccountGroup</Name>
					<Field>TaxLedgerAccountGroup</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxRegistrationNumberTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@GLS5569</EntityRelationshipRole>
			<RelatedTable>TaxRegistrationNumbers_IN</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TaxRegistrationNumbers_IN</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>TaxRegistrationNumbers_IN_TaxLedgerAccountSetup_IN</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxRegistrationNumberTable</Name>
					<Field>TaxRegistrationNumberTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>