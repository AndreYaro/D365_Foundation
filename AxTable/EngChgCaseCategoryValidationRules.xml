<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EngChgCaseCategoryValidationRules</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EngChgCaseCategoryValidationRules extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createValidationRulesForCaseCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates default validation rules for the specified case category recID.
    /// </summary>
    /// <param name="_caseCategoryRecId">
    /// Case category recID for which the default validation rules should be created.
    /// </param>
    public static void createValidationRulesForCaseCategory(CaseCategoryRecId _caseCategoryRecId)
    {
        int                                 enumCount;
        SysDictEnum                         enumRules = new SysDictEnum(EnumNum(EngChgCaseCategoryRule));
        EngChgCaseCategoryValidationRules   engChgCaseCategoryValidationRules;
        RecordInsertList                    recordInsertList = new RecordInsertList(engChgCaseCategoryValidationRules.TableId);
        ConfigurationKeyId                  configurationKeyId;

        for (enumCount = 0; enumCount < enumRules.values(); enumCount++)
        {
            engChgCaseCategoryValidationRules.Enabled = NoYes::Yes;
            engChgCaseCategoryValidationRules.ValidationRule = enumCount;
            engChgCaseCategoryValidationRules.CaseCategory = _caseCategoryRecId;

            switch (enumRules.index2Value(enumCount))
            {
                case EngChgCaseCategoryRule::ProductIsReleased:
                case EngChgCaseCategoryRule::ProductReleasedAssociatedWithCase:
                case EngChgCaseCategoryRule::ReleasedProductAssignedToBOMFormulaRoute:
                case EngChgCaseCategoryRule::ReleasedProductHaveActiveBOMFormulaVers:
                case EngChgCaseCategoryRule::ReleasedProductHaveActiveRouteVersion:
                        engChgCaseCategoryValidationRules.ErrorLevel = EngChgCaseCategoryValidationRuleLevel::Warning;
                        break;
                case EngChgCaseCategoryRule::BOMFormulaApproved:
                case EngChgCaseCategoryRule::RouteApproved:
                case EngChgCaseCategoryRule::BOMFormulaAssignedToReleasedProduct:
                case EngChgCaseCategoryRule::RouteAssignedToReleasedProduct:
                case EngChgCaseCategoryRule::BOMFormulaVersionApproved:
                case EngChgCaseCategoryRule::RouteVersionApproved:
                case EngChgCaseCategoryRule::RelatedCaseAreClosed:
                case EngChgCaseCategoryRule::ProcessActivityCompleted:
                        engChgCaseCategoryValidationRules.ErrorLevel = EngChgCaseCategoryValidationRuleLevel::Error;
                        break;
                case EngChgCaseCategoryRule::ImpactedReleasedProductAssociatedToCase:
                        engChgCaseCategoryValidationRules.ErrorLevel = EngChgCaseCategoryValidationRuleLevel::Information;
                        break;
                default:
                        throw error("@SYS4006358");
            }

            configurationKeyId = enumRules.index2ConfigurationKey(enumCount);
            if (!configurationKeyId || (configurationKeyId && isConfigurationKeyEnabled(configurationKeyId)))
            {
                recordInsertList.add(engChgCaseCategoryValidationRules);
            }
        }

        ttsBegin;

        recordInsertList.insertDatabase();

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteValidationRulesForCaseCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes validation rules for the specified case category recID.
    /// </summary>
    /// <param name="_caseCategoryRecId">
    /// Case category recID for which the validation rules should be deleted.
    /// </param>
    public static void deleteValidationRulesForCaseCategory(CaseCategoryRecId _caseCategoryRecId)
    {
        EngChgCaseCategoryValidationRules   engChgCaseCategoryValidationRules;

        ttsBegin;

        delete_from engChgCaseCategoryValidationRules
            where engChgCaseCategoryValidationRules.CaseCategory == _caseCategoryRecId;

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsByCaseCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if at least one validation rule exists for the specified case category RecID.
    /// </summary>
    /// <param name="_caseCategoryRecId">
    /// Case category recID for which it is checked if at least one validation rule exists.
    /// </param>
    /// <returns>
    /// True if at least one validation rule exists for the specified case category RecID; otherwise false.
    /// </returns>
    public static boolean existsByCaseCategory(CaseCategoryRecId _caseCategoryRecId)
    {
        EngChgCaseCategoryValidationRules   engChgCaseCategoryValidationRules;

        select firstonly RecId from engChgCaseCategoryValidationRules
            where engChgCaseCategoryValidationRules.CaseCategory == _caseCategoryRecId;

        return engChgCaseCategoryValidationRules.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rulesEnabledForCaseCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks whether validation rules are enabled for the case category with the specified ID.
    /// </summary>
    /// <param name="_caseCategoryRecId">
    ///     The ID of the category to be checked.
    /// </param>
    /// <returns>
    ///     true if rules are enabled; otherwise, false.
    /// </returns>
    public static boolean rulesEnabledForCaseCategory(CaseCategoryRecId _caseCategoryRecId) 
    { 
        EngChgCaseCategoryValidationRules   engChgCaseCategoryValidationRules;

        select firstOnly engChgCaseCategoryValidationRules 
            where engChgCaseCategoryValidationRules.CaseCategory == _caseCategoryRecId 
                    && engChgCaseCategoryValidationRules.Enabled;

        return engChgCaseCategoryValidationRules.RecId; 
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>EngChgCase</ConfigurationKey>
	<DeveloperDocumentation>@SYS4006353</DeveloperDocumentation>
	<Label>@SYS4006342</Label>
	<TitleField1>ValidationRule</TitleField1>
	<TitleField2>Enabled</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>ProductInformationManagement</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ValidationRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Enabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ErrorLevel</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Enabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ErrorLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidationRule</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ValidationRule</Name>
			<Label>@SYS4006359</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Enabled</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ErrorLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidationRule</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>CaseCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CaseCategoryRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Enabled</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EngChgCaseCategoryValidationRuleEnabled</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ErrorLevel</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>EngChgCaseCategoryValidationRuleLevel</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ValidationRule</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>EngChgCaseCategoryRule</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CaseCategoryValidationRuleIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>CaseCategory</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ValidationRule</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CaseCategoryHierarchyDetail</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>CaseCategoryHierarchyDetail</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CaseCategory</Name>
					<Field>CaseCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>