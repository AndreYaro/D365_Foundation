<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSProposedLoadContent</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSProposedLoadContent extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSupplyDemandLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the source document line referenced from  <c>TMSProposedContent</c> records to <c>TMSProposedLoad</c> entry
    /// </summary>
    /// <returns>
    /// Buffer with Supply demand line record
    /// </returns>
    [Replaceable]
    public Common getSupplyDemandLine()
    {
        Common result;

        switch (this.SupplyDemandType)
        {
            case TMSLoadBuildSupplyDemandType::Sales :

                result = SalesLine::findInventTransId(this.InventTransId);
                break;

            default:

                throw error(strFmt("@SYS19378",funcName()));
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>supplyDemandOrderJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the View details command for the respective supply or demand order.
    /// </summary>
    /// <exception cref="Exception::Error">
    /// An exception is thrown for non-supported supply or demand types.
    /// </exception>
    public void supplyDemandOrderJumpRef()
    {
        if (!this.InventTransId)
        {
            throw error("@SYP4861102");
        }

        InventTransOrigin::findByInventTransId(this.InventTransId).jumpRefReferenceId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>supplyDemandOrderNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves information from the source document line referenced from <c>TMSProposedContent</c>.
    /// </summary>
    /// <returns>
    /// Identification of the Supply demand line record
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display WHSOrderNum supplyDemandOrderNum()
    {
        if (this.InventTransId)
        {
            return InventTransOrigin::referenceIdByTransId(this.InventTransId);
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(TMSProposedLoadContentId _tmsProposedLoadContentId)
    {
        return _tmsProposedLoadContentId &&
            (select firstonly RecId from TMSProposedLoadContent
                where TMSProposedLoadContent.RecId == _tmsProposedLoadContentId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static TMSProposedLoadContent find(
        TMSProposedLoadContentId    _proposedLoadContentId,
        boolean                     _forUpdate = false)
    {
        TMSProposedLoadContent  proposedLoadContent;

        if (_proposedLoadContentId)
        {
            proposedLoadContent.selectForUpdate(_forUpdate);

            select firstonly proposedLoadContent
                where proposedLoadContent.recId == _proposedLoadContentId;
        }

        return proposedLoadContent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeReferenceToProposedLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears the references from a list of <c>TMSProposedContent</c> records to <c>TMSProposedLoad</c> entry
    /// </summary>
    /// <param name="_con">
    /// Container with RecId's of records to be updated
    /// </param>
    public static void removeReferenceToProposedLoad(container _con)
    {
        TMSProposedLoadContent  proposedLoadContent;
        int                     conEnumrator;
        int                     conLength = conLen(_con);

        if (conLength)
        {
            ttsbegin;

            for (conEnumrator = 1; conEnumrator <= conLength; conEnumrator++)
            {
                proposedLoadContent = TMSProposedLoadContent::find(conPeek(_con, conEnumrator), true);
                proposedLoadContent.ProposedLoad = 0;
                proposedLoadContent.update();
            }

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>supplyDemandTypeDirection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns <c>TMSDirection</c> direction that corresponds to the <c>TMSLoadBuildSupplyDemandType</c> type.
    /// </summary>
    /// <param name="_loadBuildSupplyDemandType">
    /// A <c>TMSLoadBuildSupplyDemandType</c> type.
    /// </param>
    /// <returns>
    /// The <c>TMSDirection</c> direction that corresponds to the <c>TMSLoadBuildSupplyDemandType</c> type.
    /// </returns>
    [Replaceable]
    public static TMSDirection supplyDemandTypeDirection(TMSLoadBuildSupplyDemandType _loadBuildSupplyDemandType)
    {
        TMSDirection direction;

        switch (_loadBuildSupplyDemandType)
        {
            case TMSLoadBuildSupplyDemandType::Sales            :
                direction = TMSDirection::Outbound;
                break;

            case TMSLoadBuildSupplyDemandType::Purchase         :
                direction = TMSDirection::Inbound;
                break;

            case TMSLoadBuildSupplyDemandType::TransferIssue    :
                direction = TMSDirection::Outbound;
                break;

            case TMSLoadBuildSupplyDemandType::Shipment         :
                direction = TMSDirection::Outbound;
                break;

            default:
                throw error(error::wrongUseOfFunction(funcName()));
        }

        return direction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>supplyDemandTypeToTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the source tableId that corresponds to the <c>TMSLoadBuildSupplyDemandType</c> type.
    /// </summary>
    /// <param name="_loadBuildSupplyDemandType">
    /// A <c>TMSLoadBuildSupplyDemandType</c> type.
    /// </param>
    /// <returns>
    /// The source tableId that corresponds to the <c>TMSLoadBuildSupplyDemandType</c> type.
    /// </returns>
    [Replaceable]
    public static TableId supplyDemandTypeToTableId(TMSLoadBuildSupplyDemandType _loadBuildSupplyDemandType)
    {
        TableId tableId;

        switch (_loadBuildSupplyDemandType)
        {
            case TMSLoadBuildSupplyDemandType::Sales            :
                tableId = tableNum(SalesLine);
                break;

            case TMSLoadBuildSupplyDemandType::Purchase         :
                tableId = tableNum(PurchLine);
                break;

            case TMSLoadBuildSupplyDemandType::TransferIssue    :
                tableId = tableNum(InventTransferLine);
                break;

            case TMSLoadBuildSupplyDemandType::Shipment         :
                tableId = tableNum(WHSShipmentTable);
                break;

            default:
                throw error(error::wrongUseOfFunction(funcName()));
        }

        return tableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>TMSProposedLoad</Name>
				<Source><![CDATA[
    public TMSProposedLoad TMSProposedLoad(TMSProposedLoad _relatedTable = null)
    {
        if (prmIsDefault(_relatedTable))
        {
            return this.setLink('TMSProposedLoad');
        }
        else
        {
            return this.setLink('TMSProposedLoad', _relatedTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReferenceToProposedLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// On the specified load contents, sets the reference top to the specified proposed load.
    /// </summary>
    /// <param name = "_proposedLoadContentIds">Set of RecIds of load contents to be updated.</param>
    /// <param name = "_proposedLoadId">RecId of a proposed load.</param>
    public static void setReferenceToProposedLoad(Set _proposedLoadContentIds, TMSLoadId _proposedLoadId)
    {
        if (!_proposedLoadId || !_proposedLoadContentIds || _proposedLoadContentIds.empty())
        {
            return;
        }

        TMSProposedLoad proposedLoad = TMSProposedLoad::findByLoadId(_proposedLoadId);
        if (proposedLoad.RecId == 0)
        {
            return;
        }

        SetEnumerator se = _proposedLoadContentIds.getEnumerator();
        TMSProposedLoadContent proposedLoadContent;

        ttsbegin;
        while (se.moveNext())
        {
            proposedLoadContent = TMSProposedLoadContent::find(se.current(), true);
            if (proposedLoadContent.RecId != 0)
            {
                proposedLoadContent.ProposedLoad = proposedLoad.RecId;
                proposedLoadContent.update();
            }
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@SYP4861079</DeveloperDocumentation>
	<Label>@SYP4861080</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>SupplyDemandType</TitleField1>
	<TitleField2>LoadBuildStrategyInputSet</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Transportation</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TotalVolume</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalWeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Pieces</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadBuildStrategyInputSet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SupplyDemandType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadBuildSession</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProposedLoad</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PiecesUOM</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TotalVolume</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalWeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadBuildSession</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LoadBuildStrategyInputSet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProposedLoad</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Pieces</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SupplyDemandType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PiecesUOM</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProposedLoad</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Pieces</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PiecesUOM</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SupplyDemandType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>supplyDemandOrderNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalWeight</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalVolume</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventTransId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventTransId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LoadBuildSession</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSLoadBuildSessionId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LoadBuildStrategyInputSet</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSLoadBuildStrategyInputId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Pieces</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSProposedPieces</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PiecesUOM</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSUOM</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ProposedLoad</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSProposedLoadId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ShipmentId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>WHSShipmentId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>SupplyDemandType</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>TMSLoadBuildSupplyDemandType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalVolume</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSProposedTotalVolume</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalWeight</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSProposedTotalWeight</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LoadBuildSessionIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>LoadBuildSession</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>ProposedLoadStrategyInputSetIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>ProposedLoad</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LoadBuildStrategyInputSet</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTransOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransOrigin</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventTransIdIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LoadBuildSession</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TMSLoadBuildSession</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoadBuildSession</Name>
					<Field>LoadBuildSession</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>LoadBuildStrategyInputSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TMSLoadBuildStrategyInputSet</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LoadBuildStrategyInputSet</Name>
					<Field>LoadBuildStrategyInputSet</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>ProposedLoad</Name>
			<Cardinality>OneMore</Cardinality>
			<CreateNavigationPropertyMethods>Yes</CreateNavigationPropertyMethods>
			<RelatedTable>TMSProposedLoad</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>TMSProposedLoad</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProposedLoad</Name>
					<Field>ProposedLoad</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchLine</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedTable>PurchLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>SupplyDemandType</Name>
					<Field>SupplyDemandType</Field>
					<ValueStr>TMSLoadBuildSupplyDemandType::Shipment</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>SupplyDemandType</Name>
					<Field>SupplyDemandType</Field>
					<ValueStr>TMSLoadBuildSupplyDemandType::Purchase</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TransferLine</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTransferLine</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>SupplyDemandType</Name>
					<Field>SupplyDemandType</Field>
					<ValueStr>TMSLoadBuildSupplyDemandType::TransferIssue</ValueStr>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventTransId</Name>
					<Field>InventTransId</Field>
					<RelatedField>InventTransId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>WHSShipmentTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>WHSShipmentTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ShipmentId</Name>
					<Field>ShipmentId</Field>
					<RelatedField>ShipmentId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ShipmentIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>