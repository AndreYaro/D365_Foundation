<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerVoucherPostPersisted</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerVoucherPostPersisted extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// the specified record in the <c>LedgerVoucherPostPersisted</c> table by the referenced table id and record id.
    /// </summary>
    /// <param name = "_refTableId">The referenced table id.</param>
    /// <param name = "_refRecId">The referenced record id.</param>
    /// <returns>The <c>LedgerVoucherPostPersisted</c> table record.</returns>
    public static LedgerVoucherPostPersisted findRef(RefTableId _refTableId, RefRecId _refRecId)
    {
        LedgerVoucherPostPersisted ledgerVoucherPostPersisted;
        if (_refTableId && _refRecId)
        {
            select ledgerVoucherPostPersisted
                where ledgerVoucherPostPersisted.RefTableId == _refTableId
                   && ledgerVoucherPostPersisted.RefRecId == _refRecId;
        }

        return ledgerVoucherPostPersisted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findCommon</Name>
				<Source><![CDATA[
    /// <summary>
    /// the specified record in the <c>LedgerVoucherPostPersisted</c> table by the referenced record.
    /// </summary>
    /// <param name = "_common">The referenced record.</param>
    /// <returns>The <c>LedgerVoucherPostPersisted</c> table record.</returns>
    public static LedgerVoucherPostPersisted findCommon(Common _common)
    {
        return LedgerVoucherPostPersisted::findRef(_common.TableId, _common.RecId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@GeneralLedger:LedgerVoucherPostPersistedDoc</DeveloperDocumentation>
	<Visible>No</Visible>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>ReferenceIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<CreatedTransactionId>Yes</CreatedTransactionId>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<Modules>Ledger</Modules>
	<PrimaryIndex>ReferenceIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldContainer">
			<Name>PackedLedgerVoucherPersistable</Name>
			<AssetClassification>Customer Content</AssetClassification>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ReferenceIdx</Name>
			<AllowPageLocks>No</AllowPageLocks>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>