<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AuditPolicyRuleDetail</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AuditPolicyRuleDetail extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteRecords</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes records from the <c>AuditPolicyRuleDetail</c> table.
    /// </summary>
    /// <param name="_recIds">
    /// The record ID of the records to be deleted.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void deleteRecords(container _recIds)
    {
        AuditPolicyRuleDetail auditPolicyRuleDetail;
        int                   i;

        i = conLen(_recIds);

        ttsbegin;
        while (i)
        {
            auditPolicyRuleDetail = AuditPolicyRuleDetail::find(conPeek(_recIds, i), true);
            auditPolicyRuleDetail.delete();
            i--;
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the specified record in the <c>AuditPolicyRuleDetail</c> table exists.
    /// </summary>
    /// <param  name='_recId'>
    ///     The record ID of the <c>AuditPolicyRuleDetail</c> record.
    /// </param>
    /// <returns>
    ///     true if the record was found; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean exist(RefRecId _recId)
    {
        return (AuditPolicyRuleDetail::find(_recId).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds a record in the <c>AuditPolicyRuleDetail</c> table.
    /// </summary>
    /// <param  name='_recId'>
    ///     The record ID of the <c>AuditPolicyRuleDetail</c> record.
    /// </param>
    /// <param  name='_forUpdate'>
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>AuditPolicyRuleDetail</c> table; otherwise, an empty record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static AuditPolicyRuleDetail find(RefRecId _recId, boolean _forUpdate = false)
    {
        AuditPolicyRuleDetail auditPolicy;

        if (_recId)
        {
            auditPolicy.selectForUpdate(_forUpdate);
            select firstonly auditPolicy
                where auditPolicy.RecId == _recId;
        }
        return auditPolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>existForPolicyRule</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the specified record exists in the <c>AuditPolicyListKeyword</c>.
    /// </summary>
    /// <param name="_policyRuleRecId">
    ///     The record ID of the <c>SysPolicyRule</c> record.
    /// </param>
    /// <returns>
    ///     true if any record was found; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean existForPolicyRule(SysPolicySourceDocumentRuleRecId _policyRuleRecId)
    {
        AuditPolicyRuleDetail   auditPolicyRuleDetail;

        if (_policyRuleRecId)
        {
            select firstonly RecId from auditPolicyRuleDetail
                where auditPolicyRuleDetail.PolicySourceDocumentRule == _policyRuleRecId;
        }

        return (auditPolicyRuleDetail.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>existForPolicyRuleTableField</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the specified record exists in the <c>AuditPolicyListKeyword</c>.
    /// </summary>
    /// <param name="_policyRuleRecId">
    ///     The record ID of the <c>SysPolicyRule</c> record.
    /// </param>
    /// <param name="_tableName">
    ///     The name of the referenced <c>Table</c>.
    /// </param>
    /// <param name="_fieldName">
    ///     The name of the referenced <c>Field</c>.
    /// </param>
    /// <returns>
    ///     true if any record was found; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean existForPolicyRuleTableField(SysPolicySourceDocumentRuleRecId _policyRuleRecId, RefTableName _tableName, RefFieldName _fieldName)
    {
        AuditPolicyRuleDetail   auditPolicyRuleDetail;

        if (_tableName && _fieldName && _policyRuleRecId)
        {
            select firstonly RecId from auditPolicyRuleDetail
                where auditPolicyRuleDetail.SourceRelationType == _tableName &&
                    auditPolicyRuleDetail.SourceAttribute == _fieldName &&
                    auditPolicyRuleDetail.PolicySourceDocumentRule == _policyRuleRecId;
        }

        return (auditPolicyRuleDetail.RecId != 0);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS316928</DeveloperDocumentation>
	<Label>@SYS316927</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>PolicySourceDocumentRule</TitleField1>
	<TitleField2>SourceRelationType</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>ComplianceAndInternalControls</Modules>
	<ReplacementKey>AuditPolicyRuleDetailIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PolicySourceDocumentRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceAttribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceRelationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PolicySourceDocumentRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceAttribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceRelationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PolicyRule</Name>
			<Label>@SYS316927</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PolicySourceDocumentRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceAttribute</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceRelationType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PolicySourceDocumentRule</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SourceAttribute</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefFieldName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SourceRelationType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AuditPolicyRuleDetailIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PolicySourceDocumentRule</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceAttribute</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>SourceRelationType</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AuditRuleDetailFK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SysPolicySourceDocumentRule</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>SysPolicyAuditRule</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>SysPolicyAuditRule_SysPolicyAuditRuleDetail</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PolicySourceDocumentRule</Name>
					<Field>PolicySourceDocumentRule</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>