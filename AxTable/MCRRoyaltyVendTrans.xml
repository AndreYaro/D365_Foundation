<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRRoyaltyVendTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRRoyaltyVendTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether a royalty table record exists with the passed in <c>RecId</c>.
    /// </summary>
    /// <param name="_recId">
    /// The <c>RecId</c> value for which to search the royalty table record.
    /// </param>
    /// <returns>
    /// true if a royalty table record exists with the passed in <c>RecId</c>; otherwise, false.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        if (_recId != 0)
        {
            return (select mcrRoyaltyVendTrans
                where mcrRoyaltyVendTrans.RecId == _recId).RecId != 0;
        }
        else
        {
            return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>existsVendInvoiceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether this invoice is associated with a royalty claim.
    /// </summary>
    /// <param name = "_vendInvoiceId">
    /// Vendor invoice id.
    /// </param>
    /// <returns>
    /// true if the invoice is associated with a royalty claim; otherwise, false.
    /// </returns>
    public static boolean existsVendInvoiceId(VendInvoiceId _vendInvoiceId)
    {
        MCRRoyaltyVendTrans mcrRoyaltyVendTrans;

        select firstonly RecId from mcrRoyaltyVendTrans
            where mcrRoyaltyVendTrans.RoyaltyInvoiceId == _vendInvoiceId;

        return mcrRoyaltyVendTrans.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a royalty record based on the passed in <c>RecId</c>.
    /// </summary>
    /// <param name="_recId">
    /// The <c>RecId</c> value for which to search the royalty table.
    /// </param>
    /// <param name="_forUpdate">
    /// A <c>Boolean</c> value that defines whether to select the record for update or not.
    /// </param>
    /// <returns>
    /// The royalty record that was found based on the passed in parameters.
    /// </returns>
    public static MCRRoyaltyVendTrans  find(RecId _recId, boolean _forUpdate = false)
    {
        MCRRoyaltyVendTrans mcrRoyaltyVendTrans;

        if (_recId)
        {
            mcrRoyaltyVendTrans.selectForUpdate(_forUpdate);

            select firstonly mcrRoyaltyVendTrans
                where mcrRoyaltyVendTrans.RecId == _recId;
        }
        return mcrRoyaltyVendTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFirstByRoyaltyClaimIdTransaction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a vendor royalty transaction record based on the passed in <c>MCRRoyaltyId</c> and rebate
    /// transaction type.
    /// </summary>
    /// <param name="_royaltyClaimId">
    /// The <c>MCRRoyaltyId</c> value for which to search the royalty transaction table.
    /// </param>
    /// <param name="_transactionType">
    /// The royalty transaction type for which to search the royalty transaction table.
    /// </param>
    /// <param name="_forUpdate">
    /// A <c>Boolean</c> value that defines whether to select the record for update or not; optional.
    /// </param>
    /// <returns>
    /// The vendor royalty transaction record that was found bassed on the passed in parameters.
    /// </returns>
    public static MCRRoyaltyVendTrans findFirstByRoyaltyClaimIdTransaction(MCRRoyaltyId       _royaltyClaimId,
                                                        MCRRoyaltyTransactionType       _transactionType,
                                                        boolean                         _forUpdate = false)
    {
        MCRRoyaltyVendTrans mcrRoyaltyVendTrans;

        if (_royaltyClaimId)
        {
            mcrRoyaltyVendTrans.selectForUpdate(_forUpdate);

            select firstonly mcrRoyaltyVendTrans
                where mcrRoyaltyVendTrans.RoyaltyTransaction == _transactionType
                    && mcrRoyaltyVendTrans.RoyaltyClaimId    == _royaltyClaimId;
        }

        return mcrRoyaltyVendTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertFromMCRRoyaltyVendTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a royalty transaction record based on a royalty table record.
    /// </summary>
    /// <param name="_mcrRoyaltyVendTable">
    /// The <c>MCRRoyaltyVendTable</c> record to use in order to initialize that values in the royalty
    /// transaction record.
    /// </param>
    /// <param name="_mcrRoyaltyTransactionType">
    /// The royalty transaction type to use to initialize the royalty transaction record; optional.
    /// </param>
    /// <param name="_royaltyAmount">
    /// The royalty amount to use to initialize the royalty transaction record; optional.
    /// </param>
    /// <param name="_ledgerJournalId">
    /// The <c>LedgerJournalId</c> to use to initialize the royalty transaction record; optional.
    /// </param>
    /// <param name="_invoiceNum">
    /// The <c>MCRRoyaltyVendInvoiceId</c> to use to initialize the royalty transaction record; optional.
    /// </param>
    public static void insertFromMCRRoyaltyVendTable(
        MCRRoyaltyVendTable         _mcrRoyaltyVendTable,
        MCRRoyaltyTransactionType   _mcrRoyaltyTransactionType = MCRRoyaltyTransactionType::RoyaltyAccrual,
        Amount                      _royaltyAmount      = 0,
        LedgerJournalId             _ledgerJournalId    = '',
        MCRRoyaltyVendInvoiceId     _invoiceNum    = '')
    {
        MCRRoyaltyVendTrans mcrRoyaltyVendTrans;
        CurrencyCode        ledgerCurrency;

        if (_mcrRoyaltyVendTable && _royaltyAmount)
        {
            ledgerCurrency = Ledger::accountingCurrencyByLedger(Ledger::current());

            ttsbegin;

            mcrRoyaltyVendTrans.RoyaltyClaimId      = _mcrRoyaltyVendTable.RoyaltyClaimId;
            mcrRoyaltyVendTrans.RoyaltyCode         = _mcrRoyaltyVendTable.RoyaltyCode;
            mcrRoyaltyVendTrans.RoyaltyTransaction  = _mcrRoyaltyTransactionType;

            if (ledgerCurrency != _mcrRoyaltyVendTable.CurrencyCode)
            {
                mcrRoyaltyVendTrans.RoyaltyAmt      = CurrencyExchangeHelper::amountCur2MST(_royaltyAmount, _mcrRoyaltyVendTable.CurrencyCode);
            }
            else
            {
                mcrRoyaltyVendTrans.RoyaltyAmt      = _royaltyAmount;
            }

            if (_invoiceNum)
            {
                mcrRoyaltyVendTrans.RoyaltyInvoiceId = _invoiceNum;
            }

            if (_ledgerJournalId)
            {
                mcrRoyaltyVendTrans.LedgerJournalId = _ledgerJournalId;
            }

            mcrRoyaltyVendTrans.insert();

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLedgerJournalId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>LedgerJournalId</c> of the royalty with the passed in <c>MCRRoyaltyId</c>.
    /// </summary>
    /// <param name="_mcrRoyaltyId">
    /// The <c>MCRRoyaltyId</c> of the royalty for which to update the <c>LedgerJournalId</c>.
    /// </param>
    /// <param name="_mcrRoyaltyCode">
    /// The <c>MCRRoyaltyCode</c> of the royalty for which to update the <c>LedgerJournalId</c>.
    /// </param>
    /// <param name="_ledgerJournalId">
    /// The <c>LedgerJournalId</c> to which to update the royalty.
    /// </param>
    public static void updateLedgerJournalId(
        MCRRoyaltyId        _mcrRoyaltyId,
        MCRRoyaltyCode      _mcrRoyaltyCode,
        LedgerJournalId     _ledgerJournalId)
    {
        MCRRoyaltyVendTrans mcrRoyaltyVendTrans;

        if (_mcrRoyaltyId
            && _mcrRoyaltyCode
            && _ledgerJournalId)
        {
            update_recordset mcrRoyaltyVendTrans
            setting
                LedgerJournalId = _ledgerJournalId
            where mcrRoyaltyVendTrans.RoyaltyClaimId    == _mcrRoyaltyId
                && mcrRoyaltyVendTrans.RoyaltyCode      == _mcrRoyaltyCode
                && !mcrRoyaltyVendTrans.LedgerJournalId;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MCRRoyalty</ConfigurationKey>
	<DeveloperDocumentation>@MCR4410027</DeveloperDocumentation>
	<FormRef>MCRRoyaltyVendTrans</FormRef>
	<Label>@MCR4410027</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>RoyaltyCode</TitleField1>
	<TitleField2>RoyaltyTransaction</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoyaltyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoyaltyTransaction</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoyaltyAmt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LedgerJournalId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoyaltyClaimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoyaltyInvoiceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoyaltyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoyaltyTransaction</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoyaltyAmt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LedgerJournalId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerJournalId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>RoyaltyAmt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Amount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RoyaltyClaimId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRRoyaltyId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RoyaltyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>MCRRoyaltyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RoyaltyInvoiceId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>VendInvoiceId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RoyaltyTransaction</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@PRO1465</Label>
			<EnumType>MCRRoyaltyTransactionType</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RoyaltyClaimCodeJournalIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>RoyaltyClaimId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RoyaltyCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>LedgerJournalId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RoyaltyTransIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RoyaltyTransaction</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RoyaltyCode</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RoyaltyInvoiceIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RoyaltyInvoiceId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>LedgerJournalTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>LedgerJournalTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LedgerJournalId</Name>
					<SourceEDT>LedgerJournalId</SourceEDT>
					<Field>LedgerJournalId</Field>
					<RelatedField>JournalNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRRoyaltyTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>MCRRoyaltyTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RoyaltyCode</Name>
					<SourceEDT>MCRRoyaltyCode</SourceEDT>
					<Field>RoyaltyCode</Field>
					<RelatedField>RoyaltyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>MCRRoyaltyVendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>MCRRoyaltyVendTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RoyaltyClaimId</Name>
					<SourceEDT>MCRRoyaltyId</SourceEDT>
					<Field>RoyaltyClaimId</Field>
					<RelatedField>RoyaltyClaimId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendInvoiceInfoTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>VendInvoiceInfoTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RoyaltyInvoiceId</Name>
					<Field>RoyaltyInvoiceId</Field>
					<RelatedField>Num</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>VendInvoiceJour</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>VendInvoiceJour</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RoyaltyInvoiceId</Name>
					<Field>RoyaltyInvoiceId</Field>
					<RelatedField>InvoiceId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>