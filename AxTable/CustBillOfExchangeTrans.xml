<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustBillOfExchangeTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustBillOfExchangeTrans extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromCustBillOfExchangeJour</Name>
				<Source><![CDATA[
    public void initFromCustBillOfExchangeJour(CustBillOfExchangeJour _custBillOfExchangeJour)
    {
        this.CustAccount = _custBillOfExchangeJour.CustAccount;
        this.BillOfExchangeId = _custBillOfExchangeJour.BillOfExchangeId;
        this.DueDate = _custBillOfExchangeJour.DueDate;
        this.Status = _custBillOfExchangeJour.Status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankAccountTrans</Name>
				<Source><![CDATA[
    public static AmountMST bankAccountTrans(
        CompanyBankAccountId _bankAccountId,
        CustVendNegInstStatus _status,
        boolean _fromJournal)
    {
        CustBillOfExchangeJour custBillOfExchangeJour;
        CustBillOfExchangeTrans custBillOfExchangeTrans;
        AmountMST amountMST;

        if (_fromJournal)
        {
            while select BillOfExchangeId, AmountCur,CurrencyCode,TransDate
                    from custBillOfExchangeTrans
                    where custBillOfExchangeTrans.Status == _status &&
                            custBillOfExchangeTrans.BankRemittanceType == BankRemittanceType::Discount &&
                            custBillOfExchangeTrans.RemittedToBankAccountId == _bankAccountId
                    exists join custBillOfExchangeJour
                    where custBillOfExchangeJour.BillOfExchangeId == custBillOfExchangeTrans.BillOfExchangeId &&
                                custBillOfExchangeJour.Status == _status
            {
                amountMST += CurrencyExchangeHelper::mstAmount(custBillOfExchangeTrans.AmountCur, custBillOfExchangeTrans.CurrencyCode, custBillOfExchangeTrans.TransDate);
            }
        }
        else
        {
            while select BillOfExchangeId, AmountCur,CurrencyCode,TransDate
                    from custBillOfExchangeTrans
                    where custBillOfExchangeTrans.Status == _status &&
                            custBillOfExchangeTrans.RemittedToBankAccountId == _bankAccountId
                    exists join custBillOfExchangeJour
                    where custBillOfExchangeJour.BillOfExchangeId == custBillOfExchangeTrans.BillOfExchangeId &&
                                custBillOfExchangeJour.Status == _status
            {
                amountMST += CurrencyExchangeHelper::mstAmount(custBillOfExchangeTrans.AmountCur, custBillOfExchangeTrans.CurrencyCode, custBillOfExchangeTrans.TransDate);
            }
        }
        return -amountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(recId _recId )
    {
        boolean ret = true;

        if (!CustBillOfExchangeTrans::exist(_recId))
        {
            ret = checkFailed(strfmt(CustBillOfExchangeTrans::txtNotExist(), _recId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(recId _recId )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     custBillOfExchangeTrans
                 where
                     custBillOfExchangeTrans.RecId == _recId).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static CustBillOfExchangeTrans find(
        recId _recId ,
        boolean _forupdate = false,
        ConcurrencyModel _concurrencyModel = ConcurrencyModel::Auto)
    {
        CustBillOfExchangeTrans custBillOfExchangeTrans;

        custBillOfExchangeTrans.selectForUpdate(_forupdate);
        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            custBillOfExchangeTrans.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            custBillOfExchangeTrans
            where
            custBillOfExchangeTrans.RecId == _recId;

        return custBillOfExchangeTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByVendAccountVoucherDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a <c>CustBillOfExchangeTrans</c> record that has the specified <c>VendAccount</c>,
    /// <c>Voucher</c>, and <c>TransDate</c> values.
    /// </summary>
    /// <param name="_vendAccount">
    /// A vend account value.
    /// </param>
    /// <param name="_voucher">
    /// A voucher value.
    /// </param>
    /// <param name="_transDate">
    /// A transaction date value.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>CustBillOfExchangeTrans</c> table; otherwise, an empty record.
    /// </returns>
    public static CustBillOfExchangeTrans findByVendAccountVoucherDate(
        VendAccount _vendAccount,
        Voucher _voucher,
        TransDate _transDate,
        boolean _forUpdate = false)
    {
        CustBillOfExchangeTrans custBillOfExchangeTrans;
        CustBillOfExchangeTransExtensionJP endorseTrans;

        if (_vendAccount
            && _voucher
            && _transDate)
        {
            custBillOfExchangeTrans.selectForUpdate(_forUpdate);

            select firstonly custBillOfExchangeTrans
                where custBillOfExchangeTrans.Voucher == _voucher
                   && custBillOfExchangeTrans.TransDate == _transDate
            exists join endorseTrans
                where endorseTrans.CustBillOfExchangeTrans == custBillOfExchangeTrans.RecId
                   && endorseTrans.VendAccount == _vendAccount;
        }

        return custBillOfExchangeTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findIdVoucherDate</Name>
				<Source><![CDATA[
    public static CustBillOfExchangeTrans findIdVoucherDate(
        CustBillOfExchangeID _custBillOfExchangeID,
        Voucher _voucher,
        TransDate _transDate,
        boolean _forUpdate = false)
    {
        CustBillOfExchangeTrans custBillOfExchangeTrans;

        if (_custBillOfExchangeID)
        {
            custBillOfExchangeTrans.selectForUpdate(_forUpdate);

            select firstonly custBillOfExchangeTrans where
                custBillOfExchangeTrans.BillOfExchangeId == _custBillOfExchangeID &&
                custBillOfExchangeTrans.Voucher == _voucher &&
                custBillOfExchangeTrans.TransDate == _transDate;
        }

        return custBillOfExchangeTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStatus</Name>
				<Source><![CDATA[
    public static CustVendNegInstStatus getStatus(CustTrans _custTrans)
    {
        CustBillOfExchangeTrans custBillOfExchangeTrans;

        select maxof(SeqNum) from custBillOfExchangeTrans
            where custBillOfExchangeTrans.BillOfExchangeId == _custTrans.BillOfExchangeID;

        if (custBillOfExchangeTrans.SeqNum > _custTrans.BillOfExchangeSeqNum)
            return CustVendNegInstStatus::Protested;

        return CustBillOfExchangeJour::find(_custTrans.BillOfExchangeID).Status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>maxSeqNum</Name>
				<Source><![CDATA[
    public static CustVendNegInstSeqNum maxSeqNum(CustBillOfExchangeID _custBillOfExchangeID)
    {
        CustBillOfExchangeTrans custBillOfExchangeTrans;

        select maxof(SeqNum) from custBillOfExchangeTrans
            where custBillOfExchangeTrans.BillOfExchangeId == _custBillOfExchangeID;

        return custBillOfExchangeTrans.SeqNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    public static TxtNotExist txtNotExist()
    {
        return "@SYS102169";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CustBillOfExchange</ConfigurationKey>
	<DeveloperDocumentation>@SYS127235</DeveloperDocumentation>
	<Label>@SYS71852</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>BillOfExchangeId</TitleField1>
	<TitleField2>CustAccount</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>BillOfExchangeIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>AccountsReceivable</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>CustPaymSched</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>CustPaymSched</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BillOfExchangeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Amount</Name>
			<Label>@SYS6928</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BillOfExchangeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS9039</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountCur</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SeqNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankRemittanceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RemittedToBankAccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProtestReason</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DueDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Protest</Name>
			<Label>@SYS71693</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProtestReason</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Remittance</Name>
			<Label>@SYS57964</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BankRemittanceType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RemittedToBankAccountId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@SYS25587</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>AmountCur</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>BankRemittanceType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>BankRemittanceType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BillOfExchangeId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustBillOfExchangeID</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>DueDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>DueDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ProtestReason</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>CustVendNegInstProtestReason</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RemittedToBankAccountId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CompanyBankAccountId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>SeqNum</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustVendNegInstSeqNum</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CustBillOfExchangeStatus</ExtendedDataType>
			<EnumType>CustVendNegInstStatus</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>TransDate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Voucher</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Voucher</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BillOfExchangeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BillOfExchangeId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VoucherTransdate</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>Status</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Status</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Voucher</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>TransDate</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CustVendNegInstTrans</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>NegInstId</MapField>
					<MapFieldTo>BillOfExchangeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Status</MapField>
					<MapFieldTo>Status</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RemittedtoBankAccountId</MapField>
					<MapFieldTo>RemittedToBankAccountId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CurrencyCode</MapField>
					<MapFieldTo>CurrencyCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>AmountCur</MapField>
					<MapFieldTo>AmountCur</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Voucher</MapField>
					<MapFieldTo>Voucher</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
					<MapFieldTo>TransDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SeqNum</MapField>
					<MapFieldTo>SeqNum</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DueDate</MapField>
					<MapFieldTo>DueDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>BankNegInstNum</MapField>
					<MapFieldTo>BillOfExchangeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustVendAC</MapField>
					<MapFieldTo>CustAccount</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankAccountTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BankAccountTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RemittedToBankAccountId</Name>
					<SourceEDT>CompanyBankAccountId</SourceEDT>
					<Field>RemittedToBankAccountId</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustBillOfExchangeJour</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustBillOfExchangeJour</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BillOfExchangeId</Name>
					<SourceEDT>CustBillOfExchangeID</SourceEDT>
					<Field>BillOfExchangeId</Field>
					<RelatedField>BillOfExchangeId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>BillOfExchangeIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustAccount</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>CustAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>