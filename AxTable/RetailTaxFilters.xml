<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTaxFilters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailTaxFilters extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();
        return ret && this.validateRuleSetup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRuleSetup</Name>
				<Source><![CDATA[
    /// <summary>
    /// From the CountryRegion field to the rightmost field users filled in, every field in between has to be filled in.
    /// </summary>
    /// <returns>
    /// A value indicates the validation result.
    /// </returns>
    private boolean validateRuleSetup()
    {
        boolean ok = true;
        if (this.Zipcode != 0)
        {
            if (this.CountryRegionId == "" || this.StateId == "" || this.CountyId == "" || this.City == 0 || this.District == 0)
            {
                ok = checkFailed(strfmt("@RetailTax:RetailDestinationBasedTaxRuleValidationError", "@SYS120586", "@SYS12463"));
            }
        }
        else if (this.District != 0)
        {
            if (this.CountryRegionId == "" || this.StateId == "" || this.CountyId == "" || this.City == 0)
            {
                ok = checkFailed(strfmt("@RetailTax:RetailDestinationBasedTaxRuleValidationError", "@SYS120586", "@SYS80116"));
            }
        }
        else if (this.City != 0)
        {
            if (this.CountryRegionId == "" || this.StateId == "" || this.CountyId == "")
            {
                ok = checkFailed(strfmt("@RetailTax:RetailDestinationBasedTaxRuleValidationError", "@SYS120586", "@SYS22249"));
            }
        }
        else if (this.CountyId != "")
        {
            if (this.CountryRegionId == "" || this.StateId == "")
            {
                ok = checkFailed(strfmt("@RetailTax:RetailDestinationBasedTaxRuleValidationError", "@SYS120586", "@SYS13522"));
            }
        }
        else if (this.StateId != "")
        {
            if (this.CountryRegionId == "")
            {
                ok = checkFailed(strfmt("@RetailTax:RetailDestinationBasedTaxRuleValidationError", "@SYS120586", "@SYS21924"));
            }
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>UpdateQueryDataSourceForCity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating datasource for city component.
    /// </summary>
    /// <param name="_buffer">
    /// Table buffer.
    /// </param>
    /// <param name="dsLookup">
    /// Data source.
    /// </param>
    /// <param name="query">
    /// Query instance.
    /// </param>
    /// <param name="_fieldNum">
    /// Field index within the table.
    /// </param>
    public static void UpdateQueryDataSourceForCity(RetailTaxFilters _buffer, QueryBuildDataSource dsLookup, Query query, int _fieldNum)
    {
        int tablenumber = tableNum(LogisticsAddressCity);

        // if City is present, filter futher.
        if (_buffer.City)
        {
            dsLookup.addDataSource(tablenumber).AddRange(fieldNum(LogisticsAddressCity, recId)).value(queryValue(_buffer.City));
            query.dataSourceTable(tablenumber).addLink(_fieldNum, fieldnum(LogisticsAddressCity, RecId));
            query.dataSourceTable(tablenumber).fetchMode(QueryFetchMode::One2One);
            query.dataSourceTable(tablenumber).joinMode(JoinMode::ExistsJoin);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>UpdateQueryDataSourceForCountry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating datasource for county component.
    /// </summary>
    /// <param name="_buffer">
    /// Table buffer.
    /// </param>
    /// <param name="dsLookup">
    /// Data source.
    /// </param>
    /// <param name="query">
    /// Query instance.
    /// </param>
    /// <param name="_fieldNum">
    /// Field index within the table.
    /// </param>
    public static void UpdateQueryDataSourceForCountry(RetailTaxFilters _buffer, QueryBuildDataSource dsLookup, Query query, int _fieldNum)
    {
        int tablenumber = tableNum(LogisticsAddressCountryRegion);

        // if CountryRegionId is present, filter futher.
        if (_buffer.CountryRegionId)
        {
            dsLookup.addDataSource(tablenumber).AddRange(fieldNum(LogisticsAddressCountryRegion, CountryRegionId)).value(queryValue(_buffer.CountryRegionId));
            query.dataSourceTable(tablenumber).addLink(_fieldNum, fieldnum(LogisticsAddressCountryRegion, CountryRegionId));
            query.dataSourceTable(tablenumber).fetchMode(QueryFetchMode::One2One);
            query.dataSourceTable(tablenumber).joinMode(JoinMode::ExistsJoin);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>UpdateQueryDataSourceForCounty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating datasource for county component.
    /// </summary>
    /// <param name="_buffer">
    /// Table buffer.
    /// </param>
    /// <param name="dsLookup">
    /// Data source.
    /// </param>
    /// <param name="query">
    /// Query instance.
    /// </param>
    /// <param name="_fieldNum">
    /// Field index within the table.
    /// </param>
    public static void UpdateQueryDataSourceForCounty(RetailTaxFilters _buffer, QueryBuildDataSource dsLookup, Query query, int _fieldNum)
    {
        int tablenumber = tableNum(LogisticsAddressCounty);

        // if County is present, filter futher.
        if (_buffer.CountyId)
        {
            dsLookup.addDataSource(tablenumber).AddRange(fieldNum(LogisticsAddressCounty, CountyId)).value(queryValue(_buffer.CountyId));
            query.dataSourceTable(tablenumber).addLink(_fieldNum, fieldnum(LogisticsAddressCounty, CountyId));
            query.dataSourceTable(tablenumber).fetchMode(QueryFetchMode::One2One);
            query.dataSourceTable(tablenumber).joinMode(JoinMode::ExistsJoin);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>UpdateQueryDataSourceForDistrict</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating datasource for district component.
    /// </summary>
    /// <param name="_buffer">
    /// Table buffer.
    /// </param>
    /// <param name="dsLookup">
    /// Data source.
    /// </param>
    /// <param name="query">
    /// Query instance.
    /// </param>
    /// <param name="_fieldNum">
    /// Field index within the table.
    /// </param>
    public static void UpdateQueryDataSourceForDistrict(RetailTaxFilters _buffer, QueryBuildDataSource dsLookup, Query query, int _fieldNum)
    {
        int tablenumber = tableNum(LogisticsAddressDistrict);

        // if District is present, filter futher.
        if (_buffer.District)
        {
            dsLookup.addDataSource(tablenumber).AddRange(fieldNum(LogisticsAddressDistrict, recId)).value(queryValue(_buffer.District));
            query.dataSourceTable(tablenumber).addLink(_fieldNum, fieldnum(LogisticsAddressDistrict, recId));
            query.dataSourceTable(tablenumber).fetchMode(QueryFetchMode::One2One);
            query.dataSourceTable(tablenumber).joinMode(JoinMode::ExistsJoin);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>UpdateQueryDataSourceForState</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating datasource for state component.
    /// </summary>
    /// <param name="_buffer">
    /// Table buffer.
    /// </param>
    /// <param name="dsLookup">
    /// Data source.
    /// </param>
    /// <param name="query">
    /// Query instance.
    /// </param>
    /// <param name="_fieldNum">
    /// Field index within the table.
    /// </param>
    public static void UpdateQueryDataSourceForState(RetailTaxFilters _buffer, QueryBuildDataSource dsLookup, Query query, int _fieldNum)
    {
        int tablenumber = tableNum(LogisticsAddressState);

        // if State is present, filter futher.
        if (_buffer.StateId)
        {
            dsLookup.addDataSource(tablenumber).AddRange(fieldNum(LogisticsAddressState, StateId)).value(queryValue(_buffer.StateId));
            query.dataSourceTable(tablenumber).addLink(_fieldNum, fieldnum(LogisticsAddressState, StateId));
            query.dataSourceTable(tablenumber).fetchMode(QueryFetchMode::One2One);
            query.dataSourceTable(tablenumber).joinMode(JoinMode::ExistsJoin);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET261348</DeveloperDocumentation>
	<Label>@RET261316</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>TaxGroupHeading</TitleField1>
	<TitleField2>CountryRegionId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Modules>TransactionsAndOrders</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>City</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>District</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroupHeading</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Zipcode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@RET609</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>City</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>District</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxGroupHeading</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Zipcode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>City</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressCityRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountryRegionId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsAddressCountryRegionId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CountyId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsAddressCountyId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>District</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressDistrictRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>StateId</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>LogisticsAddressStateId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TaxGroupHeading</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TaxGroup</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Zipcode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsAddressZipCodeRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>TaxGroupHeadingIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>TaxGroupHeading</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RetailDbtFiltersComposite</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>District</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Zipcode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>City</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CountyId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>StateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CountryRegionId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>City</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCity</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>City</Name>
					<Field>City</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CountryRegion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCountryRegion</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryRegionId</Name>
					<SourceEDT>LogisticsAddressCountryRegionId</SourceEDT>
					<Field>CountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>County</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressCounty</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountyId</Name>
					<Field>CountyId</Field>
					<RelatedField>CountyId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StateId</Name>
					<Field>StateId</Field>
					<RelatedField>StateId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryRegionId</Name>
					<Field>CountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionStateCountyIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>District</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressDistrict</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>District</Name>
					<Field>District</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>State</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressState</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>StateId</Name>
					<Field>StateId</Field>
					<RelatedField>StateId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CountryRegionId</Name>
					<Field>CountryRegionId</Field>
					<RelatedField>CountryRegionId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CountryRegionStateIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TaxGroupHeading</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>TaxGroupHeading</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TaxGroupHeading</Name>
					<SourceEDT>TaxGroup</SourceEDT>
					<Field>TaxGroupHeading</Field>
					<RelatedField>TaxGroup</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>TaxGroupIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Zipcode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsAddressZipCode</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Zipcode</Name>
					<Field>Zipcode</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>