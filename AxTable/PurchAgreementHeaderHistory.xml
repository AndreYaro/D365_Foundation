<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchAgreementHeaderHistory</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchAgreementHeaderHistory extends AgreementHeaderHistory
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>agreementConfirmation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets an agreement number sequence plus a confirmation number.
    /// </summary>
    /// <returns>
    ///    A string that contains the agreement number and confirmation number.
    /// </returns>
    display public AgreementConfirmation agreementConfirmation()
    {
        return strFmt("%1-%2", this.PurchNumberSequence, this.ConfirmationNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromPurchAgreementHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a purchase agreement header history record by using a purchase agreement header record.
    /// </summary>
    /// <param name="_purchHeader">
    /// The purchase agreement header record to use.
    /// </param>
    public void initFromPurchAgreementHeader(PurchAgreementHeader _purchHeader)
    {
        this.initFromAgreementHeader(_purchHeader);

        this.PurchNumberSequence    = _purchHeader.PurchNumberSequence;
        this.VendAccount            = _purchHeader.VendAccount;
        this.VendorDataAreaId       = _purchHeader.VendorDataAreaId;
        this.BuyingLegalEntity      = _purchHeader.BuyingLegalEntity;

        if (PublicSectorUtils::isFrenchRegulatoryEnabled())
        {
            this.Purpose_PSN                    = _purchHeader.Purpose_PSN;
            this.ProcurementClassification_PSN  = _purchHeader.ProcurementClassification_PSN;
            this.Renewable_PSN                  = _purchHeader.Renewable_PSN;
            this.InterestBasedOnCEB_PSN         = _purchHeader.InterestBasedOnCEB_PSN;
            this.MaximumAmount_PSN              = _purchHeader.MaximumAmount_PSN;
            this.MinimumAmount_PSN              = _purchHeader.MinimumAmount_PSN;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>originatorName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the originator name for the current agreement header history.
    /// </summary>
    /// <returns>
    ///    The name of the originator.
    /// </returns>
    display DirPartyName originatorName()
    {
        return DirPartyTable::findRec(this.Originator).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the name of the vendor account for the current purchase agreement header history record.
    /// </summary>
    /// <returns>
    ///    The name of the customer.
    /// </returns>
    public display VendName vendName()
    {
        VendTable       vendTable;
        DirPartyTable   partyTable;

        if (this.VendAccount)
        {
            select firstonly Party from vendTable
                    where vendTable.AccountNum == this.VendAccount
                join Name from partyTable
                    where partyTable.RecId == vendTable.Party;
        }
        return partyTable.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the <c>VendTable</c> record for the current purchase blanket order.
    /// </summary>
    /// <returns>
    /// The <c>VendTable</c> record.
    /// </returns>
    VendTable vendTable()
    {
        return VendTable::findByDataAreaId(this.VendAccount, this.VendorDataAreaId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createHeaderHistory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates agreement header history records from a purchase agreement header record.
    /// </summary>
    /// <param name="_purchHeader">
    ///    The purchase agreement header record.
    /// </param>
    /// <param name="_dateTimenow">
    ///    The time of the current transaction.
    /// </param>
    /// <returns>
    ///    The ID of the created history record.
    /// </returns>
    public static recId createHeaderHistory(PurchAgreementHeader _purchHeader, utcdatetime _dateTimenow)
    {
        PurchAgreementHeaderHistory purchHeaderHistory;
        PurchAgreementHeaderHistory previousPurchHeaderHistory;

        AgreementHeaderDefaultHistory headerDefaultHistory;
        PurchAgreementHeaderDefaultHistory  purchHeaderDefaultHistory;

        AgreementHeaderDefault  headerDefault;
        PurchAgreementHeaderDefault  purchHeaderDefault;
        // <GEERU>
        #ISOCountryRegionCodes
        PurchAgreementHeaderHistoryExt_RU purchHeaderHistoryExt;
        PurchAgreementHeaderExt_RU purchHeaderExt;
        // </GEERU>

        ttsbegin;

            previousPurchHeaderHistory = AgreementHeaderHistory::findLatest(_purchHeader.RecId, true) as PurchAgreementHeaderHistory;

            if (previousPurchHeaderHistory)
            {
                 previousPurchHeaderHistory.ValidTo = _dateTimeNow;
                 previousPurchHeaderHistory.update();
            }

            purchHeaderHistory.ConfirmationNumber = AgreementHeaderHistory::nextConfirmationNum(_purchHeader.RecId);
            purchHeaderHistory.initFromPurchAgreementHeader(_purchHeader);
            purchHeaderHistory.ValidFrom = _dateTimeNow;
            purchHeaderHistory.insert();

            // DocuRef is stored referencing base table. Ensure we use base record to copy DocuRef from
            AgreementHeader agreementHeaderCopyFrom = AgreementHeader::find(_purchHeader.RecId);
            Docu::copy(agreementHeaderCopyFrom, purchHeaderHistory);

            headerDefault = _purchHeader.agreementHeaderDefault();

            // since there's no inheritance between headerDefault and purchHeaderDefault,
            // defaults must be obtained separately for each table

            if (headerDefault)
            {
                headerDefaultHistory.initFromAgreementHeaderDefault(headerDefault);
                headerDefaultHistory.AgreementHeaderHistory = purchHeaderHistory.RecId;
                headerDefaultHistory.insert();
            }

            purchHeaderDefault = _purchHeader.purchAgreementHeaderDefault();

            if (purchHeaderDefault)
            {
                purchHeaderDefaultHistory.initFromPurchAgreementHeaderDefault(purchHeaderDefault);
                purchHeaderDefaultHistory.PurchaseAgreementHeaderHistory = purchHeaderHistory.RecId;
                purchHeaderDefaultHistory.insert();
            }
            // <GEERU>
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
            {
                purchHeaderExt = PurchAgreementHeaderExt_RU::findByPurchAgreementHeader(_purchHeader.RecId);
                if (purchHeaderExt)
                {
                    purchHeaderHistoryExt.initFromPurchAgreementHeaderExt(purchHeaderExt);
                    purchHeaderHistoryExt.AgreementHeaderHistory = purchHeaderHistory.RecId;
                    purchHeaderHistoryExt.insert();
                }
            }
            // </GEERU>

        ttscommit;

        return purchHeaderHistory.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAgreementId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>PurchAgreementHeaderHistory</c> table.
    /// </summary>
    /// <param name="_agreementId">The agreement ID of the <c>PurchAgreementHeaderHistory</c> record to find.</param>
    /// <param name="_confirmationNumber">The confirmation number of the <c>PurchAgreementHeaderHistory</c> record to find.</param>
    /// <param name="_forUpdate">A Boolean value that indicates whether to read the record for update; optional.</param>
    /// <returns>A record in the <c>PurchAgreementHeaderHistory</c> table; otherwise, an empty record.</returns>
    public static PurchAgreementHeaderHistory findAgreementId(
        PurchAgreementId _agreementId, 
        AgreementConfirmationNumber _confirmationNumber,
        boolean _forUpdate = false)
    {
        PurchAgreementHeaderHistory purchAgreementHeaderHistory;

        if (_agreementId && _confirmationNumber)
        {
            if (_forupdate)
            {
                purchAgreementHeaderHistory.selectForUpdate(true);
            }

            CompanyInfo companyInfo;

            select firstonly purchAgreementHeaderHistory
                exists join companyInfo
                    where purchAgreementHeaderHistory.PurchNumberSequence == _agreementId
                        && purchAgreementHeaderHistory.ConfirmationNumber == _confirmationNumber
                        && purchAgreementHeaderHistory.BuyingLegalEntity == companyInfo.RecId
                        && companyInfo.DataArea == curext();
        }

        return purchAgreementHeaderHistory;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TradeBlanketOrder</ConfigurationKey>
	<DeveloperDocumentation>@SYS317408</DeveloperDocumentation>
	<Label>@SYS190192</Label>
	<TableGroup>TransactionHeader</TableGroup>
	<TitleField1>VendAccount</TitleField1>
	<TitleField2>PurchNumberSequence</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<Extends>AgreementHeaderHistory</Extends>
	<Modules>ProcurementAndSourcing</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchNumberSequence</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CentralBank_PSN</Name>
			<Label>@SPS2074</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InterestBasedOnCEB_PSN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ContractAmount_PSN</Name>
			<Label>@SPS2077</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>MinimumAmount_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumAmount_PSN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>OrderId</Name>
			<Label>@SYS183834</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchNumberSequence</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Purchasing_PSN</Name>
			<Label>@SPS2083</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Purpose_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementClassification_PSN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Renewable_PSN</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Vendor</Name>
			<Label>@SYS8079</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>VendAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>BuyingLegalEntity</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@SYS129100</Label>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>InterestBasedOnCEB_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SPS2075</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MaximumAmount_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SPS2080</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>MinimumAmount_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SPS2078</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProcurementClassification_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>Description</ExtendedDataType>
			<Label>@SPS2086</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchNumberSequence</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchAgreementId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Purpose_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>Description</ExtendedDataType>
			<Label>@SPS2084</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Renewable_PSN</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PurchFrenchRegulatory_PSN</ConfigurationKey>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SPS2072</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>VendorDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CompanyInfoIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>BuyingLegalEntity</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>VendTableIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>VendorDataAreaId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendAccount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CustVendAccountMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Account</MapField>
					<MapFieldTo>VendAccount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Num</MapField>
					<MapFieldTo>PurchNumberSequence</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>AgreementHistory</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>AgreementHeaderHistory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CompanyInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CompanyInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CompanyInfo</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CompanyInfo_PurchAgreementHeaderHistory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>BuyingLegalEntity</Name>
					<Field>BuyingLegalEntity</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendTable</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>VendTable_PurchAgreementHeaderHistory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorDataAreaId</Name>
					<Field>VendorDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendAccount</Name>
					<SourceEDT>VendAccount</SourceEDT>
					<Field>VendAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>