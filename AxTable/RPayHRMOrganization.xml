<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayHRMOrganization</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RPayHRMOrganization extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        if (this.ParentOrganizationId && RPayHRMOrganization::find(this.ParentOrganizationId).Active == NoYes::No)
            this.Active = NoYes::No;
        else
            this.Active = NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean   ret;

        ret = super();

        if ((select rPayHRMOrganization
                 where rPayHRMOrganization.ParentOrganizationId == this.HrmOrganizationId).RecId != 0)
            ret = ret && checkFailed("@RUP1293");

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _p1)
    {
        boolean                 ret;
        ;
        ret = super(_p1);

        if (ret)
        {
            switch (_p1)
            {
                case fieldNum(RPayHRMOrganization, Active):
                    if ((select rPayHRMOrganization
                             where rPayHRMOrganization.ParentOrganizationId == this.HrmOrganizationId &&
                                   rPayHRMOrganization.Active               == true).RecId!=0)
                    {
                        ret = checkFailed("@RUP1294");
                    }

                    if (! this.Active && (select firstonly RecId from rhrmEmplTable
                                              where rhrmEmplTable.PayHRMOrganizationId == this.HrmOrganizationId).RecId != 0)
                    {
                        ret = checkFailed("@RUP1759");
                    }

                    if (this.ParentOrganizationId &&
                        RPayHRMOrganization::find(this.ParentOrganizationId).Active == NoYes::No &&
                        this.Active == NoYes::Yes)
                    {
                        ret = checkFailed("@RUP1295");
                    }
                    break;

                case fieldNum(RPayHRMOrganization, Responsible):
                    if (this.Responsible == '')
                    {
                        return ret;
                    }

                    if (RHRMEmplTable::find(this.Responsible).employmentStatus() != RHRMEmploymentStatus::Employed)
                    {
                        ret = checkFailed("@RUP1760");
                    }

                    if (RHRMEmplTable::find(this.Responsible).PayHRMOrganizationId != this.HrmOrganizationId)
                    {
                        ret = checkFailed("@RUP1296");
                    }
                    break;

                case fieldNum(RPayHRMOrganization, ParentOrganizationId):
                    if (this.ParentOrganizationId)
                    {
                        if (this.ParentOrganizationId == this.HrmOrganizationId)
                        {
                            ret = checkFailed("@RUP1297");
                        }
                        if (! RPayHRMOrganization::find(this.ParentOrganizationId).Active)
                        {
                            ret = checkFailed(strFmt("@RUP1298", this.ParentOrganizationId));
                        }
                        if (! RPayHRMOrganization::validateMove(this.HrmOrganizationId, this.ParentOrganizationId))
                        {
                            ret = checkFailed("@RUP1299");
                        }
                    }
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RPayHRMOrganization find(RpayHRMOrganizationId       _rhrmOrganizationId,
                                           boolean                     _forUpdate = false)
    {
        RPayHRMOrganization rhrmOrganization;
        ;
        if (_rhrmOrganizationId)
        {
            rhrmOrganization.selectForUpdate(_forUpdate);

            select firstonly rhrmOrganization
                where rhrmOrganization.HrmOrganizationId == _rhrmOrganizationId;
        }
        return rhrmOrganization;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds record by reference id.
    /// </summary>
    /// <param name="_recId">
    /// The reference id.
    /// </param>
    /// <param name="_forUpdate">
    /// Indicator, if true then record will be selected for update.
    /// </param>
    /// <returns>
    /// The found record.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RPayHRMOrganization findRecId(recId _recId, boolean _forUpdate = false)
    {
        RPayHRMOrganization RPayHRMOrganization;

        if (_recId)
        {
            RPayHRMOrganization.selectForUpdate(_forUpdate);

            select firstonly RPayHRMOrganization
                where RPayHRMOrganization.RecId == _recId;
        }

        return RPayHRMOrganization;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrganizationChildren</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static List getOrganizationChildren(RpayHRMOrganizationId   _rpayHRMOrganizationId = '',
                                                      List                    _list = null)
    {
        List                list;
        RPayHRMOrganization rPayHRMOrganization;
        ;

        if (! _list)
            list = new List(Types::String);
        else
            list = _list;

        while select rPayHRMOrganization
            where rPayHRMOrganization.ParentOrganizationId == _rpayHRMOrganizationId
        {
            list.addEnd(rPayHRMOrganization.HrmOrganizationId);

            list = RPayHRMOrganization::getOrganizationChildren(rPayHRMOrganization.HrmOrganizationId, list);
        }
        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfEmpl</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RHRMStaffListFactor numberOfEmpl(boolean               _countChildren = false,
                                                          RpayHRMOrganizationId _rpayHRMOrganizationId = '',
                                                          PerDate               _perDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        RPayHistory                 rPayHistory;
        ListIterator                listIterator;
        List                        list;
        RpayHRMOrganizationId       rpayHRMOrganizationId;
        RHRMStaffListFactor         rhrmStaffListFactor;
        RHRMEmplTable               emplTable;
        container                   con;
        ;

        list = new List(Types::String);
        if (_rpayHRMOrganizationId)
            list.addEnd(_rpayHRMOrganizationId);

        if (_countChildren)
            list = RPayHRMOrganization::getOrganizationChildren(_rpayHRMOrganizationId, list);

        listIterator = new ListIterator(list);
        listIterator.begin();
        while (listIterator.more())
        {
            rpayHRMOrganizationId = listIterator.value();

            while select EmployeeId from emplTable
                exists join rPayHistory
                    where rPayHistory.Number == emplTable.EmployeeId &&
                          rPayHistory.HrmOrganizationId == rpayHRMOrganizationId
            {
                con = RPayHistory::getOrganizationByDateInterval(emplTable.EmployeeId, _perDate, _perDate, rpayHRMOrganizationId);
                if (conLen(con))
                {
                    rhrmStaffListFactor += RPayHistory::findByRecId(conPeek(conPeek(con,1),4)).employmentFactor();
                }
            }
            listIterator.next();
        }

        return rhrmStaffListFactor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfEmplStaff</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RHRMStaffListFactor numberOfEmplStaff(boolean                  _countChildren = false,
                                                               RpayHRMOrganizationId    _rpayHRMOrganizationId = '',
                                                               RHRMStaffListRefRecId    _refRecId = 0,
                                                               PerDate                  _perDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        RPayHistory                 rPayHistory, rPayHistoryExists;
        ListIterator                listIterator;
        List                        list;
        RpayHRMOrganizationId       rpayHRMOrganizationId;
        RHRMStaffListFactor         rhrmStaffListFactor;
        RHRMEmplTable               emplTable;
        container                   con;

        list = new List(Types::String);
        if (_rpayHRMOrganizationId)
            list.addEnd(_rpayHRMOrganizationId);

        if (_countChildren)
            list = RPayHRMOrganization::getOrganizationChildren(_rpayHRMOrganizationId, list);

        listIterator = new ListIterator(list);
        listIterator.begin();
        while (listIterator.more())
        {
            rpayHRMOrganizationId = listIterator.value();

            while select EmployeeId from emplTable
                exists join rPayHistoryExists
                    where rPayHistoryExists.Number == emplTable.EmployeeId &&
                          rPayHistoryExists.HrmOrganizationId == rpayHRMOrganizationId
            {
                con = RPayHistory::getOrganizationByDateInterval(emplTable.EmployeeId, _perDate, _perDate, rpayHRMOrganizationId);

                if (conLen(con))
                {
                    rPayHistory = RPayHistory::findByRecId(conPeek(conPeek(con, 1), 4));

                    if ((_refRecId && rPayHistory.hrmStaffListRefRecId != _refRecId) ||
                        (! _refRecId && ! rPayHistory.hrmStaffListRefRecId))
                        continue;

                    rhrmStaffListFactor += rPayHistory.employmentFactor();
                }
            }
            listIterator.next();
        }

        return rhrmStaffListFactor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfVacantPos</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static RHRMStaffListFactor numberOfVacantPos(boolean               _countChildren = false,
                                                               RpayHRMOrganizationId _rpayHRMOrganizationId = '',
                                                               PerDate               _perDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
    {
        RHRMStaffList               rhrmStaffList;
        ListIterator                listIterator;
        List                        list;
        RpayHRMOrganizationId       rpayHRMOrganizationId;
        RHRMStaffListHistory        rhrmStaffListHistory, rhrmStaffListHistoryNotExists;
        RHRMStaffListFactor         staffListFactor;

        list = new List(Types::String);
        if (_rpayHRMOrganizationId)
            list.addEnd(_rpayHRMOrganizationId);

        if (_countChildren)
            list = RPayHRMOrganization::getOrganizationChildren(_rpayHRMOrganizationId, list);

        listIterator = new ListIterator(list);
        listIterator.begin();
        while (listIterator.more())
        {
            rpayHRMOrganizationId = listIterator.value();

            select sum(StaffListFactor) from rhrmStaffListHistory
                where rhrmStaffListHistory.StartDate <= _perDate
                exists join rhrmStaffList
                    where rhrmStaffList.OrganizationId == rpayHRMOrganizationId &&
                          rhrmStaffList.RecId == rhrmStaffListHistory.StaffListRefRecId
                notexists join rhrmStaffListHistoryNotExists
                    where rhrmStaffListHistoryNotExists.StaffListRefRecId == rhrmStaffList.RecId &&
                          rhrmStaffListHistoryNotExists.StartDate <= _perDate &&
                          rhrmStaffListHistoryNotExists.StartDate > rhrmStaffListHistory.StartDate;

            staffListFactor += rhrmStaffListHistory.StaffListFactor;

            listIterator.next();
        }

        return staffListFactor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMove</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static boolean validateMove(RpayHRMOrganizationId  _fromOrganizationId,
                                       RpayHRMOrganizationId  _toOrganizationId)
    {
        boolean             ret = true;
        RPayHRMOrganization rPayHRMOrganization;
        ;

        rPayHRMOrganization = RPayHRMOrganization::find(_toOrganizationId);

        if (! rPayHRMOrganization)
            ret = true;
        else
        {
            if (rPayHRMOrganization.ParentOrganizationId == _fromOrganizationId)
                ret = false;
            else
            {
                if (rPayHRMOrganization.ParentOrganizationId)
                    ret = RPayHRMOrganization::validateMove(_fromOrganizationId, rPayHRMOrganization.ParentOrganizationId);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>RPayHRMCommon</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<DeveloperDocumentation>@GLS102463</DeveloperDocumentation>
	<FormRef>RpayHrmOrganization</FormRef>
	<Label>@GLS102463</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>hrmOrganizationId</TitleField1>
	<TitleField2>description</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>IdIdx</ClusteredIndex>
	<Modules>Obsolete</Modules>
	<PrimaryIndex>IdIdx</PrimaryIndex>
	<ReplacementKey>IdIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RHRMOrderTrans</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RHRMOrderTrans</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RHRMStaffList</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RHRMStaffList</Table>
		</AxTableDeleteAction>
		<AxTableDeleteAction>
			<Name>RPayHistory</Name>
			<DeleteAction>Restricted</DeleteAction>
			<Relation></Relation>
			<Table>RPayHistory</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>hrmOrganizationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>parentOrganizationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>responsible</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>active</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>hrmOrganizationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ContactInfo</Name>
			<Label>@SYS21663</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>phone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>phoneLocal</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>cellularPhone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>telefax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>email</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>URL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>telex</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DetailInfo</Name>
			<Label>@SYS318405</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>hrmOrganizationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>hrmOrganizationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>parentOrganizationId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Note</Name>
			<Label>@SYS13887</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>note</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PersonInCharge</Name>
			<Label>@SYS4330</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>responsible</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrganizationLead</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Registration</Name>
			<Label>@RUP3408</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CodeOKDP</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@SYS25587</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>active</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>active</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS24676</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>cellularPhone</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>PhoneMobile</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CodeOKDP</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>OKDP_RU</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMOrganizationName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>email</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Email</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>hrmOrganizationId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RpayHRMOrganizationId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LogisticsLocation</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LogisticsLocationRecId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>note</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Notes</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>OrganizationLead</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RPayOrganizationLead</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>parentOrganizationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMOrganizationAll</ExtendedDataType>
			<Label>@RUP1285</Label>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>phone</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Phone</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>phoneLocal</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>PhoneLocal</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>responsible</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RHRMOrganizationResponsible</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>telefax</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TeleFax</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>telex</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Telex</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>URL</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>URL</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>IdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>hrmOrganizationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>parentIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>parentOrganizationId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>hrmOrganizationId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>LogisticsLocationMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Location</MapField>
					<MapFieldTo>LogisticsLocation</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Location_FK</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>LogisticsLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Location_FK</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>RPayHRMOrganization</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LogisticsLocation</Name>
					<Field>LogisticsLocation</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RPayHRMOrganization</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>RPayHRMOrganization</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>parentOrganizationId</Name>
					<SourceEDT>RHRMOrganizationAll</SourceEDT>
					<Field>parentOrganizationId</Field>
					<RelatedField>hrmOrganizationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>IdIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>