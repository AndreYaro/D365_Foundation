<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatDisplayVendorCategory</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CatDisplayVendorCategory extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cloneRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new record of the <c>CatDisplayVendorCategory</c> table by duplicating this record.
    /// </summary>
    /// <param  name='_tblSharedData'>
    /// The <c>CatDisplayCategorySharedInfo</c> record the cloned <c>CatDisplayVendorCategory</c> record will point to.
    /// </param>
    /// <returns>
    /// The cloned instance of the <c>CatDisplayVendorCategory</c> data type.
    /// </returns>
    /// <remarks>
    /// The cloned record is not inserted into the database.
    /// </remarks>
    public CatDisplayVendorCategory cloneRecord(CatDisplayCategorySharedInfo _tblSharedData)
    {
        CatDisplayVendorCategory tblVendorCategoryDup;

        tblVendorCategoryDup.clear();
        tblVendorCategoryDup.Origin = this.Origin;
        tblVendorCategoryDup.SharedData = _tblSharedData.RecId;
        tblVendorCategoryDup.VendorCategory = this.VendorCategory;

        return tblVendorCategoryDup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record that matches the given <paramref>_sharedData</paramref> parameter of type <c>RefRecId</c> and the <paramref>_vendCategoryRecId</paramref> parameter of type <c>RefRecId</c> exists.
    /// </summary>
    /// <param  name='_sharedData'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <param  name='_vendCategoryRecId'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <returns>
    /// <c>true</c> if the record was found; otherwise, <c>false</c>.
    /// </returns>
    public static boolean checkExist(RefRecId _sharedData, RefRecId _vendCategoryRecId)
    {
        if (!CatDisplayVendorCategory::exist(_sharedData, _vendCategoryRecId))
        {
            return checkFailed(strfmt(CatDisplayVendorCategory::txtNotExist(), _sharedData, _vendCategoryRecId));
        }
        else
        {
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a record that matches the given <paramref>_sharedData</paramref> parameter of type <c>RefRecId</c> and the <paramref>_vendCategoryRecId</paramref> parameter of type <c>RefRecId</c> exists.
    /// </summary>
    /// <param  name='_sharedData'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <param  name='_vendCategoryRecId'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <returns>
    /// <c>true</c> if the record was found; otherwise, <c>false</c>.
    /// </returns>
    public static boolean exist(RefRecId _sharedData, RefRecId _vendCategoryRecId)
    {
        return (CatDisplayVendorCategory::find(_sharedData, _vendCategoryRecId).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the record that matches the given <paramref>_sharedData</paramref> parameter of type <c>RefRecId</c> and the <paramref>_vendCategoryRecId</paramref> parameter of type <c>RefRecId</c>.
    /// </summary>
    /// <param  name='_sharedData'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <param  name='_vendCategoryRecId'>
    /// An instance of the <c>RefRecId</c> data type.
    /// </param>
    /// <param  name='_forUpdate'>
    /// An instance of the boolean data type.
    /// </param>
    /// <returns>
    /// An instance of the <c>CatDisplayVendorCategory</c> data type.
    /// </returns>
    public static CatDisplayVendorCategory find(RefRecId _sharedData, RefRecId _vendCategoryRecId, boolean _forUpdate = false)
    {
        CatDisplayVendorCategory tblCatDisplayVendorCategory;

        if (_sharedData && _vendCategoryRecId)
        {
            tblCatDisplayVendorCategory.selectForUpdate(_forUpdate);

            select firstonly * from tblCatDisplayVendorCategory
                where tblCatDisplayVendorCategory.SharedData == _sharedData
                    && tblCatDisplayVendorCategory.VendorCategory == _vendCategoryRecId;
        }

        return tblCatDisplayVendorCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByCatDisplayVendorAllWithOrigin</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the first <c>CatDisplayVendorCategory</c> record by using the specified <paramref
    /// name="_catDisplayVendorAll" /> and <paramref name="_catDisplayOrigin" /> parameters.
    /// </summary>
    /// <param name="_catDisplayVendorAll">
    /// The <c>CatDisplayVendorAll</c> record for which to find a match.
    /// </param>
    /// <param name="_origin">
    /// The <c>CatDisplayOrigin</c> record for which to find a match.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The <c>CatDisplayVendorCategory</c> record that was found.
    /// </returns>
    /// <remarks>
    /// The method performs an outer join to find the <c>CatDisplayVendorCategory</c> record.
    /// </remarks>
    public static CatDisplayVendorCategory findByCatDisplayVendorAllWithOrigin(
        CatDisplayVendorAll _catDisplayVendorAll,
        CatDisplayOrigin    _origin,
        boolean             _forUpdate  = false
    )
    {
        CatDisplayVendorCategory    catDisplayVendorCategory;
        VendCategory                vendCategory;

        if (_catDisplayVendorAll)
        {
            catDisplayVendorCategory.selectForUpdate(_forUpdate);

            select firstonly RecId from vendCategory
                where  vendCategory.Category         == _catDisplayVendorAll.ProcurementCategory
                    && vendCategory.VendorDataArea   == _catDisplayVendorAll.VendorDataAreaId
                    && vendCategory.VendorAccount    == _catDisplayVendorAll.VendorAccountNum
            outer join * from catDisplayVendorCategory
                where  catDisplayVendorCategory.VendorCategory == vendCategory.RecId
                    && catDisplayVendorCategory.Origin         == _origin
                    && catDisplayVendorCategory.SharedData     == _catDisplayVendorAll.SharedDataRecId
            ;
        }

        return catDisplayVendorCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
        public static str txtNotExist()
    {
        return "@SYS131157";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>ProcCatalog</ConfigurationKey>
	<DeveloperDocumentation>@SYS343530</DeveloperDocumentation>
	<Label>@SYS130977</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>SharedData</TitleField1>
	<TitleField2>VendorCategory</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>SharedDataVendCategoryIdx</ClusteredIndex>
	<Modules>ProcurementAndSourcing</Modules>
	<ReplacementKey>SharedDataVendCategoryIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Origin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedData</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SharedData</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorCategory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS26467</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Origin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SharedData</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Origin</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Mandatory>Yes</Mandatory>
			<EnumType>CatDisplayOrigin</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SharedData</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>VendorCategory</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SharedDataVendCategoryIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SharedData</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>VendorCategory</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CatDisplayCategorySharedInfo</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CatDisplayCategorySharedInfo</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>CatDisplayCategorySharedInfo</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>CatDisplayCategorySharedInfo_CatDisplayVendorCategory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SharedData</Name>
					<Field>SharedData</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>VendCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>VendCategory</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>VendCategory</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>VendCategory_CatDisplayVendorCategory</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>VendorCategory</Name>
					<Field>VendorCategory</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>