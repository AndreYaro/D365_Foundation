<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResCatalogControl</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResCatalogControl extends EcoResApplicationControl
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
        public void delete()
    {
        RecId categoryAttributeRecId = this.CategoryAttribute;

        super();

        this.synchronizeCategoryAttributeLookup(categoryAttributeRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
        public void insert()
    {
        super();

        this.synchronizeCategoryAttributeLookup(this.CategoryAttribute);
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronizeCategoryAttributeLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the record in the <c>ecoResCategoryAttributeLookup</c> table based on the change in the
    /// association of searchable attributes to the procurement category.
    /// </summary>
    /// <param name="_categoryAttributeRecId">
    /// A record ID that indicates the category attribute.
    /// </param>
    private void synchronizeCategoryAttributeLookup(RecId _categoryAttributeRecId)
    {
        EcoResCategory ecoResCategoryForLookup;
        EcoResCategoryAttribute ecoResCategoryAttributeForLookup;

        ecoResCategoryAttributeForLookup = EcoResCategoryAttribute::find(_categoryAttributeRecId);
        ecoResCategoryForLookup = EcoResCategory::find(ecoResCategoryAttributeForLookup.Category);
        EcoResCategoryAttributeLookup::synchronizeWithCategoryAttribute(ecoResCategoryForLookup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
        public void update()
    {
        super();

        this.synchronizeCategoryAttributeLookup(this.CategoryAttribute);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the specified record in the <c>EcoResCatalogControl</c> table exists.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to check for existence.
    /// </param>
    /// <returns>
    ///    true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(RefRecId _recId)
    {
        return (EcoResCatalogControl::find(_recId).RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>EcoResCatalogControl</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that indicates whether the record should be read for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>EcoResCatalogControl</c> table; otherwise, an empty buffer.
    /// </returns>
    public static EcoResCatalogControl find(RefRecId _recId, boolean _forupdate = false)
    {
        EcoResCatalogControl record;

        if (!_recId)
        {
            return record;
        }
        record.selectForUpdate(_forupdate);
        select firstonly record where record.RecId == _recId;
        return record;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS152858</DeveloperDocumentation>
	<Label>@SYS152857</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>IsRequired</TitleField1>
	<TitleField2>IsInternal</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>Found</CacheLookup>
	<Extends>EcoResApplicationControl</Extends>
	<Modules>ProductInformationManagement</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<SupportInheritance>Yes</SupportInheritance>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsRequired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSearchable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsInternal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Default</Name>
			<Label>@SYS26467</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsRequired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSearchable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsInternal</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsInternal</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AttributeIsInternal</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsRequired</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AttributeIsRequired</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsSearchable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>AttributeIsSearchable</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsSortable</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ConfigurationKey>PublicSector</ConfigurationKey>
			<ExtendedDataType>AttributeIsSortable</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>EcoResApplicationControlCatalog</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>EcoResApplicationControl</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Specialization</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RecId</Name>
					<Field>RecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>