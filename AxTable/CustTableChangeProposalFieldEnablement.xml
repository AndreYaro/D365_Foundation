<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustTableChangeProposalFieldEnablement</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustTableChangeProposalFieldEnablement extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findOrCreate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record.
    /// </summary>
    /// <param name="_field">
    /// The field to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record from the <c>CustTableChangeProposalFieldEnablement</c> table; otherwise, a newly created record.
    /// </returns>
    public static CustTableChangeProposalFieldEnablement findOrCreate(CustTableChangeProposalField _field, boolean _forUpdate = false)
    {
        CustTableChangeProposalFieldEnablement result;

        result.selectForUpdate(_forUpdate);

        select firstonly result
            where result.Field == _field;

        if (!result.RecId)
        {
            result.Field = _field;
            result.insert();

            select firstonly result
                where result.Field == _field;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledFor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether or not change proposal functionality is enabled for the corresponding field.
    /// </summary>
    /// <param name="_field">
    /// The field to find.
    /// </param>
    /// <returns>
    /// True if change proposal is enabled for the provided field; otherwise false.
    /// </returns>
    public static boolean isEnabledFor(CustTableChangeProposalField _field)
    {
        boolean ret;
        CustParameters parameters = CustParameters::find();
        if (!parameters.CustTableChangeProposalIsEnabled)
        {
            ret = false;
        }
        else
        {
            CustTableChangeProposalFieldEnablement record = CustTableChangeProposalFieldEnablement::findOrCreate(_field);
            ret = record.RecId && record.IsEnabled;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates entries for all fields if they do not already exist.
    /// </summary>
    public static void initializeAll()
    {
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::CreditMax);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::Name);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::TaxGroup);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::CustomerGroup);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::MethodOfPayment);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::PaymentSpecification);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::TaxExemptNumber);

        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::BankAccount);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::CashDisc);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::CashDiscBaseDays);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::CreditRating);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::CustExcludeCollectionFees);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::CustExcludeInterestCharges);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::InvoiceAccount);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::MandatoryCreditLimit);
        CustTableChangeProposalFieldEnablement::findOrCreate(CustTableChangeProposalField::PaymTermId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@AccountsReceivable:CustTableChangeProposalFieldEnablement_DeveloperDocumentation</DeveloperDocumentation>
	<Label>@AccountsReceivable:CustTableChangeProposalFieldEnablement_Title</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Parameter</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<Modules>Customer</Modules>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Field</Name>
			<EnumType>CustTableChangeProposalField</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsEnabled</Name>
			<ExtendedDataType>CustTableChangeProposalFieldIsEnabled</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AK</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Field</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>