<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailStoreTable_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailStoreTable_IN extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>editSalesTaxFormType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edits and displays field <c>SalesTaxFormTypes</c>.
    /// </summary>
    /// <param name="_set">
    /// Indicate whether it is editing or displaying.
    /// </param>
    /// <param name="_formType">
    /// The entering formType.
    /// </param>
    /// <param name="_retailStoreTable">
    /// The retail store to be edited and displayed.
    /// </param>
    /// <returns>
    /// The Formtype of the retail table.
    /// </returns>
    public FormType_IN editSalesTaxFormType(boolean _set, FormType_IN _formType, RetailStoreTable _retailStoreTable = null)
    {
        SalesTaxFormTypesRecId_IN   salesTaxFormTypesRecId;
        if (_set)
        {
            if (_formType)
            {
                changeCompany(_retailStoreTable.inventLocationDataAreaId)
                {
                    salesTaxFormTypesRecId = SalesTaxFormTypes_IN::findbyFormType(_formType).RecId;
                    if (!salesTaxFormTypesRecId)
                    {
                        _formType = '';
                        checkFailed(strFmt("@GLS180006", _formType, fieldPName(RetailStoreTable_IN, SalesTaxFormTypes), tablePName(SalesTaxFormTypes_IN)));
                    }
                    else
                    {
                       this.SalesTaxFormTypes = salesTaxFormTypesRecId;
                    }
                }
            }
        }
        else
        {
            changeCompany(_retailStoreTable.inventLocationDataAreaId)
            {
                _formType = SalesTaxFormTypes_IN::find(this.SalesTaxFormTypes).FormType;
            }
        }
        return _formType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRetailStoreTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>RetailStoreTable</c> table.
    /// </summary>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// The table <c>RetailStoreTable</c> associated with the current record.
    /// </returns>
    public RetailStoreTable getRetailStoreTable(boolean _forUpdate = false)
    {
        return this.SysExtensionSerializerExtensionMap::getBaseTable(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteByRetailStoreTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes store extension table <c>RetailStoreTable_IN</c> record for specific <c>RetailStoreTable</c> recId.
    /// </summary>
    /// <param name="_retailStoreTableRecId">
    /// The <c>RetailStoreTable</c> recId.
    /// </param>
    public static void deleteByRetailStoreTable(RefRecId _retailStoreTableRecId)
    {
        RetailStoreTable_IN retailStoreTableIN;

        delete_from retailStoreTableIN
            where retailStoreTableIN.RetailStoreTable == _retailStoreTableRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRetailStoreTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>RetailStoreTable_IN</c> table.
    /// </summary>
    /// <param name="_retailStoreTableRecId">
    ///    The record ID of the <c>RetailStoreTable</c> record to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    The specified record in the <c>RetailStoreTable_IN</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailStoreTable_IN findByRetailStoreTable(
        RefRecId    _retailStoreTableRecId,
        boolean     _forUpdate = false)
    {
        RetailStoreTable_IN retailStoreTableIN;

        if (_retailStoreTableRecId != 0)
        {
            retailStoreTableIN.selectForUpdate(_forUpdate);

            select firstonly * from retailStoreTableIN
                where retailStoreTableIN.RetailStoreTable == _retailStoreTableRecId;
        }

        return retailStoreTableIN;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@SYS4083177</DeveloperDocumentation>
	<FormRef>RetailStoreTable</FormRef>
	<Label>@SYS4083176</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>RetailStoreTable</TitleField1>
	<TitleField2>SalesTaxFormTypes</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>RetailStoreTableIdx</ClusteredIndex>
	<Modules>Retail</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetailStoreTable</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesTaxFormTypes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetailStoreTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RetailStoreTable</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Receipts</Name>
			<Label>@SYS334055</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxDetailsType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShowTaxOnTax</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>SalesTax</Name>
			<Label>@GLS5536</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesTaxFormTypes</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RetailStoreTable</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SalesTaxFormTypes</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>SalesTaxFormTypesRecId_IN</ExtendedDataType>
			<Label>@GLS5518</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ShowTaxOnTax</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS4000744</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TaxDetailsType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS132482</Label>
			<EnumType>ReceiptTaxDetailsType_IN</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RetailStoreTableIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RetailStoreTable</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>SysExtensionSerializerExtensionMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>BaseRecId</MapField>
					<MapFieldTo>RetailStoreTable</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailStoreTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailStoreTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RetailStoreTable</Name>
					<Field>RetailStoreTable</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>SalesTaxFormTypes_IN</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SalesTaxFormTypes_IN</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesTaxFormTypes_RetailStoreTable_IN</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SalesTaxFormTypes</Name>
					<Field>SalesTaxFormTypes</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>