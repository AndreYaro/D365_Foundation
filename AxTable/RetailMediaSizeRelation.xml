<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailMediaSizeRelation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailMediaSizeRelation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record by Media Id, Size RecId and Internal Organization RecId.
    /// </summary>
    /// <param name = "_mediaRresource">The ResourceId cloumn value.</param>
    /// <param name = "_size">The Size RecId value.</param>
    /// <param name = "_internalOrg">The Internal organization RecId value.</param>
    /// <param name = "_forUpdate">whether the caller want to update the record.</param>
    /// <returns>The Find result as RetailMediaAndColorRelation instance.</returns>
    public static RetailMediaSizeRelation find(RefRecId _mediaRresource, RefRecId _size = 0, RefRecId _internalOrg = 0, boolean _forUpdate = false)
    {
        RetailMediaSizeRelation sizeRelationTable;
        if (_mediaRresource)
        {
            sizeRelationTable.selectForUpdate(_forUpdate);

            select firstonly sizeRelationTable  where sizeRelationTable.MediaResource == _mediaRresource && sizeRelationTable.Size == _size
                        && sizeRelationTable.InternalOrganization == _internalOrg;
        }

        return sizeRelationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record by Size RecId and Internal Organization RecId.
    /// </summary>
    /// <param name = "_size">The Size RecId value.</param>
    /// <param name = "_internalOrg">The Internal organization RecId value.</param>
    /// <param name = "_forUpdate">whether the caller want to update the record.</param>
    /// <returns>The Find result as RetailMediaAndSizeRelation instance.</returns>
    public static RetailMediaSizeRelation findByIds(RefRecId _size, RefRecId _internalOrg = 0, boolean _forUpdate = false)
    {
        RetailMediaSizeRelation sizeRelationTable;
        if (_size)
        {
            sizeRelationTable.selectForUpdate(_forUpdate);

            select firstonly sizeRelationTable  where sizeRelationTable.Size == _size
                        && sizeRelationTable.InternalOrganization == _internalOrg;
        }

        return sizeRelationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByResourceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record by Media Id.
    /// </summary>
    /// <param name = "_resourceId">The ResourceId cloumn value.</param>
    /// <param name = "_forUpdate">whether the caller want to update the record.</param>
    /// <returns>Find result as RetailMediaAndSizeRelation instance.</returns>
    public static RetailMediaSizeRelation findByResourceId(int _resourceId, boolean _forUpdate = false)
    {
        RetailMediaSizeRelation sizeRelationTable;
        RetailImageResource imageResourceTable;
        if (_resourceId)
        {
            sizeRelationTable.selectForUpdate(_forUpdate);

            select firstonly sizeRelationTable
            join imageResourceTable where sizeRelationTable.MediaResource == imageResourceTable.RecId
            && imageResourceTable.ResourceId == _resourceId;
        }

        return sizeRelationTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@Retail:RetailMediaSizeRelationDocumentation</DeveloperDocumentation>
	<Label>@RetailMediaGalleryLabels:RetailSizeMediaRelationEntity</Label>
	<ClusteredIndex>RetailMediaSizeRelationIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Merchandising</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>MediaResource</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Label>@RetailMediaGalleryLabels:MediaResourceRecId</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Size</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResSizeRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InternalOrganization</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInternalOrgRefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDefault</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:IsDefault</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RetailMediaSizeRelationIdx</Name>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Size</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MediaResource</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InternalOrganization</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>