<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerAllocateKey</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerAllocateKey extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkExist</Name>
				<Source><![CDATA[
    public static boolean checkExist(LedgerAllocateKeyId _key )
    {
        boolean ret = true;

        if (!LedgerAllocateKey::exist(_key))
        {
            ret = checkFailed(strfmt(LedgerAllocateKey::txtNotExist(), _key));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(LedgerAllocateKeyId _key )
    {
        boolean found;

        found = (select firstonly
                     RecId
                from
                     LedgerAllocateKey
                 where
                     LedgerAllocateKey.key == _key).RecId != 0;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static LedgerAllocateKey find(
        LedgerAllocateKeyId _key ,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        LedgerAllocateKey LedgerAllocateKey;

        LedgerAllocateKey.selectForUpdate(_forupdate);
        if (_forupdate  && _concurrencyModel != ConcurrencyModel::Auto)
        {
            LedgerAllocateKey.concurrencyModel(_concurrencyModel);
        }

        select firstonly
            LedgerAllocateKey
            where
            LedgerAllocateKey.key == _key;

        return LedgerAllocateKey;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefLedgerAllocateKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the <c>LedgerAllocateKey</c> form for the specified ledger allocate key.
    /// </summary>
    /// <param name="_ledgerAllocateKey">
    /// The <c>LedgerAllocateKey</c> record that is referenced by the caller.
    /// </param>
    /// <param name="_caller">
    /// The form object that is calling the <c>LedgerAllocateKey</c> form.
    /// </param>
    public static void jumpRefLedgerAllocateKey(LedgerAllocateKey _ledgerAllocateKey, Object _caller)
    {
        Args args;
        FormRun formRun;

        if (!_caller)
        {
            throw error(Error::missingParameter(null));
        }

        args = new Args(new DictTable(_ledgerAllocateKey.TableId).formRef());
        args.caller(_caller);

        formRun = classfactory.formRunClass(args);
        formRun.init();
        formRun.run();
        formRun.dataSource().findRecord(_ledgerAllocateKey);
        formRun.detach();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtNotExist</Name>
				<Source><![CDATA[
    static TxtNotExist txtNotExist()
    {
        return "@SYS10019";
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a value that indicates whether the allocation category can be deleted.
    /// </summary>
    /// <returns>A value that indicates whether the allocation category can be deleted.</returns>
    public boolean validateDelete()
    {
        boolean ret;

        ret = super();

        LedgerAccrualTable ledgerAccrualTable;

        select firstonly AllocateKeyId from ledgerAccrualTable
            where ledgerAccrualTable.AllocateKeyId == this.Key;

        if (ledgerAccrualTable)
        {
            ret = false;
            error(strfmt("@GeneralLedger:LedgerAllocationKeyDeleteError", this.Key));
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS125896</DeveloperDocumentation>
	<FormRef>LedgerAllocateKey</FormRef>
	<Label>@SYS26219</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>Key</TitleField1>
	<TitleField2>Txt</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>KeyIdx</ClusteredIndex>
	<Modules>Ledger</Modules>
	<PrimaryIndex>KeyIdx</PrimaryIndex>
	<ReplacementKey>KeyIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>LedgerAllocateTrans</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>LedgerAllocateTrans</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Fixed</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Calculation</Name>
			<Label>@SYS7523</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Fixed</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS7576</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Txt</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Fixed</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@SYS7409</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LedgerAllocateKeyId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Txt</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KeyIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings>
		<AxTableMapping>
			<MappingTable>AllocateKeyMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Id</MapField>
					<MapFieldTo>Key</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Name</MapField>
					<MapFieldTo>Txt</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations />
	<StateMachines />
</AxTable>