<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanProductionFlowReference</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LeanProductionFlowReference extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>legalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the legal entity related to the current record.
    /// </summary>
    /// <returns>
    ///    A <c>CompanyInfo</c> record ID.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CompanyInfoRecId legalEntity()
    {
        return this.planReference().LegalEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>legalEntityDataAreaId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the legal entity <c>DataArea</c> value related to the current record.
    /// </summary>
    /// <returns>
    ///    A <c>CompanyInfo</c> record ID.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public selectableDataArea legalEntityDataAreaId()
    {
        return CompanyInfo::find(false,this.planReference().LegalEntity).DataArea;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            // [field that needs defaulting,
            //  [fields that the default values depends on]]

            [fieldNum(LeanProductionFlowReference, ProdGroupDataAreaId),
                [fieldNum(LeanProductionFlowReference, ProdGroupId)]]
            ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(LeanProductionFlowReference, ProdGroupDataAreaId):
                this.ProdGroupDataAreaId = this.ProdGroupId ? appl.company().dataArea(tableNum(ProdGroup)) : '';
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>planReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the corresponding record in the <c>PlanReference</c> table.
    /// </summary>
    /// <returns>
    ///    A record in the <c>PlanReference</c> table; otherwise, an empty record.
    /// </returns>
    public PlanReference planReference()
    {
        return PlanReference::find(this.PlanReference);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the record in the <c>ProdGroup</c> table that is referenced in the <c>prodGroupId</c> table
    ///    field.
    /// </summary>
    /// <returns>
    ///    A <c>ProdGroup</c> table buffer.
    /// </returns>
    public ProdGroup prodGroup()
    {
        return ProdGroup::find(this.ProdGroupId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the specified record in the <c>LeanProductionFlowReference</c> table exists.
    /// </summary>
    /// <param name="_recId">
    /// The record ID of the <c>LeanProductionFlowReference</c> table to check for existence.
    /// </param>
    /// <returns>
    /// true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(recId _recId)
    {
        return _recId &&
               (select firstonly RecId from leanProductionFlowReference
                    where leanProductionFlowReference.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>LeanProductionFlowReference</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record in the <c>LeanProductionFlowReference</c> table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>LeanProductionFlowReference</c> table; otherwise, an empty record.
    /// </returns>
    public static LeanProductionFlowReference find(recId _recId, boolean _forUpdate = false)
    {
        LeanProductionFlowReference    leanProductionFlowReference;

        if (_recId)
        {
            leanProductionFlowReference.selectForUpdate(_forUpdate);

            select firstonly leanProductionFlowReference
                where leanProductionFlowReference.RecId == _recId;
        }

        return leanProductionFlowReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPlanReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>LeanProductionFlowReference</c> table.
    /// </summary>
    /// <param name="_planReference">
    ///    The plan reference of the record in the <c>LeanProductionFlowReference</c> table to find.
    /// </param>
    /// <param name="_forUpdate">
    ///    A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>LeanProductionFlowReference</c> table; otherwise, an empty record.
    /// </returns>
    public static LeanProductionFlowReference findPlanReference(RefRecId _planReference, boolean _forUpdate = false)
    {
        LeanProductionFlowReference    leanProductionFlowReference;

        if (_planReference)
        {
            leanProductionFlowReference.selectForUpdate(_forUpdate);

            select firstonly leanProductionFlowReference
                where leanProductionFlowReference.PlanReference == _planReference;
        }

        return leanProductionFlowReference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPlanReferenceName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>LeanProductionFlowReference</c> table.
    /// </summary>
    /// <param name="_planReferenceName">
    /// The plan reference name of the <c>LeanProductionFlowReference</c> table to find.
    /// </param>
    /// <param name="_forUpdate">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>LeanProductionFlowReference</c> table; otherwise, an empty record.
    /// </returns>
    public static LeanProductionFlowReference findPlanReferenceName(PlanName _planReferenceName, boolean _forUpdate = false)
    {
        LeanProductionFlowReference     leanProductionFlowReference;
        PlanReference                   planReference;

        if (_planReferenceName)
        {
            leanProductionFlowReference.selectForUpdate(_forUpdate);

            select firstonly leanProductionFlowReference
                exists join planReference
                    where planReference.RecId == leanProductionFlowReference.PlanReference
                       && planReference.PlanName == _planReferenceName;
        }

        return leanProductionFlowReference;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS324191</DeveloperDocumentation>
	<FormRef>LeanProductionFlow</FormRef>
	<Label>@SYS152562</Label>
	<SingularLabel>@SYS152563</SingularLabel>
	<TableGroup>Main</TableGroup>
	<TitleField1>PlanReference</TitleField1>
	<TitleField2>ProdGroupId</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<Modules>ProductionControl</Modules>
	<ReplacementKey>PlanReferenceIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<TableContents>BaseData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProdGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlanReference</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PlanReference</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PlanReference</Name>
			<Label>@SYS152559</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PlanReference</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ProductGroup</Name>
			<Label>@SYS58238</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProdGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProdGroupDataAreaId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>PlanReference</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PlanReferenceRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProdGroupDataAreaId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ProdGroupId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ProdGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PlanReferenceIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>PlanReference</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PlanReference</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedTable>PlanReference</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ReferenceToPlan</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>ProductionFlowReference</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PlanReference</Name>
					<Field>PlanReference</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ProdGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>ProdGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>ProductionGroup</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>ProdGroup</Role>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProdGroupDataAreaId</Name>
					<Field>ProdGroupDataAreaId</Field>
					<RelatedField>dataAreaId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ProdGroupId</Name>
					<SourceEDT>ProdGroupId</SourceEDT>
					<Field>ProdGroupId</Field>
					<RelatedField>ProdGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ProdGroupIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>