<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailMediaAndProductRelation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailMediaAndProductRelation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record by Media Id, Product RecId, Catalog number and Internal Organization RecId..
    /// </summary>
    /// <param name = "_resourceId">The ResourceId cloumn value.</param>
    /// <param name = "_productId">The Product RecId value.</param>
    /// <param name = "_catalogId">The Catalog number value.</param>
    /// <param name = "_internalOrgId">The Internal organization RecId value.</param>
    /// <param name = "_forUpdate">whether the caller want to update the record.</param>
    /// <returns>The Find result as RetailMediaAndProductRelation instance.</returns>
    public static RetailMediaAndProductRelation find(int _resourceId, RefRecId _productId = 0, str _catalogId = '', RefRecId _internalOrgId = 0, boolean _forUpdate = false)
    {
        RetailMediaAndProductRelation productRelationTable;
        if (_resourceId)
        {
            productRelationTable.selectForUpdate(_forUpdate);

            select firstonly productRelationTable  where productRelationTable.MediaResourceId == _resourceId && productRelationTable.Product == _productId
                        && productRelationTable.CatalogId == _catalogId && productRelationTable.InternalOrganization == _internalOrgId;
        }

        return productRelationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record by Product RecId, Catalog number and Internal Organization RecId.
    /// </summary>
    /// <param name = "_productId">The Product RecId value.</param>
    /// <param name = "_catalogId">The Catalog number value.</param>
    /// <param name = "_internalOrgId">The Internal organization RecId value.</param>
    /// <param name = "_forUpdate">whether the caller want to update the record.</param>
    /// <returns>The Find result as RetailMediaAndProductRelation instance.</returns>
    public static RetailMediaAndProductRelation findByIds(RefRecId _productId, str _catalogId = '', RefRecId _internalOrgId = 0, boolean _forUpdate = false)
    {
        RetailMediaAndProductRelation productRelationTable;
        if (_productId)
        {
            productRelationTable.selectForUpdate(_forUpdate);

            select firstonly productRelationTable  where productRelationTable.Product == _productId
                        && productRelationTable.CatalogId == _catalogId && productRelationTable.InternalOrganization == _internalOrgId;
        }

        return productRelationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByResourceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find a record by Media Id.
    /// </summary>
    /// <param name = "_resourceId">The ResourceId cloumn value.</param>
    /// <param name = "_forUpdate">whether the caller want to update the record.</param>
    /// <returns>Find result as RetailMediaAndProductRelation instance.</returns>
    public static RetailMediaAndProductRelation findByResourceId(int _resourceId, boolean _forUpdate = false)
    {
        RetailMediaAndProductRelation productRelationTable;
        if (_resourceId)
        {
            productRelationTable.selectForUpdate(_forUpdate);

            select firstonly productRelationTable
            where productRelationTable.MediaResourceId == _resourceId;
        }

        return productRelationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsThisImageUsedAsDefultByOtherMasterEntities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check whether this Image is used as Defult by any other master entities.
    /// </summary>
    /// <param name = "_resourceId">The ResourceId cloumn value.</param>
    /// <returns>True/false.</returns>
    public static boolean IsThisImageUsedAsDefultByOtherMasterEntities(int _resourceId)
    {
        boolean result = false;
        boolean _forUpdate = false;
        RetailMediaAndProductRelation productRelationTable;
        if (_resourceId)
        {
            productRelationTable.selectForUpdate(_forUpdate);

            select firstonly productRelationTable
            where productRelationTable.MediaResourceId == _resourceId  && productRelationTable.IsDefault == NoYes::Yes;

            if (productRelationTable)
            {
                result = true;
            }
        }
        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProductName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the product name.
    /// </summary>
    /// <returns>Product name.</returns>
    public display str ProductName()
    {
        return EcoResProduct::find(this.Product).DisplayProductNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>InternalOrgName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the Internal organization name.
    /// </summary>
    /// <returns>Internal organization name.</returns>
    public display str InternalOrgName()
    {
        RetailInternalOrganization internalOrgTable;
        OMInternalOrganization omInternalOrgTable;

        select * from omInternalOrgTable
        join internalOrgTable
        where omInternalOrgTable.RecId == internalOrgTable.InternalOrganization;

        return omInternalOrgTable.Name;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Merchandising</Modules>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>MediaResourceId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:ResourceId</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsDefault</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RetailMediaGalleryLabels:IsDefault</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CatalogId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailCatalogId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>InternalOrganization</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailInternalOrgRefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>Product</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>EcoResProductRecId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>ProductMediaIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CatalogId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>InternalOrganization</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Product</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>MediaResourceId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Product</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>EcoResProduct</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>Product</Name>
					<Field>Product</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>RetailInternalOrganization</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>RetailInternalOrganization</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InternalOrganization</Name>
					<Field>InternalOrganization</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>