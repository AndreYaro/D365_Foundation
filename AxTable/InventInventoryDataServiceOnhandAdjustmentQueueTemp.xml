<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventInventoryDataServiceOnhandAdjustmentQueueTemp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventInventoryDataServiceOnhandAdjustmentQueueTemp extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ToAdjustmentEvent</Name>
				<Source><![CDATA[
    public InventOnHandAdjustmentEvent ToAdjustmentEvent()
    {
        InventOnHandAdjustmentEvent event = new InventOnHandAdjustmentEvent();
        event.parmId(this.EventId);
        event.parmOrganizationId(this.Company);
        event.parmProductId(this.ItemId);
        InventDim _dim = InventDim::findInLegalEntity(this.InventDimId, this.Company);
        event.parmDimensionSet(InventOnHandChangeEventDimensionSet::BuildNonEmptyDimensionMapFromInventDim(_dim));
        Map qtys = new Map(Types::String, Types::AnyType);
        Map qty = new Map(Types::String, Types::Real);
        qty.add(this.PhysicalMeasure, this.Qty);
        qtys.add(this.Datasource, qty);
        event.parmQuantities(qtys);

        return event;
    }

]]></Source>
			</Method>
			<Method>
				<Name>truncate</Name>
				<Source><![CDATA[
    internal static void truncate()
    {
        SQLDataDictionary sqlDict = new SQLDataDictionary();

        new SQLDataDictionaryPermission(methodstr(SQLDataDictionary, tableTruncate)).assert();
        sqlDict.tableTruncate(tableNum(InventInventoryDataServiceOnhandAdjustmentQueueTemp), false);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertPostFailedRecordsIntoQueueTable</Name>
				<Source><![CDATA[
    public static void insertPostFailedRecordsIntoQueueTable()
    {
        InventInventoryDataServiceOnhandAdjustmentQueue            adjustmentQueue;
        InventInventoryDataServiceOnhandAdjustmentQueueTemp        adjustmentQueueTemp;

        insert_recordset adjustmentQueue (ItemId, InventDimId, Company, Datasource, PhysicalMeasure, Qty, EventId)
            select ItemId, InventDimId, Company, Datasource, PhysicalMeasure, Qty, EventId
                from adjustmentQueueTemp
                where adjustmentQueueTemp.PostFailed == true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateAdjustmentEvents</Name>
				<Source><![CDATA[
    public static List generateAdjustmentEvents(RecId minRecId, RecId maxRecId)
    {
        Map eventIdAdjustmentEvents = new Map(Types::String, Types::Class);        
        InventInventoryDataServiceOnhandAdjustmentQueueTemp adjustmentQueueTemp;
        InventOnHandAdjustmentEvent event;

        while select crosscompany adjustmentQueueTemp
            where adjustmentQueueTemp.RecId >= minRecId
            && adjustmentQueueTemp.RecId <= maxRecId
        {
            if (eventIdAdjustmentEvents.exists(adjustmentQueueTemp.EventId))
            {
                event = eventIdAdjustmentEvents.lookup(adjustmentQueueTemp.EventId) as InventOnHandAdjustmentEvent;

                event.mergeQuantities(adjustmentQueueTemp.Datasource, adjustmentQueueTemp.PhysicalMeasure, adjustmentQueueTemp.Qty);
            }
            else
            {
                event = adjustmentQueueTemp.ToAdjustmentEvent();
                eventIdAdjustmentEvents.insert(adjustmentQueueTemp.EventId, event);
            }
        }
        
        List adjustmentEvents = new List(Types::Class);
        var mapEnum = new MapEnumerator(eventIdAdjustmentEvents);        
        while(mapEnum.moveNext())
        {
            adjustmentEvents.addEnd(mapEnum.currentValue());
        }

        return adjustmentEvents;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<ClusteredIndex></ClusteredIndex>
	<DisableLockEscalation>Yes</DisableLockEscalation>
	<PrimaryIndex></PrimaryIndex>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventDimId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Company</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>LegalEntityDataAreaId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EventId</Name>
			<StringSize>55</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Qty</Name>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Datasource</Name>
			<StringSize>50</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PhysicalMeasure</Name>
			<StringSize>50</StringSize>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PostFailed</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>