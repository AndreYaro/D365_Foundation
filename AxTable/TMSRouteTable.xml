<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSRouteTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSRouteTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayCountOfDetailErrors</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the number of errors occured in the route.
    /// </summary>
    /// <returns>
    /// The number of rate errors occured in the route.
    /// </returns>
    display TMSCount displayCountOfDetailErrors()
    {
        return (select count(RecId) from tmsRateDetails
                    where tmsRateDetails.RefRecId       == this.RecId &&
                          tmsRateDetails.RateType    == TMSRateType::Error).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayCountOfDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the number of rate details excluding the errors.
    /// </summary>
    /// <returns>
    /// The number of non-error rate details.
    /// </returns>
    display TMSCount displayCountOfDetails()
    {
        return (select count(RecId) from tmsRateDetails
                    where tmsRateDetails.RefRecId       == this.RecId           &&
                          tmsRateDetails.RateType    != TMSRateType::Rate    &&
                          tmsRateDetails.RateType    != TMSRateType::Error).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayNumberOfSegments</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the number of segments on the route.
    /// </summary>
    /// <returns>
    /// The number of segments on the route.
    /// </returns>
    display TMSCount displayNumberOfSegments()
    {
        return (select count(RecId) from tmsRouteSegmentTable
            where tmsRouteSegmentTable.RouteRecId == this.RecId).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayRouteName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the name of the route.
    /// </summary>
    /// <returns>
    /// The name of the route.
    /// </returns>
    display TMSName displayRouteName()
    {
        return (select tmsRouteGuide where tmsRouteGuide.RecId == this.getRouteGuideRecId()).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayTotalMiles</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the total miles on the route.
    /// </summary>
    /// <returns>
    /// The total miles on the route.
    /// </returns>
    display TMSMiles displayTotalMiles()
    {
        return this.totalMiles();
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasRateDetails</Name>
				<Source><![CDATA[
    display boolean hasRateDetails(TMSRouteTable _routeTable)
    {
        return _routeTable.displayCountOfDetails() > 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constraintImage</Name>
				<Source><![CDATA[
    display container constraintImage(TMSRouteTable _routeTable)
    {
        ImageReference imageReference;
        container imageContainer;

        switch (_routeTable.Action)
        {
            case TMSAction::Warn:
                imageReference = ImageReference::constructForSymbol('Warning');
                break;

            case TMSAction::Restrict:
                imageReference = imageReference::constructForSymbol('Error');
                break;

            default:
                imageReference = null;
        }

        if (imageReference)
        {
            imageContainer = imageReference.pack();
        }
        else
        {
            imageContainer = conNull();
        }

        return imageContainer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalMiles</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total miles on the route created for a reference document.
    /// </summary>
    /// <returns>
    /// The total miles on the route created for a reference document.
    /// </returns>
    TMSMiles totalMiles()
    {
        return (select sum(Miles) from tmsRouteSegmentTable
                    where tmsRouteSegmentTable.RouteId == this.RouteId 
                        && tmsRouteSegmentTable.RefTableId == this.RefTableId 
                        && tmsRouteSegmentTable.RefRecId   == this.RefRecId 
                        && tmsRouteSegmentTable.CreatedBy == this.CreatedBy 
                        && tmsRouteSegmentTable.RouteRecId != 0).Miles;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes Route Table records based on the parameters.
    /// </summary>
    /// <param name="_refTableId">
    /// The <c>refTableId</c> values that should be removed.
    /// </param>
    /// <param name="_refRecId">
    /// The <c>refRecId</c> values that should be removed.
    /// </param>
    /// <param name="_date">
    /// The date values that should be removed.
    /// </param>
    public static void deleteFromParameters(
        TableId     _refTableId,
        RecId       _refRecId,
        UTCDateTime _date)
    {
        TMSRouteTable    routeTable;

        ttsbegin;
        //Don't call skip methods since we want delete actions to kick in
        delete_from routeTable
          where routeTable.createdDateTime < _date
            || (_refTableId && _refRecId
               && routeTable.createdBy == curUserId()
               && routeTable.RefTableId == _refTableId
               && routeTable.RefRecId   == _refRecId);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteByRefRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes Route Table records for a specific referenced record
    /// </summary>
    /// <param name="_refTableId">
    /// The <c>refTableId</c> values that should be removed.
    /// </param>
    /// <param name="_refRecId">
    /// The <c>refRecId</c> values that should be removed.
    /// </param>
    public static void deleteByRefRecord(
        TableId     _refTableId,
        RecId       _refRecId)
    {
        TMSRouteTable    routeTable;

        if (_refTableId && _refRecId)
        {
            ttsbegin;
            //Don't call skip methods since we want delete actions to kick in
            delete_from routeTable
              where routeTable.createdBy == curUserId()
                &&  routeTable.RefTableId == _refTableId
                &&  routeTable.RefRecId   == _refRecId;

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a specific <c>TMSRouteTable</c> record exists.
    /// </summary>
    /// <param name="_recId">
    /// Id of the record.
    /// </param>
    /// <returns>
    /// True if the record exists.
    /// </returns>
    public static boolean exist(RecId _recId)
    {
        return (_recId) &&
               (select firstonly tmsRouteTable
                    where tmsRouteTable.RecId == _recId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSRouteTable</c> record by id.
    /// </summary>
    /// <param name="_recId">
    /// Id of the record.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static TMSRouteTable find(RecId      _recId,
                                     boolean    _forupdate = false)
    {
        TMSRouteTable    tmsRouteTable;

        if (_recId)
        {
            tmsRouteTable.selectForUpdate(_forupdate);

            select firstonly tmsRouteTable
                where tmsRouteTable.RecId == _recId;
        }

        return tmsRouteTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRouteIdRefRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a specific <c>TMSRouteTable</c> record for currentuser by route id and reference record id.
    /// </summary>
    /// <param name="_routeId">
    /// Id of the route.
    /// </param>
    /// <param name="_refTableId">
    /// The <c>refTableId</c> to find.
    /// </param>
    /// <param name="_refRecId">
    /// The <c>refRecId</c> to find.
    /// </param>
    /// <param name="_forupdate">
    /// Determines whether the record is selected for update.
    /// </param>
    /// <returns>
    /// The record that is searched for.
    /// </returns>
    public static TMSRouteTable findByRouteIdRefRecord(
            TMSRouteId  _routeId,
            TableId     _refTableId,
            RecId       _refRecId,
            boolean     _forupdate = false)
    {
        TMSRouteTable    tmsRouteTable;

        tmsRouteTable.selectForUpdate(_forupdate);

        select firstonly tmsRouteTable
            where tmsRouteTable.createdBy  == curUserId()
                && tmsRouteTable.RouteId    == _routeId
                && tmsRouteTable.RefTableId == _refTableId
                && tmsRouteTable.RefRecId   == _refRecId;

        return tmsRouteTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs lookup on the address of a location.
    /// </summary>
    /// <param name="_ctrl">
    /// Form control.
    /// </param>
    /// <param name="_addressType">
    /// Type of the address.
    /// </param>
    static void lookupAddress(FormStringControl _ctrl, TMSAddressType _addressType)
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;
        boolean                 selectedNone;

        switch (_addressType)
        {
            case TMSAddressType::Customer:
                sysTableLookup          = SysTableLookup::newParameters(tableNum(TMSCustLocation), _ctrl);
                query                   = new Query();
                queryBuildDataSource    = query.addDataSource(tableNum(TMSCustLocation));

                sysTableLookup.addLookupfield(fieldNum(TMSCustLocation, AccountNum));
                sysTableLookup.addLookupMethod(tableMethodStr(TMSCustLocation, name));
                sysTableLookup.addLookupfield(fieldNum(TMSCustLocation, City));
                sysTableLookup.addLookupfield(fieldNum(TMSCustLocation, State));
                sysTableLookup.addLookupfield(fieldNum(TMSCustLocation, ZipCode));
                sysTableLookup.addLookupfield(fieldNum(TMSCustLocation, CountryRegionId));
                break;

            case TMSAddressType::Vendor:
                sysTableLookup          = SysTableLookup::newParameters(tableNum(TMSVendLocation), _ctrl);
                query                   = new Query();
                queryBuildDataSource    = query.addDataSource(tableNum(TMSVendLocation));

                sysTableLookup.addLookupfield(fieldNum(TMSVendLocation, AccountNum));
                sysTableLookup.addLookupMethod(tableMethodStr(TMSVendLocation, name));
                sysTableLookup.addLookupfield(fieldNum(TMSVendLocation, City));
                sysTableLookup.addLookupfield(fieldNum(TMSVendLocation, State));
                sysTableLookup.addLookupfield(fieldNum(TMSVendLocation, ZipCode));
                sysTableLookup.addLookupfield(fieldNum(TMSVendLocation, CountryRegionId));
                break;

            case TMSAddressType::Hub:
                sysTableLookup          = SysTableLookup::newParameters(tableNum(TMSHubMasterLocation), _ctrl);
                query                   = new Query();
                queryBuildDataSource    = query.addDataSource(tableNum(TMSHubMasterLocation));

                sysTableLookup.addLookupfield(fieldNum(TMSHubMasterLocation, HubMasterCode));
                sysTableLookup.addLookupfield(fieldNum(TMSHubMasterLocation, CompanyName));
                sysTableLookup.addLookupfield(fieldNum(TMSHubMasterLocation, City));
                sysTableLookup.addLookupfield(fieldNum(TMSHubMasterLocation, State));
                sysTableLookup.addLookupfield(fieldNum(TMSHubMasterLocation, ZipCode));
                sysTableLookup.addLookupfield(fieldNum(TMSHubMasterLocation, CountryRegionId));
                break;

            default:
                selectedNone = true;
                break;
        }

        if (!selectedNone)
        {
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupWarehouseAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs lookup on the address of a location for warehouse.
    /// </summary>
    /// <param name="_ctrl">
    /// Form control.
    /// </param>
    public static void lookupWarehouseAddress(FormStringControl _ctrl)
    {
        Args args = new Args(formstr(TMSWarehouseLocationLookup));
        
        args.caller(_ctrl.formRun().form());

        FormRun formRun = ClassFactory::formRunClassOnClient(args);

        formRun.init();

        _ctrl.performFormLookup(formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transitTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the total route transit time.
    /// </summary>
    /// <returns>
    /// The total route transit time.
    /// </returns>
    [SysClientCacheDataMethodAttribute(true)]
    public display TMSTransitTime transitTime()
    {
        TMSRouteSegmentTable tmsRouteSegmentTable;

        select sum(TransitTime)
            from tmsRouteSegmentTable
                where tmsRouteSegmentTable.RouteRecId == this.RecId;

        return tmsRouteSegmentTable.TransitTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTMSRouteGuideId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a <c>TMSRouteTable</c> record with values that are based on a <c>TMSRouteGuide</c> record.
    /// </summary>
    /// <param name="_tmsRouteId">
    /// A RecId to be used to find a <c>TMSRouteGuide</c> record.
    /// </param>
    public void initFromTMSRouteGuideId(TMSRouteId _tmsRouteId)
    {
        TMSRouteGuide tmsRouteGuide;

        tmsRouteGuide = TMSRouteGuide::findByRecId(str2int64(_tmsRouteId));

        this.RouteId  = _tmsRouteId;

        if (tmsRouteGuide)
        {
            this.CarrierCode        = tmsRouteGuide.CarrierCode;
            this.CarrierServiceCode = tmsRouteGuide.CarrierServiceCode;
            this.ModeCode           = tmsRouteGuide.ModeCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRouteGuideRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves record ID of the route guide used to create the current route.
    /// </summary>
    /// <returns>
    /// Returns a route guide recId.
    /// </returns>
    public TMSRouteGuideRecId getRouteGuideRecId()
    {
        return str2int64(this.RouteId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldThrowExceptionOnZeroDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if concurrent deletes should throw exception.
    /// </summary>
    /// <returns>true if exception should be thrown; otherwise false.</returns>
    [Hookable(false)]
    public boolean shouldThrowExceptionOnZeroDelete()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX1959</DeveloperDocumentation>
	<Label>@TRX519</Label>
	<TableGroup>WorksheetLine</TableGroup>
	<TitleField1>RouteId</TitleField1>
	<TitleField2>RefRecId</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<Modules>Transportation</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>RefRecIdRefTableIdCreatedByRouteIdx</ReplacementKey>
	<TableContents>DefaultData</TableContents>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RouteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HasErrors</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Action</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RouteGuideName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoutePlanName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RouteConfigCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierServiceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Id</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipperRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipUTCDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryUTCDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RouteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatedBy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>All</Name>
			<Label>@WAX2277</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RouteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefTableId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RefRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>HasErrors</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Action</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RouteGuideName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoutePlanName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RouteConfigCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarrierServiceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ModeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Id</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipperRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShipUTCDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryUTCDateTime</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Action</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>TMSAction</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CarrierCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSCarrierCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CarrierServiceCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSCarrierServiceCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CustomerRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSCustomerRate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>DeliveryUTCDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSDeliveryUTCDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>HasErrors</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSHasErrors</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Id</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ModeCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSModeCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>RefRecId</Name>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>RefTableId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RouteConfigCode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSRouteConfigCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RouteGuideName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSName</ExtendedDataType>
			<Label>@TRX715</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RouteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSRouteId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>RoutePlanName</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSName</ExtendedDataType>
			<Label>@TRX274</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>ShipperRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSShipperRate</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldUtcDateTime">
			<Name>ShipUTCDateTime</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSShipUTCDateTime</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalRate</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSRate</ExtendedDataType>
			<Label>@TRX530</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsScheduledRoute</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>TMSScheduledRoute</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>CarbonEmission</Name>
			<ExtendedDataType>TMSCarbonEmission</ExtendedDataType>
			<FeatureClass>TMSSustainabilityIntegrationFeature</FeatureClass>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CarbonEmissionUnit</Name>
			<ExtendedDataType>TMSCarbonEmissionUnit</ExtendedDataType>
			<FeatureClass>TMSSustainabilityIntegrationFeature</FeatureClass>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>RefRecIdRefTableIdCreatedByRouteIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RouteId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CreatedBy</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>CreatedDateTimeIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>CreatedDateTime</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>RefRecIdRefTableIdCreatedByIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>RefRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>RefTableId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>CreatedBy</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SalesTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>SalesTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>TMSCarrier</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TMSCarrier</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CarrierCode</Name>
					<SourceEDT>TMSCarrierCode</SourceEDT>
					<Field>CarrierCode</Field>
					<RelatedField>CarrierCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CarrierCodeIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TMSCarrierService</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TMSCarrierService</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CarrierServiceCode</Name>
					<SourceEDT>TMSCarrierServiceCode</SourceEDT>
					<Field>CarrierServiceCode</Field>
					<RelatedField>CarrierServiceCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TMSMode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TMSMode</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ModeCode</Name>
					<SourceEDT>TMSModeCode</SourceEDT>
					<Field>ModeCode</Field>
					<RelatedField>ModeCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TMSRateRouteAddress</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>TMSRateRouteAddress</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>TMSRouteConfig</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>TMSRouteConfig</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RouteConfigCode</Name>
					<SourceEDT>TMSRouteConfigCode</SourceEDT>
					<Field>RouteConfigCode</Field>
					<RelatedField>RouteConfigCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSContainerTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSContainerTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>WHSLoadTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>WHSLoadTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefRecId</Name>
					<Field>RefRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>RefTableId</Name>
					<Field>RefTableId</Field>
					<RelatedField>TableId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>