<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankCodaAccountStatement</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankCodaAccountStatement extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init value.
    /// </summary>
    public void initValue()
    {
        super();

        this.IsMovementLinesUpdateDelayed = NoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearedAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display open amount.
    /// </summary>
    /// <returns>Open amount.</returns>
    public display AmountCur clearedAmount()
    {
        BankAccountTrans    bankAccountTrans;

        select sum(AmountCur), sum(AmountCorrect)
            from bankAccountTrans
                where bankAccountTrans.AccountId             == this.AccountId
                    && bankAccountTrans.AccountStatement     == this.AccountStatementNum
                    && bankAccountTrans.AccountStatementDate == this.AccountStatementDate;

        return (bankAccountTrans.AmountCur + bankAccountTrans.AmountCorrect);
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearedOpenAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display cleared open amount.
    /// </summary>
    /// <returns>Cleared open amount.</returns>
    public display AmountCur clearedOpenAmount()
    {
        BankAccountTrans    bankAccountTrans;

        select sum(AmountCur), sum(AmountCorrect)
            from bankAccountTrans
                where bankAccountTrans.AccountId             == this.AccountId
                    && bankAccountTrans.AccountStatement     == this.AccountStatementNum
                    && bankAccountTrans.AccountStatementDate == this.AccountStatementDate;

        return (bankAccountTrans.AmountCur + bankAccountTrans.AmountCorrect);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        BankCodaAccountStatementLines bankCodaAccountStatementLines;

        delete_from bankCodaAccountStatementLines
            where bankCodaAccountStatementLines.AccountStatementNum == this.AccountStatementNum
                && bankCodaAccountStatementLines.StatementDate      == this.AccountStatementDate
                && bankCodaAccountStatementLines.AccountId          == this.AccountId;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>openingBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display opening balance.
    /// </summary>
    /// <returns>Opening balance.</returns>
    public display AmountCur openingBalance()
    {
        BankCodaAccountStatement    bankCodaAccountStatement;
        AmountCur                   openingBalance;

        if (!hasFieldAccess(tableNum(BankCodaAccountStatement), fieldNum(BankCodaAccountStatement, EndingBalance), AccessType::View))
        {
            throw error("@SYS57330");
        }

        select reverse firstonly EndingBalance from bankCodaAccountStatement
            order by AccountStatementDate, AccountStatementNum
            where bankCodaAccountStatement.AccountId            == this.AccountId
               && bankCodaAccountStatement.AccountStatementDate <= this.AccountStatementDate
               && bankCodaAccountStatement.RecId                != this.RecId;

        if (bankCodaAccountStatement)
        {
            openingBalance = bankCodaAccountStatement.EndingBalance;
        }

        return openingBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        BankAccountTrans    bankAccountTrans;
        boolean             ret;

        ret = super();

        if (ret)
        {
            select bankAccountTrans
                where bankAccountTrans.AccountId            == this.AccountId
                   && bankAccountTrans.AccountStatement     == this.AccountStatementNum
                   && bankAccountTrans.AccountStatementDate == this.AccountStatementDate;

            if (bankAccountTrans.RecId)
            {
                ret = checkFailed(strFmt("@SYS56339", tableStr(BankAccountTrans)));
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Finds the specified record in the <c>BankCodaAccountStatement</c> table.
    /// </summary>
    /// <param name="_recId">
    ///    The record ID of the record to find.
    /// </param>
    /// <param name="_forupdate">
    ///    A Boolean value that specifies whether to read the record for update; optional.
    /// </param>
    /// <param name="_concurrencyModel">
    ///    The concurrency model option to use when reading the record; optional.
    /// </param>
    /// <returns>
    ///    A record in the <c>BankCodaAccountStatement</c> table.
    /// </returns>
    public static BankCodaAccountStatement find(
        recId               _recId,
        boolean             _forupdate = false,
        ConcurrencyModel    _concurrencyModel = ConcurrencyModel::Auto)
    {
        BankCodaAccountStatement bankCodaAccountStatement;

        bankCodaAccountStatement.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            bankCodaAccountStatement.concurrencyModel(_concurrencyModel);
        }

        select firstonly bankCodaAccountStatement
            where bankCodaAccountStatement.RecId == _recId;

        return bankCodaAccountStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByAccountIdNumDate</Name>
				<Source><![CDATA[
    public static BankCodaAccountStatement findByAccountIdNumDate(
        BankAccountID _accountId,
        BankAccountStatementNum _statementNum,
        TransDate               _bankAccountStatementDate,
        boolean                 _forupdate = false,
        ConcurrencyModel        _concurrencyModel = ConcurrencyModel::Auto)
    {
        BankCodaAccountStatement bankCodaAccountStatement;

        bankCodaAccountStatement.selectForUpdate(_forupdate);

        if (_forupdate && _concurrencyModel != ConcurrencyModel::Auto)
        {
            bankCodaAccountStatement.concurrencyModel(_concurrencyModel);
        }

        select firstonly bankCodaAccountStatement
            where bankCodaAccountStatement.AccountId                == _accountId
                && bankCodaAccountStatement.AccountStatementDate    == _bankAccountStatementDate
                && bankCodaAccountStatement.AccountStatementNum     == _statementNum;

        return bankCodaAccountStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findLines</Name>
				<Source><![CDATA[
    public static BankCodaAccountStatement findLines(
        BankCodaAccountStatementLines _bankCodaAccountStatementLines,
        boolean                       _forUpdate = false)
    {
        BankCodaAccountStatement       bankCodaAccountStatement;

        bankCodaAccountStatement.selectForUpdate(_forUpdate);

        select bankCodaAccountStatement
            where bankCodaAccountStatement.AccountId             == _bankCodaAccountStatementLines.AccountId
                && bankCodaAccountStatement.AccountStatementNum  == _bankCodaAccountStatementLines.AccountStatementNum
                && bankCodaAccountStatement.AccountStatementDate == _bankCodaAccountStatementLines.StatementDate;

        return bankCodaAccountStatement;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Bank</ConfigurationKey>
	<CountryRegionCodes>BE</CountryRegionCodes>
	<DeveloperDocumentation>@SYS123558</DeveloperDocumentation>
	<FormRef>BankCodaAccountStatement</FormRef>
	<Label>@SYS83615</Label>
	<TableGroup>TransactionHeader</TableGroup>
	<TitleField1>AccountId</TitleField1>
	<TitleField2>ReconcileDate</TitleField2>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>RecId</ClusteredIndex>
	<Modules>Bank</Modules>
	<PrimaryIndex>RecId</PrimaryIndex>
	<ReplacementKey>AccountDateIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>BankCodaAccountStatementLines</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>BankCodaAccountStatementLines</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountStatementNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountStatementDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReconcileDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndingBalance</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountStatementNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountStatementDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReconcileDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndingBalance</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountStatementDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountStatementNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Balance</Name>
			<Label>@SYS10145</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndingBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Beginbalance</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>CodaFilePath</Name>
			<Label>@SYS79587</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Processed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DetailsTransferred</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS5711</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CodaTransType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS25587</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountStatementDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountStatementNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndingBalance</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReconcileDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Statement</Name>
			<Label>@SYS327312</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CodaTransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountStatementDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountStatementNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Status</Name>
			<Label>@SYS25587</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ReconcileDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Lines</Name>
			<Label>@SYS15451</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsMovementLinesUpdateDelayed</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>CompanyBankAccountId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>AccountStatementDate</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS26785</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountStatementNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>System Metadata</AssetClassification>
			<ExtendedDataType>BankAccountStatementNum</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>Beginbalance</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS22797</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>CodaTransType</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<EnumType>BankCodaTransType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CurrencyCode</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>CurrencyCode</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DetailsTransferred</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<Label>@SYS85308</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>EndingBalance</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<Label>@SYS50986</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>Processed</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>Date1980</ExtendedDataType>
			<Label>@SYS22065</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldDate">
			<Name>ReconcileDate</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<Label>@SYS22247</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>TotalAmount</Name>
			<AssetClassification>Customer Content </AssetClassification>
			<ExtendedDataType>AmountCur</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsMovementLinesUpdateDelayed</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>AccountDateIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>AccountId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountStatementDate</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountStatementNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>BankAccountTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>BankAccountTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountId</Name>
					<SourceEDT>CompanyBankAccountId</SourceEDT>
					<Field>AccountId</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
		<AxTableRelation>
			<Name>BankCodaAccountTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EntityRelationshipRole>@SYS123550</EntityRelationshipRole>
			<RelatedTable>BankCodaAccountTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>BankCodaAccountIdDetail</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BankCodaAccountStatementDetail</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountId</Name>
					<SourceEDT>CompanyBankAccountId</SourceEDT>
					<Field>AccountId</Field>
					<RelatedField>AccountID</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>Currency</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelatedTableRole>Currency</RelatedTableRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BankCodaAccountStatement</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CurrencyCode</Name>
					<SourceEDT>CurrencyCode</SourceEDT>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>CurrencyCodeIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>