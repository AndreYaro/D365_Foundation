<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailBuyersPushTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailBuyersPushTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isCrossdock</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the current record contains a <c>PurchId</c> value.
    /// </summary>
    /// <returns>
    /// true if the current record contains a <c>PurchId</c> value; otherwise, false.
    /// </returns>
    public boolean isCrossdock()
    {
        if (this.PurchId)
        {   // If we have a PurchId then this is a cross dock.
            return true;
        }
        else
        {
            return false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the field value.
    /// </summary>
    /// <param name="_fieldId">
    /// Field id to validate.
    /// </param>
    public void modifiedField(FieldId _fieldId)
    {
        super(_fieldId);

        // hierarchy filter and location filter should be mutually exclusive
        switch (_fieldId)
        {
            case fieldNum(RetailBuyersPushTable, ReplenishmentHierarchyNode):
                if (this.ReplenishmentHierarchyNode > 0)
                {
                    this.LocationRecId = 0;
                    RetailTracer::Info('Replenishment', funcName(), strFmt('Location filter has been cleared as new value for hierarchy filter was provided. Buyers push id: %1', this.BuyersPushId));
                }
                break;
            case fieldNum(RetailBuyersPushTable, LocationRecId):
                if (this.LocationRecId > 0)
                {
                    this.ReplenishmentHierarchyNode = 0;
                    RetailTracer::Info('Replenishment', funcName(), strFmt('Hierarchy filter has been cleared as new value for location filter was provided. Buyers push id: %1', this.BuyersPushId));
                }
                break;
            default:
                // nothing specific is required for other fields
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the total quantity for that particular <c>RetailBuyersPushTable</c> record.
    /// </summary>
    /// <returns>
    /// The total quantity for that particular <c>RetailBuyersPushTable</c> record.
    /// </returns>
    public Qty totalQty()
    {
        RetailBuyersPushLineQty    tfshBuyersPushLineQty;

        select sum(Qty) from tfshBuyersPushLineQty
            where tfshBuyersPushLineQty.BuyersPushId    == this.BuyersPushId;

        return tfshBuyersPushLineQty.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the value for the <c>InventDimId</c> field for all the <c>RetailBuyersPushTable</c> records
    /// for a particular record ID.
    /// </summary>
    /// <remarks>
    /// This method also updates the values for <c>InventLocationId</c>, <c>InventSiteId</c>, and
    /// <c>InventDimId</c> fields.
    /// </remarks>
    public void updateInventDimId()
    {
        RetailBuyersPushLine       tfshBuyersPushLine;
        InventDim               tInventDim;

        ttsbegin;

        while select forupdate * from tfshBuyersPushLine
            where tfshBuyersPushLine.BuyersPushId == this.BuyersPushId
        {
            tInventDim.data(InventDim::find(tfshBuyersPushLine.InventDimId ));
            if ( tInventDim.InventLocationId != this.InventLocationId )
            {
                tInventDim.InventLocationId = this.InventLocationId;
                tInventDim.InventSiteId = this.InventSiteId;
                tInventDim = InventDim::findOrCreate( tInventDim );
                tfshBuyersPushLine.InventDimId = tInventDim.InventDimId;
                tfshBuyersPushLine.update();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the fieldId passed in the parameter is valid. Validates the field <c>InventLocationId</c> particularly.
    /// </summary>
    /// <param name="_fieldIdToCheck">
    /// The field ID of the field to validate.
    /// </param>
    /// <returns>
    /// true if the field is valid;otherwise false.
    /// </returns>
    /// <remarks>
    /// Calls the method <c>validateInventLocation</c> method to validate field <c>InventLocationId</c>.
    /// </remarks>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (fieldExt2Id(_fieldIdToCheck) == fieldNum(RetailBuyersPushTable, InventLocationId))
        {
            ret = this.validateInventLocation();
            this.InventSiteId = InventLocation::find(this.InventLocationId).InventSiteId;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInventLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the value for the <c>InventLocationId</c> field is changed.
    /// </summary>
    /// <returns>
    /// true if the value of the field has to be changed; otherwise, false.
    /// </returns>
    boolean validateInventLocation()
    {
        RetailBuyersPushLineQty    tBuyersPushLineQty;

        // Check to see if any Quantity, otherwise no need to prompt user or reset qty to zero.
        select firstOnly Qty from tBuyersPushLineQty
                where (tBuyersPushLineQty.BuyersPushId     == this.BuyersPushId) && (tBuyersPushLineQty.Qty != 0);

        if (tBuyersPushLineQty.Qty != 0)
        {   // We have at least one record that needs to be updated...
            if (Box::yesNo(strFmtLB("@RET828"),DialogButton::Yes,"@RET830","@RET829") == DialogButton::Yes)
            {
                ttsbegin;

                while select  forupdate * from tBuyersPushLineQty
                    where tBuyersPushLineQty.BuyersPushId     == this.BuyersPushId
                {
                    tBuyersPushLineQty.Qty = 0.0;
                    tBuyersPushLineQty.update();
                }

                ttscommit;

                return true;
            }
            else
                return false;
        }
        else
            return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the <c>RetailBuyersPushTable</c> table.
    /// </summary>
    /// <param name="_sBuyersPushId">
    /// The <c>BuyersPushId</c> of the <c>RetailBuyersPushTable</c> record.
    /// </param>
    /// <param name="_update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailBuyersPushTable</c> table; otherwise, an empty record.
    /// </returns>
    public static RetailBuyersPushTable find(RetailBuyersPushId  _sBuyersPushId,
                                   boolean          _update = false)
    {
        RetailBuyersPushTable tBuyersPushTable;

        tBuyersPushTable.selectForUpdate(_update);

        if (_sBuyersPushId)
        {
            select firstonly tBuyersPushTable
                where tBuyersPushTable.BuyersPushId == _sBuyersPushId;
        }

        return tBuyersPushTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPurchId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the sepcified record in the table <c>RetailBuyersPushTable</c>.
    /// </summary>
    /// <param name="_purchId">
    /// The Purchase ID of the Buyer's push record.
    /// </param>
    /// <param name="_update">
    /// A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    /// A record in the <c>RetailBuyersPushTable</c> table; otherwise, an empty record.
    /// </returns>
    static RetailBuyersPushTable findPurchId(PurchId  _purchId,
                                          boolean  _update = false)
    {
        RetailBuyersPushTable buyersPushTable;

        buyersPushTable.selectForUpdate(_update);

        if (_purchId)
        {
            select firstonly buyersPushTable
                where buyersPushTable.PurchId == _purchId;
        }
        return buyersPushTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfLines</Name>
				<Source><![CDATA[
    public display int numberOfLines()
    {
        RetailBuyersPushLine buyerPushLine;

        select count(RecId) from buyerPushLine where buyerPushLine.BuyersPushId == this.BuyersPushId;

        return int642int(buyerPushLine.RecId); // Returns count
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@RET4160440</DeveloperDocumentation>
	<FormRef>RetailBuyersPush</FormRef>
	<Label>@RET1236</Label>
	<TableGroup>WorksheetHeader</TableGroup>
	<TitleField1>BuyersPushId</TitleField1>
	<TitleField2>Description</TitleField2>
	<CacheLookup>NotInTTS</CacheLookup>
	<ClusteredIndex>BuyersPushIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<Modules>InventoryAndAdvancedWarehouse</Modules>
	<PrimaryIndex>BuyersPushIdx</PrimaryIndex>
	<ReplacementKey>BuyersPushIdx</ReplacementKey>
	<DeleteActions>
		<AxTableDeleteAction>
			<Name>RetailBuyersPushLine</Name>
			<DeleteAction>Cascade</DeleteAction>
			<Relation></Relation>
			<Table>RetailBuyersPushLine</Table>
		</AxTableDeleteAction>
	</DeleteActions>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BuyersPushId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferOrderCreated</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BuyersPushId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Label>@SYS86179</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>DistributionSettings</Name>
			<Label>@RET4160567</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DistributionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LocationRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReplenishmentHierarchyNode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RespectAssortments</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS35583</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BuyersPushId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Inventory</Name>
			<Label>@SYS981</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Processing</Name>
			<Label>@SYS8577</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferOrderCreated</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>PurchaseOrder</Name>
			<Label>@SYS15812</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PurchId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>BuyersPushId</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailBuyersPushId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailDescriptionEx1</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DistributionType</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>RetailDistributionTypeEx1</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventLocationId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventLocationId</ExtendedDataType>
			<Label>@RET827</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>InventSiteId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>InventSiteId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>JournalCreated</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<Label>@RET1079</Label>
			<Visible>No</Visible>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>LocationRecId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PurchId</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>PurchId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ReplenishmentHierarchyNode</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RefRecId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>RespectAssortments</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>TransferOrderCreated</Name>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>RetailTransferOrderCreated</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>BuyersPushIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>BuyersPushId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>PurchIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>PurchId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventLocation</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventLocationId</Name>
					<SourceEDT>InventLocationId</SourceEDT>
					<Field>InventLocationId</Field>
					<RelatedField>InventLocationId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>InventLocationIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventSite</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>InventSiteId</Name>
					<SourceEDT>InventSiteId</SourceEDT>
					<Field>InventSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>SiteIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemId</Name>
					<SourceEDT>ItemId</SourceEDT>
					<Field>ItemId</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>ItemIdx</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>OMHierarchyRelationship</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>OMHierarchyRelationship</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ReplenishmentHierarchyNode</Name>
					<SourceEDT>RefRecId</SourceEDT>
					<Field>ReplenishmentHierarchyNode</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>PurchTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>PurchTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>PurchId</Name>
					<SourceEDT>PurchId</SourceEDT>
					<Field>PurchId</Field>
					<RelatedField>PurchId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>PurchIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>